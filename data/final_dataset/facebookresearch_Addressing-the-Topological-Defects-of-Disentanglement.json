{"home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ResNetExplorer.__init__": [[19, 22], ["torch.nn.Module.__init__", "torch.hub.load"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["def", "__init__", "(", "self", ",", "path_to_model", "=", "\"pytorch/vision:v0.6.0\"", ",", "model", "=", "\"resnet152\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained_model", "=", "torch", ".", "hub", ".", "load", "(", "path_to_model", ",", "model", ",", "pretrained", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ResNetExplorer.create_full_model": [[23, 51], ["dict", "list", "list.index", "collections.OrderedDict", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "list", "dict.keys", "models.ResNetExplorer.pretrained_model.named_children", "enumerate"], "methods", ["None"], ["", "def", "create_full_model", "(", "self", ",", "layer_to_explore", ",", "layer_to_explore_size", ",", "image_size", ")", ":", "\n", "\n", "        ", "all_layers", "=", "dict", "(", "list", "(", "self", ".", "pretrained_model", ".", "named_children", "(", ")", ")", ")", "\n", "all_keys", "=", "list", "(", "\n", "all_layers", ".", "keys", "(", ")", "\n", ")", "# TODO: I am not sure the order is preserved ?", "\n", "max_index", "=", "all_keys", ".", "index", "(", "layer_to_explore", ")", "\n", "\n", "#####\u00a0ENCODER", "\n", "# take all layers up to the one we want to explore for the encoder", "\n", "encoder_layers", "=", "[", "\n", "(", "all_keys", "[", "i", "]", ",", "all_layers", "[", "layer", "]", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "all_layers", ")", "\n", "if", "i", "<=", "max_index", "\n", "]", "\n", "layers", "=", "OrderedDict", "(", ")", "\n", "for", "layer", "in", "encoder_layers", ":", "\n", "            ", "name", "=", "layer", "[", "0", "]", "\n", "layers", "[", "name", "]", "=", "layer", "[", "1", "]", "\n", "\n", "# create a new model with it (saves time during feed-forward if we take other layers than the last one)", "\n", "", "self", ".", "fixed_encoder", "=", "nn", ".", "Sequential", "(", "layers", ")", "\n", "\n", "##### Linear layer to learn the mapping", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "layer_to_explore_size", ",", "layer_to_explore_size", ")", "\n", "\n", "##### DECODER", "\n", "self", ".", "decoder", "=", "nn", ".", "Linear", "(", "layer_to_explore_size", ",", "image_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ResNetExplorer.forward": [[52, 62], ["models.ResNetExplorer.fixed_encoder", "models.ResNetExplorer.linear", "models.ResNetExplorer.decoder", "torch.sigmoid", "torch.sigmoid.view", "models.ResNetExplorer.view", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "z", "=", "self", ".", "fixed_encoder", "(", "x", ")", "\n", "# feed flattened z to linear", "\n", "z_prime", "=", "self", ".", "linear", "(", "z", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "x_dec", "=", "self", ".", "decoder", "(", "z_prime", ")", "\n", "# sigmoid to have something between 0 and 1", "\n", "x_dec", "=", "torch", ".", "sigmoid", "(", "x_dec", ")", "\n", "# map to image shape", "\n", "return", "x_dec", ".", "view", "(", "x", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearEncoder.__init__": [[65, 68], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "n_pixels", "**", "2", "*", "n_channels", ",", "z_dim", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearEncoder.forward": [[69, 73], ["x.flatten", "models.LinearEncoder.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "flatten", "(", "start_dim", "=", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearDecoder.__init__": [[76, 81], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_pixels", "=", "n_pixels", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "z_dim", ",", "n_pixels", "**", "2", "*", "n_channels", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearDecoder.forward": [[82, 86], ["models.LinearDecoder.fc1", "out.reshape.reshape.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "fc1", "(", "x", ")", "\n", "out", "=", "out", ".", "reshape", "(", "-", "1", ",", "self", ".", "n_channels", ",", "self", ".", "n_pixels", ",", "self", ".", "n_pixels", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ComplexLinearEncoder.__init__": [[89, 93], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1r", "=", "torch", ".", "nn", ".", "Linear", "(", "n_pixels", "**", "2", "*", "n_channels", ",", "z_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc1i", "=", "torch", ".", "nn", ".", "Linear", "(", "n_pixels", "**", "2", "*", "n_channels", ",", "z_dim", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ComplexLinearEncoder.forward": [[94, 99], ["x.flatten", "models.ComplexLinearEncoder.fc1r", "models.ComplexLinearEncoder.fc1i"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "flatten", "(", "start_dim", "=", "1", ")", "\n", "outr", "=", "self", ".", "fc1r", "(", "out", ")", "\n", "outi", "=", "self", ".", "fc1i", "(", "out", ")", "\n", "return", "(", "outr", ",", "outi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ComplexLinearDecoder.__init__": [[102, 108], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_pixels", "=", "n_pixels", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "fc1r", "=", "nn", ".", "Linear", "(", "z_dim", ",", "n_pixels", "**", "2", "*", "n_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc1i", "=", "nn", ".", "Linear", "(", "z_dim", ",", "n_pixels", "**", "2", "*", "n_channels", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.ComplexLinearDecoder.forward": [[109, 115], ["models.ComplexLinearDecoder.fc1r", "out_r.reshape.reshape.reshape", "models.ComplexLinearDecoder.fc1i"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "r1", "=", "self", ".", "fc1r", "(", "x", "[", "0", "]", ")", "\n", "r2", "=", "-", "self", ".", "fc1i", "(", "x", "[", "1", "]", ")", "\n", "out_r", "=", "r1", "+", "r2", "\n", "out_r", "=", "out_r", ".", "reshape", "(", "-", "1", ",", "self", ".", "n_channels", ",", "self", ".", "n_pixels", ",", "self", ".", "n_pixels", ")", "\n", "return", "out_r", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIEncoder.__init__": [[118, 130], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "models.Lambda", "torch.nn.Linear", "x.view", "x.size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_channels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "z_dim", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIEncoder.forward": [[132, 135], ["models.CCIEncoder.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIDecoder.__init__": [[138, 154], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.ReLU", "models.Lambda", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "models.Lambda", "torch.nn.Linear", "models.Lambda", "x.view", "x.view", "x.view", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "-", "1", ",", "256", ",", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "64", ",", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "64", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "n_pixels", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "n_pixels", ",", "n_channels", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "32", ",", "n_pixels", "*", "n_pixels", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "n_pixels", ",", "n_pixels", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIDecoder.forward": [[156, 159], ["models.CCIDecoder.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "decoder", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.NonLinearEncoder.__init__": [[162, 167], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_chanels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "n_pixels", "**", "2", ",", "n_pixels", "//", "2", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm1d", "(", "n_pixels", "//", "2", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "n_pixels", "//", "2", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.NonLinearEncoder.forward": [[168, 176], ["x.flatten", "models.NonLinearEncoder.fc1", "models.NonLinearEncoder.batch_norm", "torch.relu", "models.NonLinearEncoder.fc2", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "flatten", "(", "start_dim", "=", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "out", "=", "self", ".", "batch_norm", "(", "out", ")", "\n", "out", "=", "torch", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "out", "=", "torch", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.NonLinearDecoder.__init__": [[179, 186], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "n_pixels", "=", "n_pixels", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "z_dim", ",", "(", "n_pixels", "**", "2", ")", "//", "2", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm1d", "(", "(", "n_pixels", "**", "2", ")", "//", "2", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "(", "n_pixels", "**", "2", ")", "//", "2", ",", "n_pixels", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.NonLinearDecoder.forward": [[187, 196], ["models.NonLinearDecoder.fc1", "models.NonLinearDecoder.batch_norm", "torch.relu", "models.NonLinearDecoder.fc2", "torch.relu", "out.reshape.reshape.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "fc1", "(", "x", ")", "\n", "out", "=", "self", ".", "batch_norm", "(", "out", ")", "\n", "out", "=", "torch", ".", "relu", "(", "out", ")", "\n", "# reshape", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "out", "=", "torch", ".", "relu", "(", "out", ")", "\n", "out", "=", "out", ".", "reshape", "(", "-", "1", ",", "self", ".", "n_channels", ",", "self", ".", "n_pixels", ",", "self", ".", "n_pixels", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.VAEBase.reparameterize": [[199, 208], ["torch.exp", "torch.randn_like", "torch.randn_like.mul"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "reparameterize", "(", "mu", ",", "log_var", ")", ":", "\n", "        ", "\"\"\"Returns z_sample from mu, var\"\"\"", "\n", "std", "=", "torch", ".", "exp", "(", "log_var", "/", "2", ")", "\n", "# z_sample = torch.normal(mu, std)", "\n", "# eps = Variable(torch.randn_like(std))", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "z_sample", "=", "mu", "+", "eps", ".", "mul", "(", "std", ")", "\n", "return", "z_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.VAEBase.latent_sample": [[209, 215], ["torch.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "latent_sample", "(", "mu", ",", "log_var", ",", "num_std", ")", ":", "\n", "        ", "\"\"\"Generates sample based on mu, var that's num_std away from mean\"\"\"", "\n", "std", "=", "torch", ".", "exp", "(", "log_var", "/", "2", ")", "\n", "z_sample", "=", "(", "num_std", "*", "std", ")", ".", "add", "(", "mu", ")", "\n", "return", "z_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearCCIVAE.__init__": [[218, 223], ["super().__init__", "models.LinearEncoder", "models.LinearDecoder"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "self", ".", "encoder", "=", "LinearEncoder", "(", "n_pixels", ",", "n_channels", ",", "2", "*", "z_dim", ")", "\n", "self", ".", "decoder", "=", "LinearDecoder", "(", "n_pixels", ",", "n_channels", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.LinearCCIVAE.forward": [[224, 231], ["models.LinearCCIVAE.encoder", "LinearCCIVAE.reparameterize", "models.LinearCCIVAE.decoder"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.VAEBase.reparameterize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z_dist", "=", "self", ".", "encoder", "(", "x", ")", "\n", "mu", ",", "log_var", "=", "z_dist", "[", ":", ",", ":", "self", ".", "z_dim", "]", ",", "z_dist", "[", ":", ",", "self", ".", "z_dim", ":", "]", "\n", "# reparameterize", "\n", "z_sample", "=", "LinearCCIVAE", ".", "reparameterize", "(", "mu", ",", "log_var", ")", "\n", "out", "=", "self", ".", "decoder", "(", "z_sample", ")", "\n", "return", "out", ",", "mu", ",", "log_var", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.Lambda.__init__": [[234, 237], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "func", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "func", "=", "func", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.Lambda.forward": [[238, 240], ["models.Lambda.func"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "func", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIVAE.__init__": [[255, 290], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "models.Lambda", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "models.Lambda", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "models.Lambda", "torch.nn.ReLU", "torch.nn.Linear", "models.Lambda", "torch.nn.Sigmoid", "x.view", "x.view", "x.view", "x.view", "x.size", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["def", "__init__", "(", "self", ",", "n_pixels", ",", "n_channels", ",", "z_dim", ",", "distribution", "=", "\"gaussian\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "distribution", "=", "distribution", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_channels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "n_pixels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_pixels", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "2", "*", "z_dim", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "-", "1", ",", "256", ",", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "64", ",", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "64", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "n_pixels", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "n_pixels", ",", "n_channels", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "32", ",", "n_pixels", "*", "n_pixels", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "n_pixels", ",", "n_pixels", ")", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.CCIVAE.forward": [[292, 300], ["models.CCIVAE.encoder", "CCIVAE.reparameterize", "models.CCIVAE.decoder"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.VAEBase.reparameterize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z_dist", "=", "self", ".", "encoder", "(", "x", ")", "\n", "mu", ",", "log_var", "=", "z_dist", "[", ":", ",", ":", "self", ".", "z_dim", "]", ",", "z_dist", "[", ":", ",", "self", ".", "z_dim", ":", "]", "\n", "# tanh log_var didn't seem to help", "\n", "# log_var = torch.tanh(log_var)", "\n", "z_sample", "=", "CCIVAE", ".", "reparameterize", "(", "mu", ",", "log_var", ")", "\n", "out", "=", "self", ".", "decoder", "(", "z_sample", ")", "\n", "return", "out", ",", "mu", ",", "log_var", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.__init__": [[37, 95], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.set_seed", "enumerate", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.get_transformation", "len", "getattr", "getattr", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_transformation"], ["def", "__init__", "(", "\n", "self", ",", "\n", "data", ",", "\n", "z_dim", "=", "405", ",", "\n", "seed", "=", "0", ",", "\n", "encoder_type", "=", "\"ComplexLinear\"", ",", "\n", "decoder_type", "=", "\"ComplexLinear\"", ",", "\n", "transformation_type", "=", "None", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "temperature", "=", "1.0", ",", "\n", "output_directory", "=", "\"output\"", ",", "\n", "save_name", "=", "\"\"", ",", "\n", "use_softmax", "=", "1", ",", "\n", "n_rotations", "=", "0", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1", ",", ")", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "z_dim", "=", "z_dim", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "encoder", "=", "getattr", "(", "models", ",", "encoder_type", "+", "\"Encoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "decoder", "=", "getattr", "(", "models", ",", "decoder_type", "+", "\"Decoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "cardinals", "=", "[", "\n", "n_rotations", "+", "1", ",", "\n", "n_x_translations", "+", "1", ",", "\n", "n_y_translations", "+", "1", ",", "\n", "len", "(", "scaling_factors", ")", ",", "\n", "]", "\n", "self", ".", "cardinals", "=", "cardinals", "\n", "# SO FAR, THIS MODEL ONLY WORKS FOR 1 TRANSFO", "\n", "#\u00a0We grab which one with the following line  ", "\n", "assert", "(", "np", ".", "array", "(", "cardinals", ")", ">", "1", ")", ".", "sum", "(", ")", "==", "1", "\n", "for", "i", ",", "cardinal", "in", "enumerate", "(", "cardinals", ")", ":", "\n", "            ", "if", "cardinal", ">", "1", ":", "\n", "                ", "self", ".", "K", "=", "cardinal", "\n", "self", ".", "transfo_index", "=", "i", "\n", "\n", "# function used for transformation", "\n", "", "", "self", ".", "use_softmax", "=", "use_softmax", "\n", "self", ".", "transform", "=", "self", ".", "get_transformation", "(", "transformation_type", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "\n", "self", ".", "output_dir", "=", "output_directory", "\n", "self", ".", "save_name", "=", "save_name", "\n", "self", ".", "best_epoch", "=", "0", "\n", "self", ".", "best_mse", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.set_seed": [[96, 103], ["torch.manual_seed", "numpy.random.seed", "random.seed", "torch.autograd.set_detect_anomaly"], "methods", ["None"], ["", "def", "set_seed", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets seed for random number generation\"\"\"", "\n", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "# Generate Dataset", "\n", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.get_transformation": [[104, 110], ["getattr", "getattr."], "methods", ["None"], ["", "def", "get_transformation", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"Returns function to performance transformation based name\"\"\"", "\n", "if", "name", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "transformation", "=", "getattr", "(", "latent_operators", ",", "name", ")", "\n", "return", "transformation", "(", "self", ".", "cardinals", ",", "self", ".", "z_dim", ",", "self", ".", "device", ",", "unique_transfo", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.train": [[111, 163], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.train", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.train", "torch.optim.Adam", "torch.FloatTensor", "torch.FloatTensor", "len", "range", "list", "list", "enumerate", "print", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss().detach().item", "print", "torch.FloatTensor.detach().numpy", "torch.FloatTensor.detach().numpy", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.parameters", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.parameters", "x1.to.to.to", "x2.to.to.to", "torch.optim.Adam.zero_grad", "loss_func", "loss_func.backward", "torch.optim.Adam.step", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.update_state", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.save_best_checkpoint", "loss_func.item", "x1.to.to.size", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss().detach", "torch.FloatTensor.detach", "torch.FloatTensor.detach", "torch.optim.Adam.state_dict", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.update_state", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.save_best_checkpoint", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss"], ["", "def", "train", "(", "self", ",", "loss_func", ",", "learning_rate", ",", "n_epochs", ",", "log_frequency", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "\n", "params", "=", "list", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "decoder", ".", "parameters", "(", ")", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "learning_rate", ")", "\n", "train_losses", "=", "torch", ".", "FloatTensor", "(", "n_epochs", ")", "\n", "valid_losses", "=", "torch", ".", "FloatTensor", "(", "n_epochs", ")", "\n", "best_mse", "=", "np", ".", "inf", "\n", "N_pairs", "=", "len", "(", "self", ".", "data", ".", "train_loader", ".", "dataset", ")", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "            ", "epoch_loss", "=", "0", "\n", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "self", ".", "data", ".", "train_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "*", "x1", ".", "size", "(", "0", ")", "\n", "", "epoch_loss", "=", "epoch_loss", "/", "N_pairs", "\n", "print", "(", "f\"Epoch {epoch} Train loss: {epoch_loss:0.3e}\"", ")", "\n", "\n", "valid_mse", "=", "(", "\n", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "valid_loader", ")", "\n", ".", "detach", "(", ")", "\n", ".", "item", "(", ")", "\n", ")", "\n", "\n", "# train_mse = (", "\n", "#     self.compute_mean_loss(loss_func, self.data.train_loader)", "\n", "#     .detach()", "\n", "#     .item()", "\n", "# )", "\n", "# train_losses[epoch] = train_mse", "\n", "train_losses", "[", "epoch", "]", "=", "epoch_loss", "\n", "\n", "if", "valid_mse", "<", "best_mse", ":", "\n", "                ", "self", ".", "update_state", "(", "mse", "=", "valid_mse", ",", "epoch", "=", "epoch", ")", "\n", "best_mse", "=", "valid_mse", "\n", "file_name", "=", "\"checkpoint_{}.pth.tar\"", ".", "format", "(", "self", ".", "save_name", ")", "\n", "self", ".", "save_best_checkpoint", "(", "\n", "out_dir", "=", "self", ".", "output_dir", ",", "\n", "file_name", "=", "file_name", ",", "\n", "optimizer_state_dict", "=", "optimizer", ".", "state_dict", "(", ")", ",", "\n", ")", "\n", "\n", "", "print", "(", "f\"Epoch {epoch} validation loss: {valid_mse:0.3e}\"", ")", "\n", "valid_losses", "[", "epoch", "]", "=", "valid_mse", "\n", "", "return", "train_losses", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "valid_losses", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.ifft": [[164, 175], ["cps.size", "len", "cps[].to", "cps[].to", "alternative.mean.mean.mean"], "methods", ["None"], ["", "def", "ifft", "(", "self", ",", "cps", ")", ":", "\n", "\n", "        ", "second_dim", "=", "cps", ".", "size", "(", "1", ")", "\n", "K", "=", "len", "(", "self", ".", "transform", ".", "translation_matrices", "[", "self", ".", "transfo_index", "]", "[", "0", "]", ")", "\n", "cps_r", "=", "cps", "[", "...", ",", "0", "]", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "cps_i", "=", "cps", "[", "...", ",", "1", "]", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "tr_r", "=", "self", ".", "transform", ".", "translation_matrices", "[", "self", ".", "transfo_index", "]", "[", "0", "]", "\n", "tr_i", "=", "self", ".", "transform", ".", "translation_matrices", "[", "self", ".", "transfo_index", "]", "[", "1", "]", "\n", "alternative", "=", "cps_r", "[", ":", ",", "None", ",", "...", "]", "*", "tr_r", "-", "cps_i", "[", ":", ",", "None", ",", "...", "]", "*", "tr_i", "\n", "alternative", "=", "alternative", ".", "mean", "(", "2", ")", "# mean over frequencies", "\n", "return", "alternative", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.reconstruct_x1": [[176, 186], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.eval", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.eval", "x1.to.to.to", "torch.no_grad", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder"], "methods", ["None"], ["", "def", "reconstruct_x1", "(", "self", ",", "x1", ")", ":", "\n", "        ", "\"\"\"Reconstructs x1 using model\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "x1_reconstruction_r", "=", "self", ".", "decoder", "(", "z1", ")", "\n", "", "return", "x1_reconstruction_r", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.reconstruct_x2": [[187, 203], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.eval", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.eval", "x1.to.to.to", "x2.to.to.to", "x1.to.to.size", "torch.no_grad", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_angles_probas", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.detach().argmax", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.transform", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.detach"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_angles_probas", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "reconstruct_x2", "(", "self", ",", "x1", ",", "x2", ",", "param", "=", "None", ")", ":", "\n", "        ", "\"\"\"Reconstructs x2 using model and latent transformation\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "batch_size", "=", "x1", ".", "size", "(", "0", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "z2", "=", "self", ".", "encoder", "(", "x2", ")", "\n", "angles_probas", "=", "self", ".", "compute_angles_probas", "(", "x1", ",", "x2", ",", "z1", ",", "z2", ")", "\n", "predicted_angle", "=", "angles_probas", ".", "detach", "(", ")", ".", "argmax", "(", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "z_transformed", "=", "self", ".", "transform", "(", "z1", ",", "predicted_angle", ")", "\n", "x2_reconstruction_r", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "", "return", "x2_reconstruction_r", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations": [[204, 225], ["plot.plot_transformations_complex", "min", "numpy.random.randint", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_transformations_complex"], ["", "def", "plot_multiple_transformations", "(", "self", ",", "param_name", "=", "'angle'", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots all rotated reconstructions for given samples\"\"\"", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "n_samples", "=", "min", "(", "len", "(", "self", ".", "data", ".", "X_orig_train", ")", ",", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", ")", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "n_samples", ",", "size", "=", "5", ")", "\n", "", "X", "=", "(", "\n", "self", ".", "data", ".", "X_orig_train", "[", "indices", "]", "\n", "if", "train_set", "\n", "else", "self", ".", "data", ".", "X_orig_test", "[", "indices", "]", "\n", ")", ".", "float", "(", ")", "\n", "title", "=", "(", "\n", "\"Translations\"", "if", "param_name", "==", "'angle'", "!=", "\"angle\"", "else", "\"Rotations\"", "\n", ")", "\n", "\n", "plot", ".", "plot_transformations_complex", "(", "\n", "X", ",", "\n", "self", ",", "\n", "title", ",", "\n", "save_name", "=", "save_name", ",", "\n", "param_name", "=", "param_name", ",", "\n", "supervised", "=", "False", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_x1_reconstructions": [[227, 242], ["plot.plot_x1_reconstructions"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions"], ["", "def", "plot_x1_reconstructions", "(", "\n", "self", ",", "indices", "=", "[", "10", ",", "2092", ",", "10299", ",", "13290", "]", ",", "train_set", "=", "False", ",", "save_name", "=", "None", "\n", ")", ":", "\n", "        ", "\"\"\"Plots x1 autoencoder reconstruction from z1.\n\n            Args:\n                pairs (datasets.Pairs): contains x1, x2, and params.\n                model (function): callable f(x1) = x1_reconstruction\n                indices (list of ints): indices for samples to plot\n                train_set (bool): if true title is plotted with train otherwise test.\n                save_name (str): indicates path where images should be saved. \n            \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "plot", ".", "plot_x1_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x1", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_x2_reconstructions": [[244, 259], ["plot.plot_x2_reconstructions"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions"], ["", "def", "plot_x2_reconstructions", "(", "\n", "self", ",", "indices", "=", "[", "10", ",", "2092", ",", "10299", ",", "13290", "]", ",", "train_set", "=", "False", ",", "save_name", "=", "None", "\n", ")", ":", "\n", "        ", "\"\"\"Plots x1, x2 and x2 autoencoder reconstruction from z1 rotated.\n\n        Args:\n            pairs (datasets.Pairs): contains x1, x2, and params.\n            model (function): callable f(x1) = x1_reconstruction\n            indices (list of ints): indices for samples to plot\n            train_set (bool): if true title is plotted with train otherwise test.\n            save_name (str): indicates path where images should be saved. \n        \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "plot", ".", "plot_x2_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x2", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_angles_probas": [[261, 266], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.computes_cross_power_spectrum", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.ifft"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.computes_cross_power_spectrum", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.ifft"], ["", "def", "compute_angles_probas", "(", "self", ",", "x1", ",", "x2", ",", "z1", ",", "z2", ")", ":", "\n", "        ", "cps", "=", "self", ".", "computes_cross_power_spectrum", "(", "z1", "[", "0", "]", ",", "z1", "[", "1", "]", ",", "z2", "[", "0", "]", ",", "z2", "[", "1", "]", ")", "\n", "invfs_alter", "=", "self", ".", "ifft", "(", "cps", ")", "\n", "angles_probas", "=", "invfs_alter", "\n", "return", "angles_probas", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.reconstruction_mse_transformed_z1_weak": [[267, 318], ["torch.nn.MSELoss", "x1.size", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder", "numpy.prod", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder", "torch.nn.MSELoss.", "x1_reconstruction_loss.mean.mean.mean", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_angles_probas", "x1.size", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.detach().argmax", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.transform", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder", "torch.nn.MSELoss.", "x2_reconstruction_loss.mean.mean.mean", "torch.arange().repeat().view", "torch.softmax", "x2[].repeat().view", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.transform", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder", "torch.nn.MSELoss.sum().view", "[].repeat().view", "[].repeat().view", "x2.size", "x2.size", "x2.size", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.detach", "torch.arange().repeat", "x2[].repeat", "torch.nn.MSELoss.sum", "[].repeat", "[].repeat", "torch.arange", "torch.nn.MSELoss."], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_angles_probas", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "reconstruction_mse_transformed_z1_weak", "(", "self", ",", "x1", ",", "x2", ",", "angles", ",", "use_argmax", "=", "False", ")", ":", "\n", "        ", "\"\"\"Computes reconstruction MSE of x1 from z1 + x2 from transformed(z1), not using ground-truth angles\"\"\"", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "reduction", "=", "\"none\"", ")", "\n", "batch_size", "=", "x1", ".", "size", "(", "0", ")", "\n", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "z2", "=", "self", ".", "encoder", "(", "x2", ")", "\n", "\n", "prod_size", "=", "np", ".", "prod", "(", "x1", ".", "size", "(", ")", ")", "\n", "x1_reconstruction_r", "=", "self", ".", "decoder", "(", "z1", ")", "\n", "x1_reconstruction_loss", "=", "criterion", "(", "x1_reconstruction_r", ",", "x1", ")", "\n", "x1_reconstruction_loss", "=", "x1_reconstruction_loss", ".", "mean", "(", ")", "\n", "\n", "# TODO this is not adapted to product of shift operators, it's looking only at the 1st cardinal", "\n", "# Transform according to all possible angles, weighted", "\n", "angles_probas", "=", "self", ".", "compute_angles_probas", "(", "x1", ",", "x2", ",", "z1", ",", "z2", ")", "\n", "\n", "if", "use_argmax", ":", "\n", "            ", "predicted_angle", "=", "angles_probas", ".", "detach", "(", ")", ".", "argmax", "(", "\n", "-", "1", ",", "keepdims", "=", "True", "\n", ")", "\n", "z_transformed", "=", "self", ".", "transform", "(", "z1", ",", "predicted_angle", ")", "\n", "x2_reconstruction_r", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "x2_reconstruction_loss", "=", "criterion", "(", "x2_reconstruction_r", ",", "x2", ")", "\n", "x2_reconstruction_loss", "=", "x2_reconstruction_loss", ".", "mean", "(", ")", "\n", "\n", "", "else", ":", "\n", "            ", "all_angles", "=", "torch", ".", "arange", "(", "self", ".", "K", ")", ".", "repeat", "(", "1", ",", "batch_size", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "temp", "=", "self", ".", "temperature", "\n", "mask", "=", "torch", ".", "softmax", "(", "angles_probas", "/", "temp", ",", "dim", "=", "-", "1", ")", "\n", "\n", "repeat_z1", "=", "(", "\n", "z1", "[", "0", "]", "[", ":", ",", "None", ",", ":", "]", ".", "repeat", "(", "1", ",", "self", ".", "K", ",", "1", ")", ".", "view", "(", "batch_size", "*", "self", ".", "K", ",", "-", "1", ")", ",", "\n", "z1", "[", "1", "]", "[", ":", ",", "None", ",", ":", "]", ".", "repeat", "(", "1", ",", "self", ".", "K", ",", "1", ")", ".", "view", "(", "batch_size", "*", "self", ".", "K", ",", "-", "1", ")", ",", "\n", ")", "\n", "\n", "x2_repeat", "=", "(", "\n", "x2", "[", ":", ",", "None", ",", "...", "]", "\n", ".", "repeat", "(", "1", ",", "self", ".", "K", ",", "1", ",", "1", ",", "1", ")", "\n", ".", "view", "(", "batch_size", "*", "self", ".", "K", ",", "x2", ".", "size", "(", "1", ")", ",", "x2", ".", "size", "(", "2", ")", ",", "x2", ".", "size", "(", "3", ")", ")", "\n", ")", "\n", "z_transformed", "=", "self", ".", "transform", "(", "repeat_z1", ",", "all_angles", ")", "\n", "x2_reconstruction_r", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "x2_reconstruction_transformed_loss", "=", "(", "\n", "criterion", "(", "x2_reconstruction_r", ",", "x2_repeat", ")", "\n", ".", "sum", "(", "(", "1", ",", "2", ",", "3", ")", ")", "# sums over image dim", "\n", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", ")", "\n", "x2_reconstruction_loss", "=", "(", "mask", "*", "x2_reconstruction_transformed_loss", ")", ".", "sum", "(", ")", "/", "prod_size", "\n", "\n", "", "loss", "=", "x1_reconstruction_loss", "+", "x2_reconstruction_loss", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.computes_cross_power_spectrum": [[319, 336], ["z_batch_r1.size", "torch.cat"], "methods", ["None"], ["", "def", "computes_cross_power_spectrum", "(", "\n", "self", ",", "z_batch_r1", ",", "z_batch_i1", ",", "z_batch_r2", ",", "z_batch_i2", "\n", ")", ":", "\n", "        ", "\"\"\"Computes Cross Power spectrum (no FFT) \"\"\"", "\n", "batch_size", "=", "z_batch_r1", ".", "size", "(", "0", ")", "\n", "z1z2_batch_r", "=", "(", "\n", "z_batch_r1", "*", "z_batch_r2", "+", "z_batch_i1", "*", "z_batch_i2", "\n", ")", "# recall we use the conjugate of z_batch_2, hence the + here", "\n", "z1z2_batch_i", "=", "(", "\n", "-", "z_batch_r1", "*", "z_batch_i2", "+", "z_batch_i1", "*", "z_batch_r2", "\n", ")", "# recall we use the conjugate of z_batch_2, hence the - in front here", "\n", "\n", "norm_z1z2_batch", "=", "(", "(", "z1z2_batch_r", "**", "2", "+", "z1z2_batch_i", "**", "2", ")", ")", "**", "0.5", "\n", "cps_r", "=", "z1z2_batch_r", "/", "norm_z1z2_batch", "\n", "cps_i", "=", "z1z2_batch_i", "/", "norm_z1z2_batch", "\n", "cps", "=", "torch", ".", "cat", "(", "[", "cps_r", "[", "...", ",", "None", "]", ",", "cps_i", "[", "...", ",", "None", "]", "]", ",", "-", "1", ")", "\n", "return", "cps", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_test_loss": [[337, 357], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.eval", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.eval", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.train", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.train", "torch.no_grad", "enumerate", "torch.stack().sum", "float", "x1.to.to.to", "x2.to.to.to", "x1.to.to.size", "losses.append", "loss_func", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "compute_test_loss", "(", "self", ",", "loss_func", ",", "data_loader", ")", ":", "\n", "        ", "\"\"\"Computes RMSE based on given loss function.\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "N", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "bs", "=", "x1", ".", "size", "(", "0", ")", "\n", "loss_batch", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ",", "True", ")", "*", "bs", "\n", "N", "+=", "bs", "\n", "losses", ".", "append", "(", "loss_batch", ")", "\n", "\n", "", "", "test_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "sum", "(", ")", "/", "float", "(", "N", ")", "\n", "\n", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "return", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss": [[358, 373], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.eval", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.eval", "torch.stack().mean", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.train", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.train", "torch.no_grad", "enumerate", "x1.to.to.to", "x2.to.to.to", "loss_func", "losses.append", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "compute_mean_loss", "(", "self", ",", "loss_func", ",", "data_loader", ")", ":", "\n", "        ", "\"\"\"Computes RMSE based on given loss function.\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "loss_batch", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ",", "True", ")", "\n", "losses", ".", "append", "(", "loss_batch", ")", "\n", "", "", "mean_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.run": [[374, 390], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.train", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss", "print", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_mean_loss", "print", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_test_loss", "print"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_test_loss"], ["", "def", "run", "(", "\n", "self", ",", "learning_rate", "=", "0.0005", ",", "n_epochs", "=", "10", ",", "log_frequency", "=", "50", "\n", ")", ":", "\n", "        ", "\"\"\"Runs experiment for autoencoder reconstruction.\"\"\"", "\n", "loss_func", "=", "self", ".", "reconstruction_mse_transformed_z1_weak", "\n", "train_loss", ",", "valid_loss", "=", "self", ".", "train", "(", "\n", "loss_func", ",", "learning_rate", ",", "n_epochs", ",", "log_frequency", "\n", ")", "\n", "\n", "train_mse", "=", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "train_loader", ")", "\n", "print", "(", "f\"Train MSE: {train_mse}\"", ")", "\n", "valid_mse", "=", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "valid_loader", ")", "\n", "print", "(", "f\"Valid MSE: {valid_mse}\"", ")", "\n", "test_mse", "=", "self", ".", "compute_test_loss", "(", "loss_func", ",", "self", ".", "data", ".", "test_loader_batch_100", ")", "\n", "print", "(", "f\"Test MSE: {test_mse}\"", ")", "\n", "return", "train_loss", ",", "valid_loss", ",", "train_mse", ",", "valid_mse", ",", "test_mse", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.update_state": [[391, 394], ["None"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "mse", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "best_mse", "=", "mse", "\n", "self", ".", "best_epoch", "=", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.load_model": [[395, 402], ["torch.load", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.load_state_dict", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "def", "load_model", "(", "self", ",", "path_to_checkpoint", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "path_to_checkpoint", ")", "\n", "self", ".", "best_epoch", "=", "checkpoint", "[", "\"best_epoch\"", "]", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "checkpoint", "[", "\"encoder_state_dict\"", "]", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "checkpoint", "[", "\"decoder_state_dict\"", "]", ")", "\n", "self", ".", "best_mse", "=", "checkpoint", "[", "\"best_mse\"", "]", "\n", "return", "checkpoint", "[", "\"best_mse\"", "]", ",", "checkpoint", "[", "\"best_epoch\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.get_current_state": [[403, 409], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.encoder.state_dict", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.decoder.state_dict"], "methods", ["None"], ["", "def", "get_current_state", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"encoder_state_dict\"", ":", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "\n", "\"decoder_state_dict\"", ":", "self", ".", "decoder", ".", "state_dict", "(", ")", ",", "\n", "\"best_epoch\"", ":", "self", ".", "best_epoch", ",", "\n", "\"best_mse\"", ":", "self", ".", "best_mse", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.save_best_checkpoint": [[411, 421], ["weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.get_current_state", "os.path.join", "torch.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_current_state", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_best_checkpoint", "(", "self", ",", "out_dir", ",", "file_name", ",", "optimizer_state_dict", ")", ":", "\n", "        ", "\"\"\"\n        :param file_name: filename to save checkpoint in.\n        :param optimizer_state_dict: state of the optimizer.\n        :return: str to path where the model is saved.\n        \"\"\"", "\n", "state", "=", "self", ".", "get_current_state", "(", ")", "\n", "state", "[", "\"optimizer_state_dict\"", "]", "=", "optimizer_state_dict", "\n", "best_path", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "\"best_\"", "+", "file_name", ")", "\n", "torch", ".", "save", "(", "state", ",", "best_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.run_cci_vae_shapes": [[40, 72], ["print", "datasets.datasets.SimpleShapes", "run_experiments_real.train_cci_vae_variants", "ValueError"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae_variants"], ["def", "run_cci_vae_shapes", "(", "\n", "beta", "=", "1000.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "z_dim", "=", "30", ",", "\n", "batch_size", "=", "16", ",", "\n", "n_epochs", "=", "10", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "seed", "=", "0", ",", "\n", "folder", "=", "None", ",", "\n", "n_classes", "=", "300", ",", "\n", "architecture", "=", "None", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "distribution", "=", "\"gaussian\"", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Runs CCI VAE and variants on Simple Shapes. Note architecture kwarg is not used\"\"\"", "\n", "if", "folder", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Please provide an experiment folder\"", ")", "\n", "", "print", "(", "\"saving results to \"", ",", "folder", ")", "\n", "\n", "shapes", "=", "datasets", ".", "SimpleShapes", "(", "\n", "batch_size", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", "n_classes", "=", "n_classes", ",", "\n", "seed", "=", "seed", ",", "\n", "pairs", "=", "False", ",", "\n", ")", "\n", "train_cci_vae_variants", "(", "\n", "shapes", ",", "beta", ",", "c_max", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "folder", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.run_cci_vae_mnist": [[75, 110], ["print", "datasets.datasets.ProjectiveMNIST", "run_experiments_real.train_cci_vae_variants", "ValueError"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae_variants"], ["", "def", "run_cci_vae_mnist", "(", "\n", "beta", "=", "1000.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "z_dim", "=", "30", ",", "\n", "batch_size", "=", "16", ",", "\n", "n_epochs", "=", "10", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "seed", "=", "0", ",", "\n", "folder", "=", "None", ",", "\n", "n_classes", "=", "300", ",", "\n", "proportion", "=", "0.01", ",", "\n", "architecture", "=", "None", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "distribution", "=", "\"gaussian\"", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Runs CCI VAE and variants on MNIST. Note architecture kwarg is not used\"\"\"", "\n", "if", "folder", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Please provide an experiment folder\"", ")", "\n", "", "print", "(", "\"saving results to \"", ",", "folder", ")", "\n", "\n", "mnist", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "batch_size", ",", "\n", "seed", "=", "seed", ",", "\n", "train_set_proportion", "=", "proportion", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "valid_set_proportion", "=", "proportion", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", "pairs", "=", "False", ",", "\n", ")", "\n", "train_cci_vae_variants", "(", "\n", "mnist", ",", "beta", ",", "c_max", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "folder", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.run_cci_vae_single_digit_mnist": [[113, 148], ["print", "datasets.datasets.ProjectiveSingleDigitMNIST", "run_experiments_real.train_cci_vae_variants", "ValueError"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae_variants"], ["", "def", "run_cci_vae_single_digit_mnist", "(", "\n", "beta", "=", "1000.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "z_dim", "=", "30", ",", "\n", "batch_size", "=", "16", ",", "\n", "n_epochs", "=", "10", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "seed", "=", "0", ",", "\n", "folder", "=", "None", ",", "\n", "n_classes", "=", "300", ",", "\n", "proportion", "=", "0.01", ",", "\n", "architecture", "=", "None", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "distribution", "=", "\"gaussian\"", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Runs CCI VAE and variants on MNIST. Note architecture kwarg is not used\"\"\"", "\n", "if", "folder", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Please provide an experiment folder\"", ")", "\n", "", "print", "(", "\"saving results to \"", ",", "folder", ")", "\n", "\n", "mnist", "=", "datasets", ".", "ProjectiveSingleDigitMNIST", "(", "\n", "batch_size", ",", "\n", "seed", "=", "seed", ",", "\n", "train_set_proportion", "=", "proportion", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "valid_set_proportion", "=", "proportion", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", "pairs", "=", "False", ",", "\n", ")", "\n", "train_cci_vae_variants", "(", "\n", "mnist", ",", "beta", ",", "c_max", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "folder", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae_variants": [[151, 185], ["print", "os.path.join", "run_experiments_real.train_cci_vae", "print", "os.path.join", "run_experiments_real.train_cci_vae", "print", "os.path.join", "run_experiments_real.train_cci_vae"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae"], ["", "def", "train_cci_vae_variants", "(", "\n", "data", ",", "beta", ",", "c_max", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "folder", "\n", ")", ":", "\n", "    ", "\"\"\"Trains CCI, Beta, and standard VAE\"\"\"", "\n", "print", "(", "\"Training CCI VAE\"", ")", "\n", "cci_vae_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "\"cci_vae\"", ")", "\n", "train_cci_vae", "(", "\n", "data", ",", "\n", "beta", ",", "\n", "c_max", ",", "\n", "z_dim", ",", "\n", "n_epochs", ",", "\n", "learning_rate", ",", "\n", "distribution", ",", "\n", "seed", ",", "\n", "cci_vae_folder", ",", "\n", ")", "\n", "print", "(", "\"Training Beta VAE\"", ")", "\n", "beta_vae_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "\"beta_vae\"", ")", "\n", "train_cci_vae", "(", "\n", "data", ",", "\n", "beta", ",", "\n", "0.0", ",", "\n", "z_dim", ",", "\n", "n_epochs", ",", "\n", "learning_rate", ",", "\n", "distribution", ",", "\n", "seed", ",", "\n", "beta_vae_folder", ",", "\n", ")", "\n", "print", "(", "\"Training VAE\"", ")", "\n", "vae_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "\"vae\"", ")", "\n", "train_cci_vae", "(", "\n", "data", ",", "1.0", ",", "0.0", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "vae_folder", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.run_autoencoder_shapes": [[188, 222], ["print", "datasets.datasets.SimpleShapes", "ValueError", "run_experiments_real.train_autoencoder", "run_experiments_real.train_standard_autoencoder"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_autoencoder", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_standard_autoencoder"], ["", "def", "run_autoencoder_shapes", "(", "\n", "z_dim", "=", "1000", ",", "\n", "batch_size", "=", "16", ",", "\n", "n_epochs", "=", "30", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "seed", "=", "0", ",", "\n", "folder", "=", "None", ",", "\n", "architecture", "=", "\"Linear\"", ",", "\n", "n_classes", "=", "300", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "distribution", "=", "None", ",", "\n", "use_latent_op", "=", "True", ",", "\n", ")", ":", "\n", "    ", "if", "folder", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Please provide an experiment folder\"", ")", "\n", "", "print", "(", "\"saving results to \"", ",", "folder", ")", "\n", "\n", "shapes", "=", "datasets", ".", "SimpleShapes", "(", "\n", "batch_size", ",", "\n", "n_classes", "=", "n_classes", ",", "\n", "seed", "=", "seed", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", ")", "\n", "if", "use_latent_op", ":", "\n", "        ", "train_autoencoder", "(", "\n", "shapes", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", "\n", ")", "\n", "", "else", ":", "\n", "        ", "train_standard_autoencoder", "(", "\n", "shapes", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.run_autoencoder_mnist": [[225, 262], ["print", "datasets.datasets.ProjectiveMNIST", "ValueError", "print", "run_experiments_real.train_autoencoder", "run_experiments_real.train_standard_autoencoder"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_autoencoder", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_standard_autoencoder"], ["", "", "def", "run_autoencoder_mnist", "(", "\n", "z_dim", "=", "1000", ",", "\n", "batch_size", "=", "16", ",", "\n", "n_epochs", "=", "2", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "seed", "=", "0", ",", "\n", "folder", "=", "None", ",", "\n", "architecture", "=", "\"Linear\"", ",", "\n", "proportion", "=", "0.01", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "distribution", "=", "None", ",", "\n", "use_latent_op", "=", "True", ",", "\n", ")", ":", "\n", "    ", "if", "folder", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Please provide an experiment folder\"", ")", "\n", "", "print", "(", "\"saving results to \"", ",", "folder", ")", "\n", "\n", "mnist", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "batch_size", ",", "\n", "seed", "=", "seed", ",", "\n", "train_set_proportion", "=", "proportion", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "valid_set_proportion", "=", "proportion", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", ")", "\n", "if", "use_latent_op", ":", "\n", "        ", "print", "(", "\"using latent_op\"", ")", "\n", "train_autoencoder", "(", "\n", "mnist", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", "\n", ")", "\n", "", "else", ":", "\n", "        ", "train_standard_autoencoder", "(", "\n", "mnist", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_standard_autoencoder": [[265, 280], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run", "autoencoder.AutoEncoder.save_best_validation", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_best_validation"], ["", "", "def", "train_standard_autoencoder", "(", "\n", "data", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", "\n", ")", ":", "\n", "    ", "model", "=", "autoencoder", ".", "AutoEncoder", "(", "\n", "data", ",", "\n", "z_dim", "=", "z_dim", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "encoder_type", "=", "architecture", ",", "\n", "decoder_type", "=", "architecture", ",", "\n", "device", "=", "device", ",", "\n", "seed", "=", "seed", ",", "\n", ")", "\n", "model", ".", "run", "(", ")", "\n", "model", ".", "save_best_validation", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "\"standard-autoencoder\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_autoencoder": [[282, 313], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run", "autoencoder.AutoEncoder.save_best_validation", "autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run", "autoencoder.AutoEncoder.save_best_validation", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_best_validation", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_best_validation"], ["", "def", "train_autoencoder", "(", "data", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "seed", ",", "folder", ",", "architecture", ")", ":", "\n", "\n", "    ", "model_disentangled_rotation", "=", "autoencoder", ".", "AutoEncoder", "(", "\n", "data", ",", "\n", "z_dim", "=", "z_dim", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "latent_operator_name", "=", "\"DisentangledRotation\"", ",", "\n", "encoder_type", "=", "architecture", ",", "\n", "decoder_type", "=", "architecture", ",", "\n", "device", "=", "device", ",", "\n", "seed", "=", "seed", ",", "\n", ")", "\n", "model_disentangled_rotation", ".", "run", "(", ")", "\n", "model_disentangled_rotation", ".", "save_best_validation", "(", "\n", "os", ".", "path", ".", "join", "(", "folder", ",", "\"disentangled-operator\"", ")", "\n", ")", "\n", "\n", "model_shift_operator", "=", "autoencoder", ".", "AutoEncoder", "(", "\n", "data", ",", "\n", "z_dim", "=", "z_dim", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "latent_operator_name", "=", "\"ShiftOperator\"", ",", "\n", "encoder_type", "=", "architecture", ",", "\n", "decoder_type", "=", "architecture", ",", "\n", "device", "=", "device", ",", "\n", "seed", "=", "seed", ",", "\n", ")", "\n", "model_shift_operator", ".", "run", "(", ")", "\n", "model_shift_operator", ".", "save_best_validation", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "\"shift-operator\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.train_cci_vae": [[315, 330], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train", "cci_variational_autoencoder.CCIVariationalAutoEncoder.save_best_validation"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_best_validation"], ["", "def", "train_cci_vae", "(", "\n", "data", ",", "beta", ",", "c_max", ",", "z_dim", ",", "n_epochs", ",", "learning_rate", ",", "distribution", ",", "seed", ",", "folder", "\n", ")", ":", "\n", "    ", "cci_vae", "=", "cci_variational_autoencoder", ".", "CCIVariationalAutoEncoder", "(", "\n", "data", ",", "\n", "beta", "=", "beta", ",", "\n", "c_max", "=", "c_max", ",", "\n", "z_dim", "=", "z_dim", ",", "\n", "seed", "=", "seed", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "distribution", "=", "distribution", ",", "\n", ")", "\n", "cci_vae", ".", "train", "(", ")", "\n", "cci_vae", ".", "save_best_validation", "(", "folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.launch_single_job": [[332, 346], ["submitit.AutoExecutor", "submitit.AutoExecutor.update_parameters", "submitit.AutoExecutor.submit", "print", "print", "print", "executor.submit.result", "print"], "function", ["None"], ["", "def", "launch_single_job", "(", "experiment", ",", "base_dir", ",", "results_dir", ",", "**", "kwargs", ")", ":", "\n", "    ", "log_folder", "=", "base_dir", "+", "\"%j\"", "\n", "executor", "=", "submitit", ".", "AutoExecutor", "(", "folder", "=", "log_folder", ")", "\n", "# executor.update_parameters(timeout_min=600, gpus_per_node=1)", "\n", "executor", ".", "update_parameters", "(", "\n", "timeout_min", "=", "240", ",", "gpus_per_node", "=", "1", ",", "\n", ")", "\n", "job", "=", "executor", ".", "submit", "(", "experiment", ",", "folder", "=", "results_dir", ",", "**", "kwargs", ")", "\n", "print", "(", "\"job id\"", ",", "job", ".", "job_id", ")", "\n", "print", "(", "f\"logging to: {base_dir + job.job_id}\"", ")", "\n", "print", "(", "f\"results stored at: {results_dir}\"", ")", "\n", "\n", "result", "=", "job", ".", "result", "(", ")", "\n", "print", "(", "f\"job result: {result}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.launch_sweep": [[348, 368], ["submitit.AutoExecutor", "submitit.AutoExecutor.update_parameters", "print", "print", "print", "print", "submitit.AutoExecutor.batch", "enumerate", "executor.submit.result", "print", "os.path.join", "submitit.AutoExecutor.submit", "jobs.append", "len"], "function", ["None"], ["", "def", "launch_sweep", "(", "experiment", ",", "params", ",", "base_dir", ",", "experiment_dir", ")", ":", "\n", "    ", "log_folder", "=", "base_dir", "+", "\"%j\"", "\n", "executor", "=", "submitit", ".", "AutoExecutor", "(", "folder", "=", "log_folder", ")", "\n", "# executor.update_parameters(timeout_min=600, gpus_per_node=1)", "\n", "executor", ".", "update_parameters", "(", "\n", "timeout_min", "=", "600", ",", "gpus_per_node", "=", "1", ",", "\n", ")", "\n", "jobs", "=", "[", "]", "\n", "with", "executor", ".", "batch", "(", ")", ":", "\n", "        ", "for", "i", ",", "param", "in", "enumerate", "(", "params", ")", ":", "\n", "            ", "print", "(", "\"running with param \"", ",", "param", ")", "\n", "param", "[", "\"folder\"", "]", "=", "os", ".", "path", ".", "join", "(", "experiment_dir", ",", "f\"{i}\"", ")", "\n", "job", "=", "executor", ".", "submit", "(", "experiment", ",", "**", "param", ")", "\n", "jobs", ".", "append", "(", "job", ")", "\n", "", "", "print", "(", "f\"launched {len(params)} jobs\"", ")", "\n", "print", "(", "\"sweep id\"", ",", "jobs", "[", "0", "]", ".", "job_id", ")", "\n", "print", "(", "f\"logging to: {base_dir}{jobs[0].job_id}\"", ")", "\n", "\n", "results", "=", "[", "job", ".", "result", "(", ")", "for", "job", "in", "jobs", "]", "\n", "print", "(", "f\"job results: {results}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_params": [[370, 382], ["None"], "function", ["None"], ["", "def", "get_params", "(", "args", ")", ":", "\n", "    ", "params", "=", "BASE_PARAMS", "\n", "if", "args", ".", "data", "==", "\"mnist\"", ":", "\n", "        ", "params", "[", "\"batch_size\"", "]", "=", "[", "8", ",", "16", ",", "32", ",", "64", "]", "\n", "", "elif", "args", ".", "data", "==", "\"shapes\"", ":", "\n", "        ", "params", "[", "\"batch_size\"", "]", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", "\n", "\n", "", "if", "args", ".", "model", "==", "\"cci_vae\"", ":", "\n", "        ", "params", "[", "\"n_epochs\"", "]", "=", "[", "10", ",", "20", ",", "50", "]", "\n", "params", "[", "\"beta\"", "]", "=", "[", "4.0", ",", "10.0", ",", "100.0", ",", "1000.0", "]", "\n", "params", "[", "\"z_dim\"", "]", "=", "[", "10", ",", "30", "]", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_param_combinations": [[384, 389], ["zip", "dict", "params.items", "zip", "itertools.product"], "function", ["None"], ["", "def", "get_param_combinations", "(", "params", ")", ":", "\n", "    ", "\"\"\"Returns a list of dictionaries with all combinations\"\"\"", "\n", "keys", ",", "values", "=", "zip", "(", "*", "params", ".", "items", "(", ")", ")", "\n", "params_combinations", "=", "[", "dict", "(", "zip", "(", "keys", ",", "v", ")", ")", "for", "v", "in", "itertools", ".", "product", "(", "*", "values", ")", "]", "\n", "return", "params_combinations", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_directories": [[391, 408], ["os.path.join", "os.path.exists", "os.path.expanduser", "os.path.expanduser", "shutil.rmtree"], "function", ["None"], ["", "def", "get_directories", "(", "args", ",", "cluster", "=", "False", ")", ":", "\n", "    ", "user", "=", "os", ".", "environ", "[", "\"USER\"", "]", "\n", "if", "cluster", ":", "\n", "        ", "RESULTS_DIR", "=", "f\"/checkpoint/{user}/Equivariance/\"", "\n", "base_dir", "=", "f\"/checkpoint/{user}/jobs/{args.name}/\"", "\n", "", "else", ":", "\n", "        ", "RESULTS_DIR", "=", "os", ".", "path", ".", "expanduser", "(", "\n", "\"~/Dropbox/FAIR/Projects/Equivariance/experiments/results\"", "\n", ")", "\n", "base_dir", "=", "os", ".", "path", ".", "expanduser", "(", "\n", "\"~/Dropbox/FAIR/Projects/Equivariance/experiments/jobs/{args.name}/\"", "\n", ")", "\n", "", "experiment_dir", "=", "os", ".", "path", ".", "join", "(", "RESULTS_DIR", ",", "args", ".", "name", ")", "\n", "# clean experimental directory", "\n", "if", "os", ".", "path", ".", "exists", "(", "experiment_dir", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "experiment_dir", ")", "\n", "", "return", "base_dir", ",", "experiment_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_experiment_function": [[410, 444], ["print", "run_experiments_real.get_n_transformations", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "ValueError"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_n_transformations"], ["", "def", "get_experiment_function", "(", "args", ")", ":", "\n", "    ", "experiments", "=", "{", "\n", "\"run_autoencoder_shapes\"", ":", "run_autoencoder_shapes", ",", "\n", "\"run_autoencoder_mnist\"", ":", "run_autoencoder_mnist", ",", "\n", "\"run_cci_vae_shapes\"", ":", "run_cci_vae_shapes", ",", "\n", "\"run_cci_vae_mnist\"", ":", "run_cci_vae_mnist", ",", "\n", "\"run_cci_vae_single_digit_mnist\"", ":", "run_cci_vae_mnist", ",", "\n", "}", "\n", "experiment", "=", "experiments", "[", "f\"run_{args.model}_{args.data}\"", "]", "\n", "print", "(", "f\"run_{args.model}_{args.data}\"", ")", "\n", "\n", "if", "args", ".", "data", "==", "\"shapes\"", ":", "\n", "        ", "experiment", "=", "partial", "(", "experiment", ",", "n_classes", "=", "args", ".", "n_classes", ")", "\n", "", "elif", "args", ".", "data", "in", "{", "\"mnist\"", ",", "\"single_digit_mnist\"", "}", ":", "\n", "        ", "experiment", "=", "partial", "(", "experiment", ",", "proportion", "=", "args", ".", "mnist_proportion", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"dataset {args.data} not supported\"", ")", "\n", "\n", "# standard autoencoder", "\n", "", "if", "\"autoencoder\"", "==", "args", ".", "model", "and", "args", ".", "no_latent_op", ":", "\n", "        ", "experiment", "=", "partial", "(", "experiment", ",", "use_latent_op", "=", "False", ")", "\n", "\n", "", "n_rotations", ",", "n_x_translations", ",", "n_y_translations", "=", "get_n_transformations", "(", "args", ")", "\n", "\n", "experiment", "=", "partial", "(", "\n", "experiment", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "n_x_translations", "=", "n_x_translations", ",", "\n", "n_y_translations", "=", "n_y_translations", ",", "\n", "architecture", "=", "args", ".", "architecture", ",", "\n", "z_dim", "=", "args", ".", "z_dim", ",", "\n", "distribution", "=", "args", ".", "distribution", ",", "\n", ")", "\n", "return", "experiment", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.get_n_transformations": [[446, 457], ["None"], "function", ["None"], ["", "def", "get_n_transformations", "(", "args", ")", ":", "\n", "    ", "n_rotations", ",", "n_x_translations", ",", "n_y_translations", "=", "0", ",", "0", ",", "0", "\n", "n_transformations", "=", "9", "\n", "\n", "if", "args", ".", "transformation", "==", "\"rotation\"", ":", "\n", "        ", "n_rotations", "=", "n_transformations", "\n", "", "if", "args", ".", "transformation", "==", "\"shift_x\"", ":", "\n", "        ", "n_x_translations", "=", "n_transformations", "\n", "", "if", "args", ".", "transformation", "==", "\"shift_y\"", ":", "\n", "        ", "n_y_translations", "=", "n_transformations", "\n", "", "return", "n_rotations", ",", "n_x_translations", ",", "n_y_translations", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.run_experiments_real.init_argparse": [[459, 515], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["", "def", "init_argparse", "(", ")", "->", "argparse", ".", "ArgumentParser", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "usage", "=", "\"python run_experiments --cluster\"", ",", "\n", "description", "=", "\"runs experiments with specified parameters\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"name\"", ",", "help", "=", "\"name of experiment\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model\"", ",", "\n", "help", "=", "\"model for experiments. Example: autoencoder, cci_vae\"", ",", "\n", "default", "=", "\"autoencoder\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--architecture\"", ",", "help", "=", "\"name of autoencoder architecture\"", ",", "default", "=", "\"Linear\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--data\"", ",", "\n", "help", "=", "\"dataset used for training: mnist, single_digit_mnist\"", ",", "\n", "default", "=", "\"shapes\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--mnist_proportion\"", ",", "\n", "help", "=", "\"proportion of mnist to use\"", ",", "\n", "default", "=", "0.01", ",", "\n", "type", "=", "float", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--n_classes\"", ",", "\n", "help", "=", "\"number of classes to use for simple shapes\"", ",", "\n", "default", "=", "300", ",", "\n", "type", "=", "int", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--z_dim\"", ",", "help", "=", "\"dataset used for training\"", ",", "default", "=", "1000", ",", "type", "=", "int", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--transformation\"", ",", "\n", "choices", "=", "[", "\"rotation\"", ",", "\"shift_x\"", ",", "\"shift_y\"", "]", ",", "\n", "type", "=", "str", ".", "lower", ",", "\n", "default", "=", "\"rotation\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--distribution\"", ",", "\n", "help", "=", "\"likelihood distribution used for computing loss in CCI VAE\"", ",", "\n", "choices", "=", "[", "\"gaussian\"", ",", "\"bernoulli\"", "]", ",", "\n", "type", "=", "str", ".", "lower", ",", "\n", "default", "=", "\"gaussian\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--beta\"", ",", "help", "=", "\"beta used for CCI VAE\"", ",", "default", "=", "1000", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--no_latent_op\"", ",", "\n", "help", "=", "\"use standard autoencoder without latent operators\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--cluster\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sweep\"", ",", "action", "=", "\"store_true\"", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.__init__": [[17, 22], ["latent_operators.ShiftOperator.generate_shift_operator_matrices"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.generate_shift_operator_matrices"], ["def", "__init__", "(", "self", ",", "n_rotations", ",", "device", ")", ":", "\n", "        ", "self", ".", "n_rotations", "=", "n_rotations", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "translation_matrices", "=", "self", ".", "generate_shift_operator_matrices", "(", "\n", "n_rotations", "+", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.__call__": [[24, 27], ["latent_operators.ShiftOperator.translate_batch"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.translate_batch"], ["", "def", "__call__", "(", "self", ",", "z_batch", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Interface for Autoencoder\"\"\"", "\n", "return", "self", ".", "translate_batch", "(", "z_batch", ",", "angles", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.translate_batch": [[28, 48], ["torch.stack", "angles.dim", "latent_operators.ShiftOperator.translate", "print", "shifts[].long", "enumerate"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.translate"], ["", "def", "translate_batch", "(", "self", ",", "z_batch", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Applies shift operator to batch\n\n        Args:\n            angles (array of floats): counter-clockwise rotation in degrees.\n        \"\"\"", "\n", "smallest_angle", "=", "360", "/", "(", "self", ".", "n_rotations", "+", "1", ")", "\n", "\n", "if", "angles", ".", "dim", "(", ")", ">", "1", ":", "\n", "            ", "shifts", "=", "angles", "[", ":", ",", "0", "]", "/", "smallest_angle", "\n", "", "else", ":", "\n", "            ", "shifts", "=", "angles", "/", "smallest_angle", "\n", "", "try", ":", "\n", "            ", "translated_batch", "=", "[", "\n", "self", ".", "translate", "(", "z", ",", "shifts", "[", "i", "]", ".", "long", "(", ")", ")", "for", "i", ",", "z", "in", "enumerate", "(", "z_batch", ")", "\n", "]", "\n", "", "except", "IndexError", "as", "e", ":", "\n", "            ", "print", "(", "\"===ANGLES ARE\"", ",", "angles", ")", "\n", "raise", "e", "\n", "", "return", "torch", ".", "stack", "(", "translated_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.translate": [[49, 68], ["z.reshape", "translation_matrix.cpu.cpu.matmul", "translation_matrix.cpu.matmul.reshape", "translation_matrix.cpu.cpu.cpu"], "methods", ["None"], ["", "def", "translate", "(", "self", ",", "z", ",", "shift", ")", ":", "\n", "        ", "\"\"\"Translate latent\n\n        Args:\n            z (1-dim tensor): latent vector\n            shift (int): amount by which to shift.\n                shift of 0 corresponds to the identity.\n        \"\"\"", "\n", "# reshape into 2D tensor", "\n", "z_2d", "=", "z", ".", "reshape", "(", "self", ".", "n_rotations", "+", "1", ",", "-", "1", ")", "\n", "translation_matrix", "=", "self", ".", "translation_matrices", "[", "shift", "]", "\n", "# move to cpu if tensor is cpu. Used for eval", "\n", "if", "not", "z_2d", ".", "is_cuda", ":", "\n", "            ", "translation_matrix", "=", "translation_matrix", ".", "cpu", "(", ")", "\n", "# translation", "\n", "", "z_2d_shifted", "=", "translation_matrix", ".", "matmul", "(", "z_2d", ")", "\n", "# reshape back", "\n", "z_shifted", "=", "z_2d_shifted", ".", "reshape", "(", "z", ".", "shape", ")", "\n", "return", "z_shifted", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.generate_shift_operator_matrices": [[69, 88], ["numpy.zeros", "range", "numpy.eye", "range", "numpy.array", "torch.tensor", "numpy.eye", "numpy.dot", "numpy.array.append"], "methods", ["None"], ["", "def", "generate_shift_operator_matrices", "(", "self", ",", "n_rotations", ")", ":", "\n", "        ", "\"\"\"Generates family of shift operator matrices\"\"\"", "\n", "translation_matrix", "=", "np", ".", "zeros", "(", "(", "n_rotations", ",", "n_rotations", ")", ")", "\n", "for", "i", "in", "range", "(", "n_rotations", ")", ":", "\n", "            ", "translation_matrix", "[", "i", ",", "(", "i", "+", "1", ")", "%", "n_rotations", "]", "=", "1", "\n", "\n", "", "translation_matrices", "=", "[", "np", ".", "eye", "(", "n_rotations", ",", "n_rotations", ")", "]", "\n", "\n", "T", "=", "np", ".", "eye", "(", "n_rotations", ",", "n_rotations", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_rotations", "-", "1", ")", ":", "\n", "            ", "T", "=", "np", ".", "dot", "(", "translation_matrix", ",", "T", ")", "\n", "translation_matrices", ".", "append", "(", "T", ")", "\n", "\n", "", "translation_matrices", "=", "np", ".", "array", "(", "translation_matrices", ")", "\n", "_translation_matrices", "=", "torch", ".", "tensor", "(", "\n", "translation_matrices", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "self", ".", "device", ",", "\n", ")", "\n", "return", "_translation_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.__init__": [[93, 111], ["latent_operators.ComplexShiftOperator.generate_translation_matrices", "int", "print", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.generate_translation_matrices"], ["def", "__init__", "(", "self", ",", "cardinals", ",", "z_dim", ",", "device", ",", "unique_transfo", "=", "False", ",", "index", "=", "None", ")", ":", "\n", "        ", "self", ".", "cardinals", "=", "cardinals", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "translation_matrices", "=", "self", ".", "generate_translation_matrices", "(", "\n", "self", ".", "cardinals", ",", "self", ".", "z_dim", "\n", ")", "\n", "if", "unique_transfo", ":", "\n", "            ", "if", "(", "np", ".", "array", "(", "cardinals", ")", ">", "1", ")", ".", "sum", "(", ")", "==", "1", ":", "\n", "                ", "self", ".", "index", "=", "int", "(", "(", "np", ".", "array", "(", "cardinals", ")", ">", "1", ")", ".", "nonzero", "(", ")", "[", "0", "]", ")", "\n", "", "elif", "(", "np", ".", "array", "(", "cardinals", ")", ">", "1", ")", ".", "sum", "(", ")", ">", "1", ":", "\n", "                ", "if", "index", "is", "None", ":", "\n", "                    ", "print", "(", "\"Must provide the index of the operator !\"", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "index", "=", "index", "\n", "", "", "self", ".", "translate_batch", "=", "self", ".", "translate_batch_unique", "\n", "", "else", ":", "\n", "            ", "self", ".", "translate_batch", "=", "self", ".", "translate_batch_multiple", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.__call__": [[112, 116], ["latent_operators.ComplexShiftOperator.translate_batch"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ShiftOperator.translate_batch"], ["", "", "def", "__call__", "(", "self", ",", "z_batch", ",", "shifts", ")", ":", "\n", "        ", "\"\"\"Interface for Autoencoder\"\"\"", "\n", "z_batch_r", ",", "z_batch_i", "=", "z_batch", "\n", "return", "self", ".", "translate_batch", "(", "z_batch_r", ",", "z_batch_i", ",", "shifts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.translate_batch_unique": [[117, 126], ["None"], "methods", ["None"], ["", "def", "translate_batch_unique", "(", "self", ",", "z_batch_r", ",", "z_batch_i", ",", "shifts", ")", ":", "\n", "        ", "\"\"\"Translates batch in the case of a unique transformations (Faster)\"\"\"", "\n", "tr", "=", "self", ".", "translation_matrices", "[", "self", ".", "index", "]", "[", "0", "]", "[", "shifts", "[", ":", ",", "0", "]", "]", "\n", "ti", "=", "self", ".", "translation_matrices", "[", "self", ".", "index", "]", "[", "1", "]", "[", "shifts", "[", ":", ",", "0", "]", "]", "\n", "z_batch_r_shifted", "=", "tr", "*", "z_batch_r", "-", "ti", "*", "z_batch_i", "\n", "z_batch_i_shifted", "=", "tr", "*", "z_batch_i", "+", "ti", "*", "z_batch_r", "\n", "return", "(", "\n", "z_batch_r_shifted", ",", "\n", "z_batch_i_shifted", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.translate_batch_multiple": [[128, 137], ["latent_operators.ComplexShiftOperator.build_multipliers"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.build_multipliers"], ["", "def", "translate_batch_multiple", "(", "self", ",", "z_batch_r", ",", "z_batch_i", ",", "shifts", ")", ":", "\n", "        ", "\"\"\"Translates batch in the case of multiple transformations\"\"\"", "\n", "\n", "(", "Mr", ",", "Mi", ")", "=", "self", ".", "build_multipliers", "(", "shifts", ")", "\n", "z_batch_r_shifted", "=", "Mr", "*", "z_batch_r", "-", "Mi", "*", "z_batch_i", "\n", "z_batch_i_shifted", "=", "Mr", "*", "z_batch_i", "+", "Mi", "*", "z_batch_r", "\n", "return", "(", "\n", "z_batch_r_shifted", ",", "\n", "z_batch_i_shifted", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.build_multipliers": [[139, 149], ["torch.ones", "torch.zeros", "range"], "methods", ["None"], ["", "def", "build_multipliers", "(", "self", ",", "shifts", ")", ":", "\n", "        ", "size_batch", ",", "n_transfo", "=", "shifts", ".", "shape", "\n", "Mr", "=", "torch", ".", "ones", "(", "(", "size_batch", ",", "self", ".", "z_dim", ")", ",", "device", "=", "self", ".", "device", ")", "\n", "Mi", "=", "torch", ".", "zeros", "(", "(", "size_batch", ",", "self", ".", "z_dim", ")", ",", "device", "=", "self", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "n_transfo", ")", ":", "\n", "            ", "tr", "=", "self", ".", "translation_matrices", "[", "i", "]", "[", "0", "]", "[", "shifts", "[", ":", ",", "i", "]", "]", "\n", "ti", "=", "self", ".", "translation_matrices", "[", "i", "]", "[", "1", "]", "[", "shifts", "[", ":", ",", "i", "]", "]", "\n", "Mr", "=", "Mr", "*", "tr", "-", "Mi", "*", "ti", "\n", "Mi", "=", "Mr", "*", "ti", "+", "Mi", "*", "tr", "\n", "", "return", "(", "Mr", ",", "Mi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.translate": [[150, 163], ["range", "len"], "methods", ["None"], ["", "def", "translate", "(", "self", ",", "zr", ",", "zi", ",", "shift", ")", ":", "\n", "        ", "\"\"\"Translate latent\n\n        Args:\n            z (1-dim tensor): latent vector\n            shift (int): amount by which to shift\n        \"\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "shift", ")", ")", ":", "\n", "            ", "tr", "=", "self", ".", "translation_matrices", "[", "i", "]", "[", "0", "]", "[", "shift", "[", "i", "]", "]", "\n", "ti", "=", "self", ".", "translation_matrices", "[", "i", "]", "[", "1", "]", "[", "shift", "[", "i", "]", "]", "\n", "zr", "=", "zr", "*", "tr", "-", "zi", "*", "ti", "\n", "zi", "=", "zi", "*", "tr", "+", "zr", "*", "ti", "\n", "", "return", "(", "zr", ",", "zi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.ComplexShiftOperator.generate_translation_matrices": [[164, 205], ["enumerate", "list", "range", "numpy.meshgrid", "numpy.exp", "numpy.power", "numpy.arange", "XYZ.append", "len", "latent_operators.ComplexShiftOperator.generate_translation_matrices.DFT_matrix"], "methods", ["None"], ["", "def", "generate_translation_matrices", "(", "self", ",", "cardinals", ",", "z_dim", ")", ":", "\n", "        ", "\"\"\"Generates family of translation matrices\"\"\"", "\n", "\n", "def", "DFT_matrix", "(", "cardinal", ",", "z_dim", ")", ":", "\n", "            ", "i", ",", "j", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "cardinal", ")", ",", "np", ".", "arange", "(", "cardinal", ")", ")", "\n", "omega", "=", "np", ".", "exp", "(", "2", "*", "np", ".", "pi", "*", "1j", "/", "cardinal", ")", "\n", "W", "=", "np", ".", "power", "(", "omega", ",", "i", "*", "j", ")", "\n", "return", "W", "\n", "\n", "# Loop over all transformations that can happen to the sample", "\n", "", "XYZ", "=", "[", "]", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "cardinals", ")", ":", "\n", "            ", "K", "=", "self", ".", "cardinals", "[", "i", "]", "\n", "X_i", "=", "np", ".", "arange", "(", "K", ")", "\n", "if", "z_dim", "%", "K", ":", "# creates in shift operator an unfinished cycle", "\n", "                ", "second_dim", "=", "(", "\n", "int", "(", "np", ".", "floor", "(", "z_dim", "/", "K", ")", ")", "+", "1", "\n", ")", "# TODO: not sure this is the right way", "\n", "", "else", ":", "# creates in shift operator a finished cycle", "\n", "                ", "second_dim", "=", "int", "(", "z_dim", "/", "K", ")", "\n", "\n", "", "X_i", "=", "np", ".", "tile", "(", "X_i", ".", "flatten", "(", ")", ",", "(", "second_dim", ")", ")", "[", ":", "z_dim", "]", "\n", "XYZ", ".", "append", "(", "X_i", ")", "\n", "\n", "", "_all_translation_matrices", "=", "list", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "cardinals", ")", ")", ":", "\n", "            ", "translation_matrices", "=", "DFT_matrix", "(", "cardinals", "[", "i", "]", ",", "z_dim", ")", "\n", "translation_matrices", "=", "translation_matrices", "[", ":", ",", "XYZ", "[", "i", "]", "]", "\n", "translation_matrices_r", "=", "np", ".", "real", "(", "translation_matrices", ")", "\n", "translation_matrices_i", "=", "np", ".", "imag", "(", "translation_matrices", ")", "\n", "_translation_matrices_r", "=", "torch", ".", "tensor", "(", "\n", "translation_matrices_r", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "self", ".", "device", ",", "\n", ")", "\n", "_translation_matrices_i", "=", "torch", ".", "tensor", "(", "\n", "translation_matrices_i", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "self", ".", "device", ",", "\n", ")", "\n", "\n", "_all_translation_matrices", ".", "append", "(", "\n", "(", "_translation_matrices_r", ",", "_translation_matrices_i", ",", ")", "\n", ")", "\n", "", "return", "_all_translation_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.__init__": [[215, 218], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_rotations", ",", "device", ")", ":", "\n", "        ", "self", ".", "n_rotations", "=", "n_rotations", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.__call__": [[219, 222], ["latent_operators.DisentangledRotation.rotate_batch"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.rotate_batch"], ["", "def", "__call__", "(", "self", ",", "z", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Interface for Autoencoder\"\"\"", "\n", "return", "self", ".", "rotate_batch", "(", "z", ",", "angles", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.rotate_batch": [[223, 234], ["enumerate", "torch.stack", "angles.dim", "latent_operators.DisentangledRotation.rotate", "rotated_batch.append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.rotate"], ["", "def", "rotate_batch", "(", "self", ",", "x_batch", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Rotates batch\"\"\"", "\n", "rotated_batch", "=", "[", "]", "\n", "if", "angles", ".", "dim", "(", ")", ">", "1", ":", "\n", "            ", "angles", "=", "angles", "[", ":", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "angles", "=", "angles", "\n", "", "for", "i", ",", "x", "in", "enumerate", "(", "x_batch", ")", ":", "\n", "            ", "x_rotated", "=", "self", ".", "rotate", "(", "x", ",", "angles", "[", "i", "]", ")", "\n", "rotated_batch", ".", "append", "(", "x_rotated", ")", "\n", "", "return", "torch", ".", "stack", "(", "rotated_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.rotate": [[235, 249], ["latent_operators.DisentangledRotation.get_rotation_matrix", "rotation_matrix.cpu.cpu.matmul", "x.dim", "ValueError", "rotation_matrix.cpu.cpu.cpu"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.get_rotation_matrix"], ["", "def", "rotate", "(", "self", ",", "x", ",", "angle", ")", ":", "\n", "        ", "\"\"\"Clockwise rotation or translation\n        Args:\n            x (1D tensor): representing latent vector\n            angle (float): rotation angle in degrees\n        Returns: rotated tensor of same shape as x\n        \"\"\"", "\n", "if", "x", ".", "dim", "(", ")", "!=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "f\"x must be a flattened 1D vector. Got shape {x.shape}\"", ")", "\n", "", "rotation_matrix", "=", "self", ".", "get_rotation_matrix", "(", "angle", ",", "x", ".", "shape", "[", "0", "]", ")", "\n", "if", "not", "x", ".", "is_cuda", ":", "\n", "            ", "rotation_matrix", "=", "rotation_matrix", ".", "cpu", "(", ")", "\n", "", "x_rotated", "=", "rotation_matrix", ".", "matmul", "(", "x", ")", "\n", "return", "x_rotated", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.get_rotation_matrix": [[250, 270], ["functools.lru_cache", "torch.diag", "torch.tensor", "torch.diag.to", "torch.ones", "torch.tensor", "torch.cos", "torch.sin", "torch.cos", "torch.sin"], "methods", ["None"], ["", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "get_rotation_matrix", "(", "self", ",", "angle", ",", "dim", ")", ":", "\n", "        ", "\"\"\"Angle is the rotation angle in degrees.\n        Returns rotation matrix that operates on first two dimensions\n        \"\"\"", "\n", "rotation_matrix", "=", "torch", ".", "diag", "(", "torch", ".", "ones", "(", "dim", ",", "device", "=", "self", ".", "device", ")", ")", "\n", "if", "angle", "==", "0.0", ":", "\n", "            ", "return", "rotation_matrix", "\n", "", "radians", "=", "(", "angle", "/", "360", ")", "*", "torch", ".", "tensor", "(", "2", "*", "np", ".", "pi", ")", "\n", "matrix_2d", "=", "torch", ".", "tensor", "(", "\n", "[", "\n", "[", "torch", ".", "cos", "(", "radians", ")", ",", "-", "torch", ".", "sin", "(", "radians", ")", "]", ",", "\n", "[", "torch", ".", "sin", "(", "radians", ")", ",", "torch", ".", "cos", "(", "radians", ")", "]", ",", "\n", "]", "\n", ")", "\n", "rotation_matrix", "[", "0", "]", "[", "0", "]", "=", "matrix_2d", "[", "0", "]", "[", "0", "]", "\n", "rotation_matrix", "[", "0", "]", "[", "1", "]", "=", "matrix_2d", "[", "0", "]", "[", "1", "]", "\n", "rotation_matrix", "[", "1", "]", "[", "0", "]", "=", "matrix_2d", "[", "1", "]", "[", "0", "]", "\n", "rotation_matrix", "[", "1", "]", "[", "1", "]", "=", "matrix_2d", "[", "1", "]", "[", "1", "]", "\n", "return", "rotation_matrix", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.__init__": [[41, 82], ["model", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.to", "cci_variational_autoencoder.CCIVariationalAutoEncoder.set_seed"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed"], ["def", "__init__", "(", "\n", "self", ",", "\n", "data", ",", "\n", "model", "=", "models", ".", "CCIVAE", ",", "\n", "beta", "=", "1000.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "z_dim", "=", "30", ",", "\n", "seed", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "n_epochs", "=", "5", ",", "\n", "distribution", "=", "\"gaussian\"", ",", "\n", ")", ":", "\n", "        ", "self", ".", "beta", ",", "self", ".", "c_max", "=", "beta", ",", "c_max", "\n", "self", ".", "c", "=", "0.0", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "model_cls", "=", "model", "\n", "\n", "self", ".", "model", "=", "model", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", ",", "distribution", "=", "distribution", "\n", ")", "\n", "self", ".", "model", ".", "to", "(", "device", "=", "device", ")", "\n", "\n", "self", ".", "model_best_valid", "=", "self", ".", "model", "\n", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "self", ".", "distribution", "=", "distribution", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "self", ".", "train_losses", "=", "[", "]", "\n", "self", ".", "kl_losses", "=", "[", "]", "\n", "self", ".", "reconstruction_losses", "=", "[", "]", "\n", "\n", "self", ".", "valid_losses", "=", "[", "]", "\n", "self", ".", "final_test_loss", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.__repr__": [[83, 96], ["json.dumps", "str", "str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "model", "=", "{", "\n", "\"model_class\"", ":", "str", "(", "self", ".", "model_cls", ")", ",", "\n", "\"beta\"", ":", "self", ".", "beta", ",", "\n", "\"c_max\"", ":", "self", ".", "c_max", ",", "\n", "\"distribution\"", ":", "self", ".", "distribution", ",", "\n", "\"z_dim\"", ":", "self", ".", "z_dim", ",", "\n", "\"batch_size\"", ":", "self", ".", "data", ".", "batch_size", ",", "\n", "\"learning_rate\"", ":", "self", ".", "learning_rate", ",", "\n", "\"n_epochs\"", ":", "self", ".", "n_epochs", ",", "\n", "\"data\"", ":", "str", "(", "self", ".", "data", ")", ",", "\n", "}", "\n", "return", "json", ".", "dumps", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.set_seed": [[97, 104], ["torch.manual_seed", "numpy.random.seed", "random.seed", "torch.autograd.set_detect_anomaly"], "methods", ["None"], ["", "def", "set_seed", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets seed for random number generation\"\"\"", "\n", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "# Generate Dataset", "\n", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_loss": [[105, 127], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "torch.nn.BCELoss.", "torch.nn.MSELoss", "torch.nn.BCELoss", "ValueError", "log_var.exp", "mu.pow"], "methods", ["None"], ["", "def", "compute_loss", "(", "self", ",", "x1", ")", ":", "\n", "        ", "\"\"\"Loss for controlled capacity beta vae (CCI VAE)\n        https://arxiv.org/abs/1804.03599\n        \"\"\"", "\n", "if", "self", ".", "distribution", "==", "\"gaussian\"", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "", "elif", "self", ".", "distribution", "==", "\"bernoulli\"", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"distribution {self.distribution} not supported\"", ")", "\n", "\n", "# assuming a Gaussian Distribution", "\n", "", "out", ",", "mu", ",", "log_var", "=", "self", ".", "model", "(", "x1", ")", "\n", "reconstruction_loss", "=", "criterion", "(", "out", ",", "x1", ")", "\n", "\n", "# https://arxiv.org/abs/1312.6114", "\n", "# -0.5 * sum(1 + log(sigma^2) - mu^2 - sigma^2)", "\n", "kl_divergence", "=", "(", "\n", "-", "0.5", "*", "(", "1", "+", "log_var", "-", "mu", ".", "pow", "(", "2", ")", "-", "log_var", ".", "exp", "(", ")", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", ")", ".", "sum", "(", ")", "\n", "\n", "return", "reconstruction_loss", ",", "kl_divergence", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.train": [[128, 200], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.train().to", "torch.optim.Adam", "range", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.parameters", "cci_variational_autoencoder.CCIVariationalAutoEncoder.set_log_frequency", "print", "enumerate", "cci_variational_autoencoder.CCIVariationalAutoEncoder.log_train_val_loss", "cci_variational_autoencoder.CCIVariationalAutoEncoder.copy_models_validation", "cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_total_loss", "print", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.train", "cci_variational_autoencoder.CCIVariationalAutoEncoder.log_train_val_loss", "x1.to.to.to", "torch.optim.Adam.zero_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_loss", "loss.backward", "torch.optim.Adam.step", "loss.item", "reconstruction_loss.cpu().detach().numpy", "kl_divergence.cpu().detach().numpy", "print", "print", "cci_variational_autoencoder.CCIVariationalAutoEncoder.kl_losses.append", "cci_variational_autoencoder.CCIVariationalAutoEncoder.reconstruction_losses.append", "reconstruction_loss.cpu().detach", "kl_divergence.cpu().detach", "reconstruction_loss.cpu", "kl_divergence.cpu"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.set_log_frequency", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.log_train_val_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.copy_models_validation", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.log_train_val_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_loss"], ["", "def", "train", "(", "self", ",", "stop_early", "=", "False", ",", "log_frequency", "=", "None", ",", "track_losses", "=", "True", ")", ":", "\n", "        ", "\"\"\"Trains controlled capacity beta vae (CCI VAE)\n        https://arxiv.org/abs/1804.03599\n\n        Learning rate used in the paper is 5e-4\n\n        If verbose is False, previous loss print is overridden\n        If stop_early is True, training stops after first logged loss. \n        This is useful for testing.\n        \"\"\"", "\n", "self", ".", "model", ".", "train", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "learning_rate", ")", "\n", "\n", "c_step_size", "=", "(", "self", ".", "c_max", "-", "self", ".", "c", ")", "/", "self", ".", "n_epochs", "\n", "\n", "if", "log_frequency", "is", "None", ":", "\n", "            ", "log_frequency", "=", "self", ".", "set_log_frequency", "(", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "self", ".", "n_epochs", ")", ":", "\n", "            ", "running_loss", "=", "0.0", "\n", "print", "(", "f\"Epoch {epoch}\"", ")", "\n", "if", "track_losses", ":", "\n", "                ", "self", ".", "log_train_val_loss", "(", ")", "\n", "", "running_loss", "=", "0.0", "\n", "running_reconstruction_loss", ",", "running_kl_divergence", "=", "0.0", ",", "0.0", "\n", "# update controlled capacity parameter", "\n", "self", ".", "c", "+=", "c_step_size", "\n", "for", "i", ",", "(", "x1", ",", "_", ",", "_", ")", "in", "enumerate", "(", "self", ".", "data", ".", "train_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "reconstruction_loss", ",", "kl_divergence", "=", "self", ".", "compute_loss", "(", "x1", ")", "\n", "\n", "loss", "=", "reconstruction_loss", "+", "self", ".", "beta", "*", "(", "kl_divergence", "-", "self", ".", "c", ")", ".", "abs", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "running_reconstruction_loss", "+=", "(", "\n", "reconstruction_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", ")", "\n", "running_kl_divergence", "+=", "kl_divergence", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "if", "i", "%", "log_frequency", "==", "(", "log_frequency", "-", "1", ")", ":", "\n", "                    ", "normalized_loss", "=", "running_loss", "/", "log_frequency", "\n", "normalized_reconstruction_loss", "=", "(", "\n", "running_reconstruction_loss", "/", "log_frequency", "\n", ")", "\n", "normalized_kl_divergence", "=", "running_kl_divergence", "/", "log_frequency", "\n", "print", "(", "f\"Running Total Loss: {normalized_loss:0.3e}\"", ")", "\n", "print", "(", "\n", "f\"Running Reconstruction Loss: {normalized_reconstruction_loss:0.3e}\"", "\n", "f\" KL Divergence: {normalized_kl_divergence:0.3e}\"", "\n", ")", "\n", "self", ".", "kl_losses", ".", "append", "(", "normalized_kl_divergence", ")", "\n", "self", ".", "reconstruction_losses", ".", "append", "(", "normalized_reconstruction_loss", ")", "\n", "\n", "running_loss", "=", "0.0", "\n", "running_reconstruction_loss", "=", "0.0", "\n", "running_kl_divergence", "=", "0.0", "\n", "if", "stop_early", ":", "\n", "                        ", "return", "None", "\n", "\n", "", "", "", "", "if", "track_losses", ":", "\n", "            ", "train_loss", ",", "valid_loss", "=", "self", ".", "log_train_val_loss", "(", ")", "\n", "self", ".", "copy_models_validation", "(", "valid_loss", ")", "\n", "# compute test loss per sample", "\n", "self", ".", "final_test_loss", "=", "self", ".", "compute_total_loss", "(", "\n", "self", ".", "data", ".", "test_loader_batch_1", "\n", ")", "\n", "print", "(", "f\"Test Loss: {self.final_test_loss:0.3e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.set_log_frequency": [[201, 204], ["len"], "methods", ["None"], ["", "", "def", "set_log_frequency", "(", "self", ")", ":", "\n", "        ", "frequency", "=", "len", "(", "self", ".", "data", ".", "train_loader", ")", "//", "10", "\n", "return", "frequency", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.copy_models_validation": [[205, 209], ["numpy.min", "copy.deepcopy"], "methods", ["None"], ["", "def", "copy_models_validation", "(", "self", ",", "valid_loss", ")", ":", "\n", "        ", "\"\"\"Copies models with best validation\"\"\"", "\n", "if", "valid_loss", "<", "np", ".", "min", "(", "self", ".", "valid_losses", ")", ":", "\n", "            ", "self", ".", "model_vest_valid", "=", "copy", ".", "deepcopy", "(", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.log_train_val_loss": [[210, 218], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_total_loss", "cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_total_loss", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train_losses.append", "cci_variational_autoencoder.CCIVariationalAutoEncoder.valid_losses.append", "print"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss"], ["", "", "def", "log_train_val_loss", "(", "self", ",", "show_print", "=", "True", ")", ":", "\n", "        ", "train_loss", "=", "self", ".", "compute_total_loss", "(", "self", ".", "data", ".", "train_loader", ")", "\n", "valid_loss", "=", "self", ".", "compute_total_loss", "(", "self", ".", "data", ".", "valid_loader", ")", "\n", "self", ".", "train_losses", ".", "append", "(", "train_loss", ")", "\n", "self", ".", "valid_losses", ".", "append", "(", "valid_loss", ")", "\n", "if", "show_print", ":", "\n", "            ", "print", "(", "f\"Total loss train: {train_loss:0.3e} validation: {valid_loss:0.3e}\"", ")", "\n", "", "return", "train_loss", ",", "valid_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_total_loss": [[219, 232], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval", "numpy.mean", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.train", "torch.no_grad", "x1.to.to.to", "cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_loss", "losses.append", "loss.item"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_loss"], ["", "def", "compute_total_loss", "(", "self", ",", "loader", ")", ":", "\n", "        ", "\"\"\"Computes total average loss on given loader\"\"\"", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "x1", ",", "x2", ",", "params", "in", "loader", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "reconstruction_loss", ",", "kl_divergence", "=", "self", ".", "compute_loss", "(", "x1", ")", "\n", "loss", "=", "reconstruction_loss", "+", "self", ".", "beta", "*", "(", "kl_divergence", "-", "self", ".", "c", ")", ".", "abs", "(", ")", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "", "mean_loss", "=", "np", ".", "mean", "(", "losses", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.reconstruct_x1": [[233, 240], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval"], "methods", ["None"], ["", "def", "reconstruct_x1", "(", "self", ",", "x1", ")", ":", "\n", "        ", "\"\"\"Reconstructs x1 using model\"\"\"", "\n", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "y", ",", "_", ",", "_", "=", "self", ".", "model", "(", "x1", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.reconstruct_mean": [[241, 248], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.decoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval"], "methods", ["None"], ["", "def", "reconstruct_mean", "(", "self", ",", "x1", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_", ",", "mu", ",", "_", "=", "self", ".", "model", "(", "x1", ")", "\n", "out", "=", "self", ".", "model", ".", "decoder", "(", "mu", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_best_validation": [[249, 253], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_best_validation", "(", "self", ",", "path", ",", "indices", "=", "None", ")", ":", "\n", "        ", "\"\"\"Saves results best for model with best validation loss\"\"\"", "\n", "self", ".", "model", "=", "self", ".", "model_best_valid", "\n", "self", ".", "save", "(", "path", ",", "indices", "=", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save": [[254, 261], ["os.makedirs", "cci_variational_autoencoder.CCIVariationalAutoEncoder.save_model_configs", "cci_variational_autoencoder.CCIVariationalAutoEncoder.save_model", "cci_variational_autoencoder.CCIVariationalAutoEncoder.save_losses", "cci_variational_autoencoder.CCIVariationalAutoEncoder.save_plots"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_model_configs", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_model", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_losses", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_plots"], ["", "def", "save", "(", "self", ",", "path", ",", "indices", "=", "None", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "save_model_configs", "(", "path", ")", "\n", "self", ".", "save_model", "(", "path", ")", "\n", "\n", "self", ".", "save_losses", "(", "path", ")", "\n", "self", ".", "save_plots", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_model_configs": [[262, 270], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.__repr__", "json.loads", "os.path.join", "open", "json.dump"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.__repr__"], ["", "def", "save_model_configs", "(", "self", ",", "path", ")", ":", "\n", "        ", "model_configs_str", "=", "self", ".", "__repr__", "(", ")", "\n", "model_configs", "=", "json", ".", "loads", "(", "model_configs_str", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"model_configs.json\"", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "\"w\"", ")", "as", "outfile", ":", "\n", "            ", "json", ".", "dump", "(", "model_configs", ",", "outfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.load_model": [[271, 277], ["torch.device", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model_cls", "cci_variational_autoencoder.CCIVariationalAutoEncoder.load_state_dict", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.to", "torch.load"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "", "def", "load_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "model", "=", "self", ".", "model_cls", "(", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "self", ".", "z_dim", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path", ",", "map_location", "=", "device", ")", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "to", "(", "device", "=", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_model": [[278, 281], ["os.path.join", "torch.save", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.state_dict"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "full_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"model.pt\"", ")", "\n", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "full_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_losses": [[282, 297], ["os.path.join", "numpy.save", "os.path.join", "numpy.save", "os.path.join", "numpy.save", "os.path.join", "numpy.save", "os.path.join", "numpy.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_losses", "(", "self", ",", "path", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"kl_divergence.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "kl_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"reconstruction_losses.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "reconstruction_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"train_losses.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "train_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"valid_losses.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "valid_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"test_loss.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "final_test_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.save_plots": [[298, 310], ["matplotlib.use", "matplotlib.use", "matplotlib.use", "matplotlib.use", "os.path.join", "cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_x1_reconstructions", "os.path.join", "cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_latent_traversal"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_latent_traversal"], ["", "def", "save_plots", "(", "self", ",", "path", ")", ":", "\n", "        ", "matplotlib", ".", "use", "(", "\"Agg\"", ")", "\n", "\n", "for", "train_set", "in", "[", "True", ",", "False", "]", ":", "\n", "            ", "set_name", "=", "\"train\"", "if", "train_set", "else", "\"test\"", "\n", "\n", "x1_plot_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f\"x1_{set_name}_reconstructions\"", ")", "\n", "self", ".", "plot_x1_reconstructions", "(", "save_name", "=", "x1_plot_path", ",", "train_set", "=", "train_set", ")", "\n", "\n", "latent_traversal_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f\"x_{set_name}_latent_traversal\"", ")", "\n", "self", ".", "plot_latent_traversal", "(", "\n", "save_name", "=", "latent_traversal_path", ",", "train_set", "=", "train_set", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_x1_reconstructions": [[312, 327], ["plot.plot_x1_reconstructions", "random.sample", "range", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions"], ["", "", "def", "plot_x1_reconstructions", "(", "self", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots x1 autoencoder reconstruction from z1.\n\n        Args:\n            pairs (datasets.Pairs): contains x1, x2, and params.\n            model (function): callable f(x1) = x1_reconstruction\n            indices (list of ints): indices for samples to plot\n            train_set (bool): if true title is plotted with train otherwise test.\n            save_name (str): indicates path where images should be saved. \n        \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "pairs", ")", ")", ",", "k", "=", "4", ")", "\n", "", "plot", ".", "plot_x1_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_mean", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_latent_traversal": [[329, 352], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "random.sample", "cci_variational_autoencoder.CCIVariationalAutoEncoder._plot_latent_traversal_helper", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval", "range", "len", "str"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder._plot_latent_traversal_helper"], ["", "def", "plot_latent_traversal", "(", "\n", "self", ",", "\n", "indices", "=", "None", ",", "\n", "num_std", "=", "6.0", ",", "\n", "train_set", "=", "True", ",", "\n", "save_name", "=", "None", ",", "\n", "fixed_range", "=", "True", ",", "\n", ")", ":", "\n", "        ", "\"\"\"Traverses latent space from [mu - 3 * std, mu + 3 * std] for given indices.\n        If fixed_range is True, then [-num_std, num_std] is the interval.\n        \"\"\"", "\n", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "pairs", ")", ")", ",", "k", "=", "3", ")", "\n", "\n", "", "for", "index", "in", "indices", ":", "\n", "            ", "sample_save_name", "=", "save_name", "\n", "if", "save_name", "is", "not", "None", ":", "\n", "                ", "sample_save_name", "=", "save_name", "+", "\"_sample_\"", "+", "str", "(", "index", ")", "\n", "", "self", ".", "_plot_latent_traversal_helper", "(", "\n", "pairs", ",", "index", ",", "num_std", ",", "train_set", ",", "sample_save_name", ",", "fixed_range", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.plot_single_latent_traversal": [[354, 399], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "cci_variational_autoencoder.CCIVariationalAutoEncoder.get_std_path", "matplotlib.subplots", "matplotlib.subplots", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "enumerate", "fig.tight_layout", "len", "x1.squeeze", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "z.clone().cpu().detach", "axs[].imshow", "axs[].set_xticks", "axs[].set_yticks", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval", "str", "x1.unsqueeze", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.decoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze().detach().numpy", "z.clone().cpu", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze().detach", "z.clone", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_std_path"], ["", "", "def", "plot_single_latent_traversal", "(", "\n", "self", ",", "index", "=", "3", ",", "train_set", "=", "True", ",", "latent_dim", "=", "0", ",", "save_name", "=", "None", ",", "num_std", "=", "6.0", ",", "\n", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "sample_save_name", "=", "save_name", "\n", "if", "save_name", "is", "not", "None", ":", "\n", "            ", "sample_save_name", "=", "save_name", "+", "\"_sample_\"", "+", "str", "(", "index", ")", "\n", "\n", "", "x1", ",", "x2", ",", "p", "=", "pairs", "[", "index", "]", "\n", "title", "=", "\"Training\"", "if", "train_set", "else", "\"Test\"", "\n", "\n", "traversal_path", "=", "CCIVariationalAutoEncoder", ".", "get_std_path", "(", "num_std", ")", "\n", "num_subplots", "=", "len", "(", "traversal_path", ")", "+", "1", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "num_subplots", ",", "figsize", "=", "(", "12", ",", "16", ")", ")", "\n", "\n", "axs", "[", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "0", "]", ".", "set_title", "(", "f\"{title}: x1, latent {latent_dim}\"", ")", "\n", "\n", "axs", "[", "0", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "0", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_", ",", "mu", ",", "log_var", "=", "self", ".", "model", "(", "x1", ".", "unsqueeze", "(", "0", ")", ")", "\n", "z", "=", "mu", "\n", "\n", "", "for", "i", ",", "step", "in", "enumerate", "(", "traversal_path", ")", ":", "\n", "            ", "z_shifted", "=", "z", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "z_shifted", "[", "0", "]", "[", "latent_dim", "]", "=", "step", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "reconstruction", "=", "self", ".", "model", ".", "decoder", "(", "z_shifted", ")", "\n", "", "axs", "[", "i", "+", "1", "]", ".", "imshow", "(", "reconstruction", ".", "squeeze", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "axs", "[", "i", "+", "1", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "i", "+", "1", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "if", "save_name", ":", "\n", "# close figure to speed up saving", "\n", "            ", "plt", ".", "savefig", "(", "sample_save_name", ",", "bbox_inches", "=", "\"tight\"", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_std_path": [[400, 411], ["sorted", "list", "range", "numpy.array"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "get_std_path", "(", "num_std", ")", ":", "\n", "        ", "\"\"\"Returns list of std steps.\n        [-3, -2, -1, 0, 1, 2, 3]\n        \"\"\"", "\n", "step_size", "=", "num_std", "/", "3.0", "\n", "\n", "positive_steps", "=", "[", "i", "*", "step_size", "for", "i", "in", "range", "(", "1", ",", "4", ")", "]", "\n", "negative_steps", "=", "sorted", "(", "list", "(", "-", "1", "*", "np", ".", "array", "(", "positive_steps", ")", ")", ")", "\n", "path", "=", "negative_steps", "+", "[", "0", "]", "+", "positive_steps", "\n", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder._plot_latent_traversal_helper": [[412, 460], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.get_std_path", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.tight_layout", "len", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "enumerate", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "x1.squeeze", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "axs[].imshow", "axs[].set_xticks", "axs[].set_yticks", "x1.unsqueeze", "cci_variational_autoencoder.CCIVariationalAutoEncoder.shift_latent", "z.clone().cpu().detach", "torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.decoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze().detach().numpy", "axs[].set_title", "axs[].set_title", "z.clone().cpu", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze().detach", "z.clone", "cci_variational_autoencoder.CCIVariationalAutoEncoder.squeeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_std_path", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.shift_latent"], ["", "def", "_plot_latent_traversal_helper", "(", "\n", "self", ",", "X", ",", "index", ",", "num_std", ",", "train_set", ",", "save_name", ",", "fixed_range", "\n", ")", ":", "\n", "        ", "title", "=", "\"Training\"", "if", "train_set", "else", "\"Test\"", "\n", "\n", "traversal_path", "=", "CCIVariationalAutoEncoder", ".", "get_std_path", "(", "num_std", ")", "\n", "num_subplots", "=", "len", "(", "traversal_path", ")", "+", "1", "\n", "\n", "x1", ",", "x2", ",", "p", "=", "X", "[", "index", "]", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "self", ".", "z_dim", ",", "num_subplots", ",", "figsize", "=", "(", "20", ",", "60", ")", ")", "\n", "\n", "for", "dim", "in", "range", "(", "self", ".", "z_dim", ")", ":", "\n", "            ", "axs", "[", "dim", ",", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "dim", ",", "0", "]", ".", "set_title", "(", "f\"{title}: x1, latent {dim}\"", ")", "\n", "\n", "axs", "[", "dim", ",", "0", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "dim", ",", "0", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "_", ",", "mu", ",", "log_var", "=", "self", ".", "model", "(", "x1", ".", "unsqueeze", "(", "0", ")", ")", "\n", "z", "=", "mu", "\n", "\n", "", "for", "i", ",", "step", "in", "enumerate", "(", "traversal_path", ")", ":", "\n", "                ", "if", "not", "fixed_range", ":", "\n", "                    ", "z_shifted", "=", "CCIVariationalAutoEncoder", ".", "shift_latent", "(", "\n", "z", ",", "dim", ",", "step", ",", "log_var", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "z_shifted", "=", "z", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "z_shifted", "[", "0", "]", "[", "dim", "]", "=", "step", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "reconstruction", "=", "self", ".", "model", ".", "decoder", "(", "z_shifted", ")", "\n", "", "axs", "[", "dim", ",", "i", "+", "1", "]", ".", "imshow", "(", "reconstruction", ".", "squeeze", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "if", "not", "fixed_range", ":", "\n", "                    ", "axs", "[", "dim", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"std {step:.1f}\"", ")", "\n", "", "else", ":", "\n", "                    ", "axs", "[", "dim", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"{step:.1f}\"", ")", "\n", "\n", "", "axs", "[", "dim", ",", "i", "+", "1", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "dim", ",", "i", "+", "1", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "if", "save_name", ":", "\n", "# close figure to speed up saving", "\n", "            ", "plt", ".", "savefig", "(", "save_name", ",", "bbox_inches", "=", "\"tight\"", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.shift_latent": [[461, 468], ["torch.exp", "z.clone().cpu().detach", "z.clone().cpu", "z.clone"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "shift_latent", "(", "z", ",", "dim", ",", "num_std", ",", "log_var", ")", ":", "\n", "        ", "\"\"\"Shifts latent by num_std along index of latent dimension\"\"\"", "\n", "std", "=", "torch", ".", "exp", "(", "log_var", "/", "2.0", ")", "\n", "z_shifted", "=", "z", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "z_shifted", "[", "0", "]", "[", "dim", "]", "+=", "num_std", "*", "std", "[", "0", "]", "[", "dim", "]", "\n", "return", "z_shifted", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_latents": [[469, 484], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "enumerate", "torch.cat", "cci_variational_autoencoder.CCIVariationalAutoEncoder.get_latent", "torch.cat.append", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_latent"], ["", "def", "get_latents", "(", "self", ",", "train_set", "=", "False", ",", "num_batches", "=", "1000", ")", ":", "\n", "        ", "\"\"\"Returns latent representation for random indices\"\"\"", "\n", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "loader", "=", "self", ".", "data", ".", "train_loader", "if", "train_set", "else", "self", ".", "data", ".", "test_loader", "\n", "\n", "Z", "=", "[", "]", "\n", "\n", "for", "i", ",", "(", "x1", ",", "x2", ",", "p", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "z", "=", "self", ".", "get_latent", "(", "x1", ")", "\n", "Z", ".", "append", "(", "z", ")", "\n", "if", "i", "==", "num_batches", ":", "\n", "                ", "break", "\n", "", "", "Z", "=", "torch", ".", "cat", "(", "Z", ")", "\n", "return", "Z", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.get_latent": [[485, 490], ["torch.no_grad", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.reparameterize"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.models.VAEBase.reparameterize"], ["", "def", "get_latent", "(", "self", ",", "x", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_", ",", "mu", ",", "var", "=", "self", ".", "model", "(", "x", ")", "\n", "z", "=", "self", ".", "model", ".", "reparameterize", "(", "mu", ",", "var", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_latent_variances": [[491, 516], ["range", "torch.stack().numpy", "len", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "torch.no_grad", "torch.cat", "torch.cat.var", "torch.stack().numpy.append", "torch.stack", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval", "datasets.datasets.transformations.transform", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "torch.cat.append", "datasets.transformations.transform.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "compute_latent_variances", "(", "self", ",", "n_samples", "=", "None", ")", ":", "\n", "        ", "\"\"\"Computes variance of latents across transformations of a sample\"\"\"", "\n", "if", "n_samples", "is", "None", ":", "\n", "            ", "n_samples", "=", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", "\n", "\n", "", "variances", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "            ", "x1", "=", "self", ".", "data", ".", "X_orig_test", "[", "i", "]", "\n", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "sample_latents", "=", "[", "]", "\n", "for", "param", "in", "self", ".", "data", ".", "transform_params", ":", "\n", "                    ", "x_transformed", "=", "transformations", ".", "transform", "(", "x1", ",", "param", ")", "\n", "_", ",", "mu", ",", "log_var", "=", "self", ".", "model", "(", "x_transformed", ".", "unsqueeze", "(", "0", ")", ")", "\n", "# use mean of latent", "\n", "z", "=", "mu", "\n", "sample_latents", ".", "append", "(", "z", ")", "\n", "", "sample_latents", "=", "torch", ".", "cat", "(", "sample_latents", ")", "\n", "sample_var", "=", "sample_latents", ".", "var", "(", "dim", "=", "0", ")", "\n", "variances", ".", "append", "(", "sample_var", ")", "\n", "\n", "", "", "variances", "=", "torch", ".", "stack", "(", "variances", ")", ".", "numpy", "(", ")", "\n", "return", "variances", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_latents_per_shape": [[517, 542], ["range", "torch.stack().numpy", "len", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval().cpu", "torch.stack().numpy.append", "torch.no_grad", "torch.cat", "torch.stack", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model.eval", "datasets.datasets.transformations.transform", "cci_variational_autoencoder.CCIVariationalAutoEncoder.model", "torch.cat.append", "datasets.transformations.transform.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "compute_latents_per_shape", "(", "self", ",", "n_samples", "=", "None", ")", ":", "\n", "        ", "\"\"\"Computes variance of latents across transformations of a sample\"\"\"", "\n", "if", "n_samples", "is", "None", ":", "\n", "            ", "n_samples", "=", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", "\n", "\n", "", "latents", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "            ", "x1", "=", "self", ".", "data", ".", "X_orig_test", "[", "i", "]", "\n", "self", ".", "model", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "sample_latents", "=", "[", "]", "\n", "for", "param", "in", "self", ".", "data", ".", "transform_params", ":", "\n", "                    ", "x_transformed", "=", "transformations", ".", "transform", "(", "x1", ",", "param", ")", "\n", "_", ",", "mu", ",", "log_var", "=", "self", ".", "model", "(", "x_transformed", ".", "unsqueeze", "(", "0", ")", ")", "\n", "# use mean of latent", "\n", "z", "=", "mu", "\n", "sample_latents", ".", "append", "(", "z", ")", "\n", "", "sample_latents", "=", "torch", ".", "cat", "(", "sample_latents", ")", "\n", "\n", "", "latents", ".", "append", "(", "sample_latents", ")", "\n", "\n", "", "latents", "=", "torch", ".", "stack", "(", "latents", ")", ".", "numpy", "(", ")", "\n", "return", "latents", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.pca_ranked_eigenvalues": [[543, 562], ["cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_latents_per_shape", "numpy.stack", "numpy.mean", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "numpy.stack.append", "numpy.sort"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.CCIVariationalAutoEncoder.compute_latents_per_shape"], ["", "def", "pca_ranked_eigenvalues", "(", "self", ",", "n_samples", "=", "None", ")", ":", "\n", "        ", "\"\"\"Returns average of ranked normalized eigenvalues for latents\"\"\"", "\n", "latents", "=", "self", ".", "compute_latents_per_shape", "(", "n_samples", "=", "n_samples", ")", "\n", "n_components", "=", "self", ".", "data", ".", "n_rotations", "+", "1", "\n", "aggregate_ranked_normalized_eigenvalues", "=", "[", "]", "\n", "\n", "for", "latent", "in", "latents", ":", "\n", "            ", "pca", "=", "PCA", "(", "n_components", "=", "n_components", ")", "\n", "pca", ".", "fit", "(", "latents", "[", "1", "]", ")", "\n", "ranked_normalized_eigenvalues", "=", "np", ".", "sort", "(", "pca", ".", "explained_variance_ratio_", ")", "[", ":", ":", "-", "1", "]", "\n", "aggregate_ranked_normalized_eigenvalues", ".", "append", "(", "\n", "ranked_normalized_eigenvalues", "\n", ")", "\n", "\n", "", "aggregate_ranked_normalized_eigenvalues", "=", "np", ".", "stack", "(", "\n", "aggregate_ranked_normalized_eigenvalues", "\n", ")", "\n", "average_var_explained", "=", "np", ".", "mean", "(", "aggregate_ranked_normalized_eigenvalues", ",", "axis", "=", "0", ")", "\n", "return", "average_var_explained", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.compute_mutual_info": [[564, 569], ["numpy.log().sum", "numpy.log"], "function", ["None"], ["", "", "def", "compute_mutual_info", "(", "variances", ")", ":", "\n", "    ", "\"\"\"Variances is a numpy array with shape (n_samples, z_dim)\"\"\"", "\n", "n", "=", "variances", ".", "shape", "[", "0", "]", "\n", "m_info", "=", "np", ".", "log", "(", "2", "*", "np", ".", "pi", "*", "variances", ")", ".", "sum", "(", "0", ")", "/", "(", "2.0", "*", "n", ")", "\n", "return", "m_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.load_data": [[571, 597], ["json.loads", "datasets.datasets.SimpleShapes", "datasets.datasets.ProjectiveSingleDigitMNIST", "ValueError"], "function", ["None"], ["", "def", "load_data", "(", "configs", ",", "path", ")", ":", "\n", "    ", "data_configs", "=", "json", ".", "loads", "(", "configs", "[", "\"data\"", "]", ")", "\n", "\n", "if", "\"shapes\"", "and", "\"2k-classes\"", "in", "path", ":", "\n", "        ", "data", "=", "datasets", ".", "SimpleShapes", "(", "\n", "configs", "[", "\"batch_size\"", "]", ",", "\n", "n_rotations", "=", "data_configs", "[", "\"n_rotations\"", "]", ",", "\n", "n_x_translations", "=", "data_configs", "[", "\"n_x_translations\"", "]", ",", "\n", "n_y_translations", "=", "data_configs", "[", "\"n_y_translations\"", "]", ",", "\n", "n_classes", "=", "2000", ",", "\n", "seed", "=", "0", ",", "\n", ")", "\n", "", "elif", "\"mnist\"", "in", "path", ":", "\n", "        ", "data", "=", "datasets", ".", "ProjectiveSingleDigitMNIST", "(", "\n", "configs", "[", "\"batch_size\"", "]", ",", "\n", "n_rotations", "=", "data_configs", "[", "\"n_rotations\"", "]", ",", "\n", "n_x_translations", "=", "data_configs", "[", "\"n_x_translations\"", "]", ",", "\n", "n_y_translations", "=", "data_configs", "[", "\"n_y_translations\"", "]", ",", "\n", "train_set_proportion", "=", "0.1", ",", "\n", "valid_set_proportion", "=", "0.1", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"data not found\"", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.cci_variational_autoencoder.load": [[599, 614], ["cci_variational_autoencoder.load_data", "cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.load_model", "open", "json.load", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load_data", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.load_model", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "def", "load", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"model_configs.json\"", ")", ")", "as", "f", ":", "\n", "        ", "configs", "=", "json", ".", "load", "(", "f", ")", "\n", "", "data", "=", "load_data", "(", "configs", ",", "path", ")", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "data", ",", "\n", "z_dim", "=", "configs", "[", "\"z_dim\"", "]", ",", "\n", "beta", "=", "configs", "[", "\"beta\"", "]", ",", "\n", "c_max", "=", "configs", "[", "\"c_max\"", "]", ",", "\n", "distribution", "=", "configs", "[", "\"distribution\"", "]", ",", "\n", "learning_rate", "=", "configs", "[", "\"learning_rate\"", "]", ",", "\n", "n_epochs", "=", "configs", "[", "\"n_epochs\"", "]", ",", "\n", ")", "\n", "model", ".", "load_model", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"model.pt\"", ")", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper": [[18, 33], ["os.listdir", "os.path.join", "sweep.startswith", "sweep.startswith", "numpy.min", "os.path.join", "distutils.dir_util.copy_tree", "numpy.load", "print", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["def", "save_best_validation_helper", "(", "folder", ",", "operator", ")", ":", "\n", "    ", "min_valid_loss", "=", "math", ".", "inf", "\n", "for", "sweep", "in", "os", ".", "listdir", "(", "folder", ")", ":", "\n", "        ", "if", "sweep", ".", "startswith", "(", "\"best\"", ")", "or", "sweep", ".", "startswith", "(", "\".DS_Store\"", ")", ":", "\n", "            ", "continue", "\n", "", "path", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "sweep", ",", "operator", ")", "\n", "try", ":", "\n", "            ", "valid_loss", "=", "np", ".", "min", "(", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"valid_losses.npy\"", ")", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "print", "(", "f\"run {sweep} missing for {operator}\"", ")", "\n", "continue", "\n", "", "if", "min_valid_loss", ">=", "valid_loss", ":", "\n", "            ", "min_valid_loss", "=", "valid_loss", "\n", "destination", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "\"best-validation\"", ",", "operator", ")", "\n", "copy_tree", "(", "path", ",", "destination", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_all_best_validation": [[35, 47], ["os.listdir", "os.path.join", "experiment.endswith", "save_best_validation.save_best_validation_helper", "save_best_validation.save_best_validation_helper", "experiment.endswith", "save_best_validation.save_best_validation_helper", "experiment.endswith", "save_best_validation.save_best_validation_helper", "save_best_validation.save_best_validation_helper", "save_best_validation.save_best_validation_helper"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.save_best_validation.save_best_validation_helper"], ["", "", "", "def", "save_all_best_validation", "(", "parent_folder", ")", ":", "\n", "    ", "for", "experiment", "in", "os", ".", "listdir", "(", "parent_folder", ")", ":", "\n", "        ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "parent_folder", ",", "experiment", ")", "\n", "if", "experiment", ".", "endswith", "(", "\"-sweep\"", ")", "and", "\"autoencoder\"", "in", "experiment", "and", "\"standard\"", "not", "in", "experiment", ":", "\n", "            ", "save_best_validation_helper", "(", "experiment_path", ",", "\"disentangled-operator\"", ")", "\n", "save_best_validation_helper", "(", "experiment_path", ",", "\"shift-operator\"", ")", "\n", "", "elif", "experiment", ".", "endswith", "(", "\"-sweep\"", ")", "and", "\"standard-autoencoder\"", "in", "experiment", ":", "\n", "            ", "save_best_validation_helper", "(", "experiment_path", ",", "\"standard-autoencoder\"", ")", "\n", "", "elif", "experiment", ".", "endswith", "(", "\"-sweep\"", ")", "and", "\"cci-vae\"", "in", "experiment", ":", "\n", "            ", "save_best_validation_helper", "(", "experiment_path", ",", "\"cci_vae\"", ")", "\n", "save_best_validation_helper", "(", "experiment_path", ",", "\"beta_vae\"", ")", "\n", "save_best_validation_helper", "(", "experiment_path", ",", "\"vae\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_x2_reconstructions": [[13, 56], ["matplotlib.subplots", "fig.suptitle", "enumerate", "len", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "model", "x1.squeeze", "x2.squeeze", "model.cpu().detach().numpy().reshape", "x1.unsqueeze", "x2.unsqueeze", "model", "x1.unsqueeze", "model.cpu().detach().numpy", "model.cpu().detach", "model.cpu"], "function", ["None"], ["def", "plot_x2_reconstructions", "(", "\n", "pairs", ",", "model", ",", "indices", ",", "train_set", ",", "save_name", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Plots sample x2 reconstructions based on indices\n    \n    Args:\n        pairs (datasets.Pairs): contains x1, x2, and params.\n        model (function): callable f(x1) = x1_reconstruction\n        indices (list of ints): indices for samples to plot\n        train_set (bool): if true title is plotted with train otherwise test.\n        save_name (str): indicates path where images should be saved. \n    \"\"\"", "\n", "title", "=", "\"Training Reconstruction\"", "if", "train_set", "else", "\"Test Reconstruction\"", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "len", "(", "indices", ")", ",", "3", ",", "figsize", "=", "(", "6", ",", "12", ")", ")", "\n", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "16", ")", "\n", "for", "i", ",", "sample_idx", "in", "enumerate", "(", "indices", ")", ":", "\n", "        ", "x1", ",", "x2", ",", "params", "=", "pairs", "[", "sample_idx", "]", "\n", "n_pixels", "=", "x1", ".", "shape", "[", "1", "]", "\n", "\n", "try", ":", "\n", "# for weakly supervised autoencoder", "\n", "            ", "x2_reconstruction", "=", "model", "(", "x1", ".", "unsqueeze", "(", "0", ")", ",", "x2", ".", "unsqueeze", "(", "0", ")", ",", "params", ")", "\n", "", "except", "TypeError", ":", "\n", "# for real autoencoder", "\n", "            ", "x2_reconstruction", "=", "model", "(", "x1", ".", "unsqueeze", "(", "0", ")", ",", "params", ")", "\n", "\n", "", "axs", "[", "i", "]", "[", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "i", "]", "[", "0", "]", ".", "set_title", "(", "\"x1\"", ")", "\n", "\n", "axs", "[", "i", "]", "[", "1", "]", ".", "imshow", "(", "x2", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "i", "]", "[", "1", "]", ".", "set_title", "(", "\"x2\"", ")", "\n", "\n", "axs", "[", "i", "]", "[", "2", "]", ".", "imshow", "(", "\n", "x2_reconstruction", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "n_pixels", ",", "n_pixels", ")", "\n", ")", "\n", "axs", "[", "i", "]", "[", "2", "]", ".", "set_title", "(", "\"x2 from tranformed z1\"", ")", "\n", "\n", "", "if", "save_name", ":", "\n", "        ", "plt", ".", "savefig", "(", "f\"{save_name}.png\"", ",", "dpi", "=", "300", ",", "bbox_inches", "=", "\"tight\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_x1_reconstructions": [[58, 90], ["matplotlib.subplots", "fig.suptitle", "enumerate", "len", "model().cpu().detach().numpy", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "x1.squeeze", "model().cpu().detach().numpy.reshape", "model().cpu().detach", "model().cpu", "model", "x1.unsqueeze"], "function", ["None"], ["", "", "def", "plot_x1_reconstructions", "(", "pairs", ",", "model", ",", "indices", ",", "train_set", ",", "save_name", ")", ":", "\n", "    ", "\"\"\"\n    Plots sample x2 reconstructions based on indices\n    \n    Args:\n        pairs (datasets.Pairs): contains x1, x2, and params.\n        model (function): callable f(x1) = x1_reconstruction\n        indices (list of ints): indices for samples to plot\n        train_set (bool): if true title is plotted with train otherwise test.\n        save_name (str): indicates path where images should be saved. \n    \"\"\"", "\n", "title", "=", "\"Training Reconstructions\"", "if", "train_set", "else", "\"Test Reconstructions\"", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "len", "(", "indices", ")", ",", "2", ",", "figsize", "=", "(", "5", ",", "12", ")", ")", "\n", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "16", ")", "\n", "\n", "for", "i", ",", "sample_idx", "in", "enumerate", "(", "indices", ")", ":", "\n", "        ", "x1", ",", "x2", ",", "params", "=", "pairs", "[", "sample_idx", "]", "\n", "n_pixels", "=", "x1", ".", "shape", "[", "1", "]", "\n", "\n", "x1_reconstruction", "=", "model", "(", "x1", ".", "unsqueeze", "(", "0", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "axs", "[", "i", "]", "[", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "i", "]", "[", "0", "]", ".", "set_title", "(", "\"x1\"", ")", "\n", "\n", "axs", "[", "i", "]", "[", "1", "]", ".", "imshow", "(", "x1_reconstruction", ".", "reshape", "(", "n_pixels", ",", "n_pixels", ")", ")", "\n", "axs", "[", "i", "]", "[", "1", "]", ".", "set_title", "(", "\"x1 reconstruction\"", ")", "\n", "\n", "", "if", "save_name", ":", "\n", "        ", "plt", ".", "savefig", "(", "f\"{save_name}.png\"", ",", "dpi", "=", "300", ",", "bbox_inches", "=", "\"tight\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_rotations": [[92, 137], ["matplotlib.subplots", "fig.suptitle", "enumerate", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "plot.get_all_transformations", "enumerate", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "x1.squeeze", "axs[].imshow", "axs[].set_xticks", "axs[].set_yticks", "model.reconstruct_x2", "model.reconstruct_transformed_x1", "model.reconstruct_transformed_x1.squeeze", "axs[].set_title", "x1.unsqueeze", "x1.unsqueeze"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.get_all_transformations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.reconstruct_x2", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruct_transformed_x1"], ["", "", "def", "plot_rotations", "(", "\n", "X", ",", "\n", "model", ",", "\n", "n_transformations", ",", "\n", "title", ",", "\n", "save_name", "=", "None", ",", "\n", "param_name", "=", "\"angle\"", ",", "\n", "use_latent_op", "=", "True", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Plots all rotated reconstructions for given samples\"\"\"", "\n", "font_size", "=", "18", "\n", "degree_sign", "=", "\"\\N{DEGREE SIGN}\"", "\n", "n_samples", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "n_samples", ",", "n_transformations", "+", "2", ",", "figsize", "=", "(", "16", ",", "12", ")", ")", "\n", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "16", ")", "\n", "\n", "for", "sample_i", ",", "x1", "in", "enumerate", "(", "X", ")", ":", "\n", "        ", "axs", "[", "sample_i", ",", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_title", "(", "\"original\"", ",", "fontsize", "=", "font_size", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "transformation_params", "=", "get_all_transformations", "(", "param_name", ",", "n_transformations", ")", "\n", "\n", "for", "i", ",", "param", "in", "enumerate", "(", "transformation_params", ")", ":", "\n", "            ", "if", "use_latent_op", ":", "\n", "                ", "x2_reconstruction", "=", "model", ".", "reconstruct_x2", "(", "x1", ".", "unsqueeze", "(", "1", ")", ",", "param", ")", "\n", "", "else", ":", "\n", "                ", "x2_reconstruction", "=", "model", ".", "reconstruct_transformed_x1", "(", "\n", "x1", ".", "unsqueeze", "(", "1", ")", ",", "param", "\n", ")", "\n", "", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "imshow", "(", "x2_reconstruction", ".", "squeeze", "(", ")", ")", "\n", "if", "param_name", "==", "\"angle\"", ":", "\n", "                ", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "\n", "f\"{param.angle:0.0f}{degree_sign}\"", ",", "fontsize", "=", "font_size", "\n", ")", "\n", "", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "", "if", "save_name", ":", "\n", "        ", "plt", ".", "savefig", "(", "save_name", ",", "bbox_inches", "=", "\"tight\"", ",", "dpi", "=", "300", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_transformations_complex": [[138, 195], ["datasets.transformations.get_transform_params", "len", "matplotlib.subplots", "enumerate", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "x1.to.to", "model.encoder", "datasets.transformations.get_transform_params", "enumerate", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "x1.to.squeeze", "torch.LongTensor", "model.decoder().detach().cpu().numpy", "axs[].imshow", "axs[].set_xticks", "axs[].set_yticks", "int", "model.transform", "model.transform", "model.decoder().detach().cpu().numpy.squeeze", "axs[].set_title", "torch.LongTensor", "model.decoder().detach().cpu", "axs[].set_title", "len", "axs[].set_title", "axs[].set_title", "model.decoder().detach", "model.decoder"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "", "def", "plot_transformations_complex", "(", "\n", "X", ",", "\n", "model", ",", "\n", "title", ",", "\n", "save_name", "=", "None", ",", "\n", "param_name", "=", "\"angle\"", ",", "\n", "supervised", "=", "False", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Plots all rotated reconstructions for given samples\"\"\"", "\n", "font_size", "=", "18", "\n", "degree_sign", "=", "\"\\N{DEGREE SIGN}\"", "\n", "n_samples", "=", "X", ".", "shape", "[", "0", "]", "\n", "transformation_params", "=", "transformations", ".", "get_transform_params", "(", "model", ".", "data", ".", "n_rotations", ",", "\n", "model", ".", "data", ".", "n_x_translations", ",", "model", ".", "data", ".", "n_y_translations", ",", "(", "1.0", ",", ")", ")", "\n", "n_transformations", "=", "len", "(", "[", "i", "for", "i", "in", "transformation_params", "]", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "n_samples", ",", "n_transformations", "+", "1", ",", "figsize", "=", "(", "16", ",", "int", "(", "12", "/", "5.", "*", "len", "(", "X", ")", ")", ")", ")", "\n", "\n", "for", "sample_i", ",", "x1", "in", "enumerate", "(", "X", ")", ":", "\n", "        ", "axs", "[", "sample_i", ",", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_title", "(", "\"original\"", ",", "fontsize", "=", "font_size", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "x1", "=", "x1", ".", "to", "(", "model", ".", "device", ")", "\n", "z1", "=", "model", ".", "encoder", "(", "x1", ")", "\n", "\n", "transformation_params", "=", "transformations", ".", "get_transform_params", "(", "model", ".", "data", ".", "n_rotations", ",", "\n", "model", ".", "data", ".", "n_x_translations", ",", "model", ".", "data", ".", "n_y_translations", ",", "(", "1.0", ",", ")", ")", "\n", "for", "i", ",", "param", "in", "enumerate", "(", "transformation_params", ")", ":", "\n", "            ", "shifts", "=", "torch", ".", "LongTensor", "(", "[", "[", "i", "]", "]", ")", "\n", "if", "supervised", ":", "\n", "                ", "z_transformed", "=", "model", ".", "transform", "(", "z1", ",", "[", "shifts", "]", ")", "\n", "", "else", ":", "\n", "                ", "z_transformed", "=", "model", ".", "transform", "(", "z1", ",", "torch", ".", "LongTensor", "(", "[", "[", "i", "]", "]", ")", ")", "\n", "", "x2_reconstruction", "=", "model", ".", "decoder", "(", "z_transformed", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "imshow", "(", "x2_reconstruction", ".", "squeeze", "(", ")", ")", "\n", "if", "param_name", "==", "\"angle\"", ":", "\n", "                ", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "\n", "f\"{param.angle:0.0f}{degree_sign}\"", ",", "fontsize", "=", "font_size", "\n", ")", "\n", "", "elif", "param_name", "==", "\"tx\"", ":", "\n", "                ", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"{param.shift_x:0.0f}\"", ",", "fontsize", "=", "font_size", ")", "\n", "", "elif", "param_name", "==", "'ty'", ":", "\n", "                ", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"{param.shift_y:0.0f}\"", ",", "fontsize", "=", "font_size", ")", "\n", "", "else", ":", "\n", "                ", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"{param.shift_x:0.0f},{param.shift_y:0.0f}\"", ",", "\n", "fontsize", "=", "font_size", ")", "\n", "\n", "", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "", "if", "save_name", ":", "\n", "        ", "plt", ".", "savefig", "(", "save_name", ",", "bbox_inches", "=", "\"tight\"", ",", "dpi", "=", "300", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.get_all_transformations": [[196, 203], ["datasets.transformations.get_transform_params", "datasets.transformations.get_transform_params", "datasets.transformations.get_transform_params"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params"], ["", "", "def", "get_all_transformations", "(", "param_name", ",", "n_transformations", ")", ":", "\n", "    ", "if", "param_name", "==", "\"angle\"", ":", "\n", "        ", "return", "transformations", ".", "get_transform_params", "(", "n_transformations", ",", "0", ",", "0", ",", "(", "1.0", ",", ")", ")", "\n", "", "elif", "param_name", "==", "\"shift_x\"", ":", "\n", "        ", "return", "transformations", ".", "get_transform_params", "(", "0", ",", "n_transformations", ",", "0", ",", "(", "1.0", ",", ")", ")", "\n", "", "elif", "param_name", "==", "\"shift_y\"", ":", "\n", "        ", "return", "transformations", ".", "get_transform_params", "(", "0", ",", "0", ",", "n_transformations", ",", "(", "1.0", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_rotations_translations": [[204, 248], ["matplotlib.subplots", "enumerate", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "x1.to.to", "model.encoder", "enumerate", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "x1.to.squeeze", "range", "numpy.random.randint", "int", "datasets.transformations.get_transform_params", "len", "model.return_shifts", "model.transform", "model.decoder().detach().cpu().numpy", "axs[].imshow", "axs[].set_title", "axs[].set_xticks", "axs[].set_yticks", "model.decoder().detach().cpu().numpy.squeeze", "len", "model.decoder().detach().cpu", "model.decoder().detach", "model.decoder"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.return_shifts", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "", "def", "plot_rotations_translations", "(", "X", ",", "model", ",", "n_transformations", ",", "n_rot", ",", "n_x", ",", "n_y", ",", "save_name", "=", "None", ")", ":", "\n", "    ", "degree_sign", "=", "\"\\N{DEGREE SIGN}\"", "\n", "n_samples", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "n_samples", ",", "n_transformations", "+", "2", ",", "figsize", "=", "(", "16", ",", "int", "(", "12", "/", "5.", "*", "len", "(", "X", ")", ")", ")", ")", "\n", "\n", "for", "sample_i", ",", "x1", "in", "enumerate", "(", "X", ")", ":", "\n", "        ", "axs", "[", "sample_i", ",", "0", "]", ".", "imshow", "(", "x1", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_title", "(", "\"original\"", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "0", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "x1", "=", "x1", ".", "to", "(", "model", ".", "device", ")", "\n", "transformation_params", "=", "[", "t", "for", "t", "in", "transformations", ".", "get_transform_params", "(", "n_rot", ",", "n_x", ",", "n_y", ",", "(", "1.0", ",", ")", ")", "]", "\n", "z", "=", "model", ".", "encoder", "(", "x1", ")", "\n", "angle", "=", "None", "\n", "shift_x", "=", "None", "\n", "shift_y", "=", "None", "\n", "\n", "t_list", "=", "[", "]", "\n", "i", "=", "0", "\n", "for", "_", ",", "t", "in", "enumerate", "(", "range", "(", "n_transformations", "+", "1", ")", ")", ":", "\n", "            ", "j", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "transformation_params", ")", ")", "\n", "param", "=", "transformation_params", "[", "j", "]", "\n", "\n", "if", "not", "t", "in", "t_list", ":", "\n", "                ", "shifts", "=", "model", ".", "return_shifts", "(", "[", "param", "]", ")", "\n", "z_transformed", "=", "model", ".", "transform", "(", "z", ",", "shifts", ")", "\n", "x2_reconstruction", "=", "model", ".", "decoder", "(", "z_transformed", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "imshow", "(", "x2_reconstruction", ".", "squeeze", "(", ")", ")", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_title", "(", "f\"{param.angle:0.0f}{degree_sign}\\n{param.shift_x:0.0f},{param.shift_y:0.0f}\"", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "sample_i", ",", "i", "+", "1", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "angle", "=", "param", ".", "angle", "\n", "shift_x", "=", "param", ".", "shift_x", "\n", "shift_y", "=", "param", ".", "shift_y", "\n", "i", "+=", "1", "\n", "", "if", "i", "+", "1", ">=", "n_transformations", "+", "2", ":", "\n", "                ", "break", "\n", "", "", "", "if", "save_name", ":", "\n", "        ", "plt", ".", "savefig", "(", "save_name", ",", "bbox_inches", "=", "\"tight\"", ",", "dpi", "=", "300", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.__init__": [[32, 78], ["autoencoder.AutoEncoder.set_seed", "autoencoder.AutoEncoder.get_transformation_param_name", "autoencoder.AutoEncoder.get_latent_operator", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_transformation_param_name", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_latent_operator"], ["def", "__init__", "(", "\n", "self", ",", "\n", "data", ",", "\n", "z_dim", "=", "700", ",", "\n", "seed", "=", "0", ",", "\n", "encoder_type", "=", "\"Linear\"", ",", "\n", "decoder_type", "=", "\"Linear\"", ",", "\n", "latent_operator_name", "=", "None", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "learning_rate", "=", "0.0005", ",", "\n", "n_epochs", "=", "5", ",", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "z_dim", "=", "z_dim", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "encoder_type", "=", "encoder_type", "\n", "self", ".", "decoder_type", "=", "decoder_type", "\n", "\n", "self", ".", "encoder", "=", "getattr", "(", "models", ",", "encoder_type", "+", "\"Encoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "decoder", "=", "getattr", "(", "models", ",", "decoder_type", "+", "\"Decoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "encoder_best_valid", "=", "self", ".", "encoder", "\n", "self", ".", "decoder_best_valid", "=", "self", ".", "decoder", "\n", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "self", ".", "transformation_param_name", "=", "self", ".", "get_transformation_param_name", "(", ")", "\n", "# function used for latent transformation", "\n", "self", ".", "use_latent_op", "=", "False", "if", "latent_operator_name", "is", "None", "else", "True", "\n", "self", ".", "latent_operator_name", "=", "latent_operator_name", "\n", "self", ".", "latent_operator", "=", "self", ".", "get_latent_operator", "(", "latent_operator_name", ")", "\n", "\n", "self", ".", "train_losses", "=", "[", "]", "\n", "self", ".", "valid_losses", "=", "[", "]", "\n", "self", ".", "final_test_loss", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.__repr__": [[79, 91], ["json.dumps", "str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "model", "=", "{", "\n", "\"encoder_type\"", ":", "self", ".", "encoder_type", ",", "\n", "\"decoder_type\"", ":", "self", ".", "decoder_type", ",", "\n", "\"z_dim\"", ":", "self", ".", "z_dim", ",", "\n", "\"latent_operator\"", ":", "self", ".", "latent_operator_name", ",", "\n", "\"batch_size\"", ":", "self", ".", "data", ".", "batch_size", ",", "\n", "\"learning_rate\"", ":", "self", ".", "learning_rate", ",", "\n", "\"n_epochs\"", ":", "self", ".", "n_epochs", ",", "\n", "\"data\"", ":", "str", "(", "self", ".", "data", ")", ",", "\n", "}", "\n", "return", "json", ".", "dumps", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save": [[92, 99], ["os.makedirs", "autoencoder.AutoEncoder.save_model_configs", "autoencoder.AutoEncoder.save_models", "autoencoder.AutoEncoder.save_losses", "autoencoder.AutoEncoder.save_plots"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_model_configs", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_models", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_losses", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_plots"], ["", "def", "save", "(", "self", ",", "path", ",", "indices", "=", "None", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "save_model_configs", "(", "path", ")", "\n", "self", ".", "save_models", "(", "path", ")", "\n", "\n", "self", ".", "save_losses", "(", "path", ")", "\n", "self", ".", "save_plots", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_model_configs": [[100, 108], ["autoencoder.AutoEncoder.__repr__", "json.loads", "os.path.join", "open", "json.dump"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.__repr__"], ["", "def", "save_model_configs", "(", "self", ",", "path", ")", ":", "\n", "        ", "model_configs_str", "=", "self", ".", "__repr__", "(", ")", "\n", "model_configs", "=", "json", ".", "loads", "(", "model_configs_str", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"model_configs.json\"", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "\"w\"", ")", "as", "outfile", ":", "\n", "            ", "json", ".", "dump", "(", "model_configs", ",", "outfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_models": [[109, 115], ["os.path.join", "torch.save", "os.path.join", "torch.save", "autoencoder.AutoEncoder.encoder.state_dict", "autoencoder.AutoEncoder.decoder.state_dict"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"encoder.pt\"", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "decoder_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"decoder.pt\"", ")", "\n", "torch", ".", "save", "(", "self", ".", "decoder", ".", "state_dict", "(", ")", ",", "decoder_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.load_models": [[116, 122], ["autoencoder.AutoEncoder.encoder.load_state_dict", "autoencoder.AutoEncoder.decoder.load_state_dict", "torch.load", "torch.load", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "def", "load_models", "(", "self", ",", "path", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"encoder.pt\"", ")", ",", "map_location", "=", "device", ")", "\n", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"decoder.pt\"", ")", ",", "map_location", "=", "device", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_losses": [[124, 133], ["os.path.join", "numpy.save", "os.path.join", "numpy.save", "os.path.join", "numpy.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_losses", "(", "self", ",", "path", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"train_losses.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "train_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"valid_losses.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "valid_losses", ")", "\n", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"test_loss.npy\"", ")", "\n", "np", ".", "save", "(", "file_path", ",", "self", ".", "final_test_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_plots": [[134, 159], ["os.path.join", "autoencoder.AutoEncoder.plot_x1_reconstructions", "os.path.join", "autoencoder.AutoEncoder.plot_multiple_rotations", "os.path.join", "autoencoder.AutoEncoder.plot_x2_reconstructions"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.plot_multiple_rotations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions"], ["", "def", "save_plots", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "for", "train_set", "in", "[", "True", ",", "False", "]", ":", "\n", "            ", "set_name", "=", "\"train\"", "if", "train_set", "else", "\"test\"", "\n", "\n", "x1_plot_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f\"x1_{set_name}_reconstructions\"", ")", "\n", "self", ".", "plot_x1_reconstructions", "(", "save_name", "=", "x1_plot_path", ",", "train_set", "=", "train_set", ")", "\n", "\n", "# store x2 reconstructions only when using supervised latent operator", "\n", "if", "self", ".", "use_latent_op", ":", "\n", "                ", "x2_plot_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f\"x2_{set_name}_reconstructions\"", ")", "\n", "self", ".", "plot_x2_reconstructions", "(", "\n", "save_name", "=", "x2_plot_path", ",", "train_set", "=", "train_set", "\n", ")", "\n", "\n", "", "transformation_name", "=", "(", "\n", "\"translations\"", "\n", "if", "self", ".", "transformation_param_name", "!=", "\"angle\"", "\n", "else", "\"rotations\"", "\n", ")", "\n", "multiple_rotations_path", "=", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "f\"x_{set_name}_{transformation_name}\"", "\n", ")", "\n", "self", ".", "plot_multiple_rotations", "(", "\n", "save_name", "=", "multiple_rotations_path", ",", "train_set", "=", "train_set", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save_best_validation": [[161, 165], ["autoencoder.AutoEncoder.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "", "def", "save_best_validation", "(", "self", ",", "path", ",", "indices", "=", "None", ")", ":", "\n", "        ", "self", ".", "encoder", "=", "self", ".", "encoder_best_valid", "\n", "self", ".", "decoder", "=", "self", ".", "decoder_best_valid", "\n", "self", ".", "save", "(", "path", ",", "indices", "=", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.set_seed": [[166, 173], ["torch.manual_seed", "numpy.random.seed", "random.seed", "torch.autograd.set_detect_anomaly"], "methods", ["None"], ["", "def", "set_seed", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets seed for random number generation\"\"\"", "\n", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "# Generate Dataset", "\n", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_transformation_param_name": [[174, 184], ["ValueError"], "methods", ["None"], ["", "def", "get_transformation_param_name", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the parameter used for transformation\"\"\"", "\n", "if", "self", ".", "data", ".", "n_rotations", ">", "1", ":", "\n", "            ", "return", "\"angle\"", "\n", "", "elif", "self", ".", "data", ".", "n_x_translations", ">", "1", ":", "\n", "            ", "return", "\"shift_x\"", "\n", "", "elif", "self", ".", "data", ".", "n_y_translations", ">", "1", ":", "\n", "            ", "return", "\"shift_y\"", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"No transformation found\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_latent_operator": [[185, 191], ["getattr", "getattr."], "methods", ["None"], ["", "", "def", "get_latent_operator", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"Returns function to performance transformation based name\"\"\"", "\n", "if", "name", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "latent_operator", "=", "getattr", "(", "latent_operators", ",", "name", ")", "\n", "return", "latent_operator", "(", "self", ".", "n_transformations", ",", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.n_transformations": [[192, 202], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_transformations", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "data", ".", "n_rotations", ">", "1", ":", "\n", "            ", "return", "self", ".", "data", ".", "n_rotations", "\n", "", "elif", "self", ".", "data", ".", "n_x_translations", ">", "1", ":", "\n", "            ", "return", "self", ".", "data", ".", "n_x_translations", "\n", "", "elif", "self", ".", "data", ".", "n_y_translations", ">", "1", ":", "\n", "            ", "return", "self", ".", "data", ".", "n_y_translations", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"No transformation found\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.train": [[203, 244], ["autoencoder.AutoEncoder.encoder.train().to", "autoencoder.AutoEncoder.decoder.train().to", "torch.optim.Adam", "range", "autoencoder.AutoEncoder.log_train_val_loss", "autoencoder.AutoEncoder.copy_models_validation", "autoencoder.AutoEncoder.compute_total_loss", "print", "list", "list", "autoencoder.AutoEncoder.set_log_frequency", "print", "autoencoder.AutoEncoder.log_train_val_loss", "enumerate", "autoencoder.AutoEncoder.encoder.train", "autoencoder.AutoEncoder.decoder.train", "autoencoder.AutoEncoder.encoder.parameters", "autoencoder.AutoEncoder.decoder.parameters", "print", "x1.to.to.to", "x2.to.to.to", "autoencoder.AutoEncoder.get_angles", "angles.to.to.to", "torch.optim.Adam.zero_grad", "loss_func", "loss_func.backward", "torch.optim.Adam.step", "loss_func.item", "print"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.log_train_val_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.copy_models_validation", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.set_log_frequency", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.log_train_val_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_angles"], ["", "", "def", "train", "(", "self", ",", "loss_func", ",", "stop_early", "=", "False", ",", "log_frequency", "=", "None", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "params", "=", "list", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "decoder", ".", "parameters", "(", ")", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "self", ".", "learning_rate", ")", "\n", "\n", "if", "log_frequency", "is", "None", ":", "\n", "            ", "log_frequency", "=", "self", ".", "set_log_frequency", "(", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "self", ".", "n_epochs", ")", ":", "\n", "\n", "            ", "running_loss", "=", "0.0", "\n", "print", "(", "f\"Epoch {epoch}\"", ")", "\n", "self", ".", "log_train_val_loss", "(", "loss_func", ")", "\n", "for", "i", ",", "(", "x1", ",", "x2", ",", "params", ")", "in", "enumerate", "(", "self", ".", "data", ".", "train_loader", ")", ":", "\n", "                ", "print", "(", "f\"Training batch {i}\"", ",", "end", "=", "\"\\r\"", ")", "\n", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "angles", "=", "self", ".", "get_angles", "(", "params", ")", "\n", "angles", "=", "angles", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "i", "%", "log_frequency", "==", "(", "log_frequency", "-", "1", ")", ":", "\n", "                    ", "print", "(", "f\"Running loss: {running_loss / log_frequency:0.3e}\"", ")", "\n", "running_loss", "=", "0.0", "\n", "if", "stop_early", ":", "\n", "                        ", "return", "None", "\n", "", "", "", "", "train_loss", ",", "valid_loss", "=", "self", ".", "log_train_val_loss", "(", "loss_func", ")", "\n", "self", ".", "copy_models_validation", "(", "valid_loss", ")", "\n", "# test loss per sample (using batch size 1)", "\n", "self", ".", "final_test_loss", "=", "self", ".", "compute_total_loss", "(", "\n", "self", ".", "data", ".", "test_loader_batch_1", ",", "loss_func", "\n", ")", "\n", "print", "(", "f\"Test Loss: {self.final_test_loss:0.3e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.set_log_frequency": [[245, 248], ["len"], "methods", ["None"], ["", "def", "set_log_frequency", "(", "self", ")", ":", "\n", "        ", "frequency", "=", "len", "(", "self", ".", "data", ".", "train_loader", ")", "//", "10", "\n", "return", "frequency", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.copy_models_validation": [[249, 254], ["numpy.min", "copy.deepcopy", "copy.deepcopy"], "methods", ["None"], ["", "def", "copy_models_validation", "(", "self", ",", "valid_loss", ")", ":", "\n", "        ", "\"\"\"Copies models with best validation\"\"\"", "\n", "if", "valid_loss", "<", "np", ".", "min", "(", "self", ".", "valid_losses", ")", ":", "\n", "            ", "self", ".", "encoder_best_valid", "=", "copy", ".", "deepcopy", "(", "self", ".", "encoder", ")", "\n", "self", ".", "decoder_best_valid", "=", "copy", ".", "deepcopy", "(", "self", ".", "decoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.log_train_val_loss": [[255, 263], ["autoencoder.AutoEncoder.compute_total_loss", "autoencoder.AutoEncoder.compute_total_loss", "autoencoder.AutoEncoder.train_losses.append", "autoencoder.AutoEncoder.valid_losses.append", "print"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss"], ["", "", "def", "log_train_val_loss", "(", "self", ",", "loss_func", ",", "show_print", "=", "True", ")", ":", "\n", "        ", "train_loss", "=", "self", ".", "compute_total_loss", "(", "self", ".", "data", ".", "train_loader", ",", "loss_func", ")", "\n", "valid_loss", "=", "self", ".", "compute_total_loss", "(", "self", ".", "data", ".", "valid_loader", ",", "loss_func", ")", "\n", "self", ".", "train_losses", ".", "append", "(", "train_loss", ")", "\n", "self", ".", "valid_losses", ".", "append", "(", "valid_loss", ")", "\n", "if", "show_print", ":", "\n", "            ", "print", "(", "f\"Total loss train: {train_loss:0.3e} validation: {valid_loss:0.3e}\"", ")", "\n", "", "return", "train_loss", ",", "valid_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_total_loss": [[264, 281], ["autoencoder.AutoEncoder.encoder.eval", "autoencoder.AutoEncoder.decoder.eval", "torch.stack().mean", "autoencoder.AutoEncoder.encoder.train", "autoencoder.AutoEncoder.decoder.train", "torch.no_grad", "x1.to.to.to", "x2.to.to.to", "autoencoder.AutoEncoder.get_angles", "angles.to.to.to", "losses.append", "torch.stack", "loss_func().cpu", "loss_func"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_angles"], ["", "def", "compute_total_loss", "(", "self", ",", "loader", ",", "loss_func", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "x1", ",", "x2", ",", "params", "in", "loader", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "angles", "=", "self", ".", "get_angles", "(", "params", ")", "\n", "angles", "=", "angles", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "losses", ".", "append", "(", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", ".", "cpu", "(", ")", ")", "\n", "", "", "mean_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "\n", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruction_mse_x1": [[282, 289], ["torch.nn.MSELoss", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.decoder", "torch.nn.MSELoss."], "methods", ["None"], ["", "def", "reconstruction_mse_x1", "(", "self", ",", "x1", ",", "x2", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Computes MSE x1 reconstruction loss\"\"\"", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "z", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "x1_reconstruction", "=", "self", ".", "decoder", "(", "z", ")", "\n", "loss", "=", "criterion", "(", "x1_reconstruction", ",", "x1", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruction_mse_transformed_z1": [[290, 302], ["torch.nn.MSELoss", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.decoder", "torch.nn.MSELoss.", "autoencoder.AutoEncoder.latent_operator", "torch.nn.MSELoss.", "autoencoder.AutoEncoder.decoder"], "methods", ["None"], ["", "def", "reconstruction_mse_transformed_z1", "(", "self", ",", "x1", ",", "x2", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Computes reconstruction MSE of x1 from z1 + x2 from transformed(z1)\"\"\"", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "z", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "x1_reconstruction", "=", "self", ".", "decoder", "(", "z", ")", "\n", "x1_reconstruction_loss", "=", "criterion", "(", "x1_reconstruction", ",", "x1", ")", "\n", "z_transformed", "=", "self", ".", "latent_operator", "(", "z", ",", "angles", ")", "\n", "x2_reconstruction_loss", "=", "criterion", "(", "self", ".", "decoder", "(", "z_transformed", ")", ",", "x2", ")", "\n", "\n", "loss", "=", "x1_reconstruction_loss", "+", "x2_reconstruction_loss", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruction_mse_frozen_z1": [[303, 310], ["torch.nn.MSELoss", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.decoder", "torch.nn.MSELoss."], "methods", ["None"], ["", "def", "reconstruction_mse_frozen_z1", "(", "self", ",", "x1", ",", "x2", ",", "angles", ")", ":", "\n", "        ", "\"\"\"Reconstruction loss of x2 from x1 without transformations\"\"\"", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "z", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "x2_reconstruction", "=", "self", ".", "decoder", "(", "z", ")", "\n", "loss", "=", "criterion", "(", "x2_reconstruction", ",", "x2", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.compute_mean_loss": [[311, 322], ["autoencoder.AutoEncoder.encoder.eval().cpu", "autoencoder.AutoEncoder.decoder.eval().cpu", "torch.stack().mean", "autoencoder.AutoEncoder.get_angles", "losses.append", "autoencoder.AutoEncoder.encoder.eval", "autoencoder.AutoEncoder.decoder.eval", "loss_func().cpu", "torch.stack", "loss_func"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_angles"], ["", "def", "compute_mean_loss", "(", "self", ",", "loss_func", ",", "data_loader", ")", ":", "\n", "        ", "\"\"\"Computes RMSE based on given loss function.\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "for", "x1", ",", "x2", ",", "params", "in", "data_loader", ":", "\n", "            ", "angles", "=", "self", ".", "get_angles", "(", "params", ")", "\n", "losses", ".", "append", "(", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", ".", "cpu", "(", ")", ")", "\n", "", "mean_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_angles": [[323, 338], ["torch.tensor", "torch.tensor", "datasets.datasets.transformations.shift_to_angle", "getattr"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.shift_to_angle"], ["", "def", "get_angles", "(", "self", ",", "params", ")", ":", "\n", "        ", "\"\"\"Returns tensor of angles for translations in x or rotations.\"\"\"", "\n", "param_name", "=", "self", ".", "transformation_param_name", "\n", "if", "param_name", "in", "(", "\"shift_x\"", ",", "\"shift_y\"", ")", ":", "\n", "            ", "angles", "=", "torch", ".", "tensor", "(", "\n", "[", "\n", "transformations", ".", "shift_to_angle", "(", "\n", "getattr", "(", "p", ",", "param_name", ")", ",", "self", ".", "n_transformations", ",", "\n", ")", "\n", "for", "p", "in", "params", "\n", "]", "\n", ")", "\n", "", "else", ":", "\n", "            ", "angles", "=", "torch", ".", "tensor", "(", "[", "p", ".", "angle", "for", "p", "in", "params", "]", ")", "\n", "", "return", "angles", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.run": [[339, 360], ["autoencoder.AutoEncoder.train", "ValueError"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "run", "(", "self", ",", "log_frequency", "=", "None", ",", "stop_early", "=", "False", ")", ":", "\n", "        ", "\"\"\"Runs experiment for autoencoder reconstruction.\n\n        Args:\n            log_frequency (int): number of batches after which to print loss\n            stop_early (bool): stop after a single log_frequency number of batches.\n                Useful for testing  without waiting for long training.\n        \"\"\"", "\n", "if", "self", ".", "latent_operator_name", "is", "None", ":", "\n", "            ", "loss_func", "=", "self", ".", "reconstruction_mse_x1", "\n", "", "elif", "self", ".", "latent_operator_name", "in", "[", "\"ShiftOperator\"", ",", "\"DisentangledRotation\"", "]", ":", "\n", "            ", "loss_func", "=", "self", ".", "reconstruction_mse_transformed_z1", "\n", "# TODO: what is frozen_rotation?", "\n", "", "elif", "self", ".", "latent_operator_name", "==", "\"frozen_rotation\"", ":", "\n", "            ", "loss_func", "=", "self", ".", "reconstruction_mse_frozen_z1", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"transformation type {self.transformation_type} not supported\"", "\n", ")", "\n", "", "self", ".", "train", "(", "\n", "loss_func", ",", "log_frequency", "=", "log_frequency", ",", "stop_early", "=", "stop_early", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruct_x1": [[362, 371], ["autoencoder.AutoEncoder.encoder.eval().cpu", "autoencoder.AutoEncoder.decoder.eval().cpu", "torch.no_grad", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.decoder", "autoencoder.AutoEncoder.encoder.eval", "autoencoder.AutoEncoder.decoder.eval"], "methods", ["None"], ["", "def", "reconstruct_x1", "(", "self", ",", "x1", ")", ":", "\n", "        ", "\"\"\"Reconstructs x1 using model\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "y", "=", "self", ".", "decoder", "(", "z", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruct_transformed_x1": [[372, 382], ["autoencoder.AutoEncoder.encoder.eval().cpu", "autoencoder.AutoEncoder.decoder.eval().cpu", "torch.no_grad", "datasets.datasets.transformations.transform", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.decoder", "autoencoder.AutoEncoder.encoder.eval", "autoencoder.AutoEncoder.decoder.eval", "x1.squeeze", "datasets.transformations.transform.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "reconstruct_transformed_x1", "(", "self", ",", "x1", ",", "param", ")", ":", "\n", "        ", "\"\"\"Reconstructs x1 transformed using model\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "x_transformed", "=", "transformations", ".", "transform", "(", "x1", ".", "squeeze", "(", "0", ")", ",", "param", ")", "\n", "z", "=", "self", ".", "encoder", "(", "x_transformed", ".", "unsqueeze", "(", "0", ")", ")", "\n", "y", "=", "self", ".", "decoder", "(", "z", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.reconstruct_x2": [[383, 394], ["autoencoder.AutoEncoder.encoder.eval().cpu", "autoencoder.AutoEncoder.decoder.eval().cpu", "torch.no_grad", "autoencoder.AutoEncoder.encoder", "autoencoder.AutoEncoder.get_angles().unsqueeze", "autoencoder.AutoEncoder.latent_operator", "autoencoder.AutoEncoder.decoder", "autoencoder.AutoEncoder.encoder.eval", "autoencoder.AutoEncoder.decoder.eval", "autoencoder.AutoEncoder.get_angles"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.get_angles"], ["", "def", "reconstruct_x2", "(", "self", ",", "x1", ",", "param", ")", ":", "\n", "        ", "\"\"\"Reconstructs x2 using model and latent transformation\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "angle", "=", "self", ".", "get_angles", "(", "[", "param", "]", ")", ".", "unsqueeze", "(", "0", ")", "\n", "z_transformed", "=", "self", ".", "latent_operator", "(", "z", ",", "angle", ")", "\n", "x2", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "", "return", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.plot_x1_reconstructions": [[395, 410], ["plot.plot_x1_reconstructions", "random.sample", "range", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions"], ["", "def", "plot_x1_reconstructions", "(", "self", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots x1 autoencoder reconstruction from z1.\n\n        Args:\n            pairs (datasets.Pairs): contains x1, x2, and params.\n            model (function): callable f(x1) = x1_reconstruction\n            indices (list of ints): indices for samples to plot\n            train_set (bool): if true title is plotted with train otherwise test.\n            save_name (str): indicates path where images should be saved. \n        \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "pairs", ")", ")", ",", "k", "=", "4", ")", "\n", "", "plot", ".", "plot_x1_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x1", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.plot_x2_reconstructions": [[412, 427], ["plot.plot_x2_reconstructions", "random.sample", "range", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions"], ["", "def", "plot_x2_reconstructions", "(", "self", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots x1, x2 and x2 autoencoder reconstruction from z1 rotated.\n\n        Args:\n            pairs (datasets.Pairs): contains x1, x2, and params.\n            model (function): callable f(x1) = x1_reconstruction\n            indices (list of ints): indices for samples to plot\n            train_set (bool): if true title is plotted with train otherwise test.\n            save_name (str): indicates path where images should be saved. \n        \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "pairs", ")", ")", ",", "k", "=", "4", ")", "\n", "", "plot", ".", "plot_x2_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x2", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.plot_multiple_rotations": [[429, 450], ["plot.plot_rotations", "min", "numpy.random.randint", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_rotations"], ["", "def", "plot_multiple_rotations", "(", "self", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots all rotated reconstructions for given samples\"\"\"", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "n_samples", "=", "min", "(", "len", "(", "self", ".", "data", ".", "X_orig_train", ")", ",", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", ")", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "n_samples", ",", "size", "=", "5", ")", "\n", "", "X", "=", "(", "\n", "self", ".", "data", ".", "X_orig_train", "[", "indices", "]", "\n", "if", "train_set", "\n", "else", "self", ".", "data", ".", "X_orig_test", "[", "indices", "]", "\n", ")", ".", "float", "(", ")", "\n", "title", "=", "(", "\n", "\"Translations\"", "if", "self", ".", "transformation_param_name", "!=", "\"angle\"", "else", "\"Rotations\"", "\n", ")", "\n", "plot", ".", "plot_rotations", "(", "\n", "X", ",", "\n", "self", ",", "\n", "self", ".", "n_transformations", ",", "\n", "title", ",", "\n", "save_name", "=", "save_name", ",", "\n", "param_name", "=", "self", ".", "transformation_param_name", ",", "\n", "use_latent_op", "=", "self", ".", "use_latent_op", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load_data": [[453, 479], ["json.loads", "datasets.datasets.SimpleShapes", "datasets.datasets.ProjectiveMNIST", "ValueError"], "function", ["None"], ["", "", "def", "load_data", "(", "configs", ",", "path", ")", ":", "\n", "    ", "data_configs", "=", "json", ".", "loads", "(", "configs", "[", "\"data\"", "]", ")", "\n", "\n", "if", "\"shapes\"", "and", "\"2k-classes\"", "in", "path", ":", "\n", "        ", "data", "=", "datasets", ".", "SimpleShapes", "(", "\n", "configs", "[", "\"batch_size\"", "]", ",", "\n", "n_rotations", "=", "data_configs", "[", "\"n_rotations\"", "]", ",", "\n", "n_x_translations", "=", "data_configs", "[", "\"n_x_translations\"", "]", ",", "\n", "n_y_translations", "=", "data_configs", "[", "\"n_y_translations\"", "]", ",", "\n", "n_classes", "=", "2000", ",", "\n", "seed", "=", "0", ",", "\n", ")", "\n", "", "elif", "\"mnist\"", "in", "path", ":", "\n", "        ", "data", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "configs", "[", "\"batch_size\"", "]", ",", "\n", "n_rotations", "=", "data_configs", "[", "\"n_rotations\"", "]", ",", "\n", "n_x_translations", "=", "data_configs", "[", "\"n_x_translations\"", "]", ",", "\n", "n_y_translations", "=", "data_configs", "[", "\"n_y_translations\"", "]", ",", "\n", "train_set_proportion", "=", "0.01", ",", "\n", "valid_set_proportion", "=", "0.01", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"data not found\"", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load": [[481, 495], ["autoencoder.load_data", "autoencoder.AutoEncoder", "autoencoder.AutoEncoder.load_models", "open", "json.load", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load_data", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.load_models", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "def", "load", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"model_configs.json\"", ")", ")", "as", "f", ":", "\n", "        ", "configs", "=", "json", ".", "load", "(", "f", ")", "\n", "", "data", "=", "load_data", "(", "configs", ",", "path", ")", "\n", "model_type", "=", "\"CCI\"", "if", "\"cci\"", "in", "path", "else", "\"Linear\"", "\n", "model", "=", "AutoEncoder", "(", "\n", "data", ",", "\n", "z_dim", "=", "configs", "[", "\"z_dim\"", "]", ",", "\n", "latent_operator_name", "=", "configs", "[", "\"latent_operator\"", "]", ",", "\n", "encoder_type", "=", "model_type", ",", "\n", "decoder_type", "=", "model_type", ",", "\n", ")", "\n", "model", ".", "load_models", "(", "path", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.__init__": [[36, 94], ["complex_shift_autoencoder.ComplexAutoEncoder.set_seed", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "range", "complex_shift_autoencoder.ComplexAutoEncoder.W_r.append", "complex_shift_autoencoder.ComplexAutoEncoder.W_i.append", "len", "len", "complex_shift_autoencoder.ComplexAutoEncoder.transforms.append", "len", "torch.nn.Linear().to", "torch.nn.Linear().to", "complex_shift_autoencoder.ComplexAutoEncoder.get_transformation", "getattr", "getattr", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_transformation"], ["def", "__init__", "(", "\n", "self", ",", "\n", "data", ",", "\n", "z_dim", "=", "405", ",", "\n", "seed", "=", "0", ",", "\n", "encoder_type", "=", "\"ComplexLinear\"", ",", "\n", "decoder_type", "=", "\"ComplexLinear\"", ",", "\n", "transformation_types", "=", "None", ",", "\n", "indexes", "=", "None", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "output_directory", "=", "\"output\"", ",", "\n", "save_name", "=", "\"\"", ",", "\n", "n_rotations", "=", "0", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1", ",", ")", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "z_dim", "=", "z_dim", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "encoder", "=", "getattr", "(", "models", ",", "encoder_type", "+", "\"Encoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "decoder", "=", "getattr", "(", "models", ",", "decoder_type", "+", "\"Decoder\"", ")", "(", "\n", "self", ".", "data", ".", "n_pixels", ",", "self", ".", "data", ".", "n_channels", ",", "z_dim", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "transformation_types", "=", "transformation_types", "\n", "self", ".", "W_r", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "W_i", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "transformation_types", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "W_r", ".", "append", "(", "torch", ".", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ",", "bias", "=", "False", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "self", ".", "W_i", ".", "append", "(", "torch", ".", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ",", "bias", "=", "False", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "\n", "", "cardinals", "=", "[", "\n", "n_rotations", "+", "1", ",", "\n", "n_x_translations", "+", "1", ",", "\n", "n_y_translations", "+", "1", ",", "\n", "len", "(", "scaling_factors", ")", ",", "\n", "]", "\n", "self", ".", "cardinals", "=", "cardinals", "\n", "\n", "# function used for transformation", "\n", "# indexes 0, 1, 2", "\n", "self", ".", "transforms", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "transformation_types", ")", ")", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "self", ".", "get_transformation", "(", "transformation_types", "[", "i", "]", ",", "indexes", "[", "i", "]", ")", ")", "\n", "\n", "", "self", ".", "output_dir", "=", "output_directory", "\n", "self", ".", "save_name", "=", "save_name", "\n", "self", ".", "best_epoch", "=", "0", "\n", "self", ".", "best_mse", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.set_seed": [[95, 102], ["torch.manual_seed", "numpy.random.seed", "numpy.random.seed", "random.seed", "torch.autograd.set_detect_anomaly"], "methods", ["None"], ["", "def", "set_seed", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets seed for random number generation\"\"\"", "\n", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "# Generate Dataset", "\n", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_transformation": [[103, 109], ["getattr", "getattr."], "methods", ["None"], ["", "def", "get_transformation", "(", "self", ",", "name", ",", "index", ")", ":", "\n", "        ", "\"\"\"Returns function to performance transformation based name\"\"\"", "\n", "if", "name", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "transformation", "=", "getattr", "(", "latent_operators", ",", "name", ")", "\n", "return", "transformation", "(", "self", ".", "cardinals", ",", "self", ".", "z_dim", ",", "self", ".", "device", ",", "unique_transfo", "=", "True", ",", "index", "=", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.return_shifts": [[110, 127], ["round", "round", "torch.LongTensor().t", "torch.LongTensor().t", "torch.LongTensor().t", "shifts.append", "shifts.append", "shifts.append", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "int"], "methods", ["None"], ["", "def", "return_shifts", "(", "self", ",", "params", ")", ":", "\n", "\n", "        ", "smallest_angle", "=", "360", "/", "(", "self", ".", "data", ".", "n_rotations", "+", "1", ")", "\n", "int_x", "=", "round", "(", "self", ".", "data", ".", "n_pixels", "/", "(", "self", ".", "data", ".", "n_x_translations", "+", "1", ")", ")", "\n", "int_y", "=", "round", "(", "self", ".", "data", ".", "n_pixels", "/", "(", "self", ".", "data", ".", "n_y_translations", "+", "1", ")", ")", "\n", "shifts_x", "=", "torch", ".", "LongTensor", "(", "[", "[", "param", ".", "shift_x", "/", "int_x", "for", "param", "in", "params", "]", "]", ")", ".", "t", "(", ")", "\n", "shifts_y", "=", "torch", ".", "LongTensor", "(", "[", "[", "param", ".", "shift_y", "/", "int_y", "for", "param", "in", "params", "]", "]", ")", ".", "t", "(", ")", "\n", "shifts_r", "=", "torch", ".", "LongTensor", "(", "[", "[", "int", "(", "param", ".", "angle", "/", "smallest_angle", ")", "for", "param", "in", "params", "]", "]", ")", ".", "t", "(", ")", "\n", "\n", "shifts", "=", "[", "]", "\n", "if", "self", ".", "data", ".", "n_rotations", ">", "0", ":", "\n", "            ", "shifts", ".", "append", "(", "shifts_r", ")", "\n", "", "if", "self", ".", "data", ".", "n_x_translations", ">", "0", ":", "\n", "            ", "shifts", ".", "append", "(", "shifts_x", ")", "\n", "", "if", "self", ".", "data", ".", "n_y_translations", ">", "0", ":", "\n", "            ", "shifts", ".", "append", "(", "shifts_y", ")", "\n", "", "return", "shifts", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.transform": [[128, 143], ["len", "range"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "z1", ",", "shifts", ")", ":", "\n", "        ", "N_transfo", "=", "len", "(", "self", ".", "transforms", ")", "\n", "#\u00a0shifts is now a tuple", "\n", "z_r", "=", "z1", "[", "0", "]", "\n", "z_i", "=", "z1", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "N_transfo", "-", "1", ",", "1", ")", ":", "\n", "            ", "z_transformed", "=", "self", ".", "transforms", "[", "i", "]", "(", "(", "z_r", ",", "z_i", ")", ",", "shifts", "[", "i", "]", ")", "\n", "z_r", "=", "z_transformed", "[", "0", "]", "\n", "z_i", "=", "z_transformed", "[", "1", "]", "\n", "z_r", "=", "self", ".", "W_r", "[", "i", "]", "(", "z_r", ")", "-", "self", ".", "W_i", "[", "i", "]", "(", "z_i", ")", "\n", "z_i", "=", "self", ".", "W_r", "[", "i", "]", "(", "z_i", ")", "+", "self", ".", "W_i", "[", "i", "]", "(", "z_r", ")", "\n", "\n", "", "z_transformed", "=", "self", ".", "transforms", "[", "N_transfo", "-", "1", "]", "(", "(", "z_r", ",", "z_i", ")", ",", "shifts", "[", "N_transfo", "-", "1", "]", ")", "\n", "\n", "return", "z_transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train": [[144, 190], ["complex_shift_autoencoder.ComplexAutoEncoder.encoder.train", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.train", "torch.optim.Adam", "torch.FloatTensor", "torch.FloatTensor", "len", "range", "list", "enumerate", "print", "complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss().detach().item", "print", "torch.FloatTensor.detach().numpy", "torch.FloatTensor.detach().numpy", "list", "complex_shift_autoencoder.ComplexAutoEncoder.W_i.parameters", "x1.to.to.to", "x2.to.to.to", "torch.optim.Adam.zero_grad", "loss_func", "loss_func.backward", "torch.optim.Adam.step", "complex_shift_autoencoder.ComplexAutoEncoder.update_state", "complex_shift_autoencoder.ComplexAutoEncoder.save_best_checkpoint", "list", "list", "complex_shift_autoencoder.ComplexAutoEncoder.W_r.parameters", "loss_func.item", "x1.to.to.size", "complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss().detach", "torch.FloatTensor.detach", "torch.FloatTensor.detach", "complex_shift_autoencoder.ComplexAutoEncoder.encoder.parameters", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.parameters", "torch.optim.Adam.state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.update_state", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.save_best_checkpoint", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss"], ["", "def", "train", "(", "self", ",", "loss_func", ",", "learning_rate", ",", "n_epochs", ",", "log_frequency", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "params", "=", "list", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "decoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "W_r", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "W_i", ".", "parameters", "(", ")", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "learning_rate", ")", "\n", "train_losses", "=", "torch", ".", "FloatTensor", "(", "n_epochs", ")", "\n", "valid_losses", "=", "torch", ".", "FloatTensor", "(", "n_epochs", ")", "\n", "best_mse", "=", "np", ".", "inf", "\n", "N_pairs", "=", "len", "(", "self", ".", "data", ".", "train_loader", ".", "dataset", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "            ", "epoch_loss", "=", "0", "\n", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "self", ".", "data", ".", "train_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "*", "x1", ".", "size", "(", "0", ")", "\n", "", "epoch_loss", "=", "epoch_loss", "/", "N_pairs", "\n", "print", "(", "f\"Epoch {epoch} Train loss: {epoch_loss:0.3e}\"", ")", "\n", "\n", "valid_mse", "=", "(", "\n", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "valid_loader", ")", "\n", ".", "detach", "(", ")", "\n", ".", "item", "(", ")", "\n", ")", "\n", "train_losses", "[", "epoch", "]", "=", "epoch_loss", "\n", "\n", "if", "valid_mse", "<", "best_mse", ":", "\n", "                ", "self", ".", "update_state", "(", "mse", "=", "valid_mse", ",", "epoch", "=", "epoch", ")", "\n", "best_mse", "=", "valid_mse", "\n", "file_name", "=", "\"checkpoint_{}.pth.tar\"", ".", "format", "(", "self", ".", "save_name", ")", "\n", "self", ".", "save_best_checkpoint", "(", "\n", "out_dir", "=", "self", ".", "output_dir", ",", "\n", "file_name", "=", "file_name", ",", "\n", "optimizer_state_dict", "=", "optimizer", ".", "state_dict", "(", ")", ",", "\n", ")", "\n", "\n", "", "print", "(", "f\"Epoch {epoch} validation loss: {valid_mse:0.3e}\"", ")", "\n", "valid_losses", "[", "epoch", "]", "=", "valid_mse", "\n", "", "return", "train_losses", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "valid_losses", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.reconstruct_x1": [[191, 201], ["complex_shift_autoencoder.ComplexAutoEncoder.encoder.eval", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.eval", "x1.to.to.to", "torch.no_grad", "complex_shift_autoencoder.ComplexAutoEncoder.encoder", "complex_shift_autoencoder.ComplexAutoEncoder.decoder"], "methods", ["None"], ["", "def", "reconstruct_x1", "(", "self", ",", "x1", ")", ":", "\n", "        ", "\"\"\"Reconstructs x1 using model\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "x1_reconstruction_r", "=", "self", ".", "decoder", "(", "z1", ")", "\n", "", "return", "x1_reconstruction_r", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.reconstruct_x2": [[202, 215], ["complex_shift_autoencoder.ComplexAutoEncoder.encoder.eval", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.eval", "x1.to.to.to", "x1.to.to.size", "torch.no_grad", "complex_shift_autoencoder.ComplexAutoEncoder.encoder", "complex_shift_autoencoder.ComplexAutoEncoder.return_shifts", "complex_shift_autoencoder.ComplexAutoEncoder.transform", "complex_shift_autoencoder.ComplexAutoEncoder.decoder"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.return_shifts", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "reconstruct_x2", "(", "self", ",", "x1", ",", "param", ")", ":", "\n", "        ", "\"\"\"Reconstructs x2 using model and latent transformation\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "batch_size", "=", "x1", ".", "size", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "shifts", "=", "self", ".", "return_shifts", "(", "[", "param", "]", ")", "\n", "z_transformed", "=", "self", ".", "transform", "(", "z1", ",", "shifts", ")", "\n", "x2_reconstruction_r", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "\n", "", "return", "x2_reconstruction_r", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions": [[216, 231], ["plot.plot_x1_reconstructions"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x1_reconstructions"], ["", "def", "plot_x1_reconstructions", "(", "\n", "self", ",", "indices", "=", "[", "10", ",", "2092", ",", "10299", ",", "13290", "]", ",", "train_set", "=", "False", ",", "save_name", "=", "None", "\n", ")", ":", "\n", "        ", "\"\"\"Plots x1 autoencoder reconstruction from z1.\n\n            Args:\n                pairs (datasets.Pairs): contains x1, x2, and params.\n                model (function): callable f(x1) = x1_reconstruction\n                indices (list of ints): indices for samples to plot\n                train_set (bool): if true title is plotted with train otherwise test.\n                save_name (str): indicates path where images should be saved. \n            \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "plot", ".", "plot_x1_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x1", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions": [[233, 248], ["plot.plot_x2_reconstructions"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions"], ["", "def", "plot_x2_reconstructions", "(", "\n", "self", ",", "indices", "=", "[", "10", ",", "2092", ",", "10299", ",", "13290", "]", ",", "train_set", "=", "False", ",", "save_name", "=", "None", "\n", ")", ":", "\n", "        ", "\"\"\"Plots x1, x2 and x2 autoencoder reconstruction from z1 rotated.\n\n        Args:\n            pairs (datasets.Pairs): contains x1, x2, and params.\n            model (function): callable f(x1) = x1_reconstruction\n            indices (list of ints): indices for samples to plot\n            train_set (bool): if true title is plotted with train otherwise test.\n            save_name (str): indicates path where images should be saved. \n        \"\"\"", "\n", "pairs", "=", "self", ".", "data", ".", "X_train", "if", "train_set", "else", "self", ".", "data", ".", "X_test", "\n", "plot", ".", "plot_x2_reconstructions", "(", "\n", "pairs", ",", "self", ".", "reconstruct_x2", ",", "indices", ",", "train_set", ",", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.reconstruction_mse_transformed_z1": [[250, 269], ["torch.nn.MSELoss", "x1.size", "complex_shift_autoencoder.ComplexAutoEncoder.encoder", "complex_shift_autoencoder.ComplexAutoEncoder.decoder", "torch.nn.MSELoss.", "x1_reconstruction_loss.mean.mean.mean", "complex_shift_autoencoder.ComplexAutoEncoder.return_shifts", "complex_shift_autoencoder.ComplexAutoEncoder.transform", "complex_shift_autoencoder.ComplexAutoEncoder.decoder", "torch.nn.MSELoss.", "x2_reconstruction_loss.mean.mean.mean"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.return_shifts", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "reconstruction_mse_transformed_z1", "(", "self", ",", "x1", ",", "x2", ",", "params", ")", ":", "\n", "        ", "\"\"\"Computes reconstruction MSE of x1 from z1 + x2 from transformed(z1), not using ground-truth angles\"\"\"", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "reduction", "=", "\"none\"", ")", "\n", "batch_size", "=", "x1", ".", "size", "(", "0", ")", "\n", "z1", "=", "self", ".", "encoder", "(", "x1", ")", "\n", "\n", "x1_reconstruction_r", "=", "self", ".", "decoder", "(", "z1", ")", "\n", "x1_reconstruction_loss", "=", "criterion", "(", "x1_reconstruction_r", ",", "x1", ")", "\n", "x1_reconstruction_loss", "=", "x1_reconstruction_loss", ".", "mean", "(", ")", "\n", "\n", "shifts", "=", "self", ".", "return_shifts", "(", "params", ")", "\n", "z_transformed", "=", "self", ".", "transform", "(", "z1", ",", "shifts", ")", "\n", "\n", "x2_reconstruction_r", "=", "self", ".", "decoder", "(", "z_transformed", ")", "\n", "x2_reconstruction_loss", "=", "criterion", "(", "x2_reconstruction_r", ",", "x2", ")", "\n", "x2_reconstruction_loss", "=", "x2_reconstruction_loss", ".", "mean", "(", ")", "\n", "\n", "loss", "=", "x1_reconstruction_loss", "+", "x2_reconstruction_loss", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_test_loss": [[270, 288], ["complex_shift_autoencoder.ComplexAutoEncoder.encoder.eval", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.eval", "complex_shift_autoencoder.ComplexAutoEncoder.encoder.train", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.train", "torch.no_grad", "enumerate", "torch.stack().sum", "float", "x1.to.to.to", "x2.to.to.to", "x1.to.to.size", "losses.append", "loss_func", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "compute_test_loss", "(", "self", ",", "loss_func", ",", "data_loader", ")", ":", "\n", "        ", "\"\"\"Computes RMSE based on given loss function.\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "N", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "bs", "=", "x1", ".", "size", "(", "0", ")", "\n", "loss_batch", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", "*", "bs", "\n", "N", "+=", "bs", "\n", "losses", ".", "append", "(", "loss_batch", ")", "\n", "", "", "test_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "sum", "(", ")", "/", "float", "(", "N", ")", "\n", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "return", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss": [[289, 304], ["complex_shift_autoencoder.ComplexAutoEncoder.encoder.eval", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.eval", "torch.stack().mean", "complex_shift_autoencoder.ComplexAutoEncoder.encoder.train", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.train", "torch.no_grad", "enumerate", "x1.to.to.to", "x2.to.to.to", "loss_func", "losses.append", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "compute_mean_loss", "(", "self", ",", "loss_func", ",", "data_loader", ")", ":", "\n", "        ", "\"\"\"Computes RMSE based on given loss function.\"\"\"", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "(", "x1", ",", "x2", ",", "angles", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "x1", "=", "x1", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "x2", "=", "x2", ".", "to", "(", "device", "=", "self", ".", "device", ")", "\n", "loss_batch", "=", "loss_func", "(", "x1", ",", "x2", ",", "angles", ")", "\n", "losses", ".", "append", "(", "loss_batch", ")", "\n", "", "", "mean_loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run": [[305, 321], ["complex_shift_autoencoder.ComplexAutoEncoder.train", "complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "print", "complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "print", "complex_shift_autoencoder.ComplexAutoEncoder.compute_test_loss", "print"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_mean_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_test_loss"], ["", "def", "run", "(", "\n", "self", ",", "learning_rate", "=", "0.0005", ",", "n_epochs", "=", "10", ",", "log_frequency", "=", "50", "\n", ")", ":", "\n", "        ", "\"\"\"Runs experiment for autoencoder reconstruction.\"\"\"", "\n", "loss_func", "=", "self", ".", "reconstruction_mse_transformed_z1", "\n", "train_loss", ",", "valid_loss", "=", "self", ".", "train", "(", "\n", "loss_func", ",", "learning_rate", ",", "n_epochs", ",", "log_frequency", "\n", ")", "\n", "\n", "train_mse", "=", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "train_loader", ")", "\n", "print", "(", "f\"Train MSE: {train_mse}\"", ")", "\n", "valid_mse", "=", "self", ".", "compute_mean_loss", "(", "loss_func", ",", "self", ".", "data", ".", "valid_loader", ")", "\n", "print", "(", "f\"Valid MSE: {valid_mse}\"", ")", "\n", "test_mse", "=", "self", ".", "compute_test_loss", "(", "loss_func", ",", "self", ".", "data", ".", "test_loader_batch_100", ")", "\n", "print", "(", "f\"Test MSE: {test_mse}\"", ")", "\n", "return", "train_loss", ",", "valid_loss", ",", "train_mse", ",", "valid_mse", ",", "test_mse", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.update_state": [[322, 325], ["None"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "mse", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "best_mse", "=", "mse", "\n", "self", ".", "best_epoch", "=", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.load_model": [[326, 336], ["torch.load", "complex_shift_autoencoder.ComplexAutoEncoder.encoder.load_state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.load_state_dict", "range", "complex_shift_autoencoder.ComplexAutoEncoder.W_r[].load_state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.W_i[].load_state_dict", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.load"], ["", "def", "load_model", "(", "self", ",", "path_to_checkpoint", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "path_to_checkpoint", ")", "\n", "self", ".", "best_epoch", "=", "checkpoint", "[", "\"best_epoch\"", "]", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "checkpoint", "[", "\"encoder_state_dict\"", "]", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "checkpoint", "[", "\"decoder_state_dict\"", "]", ")", "\n", "for", "t", "in", "range", "(", "len", "(", "self", ".", "transformation_types", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "W_r", "[", "t", "]", ".", "load_state_dict", "(", "checkpoint", "[", "\"W_r\"", "]", "[", "t", "]", ")", "\n", "self", ".", "W_i", "[", "t", "]", ".", "load_state_dict", "(", "checkpoint", "[", "\"W_i\"", "]", "[", "t", "]", ")", "\n", "", "self", ".", "best_mse", "=", "checkpoint", "[", "\"best_mse\"", "]", "\n", "return", "checkpoint", "[", "\"best_mse\"", "]", ",", "checkpoint", "[", "\"best_epoch\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_current_state": [[337, 350], ["range", "complex_shift_autoencoder.ComplexAutoEncoder.W_r[].state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.W_i[].state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.encoder.state_dict", "complex_shift_autoencoder.ComplexAutoEncoder.decoder.state_dict", "len"], "methods", ["None"], ["", "def", "get_current_state", "(", "self", ")", ":", "\n", "        ", "W_r", "=", "{", "}", "\n", "W_i", "=", "{", "}", "\n", "for", "t", "in", "range", "(", "len", "(", "self", ".", "transformation_types", ")", "-", "1", ")", ":", "\n", "            ", "W_r", "[", "t", "]", "=", "self", ".", "W_r", "[", "t", "]", ".", "state_dict", "(", ")", "\n", "W_i", "[", "t", "]", "=", "self", ".", "W_i", "[", "t", "]", ".", "state_dict", "(", ")", "\n", "", "return", "{", "\n", "\"encoder_state_dict\"", ":", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "\n", "\"decoder_state_dict\"", ":", "self", ".", "decoder", ".", "state_dict", "(", ")", ",", "\n", "\"W_r\"", ":", "W_r", ",", "\n", "\"W_i\"", ":", "W_i", ",", "\n", "\"best_epoch\"", ":", "self", ".", "best_epoch", ",", "\n", "\"best_mse\"", ":", "self", ".", "best_mse", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.save_best_checkpoint": [[352, 362], ["complex_shift_autoencoder.ComplexAutoEncoder.get_current_state", "os.path.join", "torch.save"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.get_current_state", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "save_best_checkpoint", "(", "self", ",", "out_dir", ",", "file_name", ",", "optimizer_state_dict", ")", ":", "\n", "        ", "\"\"\"\n        :param file_name: filename to save checkpoint in.\n        :param optimizer_state_dict: state of the optimizer.\n        :return: str to path where the model is saved.\n        \"\"\"", "\n", "state", "=", "self", ".", "get_current_state", "(", ")", "\n", "state", "[", "\"optimizer_state_dict\"", "]", "=", "optimizer_state_dict", "\n", "best_path", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "\"best_\"", "+", "file_name", ")", "\n", "torch", ".", "save", "(", "state", ",", "best_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations_stacked": [[363, 383], ["plot.plot_rotations_translations", "min", "numpy.random.randint", "numpy.random.randint", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_rotations_translations"], ["", "def", "plot_multiple_transformations_stacked", "(", "self", ",", "indices", ",", "n_plots", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "degree_sign", "=", "\"\\N{DEGREE SIGN}\"", "\n", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "n_samples", "=", "min", "(", "len", "(", "self", ".", "data", ".", "X_orig_train", ")", ",", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", ")", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "n_samples", ",", "size", "=", "5", ")", "\n", "", "X", "=", "(", "\n", "self", ".", "data", ".", "X_orig_train", "[", "indices", "]", "\n", "if", "train_set", "\n", "else", "self", ".", "data", ".", "X_orig_test", "[", "indices", "]", "\n", ")", ".", "float", "(", ")", "\n", "\n", "plot", ".", "plot_rotations_translations", "(", "\n", "X", ",", "\n", "self", ",", "\n", "n_plots", ",", "\n", "self", ".", "data", ".", "n_rotations", ",", "\n", "self", ".", "data", ".", "n_x_translations", ",", "\n", "self", ".", "data", ".", "n_y_translations", ",", "\n", "save_name", "=", "save_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations": [[385, 406], ["plot.plot_transformations_complex", "min", "numpy.random.randint", "numpy.random.randint", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.plot.plot_transformations_complex"], ["", "def", "plot_multiple_transformations", "(", "self", ",", "param_name", "=", "'angle'", ",", "indices", "=", "None", ",", "train_set", "=", "False", ",", "save_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"Plots all rotated reconstructions for given samples\"\"\"", "\n", "if", "indices", "is", "None", ":", "\n", "            ", "n_samples", "=", "min", "(", "len", "(", "self", ".", "data", ".", "X_orig_train", ")", ",", "len", "(", "self", ".", "data", ".", "X_orig_test", ")", ")", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "n_samples", ",", "size", "=", "5", ")", "\n", "", "X", "=", "(", "\n", "self", ".", "data", ".", "X_orig_train", "[", "indices", "]", "\n", "if", "train_set", "\n", "else", "self", ".", "data", ".", "X_orig_test", "[", "indices", "]", "\n", ")", ".", "float", "(", ")", "\n", "title", "=", "(", "\n", "\"Translations\"", "if", "param_name", "==", "'angle'", "!=", "\"angle\"", "else", "\"Rotations\"", "\n", ")", "\n", "\n", "plot", ".", "plot_transformations_complex", "(", "\n", "X", ",", "\n", "self", ",", "\n", "title", ",", "\n", "save_name", "=", "save_name", ",", "\n", "param_name", "=", "param_name", ",", "\n", "supervised", "=", "True", ",", "\n", ")", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu._fpart": [[20, 22], ["int"], "function", ["None"], ["def", "_fpart", "(", "x", ")", ":", "\n", "    ", "return", "x", "-", "int", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu._rfpart": [[23, 25], ["xiaolinwu._fpart"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu._fpart"], ["", "def", "_rfpart", "(", "x", ")", ":", "\n", "    ", "return", "1", "-", "_fpart", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.putpixel": [[26, 35], ["tuple", "img.putpixel", "map", "img.getpixel", "int", "round"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.putpixel"], ["", "def", "putpixel", "(", "img", ",", "xy", ",", "color", ",", "alpha", "=", "1", ")", ":", "\n", "    ", "\"\"\"Paints color over the background at the point xy in img.\n \n    Use alpha for blending. alpha=1 means a completely opaque foreground.\n \n    \"\"\"", "\n", "c", "=", "tuple", "(", "map", "(", "lambda", "bg", ",", "fg", ":", "int", "(", "round", "(", "alpha", "*", "fg", "+", "(", "1", "-", "alpha", ")", "*", "bg", ")", ")", ",", "\n", "img", ".", "getpixel", "(", "xy", ")", ",", "color", ")", ")", "\n", "img", ".", "putpixel", "(", "xy", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.draw_line": [[36, 69], ["xiaolinwu.draw_line.draw_endpoint"], "function", ["None"], ["", "def", "draw_line", "(", "img", ",", "p1", ",", "p2", ",", "color", ")", ":", "\n", "    ", "\"\"\"Draws an anti-aliased line in img from p1 to p2 with the given color.\"\"\"", "\n", "x1", ",", "y1", "=", "p1", "\n", "x2", ",", "y2", "=", "p2", "\n", "dx", ",", "dy", "=", "x2", "-", "x1", ",", "y2", "-", "y1", "\n", "steep", "=", "abs", "(", "dx", ")", "<", "abs", "(", "dy", ")", "\n", "p", "=", "lambda", "px", ",", "py", ":", "(", "(", "px", ",", "py", ")", ",", "(", "py", ",", "px", ")", ")", "[", "steep", "]", "\n", "\n", "if", "steep", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "dx", ",", "dy", "=", "y1", ",", "x1", ",", "y2", ",", "x2", ",", "dy", ",", "dx", "\n", "", "if", "x2", "<", "x1", ":", "\n", "        ", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "x2", ",", "x1", ",", "y2", ",", "y1", "\n", "\n", "", "grad", "=", "dy", "/", "dx", "\n", "intery", "=", "y1", "+", "_rfpart", "(", "x1", ")", "*", "grad", "\n", "def", "draw_endpoint", "(", "pt", ")", ":", "\n", "        ", "x", ",", "y", "=", "pt", "\n", "xend", "=", "round", "(", "x", ")", "\n", "yend", "=", "y", "+", "grad", "*", "(", "xend", "-", "x", ")", "\n", "xgap", "=", "_rfpart", "(", "x", "+", "0.5", ")", "\n", "px", ",", "py", "=", "int", "(", "xend", ")", ",", "int", "(", "yend", ")", "\n", "putpixel", "(", "img", ",", "p", "(", "px", ",", "py", ")", ",", "color", ",", "_rfpart", "(", "yend", ")", "*", "xgap", ")", "\n", "putpixel", "(", "img", ",", "p", "(", "px", ",", "py", "+", "1", ")", ",", "color", ",", "_fpart", "(", "yend", ")", "*", "xgap", ")", "\n", "return", "px", "\n", "\n", "", "xstart", "=", "draw_endpoint", "(", "p", "(", "*", "p1", ")", ")", "+", "1", "\n", "xend", "=", "draw_endpoint", "(", "p", "(", "*", "p2", ")", ")", "\n", "\n", "for", "x", "in", "range", "(", "xstart", ",", "xend", ")", ":", "\n", "        ", "y", "=", "int", "(", "intery", ")", "\n", "putpixel", "(", "img", ",", "p", "(", "x", ",", "y", ")", ",", "color", ",", "_rfpart", "(", "intery", ")", ")", "\n", "putpixel", "(", "img", ",", "p", "(", "x", ",", "y", "+", "1", ")", ",", "color", ",", "_fpart", "(", "intery", ")", ")", "\n", "intery", "+=", "grad", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform": [[38, 73], ["image.squeeze", "transformations.to_torch", "skimage.transform.rotate", "numpy.roll", "numpy.roll", "transformations.rescale", "int", "rescale.min", "int"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.to_torch", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.latent_operators.DisentangledRotation.rotate", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.rescale"], ["", "def", "transform", "(", "image", ",", "params", ")", ":", "\n", "    ", "\"\"\"\n    Applies transformations on a single image based on params.\n    Order of transformation is: rotate, translate, scale\n\n    Args:\n        image (np.array or torch.tensor): of shape [n_pixels, n_pixels]\n        params (Params): contains parameters for rotations, scaling etc.\n\n    Returns: image with transformations applied\n    \"\"\"", "\n", "assert", "(", "\n", "image", ".", "ndim", "==", "3", "\n", ")", ",", "f\"image must be of shape [n_channels, n_pixels, n_pixels] not {image.shape}\"", "\n", "\n", "image_transformed", "=", "image", ".", "squeeze", "(", ")", "\n", "# Rotate", "\n", "if", "params", ".", "angle", "not", "in", "(", "0.0", ",", "360.0", ")", ":", "\n", "# cval is the fill value.", "\n", "        ", "image_transformed", "=", "skimage", ".", "transform", ".", "rotate", "(", "\n", "image_transformed", ",", "params", ".", "angle", ",", "cval", "=", "image_transformed", ".", "min", "(", ")", "\n", ")", "\n", "\n", "# Translate", "\n", "# if edge is reached cut-off portion appears on other side", "\n", "", "if", "params", ".", "shift_x", "!=", "0.0", ":", "\n", "        ", "image_transformed", "=", "np", ".", "roll", "(", "image_transformed", ",", "int", "(", "params", ".", "shift_x", ")", ",", "axis", "=", "1", ")", "\n", "", "if", "params", ".", "shift_y", "!=", "0.0", ":", "\n", "        ", "image_transformed", "=", "np", ".", "roll", "(", "image_transformed", ",", "-", "int", "(", "params", ".", "shift_y", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# Scale", "\n", "", "if", "params", ".", "scale", "!=", "1.0", ":", "\n", "        ", "image_transformed", "=", "rescale", "(", "image_transformed", ",", "params", ".", "scale", ")", "\n", "", "image_transformed", "=", "to_torch", "(", "image", ",", "image_transformed", ")", "\n", "return", "image_transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.rescale": [[75, 82], ["skimage.transform.SimilarityTransform", "skimage.transform.warp", "skimage.transform.warp.min"], "function", ["None"], ["", "def", "rescale", "(", "image", ",", "scale", ")", ":", "\n", "    ", "\"\"\"Rescales images based on given scale factor\"\"\"", "\n", "scale_transform", "=", "skimage", ".", "transform", ".", "SimilarityTransform", "(", "scale", "=", "scale", ")", "\n", "image", "=", "skimage", ".", "transform", ".", "warp", "(", "\n", "image", ",", "scale_transform", ".", "inverse", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "image", ".", "min", "(", ")", ",", "\n", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.to_torch": [[84, 92], ["torch.from_numpy().float.reshape", "torch.is_tensor", "torch.is_tensor", "torch.from_numpy().float.float", "torch.from_numpy().float", "torch.from_numpy"], "function", ["None"], ["", "def", "to_torch", "(", "image", ",", "image_transformed", ")", ":", "\n", "    ", "\"\"\"Converts numpy matrix to torch tensor with correct shape\"\"\"", "\n", "image_transformed", "=", "image_transformed", ".", "reshape", "(", "image", ".", "shape", ")", "\n", "if", "torch", ".", "is_tensor", "(", "image_transformed", ")", ":", "\n", "        ", "return", "image_transformed", ".", "float", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "image", ")", ":", "\n", "        ", "image_transformed", "=", "torch", ".", "from_numpy", "(", "image_transformed", ")", ".", "float", "(", ")", "\n", "", "return", "image_transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params": [[94, 118], ["transformations.get_shifts", "transformations.get_shifts", "transformations.get_rotation_angles", "itertools.product", "transformations.Params"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_shifts", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_shifts", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_rotation_angles"], ["", "def", "get_transform_params", "(", "\n", "n_rotations", ",", "n_x_translations", ",", "n_y_translations", ",", "scaling_factors", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Returns transform params corresponding given values.\n    Translations subdivide translation interval.\n\n    Args:\n        n_rotations (int): number of subdivisions of 360 to apply. \n        n_x_translations (int): number of shifts along x-axis\n        n_y_translations (int): number of shifts along y-axis\n        scaling_factors (list or tuple floats): representing the scaling factors to use\n\n    Returns: Params object\n    \"\"\"", "\n", "shifts_x", "=", "get_shifts", "(", "n_x_translations", ",", "TRANSLATION_INTERVAL", ")", "\n", "shifts_y", "=", "get_shifts", "(", "n_y_translations", ",", "TRANSLATION_INTERVAL", ")", "\n", "\n", "for", "angle", "in", "get_rotation_angles", "(", "n_rotations", ")", ":", "\n", "        ", "for", "shift_x", ",", "shift_y", "in", "itertools", ".", "product", "(", "shifts_x", ",", "shifts_y", ")", ":", "\n", "            ", "for", "scale", "in", "scaling_factors", ":", "\n", "                ", "params", "=", "Params", "(", "\n", "angle", "=", "angle", ",", "shift_x", "=", "shift_x", ",", "shift_y", "=", "shift_y", ",", "scale", "=", "scale", "\n", ")", "\n", "yield", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_shifts": [[120, 136], ["round", "range"], "function", ["None"], ["", "", "", "", "def", "get_shifts", "(", "n_translations", ",", "interval", ")", ":", "\n", "    ", "\"\"\"Returns shifts along given axis by dividing interval.\n\n    Args:\n        interval (list of ints): [0, n_pixels]\n        n_translations (int): should be divisible by n_pixels\n    \"\"\"", "\n", "if", "n_translations", "==", "0", ":", "\n", "        ", "return", "[", "0", "]", "\n", "", "elif", "n_translations", "==", "1", ":", "\n", "        ", "return", "[", "0", ",", "interval", "[", "1", "]", "//", "2", "]", "\n", "\n", "", "min_shift", "=", "round", "(", "interval", "[", "1", "]", "/", "(", "n_translations", "+", "1", ")", ")", "\n", "steps", "=", "[", "n", "*", "min_shift", "for", "n", "in", "range", "(", "n_translations", "+", "1", ")", "]", "\n", "\n", "return", "steps", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_rotation_angles": [[138, 146], ["range"], "function", ["None"], ["", "def", "get_rotation_angles", "(", "n_rotations", ")", ":", "\n", "    ", "\"\"\"Yields rotation angles based on subdivisions given.\n    Example: \n    >>> get_rotation_angles(2) => [0.0, 120.0, 240.0]\n    \"\"\"", "\n", "min_angle", "=", "360.0", "/", "(", "n_rotations", "+", "1", ")", "\n", "for", "n", "in", "range", "(", "n_rotations", "+", "1", ")", ":", "\n", "        ", "yield", "min_angle", "*", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.shift_to_angle": [[148, 157], ["float"], "function", ["None"], ["", "", "def", "shift_to_angle", "(", "shift_val", ",", "n_transformations", ")", ":", "\n", "    ", "\"\"\"Returns the angle corresponding to the shift_val.\n    Example: [0, 32], shift_val = 4, we should get 4 / 32 * 360\n    \"\"\"", "\n", "if", "shift_val", "==", "TRANSLATION_INTERVAL", "[", "1", "]", ":", "\n", "        ", "return", "0.0", "\n", "", "shift_ratio", "=", "float", "(", "shift_val", ")", "/", "TRANSLATION_INTERVAL", "[", "1", "]", "\n", "angle", "=", "360.0", "*", "shift_ratio", "\n", "return", "angle", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.MyDataset.__init__": [[67, 78], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "V", ",", "transform", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            csv_file (string): Path to the csv file with annotations.\n            root_dir (string): Directory with all the images.\n            transform (callable, optional): Optional transform to be applied\n                on a sample.\n        \"\"\"", "\n", "# self.root = ts.root", "\n", "# self.transform = transforms.ToTensor()", "\n", "self", ".", "V", "=", "V", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.MyDataset.__len__": [[79, 81], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "V", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.MyDataset.__getitem__": [[82, 87], ["tuple", "pdb.set_trace", "range", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "tuple", "(", "[", "self", ".", "V", "[", "v", "]", "[", "idx", "]", "for", "v", "in", "range", "(", "len", "(", "self", ".", "V", ")", ")", "]", ")", "\n", "", "except", ":", "\n", "            ", "pdb", ".", "set_trace", "(", ")", "\n", "# return (self.transform(self.train_data[idx,:,:,:]),self.train_labels[idx])", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.generate_images_from_coords": [[20, 47], ["list", "range", "PIL.Image.new", "range", "list.append", "xiaolinwu.draw_line", "xiaolinwu.draw_line", "numpy.array", "xiaolinwu.draw_line", "xiaolinwu.draw_line"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.draw_line", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.draw_line", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.draw_line", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.xiaolinwu.draw_line"], ["def", "generate_images_from_coords", "(", "NPX", ",", "NP", ",", "C", ",", "cols", ")", ":", "\n", "    ", "images", "=", "list", "(", ")", "\n", "for", "c", "in", "range", "(", "C", ".", "shape", "[", "2", "]", ")", ":", "\n", "        ", "img", "=", "Image", ".", "new", "(", "\"RGB\"", ",", "(", "NPX", ",", "NPX", ")", ",", "white", ")", "\n", "for", "p", "in", "range", "(", "NP", "-", "1", ")", ":", "\n", "            ", "if", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", "!=", "C", "[", "0", ",", "p", ",", "c", "]", ")", "or", "(", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", "!=", "C", "[", "1", ",", "p", ",", "c", "]", ")", ":", "\n", "                ", "draw_line", "(", "\n", "img", ",", "\n", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", ",", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", ")", ",", "\n", "(", "C", "[", "0", ",", "p", ",", "c", "]", ",", "C", "[", "1", ",", "p", ",", "c", "]", ")", ",", "\n", "cols", "[", "c", "]", ",", "\n", ")", "\n", "draw_line", "(", "\n", "img", ",", "\n", "(", "C", "[", "0", ",", "p", ",", "c", "]", ",", "C", "[", "1", ",", "p", ",", "c", "]", ")", ",", "\n", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", ",", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", ")", ",", "\n", "cols", "[", "c", "]", ",", "\n", ")", "\n", "", "", "if", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", "!=", "C", "[", "0", ",", "0", ",", "c", "]", ")", "or", "(", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", "!=", "C", "[", "1", ",", "0", ",", "c", "]", ")", ":", "\n", "            ", "draw_line", "(", "\n", "img", ",", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", ",", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", ")", ",", "(", "C", "[", "0", ",", "0", ",", "c", "]", ",", "C", "[", "1", ",", "0", ",", "c", "]", ")", ",", "cols", "[", "c", "]", "\n", ")", "\n", "draw_line", "(", "\n", "img", ",", "(", "C", "[", "0", ",", "0", ",", "c", "]", ",", "C", "[", "1", ",", "0", ",", "c", "]", ")", ",", "(", "C", "[", "0", ",", "p", "+", "1", ",", "c", "]", ",", "C", "[", "1", ",", "p", "+", "1", ",", "c", "]", ")", ",", "cols", "[", "c", "]", "\n", ")", "\n", "", "images", ".", "append", "(", "np", ".", "array", "(", "img", ")", ")", "\n", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.plot_and_save_grid": [[50, 62], ["numpy.zeros", "PIL.Image.fromarray", "Image.fromarray.save", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save"], ["", "def", "plot_and_save_grid", "(", "NPX", ",", "images", ",", "margin", "=", "1", ",", "name", "=", "\"FIGS/junk.png\"", ")", ":", "\n", "    ", "grid", "=", "np", ".", "zeros", "(", "(", "NPX", "+", "2", "*", "margin", ",", "NPX", "*", "NC", "+", "margin", "*", "NC", "+", "margin", ",", "3", ")", ")", "\n", "pointer", "=", "0", "\n", "for", "img", "in", "images", ":", "\n", "        ", "grid", "[", "\n", "margin", ":", "NPX", "+", "margin", ",", "0", "+", "pointer", "+", "margin", ":", "NPX", "+", "pointer", "+", "margin", ",", ":", "\n", "]", "=", "img", "\n", "pointer", "+=", "NPX", "+", "margin", "\n", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "(", "grid", ")", ")", ")", "\n", "im", ".", "save", "(", "name", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.pytorch_dataset": [[92, 97], ["data_utils.MyDataset", "torch.utils.data.DataLoader"], "function", ["None"], ["", "", "", "def", "pytorch_dataset", "(", "V", ",", "batch_size", ")", ":", "\n", "# order = np.random.permutation(NS)", "\n", "    ", "ts", "=", "MyDataset", "(", "V", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ts", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.generate_dataset": [[99, 129], ["numpy.random.randint", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.arange", "y.flatten.flatten", "y.flatten.astype", "data_utils.generate_images_from_coords", "numpy.mean", "C[].reshape", "np.array.mean"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.generate_images_from_coords"], ["", "def", "generate_dataset", "(", "NPX", ",", "NC", ",", "NP", ")", ":", "\n", "\n", "    ", "NS", "=", "NC", "*", "2", "# number of samples", "\n", "\n", "# coordinates of each classes of objects", "\n", "C", "=", "np", ".", "random", ".", "randint", "(", "0", "+", "NPX", "/", "6", ",", "NPX", "-", "1", "-", "NPX", "/", "6", ",", "(", "2", ",", "NP", ",", "NC", ")", ")", "\n", "cols", "=", "np", ".", "zeros", "(", "(", "NS", ",", "3", ")", ")", "\n", "\n", "# Generate images corresponding to different classes using Xiaolin Wu's line algorithm for anti-aliasing", "\n", "\n", "cols", "=", "np", ".", "zeros", "(", "(", "NS", ",", "3", ")", ")", "\n", "X", "=", "np", ".", "array", "(", "\n", "generate_images_from_coords", "(", "NPX", ",", "NP", ",", "C", "[", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "(", "2", ",", "NP", ",", "NC", ")", ")", ",", "cols", ")", "\n", ")", "\n", "\n", "X", "=", "1", "-", "np", ".", "mean", "(", "X", ",", "axis", "=", "3", ")", "\n", "# normalize (negative sign ensure background is min)", "\n", "X", "=", "X", "/", "-", "X", ".", "mean", "(", ")", "\n", "\n", "y", "=", "np", ".", "arange", "(", "NC", ")", "\n", "y", "=", "y", ".", "flatten", "(", ")", "\n", "Y", "=", "y", ".", "astype", "(", "int", ")", "\n", "\n", "split", "=", "NS", "//", "4", "\n", "\n", "Xtrain", "=", "X", "[", ":", "split", "]", "\n", "Ytrain", "=", "Y", "[", ":", "split", "]", "\n", "Xtest", "=", "X", "[", "split", ":", "]", "\n", "Ytest", "=", "Y", "[", "split", ":", "]", "\n", "return", "(", "(", "Xtrain", ",", "Ytrain", ")", ",", "(", "Xtest", ",", "Ytest", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.generate_angles": [[131, 173], ["numpy.meshgrid", "ind1.flatten", "ind2.flatten", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.tile", "numpy.tile", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "int", "int", "int", "int", "numpy.tile().T.flatten", "int", "numpy.tile().T.flatten", "numpy.tile", "numpy.tile", "numpy.arange", "numpy.arange", "int", "int"], "function", ["None"], ["", "def", "generate_angles", "(", "NT1", ",", "NT2", ",", "NC", ")", ":", "\n", "\n", "# create pairs of shape with all angles", "\n", "    ", "NT", "=", "NT1", "*", "NT2", "**", "2", "\n", "[", "ind1", ",", "ind2", "]", "=", "np", ".", "meshgrid", "(", "range", "(", "NT", ")", ",", "range", "(", "NT", ")", ")", "\n", "s1", "=", "ind1", ".", "flatten", "(", ")", "\n", "s2", "=", "ind2", ".", "flatten", "(", ")", "\n", "alphas", "=", "(", "s1", "-", "s2", ")", "%", "(", "NT1", ")", "\n", "\n", "sangle1", "=", "np", ".", "floor", "(", "s1", "/", "NT2", "**", "2", ")", "\n", "sangle2", "=", "np", ".", "floor", "(", "s2", "/", "NT2", "**", "2", ")", "\n", "\n", "strans1", "=", "s1", "%", "NT2", "**", "2", "\n", "strans2", "=", "s2", "%", "NT2", "**", "2", "\n", "\n", "stransx1", "=", "np", ".", "floor", "(", "strans1", "/", "NT2", ")", "\n", "stransx2", "=", "np", ".", "floor", "(", "strans2", "/", "NT2", ")", "\n", "\n", "stransy1", "=", "strans1", "%", "NT2", "\n", "stransy2", "=", "strans2", "%", "NT2", "\n", "\n", "alphas1", "=", "(", "sangle1", "-", "sangle2", ")", "%", "(", "NT1", ")", "\n", "alphas2", "=", "(", "stransx1", "-", "stransx2", ")", "%", "(", "NT2", ")", "\n", "alphas3", "=", "(", "stransy1", "-", "stransy2", ")", "%", "(", "NT2", ")", "\n", "\n", "s1_all_shapes", "=", "(", "\n", "np", ".", "tile", "(", "s1", ",", "(", "int", "(", "NC", "/", "2", ")", ")", ")", "\n", "+", "NT", "*", "np", ".", "tile", "(", "np", ".", "arange", "(", "int", "(", "NC", "/", "2", ")", ")", ".", "T", ",", "(", "NT", "*", "NT", ",", "1", ")", ")", ".", "T", ".", "flatten", "(", ")", "\n", ")", "\n", "s2_all_shapes", "=", "(", "\n", "np", ".", "tile", "(", "s2", ",", "(", "int", "(", "NC", "/", "2", ")", ")", ")", "\n", "+", "NT", "*", "np", ".", "tile", "(", "np", ".", "arange", "(", "int", "(", "NC", "/", "2", ")", ")", ".", "T", ",", "(", "NT", "*", "NT", ",", "1", ")", ")", ".", "T", ".", "flatten", "(", ")", "\n", ")", "\n", "\n", "alphas_all_shapes1", "=", "np", ".", "tile", "(", "alphas1", ",", "int", "(", "NC", "/", "2", ")", ")", "\n", "alphas_all_shapes2", "=", "np", ".", "tile", "(", "alphas2", ",", "int", "(", "NC", "/", "2", ")", ")", "\n", "alphas_all_shapes3", "=", "np", ".", "tile", "(", "alphas3", ",", "int", "(", "NC", "/", "2", ")", ")", "\n", "\n", "alphas", "=", "(", "alphas1", ",", "alphas2", ",", "alphas3", ")", "\n", "alphas_all_shapes", "=", "(", "alphas_all_shapes1", ",", "alphas_all_shapes2", ",", "alphas_all_shapes3", ")", "\n", "\n", "return", "s1", ",", "s2", ",", "s1_all_shapes", ",", "s2_all_shapes", ",", "alphas", ",", "alphas_all_shapes", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.x_to_image": [[175, 188], ["x.reshape", "x_image.squeeze.permute", "x_image.squeeze.squeeze", "x.dim"], "function", ["None"], ["", "def", "x_to_image", "(", "x", ")", ":", "\n", "    ", "\"\"\"Takes a single input x and transforms it into image for im.show\"\"\"", "\n", "if", "x", ".", "dim", "(", ")", "==", "2", ":", "\n", "        ", "n_channels", "=", "1", "\n", "", "else", ":", "\n", "        ", "n_channels", "=", "x", ".", "shape", "[", "0", "]", "\n", "", "n_pixels", "=", "x", ".", "shape", "[", "1", "]", "\n", "\n", "x_image", "=", "x", ".", "reshape", "(", "n_channels", ",", "n_pixels", ",", "n_pixels", ")", "\n", "x_image", "=", "x_image", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "# sequeeze to remove in case of a singel channel", "\n", "x_image", "=", "x_image", ".", "squeeze", "(", ")", "\n", "return", "x_image", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.__init__": [[33, 93], ["datasets.AbstractDataset.set_seed", "datasets.AbstractDataset.get_original", "list", "data_cls", "torch.utils.data.DataLoader", "data_cls", "torch.utils.data.DataLoader", "data_cls", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "datasets.transformations.get_transform_params"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.get_original", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.get_transform_params"], ["def", "__init__", "(", "\n", "self", ",", "\n", "batch_size", ",", "\n", "n_rotations", "=", "0", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1.0", ",", ")", ",", "\n", "seed", "=", "0", ",", "\n", "pairs", "=", "True", ",", "\n", ")", ":", "\n", "        ", "AbstractDataset", ".", "set_seed", "(", "seed", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "n_x_translations", ",", "self", ".", "n_y_translations", "=", "(", "\n", "n_x_translations", ",", "\n", "n_y_translations", ",", "\n", ")", "\n", "self", ".", "n_rotations", ",", "self", ".", "scaling_factors", "=", "n_rotations", ",", "scaling_factors", "\n", "self", ".", "X_orig_train", ",", "self", ".", "X_orig_valid", ",", "self", ".", "X_orig_test", "=", "self", ".", "get_original", "(", ")", "\n", "\n", "self", ".", "transform_params", "=", "list", "(", "\n", "transformations", ".", "get_transform_params", "(", "\n", "n_rotations", "=", "self", ".", "n_rotations", ",", "\n", "n_x_translations", "=", "self", ".", "n_x_translations", ",", "\n", "n_y_translations", "=", "self", ".", "n_y_translations", ",", "\n", "scaling_factors", "=", "self", ".", "scaling_factors", ",", "\n", ")", "\n", ")", "\n", "\n", "data_cls", "=", "Pairs", "if", "pairs", "else", "Single", "\n", "\n", "self", ".", "X_train", "=", "data_cls", "(", "self", ".", "X_orig_train", ",", "self", ".", "transform_params", ")", "\n", "self", ".", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "X_train", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "Pairs", ".", "collate", ",", "\n", ")", "\n", "# \u00a0For validation and test, use shuffle = False to have SequentialSampler(dataset) by default", "\n", "# (see https://github.com/pytorch/pytorch/blob/bfa94487b968ccb570ef8cd9547029b967e76ed0/torch/utils/data/dataloader.py#L257)", "\n", "self", ".", "X_valid", "=", "data_cls", "(", "self", ".", "X_orig_valid", ",", "self", ".", "transform_params", ")", "\n", "self", ".", "valid_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "X_valid", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "Pairs", ".", "collate", ",", "\n", ")", "\n", "\n", "self", ".", "X_test", "=", "data_cls", "(", "self", ".", "X_orig_test", ",", "self", ".", "transform_params", ")", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "X_test", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "Pairs", ".", "collate", ",", "\n", ")", "\n", "\n", "self", ".", "test_loader_batch_1", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "X_test", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "collate_fn", "=", "Pairs", ".", "collate", ",", "\n", ")", "\n", "self", ".", "test_loader_batch_100", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "X_test", ",", "batch_size", "=", "100", ",", "shuffle", "=", "False", ",", "collate_fn", "=", "Pairs", ".", "collate", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.__repr__": [[95, 103], ["json.dumps"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "attributes", "=", "{", "\n", "\"n_rotations\"", ":", "self", ".", "n_rotations", ",", "\n", "\"n_x_translations\"", ":", "self", ".", "n_x_translations", ",", "\n", "\"n_y_translations\"", ":", "self", ".", "n_y_translations", ",", "\n", "\"scaling_factors\"", ":", "self", ".", "scaling_factors", ",", "\n", "}", "\n", "return", "json", ".", "dumps", "(", "attributes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.get_original": [[104, 108], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_original", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets X_train and X_test to images in original dataset\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.total_n_transformations": [[109, 115], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "total_n_transformations", "(", "self", ")", ":", "\n", "        ", "\"\"\"Computes the total number of transformations\"\"\"", "\n", "n_translations", "=", "(", "1", "+", "self", ".", "n_x_translations", ")", "*", "(", "1", "+", "self", ".", "n_y_translations", ")", "\n", "n", "=", "n_translations", "*", "(", "1", "+", "self", ".", "n_rotations", ")", "*", "len", "(", "self", ".", "scaling_factors", ")", "\n", "return", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.set_seed": [[116, 121], ["torch.manual_seed", "numpy.random.seed", "random.seed"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "set_seed", "(", "seed", ")", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.AbstractDataset.__subclasshook__": [[122, 132], ["hasattr", "isinstance", "getattr"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "__subclasshook__", "(", "cls", ",", "C", ")", ":", "\n", "        ", "\"\"\"Verifies dataset has loader of correct type\"\"\"", "\n", "for", "loader", "in", "[", "\"train_loader\"", ",", "\"test_loader\"", "]", ":", "\n", "            ", "is_valid", "=", "hasattr", "(", "cls", ",", "loader", ")", "and", "isinstance", "(", "\n", "(", "getattr", "(", "cls", ",", "loader", ")", ")", ",", "Dataset", "\n", ")", "\n", "if", "not", "is_valid", ":", "\n", "                ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.__init__": [[146, 174], ["datasets.AbstractDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "batch_size", ",", "\n", "n_rotations", "=", "4", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1.0", ",", ")", ",", "\n", "train_set_proportion", "=", "0.1", ",", "\n", "valid_set_proportion", "=", "1.0", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", "pairs", "=", "True", ",", "\n", ")", ":", "\n", "        ", "self", ".", "train_set_proportion", "=", "train_set_proportion", "\n", "self", ".", "valid_set_proportion", "=", "valid_set_proportion", "\n", "self", ".", "test_set_proportion", "=", "test_set_proportion", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "batch_size", ",", "\n", "n_rotations", ",", "\n", "n_x_translations", ",", "\n", "n_y_translations", ",", "\n", "scaling_factors", ",", "\n", "seed", ",", "\n", "pairs", ",", "\n", ")", "\n", "self", ".", "n_pixels", "=", "self", ".", "X_orig_train", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "self", ".", "n_channels", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.get_original": [[175, 183], ["datasets.ProjectiveMNIST.download_mnist", "mnist_train.data.unsqueeze", "mnist_val.data.unsqueeze", "mnist_test.data.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.download_mnist"], ["", "def", "get_original", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns original training and test images\"\"\"", "\n", "mnist_train", ",", "mnist_val", ",", "mnist_test", "=", "self", ".", "download_mnist", "(", ")", "\n", "# normalize MNIST so values are between [0, 1]", "\n", "x_train", "=", "mnist_train", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "x_val", "=", "mnist_val", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "x_test", "=", "mnist_test", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "return", "x_train", ",", "x_val", ",", "x_test", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.stratified_sample": [[184, 196], ["sklearn.model_selection.StratifiedShuffleSplit", "next", "sklearn.model_selection.StratifiedShuffleSplit.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "stratified_sample", "(", "X", ",", "y", ",", "size", ")", ":", "\n", "        ", "\"\"\"Returns a stratified sample\"\"\"", "\n", "if", "size", "==", "1.0", ":", "\n", "            ", "return", "X", "\n", "", "test_size", "=", "1", "-", "size", "\n", "sampler", "=", "StratifiedShuffleSplit", "(", "\n", "n_splits", "=", "1", ",", "test_size", "=", "test_size", ",", "random_state", "=", "0", "\n", ")", "\n", "indices", ",", "_", "=", "next", "(", "sampler", ".", "split", "(", "X", ",", "y", ")", ")", "\n", "X_sample", "=", "X", "[", "indices", "]", "\n", "return", "X_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.split_train_valid": [[197, 210], ["len", "list", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_train_valid", "(", "train_set", ",", "split", "=", "10000", ")", ":", "\n", "        ", "num_train", "=", "len", "(", "train_set", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "\n", "train_idx", ",", "valid_idx", "=", "indices", "[", "split", ":", "]", ",", "indices", "[", ":", "split", "]", "\n", "train_data", "=", "train_set", ".", "data", "[", "train_idx", "]", "\n", "valid_data", "=", "train_set", ".", "data", "[", "valid_idx", "]", "\n", "\n", "train_targets", "=", "train_set", ".", "targets", "[", "train_idx", "]", "\n", "valid_targets", "=", "train_set", ".", "targets", "[", "valid_idx", "]", "\n", "\n", "return", "train_data", ",", "train_targets", ",", "valid_data", ",", "valid_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.download_mnist": [[211, 249], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datasets.ProjectiveMNIST.split_train_valid", "datasets.ProjectiveMNIST.stratified_sample", "datasets.ProjectiveMNIST.stratified_sample", "datasets.ProjectiveMNIST.stratified_sample", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.split_train_valid", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.stratified_sample", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.stratified_sample", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveMNIST.stratified_sample"], ["", "def", "download_mnist", "(", "self", ")", ":", "\n", "        ", "\"\"\"Skips download if cache is available\"\"\"", "\n", "train_set", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "\n", "\"/tmp/\"", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "test_set", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "\n", "\"/tmp/\"", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "(", "\n", "train_data", ",", "\n", "train_targets", ",", "\n", "valid_data", ",", "\n", "valid_targets", ",", "\n", ")", "=", "ProjectiveMNIST", ".", "split_train_valid", "(", "train_set", ")", "\n", "# stratified samples", "\n", "train_data", "=", "ProjectiveMNIST", ".", "stratified_sample", "(", "\n", "train_data", ",", "train_targets", ",", "self", ".", "train_set_proportion", "\n", ")", "\n", "valid_data", "=", "ProjectiveMNIST", ".", "stratified_sample", "(", "\n", "valid_data", ",", "valid_targets", ",", "self", ".", "valid_set_proportion", "\n", ")", "\n", "test_data", "=", "ProjectiveMNIST", ".", "stratified_sample", "(", "\n", "test_set", ".", "data", ",", "test_set", ".", "targets", ",", "self", ".", "test_set_proportion", "\n", ")", "\n", "\n", "return", "train_data", ",", "valid_data", ",", "test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.__init__": [[263, 293], ["datasets.AbstractDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "batch_size", ",", "\n", "n_rotations", "=", "4", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1.0", ",", ")", ",", "\n", "train_set_proportion", "=", "0.1", ",", "\n", "valid_set_proportion", "=", "1.0", ",", "\n", "test_set_proportion", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", "pairs", "=", "True", ",", "\n", "digit", "=", "4", ",", "\n", ")", ":", "\n", "        ", "self", ".", "train_set_proportion", "=", "train_set_proportion", "\n", "self", ".", "valid_set_proportion", "=", "valid_set_proportion", "\n", "self", ".", "test_set_proportion", "=", "test_set_proportion", "\n", "self", ".", "digit", "=", "digit", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "batch_size", ",", "\n", "n_rotations", ",", "\n", "n_x_translations", ",", "\n", "n_y_translations", ",", "\n", "scaling_factors", ",", "\n", "seed", ",", "\n", "pairs", ",", "\n", ")", "\n", "self", ".", "n_pixels", "=", "self", ".", "X_orig_train", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "self", ".", "n_channels", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.get_original": [[294, 302], ["datasets.ProjectiveSingleDigitMNIST.download_mnist", "mnist_train.data.unsqueeze", "mnist_val.data.unsqueeze", "mnist_test.data.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.download_mnist"], ["", "def", "get_original", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns original training and test images\"\"\"", "\n", "mnist_train", ",", "mnist_val", ",", "mnist_test", "=", "self", ".", "download_mnist", "(", ")", "\n", "# normalize MNIST so values are between [0, 1]", "\n", "x_train", "=", "mnist_train", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "x_val", "=", "mnist_val", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "x_test", "=", "mnist_test", ".", "data", ".", "unsqueeze", "(", "1", ")", "/", "255.0", "\n", "return", "x_train", ",", "x_val", ",", "x_test", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.split_train_valid": [[303, 316], ["len", "list", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_train_valid", "(", "train_set", ",", "split", "=", "10000", ")", ":", "\n", "        ", "num_train", "=", "len", "(", "train_set", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "\n", "train_idx", ",", "valid_idx", "=", "indices", "[", "split", ":", "]", ",", "indices", "[", ":", "split", "]", "\n", "train_data", "=", "train_set", ".", "data", "[", "train_idx", "]", "\n", "valid_data", "=", "train_set", ".", "data", "[", "valid_idx", "]", "\n", "\n", "train_targets", "=", "train_set", ".", "targets", "[", "train_idx", "]", "\n", "valid_targets", "=", "train_set", ".", "targets", "[", "valid_idx", "]", "\n", "\n", "return", "train_data", ",", "train_targets", ",", "valid_data", ",", "valid_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.sample_single_digit": [[317, 322], ["int", "len"], "methods", ["None"], ["", "def", "sample_single_digit", "(", "self", ",", "x", ",", "targets", ",", "proportion", ")", ":", "\n", "        ", "idx", "=", "targets", "==", "self", ".", "digit", "\n", "x_digit", "=", "x", "[", "idx", "]", "\n", "sample_size", "=", "int", "(", "len", "(", "idx", ")", "*", "proportion", ")", "\n", "return", "x_digit", "[", ":", "sample_size", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.download_mnist": [[323, 360], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datasets.ProjectiveMNIST.split_train_valid", "datasets.ProjectiveSingleDigitMNIST.sample_single_digit", "datasets.ProjectiveSingleDigitMNIST.sample_single_digit", "datasets.ProjectiveSingleDigitMNIST.sample_single_digit", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.split_train_valid", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.sample_single_digit", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.sample_single_digit", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ProjectiveSingleDigitMNIST.sample_single_digit"], ["", "def", "download_mnist", "(", "self", ")", ":", "\n", "        ", "\"\"\"Skips download if cache is available\"\"\"", "\n", "train_set", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "\n", "\"/tmp/\"", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "test_set", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "\n", "\"/tmp/\"", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "(", "\n", "train_data", ",", "\n", "train_targets", ",", "\n", "valid_data", ",", "\n", "valid_targets", ",", "\n", ")", "=", "ProjectiveMNIST", ".", "split_train_valid", "(", "train_set", ")", "\n", "# stratified samples", "\n", "train_data", "=", "self", ".", "sample_single_digit", "(", "\n", "train_data", ",", "train_targets", ",", "self", ".", "train_set_proportion", "\n", ")", "\n", "valid_data", "=", "self", ".", "sample_single_digit", "(", "\n", "valid_data", ",", "valid_targets", ",", "self", ".", "valid_set_proportion", "\n", ")", "\n", "test_data", "=", "self", ".", "sample_single_digit", "(", "\n", "test_set", ".", "data", ",", "test_set", ".", "targets", ",", "self", ".", "test_set_proportion", "\n", ")", "\n", "return", "train_data", ",", "valid_data", ",", "test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.__init__": [[363, 388], ["datasets.AbstractDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "batch_size", ",", "\n", "n_pixels", "=", "28", ",", "\n", "n_classes", "=", "300", ",", "\n", "n_points", "=", "5", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "0", ",", "\n", "n_y_translations", "=", "0", ",", "\n", "scaling_factors", "=", "(", "1.0", ",", ")", ",", "\n", "n_channels", "=", "1", ",", "\n", "seed", "=", "0", ",", "\n", "pairs", "=", "True", ",", "\n", ")", ":", "\n", "        ", "self", ".", "n_pixels", ",", "self", ".", "n_classes", "=", "n_pixels", ",", "n_classes", "\n", "self", ".", "n_points", ",", "self", ".", "n_channels", "=", "n_points", ",", "n_channels", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "batch_size", ",", "\n", "n_rotations", ",", "\n", "n_x_translations", ",", "\n", "n_y_translations", ",", "\n", "scaling_factors", ",", "\n", "seed", ",", "\n", "pairs", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.normalize": [[390, 393], ["torch.clamp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "normalize", "(", "X", ")", ":", "\n", "        ", "return", "torch", ".", "clamp", "(", "X", "+", "1", ",", "0.0", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.get_original": [[394, 405], ["numpy.random.seed", "data_utils.generate_dataset", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float.size", "int", "datasets.SimpleShapes.normalize", "datasets.SimpleShapes.normalize", "datasets.SimpleShapes.normalize", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.data_utils.generate_dataset", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.normalize", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.normalize", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.SimpleShapes.normalize"], ["", "def", "get_original", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "1", ")", "# Sets seed", "\n", "data", "=", "data_utils", ".", "generate_dataset", "(", "self", ".", "n_pixels", ",", "self", ".", "n_classes", ",", "self", ".", "n_points", ")", "\n", "(", "X_train", ",", "_", ")", ",", "(", "X_test", ",", "_", ")", "=", "data", "\n", "X_trainvalid", "=", "torch", ".", "from_numpy", "(", "X_train", ")", ".", "unsqueeze", "(", "1", ")", ".", "float", "(", ")", "\n", "N", "=", "X_trainvalid", ".", "size", "(", "0", ")", "\n", "Nvalid", "=", "int", "(", "N", "*", "0.2", ")", "# Keeps 20% for validation", "\n", "X_valid", "=", "SimpleShapes", ".", "normalize", "(", "X_trainvalid", "[", ":", "Nvalid", ",", "...", "]", ")", "\n", "X_train", "=", "SimpleShapes", ".", "normalize", "(", "X_trainvalid", "[", "Nvalid", ":", ",", "...", "]", ")", "\n", "X_test", "=", "SimpleShapes", ".", "normalize", "(", "torch", ".", "from_numpy", "(", "X_test", ")", ".", "unsqueeze", "(", "1", ")", ".", "float", "(", ")", ")", "\n", "return", "X_train", ",", "X_valid", ",", "X_test", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.__init__": [[412, 415], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "X", ",", "params", ")", ":", "\n", "        ", "self", ".", "X", "=", "X", "\n", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.__len__": [[416, 418], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "X", ".", "shape", "[", "0", "]", "*", "len", "(", "self", ".", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.collate": [[419, 426], ["torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate", "(", "batch", ")", ":", "\n", "        ", "\"\"\"Used for dataloader\"\"\"", "\n", "X1", "=", "torch", ".", "stack", "(", "[", "item", "[", "0", "]", "for", "item", "in", "batch", "]", ")", "\n", "X2", "=", "torch", ".", "stack", "(", "[", "item", "[", "1", "]", "for", "item", "in", "batch", "]", ")", "\n", "params", "=", "[", "item", "[", "2", "]", "for", "item", "in", "batch", "]", "\n", "return", "X1", ",", "X2", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.get_x_idx": [[427, 430], ["len"], "methods", ["None"], ["", "def", "get_x_idx", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"Returns the idx of the original image x.\"\"\"", "\n", "return", "idx", "//", "len", "(", "self", ".", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.get_x1": [[431, 440], ["len", "datasets.transformations.transform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "get_x1", "(", "self", ",", "idx", ",", "x_idx", ")", ":", "\n", "        ", "x", "=", "self", ".", "X", "[", "x_idx", "]", "\n", "\n", "p", "=", "len", "(", "self", ".", "params", ")", "\n", "x1_params_idx", "=", "idx", "%", "p", "\n", "x1_params", "=", "self", ".", "params", "[", "x1_params_idx", "]", "\n", "\n", "x1", "=", "transformations", ".", "transform", "(", "x", ",", "x1_params", ")", "\n", "return", "x1", ",", "x1_params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Single.__getitem__": [[441, 446], ["datasets.Single.get_x_idx", "datasets.Single.get_x1"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x_idx", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x1"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x_idx", "=", "self", ".", "get_x_idx", "(", "idx", ")", "\n", "x1", ",", "x1_params", "=", "self", ".", "get_x1", "(", "idx", ",", "x_idx", ")", "\n", "x2", "=", "self", ".", "X", "[", "x_idx", "]", "\n", "return", "x1", ",", "x2", ",", "x1_params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.__init__": [[462, 465], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "X", ",", "params", ")", ":", "\n", "        ", "self", ".", "X", "=", "X", "\n", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.__len__": [[466, 468], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "X", ".", "shape", "[", "0", "]", "*", "(", "len", "(", "self", ".", "params", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.collate": [[469, 476], ["torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate", "(", "batch", ")", ":", "\n", "        ", "\"\"\"Used for dataloader\"\"\"", "\n", "X1", "=", "torch", ".", "stack", "(", "[", "item", "[", "0", "]", "for", "item", "in", "batch", "]", ")", "\n", "X2", "=", "torch", ".", "stack", "(", "[", "item", "[", "1", "]", "for", "item", "in", "batch", "]", ")", "\n", "params", "=", "[", "item", "[", "2", "]", "for", "item", "in", "batch", "]", "\n", "return", "X1", ",", "X2", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x_idx": [[477, 480], ["len"], "methods", ["None"], ["", "def", "get_x_idx", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"Returns the idx of the original image x.\"\"\"", "\n", "return", "idx", "//", "(", "len", "(", "self", ".", "params", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x1": [[481, 490], ["len", "datasets.transformations.transform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "get_x1", "(", "self", ",", "idx", ",", "x_idx", ")", ":", "\n", "        ", "x", "=", "self", ".", "X", "[", "x_idx", "]", "\n", "\n", "p", "=", "len", "(", "self", ".", "params", ")", "\n", "x1_params_idx", "=", "(", "idx", "-", "(", "x_idx", ")", "*", "p", "*", "p", ")", "//", "p", "\n", "x1_params", "=", "self", ".", "params", "[", "x1_params_idx", "]", "\n", "\n", "x1", "=", "transformations", ".", "transform", "(", "x", ",", "x1_params", ")", "\n", "return", "x1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x2_params": [[491, 496], ["len"], "methods", ["None"], ["", "def", "get_x2_params", "(", "self", ",", "idx", ",", "x_idx", ")", ":", "\n", "        ", "p", "=", "len", "(", "self", ".", "params", ")", "\n", "x1_params_idx", "=", "(", "idx", "-", "(", "x_idx", ")", "*", "p", "*", "p", ")", "//", "p", "\n", "x2_params_idx", "=", "idx", "-", "(", "(", "x_idx", "*", "p", "*", "p", ")", "+", "(", "x1_params_idx", "*", "p", ")", ")", "\n", "return", "self", ".", "params", "[", "x2_params_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.__getitem__": [[497, 504], ["datasets.Pairs.get_x_idx", "datasets.Pairs.get_x1", "datasets.Pairs.get_x2_params", "datasets.transformations.transform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x_idx", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x1", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.Pairs.get_x2_params", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x_idx", "=", "self", ".", "get_x_idx", "(", "idx", ")", "\n", "x1", "=", "self", ".", "get_x1", "(", "idx", ",", "x_idx", ")", "\n", "x2_params", "=", "self", ".", "get_x2_params", "(", "idx", ",", "x_idx", ")", "\n", "x2", "=", "transformations", ".", "transform", "(", "x1", ",", "x2_params", ")", "\n", "x1", ",", "x2", "=", "x1", ",", "x2", "\n", "return", "x1", ",", "x2", ",", "x2_params", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ShapeNetIterator.__init__": [[513, 522], ["torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "V", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "V", "=", "V", "\n", "self", ".", "preprocess", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "# transforms.Resize(256),", "\n", "# transforms.CenterCrop(224),", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", ")", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ShapeNetIterator.__len__": [[526, 528], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "V", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.datasets.ShapeNetIterator.__getitem__": [[529, 531], ["tuple", "datasets.ShapeNetIterator.preprocess", "range", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "tuple", "(", "[", "self", ".", "preprocess", "(", "self", ".", "V", "[", "v", "]", "[", "idx", "]", ")", "for", "v", "in", "range", "(", "len", "(", "self", ".", "V", ")", ")", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.complex_shift_operator.__main__.main": [[87, 299], ["torch.device", "torch.device", "print", "parser.parse_args", "int", "random.seed", "torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "vars", "datasets.datasets.SimpleShapes", "print", "print", "os.path.exists", "os.mkdir", "complex_shift_autoencoder.ComplexAutoEncoder", "len", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.run", "numpy.array", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.load_model", "numpy.random.randint().tolist", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_x2_reconstructions", "numpy.random.randint().tolist", "os.path.join", "numpy.random.randint().tolist", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_x2_reconstructions", "numpy.random.randint().tolist", "os.path.join", "torch.cuda.is_available", "torch.cuda.is_available", "datasets.datasets.ProjectiveMNIST", "transformation_types.append", "indexes.append", "transformation_types.append", "indexes.append", "transformation_types.append", "indexes.append", "os.path.join", "os.path.join", "os.path.join", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations", "os.path.join", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.load_model", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.compute_test_loss", "torch.save", "torch.save", "numpy.random.randint", "os.path.join", "numpy.random.randint", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations_stacked", "numpy.random.randint", "os.path.join", "numpy.random.randint", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations", "weakly_complex_shift_autoencoder.WeaklyComplexAutoEncoder.plot_multiple_transformations_stacked", "torch.FloatTensor", "torch.FloatTensor", "os.path.join", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.load_model", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_x2_reconstructions", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.load_model", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.compute_test_loss", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.autoencoder.AutoEncoder.save", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations_stacked", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations", "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.plot_multiple_transformations_stacked"], ["def", "main", "(", "params", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "print", "(", "f\"running on {device}\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "params", ")", "\n", "\n", "SEED", "=", "int", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "SEED", ")", "\n", "torch", ".", "manual_seed", "(", "SEED", ")", "\n", "np", ".", "random", ".", "seed", "(", "SEED", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "SEED", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "\"simpleshapes\"", ":", "\n", "        ", "data", "=", "datasets", ".", "SimpleShapes", "(", "\n", "batch_size", "=", "args", ".", "bs", ",", "\n", "n_x_translations", "=", "args", ".", "data_n_x", ",", "\n", "n_y_translations", "=", "args", ".", "data_n_y", ",", "\n", "n_rotations", "=", "args", ".", "data_n_rot", ",", "\n", "n_classes", "=", "args", ".", "n_classes", ",", "\n", "n_pixels", "=", "28", ",", "\n", ")", "\n", "", "elif", "args", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "data", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "batch_size", "=", "args", ".", "bs", ",", "\n", "n_x_translations", "=", "args", ".", "data_n_x", ",", "\n", "n_y_translations", "=", "args", ".", "data_n_y", ",", "\n", "n_rotations", "=", "args", ".", "data_n_rot", ",", "\n", "train_set_proportion", "=", "args", ".", "tr_prop", ",", "\n", "test_set_proportion", "=", "args", ".", "te_prop", ",", "\n", "valid_set_proportion", "=", "args", ".", "val_prop", ",", "\n", ")", "\n", "", "if", "args", ".", "mode", "==", "\"train\"", ":", "\n", "        ", "print", "(", "\"Training\"", ")", "\n", "", "if", "args", ".", "mode", "==", "\"test\"", ":", "\n", "        ", "print", "(", "\"Testing\"", ")", "\n", "\n", "# automatically set z_dim to image size", "\n", "", "image_size", "=", "data", ".", "n_pixels", "**", "2", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_directory", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "output_directory", ")", "\n", "", "dict_args", "=", "vars", "(", "args", ")", "\n", "save_name", "=", "\"_\"", ".", "join", "(", "\n", "[", "\n", "\"{0}_{1}\"", ".", "format", "(", "key", ",", "dict_args", "[", "key", "]", ")", "\n", "for", "key", "in", "dict_args", "\n", "if", "key", "not", "in", "[", "\"output_directory\"", ",", "\"mode\"", "]", "\n", "]", "\n", ")", "\n", "\n", "if", "args", ".", "supervised", ":", "\n", "        ", "transformation_types", "=", "[", "]", "\n", "indexes", "=", "[", "]", "\n", "if", "args", ".", "n_rot", ">", "0", ":", "\n", "            ", "transformation_types", ".", "append", "(", "\"ComplexShiftOperator\"", ")", "\n", "indexes", ".", "append", "(", "0", ")", "\n", "", "if", "args", ".", "n_x", ">", "0", ":", "\n", "            ", "transformation_types", ".", "append", "(", "\"ComplexShiftOperator\"", ")", "\n", "indexes", ".", "append", "(", "1", ")", "\n", "", "if", "args", ".", "n_y", ">", "0", ":", "\n", "            ", "transformation_types", ".", "append", "(", "\"ComplexShiftOperator\"", ")", "\n", "indexes", ".", "append", "(", "2", ")", "\n", "", "model_with_rotation", "=", "ComplexAutoEncoder", "(", "\n", "data", ",", "\n", "transformation_types", "=", "transformation_types", ",", "\n", "indexes", "=", "indexes", ",", "\n", "device", "=", "device", ",", "\n", "z_dim", "=", "image_size", ",", "\n", "seed", "=", "SEED", ",", "\n", "output_directory", "=", "args", ".", "output_directory", ",", "\n", "save_name", "=", "save_name", ",", "\n", "n_rotations", "=", "args", ".", "n_rot", ",", "\n", "n_x_translations", "=", "args", ".", "n_x", ",", "\n", "n_y_translations", "=", "args", ".", "n_y", ",", "\n", ")", "\n", "n_transfos", "=", "len", "(", "indexes", ")", "\n", "", "else", ":", "\n", "        ", "model_with_rotation", "=", "WeaklyComplexAutoEncoder", "(", "\n", "data", ",", "\n", "transformation_type", "=", "\"ComplexShiftOperator\"", ",", "\n", "device", "=", "device", ",", "\n", "z_dim", "=", "image_size", ",", "\n", "seed", "=", "SEED", ",", "\n", "temperature", "=", "args", ".", "tau", ",", "\n", "output_directory", "=", "args", ".", "output_directory", ",", "\n", "save_name", "=", "save_name", ",", "\n", "use_softmax", "=", "args", ".", "sftmax", ",", "\n", "n_rotations", "=", "args", ".", "n_rot", ",", "\n", "n_x_translations", "=", "args", ".", "n_x", ",", "\n", "n_y_translations", "=", "args", ".", "n_y", ",", "\n", ")", "\n", "\n", "", "if", "args", ".", "mode", "==", "\"train\"", ":", "\n", "        ", "(", "\n", "train_loss", ",", "\n", "valid_loss", ",", "\n", "train_mse", ",", "\n", "valid_mse", ",", "\n", "test_mse", ",", "\n", ")", "=", "model_with_rotation", ".", "run", "(", "n_epochs", "=", "args", ".", "n_epochs", ",", "learning_rate", "=", "args", ".", "lr", ")", "\n", "\n", "perf", "=", "np", ".", "array", "(", "[", "train_mse", ",", "valid_mse", ",", "test_mse", "]", ")", "\n", "\n", "torch", ".", "save", "(", "perf", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"final_mse_\"", "+", "save_name", ")", ")", "\n", "torch", ".", "save", "(", "\n", "train_loss", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"train_loss_\"", "+", "save_name", ")", "\n", ")", "\n", "\n", "torch", ".", "save", "(", "\n", "valid_loss", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"valid_loss_\"", "+", "save_name", ")", "\n", ")", "\n", "\n", "file_name", "=", "\"best_checkpoint_{}.pth.tar\"", ".", "format", "(", "model_with_rotation", ".", "save_name", ")", "\n", "path_to_model", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "file_name", ")", "\n", "best_mse", ",", "best_epoch", "=", "model_with_rotation", ".", "load_model", "(", "path_to_model", ")", "\n", "\n", "##### Plots train reconstructions", "\n", "samples_pairs", "=", "np", ".", "random", ".", "randint", "(", "\n", "0", ",", "len", "(", "model_with_rotation", ".", "data", ".", "X_train", ")", ",", "size", "=", "(", "10", ",", ")", "\n", ")", ".", "tolist", "(", ")", "\n", "model_with_rotation", ".", "plot_x2_reconstructions", "(", "\n", "indices", "=", "samples_pairs", ",", "\n", "train_set", "=", "True", ",", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"plots_train_reconstructions_\"", "+", "save_name", ")", ",", "\n", ")", "\n", "##### Plots train rotations of samples", "\n", "train_indices", "=", "np", ".", "random", ".", "randint", "(", "\n", "0", ",", "len", "(", "model_with_rotation", ".", "data", ".", "X_orig_train", ")", ",", "size", "=", "(", "10", ",", ")", "\n", ")", ".", "tolist", "(", ")", "\n", "figsave_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"plots_train_rotations_\"", "+", "save_name", "+", "'.png'", ")", "\n", "if", "args", ".", "supervised", ":", "\n", "            ", "if", "n_transfos", "==", "1", ":", "\n", "                ", "if", "args", ".", "data_n_x", ">", "0", ":", "\n", "                    ", "param_name", "=", "'tx'", "\n", "", "elif", "args", ".", "data_n_y", ">", "0", ":", "\n", "                    ", "param_name", "=", "'ty'", "\n", "", "if", "args", ".", "data_n_rot", ">", "0", ":", "\n", "                    ", "param_name", "=", "'angle'", "\n", "", "model_with_rotation", ".", "plot_multiple_transformations", "(", "indices", "=", "train_indices", ",", "train_set", "=", "True", ",", "\n", "param_name", "=", "param_name", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "", "else", ":", "\n", "                ", "model_with_rotation", ".", "plot_multiple_transformations_stacked", "(", "indices", "=", "train_indices", ",", "train_set", "=", "True", ",", "\n", "n_plots", "=", "10", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "args", ".", "data_n_x", ">", "0", ":", "\n", "                ", "param_name", "=", "'tx'", "\n", "", "elif", "args", ".", "data_n_y", ">", "0", ":", "\n", "                ", "param_name", "=", "'ty'", "\n", "", "if", "args", ".", "data_n_rot", ">", "0", ":", "\n", "                ", "param_name", "=", "'angle'", "\n", "", "model_with_rotation", ".", "plot_multiple_transformations", "(", "indices", "=", "train_indices", ",", "train_set", "=", "True", ",", "\n", "param_name", "=", "param_name", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "\n", "##### Plots test reconstructions", "\n", "", "samples_pairs", "=", "np", ".", "random", ".", "randint", "(", "\n", "0", ",", "len", "(", "model_with_rotation", ".", "data", ".", "X_test", ")", ",", "size", "=", "(", "10", ",", ")", "\n", ")", ".", "tolist", "(", ")", "\n", "model_with_rotation", ".", "plot_x2_reconstructions", "(", "\n", "indices", "=", "samples_pairs", ",", "\n", "train_set", "=", "False", ",", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"plots_test_reconstructions_\"", "+", "save_name", ")", ",", "\n", ")", "\n", "\n", "##### Plots test rotations of samples", "\n", "test_indices", "=", "np", ".", "random", ".", "randint", "(", "\n", "0", ",", "len", "(", "model_with_rotation", ".", "data", ".", "X_orig_test", ")", ",", "size", "=", "(", "10", ",", ")", "\n", ")", ".", "tolist", "(", ")", "\n", "figsave_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "\"plots_test_rotations_\"", "+", "save_name", "+", "'.png'", ")", "\n", "if", "args", ".", "supervised", ":", "\n", "            ", "if", "n_transfos", "==", "1", ":", "\n", "                ", "if", "args", ".", "data_n_x", ">", "0", ":", "\n", "                    ", "param_name", "=", "'tx'", "\n", "", "elif", "args", ".", "data_n_y", ">", "0", ":", "\n", "                    ", "param_name", "=", "'ty'", "\n", "", "if", "args", ".", "data_n_rot", ">", "0", ":", "\n", "                    ", "param_name", "=", "'angle'", "\n", "", "model_with_rotation", ".", "plot_multiple_transformations", "(", "indices", "=", "test_indices", ",", "train_set", "=", "False", ",", "\n", "param_name", "=", "param_name", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "", "else", ":", "\n", "                ", "model_with_rotation", ".", "plot_multiple_transformations_stacked", "(", "indices", "=", "test_indices", ",", "train_set", "=", "False", ",", "\n", "n_plots", "=", "10", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "args", ".", "data_n_x", ">", "0", ":", "\n", "                ", "param_name", "=", "'tx'", "\n", "", "elif", "args", ".", "data_n_y", ">", "0", ":", "\n", "                ", "param_name", "=", "'ty'", "\n", "", "if", "args", ".", "data_n_rot", ">", "0", ":", "\n", "                ", "param_name", "=", "'angle'", "\n", "", "model_with_rotation", ".", "plot_multiple_transformations", "(", "indices", "=", "test_indices", ",", "train_set", "=", "False", ",", "\n", "param_name", "=", "param_name", ",", "save_name", "=", "figsave_name", "\n", ")", "\n", "\n", "\n", "", "", "elif", "args", ".", "mode", "==", "\"test\"", ":", "\n", "        ", "file_name", "=", "\"best_checkpoint_{}.pth.tar\"", ".", "format", "(", "model_with_rotation", ".", "save_name", ")", "\n", "path_to_model", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "file_name", ")", "\n", "model_with_rotation", ".", "load_model", "(", "path_to_model", ")", "\n", "if", "args", ".", "supervised", ":", "\n", "            ", "loss_func", "=", "model_with_rotation", ".", "reconstruction_mse_transformed_z1", "\n", "", "else", ":", "\n", "            ", "loss_func", "=", "model_with_rotation", ".", "reconstruction_mse_transformed_z1_weak", "\n", "", "test_mse", "=", "model_with_rotation", ".", "compute_test_loss", "(", "\n", "loss_func", ",", "model_with_rotation", ".", "data", ".", "test_loader_batch_100", "\n", ")", "\n", "torch", ".", "save", "(", "\n", "torch", ".", "FloatTensor", "(", "[", "test_mse", "]", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "output_directory", ",", "\"test_mse_\"", "+", "model_with_rotation", ".", "save_name", "\n", ")", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_datasets.TestSimpleShapes.test_train_loader": [[15, 21], ["datasets.datasets.datasets.SimpleShapes", "hasattr", "hasattr", "len", "len"], "methods", ["None"], ["    ", "def", "test_train_loader", "(", "self", ")", ":", "\n", "        ", "simple_shapes", "=", "datasets", ".", "SimpleShapes", "(", "16", ",", "n_classes", "=", "3", ")", "\n", "assert", "hasattr", "(", "simple_shapes", ",", "\"train_loader\"", ")", "\n", "assert", "hasattr", "(", "simple_shapes", ",", "\"test_loader\"", ")", "\n", "assert", "len", "(", "simple_shapes", ".", "train_loader", ")", ">", "0", "\n", "assert", "len", "(", "simple_shapes", ".", "test_loader", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_datasets.TestSimpleShapes.test_transformations": [[22, 32], ["datasets.datasets.datasets.SimpleShapes"], "methods", ["None"], ["", "def", "test_transformations", "(", "self", ")", ":", "\n", "        ", "simple_shapes", "=", "datasets", ".", "SimpleShapes", "(", "\n", "16", ",", "\n", "n_classes", "=", "3", ",", "\n", "n_rotations", "=", "9", ",", "\n", "n_x_translations", "=", "5", ",", "\n", "n_y_translations", "=", "10", ",", "\n", "scaling_factors", "=", "(", "1.0", ",", "1.2", ")", ",", "\n", ")", "\n", "assert", "simple_shapes", ".", "total_n_transformations", ">", "50", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_datasets.TestProjectiveMNIST.test_creation": [[35, 49], ["datasets.datasets.datasets.ProjectiveMNIST", "math.ceil", "len", "torch.Size"], "methods", ["None"], ["    ", "def", "test_creation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Verifies rotated mnist is created properly\"\"\"", "\n", "n_rotations", "=", "9", "\n", "batch_size", "=", "16", "\n", "train_size", "=", "5000", "\n", "\n", "rotated_mnist", "=", "datasets", ".", "ProjectiveMNIST", "(", "batch_size", ",", "n_rotations", "=", "n_rotations", ")", "\n", "expected_n_batches", "=", "math", ".", "ceil", "(", "\n", "(", "rotated_mnist", ".", "total_n_transformations", "**", "2", ")", "*", "train_size", "/", "batch_size", "\n", ")", "\n", "assert", "len", "(", "rotated_mnist", ".", "train_loader", ")", "==", "expected_n_batches", "\n", "\n", "# test shape of x2", "\n", "assert", "rotated_mnist", ".", "X_train", "[", "3", "]", "[", "1", "]", ".", "shape", "==", "torch", ".", "Size", "(", "[", "1", ",", "28", ",", "28", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_datasets.TestProjectiveMNIST.test_proportion": [[50, 74], ["datasets.datasets.datasets.ProjectiveMNIST", "len", "len"], "methods", ["None"], ["", "def", "test_proportion", "(", "self", ")", ":", "\n", "        ", "n_rotations", "=", "9", "\n", "batch_size", "=", "16", "\n", "train_proportion", "=", "0.001", "\n", "test_proportion", "=", "0.005", "\n", "# 10k for validation", "\n", "full_train_size", "=", "50000", "\n", "full_test_size", "=", "10000", "\n", "\n", "rotated_mnist", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "batch_size", ",", "\n", "n_rotations", "=", "n_rotations", ",", "\n", "train_set_proportion", "=", "train_proportion", ",", "\n", "valid_set_proportion", "=", "train_proportion", ",", "\n", "test_set_proportion", "=", "test_proportion", ",", "\n", ")", "\n", "\n", "expected_train_size", "=", "(", "\n", "full_train_size", "*", "train_proportion", "*", "(", "n_rotations", "+", "1", ")", "**", "2", "\n", ")", "\n", "expected_test_size", "=", "full_test_size", "*", "test_proportion", "*", "(", "n_rotations", "+", "1", ")", "**", "2", "\n", "\n", "assert", "len", "(", "rotated_mnist", ".", "X_train", ")", "==", "expected_train_size", "\n", "assert", "len", "(", "rotated_mnist", ".", "X_test", ")", "==", "expected_test_size", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_datasets.TestTransformations.test_transform": [[77, 85], ["torch.rand", "datasets.datasets.transformations.Params", "datasets.datasets.transformations.transform", "torch.is_tensor"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.datasets.transformations.transform"], ["    ", "def", "test_transform", "(", "self", ")", ":", "\n", "        ", "shape", "=", "(", "1", ",", "30", ",", "30", ")", "\n", "image", "=", "torch", ".", "rand", "(", "shape", ")", "\n", "params", "=", "transformations", ".", "Params", "(", "angle", "=", "45.0", ")", "\n", "\n", "rotated_X", "=", "transformations", ".", "transform", "(", "image", ",", "params", ")", "\n", "assert", "torch", ".", "is_tensor", "(", "rotated_X", ")", "\n", "assert", "rotated_X", ".", "shape", "==", "image", ".", "shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestAutoencoder.simple_shapes": [[14, 18], ["pytest.fixture", "datasets.datasets.datasets.SimpleShapes"], "methods", ["None"], ["    ", "@", "pytest", ".", "fixture", "(", "scope", "=", "\"module\"", ")", "\n", "def", "simple_shapes", "(", "self", ")", ":", "\n", "        ", "batch_size", "=", "4", "\n", "return", "datasets", ".", "SimpleShapes", "(", "batch_size", ",", "n_classes", "=", "10", ",", "n_rotations", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestAutoencoder.test_autoencoder": [[19, 25], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_autoencoder", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "AutoEncoder", "(", "\n", "simple_shapes", ",", "device", "=", "\"cpu\"", ",", "n_epochs", "=", "n_epochs", ",", "learning_rate", "=", "learning_rate", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestAutoencoder.test_autoencoder_with_shift_operator": [[26, 37], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_autoencoder_with_shift_operator", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "\"\"\"Tests autoencoder with latent rotation\"\"\"", "\n", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "AutoEncoder", "(", "\n", "simple_shapes", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "latent_operator_name", "=", "\"ShiftOperator\"", ",", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestAutoencoder.test_autoencoder_with_disentangled_rotation": [[38, 49], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_autoencoder_with_disentangled_rotation", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "\"\"\"Tests autoencoder with latent rotation\"\"\"", "\n", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "AutoEncoder", "(", "\n", "simple_shapes", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "latent_operator_name", "=", "\"DisentangledRotation\"", ",", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.__init__": [[52, 55], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "n_epochs", "=", "1", "\n", "self", ".", "learning_rate", "=", "0.01", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.test_standard_autoencoder": [[56, 61], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_standard_autoencoder", "(", "self", ",", "rotated_mnist", ")", ":", "\n", "        ", "model", "=", "AutoEncoder", "(", "\n", "rotated_mnist", ",", "n_epochs", "=", "self", ".", "n_epochs", ",", "learning_rate", "=", "self", ".", "learning_rate", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.test_rotated_autoencoder": [[62, 71], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_rotated_autoencoder", "(", "self", ",", "rotated_mnist", ")", ":", "\n", "        ", "model", "=", "AutoEncoder", "(", "\n", "rotated_mnist", ",", "\n", "z_dim", "=", "400", ",", "\n", "latent_operator_name", "=", "\"DisentangledRotation\"", ",", "\n", "n_epochs", "=", "self", ".", "n_epochs", ",", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_autoencoder.TestProjectiveMnistAutoencoder.test_shift_operator_autoencoder": [[72, 81], ["autoencoder.AutoEncoder", "autoencoder.AutoEncoder.run"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.run"], ["", "def", "test_shift_operator_autoencoder", "(", "self", ",", "rotated_mnist", ")", ":", "\n", "        ", "model", "=", "AutoEncoder", "(", "\n", "rotated_mnist", ",", "\n", "z_dim", "=", "400", ",", "\n", "latent_operator_name", "=", "\"ShiftOperator\"", ",", "\n", "n_epochs", "=", "self", ".", "n_epochs", ",", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", ")", "\n", "model", ".", "run", "(", "stop_early", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.TestCCIVariationalAutoEncoder.test_vae": [[34, 45], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["    ", "def", "test_vae", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "simple_shapes", ",", "\n", "beta", "=", "1.0", ",", "\n", "c_max", "=", "0.0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.TestCCIVariationalAutoEncoder.test_beta_vae": [[46, 57], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "test_beta_vae", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "simple_shapes", ",", "\n", "beta", "=", "1.0", ",", "\n", "c_max", "=", "0.0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.TestCCIVariationalAutoEncoder.test_cci_vae": [[58, 69], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "test_cci_vae", "(", "self", ",", "simple_shapes", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "simple_shapes", ",", "\n", "beta", "=", "100.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.TestProjectiveMNISTVAE.test_vae": [[72, 83], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["    ", "def", "test_vae", "(", "self", ",", "rotated_mnist", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "rotated_mnist", ",", "\n", "beta", "=", "1.0", ",", "\n", "c_max", "=", "0.0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", ")", "\n", "model", ".", "train", "(", "stop_early", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.TestProjectiveMNISTVAE.test_cci_vae": [[84, 95], ["cci_variational_autoencoder.CCIVariationalAutoEncoder", "cci_variational_autoencoder.CCIVariationalAutoEncoder.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.None.complex_shift_autoencoder.ComplexAutoEncoder.train"], ["", "def", "test_cci_vae", "(", "self", ",", "rotated_mnist", ")", ":", "\n", "        ", "n_epochs", ",", "learning_rate", "=", "1", ",", "0.001", "\n", "model", "=", "CCIVariationalAutoEncoder", "(", "\n", "rotated_mnist", ",", "\n", "beta", "=", "100.0", ",", "\n", "c_max", "=", "36.0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "n_epochs", "=", "n_epochs", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", ")", "\n", "model", ".", "train", "(", "stop_early", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.rotated_mnist": [[15, 25], ["pytest.fixture", "datasets.datasets.ProjectiveMNIST"], "function", ["None"], ["@", "pytest", ".", "fixture", "(", "scope", "=", "\"module\"", ")", "\n", "def", "rotated_mnist", "(", ")", ":", "\n", "    ", "rotated_mnist", "=", "datasets", ".", "ProjectiveMNIST", "(", "\n", "BATCH_SIZE", ",", "\n", "n_rotations", "=", "9", ",", "\n", "train_set_proportion", "=", "0.001", ",", "\n", "test_set_proportion", "=", "0.001", ",", "\n", "valid_set_proportion", "=", "0.001", ",", "\n", ")", "\n", "return", "rotated_mnist", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_Addressing-the-Topological-Defects-of-Disentanglement.tests.test_cci_vae.simple_shapes": [[27, 31], ["pytest.fixture", "datasets.datasets.SimpleShapes"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "(", "scope", "=", "\"module\"", ")", "\n", "def", "simple_shapes", "(", ")", ":", "\n", "    ", "batch_size", "=", "16", "\n", "return", "datasets", ".", "SimpleShapes", "(", "batch_size", ",", "n_classes", "=", "10", ")", "\n", "\n"]]}