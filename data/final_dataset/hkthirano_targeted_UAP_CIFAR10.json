{"home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_bn_relu": [[12, 25], ["keras.layers.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.Activation", "keras.initializers.he_normal", "keras.regularizers.l2"], "function", ["None"], ["def", "conv_bn_relu", "(", "x", ",", "filters", ",", "name", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "strides", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "    ", "\"\"\"conv2D + batch normalization + relu activation\"\"\"", "\n", "\n", "x", "=", "Conv2D", "(", "\n", "filters", ",", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "padding", "=", "'same'", ",", "use_bias", "=", "False", ",", "\n", "kernel_initializer", "=", "initializers", ".", "he_normal", "(", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "name", "=", "name", "+", "'_conv2D'", "\n", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "momentum", "=", "momentum", ",", "epsilon", "=", "epsilon", ",", "name", "=", "name", "+", "'_BN'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ",", "name", "=", "name", "+", "'_relu'", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_blocks": [[27, 37], ["range", "vgg_model.conv_bn_relu", "int", "vgg_model.conv_bn_relu", "vgg_model.conv_bn_relu"], "function", ["home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_bn_relu", "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_bn_relu", "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_bn_relu"], ["", "def", "conv_blocks", "(", "x", ",", "filters", ",", "num_blocks", ",", "name", ")", ":", "\n", "    ", "\"\"\"two conv, downsampling if dimension not match\"\"\"", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "        ", "if", "int", "(", "x", ".", "shape", "[", "-", "1", "]", ")", "!=", "filters", ":", "\n", "            ", "x", "=", "conv_bn_relu", "(", "x", ",", "filters", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "name", "=", "name", "+", "'_blk{}_conv1'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "conv_bn_relu", "(", "x", ",", "filters", ",", "name", "+", "'_blk{}_conv1'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "", "x", "=", "conv_bn_relu", "(", "x", ",", "filters", ",", "name", "+", "'_blk{}_conv2'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.vgg_model": [[39, 68], ["vgg_model.conv_bn_relu", "vgg_model.conv_blocks", "vgg_model.conv_blocks", "vgg_model.conv_blocks", "keras.layers.GlobalAveragePooling2D", "keras.layers.Dense", "keras.initializers.he_normal", "keras.regularizers.l2"], "function", ["home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_bn_relu", "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_blocks", "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_blocks", "home.repos.pwc.inspect_result.hkthirano_targeted_UAP_CIFAR10.None.vgg_model.conv_blocks"], ["", "def", "vgg_model", "(", "x", ",", "num_classes", ",", "num_blocks", ")", ":", "\n", "    ", "\"\"\"sequential model without shortcut, same number of parameters as its resnet counterpart\"\"\"", "\n", "\n", "# level 0:", "\n", "# input: 32x32x3; output: 32x32x16", "\n", "x", "=", "conv_bn_relu", "(", "x", ",", "16", ",", "name", "=", "'lv0'", ")", "\n", "\n", "# level 1:", "\n", "# input: 32x32x16; output: 32x32x16", "\n", "x", "=", "conv_blocks", "(", "x", ",", "16", ",", "num_blocks", ",", "name", "=", "'lv1'", ")", "\n", "\n", "# level 2:", "\n", "# input: 32x32x16; output: 16x16x32", "\n", "x", "=", "conv_blocks", "(", "x", ",", "32", ",", "num_blocks", ",", "name", "=", "'lv2'", ")", "\n", "\n", "# level 3:", "\n", "# input: 16x16x32; output: 8x8x64", "\n", "x", "=", "conv_blocks", "(", "x", ",", "64", ",", "num_blocks", ",", "name", "=", "'lv3'", ")", "\n", "\n", "# output", "\n", "x", "=", "GlobalAveragePooling2D", "(", "name", "=", "'global_pool'", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "\n", "num_classes", ",", "\n", "activation", "=", "'softmax'", ",", "\n", "kernel_initializer", "=", "initializers", ".", "he_normal", "(", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "name", "=", "'FC'", "\n", ")", "(", "x", ")", "\n", "return", "x", "\n", "", ""]]}