{"home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test_enhance.eval": [[81, 127], ["denoiser.eval", "model.eval", "range", "os.path.join", "os.path.join", "LR_image.__len__", "time.time", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "time.time", "print", "prediction.clip.clip", "PIL.Image.fromarray().save", "os.listdir", "datasets.is_image_file", "os.listdir", "datasets.is_image_file", "torch.no_grad", "torch.no_grad", "torch.no_grad", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "test_enhance.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "PIL.Image.open", "PIL.Image.fromarray", "str", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward"], ["", "def", "eval", "(", ")", ":", "\n", "    ", "denoiser", ".", "eval", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "LR_image", "=", "[", "join", "(", "opt", ".", "input", ",", "x", ")", "for", "x", "in", "listdir", "(", "opt", ".", "input", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "opt", ".", "output", ",", "x", ")", "for", "x", "in", "listdir", "(", "opt", ".", "input", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "avg_psnr_predicted", "=", "0.0", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "chop_forward", "(", "LR", ")", "\n", "pred_90", "=", "chop_forward", "(", "LR_90", ")", "\n", "pred_180", "=", "chop_forward", "(", "LR_180", ")", "\n", "pred_270", "=", "chop_forward", "(", "LR_270", ")", "\n", "pred_f", "=", "chop_forward", "(", "LR_f", ")", "\n", "pred_90f", "=", "chop_forward", "(", "LR_90f", ")", "\n", "pred_180f", "=", "chop_forward", "(", "LR_180f", ")", "\n", "pred_270f", "=", "chop_forward", "(", "LR_270f", ")", "\n", "\n", "", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"===> Processing: %s || Timer: %.4f sec.\"", "%", "(", "str", "(", "i", ")", ",", "(", "t1", "-", "t0", ")", ")", ")", "\n", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test_enhance.chop_forward": [[130, 164], ["transform().unsqueeze", "torch.TensorDataset", "torch.DataLoader", "enumerate", "torch.autograd.Variable().cuda", "Variable().cuda.size", "image_utils.patchify_tensor", "image_utils.patchify_tensor.size", "transform", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.cat", "torch.cat", "torch.cat", "image_utils.recompose_tensor", "model.data[].cpu().permute().numpy", "torch.autograd.Variable", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable().cuda", "denoiser", "model", "torch.cat.append", "model.data[].cpu().permute", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable", "numpy.random.normal", "model.data[].cpu"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.patchify_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.recompose_tensor"], ["", "", "def", "chop_forward", "(", "img", ")", ":", "\n", "\n", "\n", "    ", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "batch_size", ",", "channels", ",", "img_height", ",", "img_width", "=", "input", ".", "size", "(", ")", "\n", "\n", "lowres_patches", "=", "patchify_tensor", "(", "input", ",", "patch_size", "=", "opt", ".", "patch_size", ",", "overlap", "=", "opt", ".", "stride", ")", "\n", "\n", "n_patches", "=", "lowres_patches", ".", "size", "(", "0", ")", "\n", "out_box", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "p", "in", "range", "(", "n_patches", ")", ":", "\n", "                ", "LR_input", "=", "lowres_patches", "[", "p", ":", "p", "+", "1", "]", "\n", "std_z", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "input", ".", "shape", "[", "0", "]", ",", "512", ")", ")", ")", ".", "float", "(", ")", "\n", "z", "=", "Variable", "(", "std_z", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "Denoise_LR", "=", "denoiser", "(", "LR_input", ",", "z", ")", "\n", "SR", "=", "model", "(", "Denoise_LR", ")", "\n", "out_box", ".", "append", "(", "SR", ")", "\n", "\n", "", "out_box", "=", "torch", ".", "cat", "(", "out_box", ",", "0", ")", "\n", "SR", "=", "recompose_tensor", "(", "out_box", ",", "opt", ".", "upscale_factor", "*", "img_height", ",", "opt", ".", "upscale_factor", "*", "img_width", ",", "\n", "overlap", "=", "opt", ".", "upscale_factor", "*", "opt", ".", "stride", ")", "\n", "\n", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", "\n", "\n", "", "", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.reduce_image": [[4, 13], ["img.size", "torch.zeros().cuda", "range", "range", "torch.zeros", "range"], "function", ["None"], ["def", "reduce_image", "(", "img", ",", "scale", ")", ":", "\n", "    ", "batch", ",", "channels", ",", "height", ",", "width", "=", "img", ".", "size", "(", ")", "\n", "reduced_img", "=", "torch", ".", "zeros", "(", "batch", ",", "channels", "*", "scale", "*", "scale", ",", "height", "//", "scale", ",", "width", "//", "scale", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "x", "in", "range", "(", "scale", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "scale", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "channels", ")", ":", "\n", "                ", "reduced_img", "[", ":", ",", "c", "+", "channels", "*", "(", "y", "+", "scale", "*", "x", ")", ",", ":", ",", ":", "]", "=", "img", "[", ":", ",", "c", ",", "x", ":", ":", "scale", ",", "y", ":", ":", "scale", "]", "\n", "", "", "", "return", "reduced_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.reconstruct_image": [[15, 26], ["features.size", "torch.zeros().cuda", "range", "range", "torch.zeros", "range"], "function", ["None"], ["", "def", "reconstruct_image", "(", "features", ",", "scale", ")", ":", "\n", "    ", "batch", ",", "channels", ",", "height", ",", "width", "=", "features", ".", "size", "(", ")", "\n", "img_channels", "=", "channels", "//", "(", "scale", "**", "2", ")", "\n", "reconstructed_img", "=", "torch", ".", "zeros", "(", "batch", ",", "img_channels", ",", "height", "*", "scale", ",", "width", "*", "scale", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "x", "in", "range", "(", "scale", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "scale", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "img_channels", ")", ":", "\n", "                ", "f_channel", "=", "c", "+", "img_channels", "*", "(", "y", "+", "scale", "*", "x", ")", "\n", "reconstructed_img", "[", ":", ",", "c", ",", "x", ":", ":", "scale", ",", "y", ":", ":", "scale", "]", "=", "features", "[", ":", ",", "f_channel", ",", ":", ",", ":", "]", "\n", "", "", "", "return", "reconstructed_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.patchify_tensor": [[28, 50], ["features.size", "range", "torch.cat", "range", "range", "min", "min", "patches.append"], "function", ["None"], ["", "def", "patchify_tensor", "(", "features", ",", "patch_size", ",", "overlap", "=", "10", ")", ":", "\n", "    ", "batch_size", ",", "channels", ",", "height", ",", "width", "=", "features", ".", "size", "(", ")", "\n", "\n", "effective_patch_size", "=", "patch_size", "-", "overlap", "\n", "n_patches_height", "=", "(", "height", "//", "effective_patch_size", ")", "\n", "n_patches_width", "=", "(", "width", "//", "effective_patch_size", ")", "\n", "\n", "if", "n_patches_height", "*", "effective_patch_size", "<", "height", ":", "\n", "        ", "n_patches_height", "+=", "1", "\n", "", "if", "n_patches_width", "*", "effective_patch_size", "<", "width", ":", "\n", "        ", "n_patches_width", "+=", "1", "\n", "\n", "", "patches", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "                ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "width", "-", "patch_size", ")", "\n", "patches", ".", "append", "(", "features", "[", "b", ":", "b", "+", "1", ",", ":", ",", "\n", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "\n", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", ")", "\n", "", "", "", "return", "torch", ".", "cat", "(", "patches", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.recompose_tensor": [[52, 101], ["patches.size", "torch.linspace", "torch.linspace", "torch.ones", "torch.cat", "blending_profile[].repeat", "blending_profile[].repeat", "torch.zeros", "range", "torch.zeros", "range", "print", "range", "blending_patch.cuda.cuda", "blending_image.cuda.cuda", "recomposed_tensor.cuda.cuda", "range", "min", "min", "range", "min", "min"], "function", ["None"], ["", "def", "recompose_tensor", "(", "patches", ",", "full_height", ",", "full_width", ",", "overlap", "=", "10", ")", ":", "\n", "\n", "    ", "batch_size", ",", "channels", ",", "patch_size", ",", "_", "=", "patches", ".", "size", "(", ")", "\n", "effective_patch_size", "=", "patch_size", "-", "overlap", "\n", "n_patches_height", "=", "(", "full_height", "//", "effective_patch_size", ")", "\n", "n_patches_width", "=", "(", "full_width", "//", "effective_patch_size", ")", "\n", "\n", "if", "n_patches_height", "*", "effective_patch_size", "<", "full_height", ":", "\n", "        ", "n_patches_height", "+=", "1", "\n", "", "if", "n_patches_width", "*", "effective_patch_size", "<", "full_width", ":", "\n", "        ", "n_patches_width", "+=", "1", "\n", "\n", "", "n_patches", "=", "n_patches_height", "*", "n_patches_width", "\n", "if", "batch_size", "%", "n_patches", "!=", "0", ":", "\n", "        ", "print", "(", "\"Error: The number of patches provided to the recompose function does not match the number of patches in each image.\"", ")", "\n", "", "final_batch_size", "=", "batch_size", "//", "n_patches", "\n", "\n", "blending_in", "=", "torch", ".", "linspace", "(", "0.1", ",", "1.0", ",", "overlap", ")", "\n", "blending_out", "=", "torch", ".", "linspace", "(", "1.0", ",", "0.1", ",", "overlap", ")", "\n", "middle_part", "=", "torch", ".", "ones", "(", "patch_size", "-", "2", "*", "overlap", ")", "\n", "blending_profile", "=", "torch", ".", "cat", "(", "[", "blending_in", ",", "middle_part", ",", "blending_out", "]", ",", "0", ")", "\n", "\n", "horizontal_blending", "=", "blending_profile", "[", "None", "]", ".", "repeat", "(", "patch_size", ",", "1", ")", "\n", "vertical_blending", "=", "blending_profile", "[", ":", ",", "None", "]", ".", "repeat", "(", "1", ",", "patch_size", ")", "\n", "blending_patch", "=", "horizontal_blending", "*", "vertical_blending", "\n", "\n", "blending_image", "=", "torch", ".", "zeros", "(", "1", ",", "channels", ",", "full_height", ",", "full_width", ")", "\n", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "        ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "            ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "full_height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "full_width", "-", "patch_size", ")", "\n", "blending_image", "[", "0", ",", ":", ",", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", "+=", "blending_patch", "[", "None", "]", "\n", "\n", "", "", "recomposed_tensor", "=", "torch", ".", "zeros", "(", "final_batch_size", ",", "channels", ",", "full_height", ",", "full_width", ")", "\n", "if", "patches", ".", "is_cuda", ":", "\n", "        ", "blending_patch", "=", "blending_patch", ".", "cuda", "(", ")", "\n", "blending_image", "=", "blending_image", ".", "cuda", "(", ")", "\n", "recomposed_tensor", "=", "recomposed_tensor", ".", "cuda", "(", ")", "\n", "", "patch_index", "=", "0", "\n", "for", "b", "in", "range", "(", "final_batch_size", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "                ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "full_height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "full_width", "-", "patch_size", ")", "\n", "recomposed_tensor", "[", "b", ",", ":", ",", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", "+=", "patches", "[", "patch_index", "]", "*", "blending_patch", "\n", "patch_index", "+=", "1", "\n", "", "", "", "recomposed_tensor", "/=", "blending_image", "\n", "\n", "return", "recomposed_tensor", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.ConvBlock.__init__": [[17, 23], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.ConvBlock.forward": [[24, 28], ["modules.ConvBlock.conv", "modules.ConvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.DeconvBlock.__init__": [[31, 37], ["super().__init__", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "deconv", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.DeconvBlock.forward": [[38, 42], ["modules.DeconvBlock.deconv", "modules.DeconvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "deconv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.UpBlock.__init__": [[45, 53], ["super().__init__", "modules.DeconvBlock", "modules.ConvBlock", "modules.DeconvBlock", "modules.ConvBlock", "modules.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "UpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "DeconvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.UpBlock.forward": [[54, 61], ["modules.UpBlock.conv1", "modules.UpBlock.conv2", "modules.UpBlock.conv3", "modules.UpBlock.local_weight2", "modules.UpBlock.local_weight1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "lr", "=", "self", ".", "conv2", "(", "hr", ")", "\n", "residue", "=", "self", ".", "local_weight1", "(", "x", ")", "-", "lr", "\n", "h_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "hr_weight", "=", "self", ".", "local_weight2", "(", "hr", ")", "\n", "return", "hr_weight", "+", "h_residue", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.DownBlock.__init__": [[64, 72], ["super().__init__", "modules.ConvBlock", "modules.DeconvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.DownBlock.forward": [[73, 80], ["modules.DownBlock.conv1", "modules.DownBlock.conv2", "modules.DownBlock.conv3", "modules.DownBlock.local_weight2", "modules.DownBlock.local_weight1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "hr", "=", "self", ".", "conv2", "(", "lr", ")", "\n", "residue", "=", "self", ".", "local_weight1", "(", "x", ")", "-", "hr", "\n", "l_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "lr_weight", "=", "self", ".", "local_weight2", "(", "lr", ")", "\n", "return", "lr_weight", "+", "l_residue", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.ResnetBlock.__init__": [[82, 89], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act1", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "act2", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.ResnetBlock.forward": [[91, 102], ["modules.ResnetBlock.act1", "modules.ResnetBlock.conv1", "modules.ResnetBlock.act2", "modules.ResnetBlock.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "act1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "act2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "out", "=", "out", "+", "x", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.__init__": [[107, 181], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.VAE_denoise.modules", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.DeconvBlock", "modules.DeconvBlock", "modules.ConvBlock", "modules.ResnetBlock", "modules.ResnetBlock", "modules.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Hardtanh", "torch.Hardtanh", "torch.Hardtanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ",", "feat_size", ",", "z_dim", ",", "prior", ")", ":", "\n", "        ", "super", "(", "VAE_denoise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "LR_feat", "=", "nn", ".", "Sequential", "(", "\n", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "denoise_feat", "=", "nn", ".", "Sequential", "(", "\n", "ConvBlock", "(", "2", "*", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "ConvBlock", "(", "4", "*", "dim", ",", "4", "*", "dim", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "DeconvBlock", "(", "4", "*", "dim", ",", "4", "*", "dim", ",", "6", ",", "4", ",", "1", ")", ",", "\n", "DeconvBlock", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "6", ",", "4", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "SR_recon", "=", "nn", ".", "Sequential", "(", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "SR_mu", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "SR_final", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "prior", "=", "prior", "\n", "self", ".", "feat_size", "=", "feat_size", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "8192", ",", "4096", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "q_z_mu", "=", "nn", ".", "Linear", "(", "4096", ",", "z_dim", ")", "\n", "self", ".", "q_z_logvar", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "4096", ",", "z_dim", ")", ",", "\n", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "6.", ",", "max_val", "=", "2.", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "4096", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "8192", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "class_name", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "class_name", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.log_p_z": [[182, 190], ["distributions.log_Normal_standard", "Exception"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Normal_standard"], ["", "", "", "", "def", "log_p_z", "(", "self", ",", "z", ",", "prior", ")", ":", "\n", "        ", "if", "prior", "==", "'standard'", ":", "\n", "            ", "log_prior", "=", "log_Normal_standard", "(", "z", ",", "dim", "=", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Wrong name of the prior!'", ")", "\n", "\n", "", "return", "log_prior", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.reparameterize": [[191, 205], ["logvar.mul().exp_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.cuda.FloatTensor().normal_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "eps.repeat.repeat.mul().add_", "logvar.mul().exp_", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "eps.repeat.repeat.repeat", "eps.repeat.repeat.mul().add_", "logvar.mul", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "eps.repeat.repeat.mul", "logvar.mul", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "eps.repeat.repeat.mul", "logvar.mul().exp_.size", "numpy.random.normal", "logvar.mul().exp_.size", "logvar.mul().exp_.size", "logvar.mul().exp_.size"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ",", "flag", "=", "0", ")", ":", "\n", "        ", "if", "flag", "==", "0", ":", "\n", "            ", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "std", ".", "size", "(", ")", ")", ".", "normal_", "(", ")", "\n", "eps", "=", "Variable", "(", "eps", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "", "else", ":", "\n", "            ", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "0.05", ",", "size", "=", "(", "std", ".", "size", "(", "0", ")", ",", "1", ",", "std", ".", "size", "(", "2", ")", ",", "std", ".", "size", "(", "3", ")", ")", ")", ")", ".", "float", "(", ")", "\n", "eps", "=", "Variable", "(", "eps", ")", ".", "cuda", "(", ")", "\n", "eps", "=", "eps", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.encode": [[206, 213], ["modules.VAE_denoise.VAE_encoder", "modules.VAE_denoise.q_z_mu", "modules.VAE_denoise.q_z_logvar", "HR_feat.view", "HR_feat.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "HR_feat", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "VAE_encoder", "(", "HR_feat", ".", "view", "(", "HR_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "z_q_mu", "=", "self", ".", "q_z_mu", "(", "x", ")", "\n", "z_q_logvar", "=", "self", ".", "q_z_logvar", "(", "x", ")", "\n", "\n", "return", "z_q_mu", ",", "z_q_logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.decode": [[214, 227], ["torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "modules.VAE_denoise.LR_feat", "modules.VAE_denoise.VAE_decoder", "dec_feat.view.view.view", "modules.VAE_denoise.decoder", "modules.VAE_denoise.SR_recon", "dec_feat.view.view.size", "modules.VAE_denoise.SR_mu"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "LR", ",", "z_q", ")", ":", "\n", "        ", "up", "=", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "LR_feat", "=", "self", ".", "LR_feat", "(", "LR", ")", "\n", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", "\n", "dec_feat", "=", "dec_feat", ".", "view", "(", "dec_feat", ".", "size", "(", "0", ")", ",", "-", "1", ",", "self", ".", "feat_size", ",", "self", ".", "feat_size", ")", "\n", "\n", "mu_feat", "=", "self", ".", "decoder", "(", "dec_feat", ")", "\n", "\n", "com_feat", "=", "LR_feat", "-", "mu_feat", "\n", "SR_feat", "=", "self", ".", "SR_recon", "(", "com_feat", ")", "\n", "Denoise_LR", "=", "LR", "-", "self", ".", "SR_mu", "(", "SR_feat", ")", "\n", "\n", "return", "Denoise_LR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.forward": [[229, 245], ["modules.VAE_denoise.encode", "modules.VAE_denoise.reparameterize", "modules.VAE_denoise.log_p_z", "distributions.log_Normal_diag", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "modules.VAE_denoise.decode"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.encode", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.reparameterize", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise.log_p_z", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Normal_diag", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise_vali.decode"], ["", "def", "forward", "(", "self", ",", "HR_feat", ",", "LR", ")", ":", "\n", "        ", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "encode", "(", "HR_feat", ")", "\n", "\n", "# reparameterize", "\n", "z_q", "=", "self", ".", "reparameterize", "(", "z_q_mu", ",", "z_q_logvar", ",", "flag", "=", "0", ")", "\n", "# prior", "\n", "log_p_z", "=", "self", ".", "log_p_z", "(", "z_q", ",", "self", ".", "prior", ")", "\n", "# KL", "\n", "log_q_z", "=", "log_Normal_diag", "(", "z_q", ",", "z_q_mu", ",", "z_q_logvar", ",", "dim", "=", "1", ")", "\n", "KL", "=", "-", "(", "log_p_z", "-", "log_q_z", ")", "\n", "KL", "=", "torch", ".", "sum", "(", "KL", ")", "\n", "\n", "Denoise_LR", "=", "self", ".", "decode", "(", "LR", ",", "z_q", ")", "\n", "\n", "\n", "return", "Denoise_LR", ",", "KL", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise_vali.__init__": [[249, 309], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.VAE_denoise_vali.modules", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.ConvBlock", "modules.DeconvBlock", "modules.DeconvBlock", "modules.ConvBlock", "modules.ResnetBlock", "modules.ResnetBlock", "modules.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Hardtanh", "torch.Hardtanh", "torch.Hardtanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ",", "feat_size", ",", "z_dim", ",", "prior", ")", ":", "\n", "        ", "super", "(", "VAE_denoise_vali", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "LR_feat", "=", "nn", ".", "Sequential", "(", "\n", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "ConvBlock", "(", "4", "*", "dim", ",", "4", "*", "dim", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "DeconvBlock", "(", "4", "*", "dim", ",", "4", "*", "dim", ",", "6", ",", "4", ",", "1", ")", ",", "\n", "DeconvBlock", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "6", ",", "4", ",", "1", ")", ",", "\n", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "SR_recon", "=", "nn", ".", "Sequential", "(", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "SR_mu", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "prior", "=", "prior", "\n", "self", ".", "feat_size", "=", "feat_size", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "8192", ",", "4096", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "q_z_mu", "=", "nn", ".", "Linear", "(", "4096", ",", "z_dim", ")", "\n", "self", ".", "q_z_logvar", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "4096", ",", "z_dim", ")", ",", "\n", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "6.", ",", "max_val", "=", "2.", ")", ",", "\n", ")", "\n", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "4096", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "8192", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "class_name", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "class_name", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise_vali.decode": [[311, 324], ["torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "modules.VAE_denoise_vali.LR_feat", "modules.VAE_denoise_vali.VAE_decoder", "dec_feat.view.view.view", "modules.VAE_denoise_vali.decoder", "modules.VAE_denoise_vali.SR_recon", "dec_feat.view.view.size", "modules.VAE_denoise_vali.SR_mu"], "methods", ["None"], ["", "", "", "", "def", "decode", "(", "self", ",", "LR", ",", "z_q", ")", ":", "\n", "        ", "up", "=", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "LR_feat", "=", "self", ".", "LR_feat", "(", "LR", ")", "\n", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", "\n", "dec_feat", "=", "dec_feat", ".", "view", "(", "dec_feat", ".", "size", "(", "0", ")", ",", "-", "1", ",", "self", ".", "feat_size", ",", "self", ".", "feat_size", ")", "\n", "\n", "mu_feat", "=", "self", ".", "decoder", "(", "dec_feat", ")", "\n", "\n", "com_feat", "=", "LR_feat", "-", "mu_feat", "\n", "SR_feat", "=", "self", ".", "SR_recon", "(", "com_feat", ")", "\n", "Denoise_LR", "=", "LR", "-", "self", ".", "SR_mu", "(", "SR_feat", ")", "\n", "\n", "return", "Denoise_LR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise_vali.forward": [[326, 331], ["modules.VAE_denoise_vali.decode"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_denoise_vali.decode"], ["", "def", "forward", "(", "self", ",", "LR", ",", "z_q", ")", ":", "\n", "\n", "        ", "Denoise_LR", "=", "self", ".", "decode", "(", "LR", ",", "z_q", ")", "\n", "\n", "return", "Denoise_LR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_SR.__init__": [[334, 362], ["torch.Module.__init__", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "modules.ConvBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.VAE_SR.modules", "modules.ResnetBlock", "modules.ResnetBlock", "modules.ResnetBlock", "modules.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "class_name.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ",", "scale_factor", ")", ":", "\n", "        ", "super", "(", "VAE_SR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "self", ".", "LR_feat", "=", "ConvBlock", "(", "input_dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "feat", "=", "nn", ".", "Sequential", "(", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ",", "\n", "ResnetBlock", "(", "dim", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "recon", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "class_name", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "class_name", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "class_name", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VAE_SR.forward": [[364, 370], ["modules.VAE_SR.LR_feat", "modules.VAE_SR.feat", "modules.VAE_SR.recon", "modules.VAE_SR.up"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "LR", ")", ":", "\n", "        ", "LR_feat", "=", "self", ".", "LR_feat", "(", "self", ".", "up", "(", "LR", ")", ")", "\n", "LR_feat", "=", "self", ".", "feat", "(", "LR_feat", ")", "\n", "SR", "=", "self", ".", "recon", "(", "LR_feat", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.discriminator.__init__": [[375, 414], ["torch.Module.__init__", "modules.ConvBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.discriminator.modules", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.ConvBlock", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.ConvBlock", "modules.ConvBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.ConvBlock", "modules.ConvBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.ConvBlock", "modules.ConvBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ",", "image_size", ")", ":", "\n", "        ", "super", "(", "discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_size", "=", "image_size", "\n", "\n", "self", ".", "input_conv", "=", "ConvBlock", "(", "num_channels", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "#512", "\n", "self", ".", "conv_blocks", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "4", ",", "4", ",", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "base_filter", ")", ",", "\n", "ConvBlock", "(", "base_filter", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", ",", "#128", "\n", "nn", ".", "MaxPool2d", "(", "4", ",", "4", ",", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "base_filter", ")", ",", "\n", "ConvBlock", "(", "base_filter", ",", "base_filter", "*", "2", ",", "3", ",", "1", ",", "1", ")", ",", "#32", "\n", "ConvBlock", "(", "base_filter", "*", "2", ",", "base_filter", "*", "2", ",", "4", ",", "2", ",", "1", ")", ",", "#16", "\n", "nn", ".", "BatchNorm2d", "(", "base_filter", "*", "2", ")", ",", "\n", "ConvBlock", "(", "base_filter", "*", "2", ",", "base_filter", "*", "4", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "base_filter", "*", "4", ",", "base_filter", "*", "4", ",", "4", ",", "2", ",", "1", ")", ",", "#8", "\n", "nn", ".", "BatchNorm2d", "(", "base_filter", "*", "4", ")", ",", "\n", "ConvBlock", "(", "base_filter", "*", "4", ",", "base_filter", "*", "8", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ConvBlock", "(", "base_filter", "*", "8", ",", "base_filter", "*", "8", ",", "4", ",", "2", ",", "1", ")", ",", "#4", "\n", "nn", ".", "BatchNorm2d", "(", "base_filter", "*", "8", ")", ",", "\n", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "4", "*", "4", ",", "100", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "# nn.BatchNorm1d(100),", "\n", "nn", ".", "Linear", "(", "100", ",", "1", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.discriminator.forward": [[415, 421], ["modules.discriminator.input_conv", "modules.discriminator.conv_blocks", "modules.discriminator.view", "modules.discriminator.classifier().view", "modules.discriminator.size", "modules.discriminator.classifier"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "input_conv", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_blocks", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", ".", "view", "(", "-", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VGGFeatureExtractor.__init__": [[426, 449], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.VGGFeatureExtractor.parameters", "torchvision.models.vgg19_bn", "torchvision.models.vgg19", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "modules.VGGFeatureExtractor.register_buffer", "modules.VGGFeatureExtractor.register_buffer", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "list", "torchvision.models.vgg19.features.children", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "feature_layer", "=", "34", ",", "\n", "use_bn", "=", "False", ",", "\n", "use_input_norm", "=", "True", ",", "\n", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ":", "\n", "        ", "super", "(", "VGGFeatureExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "use_bn", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "vgg19_bn", "(", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", "\n", "\n", "", "self", ".", "use_input_norm", "=", "use_input_norm", "\n", "if", "self", ".", "use_input_norm", ":", "\n", "            ", "mean", "=", "torch", ".", "Tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "# [0.485-1, 0.456-1, 0.406-1] if input in range [-1,1]", "\n", "std", "=", "torch", ".", "Tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "# [0.229*2, 0.224*2, 0.225*2] if input in range [-1,1]", "\n", "self", ".", "register_buffer", "(", "'mean'", ",", "mean", ")", "\n", "self", ".", "register_buffer", "(", "'std'", ",", "std", ")", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "model", ".", "features", ".", "children", "(", ")", ")", "[", ":", "(", "feature_layer", "+", "1", ")", "]", ")", "\n", "# No need to BP to variable", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "# self.act = nn.Sigmoid()", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.modules.VGGFeatureExtractor.forward": [[451, 457], ["modules.VGGFeatureExtractor.features"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_input_norm", ":", "\n", "            ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "", "output", "=", "self", ".", "features", "(", "x", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.prepare_images.ImageSplitter.__init__": [[13, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", ",", "scale_factor", ",", "stride", ")", ":", "\n", "        ", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "height", "=", "0", "\n", "self", ".", "width", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.prepare_images.ImageSplitter.split_img_tensor": [[20, 45], ["img_tensor.size", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.size", "torch.zeros.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "min", "min", "patch_box.append"], "methods", ["None"], ["", "def", "split_img_tensor", "(", "self", ",", "img_tensor", ")", ":", "\n", "# resize image and convert them into tensor", "\n", "        ", "batch", ",", "channel", ",", "height", ",", "width", "=", "img_tensor", ".", "size", "(", ")", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "\n", "side", "=", "min", "(", "height", ",", "width", ",", "self", ".", "patch_size", ")", "\n", "delta", "=", "self", ".", "patch_size", "-", "side", "\n", "Z", "=", "torch", ".", "zeros", "(", "[", "batch", ",", "channel", ",", "height", "+", "delta", ",", "width", "+", "delta", "]", ")", "\n", "Z", "[", ":", ",", ":", ",", "delta", "//", "2", ":", "height", "+", "delta", "//", "2", ",", "delta", "//", "2", ":", "width", "+", "delta", "//", "2", "]", "=", "img_tensor", "\n", "batch", ",", "channel", ",", "new_height", ",", "new_width", "=", "Z", ".", "size", "(", ")", "\n", "\n", "patch_box", "=", "[", "]", "\n", "\n", "# split image into over-lapping pieces", "\n", "for", "i", "in", "range", "(", "0", ",", "new_height", ",", "self", ".", "stride", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "0", ",", "new_width", ",", "self", ".", "stride", ")", ":", "\n", "                ", "x", "=", "min", "(", "new_height", ",", "i", "+", "self", ".", "patch_size", ")", "\n", "y", "=", "min", "(", "new_width", ",", "j", "+", "self", ".", "patch_size", ")", "\n", "part", "=", "Z", "[", ":", ",", ":", ",", "x", "-", "self", ".", "patch_size", ":", "x", ",", "y", "-", "self", ".", "patch_size", ":", "y", "]", "\n", "\n", "patch_box", ".", "append", "(", "part", ")", "\n", "\n", "", "", "patch_tensor", "=", "torch", ".", "cat", "(", "patch_box", ",", "dim", "=", "0", ")", "\n", "return", "patch_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.prepare_images.ImageSplitter.merge_img_tensor": [[46, 76], ["copy.copy", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "range", "min", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "copy.copy.pop"], "methods", ["None"], ["", "def", "merge_img_tensor", "(", "self", ",", "list_img_tensor", ")", ":", "\n", "        ", "img_tensors", "=", "copy", ".", "copy", "(", "list_img_tensor", ")", "\n", "\n", "patch_size", "=", "self", ".", "patch_size", "*", "self", ".", "scale_factor", "\n", "stride", "=", "self", ".", "stride", "*", "self", ".", "scale_factor", "\n", "height", "=", "self", ".", "height", "*", "self", ".", "scale_factor", "\n", "width", "=", "self", ".", "width", "*", "self", ".", "scale_factor", "\n", "side", "=", "min", "(", "height", ",", "width", ",", "patch_size", ")", "\n", "delta", "=", "patch_size", "-", "side", "\n", "new_height", "=", "delta", "+", "height", "\n", "new_width", "=", "delta", "+", "width", "\n", "out", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "new_height", ",", "stride", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "0", ",", "new_width", ",", "stride", ")", ":", "\n", "                ", "x", "=", "min", "(", "new_height", ",", "i", "+", "patch_size", ")", "\n", "y", "=", "min", "(", "new_width", ",", "j", "+", "patch_size", ")", "\n", "mask_patch", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "out_patch", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "mask_patch", "[", ":", ",", ":", ",", "(", "x", "-", "patch_size", ")", ":", "x", ",", "(", "y", "-", "patch_size", ")", ":", "y", "]", "=", "1.0", "\n", "out_patch", "[", ":", ",", ":", ",", "(", "x", "-", "patch_size", ")", ":", "x", ",", "(", "y", "-", "patch_size", ")", ":", "y", "]", "=", "img_tensors", ".", "pop", "(", "0", ")", "\n", "mask", "=", "mask", "+", "mask_patch", "\n", "out", "=", "out", "+", "out_patch", "\n", "\n", "", "", "out", "=", "out", "/", "mask", "\n", "\n", "out", "=", "out", "[", ":", ",", ":", ",", "delta", "//", "2", ":", "new_height", "-", "delta", "//", "2", ",", "delta", "//", "2", ":", "new_width", "-", "delta", "//", "2", "]", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform": [[5, 8], ["torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "function", ["None"], ["def", "transform", "(", ")", ":", "\n", "    ", "return", "Compose", "(", "[", "\n", "ToTensor", "(", ")", ",", "\n", "# Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.get_training_set": [[11, 16], ["os.path.join", "os.path.join", "datasets.DatasetFromFolder", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform"], ["", "def", "get_training_set", "(", "data_dir", ",", "upscale_factor", ",", "patch_size", ",", "data_augmentation", ")", ":", "\n", "    ", "hr_dir", "=", "join", "(", "data_dir", ",", "'HR'", ")", "\n", "lr_dir", "=", "join", "(", "data_dir", ",", "'LR'", ")", "\n", "return", "DatasetFromFolder", "(", "hr_dir", ",", "lr_dir", ",", "patch_size", ",", "upscale_factor", ",", "data_augmentation", ",", "\n", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.get_eval_set": [[17, 20], ["datasets.DatasetFromFolderEval", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform"], ["", "def", "get_eval_set", "(", "lr_dir", ",", "upscale_factor", ")", ":", "\n", "    ", "return", "DatasetFromFolderEval", "(", "lr_dir", ",", "upscale_factor", ",", "\n", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_GAN.train": [[53, 160], ["G.train", "D.train", "feat_extractor.eval", "denoiser.eval", "enumerate", "print", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "D.parameters", "G_optimizer.zero_grad", "torch.nn.Upsample.", "G", "G", "feat_extractor().detach", "feat_extractor().detach", "feat_extractor().detach", "D", "D", "D().detach", "G_loss.backward", "G_optimizer.step", "D.parameters", "D_optimizer.zero_grad", "D", "D", "D", "D_loss.backward", "D_optimizer.step", "writer.add_scalars", "print", "Variable().cuda.size", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable().cuda", "denoiser", "G.detach", "G.detach", "feat_extractor", "feat_extractor", "feat_extractor", "D", "BCE_loss", "L1_loss", "L1_loss", "L1_loss", "L1_loss", "BCE_loss", "len", "len", "len", "len", "len", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable", "BCE_loss", "BCE_loss", "torch.nn.Upsample.", "torch.nn.Upsample.", "BCE_loss", "BCE_loss", "numpy.random.normal"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.train", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.train", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "G_epoch_loss", "=", "0", "\n", "D_epoch_loss", "=", "0", "\n", "adv_epoch_loss", "=", "0", "\n", "vgg_epoch_loss", "=", "0", "\n", "recon_epoch_loss", "=", "0", "\n", "G", ".", "train", "(", ")", "\n", "D", ".", "train", "(", ")", "\n", "feat_extractor", ".", "eval", "(", ")", "\n", "denoiser", ".", "eval", "(", ")", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "training_data_loader", ",", "1", ")", ":", "\n", "        ", "input", ",", "target", ",", "ref", "=", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", ",", "batch", "[", "2", "]", "\n", "minibatch", "=", "input", ".", "size", "(", ")", "[", "0", "]", "\n", "real_label", "=", "torch", ".", "ones", "(", "minibatch", ")", "\n", "fake_label", "=", "torch", ".", "zeros", "(", "minibatch", ")", "\n", "\n", "if", "cuda", ":", "\n", "            ", "input", "=", "Variable", "(", "input", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "target", "=", "Variable", "(", "target", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "ref", "=", "Variable", "(", "ref", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "real_label", "=", "Variable", "(", "real_label", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "fake_label", "=", "Variable", "(", "fake_label", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "\n", "", "down", "=", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "0.25", ",", "mode", "=", "'bicubic'", ")", "\n", "up", "=", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "# Reset gradient", "\n", "for", "p", "in", "D", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "\n", "", "G_optimizer", ".", "zero_grad", "(", ")", "\n", "down_ref", "=", "down", "(", "ref", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "std_z", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "input", ".", "shape", "[", "0", "]", ",", "512", ")", ")", ")", ".", "float", "(", ")", "\n", "z", "=", "Variable", "(", "std_z", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "Denoise_LR", "=", "denoiser", "(", "input", ",", "z", ")", "\n", "\n", "", "SR", "=", "G", "(", "Denoise_LR", ")", "\n", "SR_tar", "=", "G", "(", "target", ")", "\n", "\n", "SR_feat", "=", "feat_extractor", "(", "SR", ")", ".", "detach", "(", ")", "\n", "SR_tar_feat", "=", "feat_extractor", "(", "SR_tar", ")", ".", "detach", "(", ")", "\n", "Tar_feat", "=", "feat_extractor", "(", "target", ")", ".", "detach", "(", ")", "\n", "\n", "\n", "D_fake_decision_1", "=", "D", "(", "SR", ")", "\n", "D_fake_decision_2", "=", "D", "(", "SR_tar", ")", "\n", "D_real_decision", "=", "D", "(", "ref", ")", ".", "detach", "(", ")", "\n", "\n", "GAN_loss", "=", "(", "BCE_loss", "(", "D_fake_decision_1", ",", "real_label", ")", "\n", "+", "BCE_loss", "(", "D_fake_decision_2", ",", "real_label", ")", "\n", "+", "BCE_loss", "(", "D_real_decision", ",", "fake_label", ")", ")", "/", "3.0", "\n", "\n", "\n", "recon_loss", "=", "(", "L1_loss", "(", "down", "(", "SR", ")", ",", "target", ")", "+", "L1_loss", "(", "SR_tar", ",", "SR", ")", ")", "/", "2.0", "\n", "vgg_loss", "=", "(", "L1_loss", "(", "down", "(", "SR_feat", ")", ",", "Tar_feat", ")", "+", "L1_loss", "(", "SR_tar_feat", ",", "SR_feat", ")", ")", "/", "2.0", "\n", "\n", "G_loss", "=", "1.0", "*", "vgg_loss", "+", "1.0", "*", "recon_loss", "+", "0.0001", "*", "GAN_loss", "\n", "\n", "G_loss", ".", "backward", "(", ")", "\n", "G_optimizer", ".", "step", "(", ")", "\n", "\n", "# Reset gradient", "\n", "for", "p", "in", "D", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "True", "\n", "\n", "", "D_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Train discriminator with real data", "\n", "D_real_decision", "=", "D", "(", "ref", ")", "\n", "# Train discriminator with fake data", "\n", "D_fake_decision_1", "=", "D", "(", "SR_tar", ".", "detach", "(", ")", ")", "\n", "D_fake_decision_2", "=", "D", "(", "SR", ".", "detach", "(", ")", ")", "\n", "\n", "\n", "Dis_loss", "=", "(", "BCE_loss", "(", "D_real_decision", ",", "real_label", ")", "\n", "+", "BCE_loss", "(", "D_fake_decision_1", ",", "fake_label", ")", "\n", "+", "BCE_loss", "(", "D_fake_decision_2", ",", "fake_label", ")", ")", "/", "3.0", "\n", "\n", "# Back propagation", "\n", "D_loss", "=", "Dis_loss", "\n", "D_loss", ".", "backward", "(", ")", "\n", "D_optimizer", ".", "step", "(", ")", "\n", "\n", "# log", "\n", "G_epoch_loss", "+=", "G_loss", ".", "data", "\n", "D_epoch_loss", "+=", "D_loss", ".", "data", "\n", "adv_epoch_loss", "+=", "(", "GAN_loss", ".", "data", ")", "\n", "recon_epoch_loss", "+=", "(", "recon_loss", ".", "data", ")", "\n", "vgg_epoch_loss", "+=", "(", "vgg_loss", ".", "data", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "'Train_Loss'", ",", "{", "'G_loss'", ":", "G_loss", ".", "data", ",", "\n", "'D_loss'", ":", "D_loss", ".", "data", ",", "\n", "'VGG_loss'", ":", "vgg_loss", ".", "data", ",", "\n", "'Adv_loss'", ":", "GAN_loss", ".", "data", ",", "\n", "'Recon_loss'", ":", "recon_loss", ".", "data", "\n", "}", ",", "epoch", ",", "iteration", ")", "\n", "print", "(", "\n", "\"===> Epoch[{}]({}/{}): G_loss: {:.4f} || D_loss: {:.4f} ||  Adv: {:.4f} || Recon_Loss: {:.4f} || VGG_Loss: {:.4f}\"", ".", "format", "(", "\n", "epoch", ",", "iteration", ",", "\n", "len", "(", "training_data_loader", ")", ",", "G_loss", ".", "data", ",", "D_loss", ".", "data", ",", "GAN_loss", ".", "data", ",", "recon_loss", ".", "data", ",", "vgg_loss", ".", "data", ")", ")", "\n", "", "print", "(", "\n", "\"===> Epoch {} Complete: Avg. G_loss: {:.4f} D_loss: {:.4f} Recon_loss: {:.4f} Adv: {:.4f}\"", ".", "format", "(", "\n", "epoch", ",", "G_epoch_loss", "/", "len", "(", "training_data_loader", ")", ",", "D_epoch_loss", "/", "len", "(", "training_data_loader", ")", ",", "\n", "recon_epoch_loss", "/", "len", "(", "training_data_loader", ")", ",", "\n", "adv_epoch_loss", "/", "len", "(", "training_data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_GAN.print_network": [[162, 168], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_GAN.checkpoint": [[170, 181], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "G.state_dict", "G.state_dict", "D.state_dict"], "function", ["None"], ["", "def", "checkpoint", "(", "epoch", ",", "pretrained_flag", "=", "False", ")", ":", "\n", "    ", "if", "pretrained_flag", ":", "\n", "        ", "model_out_G", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_pretrain_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "G", ".", "state_dict", "(", ")", ",", "model_out_G", ")", "\n", "print", "(", "\"Checkpoint saved to {}\"", ".", "format", "(", "model_out_G", ")", ")", "\n", "", "else", ":", "\n", "        ", "model_out_G", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_generator_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "model_out_D", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_discriminator_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "G", ".", "state_dict", "(", ")", ",", "model_out_G", ")", "\n", "torch", ".", "save", "(", "D", ".", "state_dict", "(", ")", ",", "model_out_D", ")", "\n", "print", "(", "\"Checkpoint saved to {} and {}\"", ".", "format", "(", "model_out_G", ",", "model_out_D", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval": [[80, 103], ["denoiser.eval", "model.eval", "range", "os.path.join", "os.path.join", "LR_image.__len__", "time.time", "PIL.Image.open().convert", "time.time", "print", "chop_forward.clamp", "PIL.Image.fromarray().save", "os.listdir", "datasets.is_image_file", "os.listdir", "datasets.is_image_file", "torch.no_grad", "torch.no_grad", "torch.no_grad", "test.chop_forward", "PIL.Image.open", "PIL.Image.fromarray", "str", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.eval", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward"], ["", "def", "eval", "(", ")", ":", "\n", "\n", "    ", "denoiser", ".", "eval", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "LR_image", "=", "[", "join", "(", "opt", ".", "input", ",", "x", ")", "for", "x", "in", "listdir", "(", "opt", ".", "input", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "opt", ".", "output", ",", "x", ")", "for", "x", "in", "listdir", "(", "opt", ".", "input", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "chop_forward", "(", "LR", ")", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"===> Processing: %s || Timer: %.4f sec.\"", "%", "(", "str", "(", "i", ")", ",", "(", "t1", "-", "t0", ")", ")", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.test.chop_forward": [[112, 146], ["transform().unsqueeze", "torch.TensorDataset", "torch.DataLoader", "enumerate", "torch.autograd.Variable().cuda", "Variable().cuda.size", "image_utils.patchify_tensor", "image_utils.patchify_tensor.size", "transform", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.cat", "torch.cat", "torch.cat", "image_utils.recompose_tensor", "model.data[].cpu().permute", "torch.autograd.Variable", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable().cuda", "denoiser", "model", "torch.cat.append", "model.data[].cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable", "numpy.random.normal"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.patchify_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.image_utils.recompose_tensor"], ["def", "chop_forward", "(", "img", ")", ":", "\n", "\n", "\n", "    ", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "batch_size", ",", "channels", ",", "img_height", ",", "img_width", "=", "input", ".", "size", "(", ")", "\n", "\n", "lowres_patches", "=", "patchify_tensor", "(", "input", ",", "patch_size", "=", "opt", ".", "patch_size", ",", "overlap", "=", "opt", ".", "stride", ")", "\n", "\n", "n_patches", "=", "lowres_patches", ".", "size", "(", "0", ")", "\n", "out_box", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "p", "in", "range", "(", "n_patches", ")", ":", "\n", "                ", "LR_input", "=", "lowres_patches", "[", "p", ":", "p", "+", "1", "]", "\n", "std_z", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "input", ".", "shape", "[", "0", "]", ",", "512", ")", ")", ")", ".", "float", "(", ")", "\n", "z", "=", "Variable", "(", "std_z", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "Denoise_LR", "=", "denoiser", "(", "LR_input", ",", "z", ")", "\n", "SR", "=", "model", "(", "Denoise_LR", ")", "\n", "out_box", ".", "append", "(", "SR", ")", "\n", "\n", "", "out_box", "=", "torch", ".", "cat", "(", "out_box", ",", "0", ")", "\n", "SR", "=", "recompose_tensor", "(", "out_box", ",", "opt", ".", "upscale_factor", "*", "img_height", ",", "opt", ".", "upscale_factor", "*", "img_width", ",", "\n", "overlap", "=", "opt", ".", "upscale_factor", "*", "opt", ".", "stride", ")", "\n", "\n", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "", "", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.train": [[49, 81], ["model.train", "enumerate", "print", "optimizer.zero_grad", "time.time", "HR_feat_extractor().detach", "model", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "L1_criterion", "time.time", "loss.backward", "optimizer.step", "print", "torch.autograd.Variable", "torch.autograd.Variable", "input.cuda.cuda", "target.cuda.cuda", "HR_feat_extractor", "len", "len"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.train"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "epoch_loss", "=", "0", "\n", "model", ".", "train", "(", ")", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "training_data_loader", ",", "1", ")", ":", "\n", "        ", "input", ",", "target", "=", "Variable", "(", "batch", "[", "0", "]", ")", ",", "Variable", "(", "batch", "[", "1", "]", ")", "\n", "if", "cuda", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "target", "=", "target", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "HR_feat", "=", "HR_feat_extractor", "(", "target", ")", ".", "detach", "(", ")", "\n", "Denoise_LR", ",", "KL", "=", "model", "(", "HR_feat", ",", "input", ")", "\n", "KL_loss", "=", "torch", ".", "sum", "(", "KL", ")", "\n", "# Reconstruction loss", "\n", "SR_loss", "=", "L1_criterion", "(", "Denoise_LR", ",", "target", ")", "\n", "\n", "\n", "loss", "=", "SR_loss", "+", "KL_loss", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "data", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"===> Epoch[{}]({}/{}): SR_recon: {:.4f} KL_loss: {:.4f} || Timer: {:.4f} sec.\"", ".", "format", "(", "epoch", ",", "iteration", ",", "\n", "len", "(", "training_data_loader", ")", ",", "SR_loss", ".", "data", ",", "KL_loss", ".", "data", ",", "\n", "(", "t1", "-", "t0", ")", ")", ")", "\n", "\n", "", "print", "(", "\"===> Epoch {} Complete: Avg. Loss: {:.4f}\"", ".", "format", "(", "epoch", ",", "epoch_loss", "/", "len", "(", "training_data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.print_network": [[83, 89], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.main_denoiser.checkpoint": [[91, 96], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model.state_dict"], "function", ["None"], ["", "def", "checkpoint", "(", "epoch", ")", ":", "\n", "    ", "model_out_path", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_epoch_{}.pth\"", ".", "format", "(", "\n", "epoch", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_out_path", ")", "\n", "print", "(", "\"Checkpoint saved to {}\"", ".", "format", "(", "model_out_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Normal_diag": [[10, 16], ["torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.pow", "torch.pow", "torch.pow", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["def", "log_Normal_diag", "(", "x", ",", "mean", ",", "log_var", ",", "average", "=", "False", ",", "dim", "=", "None", ")", ":", "\n", "    ", "log_normal", "=", "-", "0.5", "*", "(", "log_var", "+", "torch", ".", "pow", "(", "x", "-", "mean", ",", "2", ")", "/", "torch", ".", "exp", "(", "log_var", ")", ")", "\n", "if", "average", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "log_normal", ",", "dim", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "log_normal", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Normal_standard": [[17, 23], ["torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "", "def", "log_Normal_standard", "(", "x", ",", "average", "=", "False", ",", "dim", "=", "None", ")", ":", "\n", "    ", "log_normal", "=", "-", "0.5", "*", "torch", ".", "pow", "(", "x", ",", "2", ")", "\n", "if", "average", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "log_normal", ",", "dim", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "log_normal", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Bernoulli": [[24, 31], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "", "def", "log_Bernoulli", "(", "x", ",", "mean", ",", "average", "=", "False", ",", "dim", "=", "None", ")", ":", "\n", "    ", "probs", "=", "torch", ".", "clamp", "(", "mean", ",", "min", "=", "min_epsilon", ",", "max", "=", "max_epsilon", ")", "\n", "log_bernoulli", "=", "x", "*", "torch", ".", "log", "(", "probs", ")", "+", "(", "1.", "-", "x", ")", "*", "torch", ".", "log", "(", "1.", "-", "probs", ")", "\n", "if", "average", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "log_bernoulli", ",", "dim", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "log_bernoulli", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.logisticCDF": [[32, 34], ["torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "", "def", "logisticCDF", "(", "x", ",", "u", ",", "s", ")", ":", "\n", "    ", "return", "1.", "/", "(", "1.", "+", "torch", ".", "exp", "(", "-", "(", "x", "-", "u", ")", "/", "s", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid": [[35, 37], ["torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "1.", "/", "(", "1.", "+", "torch", ".", "exp", "(", "-", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Logistic_256": [[38, 57], ["torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.log", "torch.log", "torch.log", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.floor", "torch.floor", "torch.floor"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid"], ["", "def", "log_Logistic_256", "(", "x", ",", "mean", ",", "logvar", ",", "average", "=", "False", ",", "reduce", "=", "True", ",", "dim", "=", "None", ")", ":", "\n", "    ", "bin_size", "=", "1.", "/", "256.", "\n", "\n", "# implementation like https://github.com/openai/iaf/blob/master/tf_utils/distributions.py#L28", "\n", "scale", "=", "torch", ".", "exp", "(", "logvar", ")", "\n", "x", "=", "(", "torch", ".", "floor", "(", "x", "/", "bin_size", ")", "*", "bin_size", "-", "mean", ")", "/", "scale", "\n", "cdf_plus", "=", "torch", ".", "sigmoid", "(", "x", "+", "bin_size", "/", "scale", ")", "\n", "cdf_minus", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n", "# calculate final log-likelihood for an image", "\n", "log_logist_256", "=", "-", "torch", ".", "log", "(", "cdf_plus", "-", "cdf_minus", "+", "1.e-7", ")", "\n", "\n", "if", "reduce", ":", "\n", "        ", "if", "average", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "log_logist_256", ",", "dim", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sum", "(", "log_logist_256", ",", "dim", ")", "\n", "", "", "else", ":", "\n", "        ", "return", "log_logist_256", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.log_Logistic_512": [[59, 78], ["torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.log", "torch.log", "torch.log", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.floor", "torch.floor", "torch.floor"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.distributions.sigmoid"], ["", "", "def", "log_Logistic_512", "(", "x", ",", "mean", ",", "logvar", ",", "average", "=", "False", ",", "reduce", "=", "True", ",", "dim", "=", "None", ")", ":", "\n", "    ", "bin_size", "=", "1.", "/", "512.", "\n", "\n", "# implementation like https://github.com/openai/iaf/blob/master/tf_utils/distributions.py#L28", "\n", "scale", "=", "torch", ".", "exp", "(", "logvar", ")", "\n", "x", "=", "(", "torch", ".", "floor", "(", "x", "/", "bin_size", ")", "*", "bin_size", "-", "mean", ")", "/", "scale", "\n", "cdf_plus", "=", "torch", ".", "sigmoid", "(", "x", "+", "bin_size", "/", "scale", ")", "\n", "cdf_minus", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n", "# calculate final log-likelihood for an image", "\n", "log_logist_512", "=", "-", "torch", ".", "log", "(", "cdf_plus", "-", "cdf_minus", "+", "1.e-7", ")", "\n", "\n", "if", "reduce", ":", "\n", "        ", "if", "average", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "log_logist_512", ",", "dim", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sum", "(", "log_logist_512", ",", "dim", ")", "\n", "", "", "else", ":", "\n", "        ", "return", "log_logist_512", "", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolder.__init__": [[92, 100], ["torch.Dataset.__init__", "os.path.join", "os.path.join", "os.listdir", "datasets.is_image_file", "os.listdir", "datasets.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "HR_dir", ",", "LR_dir", ",", "patch_size", ",", "upscale_factor", ",", "data_augmentation", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hr_image_filenames", "=", "[", "join", "(", "HR_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "# uncomment it", "\n", "self", ".", "lr_image_filenames", "=", "[", "join", "(", "LR_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "data_augmentation", "=", "data_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolder.__getitem__": [[101, 121], ["datasets.load_img", "datasets.modcrop", "datasets.load_img", "datasets.modcrop", "datasets.load_img", "datasets.get_patch", "datasets.augment", "datasets.DatasetFromFolder.transform", "datasets.DatasetFromFolder.transform", "datasets.DatasetFromFolder.transform", "len"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.get_patch", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.augment", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "target", "=", "load_img", "(", "self", ".", "hr_image_filenames", "[", "index", "]", ")", "\n", "target", "=", "modcrop", "(", "target", ",", "16", ")", "\n", "ref", "=", "load_img", "(", "self", ".", "hr_image_filenames", "[", "len", "(", "self", ".", "hr_image_filenames", ")", "-", "index", "]", ")", "\n", "ref", "=", "modcrop", "(", "ref", ",", "16", ")", "\n", "name", "=", "self", ".", "hr_image_filenames", "[", "index", "]", "\n", "input", "=", "load_img", "(", "self", ".", "lr_image_filenames", "[", "index", "]", ")", "\n", "\n", "input", ",", "target", ",", "ref", "=", "get_patch", "(", "input", ",", "target", ",", "ref", ",", "self", ".", "patch_size", ",", "self", ".", "upscale_factor", ")", "\n", "\n", "if", "self", ".", "data_augmentation", ":", "\n", "            ", "input", ",", "target", ",", "ref", ",", "_", "=", "augment", "(", "input", ",", "target", ",", "ref", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "target", "=", "self", ".", "transform", "(", "target", ")", "\n", "ref", "=", "self", ".", "transform", "(", "ref", ")", "\n", "\n", "", "return", "input", ",", "target", ",", "ref", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolder.__len__": [[122, 124], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "hr_image_filenames", ")", "# modify the hr to lr", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__": [[127, 132], ["torch.Dataset.__init__", "os.path.join", "os.listdir", "datasets.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "lr_dir", ",", "upscale_factor", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolderEval", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_filenames", "=", "[", "join", "(", "lr_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "lr_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__getitem__": [[133, 144], ["datasets.load_img", "os.path.split", "datasets.rescale_img", "datasets.DatasetFromFolderEval.transform"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "input", "=", "load_img", "(", "self", ".", "image_filenames", "[", "index", "]", ")", "\n", "_", ",", "file", "=", "os", ".", "path", ".", "split", "(", "self", ".", "image_filenames", "[", "index", "]", ")", "\n", "\n", "bicubic", "=", "rescale_img", "(", "input", ",", "self", ".", "upscale_factor", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "#input = self.transform(input)", "\n", "            ", "bicubic", "=", "self", ".", "transform", "(", "bicubic", ")", "\n", "\n", "", "return", "bicubic", ",", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.DatasetFromFolderEval.__len__": [[145, 147], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_filenames", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.is_image_file": [[12, 14], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "\".png\"", ",", "\".jpg\"", ",", "\".jpeg\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.load_img": [[16, 20], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "load_img", "(", "filepath", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "'RGB'", ")", "\n", "# y, _, _ = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.modcrop": [[22, 30], ["im.crop"], "function", ["None"], ["", "def", "modcrop", "(", "im", ",", "modulo", ")", ":", "\n", "    ", "(", "h", ",", "w", ")", "=", "im", ".", "size", "\n", "new_h", "=", "h", "//", "modulo", "*", "modulo", "\n", "new_w", "=", "w", "//", "modulo", "*", "modulo", "\n", "ih", "=", "h", "-", "new_h", "\n", "iw", "=", "w", "-", "new_w", "\n", "ims", "=", "im", ".", "crop", "(", "(", "0", ",", "0", ",", "h", "-", "ih", ",", "w", "-", "iw", ")", ")", "\n", "return", "ims", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.rescale_img": [[31, 36], ["tuple", "img_in.resize.resize", "int"], "function", ["None"], ["", "def", "rescale_img", "(", "img_in", ",", "scale", ")", ":", "\n", "    ", "size_in", "=", "img_in", ".", "size", "\n", "new_size_in", "=", "tuple", "(", "[", "int", "(", "x", "*", "scale", ")", "for", "x", "in", "size_in", "]", ")", "\n", "img_in", "=", "img_in", ".", "resize", "(", "new_size_in", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "return", "img_in", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.get_patch": [[38, 62], ["img_in.crop", "img_tar.crop", "img_ref.crop", "random.randrange", "random.randrange"], "function", ["None"], ["", "def", "get_patch", "(", "img_in", ",", "img_tar", ",", "img_ref", ",", "patch_size", ",", "scale", ",", "ix", "=", "-", "1", ",", "iy", "=", "-", "1", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img_in", ".", "size", "\n", "#(th, tw) = (scale * ih, scale * iw)", "\n", "\n", "patch_mult", "=", "scale", "# if len(scale) > 1 else 1", "\n", "tp", "=", "patch_mult", "*", "patch_size", "\n", "ip", "=", "tp", "//", "scale", "\n", "\n", "if", "ix", "==", "-", "1", ":", "\n", "        ", "ix", "=", "random", ".", "randrange", "(", "0", ",", "iw", "-", "tp", "+", "1", ")", "\n", "", "if", "iy", "==", "-", "1", ":", "\n", "        ", "iy", "=", "random", ".", "randrange", "(", "0", ",", "ih", "-", "tp", "+", "1", ")", "\n", "\n", "", "(", "tx", ",", "ty", ")", "=", "(", "scale", "*", "ix", ",", "scale", "*", "iy", ")", "\n", "\n", "out_in", "=", "img_in", ".", "crop", "(", "(", "iy", ",", "ix", ",", "iy", "+", "ip", ",", "ix", "+", "ip", ")", ")", "\n", "out_tar", "=", "img_tar", ".", "crop", "(", "(", "iy", ",", "ix", ",", "iy", "+", "ip", ",", "ix", "+", "ip", ")", ")", "\n", "out_ref", "=", "img_ref", ".", "crop", "(", "(", "iy", ",", "ix", ",", "iy", "+", "tp", ",", "ix", "+", "tp", ")", ")", "\n", "#img_bic = img_bic.crop((ty, tx, ty + tp, tx + tp))", "\n", "\n", "#info_patch = {", "\n", "#    'ix': ix, 'iy': iy, 'ip': ip, 'tx': tx, 'ty': ty, 'tp': tp}", "\n", "\n", "return", "out_in", ",", "out_tar", ",", "out_ref", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_dSRVAE.None.datasets.augment": [[64, 89], ["PIL.ImageOps.flip", "PIL.ImageOps.flip", "PIL.ImageOps.flip", "random.random", "random.random", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror", "random.random", "img_in.rotate.rotate", "img_tar.rotate.rotate", "img_ref.rotate.rotate"], "function", ["None"], ["", "def", "augment", "(", "img_in", ",", "img_tar", ",", "img_ref", ",", "flip_h", "=", "True", ",", "rot", "=", "True", ")", ":", "\n", "    ", "info_aug", "=", "{", "'flip_h'", ":", "False", ",", "'flip_v'", ":", "False", ",", "'trans'", ":", "False", "}", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", "and", "flip_h", ":", "\n", "        ", "img_in", "=", "ImageOps", ".", "flip", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "flip", "(", "img_tar", ")", "\n", "img_ref", "=", "ImageOps", ".", "flip", "(", "img_ref", ")", "\n", "#img_bic = ImageOps.flip(img_bic)", "\n", "info_aug", "[", "'flip_h'", "]", "=", "True", "\n", "\n", "", "if", "rot", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img_in", "=", "ImageOps", ".", "mirror", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "mirror", "(", "img_tar", ")", "\n", "img_ref", "=", "ImageOps", ".", "mirror", "(", "img_ref", ")", "\n", "#img_bic = ImageOps.mirror(img_bic)", "\n", "info_aug", "[", "'flip_v'", "]", "=", "True", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img_in", "=", "img_in", ".", "rotate", "(", "180", ")", "\n", "img_tar", "=", "img_tar", ".", "rotate", "(", "180", ")", "\n", "img_ref", "=", "img_ref", ".", "rotate", "(", "180", ")", "\n", "#img_bic = img_bic.rotate(180)", "\n", "info_aug", "[", "'trans'", "]", "=", "True", "\n", "\n", "", "", "return", "img_in", ",", "img_tar", ",", "img_ref", ",", "info_aug", "\n", "\n"]]}