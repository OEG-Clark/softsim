{"home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.tartanvo_node.TartanVONode.__init__": [[50, 75], ["rospy.get_param", "rospy.get_param", "rospy.get_param", "rospy.get_param", "rospy.get_param", "rospy.get_param", "rospy.get_param", "cv_bridge.CvBridge", "Datasets.utils.Compose", "Datasets.utils.make_intrinsics_layer", "TartanVO.TartanVO.TartanVO", "rospy.Publisher", "rospy.Publisher", "rospy.Subscriber", "rospy.Subscriber", "rospy.Subscriber", "numpy.matrix", "numpy.eye", "Datasets.utils.CropCenter", "Datasets.utils.DownscaleFlow", "Datasets.utils.ToTensor"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.make_intrinsics_layer"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "model_name", "=", "rospy", ".", "get_param", "(", "'~model_name'", ",", "'tartanvo_1914.pkl'", ")", "\n", "w", "=", "rospy", ".", "get_param", "(", "'~image_width'", ",", "640", ")", "\n", "h", "=", "rospy", ".", "get_param", "(", "'~image_height'", ",", "480", ")", "\n", "fx", "=", "rospy", ".", "get_param", "(", "'~focal_x'", ",", "320.0", ")", "\n", "fy", "=", "rospy", ".", "get_param", "(", "'~focal_y'", ",", "320.0", ")", "\n", "ox", "=", "rospy", ".", "get_param", "(", "'~center_x'", ",", "320.0", ")", "\n", "oy", "=", "rospy", ".", "get_param", "(", "'~center_y'", ",", "240.0", ")", "\n", "self", ".", "cam_intrinsics", "=", "[", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", "]", "\n", "\n", "self", ".", "cv_bridge", "=", "CvBridge", "(", ")", "\n", "self", ".", "transform", "=", "Compose", "(", "[", "CropCenter", "(", "(", "448", ",", "640", ")", ")", ",", "DownscaleFlow", "(", ")", ",", "ToTensor", "(", ")", "]", ")", "#, Normalize(mean=[0., 0., 0.],std=[1., 1., 1.])])", "\n", "self", ".", "intrinsic", "=", "make_intrinsics_layer", "(", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", ")", "\n", "self", ".", "tartanvo", "=", "TartanVO", "(", "model_name", ")", "\n", "\n", "self", ".", "pose_pub", "=", "rospy", ".", "Publisher", "(", "\"tartanvo_pose\"", ",", "PoseStamped", ",", "queue_size", "=", "10", ")", "\n", "self", ".", "odom_pub", "=", "rospy", ".", "Publisher", "(", "\"tartanvo_odom\"", ",", "Odometry", ",", "queue_size", "=", "10", ")", "\n", "rospy", ".", "Subscriber", "(", "'rgb_image'", ",", "Image", ",", "self", ".", "handle_img", ")", "\n", "rospy", ".", "Subscriber", "(", "'cam_info'", ",", "CameraInfo", ",", "self", ".", "handle_caminfo", ")", "\n", "rospy", ".", "Subscriber", "(", "'vo_scale'", ",", "Float32", ",", "self", ".", "handle_scale", ")", "\n", "\n", "self", ".", "last_img", "=", "None", "\n", "self", ".", "pose", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "\n", "self", ".", "scale", "=", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.tartanvo_node.TartanVONode.handle_caminfo": [[76, 89], ["Datasets.utils.make_intrinsics_layer", "print", "zip"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.make_intrinsics_layer"], ["", "def", "handle_caminfo", "(", "self", ",", "msg", ")", ":", "\n", "        ", "w", "=", "msg", ".", "width", "\n", "h", "=", "msg", ".", "height", "\n", "fx", "=", "msg", ".", "K", "[", "0", "]", "\n", "fy", "=", "msg", ".", "K", "[", "4", "]", "\n", "ox", "=", "msg", ".", "K", "[", "2", "]", "\n", "oy", "=", "msg", ".", "K", "[", "5", "]", "\n", "new_intrinsics", "=", "[", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", "]", "\n", "change", "=", "[", "xx", "!=", "yy", "for", "xx", ",", "yy", "in", "zip", "(", "new_intrinsics", ",", "self", ".", "cam_intrinsics", ")", "]", "\n", "if", "True", "in", "change", ":", "\n", "            ", "self", ".", "intrinsic", "=", "make_intrinsics_layer", "(", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", ")", "\n", "self", ".", "cam_intrinsics", "=", "[", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", "]", "\n", "print", "(", "'Camera intrinsics updated..'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.tartanvo_node.TartanVONode.handle_scale": [[90, 92], ["None"], "methods", ["None"], ["", "", "def", "handle_scale", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "scale", "=", "msg", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.tartanvo_node.TartanVONode.handle_img": [[93, 145], ["time.time", "tartanvo_node.TartanVONode.cv_bridge.imgmsg_to_cv2", "tartanvo_node.TartanVONode.copy", "print", "print", "geometry_msgs.msg.PoseStamped", "tartanvo_node.TartanVONode.transform", "tartanvo_node.TartanVONode.tartanvo.test_batch", "Datasets.transformation.se2SE", "Datasets.transformation.SO2quat", "tartanvo_node.TartanVONode.pose_pub.publish", "nav_msgs.msg.Odometry", "tartanvo_node.TartanVONode.odom_pub.publish", "print", "time.time", "numpy.linalg.norm"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.TartanVO.TartanVO.test_batch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat"], ["", "def", "handle_img", "(", "self", ",", "msg", ")", ":", "\n", "        ", "starttime", "=", "time", ".", "time", "(", ")", "\n", "image_np", "=", "self", ".", "cv_bridge", ".", "imgmsg_to_cv2", "(", "msg", ",", "\"bgr8\"", ")", "\n", "\n", "if", "image_np", ".", "shape", "[", "0", "]", "!=", "self", ".", "intrinsic", ".", "shape", "[", "0", "]", "or", "image_np", ".", "shape", "[", "1", "]", "!=", "self", ".", "intrinsic", ".", "shape", "[", "1", "]", ":", "\n", "            ", "print", "(", "'The intrinsic parameter does not match the image parameter!'", ")", "\n", "return", "\n", "\n", "", "if", "self", ".", "last_img", "is", "not", "None", ":", "\n", "            ", "pose_msg", "=", "PoseStamped", "(", ")", "\n", "pose_msg", ".", "header", ".", "stamp", "=", "msg", ".", "header", ".", "stamp", "\n", "pose_msg", ".", "header", ".", "frame_id", "=", "'map'", "\n", "sample", "=", "{", "'img1'", ":", "self", ".", "last_img", ",", "\n", "'img2'", ":", "image_np", ",", "\n", "'intrinsic'", ":", "self", ".", "intrinsic", "\n", "}", "\n", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "sample", "[", "'img1'", "]", "=", "sample", "[", "'img1'", "]", "[", "None", "]", "# increase the dimension", "\n", "sample", "[", "'img2'", "]", "=", "sample", "[", "'img2'", "]", "[", "None", "]", "\n", "sample", "[", "'intrinsic'", "]", "=", "sample", "[", "'intrinsic'", "]", "[", "None", "]", "\n", "\n", "motion", ",", "_", "=", "self", ".", "tartanvo", ".", "test_batch", "(", "sample", ")", "\n", "motion", "=", "motion", "[", "0", "]", "\n", "# adjust the scale if available", "\n", "if", "self", ".", "scale", "!=", "1", ":", "\n", "                ", "trans", "=", "motion", "[", ":", "3", "]", "\n", "trans", "=", "trans", "/", "np", ".", "linalg", ".", "norm", "(", "trans", ")", "*", "self", ".", "scale", "\n", "motion", "[", ":", "3", "]", "=", "trans", "\n", "print", "(", "self", ".", "scale", ")", "\n", "\n", "", "motion_mat", "=", "se2SE", "(", "motion", ")", "\n", "self", ".", "pose", "=", "self", ".", "pose", "*", "motion_mat", "\n", "quat", "=", "SO2quat", "(", "self", ".", "pose", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "\n", "pose_msg", ".", "pose", ".", "position", ".", "x", "=", "self", ".", "pose", "[", "0", ",", "3", "]", "\n", "pose_msg", ".", "pose", ".", "position", ".", "y", "=", "self", ".", "pose", "[", "1", ",", "3", "]", "\n", "pose_msg", ".", "pose", ".", "position", ".", "z", "=", "self", ".", "pose", "[", "2", ",", "3", "]", "\n", "pose_msg", ".", "pose", ".", "orientation", ".", "x", "=", "quat", "[", "0", "]", "\n", "pose_msg", ".", "pose", ".", "orientation", ".", "y", "=", "quat", "[", "1", "]", "\n", "pose_msg", ".", "pose", ".", "orientation", ".", "z", "=", "quat", "[", "2", "]", "\n", "pose_msg", ".", "pose", ".", "orientation", ".", "w", "=", "quat", "[", "3", "]", "\n", "\n", "self", ".", "pose_pub", ".", "publish", "(", "pose_msg", ")", "\n", "\n", "odom_msg", "=", "Odometry", "(", ")", "\n", "odom_msg", ".", "header", "=", "pose_msg", ".", "header", "\n", "odom_msg", ".", "pose", ".", "pose", "=", "pose_msg", ".", "pose", "\n", "\n", "self", ".", "odom_pub", ".", "publish", "(", "odom_msg", ")", "\n", "\n", "", "self", ".", "last_img", "=", "image_np", ".", "copy", "(", ")", "\n", "print", "(", "\"    call back time: {}:\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "starttime", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.TartanVO.TartanVO.__init__": [[42, 56], ["Network.VONet.VONet", "model_name.endswith", "TartanVO.TartanVO.vonet.cuda", "numpy.array", "TartanVO.TartanVO.load_model"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.TartanVO.TartanVO.load_model"], ["    ", "def", "__init__", "(", "self", ",", "model_name", ")", ":", "\n", "# import ipdb;ipdb.set_trace()", "\n", "        ", "self", ".", "vonet", "=", "VONet", "(", ")", "\n", "\n", "# load the whole model", "\n", "if", "model_name", ".", "endswith", "(", "'.pkl'", ")", ":", "\n", "            ", "modelname", "=", "'models/'", "+", "model_name", "\n", "self", ".", "load_model", "(", "self", ".", "vonet", ",", "modelname", ")", "\n", "\n", "", "self", ".", "vonet", ".", "cuda", "(", ")", "\n", "\n", "self", ".", "test_count", "=", "0", "\n", "self", ".", "pose_std", "=", "np", ".", "array", "(", "[", "0.13", ",", "0.13", ",", "0.13", ",", "0.013", ",", "0.013", ",", "0.013", "]", ",", "dtype", "=", "np", ".", "float32", ")", "# the output scale factor", "\n", "self", ".", "flow_norm", "=", "20", "# scale factor for flow", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.TartanVO.TartanVO.load_model": [[57, 76], ["torch.load", "model.state_dict", "model.state_dict.update", "model.load_state_dict", "print", "len", "print", "torch.load.items", "len", "Exception", "torch.load.items"], "methods", ["None"], ["", "def", "load_model", "(", "self", ",", "model", ",", "modelname", ")", ":", "\n", "        ", "preTrainDict", "=", "torch", ".", "load", "(", "modelname", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "preTrainDictTemp", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "preTrainDict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "\n", "if", "(", "0", "==", "len", "(", "preTrainDictTemp", ")", ")", ":", "\n", "            ", "print", "(", "\"Does not find any module to load. Try DataParallel version.\"", ")", "\n", "for", "k", ",", "v", "in", "preTrainDict", ".", "items", "(", ")", ":", "\n", "                ", "kk", "=", "k", "[", "7", ":", "]", "\n", "if", "(", "kk", "in", "model_dict", ")", ":", "\n", "                    ", "preTrainDictTemp", "[", "kk", "]", "=", "v", "\n", "\n", "", "", "", "if", "(", "0", "==", "len", "(", "preTrainDictTemp", ")", ")", ":", "\n", "            ", "raise", "Exception", "(", "\"Could not load model from %s.\"", "%", "(", "modelname", ")", ",", "\"load_model\"", ")", "\n", "\n", "", "model_dict", ".", "update", "(", "preTrainDictTemp", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "print", "(", "'Model loaded...'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.TartanVO.TartanVO.test_batch": [[77, 110], ["sample[].cuda", "sample[].cuda", "sample[].cuda", "TartanVO.TartanVO.vonet.eval", "print", "torch.no_grad", "time.time", "TartanVO.TartanVO.vonet", "pose.data.cpu().numpy", "flow.data.cpu().numpy", "numpy.linalg.norm", "print", "time.time", "numpy.linalg.norm.reshape", "pose.data.cpu", "flow.data.cpu", "numpy.linalg.norm().reshape", "numpy.linalg.norm"], "methods", ["None"], ["", "def", "test_batch", "(", "self", ",", "sample", ")", ":", "\n", "        ", "self", ".", "test_count", "+=", "1", "\n", "\n", "# import ipdb;ipdb.set_trace()", "\n", "img0", "=", "sample", "[", "'img1'", "]", ".", "cuda", "(", ")", "\n", "img1", "=", "sample", "[", "'img2'", "]", ".", "cuda", "(", ")", "\n", "intrinsic", "=", "sample", "[", "'intrinsic'", "]", ".", "cuda", "(", ")", "\n", "inputs", "=", "[", "img0", ",", "img1", ",", "intrinsic", "]", "\n", "\n", "self", ".", "vonet", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "starttime", "=", "time", ".", "time", "(", ")", "\n", "flow", ",", "pose", "=", "self", ".", "vonet", "(", "inputs", ")", "\n", "inferencetime", "=", "time", ".", "time", "(", ")", "-", "starttime", "\n", "# import ipdb;ipdb.set_trace()", "\n", "posenp", "=", "pose", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "posenp", "=", "posenp", "*", "self", ".", "pose_std", "# The output is normalized during training, now scale it back", "\n", "flownp", "=", "flow", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "flownp", "=", "flownp", "*", "self", ".", "flow_norm", "\n", "\n", "# calculate scale from GT posefile", "\n", "", "if", "'motion'", "in", "sample", ":", "\n", "            ", "motions_gt", "=", "sample", "[", "'motion'", "]", "\n", "scale", "=", "np", ".", "linalg", ".", "norm", "(", "motions_gt", "[", ":", ",", ":", "3", "]", ",", "axis", "=", "1", ")", "\n", "trans_est", "=", "posenp", "[", ":", ",", ":", "3", "]", "\n", "trans_est", "=", "trans_est", "/", "np", ".", "linalg", ".", "norm", "(", "trans_est", ",", "axis", "=", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "scale", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "posenp", "[", ":", ",", ":", "3", "]", "=", "trans_est", "\n", "", "else", ":", "\n", "            ", "print", "(", "'    scale is not given, using 1 as the default scale value..'", ")", "\n", "\n", "", "print", "(", "\"{} Pose inference using {}s: \\n{}\"", ".", "format", "(", "self", ".", "test_count", ",", "inferencetime", ",", "posenp", ")", ")", "\n", "return", "posenp", ",", "flownp", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.slam.get_args": [[18, 49], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'HRL'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'batch size (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--worker-num'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'data loader worker number (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--image-width'", ",", "type", "=", "int", ",", "default", "=", "640", ",", "\n", "help", "=", "'image width (default: 640)'", ")", "\n", "parser", ".", "add_argument", "(", "'--image-height'", ",", "type", "=", "int", ",", "default", "=", "448", ",", "\n", "help", "=", "'image height (default: 448)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model-name'", ",", "default", "=", "''", ",", "\n", "help", "=", "'name of pretrained model (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--euroc'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'euroc test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--fr3'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'fr3 test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--kitti'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'kitti test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--kitti-intrinsics-file'", ",", "default", "=", "''", ",", "\n", "help", "=", "'kitti intrinsics file calib.txt (default: )'", ")", "\n", "parser", ".", "add_argument", "(", "'--test-dir'", ",", "default", "=", "''", ",", "\n", "help", "=", "'test trajectory folder where the RGB images are (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--pose-file'", ",", "default", "=", "''", ",", "\n", "help", "=", "'test trajectory gt pose file, used for scale calculation, and visualization (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--save-flow'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'save optical flow (default: False)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.vo_trajectory_from_folder.get_args": [[17, 48], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'HRL'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'batch size (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--worker-num'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'data loader worker number (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--image-width'", ",", "type", "=", "int", ",", "default", "=", "640", ",", "\n", "help", "=", "'image width (default: 640)'", ")", "\n", "parser", ".", "add_argument", "(", "'--image-height'", ",", "type", "=", "int", ",", "default", "=", "448", ",", "\n", "help", "=", "'image height (default: 448)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model-name'", ",", "default", "=", "''", ",", "\n", "help", "=", "'name of pretrained model (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--euroc'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'euroc test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--fr3'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'fr3 test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--kitti'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'kitti test (default: False)'", ")", "\n", "parser", ".", "add_argument", "(", "'--kitti-intrinsics-file'", ",", "default", "=", "''", ",", "\n", "help", "=", "'kitti intrinsics file calib.txt (default: )'", ")", "\n", "parser", ".", "add_argument", "(", "'--test-dir'", ",", "default", "=", "''", ",", "\n", "help", "=", "'test trajectory folder where the RGB images are (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--pose-file'", ",", "default", "=", "''", ",", "\n", "help", "=", "'test trajectory gt pose file, used for scale calculation, and visualization (default: \"\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--save-flow'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'save optical flow (default: False)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.publish_image_from_folder.PubImgFolder.__init__": [[47, 72], ["rospy.get_param", "rospy.get_param", "cv_bridge.CvBridge", "rospy.Publisher", "rospy.Publisher", "rospy.Publisher", "os.listdir", "publish_image_from_folder.PubImgFolder.rgbfiles.sort", "print", "os.path.isfile", "numpy.loadtxt", "len", "len", "len", "print", "ff.endswith", "ff.endswith"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "image_dir", "=", "rospy", ".", "get_param", "(", "'~img_dir'", ",", "'data/EuRoC_V102/image_left'", ")", "\n", "pose_file", "=", "rospy", ".", "get_param", "(", "'~pose_file'", ",", "'data/EuRoC_V102/pose_left.txt'", ")", "\n", "\n", "self", ".", "cv_bridge", "=", "CvBridge", "(", ")", "\n", "self", ".", "img_pub", "=", "rospy", ".", "Publisher", "(", "\"rgb_image\"", ",", "Image", ",", "queue_size", "=", "10", ")", "\n", "self", ".", "caminfo_pub", "=", "rospy", ".", "Publisher", "(", "\"cam_info\"", ",", "CameraInfo", ",", "queue_size", "=", "10", ")", "\n", "self", ".", "scale_pub", "=", "rospy", ".", "Publisher", "(", "\"vo_scale\"", ",", "Float32", ",", "queue_size", "=", "10", ")", "\n", "\n", "files", "=", "listdir", "(", "image_dir", ")", "\n", "self", ".", "rgbfiles", "=", "[", "(", "image_dir", "+", "'/'", "+", "ff", ")", "for", "ff", "in", "files", "if", "(", "ff", ".", "endswith", "(", "'.png'", ")", "or", "ff", ".", "endswith", "(", "'.jpg'", ")", ")", "]", "\n", "self", ".", "rgbfiles", ".", "sort", "(", ")", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "\n", "print", "(", "'Find {} image files in {}'", ".", "format", "(", "len", "(", "self", ".", "rgbfiles", ")", ",", "image_dir", ")", ")", "\n", "self", ".", "imgind", "=", "0", "\n", "\n", "if", "isfile", "(", "pose_file", ")", ":", "\n", "            ", "self", ".", "poselist", "=", "np", ".", "loadtxt", "(", "pose_file", ")", "\n", "if", "len", "(", "self", ".", "poselist", ")", "!=", "len", "(", "self", ".", "rgbfiles", ")", ":", "\n", "                ", "print", "(", "'Posefile {} does not have the same length with the rgb images'", ".", "format", "(", "pose_file", ")", ")", "\n", "self", ".", "poselist", "=", "None", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "poselist", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.publish_image_from_folder.PubImgFolder.caminfo_publish": [[73, 92], ["sensor_msgs.msg.CameraInfo", "publish_image_from_folder.PubImgFolder.caminfo_pub.publish"], "methods", ["None"], ["", "", "def", "caminfo_publish", "(", "self", ")", ":", "\n", "        ", "caminfo", "=", "CameraInfo", "(", ")", "\n", "# image info for EuRoC", "\n", "caminfo", ".", "width", "=", "752", "\n", "caminfo", ".", "height", "=", "480", "\n", "caminfo", ".", "K", "[", "0", "]", "=", "458.6539916992", "\n", "caminfo", ".", "K", "[", "4", "]", "=", "457.2959899902", "\n", "caminfo", ".", "K", "[", "2", "]", "=", "367.2149963379", "\n", "caminfo", ".", "K", "[", "5", "]", "=", "248.3750000000", "\n", "\n", "# # image info for KTIIT_10", "\n", "# caminfo.width   = 1226", "\n", "# caminfo.height  = 370", "\n", "# caminfo.K[0]    = 707.0912", "\n", "# caminfo.K[4]    = 707.0912", "\n", "# caminfo.K[2]    = 601.8873", "\n", "# caminfo.K[5]    = 183.1104", "\n", "\n", "self", ".", "caminfo_pub", ".", "publish", "(", "caminfo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.tartanvo.publish_image_from_folder.PubImgFolder.img_publish": [[93, 111], ["cv2.imread", "publish_image_from_folder.PubImgFolder.cv_bridge.cv2_to_imgmsg", "publish_image_from_folder.PubImgFolder.img_pub.publish", "len", "numpy.linalg.norm", "std_msgs.msg.Float32", "publish_image_from_folder.PubImgFolder.scale_pub.publish", "len", "numpy.stack"], "methods", ["None"], ["", "def", "img_publish", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "imgind", ">=", "len", "(", "self", ".", "rgbfiles", ")", ":", "\n", "            ", "return", "False", "\n", "# publish GT scale from the posefile", "\n", "", "if", "self", ".", "poselist", "is", "not", "None", "and", "self", ".", "imgind", ">", "0", ":", "\n", "            ", "trans", "=", "self", ".", "poselist", "[", "self", ".", "imgind", "]", "[", ":", "3", "]", "-", "self", ".", "poselist", "[", "self", ".", "imgind", "-", "1", "]", "[", ":", "3", "]", "\n", "dist", "=", "np", ".", "linalg", ".", "norm", "(", "trans", ")", "\n", "scale_msg", "=", "Float32", "(", ")", "\n", "scale_msg", ".", "data", "=", "dist", "\n", "self", ".", "scale_pub", ".", "publish", "(", "scale_msg", ")", "\n", "# publish image", "\n", "", "img", "=", "cv2", ".", "imread", "(", "self", ".", "rgbfiles", "[", "self", ".", "imgind", "]", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "stack", "(", "[", "img", ",", "img", ",", "img", "]", ")", "\n", "", "img_msg", "=", "self", ".", "cv_bridge", ".", "cv2_to_imgmsg", "(", "img", ",", "\"bgr8\"", ")", "\n", "self", ".", "img_pub", ".", "publish", "(", "img_msg", ")", "\n", "self", ".", "imgind", "+=", "1", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.BasicBlock.__init__": [[59, 67], ["torch.Module.__init__", "VOFlowNet.conv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "conv", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "pad", ",", "dilation", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "pad", ",", "dilation", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.BasicBlock.forward": [[68, 77], ["VOFlowNet.BasicBlock.conv1", "VOFlowNet.BasicBlock.conv2", "torch.relu", "torch.relu", "torch.relu", "VOFlowNet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "out", "+=", "x", "\n", "\n", "return", "F", ".", "relu", "(", "out", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes.__init__": [[79, 109], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "VOFlowNet.VOFlowRes._make_layer", "VOFlowNet.VOFlowRes._make_layer", "VOFlowNet.VOFlowRes._make_layer", "VOFlowNet.VOFlowRes._make_layer", "VOFlowNet.VOFlowRes._make_layer", "VOFlowNet.linear", "VOFlowNet.linear", "torch.Linear", "torch.Linear", "torch.Linear", "VOFlowNet.linear", "VOFlowNet.linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "VOFlowNet.conv", "VOFlowNet.conv", "VOFlowNet.conv"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.linear", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.linear", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.linear", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.linear", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VOFlowRes", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inputnum", "=", "4", "\n", "blocknums", "=", "[", "2", ",", "2", ",", "3", ",", "4", ",", "6", ",", "7", ",", "3", "]", "\n", "outputnums", "=", "[", "32", ",", "64", ",", "64", ",", "128", ",", "128", ",", "256", ",", "256", "]", "\n", "\n", "self", ".", "firstconv", "=", "nn", ".", "Sequential", "(", "conv", "(", "inputnum", ",", "32", ",", "3", ",", "2", ",", "1", ",", "1", ",", "False", ")", ",", "\n", "conv", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "inplanes", "=", "32", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "outputnums", "[", "2", "]", ",", "blocknums", "[", "2", "]", ",", "2", ",", "1", ",", "1", ")", "# 40 x 28", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "outputnums", "[", "3", "]", ",", "blocknums", "[", "3", "]", ",", "2", ",", "1", ",", "1", ")", "# 20 x 14", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "outputnums", "[", "4", "]", ",", "blocknums", "[", "4", "]", ",", "2", ",", "1", ",", "1", ")", "# 10 x 7", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "outputnums", "[", "5", "]", ",", "blocknums", "[", "5", "]", ",", "2", ",", "1", ",", "1", ")", "# 5 x 4", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "outputnums", "[", "6", "]", ",", "blocknums", "[", "6", "]", ",", "2", ",", "1", ",", "1", ")", "# 3 x 2", "\n", "fcnum", "=", "outputnums", "[", "6", "]", "*", "6", "\n", "\n", "fc1_trans", "=", "linear", "(", "fcnum", ",", "128", ")", "\n", "fc2_trans", "=", "linear", "(", "128", ",", "32", ")", "\n", "fc3_trans", "=", "nn", ".", "Linear", "(", "32", ",", "3", ")", "\n", "\n", "fc1_rot", "=", "linear", "(", "fcnum", ",", "128", ")", "\n", "fc2_rot", "=", "linear", "(", "128", ",", "32", ")", "\n", "fc3_rot", "=", "nn", ".", "Linear", "(", "32", ",", "3", ")", "\n", "\n", "\n", "self", ".", "voflow_trans", "=", "nn", ".", "Sequential", "(", "fc1_trans", ",", "fc2_trans", ",", "fc3_trans", ")", "\n", "self", ".", "voflow_rot", "=", "nn", ".", "Sequential", "(", "fc1_rot", ",", "fc2_rot", ",", "fc3_rot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes._make_layer": [[111, 124], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "block", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "           ", "downsample", "=", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "1", ",", "None", ",", "pad", ",", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.VOFlowRes.forward": [[125, 137], ["VOFlowNet.VOFlowRes.firstconv", "VOFlowNet.VOFlowRes.layer1", "VOFlowNet.VOFlowRes.layer2", "VOFlowNet.VOFlowRes.layer3", "VOFlowNet.VOFlowRes.layer4", "VOFlowNet.VOFlowRes.layer5", "x.view.view.view", "VOFlowNet.VOFlowRes.voflow_trans", "VOFlowNet.VOFlowRes.voflow_rot", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "firstconv", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "x_trans", "=", "self", ".", "voflow_trans", "(", "x", ")", "\n", "x_rot", "=", "self", ".", "voflow_rot", "(", "x", ")", "\n", "return", "torch", ".", "cat", "(", "(", "x_trans", ",", "x_rot", ")", ",", "dim", "=", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.conv": [[38, 49], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU"], "function", ["None"], ["def", "conv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "bn_layer", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "    ", "if", "bn_layer", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VOFlowNet.linear": [[51, 55], ["torch.Sequential", "torch.Linear", "torch.ReLU"], "function", ["None"], ["", "", "def", "linear", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_planes", ",", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VONet.VONet.__init__": [[40, 45], ["torch.Module.__init__", "PWC.PWCDCNet", "VOFlowNet.VOFlowRes"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VONet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "flowNet", "=", "FlowNet", "(", ")", "\n", "self", ".", "flowPoseNet", "=", "FlowPoseNet", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Network.VONet.VONet.forward": [[46, 53], ["VONet.VONet.flowNet", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "VONet.VONet.flowPoseNet"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# import ipdb;ipdb.set_trace()", "\n", "        ", "flow", "=", "self", ".", "flowNet", "(", "x", "[", "0", ":", "2", "]", ")", "\n", "flow_input", "=", "torch", ".", "cat", "(", "(", "flow", ",", "x", "[", "2", "]", ")", ",", "dim", "=", "1", ")", "\n", "pose", "=", "self", ".", "flowPoseNet", "(", "flow_input", ")", "\n", "\n", "return", "flow", ",", "pose", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.PWCDCNet.__init__": [[35, 125], ["torch.Module.__init__", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "numpy.cumsum", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow", "PWCNet.deconv", "PWCNet.deconv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow", "PWCNet.deconv", "PWCNet.deconv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow", "PWCNet.deconv", "PWCNet.deconv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow", "PWCNet.deconv", "PWCNet.deconv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow", "PWCNet.deconv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.conv", "PWCNet.predict_flow"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow"], ["def", "__init__", "(", "self", ",", "md", "=", "4", ",", "flow_norm", "=", "20.0", ")", ":", "\n", "        ", "\"\"\"\n        input: md --- maximum displacement (for correlation. default: 4), after warpping\n\n        \"\"\"", "\n", "super", "(", "PWCDCNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "flow_norm", "=", "flow_norm", "\n", "\n", "self", ".", "conv1a", "=", "conv", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv1aa", "=", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv1b", "=", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2a", "=", "conv", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2aa", "=", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2b", "=", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3a", "=", "conv", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3aa", "=", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3b", "=", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4a", "=", "conv", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv4aa", "=", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4b", "=", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5a", "=", "conv", "(", "96", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv5aa", "=", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5b", "=", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6aa", "=", "conv", "(", "128", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv6a", "=", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6b", "=", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "# self.corr    = Correlation(pad_size=md, kernel_size=1, max_displacement=md, stride1=1, stride2=1, corr_multiply=1)", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ")", "\n", "\n", "nd", "=", "(", "2", "*", "md", "+", "1", ")", "**", "2", "\n", "dd", "=", "np", ".", "cumsum", "(", "[", "128", ",", "128", ",", "96", ",", "64", ",", "32", "]", ")", "\n", "\n", "od", "=", "nd", "\n", "self", ".", "conv6_0", "=", "conv", "(", "od", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6_1", "=", "conv", "(", "od", "+", "dd", "[", "0", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6_2", "=", "conv", "(", "od", "+", "dd", "[", "1", "]", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6_3", "=", "conv", "(", "od", "+", "dd", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv6_4", "=", "conv", "(", "od", "+", "dd", "[", "3", "]", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "predict_flow6", "=", "predict_flow", "(", "od", "+", "dd", "[", "4", "]", ")", "\n", "self", ".", "deconv6", "=", "deconv", "(", "2", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "upfeat6", "=", "deconv", "(", "od", "+", "dd", "[", "4", "]", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "od", "=", "nd", "+", "128", "+", "4", "\n", "self", ".", "conv5_0", "=", "conv", "(", "od", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5_1", "=", "conv", "(", "od", "+", "dd", "[", "0", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5_2", "=", "conv", "(", "od", "+", "dd", "[", "1", "]", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5_3", "=", "conv", "(", "od", "+", "dd", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv5_4", "=", "conv", "(", "od", "+", "dd", "[", "3", "]", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "predict_flow5", "=", "predict_flow", "(", "od", "+", "dd", "[", "4", "]", ")", "\n", "self", ".", "deconv5", "=", "deconv", "(", "2", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "upfeat5", "=", "deconv", "(", "od", "+", "dd", "[", "4", "]", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "od", "=", "nd", "+", "96", "+", "4", "\n", "self", ".", "conv4_0", "=", "conv", "(", "od", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4_1", "=", "conv", "(", "od", "+", "dd", "[", "0", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4_2", "=", "conv", "(", "od", "+", "dd", "[", "1", "]", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4_3", "=", "conv", "(", "od", "+", "dd", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv4_4", "=", "conv", "(", "od", "+", "dd", "[", "3", "]", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "predict_flow4", "=", "predict_flow", "(", "od", "+", "dd", "[", "4", "]", ")", "\n", "self", ".", "deconv4", "=", "deconv", "(", "2", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "upfeat4", "=", "deconv", "(", "od", "+", "dd", "[", "4", "]", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "od", "=", "nd", "+", "64", "+", "4", "\n", "self", ".", "conv3_0", "=", "conv", "(", "od", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3_1", "=", "conv", "(", "od", "+", "dd", "[", "0", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3_2", "=", "conv", "(", "od", "+", "dd", "[", "1", "]", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3_3", "=", "conv", "(", "od", "+", "dd", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3_4", "=", "conv", "(", "od", "+", "dd", "[", "3", "]", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "predict_flow3", "=", "predict_flow", "(", "od", "+", "dd", "[", "4", "]", ")", "\n", "self", ".", "deconv3", "=", "deconv", "(", "2", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "upfeat3", "=", "deconv", "(", "od", "+", "dd", "[", "4", "]", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "od", "=", "nd", "+", "32", "+", "4", "\n", "self", ".", "conv2_0", "=", "conv", "(", "od", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2_1", "=", "conv", "(", "od", "+", "dd", "[", "0", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2_2", "=", "conv", "(", "od", "+", "dd", "[", "1", "]", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2_3", "=", "conv", "(", "od", "+", "dd", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2_4", "=", "conv", "(", "od", "+", "dd", "[", "3", "]", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "predict_flow2", "=", "predict_flow", "(", "od", "+", "dd", "[", "4", "]", ")", "\n", "self", ".", "deconv2", "=", "deconv", "(", "2", ",", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "dc_conv1", "=", "conv", "(", "od", "+", "dd", "[", "4", "]", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "dc_conv2", "=", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "dc_conv3", "=", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "self", ".", "dc_conv4", "=", "conv", "(", "128", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "8", ",", "dilation", "=", "8", ")", "\n", "self", ".", "dc_conv5", "=", "conv", "(", "96", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "16", ",", "dilation", "=", "16", ")", "\n", "self", ".", "dc_conv6", "=", "conv", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "dc_conv7", "=", "predict_flow", "(", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.PWCDCNet.warp": [[127, 164], ["x.size", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "xx.view().repeat.view().repeat.view().repeat", "yy.view().repeat.view().repeat.view().repeat", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "vgrid.permute.permute.permute", "torch.functional.grid_sample", "torch.functional.grid_sample", "torch.functional.grid_sample", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.functional.grid_sample", "torch.functional.grid_sample", "torch.functional.grid_sample", "grid.cuda.cuda.cuda", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "xx.view().repeat.view().repeat.view", "yy.view().repeat.view().repeat.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "max", "max", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "vgrid[].clone", "vgrid[].clone", "x.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "warp", "(", "self", ",", "x", ",", "flo", ")", ":", "\n", "        ", "\"\"\"\n        warp an image/tensor (im2) back to im1, according to the optical flow\n\n        x: [B, C, H, W] (im2)\n        flo: [B, 2, H, W] flow\n\n        \"\"\"", "\n", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "# mesh grid ", "\n", "xx", "=", "torch", ".", "arange", "(", "0", ",", "W", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "repeat", "(", "H", ",", "1", ")", "\n", "yy", "=", "torch", ".", "arange", "(", "0", ",", "H", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "W", ")", "\n", "xx", "=", "xx", ".", "view", "(", "1", ",", "1", ",", "H", ",", "W", ")", ".", "repeat", "(", "B", ",", "1", ",", "1", ",", "1", ")", "\n", "yy", "=", "yy", ".", "view", "(", "1", ",", "1", ",", "H", ",", "W", ")", ".", "repeat", "(", "B", ",", "1", ",", "1", ",", "1", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "(", "xx", ",", "yy", ")", ",", "1", ")", ".", "float", "(", ")", "\n", "\n", "if", "x", ".", "is_cuda", ":", "\n", "            ", "grid", "=", "grid", ".", "cuda", "(", ")", "\n", "", "vgrid", "=", "grid", "+", "flo", "\n", "\n", "# scale grid to [-1,1] ", "\n", "vgrid", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "2.0", "*", "vgrid", "[", ":", ",", "0", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "/", "max", "(", "W", "-", "1", ",", "1", ")", "-", "1.0", "\n", "vgrid", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "2.0", "*", "vgrid", "[", ":", ",", "1", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "/", "max", "(", "H", "-", "1", ",", "1", ")", "-", "1.0", "\n", "\n", "vgrid", "=", "vgrid", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "output", "=", "nn", ".", "functional", ".", "grid_sample", "(", "x", ",", "vgrid", ",", "align_corners", "=", "True", ")", "\n", "mask", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "mask", "=", "nn", ".", "functional", ".", "grid_sample", "(", "mask", ",", "vgrid", ",", "align_corners", "=", "True", ")", "\n", "\n", "# if W==128:", "\n", "# np.save('mask.npy', mask.cpu().data.numpy())", "\n", "# np.save('warp.npy', output.cpu().data.numpy())", "\n", "\n", "mask", "[", "mask", "<", "0.9999", "]", "=", "0", "\n", "mask", "[", "mask", ">", "0", "]", "=", "1", "\n", "\n", "return", "output", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.PWCDCNet.forward": [[166, 263], ["PWCNet.PWCDCNet.conv1b", "PWCNet.PWCDCNet.conv1b", "PWCNet.PWCDCNet.conv2b", "PWCNet.PWCDCNet.conv2b", "PWCNet.PWCDCNet.conv3b", "PWCNet.PWCDCNet.conv3b", "PWCNet.PWCDCNet.conv4b", "PWCNet.PWCDCNet.conv4b", "PWCNet.PWCDCNet.conv5b", "PWCNet.PWCDCNet.conv5b", "PWCNet.PWCDCNet.conv6b", "PWCNet.PWCDCNet.conv6b", "correlation.FunctionCorrelation", "PWCNet.PWCDCNet.leakyRELU", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PWCNet.PWCDCNet.predict_flow6", "PWCNet.PWCDCNet.deconv6", "PWCNet.PWCDCNet.upfeat6", "PWCNet.PWCDCNet.warp", "correlation.FunctionCorrelation", "PWCNet.PWCDCNet.leakyRELU", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PWCNet.PWCDCNet.predict_flow5", "PWCNet.PWCDCNet.deconv5", "PWCNet.PWCDCNet.upfeat5", "PWCNet.PWCDCNet.warp", "correlation.FunctionCorrelation", "PWCNet.PWCDCNet.leakyRELU", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PWCNet.PWCDCNet.predict_flow4", "PWCNet.PWCDCNet.deconv4", "PWCNet.PWCDCNet.upfeat4", "PWCNet.PWCDCNet.warp", "correlation.FunctionCorrelation", "PWCNet.PWCDCNet.leakyRELU", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PWCNet.PWCDCNet.predict_flow3", "PWCNet.PWCDCNet.deconv3", "PWCNet.PWCDCNet.upfeat3", "PWCNet.PWCDCNet.warp", "correlation.FunctionCorrelation", "PWCNet.PWCDCNet.leakyRELU", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PWCNet.PWCDCNet.predict_flow2", "PWCNet.PWCDCNet.dc_conv4", "PWCNet.PWCDCNet.conv1aa", "PWCNet.PWCDCNet.conv1aa", "PWCNet.PWCDCNet.conv2aa", "PWCNet.PWCDCNet.conv2aa", "PWCNet.PWCDCNet.conv3aa", "PWCNet.PWCDCNet.conv3aa", "PWCNet.PWCDCNet.conv4aa", "PWCNet.PWCDCNet.conv4aa", "PWCNet.PWCDCNet.conv5aa", "PWCNet.PWCDCNet.conv5aa", "PWCNet.PWCDCNet.conv6a", "PWCNet.PWCDCNet.conv6a", "PWCNet.PWCDCNet.dc_conv3", "PWCNet.PWCDCNet.dc_conv7", "PWCNet.PWCDCNet.conv1a", "PWCNet.PWCDCNet.conv1a", "PWCNet.PWCDCNet.conv2a", "PWCNet.PWCDCNet.conv2a", "PWCNet.PWCDCNet.conv3a", "PWCNet.PWCDCNet.conv3a", "PWCNet.PWCDCNet.conv4a", "PWCNet.PWCDCNet.conv4a", "PWCNet.PWCDCNet.conv5a", "PWCNet.PWCDCNet.conv5a", "PWCNet.PWCDCNet.conv6aa", "PWCNet.PWCDCNet.conv6aa", "PWCNet.PWCDCNet.conv6_0", "PWCNet.PWCDCNet.conv6_1", "PWCNet.PWCDCNet.conv6_2", "PWCNet.PWCDCNet.conv6_3", "PWCNet.PWCDCNet.conv6_4", "PWCNet.PWCDCNet.conv5_0", "PWCNet.PWCDCNet.conv5_1", "PWCNet.PWCDCNet.conv5_2", "PWCNet.PWCDCNet.conv5_3", "PWCNet.PWCDCNet.conv5_4", "PWCNet.PWCDCNet.conv4_0", "PWCNet.PWCDCNet.conv4_1", "PWCNet.PWCDCNet.conv4_2", "PWCNet.PWCDCNet.conv4_3", "PWCNet.PWCDCNet.conv4_4", "PWCNet.PWCDCNet.conv3_0", "PWCNet.PWCDCNet.conv3_1", "PWCNet.PWCDCNet.conv3_2", "PWCNet.PWCDCNet.conv3_3", "PWCNet.PWCDCNet.conv3_4", "PWCNet.PWCDCNet.conv2_0", "PWCNet.PWCDCNet.conv2_1", "PWCNet.PWCDCNet.conv2_2", "PWCNet.PWCDCNet.conv2_3", "PWCNet.PWCDCNet.conv2_4", "PWCNet.PWCDCNet.dc_conv2", "PWCNet.PWCDCNet.dc_conv6", "PWCNet.PWCDCNet.dc_conv1", "PWCNet.PWCDCNet.dc_conv5"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.warp", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.warp", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.warp", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.warp", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "im1", "=", "x", "[", "0", "]", "\n", "im2", "=", "x", "[", "1", "]", "\n", "\n", "c11", "=", "self", ".", "conv1b", "(", "self", ".", "conv1aa", "(", "self", ".", "conv1a", "(", "im1", ")", ")", ")", "\n", "c21", "=", "self", ".", "conv1b", "(", "self", ".", "conv1aa", "(", "self", ".", "conv1a", "(", "im2", ")", ")", ")", "\n", "c12", "=", "self", ".", "conv2b", "(", "self", ".", "conv2aa", "(", "self", ".", "conv2a", "(", "c11", ")", ")", ")", "\n", "c22", "=", "self", ".", "conv2b", "(", "self", ".", "conv2aa", "(", "self", ".", "conv2a", "(", "c21", ")", ")", ")", "\n", "c13", "=", "self", ".", "conv3b", "(", "self", ".", "conv3aa", "(", "self", ".", "conv3a", "(", "c12", ")", ")", ")", "\n", "c23", "=", "self", ".", "conv3b", "(", "self", ".", "conv3aa", "(", "self", ".", "conv3a", "(", "c22", ")", ")", ")", "\n", "c14", "=", "self", ".", "conv4b", "(", "self", ".", "conv4aa", "(", "self", ".", "conv4a", "(", "c13", ")", ")", ")", "\n", "c24", "=", "self", ".", "conv4b", "(", "self", ".", "conv4aa", "(", "self", ".", "conv4a", "(", "c23", ")", ")", ")", "\n", "c15", "=", "self", ".", "conv5b", "(", "self", ".", "conv5aa", "(", "self", ".", "conv5a", "(", "c14", ")", ")", ")", "\n", "c25", "=", "self", ".", "conv5b", "(", "self", ".", "conv5aa", "(", "self", ".", "conv5a", "(", "c24", ")", ")", ")", "\n", "c16", "=", "self", ".", "conv6b", "(", "self", ".", "conv6a", "(", "self", ".", "conv6aa", "(", "c15", ")", ")", ")", "\n", "c26", "=", "self", ".", "conv6b", "(", "self", ".", "conv6a", "(", "self", ".", "conv6aa", "(", "c25", ")", ")", ")", "\n", "\n", "\n", "# corr6 = self.corr(c16, c26) ", "\n", "corr6", "=", "FunctionCorrelation", "(", "tenFirst", "=", "c16", ",", "tenSecond", "=", "c26", ")", "\n", "\n", "corr6", "=", "self", ".", "leakyRELU", "(", "corr6", ")", "\n", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv6_0", "(", "corr6", ")", ",", "corr6", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv6_1", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv6_2", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv6_3", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv6_4", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "flow6", "=", "self", ".", "predict_flow6", "(", "x", ")", "\n", "up_flow6", "=", "self", ".", "deconv6", "(", "flow6", ")", "\n", "up_feat6", "=", "self", ".", "upfeat6", "(", "x", ")", "\n", "\n", "\n", "warp5", "=", "self", ".", "warp", "(", "c25", ",", "up_flow6", "*", "0.625", ")", "\n", "# corr5 = self.corr(c15, warp5) ", "\n", "corr5", "=", "FunctionCorrelation", "(", "tenFirst", "=", "c15", ",", "tenSecond", "=", "warp5", ")", "\n", "corr5", "=", "self", ".", "leakyRELU", "(", "corr5", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "corr5", ",", "c15", ",", "up_flow6", ",", "up_feat6", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv5_0", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv5_1", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv5_2", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv5_3", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv5_4", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "flow5", "=", "self", ".", "predict_flow5", "(", "x", ")", "\n", "up_flow5", "=", "self", ".", "deconv5", "(", "flow5", ")", "\n", "up_feat5", "=", "self", ".", "upfeat5", "(", "x", ")", "\n", "\n", "\n", "warp4", "=", "self", ".", "warp", "(", "c24", ",", "up_flow5", "*", "1.25", ")", "#1.25", "\n", "# corr4 = self.corr(c14, warp4)  ", "\n", "corr4", "=", "FunctionCorrelation", "(", "tenFirst", "=", "c14", ",", "tenSecond", "=", "warp4", ")", "\n", "corr4", "=", "self", ".", "leakyRELU", "(", "corr4", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "corr4", ",", "c14", ",", "up_flow5", ",", "up_feat5", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv4_0", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv4_1", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv4_2", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv4_3", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv4_4", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "flow4", "=", "self", ".", "predict_flow4", "(", "x", ")", "\n", "up_flow4", "=", "self", ".", "deconv4", "(", "flow4", ")", "\n", "up_feat4", "=", "self", ".", "upfeat4", "(", "x", ")", "\n", "\n", "\n", "warp3", "=", "self", ".", "warp", "(", "c23", ",", "up_flow4", "*", "2.5", ")", "#2.5", "\n", "# corr3 = self.corr(c13, warp3) ", "\n", "corr3", "=", "FunctionCorrelation", "(", "tenFirst", "=", "c13", ",", "tenSecond", "=", "warp3", ")", "\n", "corr3", "=", "self", ".", "leakyRELU", "(", "corr3", ")", "\n", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "corr3", ",", "c13", ",", "up_flow4", ",", "up_feat4", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv3_0", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv3_1", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv3_2", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv3_3", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv3_4", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "flow3", "=", "self", ".", "predict_flow3", "(", "x", ")", "\n", "up_flow3", "=", "self", ".", "deconv3", "(", "flow3", ")", "\n", "up_feat3", "=", "self", ".", "upfeat3", "(", "x", ")", "\n", "\n", "\n", "warp2", "=", "self", ".", "warp", "(", "c22", ",", "up_flow3", "*", "5.0", ")", "\n", "# corr2 = self.corr(c12, warp2)", "\n", "corr2", "=", "FunctionCorrelation", "(", "tenFirst", "=", "c12", ",", "tenSecond", "=", "warp2", ")", "\n", "corr2", "=", "self", ".", "leakyRELU", "(", "corr2", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "corr2", ",", "c12", ",", "up_flow3", ",", "up_feat3", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv2_0", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv2_1", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv2_2", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv2_3", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "conv2_4", "(", "x", ")", ",", "x", ")", ",", "1", ")", "\n", "flow2", "=", "self", ".", "predict_flow2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dc_conv4", "(", "self", ".", "dc_conv3", "(", "self", ".", "dc_conv2", "(", "self", ".", "dc_conv1", "(", "x", ")", ")", ")", ")", "\n", "flow2", "=", "flow2", "+", "self", ".", "dc_conv7", "(", "self", ".", "dc_conv6", "(", "self", ".", "dc_conv5", "(", "x", ")", ")", ")", "\n", "\n", "return", "flow2", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.conv": [[16, 21], ["torch.Sequential", "torch.Conv2d", "torch.LeakyReLU"], "function", ["None"], ["def", "conv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.predict_flow": [[22, 24], ["torch.Conv2d"], "function", ["None"], ["", "def", "predict_flow", "(", "in_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.deconv": [[25, 27], ["torch.ConvTranspose2d"], "function", ["None"], ["", "def", "deconv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "ConvTranspose2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.PWCNet.pwc_dc_net": [[265, 275], ["PWCNet.PWCDCNet", "torch.load", "torch.load", "torch.load", "torch.load.keys", "PWCDCNet.load_state_dict", "PWCDCNet.load_state_dict"], "function", ["None"], ["", "", "def", "pwc_dc_net", "(", "path", "=", "None", ")", ":", "\n", "\n", "    ", "model", "=", "PWCDCNet", "(", ")", "\n", "if", "path", "is", "not", "None", ":", "\n", "        ", "data", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "'state_dict'", "in", "data", ".", "keys", "(", ")", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "data", "[", "'state_dict'", "]", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "data", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation._FunctionCorrelation.forward": [[279, 330], ["first.new_zeros", "first.new_zeros", "correlation._FunctionCorrelation.save_for_backward", "first.new_zeros", "first.is_contiguous", "second.is_contiguous", "correlation.cupy_launch", "correlation.cupy_launch", "correlation.cupy_launch", "NotImplementedError", "correlation.cupy_kernel", "tuple", "tuple", "correlation.cupy_kernel", "tuple", "tuple", "correlation.cupy_kernel", "tuple", "tuple", "first.data_ptr", "first.new_zeros.data_ptr", "second.data_ptr", "first.new_zeros.data_ptr", "first.new_zeros.data_ptr", "first.new_zeros.data_ptr", "first.new_zeros.data_ptr", "int", "int"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel"], ["\t", "@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "first", ",", "second", ")", ":", "\n", "\t\t", "rbot0", "=", "first", ".", "new_zeros", "(", "[", "first", ".", "shape", "[", "0", "]", ",", "first", ".", "shape", "[", "2", "]", "+", "8", ",", "first", ".", "shape", "[", "3", "]", "+", "8", ",", "first", ".", "shape", "[", "1", "]", "]", ")", "\n", "rbot1", "=", "first", ".", "new_zeros", "(", "[", "first", ".", "shape", "[", "0", "]", ",", "first", ".", "shape", "[", "2", "]", "+", "8", ",", "first", ".", "shape", "[", "3", "]", "+", "8", ",", "first", ".", "shape", "[", "1", "]", "]", ")", "\n", "\n", "self", ".", "save_for_backward", "(", "first", ",", "second", ",", "rbot0", ",", "rbot1", ")", "\n", "\n", "assert", "(", "first", ".", "is_contiguous", "(", ")", "==", "True", ")", "\n", "assert", "(", "second", ".", "is_contiguous", "(", ")", "==", "True", ")", "\n", "\n", "output", "=", "first", ".", "new_zeros", "(", "[", "first", ".", "shape", "[", "0", "]", ",", "81", ",", "first", ".", "shape", "[", "2", "]", ",", "first", ".", "shape", "[", "3", "]", "]", ")", "\n", "\n", "if", "first", ".", "is_cuda", "==", "True", ":", "\n", "\t\t\t", "n", "=", "first", ".", "shape", "[", "2", "]", "*", "first", ".", "shape", "[", "3", "]", "\n", "cupy_launch", "(", "'kernel_Correlation_rearrange'", ",", "cupy_kernel", "(", "'kernel_Correlation_rearrange'", ",", "{", "\n", "'input'", ":", "first", ",", "\n", "'output'", ":", "rbot0", "\n", "}", ")", ")", "(", "\n", "grid", "=", "tuple", "(", "[", "int", "(", "(", "n", "+", "16", "-", "1", ")", "/", "16", ")", ",", "first", ".", "shape", "[", "1", "]", ",", "first", ".", "shape", "[", "0", "]", "]", ")", ",", "\n", "block", "=", "tuple", "(", "[", "16", ",", "1", ",", "1", "]", ")", ",", "\n", "args", "=", "[", "n", ",", "first", ".", "data_ptr", "(", ")", ",", "rbot0", ".", "data_ptr", "(", ")", "]", "\n", ")", "\n", "\n", "n", "=", "second", ".", "shape", "[", "2", "]", "*", "second", ".", "shape", "[", "3", "]", "\n", "cupy_launch", "(", "'kernel_Correlation_rearrange'", ",", "cupy_kernel", "(", "'kernel_Correlation_rearrange'", ",", "{", "\n", "'input'", ":", "second", ",", "\n", "'output'", ":", "rbot1", "\n", "}", ")", ")", "(", "\n", "grid", "=", "tuple", "(", "[", "int", "(", "(", "n", "+", "16", "-", "1", ")", "/", "16", ")", ",", "second", ".", "shape", "[", "1", "]", ",", "second", ".", "shape", "[", "0", "]", "]", ")", ",", "\n", "block", "=", "tuple", "(", "[", "16", ",", "1", ",", "1", "]", ")", ",", "\n", "args", "=", "[", "n", ",", "second", ".", "data_ptr", "(", ")", ",", "rbot1", ".", "data_ptr", "(", ")", "]", "\n", ")", "\n", "\n", "n", "=", "output", ".", "shape", "[", "1", "]", "*", "output", ".", "shape", "[", "2", "]", "*", "output", ".", "shape", "[", "3", "]", "\n", "cupy_launch", "(", "'kernel_Correlation_updateOutput'", ",", "cupy_kernel", "(", "'kernel_Correlation_updateOutput'", ",", "{", "\n", "'rbot0'", ":", "rbot0", ",", "\n", "'rbot1'", ":", "rbot1", ",", "\n", "'top'", ":", "output", "\n", "}", ")", ")", "(", "\n", "grid", "=", "tuple", "(", "[", "output", ".", "shape", "[", "3", "]", ",", "output", ".", "shape", "[", "2", "]", ",", "output", ".", "shape", "[", "0", "]", "]", ")", ",", "\n", "block", "=", "tuple", "(", "[", "32", ",", "1", ",", "1", "]", ")", ",", "\n", "shared_mem", "=", "first", ".", "shape", "[", "1", "]", "*", "4", ",", "\n", "args", "=", "[", "n", ",", "rbot0", ".", "data_ptr", "(", ")", ",", "rbot1", ".", "data_ptr", "(", ")", ",", "output", ".", "data_ptr", "(", ")", "]", "\n", ")", "\n", "\n", "", "elif", "first", ".", "is_cuda", "==", "False", ":", "\n", "\t\t\t", "raise", "NotImplementedError", "(", ")", "\n", "\n", "# end", "\n", "\n", "", "return", "output", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation._FunctionCorrelation.backward": [[332, 382], ["gradOutput.is_contiguous", "first.new_zeros", "first.new_zeros", "range", "range", "NotImplementedError", "correlation.cupy_launch", "correlation.cupy_launch", "correlation.cupy_kernel", "tuple", "tuple", "correlation.cupy_kernel", "tuple", "tuple", "rbot0.data_ptr", "rbot1.data_ptr", "gradOutput.data_ptr", "gradFirst.data_ptr", "rbot0.data_ptr", "rbot1.data_ptr", "gradOutput.data_ptr", "gradSecond.data_ptr", "int", "int"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "gradOutput", ")", ":", "\n", "\t\t", "first", ",", "second", ",", "rbot0", ",", "rbot1", "=", "self", ".", "saved_tensors", "\n", "\n", "assert", "(", "gradOutput", ".", "is_contiguous", "(", ")", "==", "True", ")", "\n", "\n", "gradFirst", "=", "first", ".", "new_zeros", "(", "[", "first", ".", "shape", "[", "0", "]", ",", "first", ".", "shape", "[", "1", "]", ",", "first", ".", "shape", "[", "2", "]", ",", "first", ".", "shape", "[", "3", "]", "]", ")", "if", "self", ".", "needs_input_grad", "[", "0", "]", "==", "True", "else", "None", "\n", "gradSecond", "=", "first", ".", "new_zeros", "(", "[", "first", ".", "shape", "[", "0", "]", ",", "first", ".", "shape", "[", "1", "]", ",", "first", ".", "shape", "[", "2", "]", ",", "first", ".", "shape", "[", "3", "]", "]", ")", "if", "self", ".", "needs_input_grad", "[", "1", "]", "==", "True", "else", "None", "\n", "\n", "if", "first", ".", "is_cuda", "==", "True", ":", "\n", "\t\t\t", "if", "gradFirst", "is", "not", "None", ":", "\n", "\t\t\t\t", "for", "intSample", "in", "range", "(", "first", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "n", "=", "first", ".", "shape", "[", "1", "]", "*", "first", ".", "shape", "[", "2", "]", "*", "first", ".", "shape", "[", "3", "]", "\n", "cupy_launch", "(", "'kernel_Correlation_updateGradFirst'", ",", "cupy_kernel", "(", "'kernel_Correlation_updateGradFirst'", ",", "{", "\n", "'rbot0'", ":", "rbot0", ",", "\n", "'rbot1'", ":", "rbot1", ",", "\n", "'gradOutput'", ":", "gradOutput", ",", "\n", "'gradFirst'", ":", "gradFirst", ",", "\n", "'gradSecond'", ":", "None", "\n", "}", ")", ")", "(", "\n", "grid", "=", "tuple", "(", "[", "int", "(", "(", "n", "+", "512", "-", "1", ")", "/", "512", ")", ",", "1", ",", "1", "]", ")", ",", "\n", "block", "=", "tuple", "(", "[", "512", ",", "1", ",", "1", "]", ")", ",", "\n", "args", "=", "[", "n", ",", "intSample", ",", "rbot0", ".", "data_ptr", "(", ")", ",", "rbot1", ".", "data_ptr", "(", ")", ",", "gradOutput", ".", "data_ptr", "(", ")", ",", "gradFirst", ".", "data_ptr", "(", ")", ",", "None", "]", "\n", ")", "\n", "# end", "\n", "# end", "\n", "\n", "", "", "if", "gradSecond", "is", "not", "None", ":", "\n", "\t\t\t\t", "for", "intSample", "in", "range", "(", "first", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "n", "=", "first", ".", "shape", "[", "1", "]", "*", "first", ".", "shape", "[", "2", "]", "*", "first", ".", "shape", "[", "3", "]", "\n", "cupy_launch", "(", "'kernel_Correlation_updateGradSecond'", ",", "cupy_kernel", "(", "'kernel_Correlation_updateGradSecond'", ",", "{", "\n", "'rbot0'", ":", "rbot0", ",", "\n", "'rbot1'", ":", "rbot1", ",", "\n", "'gradOutput'", ":", "gradOutput", ",", "\n", "'gradFirst'", ":", "None", ",", "\n", "'gradSecond'", ":", "gradSecond", "\n", "}", ")", ")", "(", "\n", "grid", "=", "tuple", "(", "[", "int", "(", "(", "n", "+", "512", "-", "1", ")", "/", "512", ")", ",", "1", ",", "1", "]", ")", ",", "\n", "block", "=", "tuple", "(", "[", "512", ",", "1", ",", "1", "]", ")", ",", "\n", "args", "=", "[", "n", ",", "intSample", ",", "rbot0", ".", "data_ptr", "(", ")", ",", "rbot1", ".", "data_ptr", "(", ")", ",", "gradOutput", ".", "data_ptr", "(", ")", ",", "None", ",", "gradSecond", ".", "data_ptr", "(", ")", "]", "\n", ")", "\n", "# end", "\n", "# end", "\n", "\n", "", "", "", "elif", "first", ".", "is_cuda", "==", "False", ":", "\n", "\t\t\t", "raise", "NotImplementedError", "(", ")", "\n", "\n", "# end", "\n", "\n", "", "return", "gradFirst", ",", "gradSecond", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.ModuleCorrelation.__init__": [[390, 392], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "ModuleCorrelation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.ModuleCorrelation.forward": [[394, 396], ["_FunctionCorrelation.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tenFirst", ",", "tenSecond", ")", ":", "\n", "\t\t", "return", "_FunctionCorrelation", ".", "apply", "(", "tenFirst", ",", "tenSecond", ")", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_kernel": [[235, 271], ["globals", "re.search", "int", "re.search.group", "objVariables[].size", "strKernel.replace.replace", "re.search", "int", "re.search.group().split", "objVariables[].stride", "strKernel.replace.replace", "re.search.group", "re.search.group", "str", "re.search.group", "re.search.group", "re.search.group", "range", "str", "str.join", "strArgs[].replace().replace().strip", "strArgs[].replace().replace", "strArgs[].replace"], "function", ["None"], ["def", "cupy_kernel", "(", "strFunction", ",", "objVariables", ")", ":", "\n", "\t", "strKernel", "=", "globals", "(", ")", "[", "strFunction", "]", "\n", "\n", "while", "True", ":", "\n", "\t\t", "objMatch", "=", "re", ".", "search", "(", "'(SIZE_)([0-4])(\\()([^\\)]*)(\\))'", ",", "strKernel", ")", "\n", "\n", "if", "objMatch", "is", "None", ":", "\n", "\t\t\t", "break", "\n", "# end", "\n", "\n", "", "intArg", "=", "int", "(", "objMatch", ".", "group", "(", "2", ")", ")", "\n", "\n", "strTensor", "=", "objMatch", ".", "group", "(", "4", ")", "\n", "intSizes", "=", "objVariables", "[", "strTensor", "]", ".", "size", "(", ")", "\n", "\n", "strKernel", "=", "strKernel", ".", "replace", "(", "objMatch", ".", "group", "(", ")", ",", "str", "(", "intSizes", "[", "intArg", "]", ")", ")", "\n", "# end", "\n", "\n", "", "while", "True", ":", "\n", "\t\t", "objMatch", "=", "re", ".", "search", "(", "'(VALUE_)([0-4])(\\()([^\\)]+)(\\))'", ",", "strKernel", ")", "\n", "\n", "if", "objMatch", "is", "None", ":", "\n", "\t\t\t", "break", "\n", "# end", "\n", "\n", "", "intArgs", "=", "int", "(", "objMatch", ".", "group", "(", "2", ")", ")", "\n", "strArgs", "=", "objMatch", ".", "group", "(", "4", ")", ".", "split", "(", "','", ")", "\n", "\n", "strTensor", "=", "strArgs", "[", "0", "]", "\n", "intStrides", "=", "objVariables", "[", "strTensor", "]", ".", "stride", "(", ")", "\n", "strIndex", "=", "[", "'(('", "+", "strArgs", "[", "intArg", "+", "1", "]", ".", "replace", "(", "'{'", ",", "'('", ")", ".", "replace", "(", "'}'", ",", "')'", ")", ".", "strip", "(", ")", "+", "')*'", "+", "str", "(", "intStrides", "[", "intArg", "]", ")", "+", "')'", "for", "intArg", "in", "range", "(", "intArgs", ")", "]", "\n", "\n", "strKernel", "=", "strKernel", ".", "replace", "(", "objMatch", ".", "group", "(", "0", ")", ",", "strTensor", "+", "'['", "+", "str", ".", "join", "(", "'+'", ",", "strIndex", ")", "+", "']'", ")", "\n", "# end", "\n", "\n", "", "return", "strKernel", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.cupy_launch": [[273, 276], ["cupy.memoize", "cupy.cuda.compile_with_cache().get_function", "cupy.cuda.compile_with_cache"], "function", ["None"], ["", "@", "cupy", ".", "memoize", "(", "for_each_device", "=", "True", ")", "\n", "def", "cupy_launch", "(", "strFunction", ",", "strKernel", ")", ":", "\n", "\t", "return", "cupy", ".", "cuda", ".", "compile_with_cache", "(", "strKernel", ")", ".", "get_function", "(", "strFunction", ")", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.PWC.correlation.FunctionCorrelation": [[385, 387], ["_FunctionCorrelation.apply"], "function", ["None"], ["", "", "def", "FunctionCorrelation", "(", "tenFirst", ",", "tenSecond", ")", ":", "\n", "\t", "return", "_FunctionCorrelation", ".", "apply", "(", "tenFirst", ",", "tenSecond", ")", "\n", "# end", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_ate_scale.align": [[49, 101], ["numpy.set_printoptions", "numpy.zeros", "range", "numpy.linalg.linalg.svd", "numpy.matrix", "model.mean", "data.mean", "numpy.outer", "numpy.zeros.transpose", "numpy.identity", "range", "float", "numpy.linalg.det", "numpy.linalg.det", "numpy.dot", "numpy.linalg.norm", "data.mean", "model.mean", "numpy.sqrt", "data_zerocentered[].transpose", "numpy.sum", "numpy.multiply"], "function", ["None"], ["def", "align", "(", "model", ",", "data", ",", "calc_scale", "=", "False", ")", ":", "\n", "    ", "\"\"\"Align two trajectories using the method of Horn (closed-form).\n    \n    Input:\n    model -- first trajectory (3xn)\n    data -- second trajectory (3xn)\n    \n    Output:\n    rot -- rotation matrix (3x3)\n    trans -- translation vector (3x1)\n    trans_error -- translational error per point (1xn)\n    \n    \"\"\"", "\n", "numpy", ".", "set_printoptions", "(", "precision", "=", "3", ",", "suppress", "=", "True", ")", "\n", "model_zerocentered", "=", "model", "-", "model", ".", "mean", "(", "1", ")", "\n", "data_zerocentered", "=", "data", "-", "data", ".", "mean", "(", "1", ")", "\n", "\n", "W", "=", "numpy", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "for", "column", "in", "range", "(", "model", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "W", "+=", "numpy", ".", "outer", "(", "model_zerocentered", "[", ":", ",", "column", "]", ",", "data_zerocentered", "[", ":", ",", "column", "]", ")", "\n", "", "U", ",", "d", ",", "Vh", "=", "numpy", ".", "linalg", ".", "linalg", ".", "svd", "(", "W", ".", "transpose", "(", ")", ")", "\n", "S", "=", "numpy", ".", "matrix", "(", "numpy", ".", "identity", "(", "3", ")", ")", "\n", "if", "(", "numpy", ".", "linalg", ".", "det", "(", "U", ")", "*", "numpy", ".", "linalg", ".", "det", "(", "Vh", ")", "<", "0", ")", ":", "\n", "        ", "S", "[", "2", ",", "2", "]", "=", "-", "1", "\n", "", "rot", "=", "U", "*", "S", "*", "Vh", "\n", "\n", "if", "calc_scale", ":", "\n", "        ", "rotmodel", "=", "rot", "*", "model_zerocentered", "\n", "dots", "=", "0.0", "\n", "norms", "=", "0.0", "\n", "for", "column", "in", "range", "(", "data_zerocentered", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "dots", "+=", "numpy", ".", "dot", "(", "data_zerocentered", "[", ":", ",", "column", "]", ".", "transpose", "(", ")", ",", "rotmodel", "[", ":", ",", "column", "]", ")", "\n", "normi", "=", "numpy", ".", "linalg", ".", "norm", "(", "model_zerocentered", "[", ":", ",", "column", "]", ")", "\n", "norms", "+=", "normi", "*", "normi", "\n", "# s = float(dots/norms)  ", "\n", "", "s", "=", "float", "(", "norms", "/", "dots", ")", "\n", "", "else", ":", "\n", "        ", "s", "=", "1.0", "\n", "\n", "# trans = data.mean(1) - s*rot * model.mean(1)", "\n", "# model_aligned = s*rot * model + trans", "\n", "# alignment_error = model_aligned - data", "\n", "\n", "# scale the est to the gt, otherwise the ATE could be very small if the est scale is small", "\n", "", "trans", "=", "s", "*", "data", ".", "mean", "(", "1", ")", "-", "rot", "*", "model", ".", "mean", "(", "1", ")", "\n", "model_aligned", "=", "rot", "*", "model", "+", "trans", "\n", "data_alingned", "=", "s", "*", "data", "\n", "alignment_error", "=", "model_aligned", "-", "data_alingned", "\n", "\n", "trans_error", "=", "numpy", ".", "sqrt", "(", "numpy", ".", "sum", "(", "numpy", ".", "multiply", "(", "alignment_error", ",", "alignment_error", ")", ",", "0", ")", ")", ".", "A", "[", "0", "]", "\n", "\n", "return", "rot", ",", "trans", ",", "trans_error", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_ate_scale.plot_traj": [[102, 132], ["stamps.sort", "numpy.median", "range", "len", "len", "ax.plot", "x.append", "y.append", "zip", "len", "ax.plot"], "function", ["None"], ["", "def", "plot_traj", "(", "ax", ",", "stamps", ",", "traj", ",", "style", ",", "color", ",", "label", ")", ":", "\n", "    ", "\"\"\"\n    Plot a trajectory using matplotlib. \n    \n    Input:\n    ax -- the plot\n    stamps -- time stamps (1xn)\n    traj -- trajectory (3xn)\n    style -- line style\n    color -- line color\n    label -- plot legend\n    \n    \"\"\"", "\n", "stamps", ".", "sort", "(", ")", "\n", "interval", "=", "numpy", ".", "median", "(", "[", "s", "-", "t", "for", "s", ",", "t", "in", "zip", "(", "stamps", "[", "1", ":", "]", ",", "stamps", "[", ":", "-", "1", "]", ")", "]", ")", "\n", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "last", "=", "stamps", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "stamps", ")", ")", ":", "\n", "        ", "if", "stamps", "[", "i", "]", "-", "last", "<", "2", "*", "interval", ":", "\n", "            ", "x", ".", "append", "(", "traj", "[", "i", "]", "[", "0", "]", ")", "\n", "y", ".", "append", "(", "traj", "[", "i", "]", "[", "1", "]", ")", "\n", "", "elif", "len", "(", "x", ")", ">", "0", ":", "\n", "            ", "ax", ".", "plot", "(", "x", ",", "y", ",", "style", ",", "color", "=", "color", ",", "label", "=", "label", ")", "\n", "label", "=", "\"\"", "\n", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "", "last", "=", "stamps", "[", "i", "]", "\n", "", "if", "len", "(", "x", ")", ">", "0", ":", "\n", "        ", "ax", ".", "plot", "(", "x", ",", "y", ",", "style", ",", "color", "=", "color", ",", "label", "=", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.shift0": [[7, 20], ["transformation.pos_quats2SE_matrices", "numpy.linalg.inv", "numpy.array", "numpy.array", "np.linalg.inv.dot", "new_traj.append", "transformation.SE2pos_quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat"], ["def", "shift0", "(", "traj", ")", ":", "\n", "    ", "'''\n    Traj: a list of [t + quat]\n    Return: translate and rotate the traj\n    '''", "\n", "traj_ses", "=", "tf", ".", "pos_quats2SE_matrices", "(", "np", ".", "array", "(", "traj", ")", ")", "\n", "traj_init", "=", "traj_ses", "[", "0", "]", "\n", "traj_init_inv", "=", "np", ".", "linalg", ".", "inv", "(", "traj_init", ")", "\n", "new_traj", "=", "[", "]", "\n", "for", "tt", "in", "traj_ses", ":", "\n", "        ", "ttt", "=", "traj_init_inv", ".", "dot", "(", "tt", ")", "\n", "new_traj", ".", "append", "(", "tf", ".", "SE2pos_quat", "(", "ttt", ")", ")", "\n", "", "return", "np", ".", "array", "(", "new_traj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.ned2cam": [[21, 38], ["numpy.array", "numpy.linalg.inv", "transformation.pos_quats2SE_matrices", "numpy.array", "numpy.array", "np.array.dot().dot", "new_traj.append", "transformation.SE2pos_quat", "np.array.dot"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat"], ["", "def", "ned2cam", "(", "traj", ")", ":", "\n", "    ", "'''\n    transfer a ned traj to camera frame traj\n    '''", "\n", "T", "=", "np", ".", "array", "(", "[", "[", "0", ",", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "T_inv", "=", "np", ".", "linalg", ".", "inv", "(", "T", ")", "\n", "new_traj", "=", "[", "]", "\n", "traj_ses", "=", "tf", ".", "pos_quats2SE_matrices", "(", "np", ".", "array", "(", "traj", ")", ")", "\n", "\n", "for", "tt", "in", "traj_ses", ":", "\n", "        ", "ttt", "=", "T", ".", "dot", "(", "tt", ")", ".", "dot", "(", "T_inv", ")", "\n", "new_traj", ".", "append", "(", "tf", ".", "SE2pos_quat", "(", "ttt", ")", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "new_traj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.cam2ned": [[39, 56], ["numpy.array", "numpy.linalg.inv", "transformation.pos_quats2SE_matrices", "numpy.array", "numpy.array", "np.array.dot().dot", "new_traj.append", "transformation.SE2pos_quat", "np.array.dot"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat"], ["", "def", "cam2ned", "(", "traj", ")", ":", "\n", "    ", "'''\n    transfer a camera traj to ned frame traj\n    '''", "\n", "T", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "T_inv", "=", "np", ".", "linalg", ".", "inv", "(", "T", ")", "\n", "new_traj", "=", "[", "]", "\n", "traj_ses", "=", "tf", ".", "pos_quats2SE_matrices", "(", "np", ".", "array", "(", "traj", ")", ")", "\n", "\n", "for", "tt", "in", "traj_ses", ":", "\n", "        ", "ttt", "=", "T", ".", "dot", "(", "tt", ")", ".", "dot", "(", "T_inv", ")", "\n", "new_traj", ".", "append", "(", "tf", ".", "SE2pos_quat", "(", "ttt", ")", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "new_traj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.trajectory_transform": [[58, 70], ["trajectory_transform.shift0", "trajectory_transform.shift0"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.shift0", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.shift0"], ["", "def", "trajectory_transform", "(", "gt_traj", ",", "est_traj", ")", ":", "\n", "    ", "'''\n    1. center the start frame to the axis origin\n    2. align the GT frame (NED) with estimation frame (camera)\n    '''", "\n", "gt_traj_trans", "=", "shift0", "(", "gt_traj", ")", "\n", "est_traj_trans", "=", "shift0", "(", "est_traj", ")", "\n", "\n", "# gt_traj_trans = ned2cam(gt_traj_trans)", "\n", "# est_traj_trans = cam2ned(est_traj_trans)", "\n", "\n", "return", "gt_traj_trans", ",", "est_traj_trans", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.rescale_bk": [[71, 87], ["transformation.pose2motion", "transformation.pose2motion", "numpy.sum", "numpy.sqrt", "numpy.sum", "numpy.sqrt", "numpy.mean", "transformation.motion2pose"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pose2motion", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pose2motion", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.motion2pose"], ["", "def", "rescale_bk", "(", "poses_gt", ",", "poses", ")", ":", "\n", "    ", "motion_gt", "=", "tf", ".", "pose2motion", "(", "poses_gt", ")", "\n", "motion", "=", "tf", ".", "pose2motion", "(", "poses", ")", "\n", "\n", "speed_square_gt", "=", "np", ".", "sum", "(", "motion_gt", "[", ":", ",", "0", ":", "3", ",", "3", "]", "*", "motion_gt", "[", ":", ",", "0", ":", "3", ",", "3", "]", ",", "1", ")", "\n", "speed_gt", "=", "np", ".", "sqrt", "(", "speed_square_gt", ")", "\n", "speed_square", "=", "np", ".", "sum", "(", "motion", "[", ":", ",", "0", ":", "3", ",", "3", "]", "*", "motion", "[", ":", ",", "0", ":", "3", ",", "3", "]", ",", "1", ")", "\n", "speed", "=", "np", ".", "sqrt", "(", "speed_square", ")", "\n", "# when the speed is small, the scale could become very large", "\n", "# import ipdb;ipdb.set_trace()", "\n", "mask", "=", "(", "speed_gt", ">", "0.0001", ")", "# * (speed>0.00001)", "\n", "scale", "=", "np", ".", "mean", "(", "(", "speed", "[", "mask", "]", ")", "/", "speed_gt", "[", "mask", "]", ")", "\n", "scale", "=", "1.0", "/", "scale", "\n", "motion", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "motion", "[", ":", ",", "0", ":", "3", ",", "3", "]", "*", "scale", "\n", "pose_update", "=", "tf", ".", "motion2pose", "(", "motion", ")", "\n", "return", "pose_update", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.pose2trans": [[88, 96], ["len", "range", "numpy.array", "trans.append", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "pose2trans", "(", "pose_data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "pose_data", ")", "\n", "trans", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", "-", "1", ")", ":", "\n", "        ", "tran", "=", "np", ".", "array", "(", "pose_data", "[", "i", "+", "1", "]", "[", ":", "3", "]", ")", "-", "np", ".", "array", "(", "pose_data", "[", "i", "]", "[", ":", "3", "]", ")", "# np.linalg.inv(data[i]).dot(data[i+1])", "\n", "trans", ".", "append", "(", "tran", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "trans", ")", "# N x 3", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.rescale": [[98, 117], ["trajectory_transform.pose2trans", "trajectory_transform.pose2trans", "numpy.sum", "numpy.sqrt", "numpy.sum", "numpy.sqrt", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.pose2trans", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.pose2trans"], ["", "def", "rescale", "(", "poses_gt", ",", "poses", ")", ":", "\n", "    ", "'''\n    similar to rescale\n    poses_gt/poses: N x 7 poselist in quaternion format\n    '''", "\n", "trans_gt", "=", "pose2trans", "(", "poses_gt", ")", "\n", "trans", "=", "pose2trans", "(", "poses", ")", "\n", "\n", "speed_square_gt", "=", "np", ".", "sum", "(", "trans_gt", "*", "trans_gt", ",", "1", ")", "\n", "speed_gt", "=", "np", ".", "sqrt", "(", "speed_square_gt", ")", "\n", "speed_square", "=", "np", ".", "sum", "(", "trans", "*", "trans", ",", "1", ")", "\n", "speed", "=", "np", ".", "sqrt", "(", "speed_square", ")", "\n", "# when the speed is small, the scale could become very large", "\n", "# import ipdb;ipdb.set_trace()", "\n", "mask", "=", "(", "speed_gt", ">", "0.0001", ")", "# * (speed>0.00001)", "\n", "scale", "=", "np", ".", "mean", "(", "(", "speed", "[", "mask", "]", ")", "/", "speed_gt", "[", "mask", "]", ")", "\n", "scale", "=", "1.0", "/", "scale", "\n", "poses", "[", ":", ",", "0", ":", "3", "]", "=", "poses", "[", ":", ",", "0", ":", "3", "]", "*", "scale", "\n", "return", "poses", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.trajectory_scale": [[118, 122], ["None"], "function", ["None"], ["", "def", "trajectory_scale", "(", "traj", ",", "scale", ")", ":", "\n", "    ", "for", "ttt", "in", "traj", ":", "\n", "        ", "ttt", "[", "0", ":", "3", ",", "3", "]", "=", "ttt", "[", "0", ":", "3", ",", "3", "]", "*", "scale", "\n", "", "return", "traj", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.timestamp_associate": [[123, 163], ["dict", "dict", "dict.keys", "dict.keys", "potential_matches.sort", "matches.sort", "first_res.append", "second_res.append", "numpy.array", "numpy.array", "abs", "first_dict.keys.remove", "second_dict.keys.remove", "matches.append", "abs", "len", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove"], ["", "def", "timestamp_associate", "(", "first_list", ",", "second_list", ",", "max_difference", ")", ":", "\n", "    ", "\"\"\"\n    Associate two trajectory of [stamp,data]. As the time stamps never match exactly, we aim \n    to find the closest match for every input tuple.\n    \n    Input:\n    first_list -- first list of (stamp,data)\n    second_list -- second list of (stamp,data)\n    max_difference -- search radius for candidate generation\n\n    Output:\n    first_res: matched data from the first list\n    second_res: matched data from the second list\n    \n    \"\"\"", "\n", "first_dict", "=", "dict", "(", "[", "(", "l", "[", "0", "]", ",", "l", "[", "1", ":", "]", ")", "for", "l", "in", "first_list", "if", "len", "(", "l", ")", ">", "1", "]", ")", "\n", "second_dict", "=", "dict", "(", "[", "(", "l", "[", "0", "]", ",", "l", "[", "1", ":", "]", ")", "for", "l", "in", "second_list", "if", "len", "(", "l", ")", ">", "1", "]", ")", "\n", "\n", "first_keys", "=", "first_dict", ".", "keys", "(", ")", "\n", "second_keys", "=", "second_dict", ".", "keys", "(", ")", "\n", "potential_matches", "=", "[", "(", "abs", "(", "a", "-", "b", ")", ",", "a", ",", "b", ")", "\n", "for", "a", "in", "first_keys", "\n", "for", "b", "in", "second_keys", "\n", "if", "abs", "(", "a", "-", "b", ")", "<", "max_difference", "]", "\n", "potential_matches", ".", "sort", "(", ")", "\n", "matches", "=", "[", "]", "\n", "for", "diff", ",", "a", ",", "b", "in", "potential_matches", ":", "\n", "        ", "if", "a", "in", "first_keys", "and", "b", "in", "second_keys", ":", "\n", "            ", "first_keys", ".", "remove", "(", "a", ")", "\n", "second_keys", ".", "remove", "(", "b", ")", "\n", "matches", ".", "append", "(", "(", "a", ",", "b", ")", ")", "\n", "\n", "", "", "matches", ".", "sort", "(", ")", "\n", "\n", "first_res", "=", "[", "]", "\n", "second_res", "=", "[", "]", "\n", "for", "t1", ",", "t2", "in", "matches", ":", "\n", "        ", "first_res", ".", "append", "(", "first_dict", "[", "t1", "]", ")", "\n", "second_res", ".", "append", "(", "second_dict", "[", "t2", "]", ")", "\n", "", "return", "np", ".", "array", "(", "first_res", ")", ",", "np", ".", "array", "(", "second_res", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.ATEEvaluator.__init__": [[27, 29], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ATEEvaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.ATEEvaluator.evaluate": [[31, 54], ["numpy.matrix", "numpy.matrix", "evaluate_ate_scale.align", "print", "numpy.sqrt", "transformation.pos_quats2SE_matrices", "numpy.eye", "numpy.linalg.inv", "numpy.array", "gt_traj[].transpose", "est_traj[].transpose", "numpy.linalg.inv.dot", "transformation.SE2pos_quat", "numpy.array.append", "numpy.dot", "len"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_ate_scale.align", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat"], ["", "def", "evaluate", "(", "self", ",", "gt_traj", ",", "est_traj", ",", "scale", ")", ":", "\n", "        ", "gt_xyz", "=", "np", ".", "matrix", "(", "gt_traj", "[", ":", ",", "0", ":", "3", "]", ".", "transpose", "(", ")", ")", "\n", "est_xyz", "=", "np", ".", "matrix", "(", "est_traj", "[", ":", ",", "0", ":", "3", "]", ".", "transpose", "(", ")", ")", "\n", "\n", "rot", ",", "trans", ",", "trans_error", ",", "s", "=", "align", "(", "gt_xyz", ",", "est_xyz", ",", "scale", ")", "\n", "print", "(", "'  ATE scale: {}'", ".", "format", "(", "s", ")", ")", "\n", "error", "=", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "trans_error", ",", "trans_error", ")", "/", "len", "(", "trans_error", ")", ")", "\n", "\n", "# align two trajs ", "\n", "est_SEs", "=", "pos_quats2SE_matrices", "(", "est_traj", ")", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "rot", "\n", "T", "[", ":", "3", ",", "3", ":", "]", "=", "trans", "\n", "T", "=", "np", ".", "linalg", ".", "inv", "(", "T", ")", "\n", "est_traj_aligned", "=", "[", "]", "\n", "for", "se", "in", "est_SEs", ":", "\n", "            ", "se", "[", ":", "3", ",", "3", "]", "=", "se", "[", ":", "3", ",", "3", "]", "*", "s", "\n", "se_new", "=", "T", ".", "dot", "(", "se", ")", "\n", "se_new", "=", "SE2pos_quat", "(", "se_new", ")", "\n", "est_traj_aligned", ".", "append", "(", "se_new", ")", "\n", "\n", "", "est_traj_aligned", "=", "np", ".", "array", "(", "est_traj_aligned", ")", "\n", "return", "error", ",", "gt_traj", ",", "est_traj_aligned", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.RPEEvaluator.__init__": [[60, 62], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "RPEEvaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.RPEEvaluator.evaluate": [[64, 76], ["evaluate_rpe.evaluate_trajectory", "numpy.mean", "numpy.mean", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.evaluate_trajectory"], ["", "def", "evaluate", "(", "self", ",", "gt_SEs", ",", "est_SEs", ")", ":", "\n", "        ", "result", "=", "evaluate_trajectory", "(", "gt_SEs", ",", "est_SEs", ")", "\n", "\n", "trans_error", "=", "np", ".", "array", "(", "result", ")", "[", ":", ",", "2", "]", "\n", "rot_error", "=", "np", ".", "array", "(", "result", ")", "[", ":", ",", "3", "]", "\n", "\n", "trans_error_mean", "=", "np", ".", "mean", "(", "trans_error", ")", "\n", "rot_error_mean", "=", "np", ".", "mean", "(", "rot_error", ")", "\n", "\n", "# import ipdb;ipdb.set_trace()", "\n", "\n", "return", "(", "rot_error_mean", ",", "trans_error_mean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.KittiEvaluator.__init__": [[82, 84], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "KittiEvaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.KittiEvaluator.evaluate": [[86, 90], ["evaluate_kitti.evaluate"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.evaluate"], ["", "def", "evaluate", "(", "self", ",", "gt_SEs", ",", "est_SEs", ",", "kittitype", ")", ":", "\n", "# trajectory_scale(est_SEs, 0.831984631412)", "\n", "        ", "error", "=", "kittievaluate", "(", "gt_SEs", ",", "est_SEs", ",", "kittitype", "=", "kittitype", ")", "\n", "return", "error", "\n", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.transform_trajs": [[10, 18], ["trajectory_transform.trajectory_transform", "trajectory_transform.rescale", "print"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.trajectory_transform", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.trajectory_transform.rescale"], ["def", "transform_trajs", "(", "gt_traj", ",", "est_traj", ",", "cal_scale", ")", ":", "\n", "    ", "gt_traj", ",", "est_traj", "=", "trajectory_transform", "(", "gt_traj", ",", "est_traj", ")", "\n", "if", "cal_scale", ":", "\n", "        ", "est_traj", ",", "s", "=", "rescale", "(", "gt_traj", ",", "est_traj", ")", "\n", "print", "(", "'  Scale, {}'", ".", "format", "(", "s", ")", ")", "\n", "", "else", ":", "\n", "        ", "s", "=", "1.0", "\n", "", "return", "gt_traj", ",", "est_traj", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.quats2SEs": [[19, 23], ["transformation.pos_quats2SE_matrices", "transformation.pos_quats2SE_matrices"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices"], ["", "def", "quats2SEs", "(", "gt_traj", ",", "est_traj", ")", ":", "\n", "    ", "gt_SEs", "=", "pos_quats2SE_matrices", "(", "gt_traj", ")", "\n", "est_SEs", "=", "pos_quats2SE_matrices", "(", "est_traj", ")", "\n", "return", "gt_SEs", ",", "est_SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.ominus": [[44, 56], ["numpy.dot", "numpy.linalg.inv"], "function", ["None"], ["def", "ominus", "(", "a", ",", "b", ")", ":", "\n", "    ", "\"\"\"\n    Compute the relative 3D transformation between a and b.\n    \n    Input:\n    a -- first pose (homogeneous 4x4 matrix)\n    b -- second pose (homogeneous 4x4 matrix)\n    \n    Output:\n    Relative 3D transformation from a to b.\n    \"\"\"", "\n", "return", "np", ".", "dot", "(", "np", ".", "linalg", ".", "inv", "(", "a", ")", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.compute_distance": [[57, 62], ["numpy.linalg.norm"], "function", ["None"], ["", "def", "compute_distance", "(", "transform", ")", ":", "\n", "    ", "\"\"\"\n    Compute the distance of the translational component of a 4x4 homogeneous matrix.\n    \"\"\"", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "transform", "[", "0", ":", "3", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.compute_angle": [[63, 69], ["numpy.arccos", "min", "max", "numpy.trace"], "function", ["None"], ["", "def", "compute_angle", "(", "transform", ")", ":", "\n", "    ", "\"\"\"\n    Compute the rotation angle from a 4x4 homogeneous matrix.\n    \"\"\"", "\n", "# an invitation to 3-d vision, p 27", "\n", "return", "np", ".", "arccos", "(", "min", "(", "1", ",", "max", "(", "-", "1", ",", "(", "np", ".", "trace", "(", "transform", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "-", "1", ")", "/", "2", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.distances_along_trajectory": [[70, 81], ["evaluate_rpe.ominus", "evaluate_rpe.compute_distance", "distances.append", "range", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.ominus", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.compute_distance"], ["", "def", "distances_along_trajectory", "(", "traj", ")", ":", "\n", "    ", "\"\"\"\n    Compute the translational distances along a trajectory. \n    \"\"\"", "\n", "motion", "=", "[", "ominus", "(", "traj", "[", "i", "+", "1", "]", ",", "traj", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "traj", ")", "-", "1", ")", "]", "\n", "distances", "=", "[", "0", "]", "\n", "sum", "=", "0", "\n", "for", "t", "in", "motion", ":", "\n", "        ", "sum", "+=", "compute_distance", "(", "t", ")", "\n", "distances", ".", "append", "(", "sum", ")", "\n", "", "return", "distances", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.evaluate_trajectory": [[83, 137], ["range", "evaluate_rpe.ominus", "evaluate_rpe.compute_distance", "evaluate_rpe.compute_angle", "result.append", "len", "Exception", "len", "random.sample", "evaluate_rpe.ominus", "evaluate_rpe.ominus", "len", "numpy.sqrt", "len", "random.sample.append", "len", "range", "range", "random.randint", "random.randint", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.ominus", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.compute_distance", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.compute_angle", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.ominus", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_rpe.ominus"], ["", "def", "evaluate_trajectory", "(", "traj_gt", ",", "traj_est", ",", "param_max_pairs", "=", "10000", ",", "param_fixed_delta", "=", "False", ",", "\n", "param_delta", "=", "1.00", ")", ":", "\n", "    ", "\"\"\"\n    Compute the relative pose error between two trajectories.\n    \n    Input:\n    traj_gt -- the first trajectory (ground truth)\n    traj_est -- the second trajectory (estimated trajectory)\n    param_max_pairs -- number of relative poses to be evaluated\n    param_fixed_delta -- false: evaluate over all possible pairs\n                         true: only evaluate over pairs with a given distance (delta)\n    param_delta -- distance between the evaluated pairs\n    param_delta_unit -- unit for comparison:\n                        \"s\": seconds\n                        \"m\": meters\n                        \"rad\": radians\n                        \"deg\": degrees\n                        \"f\": frames\n    param_offset -- time offset between two trajectories (to model the delay)\n    param_scale -- scale to be applied to the second trajectory\n    \n    Output:\n    list of compared poses and the resulting translation and rotation error\n    \"\"\"", "\n", "\n", "if", "not", "param_fixed_delta", ":", "\n", "        ", "if", "(", "param_max_pairs", "==", "0", "or", "len", "(", "traj_est", ")", "<", "np", ".", "sqrt", "(", "param_max_pairs", ")", ")", ":", "\n", "            ", "pairs", "=", "[", "(", "i", ",", "j", ")", "for", "i", "in", "range", "(", "len", "(", "traj_est", ")", ")", "for", "j", "in", "range", "(", "len", "(", "traj_est", ")", ")", "]", "\n", "", "else", ":", "\n", "            ", "pairs", "=", "[", "(", "random", ".", "randint", "(", "0", ",", "len", "(", "traj_est", ")", "-", "1", ")", ",", "random", ".", "randint", "(", "0", ",", "len", "(", "traj_est", ")", "-", "1", ")", ")", "for", "i", "in", "range", "(", "param_max_pairs", ")", "]", "\n", "", "", "else", ":", "\n", "        ", "pairs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "traj_est", ")", ")", ":", "\n", "            ", "j", "=", "i", "+", "param_delta", "\n", "if", "j", "<", "len", "(", "traj_est", ")", ":", "\n", "                ", "pairs", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "if", "(", "param_max_pairs", "!=", "0", "and", "len", "(", "pairs", ")", ">", "param_max_pairs", ")", ":", "\n", "            ", "pairs", "=", "random", ".", "sample", "(", "pairs", ",", "param_max_pairs", ")", "\n", "\n", "", "", "result", "=", "[", "]", "\n", "for", "i", ",", "j", "in", "pairs", ":", "\n", "\n", "        ", "error44", "=", "ominus", "(", "ominus", "(", "traj_est", "[", "j", "]", ",", "traj_est", "[", "i", "]", ")", ",", "\n", "ominus", "(", "traj_gt", "[", "j", "]", ",", "traj_gt", "[", "i", "]", ")", ")", "\n", "\n", "trans", "=", "compute_distance", "(", "error44", ")", "\n", "rot", "=", "compute_angle", "(", "error44", ")", "\n", "\n", "result", ".", "append", "(", "[", "i", ",", "j", ",", "trans", ",", "rot", "]", ")", "\n", "\n", "", "if", "len", "(", "result", ")", "<", "2", ":", "\n", "        ", "raise", "Exception", "(", "\"Couldn't find pairs between groundtruth and estimated trajectory!\"", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.line2mat": [[8, 12], ["numpy.eye", "line_data.reshape", "numpy.matrix"], "function", ["None"], ["def", "line2mat", "(", "line_data", ")", ":", "\n", "    ", "mat", "=", "np", ".", "eye", "(", "4", ")", "\n", "mat", "[", "0", ":", "3", ",", ":", "]", "=", "line_data", ".", "reshape", "(", "3", ",", "4", ")", "\n", "return", "np", ".", "matrix", "(", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.motion2pose": [[13, 22], ["len", "all_pose.append", "numpy.eye", "range", "numpy.eye", "pose.dot.dot", "all_pose.append"], "function", ["None"], ["", "def", "motion2pose", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_pose", "=", "[", "]", "# np.zeros((data_size+1, 4, 4))", "\n", "all_pose", ".", "append", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "#[0,:] = np.eye(4,4)", "\n", "pose", "=", "np", ".", "eye", "(", "4", ",", "4", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "pose", "=", "pose", ".", "dot", "(", "data", "[", "i", "]", ")", "\n", "all_pose", ".", "append", "(", "pose", ")", "\n", "", "return", "all_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.pose2motion": [[23, 31], ["len", "range", "numpy.array", "numpy.linalg.inv().dot", "all_motion.append", "numpy.linalg.inv"], "function", ["None"], ["", "def", "pose2motion", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_motion", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", "-", "1", ")", ":", "\n", "        ", "motion", "=", "np", ".", "linalg", ".", "inv", "(", "data", "[", "i", "]", ")", ".", "dot", "(", "data", "[", "i", "+", "1", "]", ")", "\n", "all_motion", ".", "append", "(", "motion", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "all_motion", ")", "# N x 4 x 4", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.SE2se": [[32, 37], ["numpy.zeros", "numpy.array", "transformation.SO2so"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2so"], ["", "def", "SE2se", "(", "SE_data", ")", ":", "\n", "    ", "result", "=", "np", ".", "zeros", "(", "(", "6", ")", ")", "\n", "result", "[", "0", ":", "3", "]", "=", "np", ".", "array", "(", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", ")", "\n", "result", "[", "3", ":", "6", "]", "=", "SO2so", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.SO2so": [[38, 40], ["scipy.spatial.transform.Rotation.from_dcm().as_rotvec", "scipy.spatial.transform.Rotation.from_dcm"], "function", ["None"], ["", "def", "SO2so", "(", "SO_data", ")", ":", "\n", "    ", "return", "R", ".", "from_dcm", "(", "SO_data", ")", ".", "as_rotvec", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.so2SO": [[41, 43], ["scipy.spatial.transform.Rotation.from_rotvec().as_dcm", "scipy.spatial.transform.Rotation.from_rotvec"], "function", ["None"], ["", "def", "so2SO", "(", "so_data", ")", ":", "\n", "    ", "return", "R", ".", "from_rotvec", "(", "so_data", ")", ".", "as_dcm", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.se2SE": [[44, 49], ["numpy.matrix", "transformation.so2SO", "numpy.eye", "numpy.matrix"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2SO"], ["", "def", "se2SE", "(", "se_data", ")", ":", "\n", "    ", "result_mat", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "result_mat", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "so2SO", "(", "se_data", "[", "3", ":", "6", "]", ")", "\n", "result_mat", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "se_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result_mat", "\n", "### can get wrong result", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.se_mean": [[50, 59], ["numpy.matrix", "range", "transformation.SE2se", "numpy.eye", "transformation.se2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["", "def", "se_mean", "(", "se_datas", ")", ":", "\n", "    ", "all_SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "for", "i", "in", "range", "(", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "se", "=", "se_datas", "[", "i", ",", ":", "]", "\n", "SE", "=", "se2SE", "(", "se", ")", "\n", "all_SE", "=", "all_SE", "*", "SE", "\n", "", "all_se", "=", "SE2se", "(", "all_SE", ")", "\n", "mean_se", "=", "all_se", "/", "se_datas", ".", "shape", "[", "0", "]", "\n", "return", "mean_se", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.ses_mean": [[60, 68], ["numpy.array", "numpy.transpose", "numpy.zeros", "range", "np.transpose.reshape", "transformation.se_mean"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se_mean"], ["", "def", "ses_mean", "(", "se_datas", ")", ":", "\n", "    ", "se_datas", "=", "np", ".", "array", "(", "se_datas", ")", "\n", "se_datas", "=", "np", ".", "transpose", "(", "se_datas", ".", "reshape", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "1", "]", ",", "se_datas", ".", "shape", "[", "2", "]", "*", "se_datas", ".", "shape", "[", "3", "]", ")", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "se_result", "=", "np", ".", "zeros", "(", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "2", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "mean_se", "=", "se_mean", "(", "se_datas", "[", "i", ",", ":", ",", ":", "]", ")", "\n", "se_result", "[", "i", ",", ":", "]", "=", "mean_se", "\n", "", "return", "se_result", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.ses2poses": [[69, 81], ["numpy.zeros", "numpy.eye().reshape", "numpy.matrix", "range", "numpy.eye", "transformation.se2SE", "numpy.array().reshape", "numpy.eye", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["", "def", "ses2poses", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "data", ".", "shape", "[", "0", "]", "\n", "all_pose", "=", "np", ".", "zeros", "(", "(", "data_size", "+", "1", ",", "12", ")", ")", "\n", "temp", "=", "np", ".", "eye", "(", "4", ",", "4", ")", ".", "reshape", "(", "1", ",", "16", ")", "\n", "all_pose", "[", "0", ",", ":", "]", "=", "temp", "[", "0", ",", "0", ":", "12", "]", "\n", "pose", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "data_mat", "=", "se2SE", "(", "data", "[", "i", ",", ":", "]", ")", "\n", "pose", "=", "pose", "*", "data_mat", "\n", "pose_line", "=", "np", ".", "array", "(", "pose", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "all_pose", "[", "i", "+", "1", ",", ":", "]", "=", "pose_line", "\n", "", "return", "all_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.SEs2ses": [[82, 90], ["numpy.zeros", "range", "numpy.matrix", "motion_data[].reshape", "transformation.SE2se", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se"], ["", "def", "SEs2ses", "(", "motion_data", ")", ":", "\n", "    ", "data_size", "=", "motion_data", ".", "shape", "[", "0", "]", "\n", "ses", "=", "np", ".", "zeros", "(", "(", "data_size", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", ":", "]", "=", "motion_data", "[", "i", ",", ":", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "ses", "[", "i", ",", ":", "]", "=", "SE2se", "(", "SE", ")", "\n", "", "return", "ses", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.so2quat": [[91, 99], ["numpy.array", "numpy.sqrt", "numpy.zeros", "numpy.cos", "numpy.sum", "numpy.sin"], "function", ["None"], ["", "def", "so2quat", "(", "so_data", ")", ":", "\n", "    ", "so_data", "=", "np", ".", "array", "(", "so_data", ")", "\n", "theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "so_data", "*", "so_data", ")", ")", "\n", "axis", "=", "so_data", "/", "theta", "\n", "quat", "=", "np", ".", "zeros", "(", "4", ")", "\n", "quat", "[", "0", ":", "3", "]", "=", "np", ".", "sin", "(", "theta", "/", "2", ")", "*", "axis", "\n", "quat", "[", "3", "]", "=", "np", ".", "cos", "(", "theta", "/", "2", ")", "\n", "return", "quat", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.quat2so": [[100, 108], ["numpy.array", "numpy.sqrt", "numpy.sum", "numpy.arctan2"], "function", ["None"], ["", "def", "quat2so", "(", "quat_data", ")", ":", "\n", "    ", "quat_data", "=", "np", ".", "array", "(", "quat_data", ")", "\n", "sin_half_theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "quat_data", "[", "0", ":", "3", "]", "*", "quat_data", "[", "0", ":", "3", "]", ")", ")", "\n", "axis", "=", "quat_data", "[", "0", ":", "3", "]", "/", "sin_half_theta", "\n", "cos_half_theta", "=", "quat_data", "[", "3", "]", "\n", "theta", "=", "2", "*", "np", ".", "arctan2", "(", "sin_half_theta", ",", "cos_half_theta", ")", "\n", "so", "=", "theta", "*", "axis", "\n", "return", "so", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.sos2quats": [[111, 122], ["numpy.array", "np.transpose.reshape", "numpy.transpose", "numpy.zeros", "range", "range", "transformation.so2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2quat"], ["", "def", "sos2quats", "(", "so_datas", ",", "mean_std", "=", "[", "[", "1", "]", ",", "[", "1", "]", "]", ")", ":", "\n", "    ", "so_datas", "=", "np", ".", "array", "(", "so_datas", ")", "\n", "so_datas", "=", "so_datas", ".", "reshape", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "so_datas", ".", "shape", "[", "2", "]", "*", "so_datas", ".", "shape", "[", "3", "]", ")", "\n", "so_datas", "=", "np", ".", "transpose", "(", "so_datas", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "quat_datas", "=", "np", ".", "zeros", "(", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "4", ")", ")", "\n", "for", "i_b", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "i_p", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "so_data", "=", "so_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "\n", "quat_data", "=", "so2quat", "(", "so_data", ")", "\n", "quat_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "=", "quat_data", "\n", "", "", "return", "quat_datas", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.SO2quat": [[123, 126], ["scipy.spatial.transform.Rotation.from_dcm", "R.from_dcm.as_quat"], "function", ["None"], ["", "def", "SO2quat", "(", "SO_data", ")", ":", "\n", "    ", "rr", "=", "R", ".", "from_dcm", "(", "SO_data", ")", "\n", "return", "rr", ".", "as_quat", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.quat2SO": [[127, 129], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], ["", "def", "quat2SO", "(", "quat_data", ")", ":", "\n", "    ", "return", "R", ".", "from_quat", "(", "quat_data", ")", ".", "as_dcm", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.pos_quat2SE": [[131, 138], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.matrix", "numpy.matrix", "numpy.array().reshape", "numpy.eye", "numpy.matrix", "scipy.spatial.transform.Rotation.from_quat", "numpy.array"], "function", ["None"], ["", "def", "pos_quat2SE", "(", "quat_data", ")", ":", "\n", "    ", "SO", "=", "R", ".", "from_quat", "(", "quat_data", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "np", ".", "matrix", "(", "SO", ")", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "quat_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "SE", "=", "np", ".", "array", "(", "SE", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "return", "SE", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.pos_quats2SEs": [[140, 147], ["numpy.zeros", "range", "transformation.pos_quat2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quat2SE"], ["", "def", "pos_quats2SEs", "(", "quat_datas", ")", ":", "\n", "    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "np", ".", "zeros", "(", "(", "data_len", ",", "12", ")", ")", "\n", "for", "i_data", "in", "range", "(", "0", ",", "data_len", ")", ":", "\n", "        ", "SE", "=", "pos_quat2SE", "(", "quat_datas", "[", "i_data", ",", ":", "]", ")", "\n", "SEs", "[", "i_data", ",", ":", "]", "=", "SE", "\n", "", "return", "SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.pos_quats2SE_matrices": [[149, 159], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.eye", "SEs.append", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], ["", "def", "pos_quats2SE_matrices", "(", "quat_datas", ")", ":", "\n", "    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "[", "]", "\n", "for", "quat", "in", "quat_datas", ":", "\n", "        ", "SO", "=", "R", ".", "from_quat", "(", "quat", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "eye", "(", "4", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "SO", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "quat", "[", "0", ":", "3", "]", "\n", "SEs", ".", "append", "(", "SE", ")", "\n", "", "return", "SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.transformation.SE2pos_quat": [[160, 165], ["numpy.zeros", "transformation.SO2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat"], ["", "def", "SE2pos_quat", "(", "SE_data", ")", ":", "\n", "    ", "pos_quat", "=", "np", ".", "zeros", "(", "7", ")", "\n", "pos_quat", "[", "3", ":", "]", "=", "SO2quat", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "pos_quat", "[", ":", "3", "]", "=", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", "\n", "return", "pos_quat", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.tartanair_evaluator.TartanAirEvaluator.__init__": [[11, 15], ["evaluator_base.ATEEvaluator", "evaluator_base.RPEEvaluator", "evaluator_base.KittiEvaluator"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "False", ",", "round", "=", "1", ")", ":", "\n", "        ", "self", ".", "ate_eval", "=", "ATEEvaluator", "(", ")", "\n", "self", ".", "rpe_eval", "=", "RPEEvaluator", "(", ")", "\n", "self", ".", "kitti_eval", "=", "KittiEvaluator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.tartanair_evaluator.TartanAirEvaluator.evaluate_one_trajectory": [[16, 45], ["evaluator_base.transform_trajs", "evaluator_base.quats2SEs", "tartanair_evaluator.TartanAirEvaluator.ate_eval.evaluate", "tartanair_evaluator.TartanAirEvaluator.rpe_eval.evaluate", "tartanair_evaluator.TartanAirEvaluator.kitti_eval.evaluate", "numpy.loadtxt", "numpy.loadtxt", "Exception", "Exception"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.transform_trajs", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluator_base.quats2SEs", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.evaluate", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.evaluate", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.evaluate"], ["", "def", "evaluate_one_trajectory", "(", "self", ",", "gt_traj", ",", "est_traj", ",", "scale", "=", "False", ",", "kittitype", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        scale = True: calculate a global scale\n        \"\"\"", "\n", "# load trajectories", "\n", "try", ":", "\n", "            ", "gt_traj", "=", "np", ".", "loadtxt", "(", "gt_traj", ")", "\n", "est_traj", "=", "np", ".", "loadtxt", "(", "est_traj", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "gt_traj", ".", "shape", "[", "0", "]", "!=", "est_traj", ".", "shape", "[", "0", "]", ":", "\n", "            ", "raise", "Exception", "(", "\"POSEFILE_LENGTH_ILLEGAL\"", ")", "\n", "", "if", "gt_traj", ".", "shape", "[", "1", "]", "!=", "7", "or", "est_traj", ".", "shape", "[", "1", "]", "!=", "7", ":", "\n", "            ", "raise", "Exception", "(", "\"POSEFILE_FORMAT_ILLEGAL\"", ")", "\n", "\n", "# transform and scale", "\n", "", "gt_traj_trans", ",", "est_traj_trans", ",", "s", "=", "transform_trajs", "(", "gt_traj", ",", "est_traj", ",", "scale", ")", "\n", "gt_SEs", ",", "est_SEs", "=", "quats2SEs", "(", "gt_traj_trans", ",", "est_traj_trans", ")", "\n", "\n", "ate_score", ",", "gt_ate_aligned", ",", "est_ate_aligned", "=", "self", ".", "ate_eval", ".", "evaluate", "(", "gt_traj", ",", "est_traj", ",", "scale", ")", "\n", "rpe_score", "=", "self", ".", "rpe_eval", ".", "evaluate", "(", "gt_SEs", ",", "est_SEs", ")", "\n", "kitti_score", "=", "self", ".", "kitti_eval", ".", "evaluate", "(", "gt_SEs", ",", "est_SEs", ",", "kittitype", "=", "kittitype", ")", "\n", "\n", "return", "{", "'ate_score'", ":", "ate_score", ",", "\n", "'rpe_score'", ":", "rpe_score", ",", "\n", "'kitti_score'", ":", "kitti_score", ",", "\n", "'gt_aligned'", ":", "gt_ate_aligned", ",", "\n", "'est_aligned'", ":", "est_ate_aligned", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.trajectory_distances": [[9, 18], ["distances.append", "range", "len", "distances.append", "numpy.linalg.norm"], "function", ["None"], ["def", "trajectory_distances", "(", "poses", ")", ":", "\n", "    ", "distances", "=", "[", "]", "\n", "distances", ".", "append", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "poses", ")", ")", ":", "\n", "        ", "p1", "=", "poses", "[", "i", "-", "1", "]", "\n", "p2", "=", "poses", "[", "i", "]", "\n", "delta", "=", "p1", "[", "0", ":", "3", ",", "3", "]", "-", "p2", "[", "0", ":", "3", ",", "3", "]", "\n", "distances", ".", "append", "(", "distances", "[", "i", "-", "1", "]", "+", "np", ".", "linalg", ".", "norm", "(", "delta", ")", ")", "\n", "", "return", "distances", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.last_frame_from_segment_length": [[19, 24], ["range", "len"], "function", ["None"], ["", "def", "last_frame_from_segment_length", "(", "dist", ",", "first_frame", ",", "length", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "first_frame", ",", "len", "(", "dist", ")", ")", ":", "\n", "        ", "if", "dist", "[", "i", "]", ">", "dist", "[", "first_frame", "]", "+", "length", ":", "\n", "            ", "return", "i", "\n", "", "", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.rotation_error": [[25, 32], ["numpy.arccos", "max", "min"], "function", ["None"], ["", "def", "rotation_error", "(", "pose_error", ")", ":", "\n", "    ", "a", "=", "pose_error", "[", "0", ",", "0", "]", "\n", "b", "=", "pose_error", "[", "1", ",", "1", "]", "\n", "c", "=", "pose_error", "[", "2", ",", "2", "]", "\n", "d", "=", "0.5", "*", "(", "a", "+", "b", "+", "c", "-", "1", ")", "\n", "rot_error", "=", "np", ".", "arccos", "(", "max", "(", "min", "(", "d", ",", "1.0", ")", ",", "-", "1.0", ")", ")", "\n", "return", "rot_error", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.translation_error": [[33, 38], ["numpy.sqrt"], "function", ["None"], ["", "def", "translation_error", "(", "pose_error", ")", ":", "\n", "    ", "dx", "=", "pose_error", "[", "0", ",", "3", "]", "\n", "dy", "=", "pose_error", "[", "1", ",", "3", "]", "\n", "dz", "=", "pose_error", "[", "2", ",", "3", "]", "\n", "return", "np", ".", "sqrt", "(", "dx", "*", "dx", "+", "dy", "*", "dy", "+", "dz", "*", "dz", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_sequence_error": [[45, 85], ["len", "evaluate_kitti.trajectory_distances", "range", "len", "range", "evaluate_kitti.last_frame_from_segment_length", "numpy.linalg.inv().dot", "numpy.linalg.inv().dot", "numpy.linalg.inv().dot", "evaluate_kitti.rotation_error", "evaluate_kitti.translation_error", "float", "errors.append", "numpy.linalg.inv", "numpy.linalg.inv", "numpy.linalg.inv"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.trajectory_distances", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.last_frame_from_segment_length", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.rotation_error", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.translation_error"], ["", "def", "calculate_sequence_error", "(", "poses_gt", ",", "poses_result", ",", "lengths", "=", "[", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", "]", ")", ":", "\n", "# error_vetor", "\n", "    ", "errors", "=", "[", "]", "\n", "\n", "# paramet", "\n", "step_size", "=", "1", "#10; # every second", "\n", "num_lengths", "=", "len", "(", "lengths", ")", "\n", "\n", "# import ipdb;ipdb.set_trace()", "\n", "# pre-compute distances (from ground truth as reference)", "\n", "dist", "=", "trajectory_distances", "(", "poses_gt", ")", "\n", "# for all start positions do", "\n", "for", "first_frame", "in", "range", "(", "0", ",", "len", "(", "poses_gt", ")", ",", "step_size", ")", ":", "\n", "# for all segment lengths do", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "num_lengths", ")", ":", "\n", "#  current length", "\n", "            ", "length", "=", "lengths", "[", "i", "]", ";", "\n", "\n", "# compute last frame", "\n", "last_frame", "=", "last_frame_from_segment_length", "(", "dist", ",", "first_frame", ",", "length", ")", ";", "\n", "# continue, if sequence not long enough", "\n", "if", "(", "last_frame", "==", "-", "1", ")", ":", "\n", "                ", "continue", ";", "\n", "\n", "# compute rotational and translational errors", "\n", "", "pose_delta_gt", "=", "np", ".", "linalg", ".", "inv", "(", "poses_gt", "[", "first_frame", "]", ")", ".", "dot", "(", "poses_gt", "[", "last_frame", "]", ")", "\n", "pose_delta_result", "=", "np", ".", "linalg", ".", "inv", "(", "poses_result", "[", "first_frame", "]", ")", ".", "dot", "(", "poses_result", "[", "last_frame", "]", ")", "\n", "pose_error", "=", "np", ".", "linalg", ".", "inv", "(", "pose_delta_result", ")", ".", "dot", "(", "pose_delta_gt", ")", "\n", "r_err", "=", "rotation_error", "(", "pose_error", ")", ";", "\n", "t_err", "=", "translation_error", "(", "pose_error", ")", ";", "\n", "\n", "# compute speed", "\n", "num_frames", "=", "(", "float", ")", "(", "last_frame", "-", "first_frame", "+", "1", ")", ";", "\n", "speed", "=", "length", "/", "(", "0.1", "*", "num_frames", ")", ";", "\n", "\n", "# write to file", "\n", "error", "=", "[", "first_frame", ",", "r_err", "/", "length", ",", "t_err", "/", "length", ",", "length", ",", "speed", "]", "\n", "errors", ".", "append", "(", "error", ")", "\n", "# return error vector", "\n", "", "", "return", "errors", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_ave_errors": [[86, 104], ["len", "rot_errors.append", "tra_errors.append", "abs", "rot_error_each_length.append", "tra_error_each_length.append", "numpy.array", "sum", "len", "sum", "len"], "function", ["None"], ["", "def", "calculate_ave_errors", "(", "errors", ",", "lengths", "=", "[", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", "]", ")", ":", "\n", "    ", "rot_errors", "=", "[", "]", "\n", "tra_errors", "=", "[", "]", "\n", "for", "length", "in", "lengths", ":", "\n", "        ", "rot_error_each_length", "=", "[", "]", "\n", "tra_error_each_length", "=", "[", "]", "\n", "for", "error", "in", "errors", ":", "\n", "            ", "if", "abs", "(", "error", "[", "3", "]", "-", "length", ")", "<", "0.1", ":", "\n", "                ", "rot_error_each_length", ".", "append", "(", "error", "[", "1", "]", ")", "\n", "tra_error_each_length", ".", "append", "(", "error", "[", "2", "]", ")", "\n", "\n", "", "", "if", "len", "(", "rot_error_each_length", ")", "==", "0", ":", "\n", "# import ipdb;ipdb.set_trace()", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "rot_errors", ".", "append", "(", "sum", "(", "rot_error_each_length", ")", "/", "len", "(", "rot_error_each_length", ")", ")", "\n", "tra_errors", ".", "append", "(", "sum", "(", "tra_error_each_length", ")", "/", "len", "(", "tra_error_each_length", ")", ")", "\n", "", "", "return", "np", ".", "array", "(", "rot_errors", ")", "*", "180", "/", "np", ".", "pi", ",", "tra_errors", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.evaluate": [[105, 113], ["evaluate_kitti.calculate_sequence_error", "evaluate_kitti.calculate_ave_errors", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_sequence_error", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_ave_errors"], ["", "def", "evaluate", "(", "gt", ",", "data", ",", "kittitype", "=", "True", ")", ":", "\n", "    ", "if", "kittitype", ":", "\n", "        ", "lens", "=", "[", "100", ",", "200", ",", "300", ",", "400", ",", "500", ",", "600", ",", "700", ",", "800", "]", "#", "\n", "", "else", ":", "\n", "        ", "lens", "=", "[", "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", "]", "#[1,2,3,4,5,6] # ", "\n", "", "errors", "=", "calculate_sequence_error", "(", "gt", ",", "data", ",", "lengths", "=", "lens", ")", "\n", "rot", ",", "tra", "=", "calculate_ave_errors", "(", "errors", ",", "lengths", "=", "lens", ")", "\n", "return", "np", ".", "mean", "(", "rot", ")", ",", "np", ".", "mean", "(", "tra", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.main": [[114, 122], ["numpy.loadtxt", "numpy.loadtxt", "evaluate_kitti.calculate_sequence_error", "evaluate_kitti.calculate_ave_errors", "print"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_sequence_error", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.evaluator.evaluate_kitti.calculate_ave_errors"], ["", "def", "main", "(", ")", ":", "\n", "# usage: python main.py path_to_ground_truth path_to_predict_pose", "\n", "# load and preprocess data", "\n", "    ", "ground_truth_data", "=", "np", ".", "loadtxt", "(", "sys", ".", "argv", "[", "1", "]", ")", "\n", "predict_pose__data", "=", "np", ".", "loadtxt", "(", "sys", ".", "argv", "[", "2", "]", ")", "\n", "errors", "=", "calculate_sequence_error", "(", "ground_truth_data", ",", "predict_pose__data", ")", "\n", "rot", ",", "tra", "=", "calculate_ave_errors", "(", "errors", ")", "\n", "print", "(", "rot", ",", "'\\n'", ",", "tra", ")", "\n", "#print(error)", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.line2mat": [[6, 10], ["numpy.eye", "line_data.reshape", "numpy.matrix"], "function", ["None"], ["from", "scipy", ".", "spatial", ".", "transform", "import", "Rotation", "as", "R", "\n", "\n", "def", "line2mat", "(", "line_data", ")", ":", "\n", "    ", "mat", "=", "np", ".", "eye", "(", "4", ")", "\n", "mat", "[", "0", ":", "3", ",", ":", "]", "=", "line_data", ".", "reshape", "(", "3", ",", "4", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.motion2pose": [[11, 23], ["numpy.zeros", "numpy.eye().reshape", "numpy.matrix", "range", "numpy.eye", "transformation.line2mat", "numpy.array().reshape", "numpy.eye", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.line2mat"], ["return", "np", ".", "matrix", "(", "mat", ")", "\n", "\n", "", "def", "motion2pose", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_pose", "=", "[", "]", "# np.zeros((data_size+1, 4, 4))", "\n", "all_pose", ".", "append", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "#[0,:] = np.eye(4,4)", "\n", "pose", "=", "np", ".", "eye", "(", "4", ",", "4", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "pose", "=", "pose", ".", "dot", "(", "data", "[", "i", "]", ")", "\n", "all_pose", ".", "append", "(", "pose", ")", "\n", "", "return", "all_pose", "\n", "\n", "", "def", "pose2motion", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.pose2motion": [[24, 34], ["numpy.zeros", "range", "transformation.line2mat", "transformation.line2mat", "numpy.array().reshape", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.line2mat", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.line2mat"], ["    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_motion", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", "-", "1", ")", ":", "\n", "        ", "motion", "=", "np", ".", "linalg", ".", "inv", "(", "data", "[", "i", "]", ")", ".", "dot", "(", "data", "[", "i", "+", "1", "]", ")", "\n", "all_motion", ".", "append", "(", "motion", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "all_motion", ")", "# N x 4 x 4", "\n", "\n", "", "def", "SE2se", "(", "SE_data", ")", ":", "\n", "    ", "result", "=", "np", ".", "zeros", "(", "(", "6", ")", ")", "\n", "result", "[", "0", ":", "3", "]", "=", "np", ".", "array", "(", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.SE2se": [[35, 40], ["numpy.zeros", "numpy.array", "transformation.SO2so"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2so"], ["result", "[", "3", ":", "6", "]", "=", "SO2so", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result", "\n", "\n", "", "def", "SO2so", "(", "SO_data", ")", ":", "\n", "    ", "return", "R", ".", "from_dcm", "(", "SO_data", ")", ".", "as_rotvec", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.SO2so": [[40, 42], ["scipy.spatial.transform.Rotation.from_dcm().as_rotvec", "scipy.spatial.transform.Rotation.from_dcm"], "function", ["None"], ["\n", "", "def", "so2SO", "(", "so_data", ")", ":", "\n", "    ", "return", "R", ".", "from_rotvec", "(", "so_data", ")", ".", "as_dcm", "(", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.so2SO": [[43, 45], ["scipy.spatial.transform.Rotation.from_rotvec().as_dcm", "scipy.spatial.transform.Rotation.from_rotvec"], "function", ["None"], ["\n", "", "def", "se2SE", "(", "se_data", ")", ":", "\n", "    ", "result_mat", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.se2SE": [[46, 51], ["numpy.matrix", "transformation.so2SO", "numpy.eye", "numpy.matrix"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2SO"], ["result_mat", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "so2SO", "(", "se_data", "[", "3", ":", "6", "]", ")", "\n", "result_mat", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "se_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result_mat", "\n", "### can get wrong result", "\n", "", "def", "se_mean", "(", "se_datas", ")", ":", "\n", "    ", "all_SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.se_mean": [[52, 61], ["numpy.matrix", "range", "transformation.SE2se", "numpy.eye", "transformation.se2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["for", "i", "in", "range", "(", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "se", "=", "se_datas", "[", "i", ",", ":", "]", "\n", "SE", "=", "se2SE", "(", "se", ")", "\n", "all_SE", "=", "all_SE", "*", "SE", "\n", "", "all_se", "=", "SE2se", "(", "all_SE", ")", "\n", "mean_se", "=", "all_se", "/", "se_datas", ".", "shape", "[", "0", "]", "\n", "return", "mean_se", "\n", "\n", "", "def", "ses_mean", "(", "se_datas", ")", ":", "\n", "    ", "se_datas", "=", "np", ".", "array", "(", "se_datas", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.ses_mean": [[62, 70], ["numpy.array", "numpy.transpose", "numpy.zeros", "range", "np.transpose.reshape", "transformation.se_mean"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se_mean"], ["se_datas", "=", "np", ".", "transpose", "(", "se_datas", ".", "reshape", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "1", "]", ",", "se_datas", ".", "shape", "[", "2", "]", "*", "se_datas", ".", "shape", "[", "3", "]", ")", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "se_result", "=", "np", ".", "zeros", "(", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "2", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "mean_se", "=", "se_mean", "(", "se_datas", "[", "i", ",", ":", ",", ":", "]", ")", "\n", "se_result", "[", "i", ",", ":", "]", "=", "mean_se", "\n", "", "return", "se_result", "\n", "\n", "", "def", "ses2poses", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "data", ".", "shape", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.ses2poses": [[71, 83], ["numpy.zeros", "numpy.eye().reshape", "numpy.matrix", "range", "numpy.eye", "transformation.se2SE", "numpy.array().reshape", "numpy.eye", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["all_pose", "=", "np", ".", "zeros", "(", "(", "data_size", "+", "1", ",", "12", ")", ")", "\n", "temp", "=", "np", ".", "eye", "(", "4", ",", "4", ")", ".", "reshape", "(", "1", ",", "16", ")", "\n", "all_pose", "[", "0", ",", ":", "]", "=", "temp", "[", "0", ",", "0", ":", "12", "]", "\n", "pose", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "data_mat", "=", "se2SE", "(", "data", "[", "i", ",", ":", "]", ")", "\n", "pose", "=", "pose", "*", "data_mat", "\n", "pose_line", "=", "np", ".", "array", "(", "pose", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "all_pose", "[", "i", "+", "1", ",", ":", "]", "=", "pose_line", "\n", "", "return", "all_pose", "\n", "\n", "", "def", "SEs2ses", "(", "motion_data", ")", ":", "\n", "    ", "data_size", "=", "motion_data", ".", "shape", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.ses2poses_quat": [[84, 99], ["numpy.zeros", "numpy.array", "numpy.matrix", "range", "numpy.eye", "transformation.se2SE", "transformation.SO2quat", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat"], ["ses", "=", "np", ".", "zeros", "(", "(", "data_size", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", ":", "]", "=", "motion_data", "[", "i", ",", ":", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "ses", "[", "i", ",", ":", "]", "=", "SE2se", "(", "SE", ")", "\n", "", "return", "ses", "\n", "\n", "", "def", "so2quat", "(", "so_data", ")", ":", "\n", "    ", "so_data", "=", "np", ".", "array", "(", "so_data", ")", "\n", "theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "so_data", "*", "so_data", ")", ")", "\n", "axis", "=", "so_data", "/", "theta", "\n", "quat", "=", "np", ".", "zeros", "(", "4", ")", "\n", "quat", "[", "0", ":", "3", "]", "=", "np", ".", "sin", "(", "theta", "/", "2", ")", "*", "axis", "\n", "quat", "[", "3", "]", "=", "np", ".", "cos", "(", "theta", "/", "2", ")", "\n", "return", "quat", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.SEs2ses": [[100, 108], ["numpy.zeros", "range", "numpy.matrix", "motion_data[].reshape", "transformation.SE2se", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se"], ["", "def", "quat2so", "(", "quat_data", ")", ":", "\n", "    ", "quat_data", "=", "np", ".", "array", "(", "quat_data", ")", "\n", "sin_half_theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "quat_data", "[", "0", ":", "3", "]", "*", "quat_data", "[", "0", ":", "3", "]", ")", ")", "\n", "axis", "=", "quat_data", "[", "0", ":", "3", "]", "/", "sin_half_theta", "\n", "cos_half_theta", "=", "quat_data", "[", "3", "]", "\n", "theta", "=", "2", "*", "np", ".", "arctan2", "(", "sin_half_theta", ",", "cos_half_theta", ")", "\n", "so", "=", "theta", "*", "axis", "\n", "return", "so", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.so2quat": [[109, 117], ["numpy.array", "numpy.sqrt", "numpy.zeros", "numpy.cos", "numpy.sum", "numpy.sin"], "function", ["None"], ["# input so_datas batch*channel*height*width", "\n", "# return quat_datas batch*numner*channel", "\n", "", "def", "sos2quats", "(", "so_datas", ",", "mean_std", "=", "[", "[", "1", "]", ",", "[", "1", "]", "]", ")", ":", "\n", "    ", "so_datas", "=", "np", ".", "array", "(", "so_datas", ")", "\n", "so_datas", "=", "so_datas", ".", "reshape", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "so_datas", ".", "shape", "[", "2", "]", "*", "so_datas", ".", "shape", "[", "3", "]", ")", "\n", "so_datas", "=", "np", ".", "transpose", "(", "so_datas", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "quat_datas", "=", "np", ".", "zeros", "(", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "4", ")", ")", "\n", "for", "i_b", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "i_p", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "1", "]", ")", ":", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.quat2so": [[118, 126], ["numpy.array", "numpy.sqrt", "numpy.sum", "numpy.arctan2"], "function", ["None"], ["            ", "so_data", "=", "so_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "\n", "quat_data", "=", "so2quat", "(", "so_data", ")", "\n", "quat_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "=", "quat_data", "\n", "", "", "return", "quat_datas", "\n", "\n", "", "def", "SO2quat", "(", "SO_data", ")", ":", "\n", "    ", "rr", "=", "R", ".", "from_dcm", "(", "SO_data", ")", "\n", "return", "rr", ".", "as_quat", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.sos2quats": [[129, 140], ["numpy.array", "np.transpose.reshape", "numpy.transpose", "numpy.zeros", "range", "range", "transformation.so2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2quat"], ["\n", "\n", "", "def", "pos_quat2SE", "(", "quat_data", ")", ":", "\n", "    ", "SO", "=", "R", ".", "from_quat", "(", "quat_data", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "np", ".", "matrix", "(", "SO", ")", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "quat_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "SE", "=", "np", ".", "array", "(", "SE", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "return", "SE", "\n", "\n", "\n", "", "def", "pos_quats2SEs", "(", "quat_datas", ")", ":", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.SO2quat": [[141, 144], ["scipy.spatial.transform.Rotation.from_dcm", "R.from_dcm.as_quat"], "function", ["None"], ["    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "np", ".", "zeros", "(", "(", "data_len", ",", "12", ")", ")", "\n", "for", "i_data", "in", "range", "(", "0", ",", "data_len", ")", ":", "\n", "        ", "SE", "=", "pos_quat2SE", "(", "quat_datas", "[", "i_data", ",", ":", "]", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.quat2SO": [[145, 147], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], ["SEs", "[", "i_data", ",", ":", "]", "=", "SE", "\n", "", "return", "SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.pos_quat2SE": [[149, 156], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.matrix", "numpy.matrix", "numpy.array().reshape", "numpy.eye", "numpy.matrix", "scipy.spatial.transform.Rotation.from_quat", "numpy.array"], "function", ["None"], ["", "def", "pos_quats2SE_matrices", "(", "quat_datas", ")", ":", "\n", "    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "[", "]", "\n", "for", "quat", "in", "quat_datas", ":", "\n", "        ", "SO", "=", "R", ".", "from_quat", "(", "quat", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "eye", "(", "4", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "SO", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "quat", "[", "0", ":", "3", "]", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.pos_quats2SEs": [[158, 165], ["numpy.zeros", "range", "transformation.pos_quat2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quat2SE"], ["", "return", "SEs", "\n", "\n", "", "def", "SE2pos_quat", "(", "SE_data", ")", ":", "\n", "    ", "pos_quat", "=", "np", ".", "zeros", "(", "7", ")", "\n", "pos_quat", "[", "3", ":", "]", "=", "SO2quat", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "pos_quat", "[", ":", "3", "]", "=", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", "\n", "return", "pos_quat", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.pos_quats2SE_matrices": [[167, 177], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.eye", "SEs.append", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], []], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.SE2pos_quat": [[178, 183], ["numpy.zeros", "transformation.SO2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat"], []], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.kitti2tartan": [[184, 203], ["numpy.array", "numpy.linalg.inv", "numpy.array", "numpy.eye", "pose.reshape", "np.array.dot().dot", "new_traj.append", "transformation.SE2pos_quat", "np.array.dot"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat"], []], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.transformation.tartan2kitti": [[204, 219], ["numpy.array", "numpy.linalg.inv", "numpy.array", "numpy.eye", "pos_quat2SE().reshape", "np.array.dot().dot", "new_traj.append", "ttt[].reshape", "transformation.pos_quat2SE", "np.array.dot"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quat2SE"], []], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.tartanTrajFlowDataset.TrajFolderDataset.__init__": [[11, 40], ["os.listdir", "tartanTrajFlowDataset.TrajFolderDataset.rgbfiles.sort", "print", "numpy.loadtxt().astype", "transformation.pos_quats2SEs", "transformation.pose2motion", "transformation.SEs2ses().astype", "len", "len", "ff.endswith", "ff.endswith", "numpy.loadtxt", "transformation.SEs2ses"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SEs", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pose2motion", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SEs2ses"], ["def", "__init__", "(", "self", ",", "imgfolder", ",", "posefile", "=", "None", ",", "transform", "=", "None", ",", "\n", "focalx", "=", "320.0", ",", "focaly", "=", "320.0", ",", "centerx", "=", "320.0", ",", "centery", "=", "240.0", ")", ":", "\n", "\n", "        ", "files", "=", "listdir", "(", "imgfolder", ")", "\n", "self", ".", "rgbfiles", "=", "[", "(", "imgfolder", "+", "'/'", "+", "ff", ")", "for", "ff", "in", "files", "if", "(", "ff", ".", "endswith", "(", "'.png'", ")", "or", "ff", ".", "endswith", "(", "'.jpg'", ")", ")", "]", "\n", "self", ".", "rgbfiles", ".", "sort", "(", ")", "\n", "self", ".", "imgfolder", "=", "imgfolder", "\n", "\n", "print", "(", "'Find {} image files in {}'", ".", "format", "(", "len", "(", "self", ".", "rgbfiles", ")", ",", "imgfolder", ")", ")", "\n", "\n", "if", "posefile", "is", "not", "None", "and", "posefile", "!=", "\"\"", ":", "\n", "            ", "poselist", "=", "np", ".", "loadtxt", "(", "posefile", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "assert", "(", "poselist", ".", "shape", "[", "1", "]", "==", "7", ")", "# position + quaternion", "\n", "poses", "=", "pos_quats2SEs", "(", "poselist", ")", "\n", "self", ".", "matrix", "=", "pose2motion", "(", "poses", ")", "\n", "self", ".", "motions", "=", "SEs2ses", "(", "self", ".", "matrix", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# self.motions = self.motions / self.pose_std", "\n", "# assert(len(self.motions) == len(self.rgbfiles)) - 1", "\n", "", "else", ":", "\n", "            ", "self", ".", "motions", "=", "None", "\n", "\n", "", "self", ".", "N", "=", "len", "(", "self", ".", "rgbfiles", ")", "-", "1", "\n", "\n", "# self.N = len(self.lines)", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "focalx", "=", "focalx", "\n", "self", ".", "focaly", "=", "focaly", "\n", "self", ".", "centerx", "=", "centerx", "\n", "self", ".", "centery", "=", "centery", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.tartanTrajFlowDataset.TrajFolderDataset.__len__": [[41, 43], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.tartanTrajFlowDataset.TrajFolderDataset.__getitem__": [[44, 64], ["tartanTrajFlowDataset.TrajFolderDataset.rgbfiles[].strip", "tartanTrajFlowDataset.TrajFolderDataset.rgbfiles[].strip", "cv2.imread", "cv2.imread", "utils.make_intrinsics_layer", "tartanTrajFlowDataset.TrajFolderDataset.transform"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.make_intrinsics_layer"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "imgfile1", "=", "self", ".", "rgbfiles", "[", "idx", "]", ".", "strip", "(", ")", "\n", "imgfile2", "=", "self", ".", "rgbfiles", "[", "idx", "+", "1", "]", ".", "strip", "(", ")", "\n", "img1", "=", "cv2", ".", "imread", "(", "imgfile1", ")", "\n", "img2", "=", "cv2", ".", "imread", "(", "imgfile2", ")", "\n", "\n", "res", "=", "{", "'img1'", ":", "img1", ",", "'img2'", ":", "img2", "}", "\n", "\n", "h", ",", "w", ",", "_", "=", "img1", ".", "shape", "\n", "intrinsicLayer", "=", "make_intrinsics_layer", "(", "w", ",", "h", ",", "self", ".", "focalx", ",", "self", ".", "focaly", ",", "self", ".", "centerx", ",", "self", ".", "centery", ")", "\n", "res", "[", "'intrinsic'", "]", "=", "intrinsicLayer", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "res", "=", "self", ".", "transform", "(", "res", ")", "\n", "\n", "", "if", "self", ".", "motions", "is", "None", ":", "\n", "            ", "return", "res", "\n", "", "else", ":", "\n", "            ", "res", "[", "'motion'", "]", "=", "self", ".", "motions", "[", "idx", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.Compose.__init__": [[32, 34], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.Compose.__call__": [[35, 39], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", "=", "t", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.DownscaleFlow.__init__": [[46, 51], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scale", "=", "4", ")", ":", "\n", "        ", "'''\n        size: output frame size, this should be NO LARGER than the input frame size! \n        '''", "\n", "self", ".", "downscale", "=", "1.0", "/", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.DownscaleFlow.__call__": [[52, 65], ["cv2.resize", "cv2.resize", "cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "if", "self", ".", "downscale", "!=", "1", "and", "'flow'", "in", "sample", ":", "\n", "            ", "sample", "[", "'flow'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'flow'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "", "if", "self", ".", "downscale", "!=", "1", "and", "'intrinsic'", "in", "sample", ":", "\n", "            ", "sample", "[", "'intrinsic'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'intrinsic'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "", "if", "self", ".", "downscale", "!=", "1", "and", "'fmask'", "in", "sample", ":", "\n", "            ", "sample", "[", "'fmask'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'fmask'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.CropCenter.__init__": [[71, 76], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.CropCenter.__call__": [[77, 112], ["list", "int", "int", "sample.keys", "max", "int", "int", "float", "float", "round", "round", "len", "cv2.resize", "len", "cv2.resize"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "kks", "=", "list", "(", "sample", ".", "keys", "(", ")", ")", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "h", ",", "w", "=", "sample", "[", "kks", "[", "0", "]", "]", ".", "shape", "[", "0", "]", ",", "sample", "[", "kks", "[", "0", "]", "]", ".", "shape", "[", "1", "]", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "            ", "return", "sample", "\n", "\n", "# resize the image if the image size is smaller than the target size", "\n", "", "scale_h", ",", "scale_w", ",", "scale", "=", "1.", ",", "1.", ",", "1.", "\n", "if", "th", ">", "h", ":", "\n", "            ", "scale_h", "=", "float", "(", "th", ")", "/", "h", "\n", "", "if", "tw", ">", "w", ":", "\n", "            ", "scale_w", "=", "float", "(", "tw", ")", "/", "w", "\n", "", "if", "scale_h", ">", "1", "or", "scale_w", ">", "1", ":", "\n", "            ", "scale", "=", "max", "(", "scale_h", ",", "scale_w", ")", "\n", "w", "=", "int", "(", "round", "(", "w", "*", "scale", ")", ")", "# w after resize", "\n", "h", "=", "int", "(", "round", "(", "h", "*", "scale", ")", ")", "# h after resize", "\n", "\n", "", "x1", "=", "int", "(", "(", "w", "-", "tw", ")", "/", "2", ")", "\n", "y1", "=", "int", "(", "(", "h", "-", "th", ")", "/", "2", ")", "\n", "\n", "for", "kk", "in", "kks", ":", "\n", "            ", "if", "sample", "[", "kk", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "img", "=", "sample", "[", "kk", "]", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "                ", "if", "scale", ">", "1", ":", "\n", "                    ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "sample", "[", "kk", "]", "=", "img", "[", "y1", ":", "y1", "+", "th", ",", "x1", ":", "x1", "+", "tw", ",", ":", "]", "\n", "", "elif", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "                ", "if", "scale", ">", "1", ":", "\n", "                    ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "sample", "[", "kk", "]", "=", "img", "[", "y1", ":", "y1", "+", "th", ",", "x1", ":", "x1", "+", "tw", "]", "\n", "\n", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.ToTensor.__call__": [[114, 133], ["time.time", "list", "data.reshape.reshape.astype", "torch.from_numpy", "len", "data.reshape.reshape.transpose", "data.reshape.reshape.copy", "len", "data.reshape.reshape.reshape", "len"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "sss", "=", "time", ".", "time", "(", ")", "\n", "\n", "kks", "=", "list", "(", "sample", ")", "\n", "\n", "for", "kk", "in", "kks", ":", "\n", "            ", "data", "=", "sample", "[", "kk", "]", "\n", "data", "=", "data", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "len", "(", "data", ".", "shape", ")", "==", "3", ":", "# transpose image-like data", "\n", "                ", "data", "=", "data", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "elif", "len", "(", "data", ".", "shape", ")", "==", "2", ":", "\n", "                ", "data", "=", "data", ".", "reshape", "(", "(", "1", ",", ")", "+", "data", ".", "shape", ")", "\n", "\n", "", "if", "len", "(", "data", ".", "shape", ")", "==", "3", "and", "data", ".", "shape", "[", "0", "]", "==", "3", ":", "# normalization of rgb images", "\n", "                ", "data", "=", "data", "/", "255.0", "\n", "\n", "", "sample", "[", "kk", "]", "=", "torch", ".", "from_numpy", "(", "data", ".", "copy", "(", ")", ")", "# copy to make memory continuous", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.tensor2img": [[135, 146], ["tensImg.numpy().transpose().astype.numpy().transpose().astype", "float", "tensImg.numpy().transpose().astype.numpy().transpose", "tensImg.numpy().transpose().astype.numpy"], "function", ["None"], ["", "", "def", "tensor2img", "(", "tensImg", ",", "mean", "=", "0", ",", "std", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    convert a tensor a numpy array, for visualization\n    \"\"\"", "\n", "# undo normalize", "\n", "# for t, m, s in zip(tensImg, mean, std):", "\n", "#     t.mul_(s).add_(m) ", "\n", "tensImg", "=", "tensImg", "*", "float", "(", "255", ")", "\n", "# undo transpose", "\n", "tensImg", "=", "(", "tensImg", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "tensImg", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.bilinear_interpolate": [[147, 172], ["int", "int", "max", "max", "min", "min", "math.floor", "math.floor"], "function", ["None"], ["", "def", "bilinear_interpolate", "(", "img", ",", "h", ",", "w", ")", ":", "\n", "# assert round(h)>=0 and round(h)<img.shape[0]", "\n", "# assert round(w)>=0 and round(w)<img.shape[1]", "\n", "\n", "    ", "h0", "=", "int", "(", "math", ".", "floor", "(", "h", ")", ")", "\n", "h1", "=", "h0", "+", "1", "\n", "w0", "=", "int", "(", "math", ".", "floor", "(", "w", ")", ")", "\n", "w1", "=", "w0", "+", "1", "\n", "\n", "a", "=", "h", "-", "h0", "\n", "b", "=", "w", "-", "w0", "\n", "\n", "h0", "=", "max", "(", "h0", ",", "0", ")", "\n", "w0", "=", "max", "(", "w0", ",", "0", ")", "\n", "h1", "=", "min", "(", "h1", ",", "img", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "w1", "=", "min", "(", "w1", ",", "img", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "A", "=", "img", "[", "h0", ",", "w0", ",", ":", "]", "\n", "B", "=", "img", "[", "h1", ",", "w0", ",", ":", "]", "\n", "C", "=", "img", "[", "h0", ",", "w1", ",", ":", "]", "\n", "D", "=", "img", "[", "h1", ",", "w1", ",", ":", "]", "\n", "\n", "res", "=", "(", "1", "-", "a", ")", "*", "(", "1", "-", "b", ")", "*", "A", "+", "a", "*", "(", "1", "-", "b", ")", "*", "B", "+", "(", "1", "-", "a", ")", "*", "b", "*", "C", "+", "a", "*", "b", "*", "D", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.calculate_angle_distance_from_du_dv": [[173, 186], ["numpy.arctan2", "numpy.sqrt"], "function", ["None"], ["", "def", "calculate_angle_distance_from_du_dv", "(", "du", ",", "dv", ",", "flagDegree", "=", "False", ")", ":", "\n", "    ", "a", "=", "np", ".", "arctan2", "(", "dv", ",", "du", ")", "\n", "\n", "angleShift", "=", "np", ".", "pi", "\n", "\n", "if", "(", "True", "==", "flagDegree", ")", ":", "\n", "        ", "a", "=", "a", "/", "np", ".", "pi", "*", "180", "\n", "angleShift", "=", "180", "\n", "# print(\"Convert angle from radian to degree as demanded by the input file.\")", "\n", "\n", "", "d", "=", "np", ".", "sqrt", "(", "du", "*", "du", "+", "dv", "*", "dv", ")", "\n", "\n", "return", "a", ",", "d", ",", "angleShift", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.visflow": [[187, 216], ["utils.calculate_angle_distance_from_du_dv", "numpy.zeros", "numpy.remainder", "hsv.astype.astype", "cv2.cvtColor", "numpy.clip", "numpy.clip", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.calculate_angle_distance_from_du_dv"], ["", "def", "visflow", "(", "flownp", ",", "maxF", "=", "500.0", ",", "n", "=", "8", ",", "mask", "=", "None", ",", "hueMax", "=", "179", ",", "angShift", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"\n    Show a optical flow field as the KITTI dataset does.\n    Some parts of this function is the transform of the original MATLAB code flow_to_color.m.\n    \"\"\"", "\n", "\n", "ang", ",", "mag", ",", "_", "=", "calculate_angle_distance_from_du_dv", "(", "flownp", "[", ":", ",", ":", ",", "0", "]", ",", "flownp", "[", ":", ",", ":", ",", "1", "]", ",", "flagDegree", "=", "False", ")", "\n", "\n", "# Use Hue, Saturation, Value colour model ", "\n", "hsv", "=", "np", ".", "zeros", "(", "(", "ang", ".", "shape", "[", "0", "]", ",", "ang", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "am", "=", "ang", "<", "0", "\n", "ang", "[", "am", "]", "=", "ang", "[", "am", "]", "+", "np", ".", "pi", "*", "2", "\n", "\n", "hsv", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "remainder", "(", "(", "ang", "+", "angShift", ")", "/", "(", "2", "*", "np", ".", "pi", ")", ",", "1", ")", "\n", "hsv", "[", ":", ",", ":", ",", "1", "]", "=", "mag", "/", "maxF", "*", "n", "\n", "hsv", "[", ":", ",", ":", ",", "2", "]", "=", "(", "n", "-", "hsv", "[", ":", ",", ":", ",", "1", "]", ")", "/", "n", "\n", "\n", "hsv", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "clip", "(", "hsv", "[", ":", ",", ":", ",", "0", "]", ",", "0", ",", "1", ")", "*", "hueMax", "\n", "hsv", "[", ":", ",", ":", ",", "1", ":", "3", "]", "=", "np", ".", "clip", "(", "hsv", "[", ":", ",", ":", ",", "1", ":", "3", "]", ",", "0", ",", "1", ")", "*", "255", "\n", "hsv", "=", "hsv", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "bgr", "=", "cv2", ".", "cvtColor", "(", "hsv", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "\n", "if", "(", "mask", "is", "not", "None", ")", ":", "\n", "        ", "mask", "=", "mask", "!=", "255", "\n", "bgr", "[", "mask", "]", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "", "return", "bgr", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.dataset_intrinsics": [[218, 230], ["None"], "function", ["None"], ["", "def", "dataset_intrinsics", "(", "dataset", "=", "'tartanair'", ")", ":", "\n", "    ", "if", "dataset", "==", "'kitti'", ":", "\n", "        ", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "=", "707.0912", ",", "707.0912", ",", "601.8873", ",", "183.1104", "\n", "", "elif", "dataset", "==", "'euroc'", ":", "\n", "        ", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "=", "458.6539916992", ",", "457.2959899902", ",", "367.2149963379", ",", "248.3750000000", "\n", "", "elif", "dataset", "==", "'tartanair'", ":", "\n", "        ", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "=", "320.0", ",", "320.0", ",", "320.0", ",", "240.0", "\n", "", "elif", "dataset", "==", "'fr3'", ":", "\n", "        ", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "=", "535.4", ",", "539.2", ",", "320.1", ",", "247.6", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "", "return", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.plot_traj": [[232, 248], ["matplotlib.figure", "matplotlib.cm.get_cmap", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.title", "matplotlib.close", "matplotlib.savefig", "matplotlib.show"], "function", ["None"], ["", "def", "plot_traj", "(", "gtposes", ",", "estposes", ",", "vis", "=", "False", ",", "savefigname", "=", "None", ",", "title", "=", "''", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "4", ",", "4", ")", ")", "\n", "cm", "=", "plt", ".", "cm", ".", "get_cmap", "(", "'Spectral'", ")", "\n", "\n", "plt", ".", "subplot", "(", "111", ")", "\n", "plt", ".", "plot", "(", "gtposes", "[", ":", ",", "0", "]", ",", "gtposes", "[", ":", ",", "1", "]", ",", "linestyle", "=", "'dashed'", ",", "c", "=", "'k'", ")", "\n", "plt", ".", "plot", "(", "estposes", "[", ":", ",", "0", "]", ",", "estposes", "[", ":", ",", "1", "]", ",", "c", "=", "'#ff7f0e'", ")", "\n", "plt", ".", "xlabel", "(", "'x (m)'", ")", "\n", "plt", ".", "ylabel", "(", "'y (m)'", ")", "\n", "plt", ".", "legend", "(", "[", "'Ground Truth'", ",", "'TartanVO'", "]", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "if", "savefigname", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "savefigname", ")", "\n", "", "if", "vis", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.make_intrinsics_layer": [[249, 256], ["numpy.meshgrid", "numpy.stack().transpose", "range", "range", "numpy.stack", "ww.astype", "hh.astype"], "function", ["None"], ["", "def", "make_intrinsics_layer", "(", "w", ",", "h", ",", "fx", ",", "fy", ",", "ox", ",", "oy", ")", ":", "\n", "    ", "ww", ",", "hh", "=", "np", ".", "meshgrid", "(", "range", "(", "w", ")", ",", "range", "(", "h", ")", ")", "\n", "ww", "=", "(", "ww", ".", "astype", "(", "np", ".", "float32", ")", "-", "ox", "+", "0.5", ")", "/", "fx", "\n", "hh", "=", "(", "hh", ".", "astype", "(", "np", ".", "float32", ")", "-", "oy", "+", "0.5", ")", "/", "fy", "\n", "intrinsicLayer", "=", "np", ".", "stack", "(", "(", "ww", ",", "hh", ")", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "return", "intrinsicLayer", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.Datasets.utils.load_kiiti_intrinsics": [[257, 267], ["open", "f.readlines", "lines[].strip().split", "float", "float", "float", "float", "lines[].strip"], "function", ["None"], ["", "def", "load_kiiti_intrinsics", "(", "filename", ")", ":", "\n", "    ", "'''\n    load intrinsics from kitti intrinsics file\n    '''", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "cam_intrinsics", "=", "lines", "[", "2", "]", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "1", ":", "]", "\n", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "=", "float", "(", "cam_intrinsics", "[", "0", "]", ")", ",", "float", "(", "cam_intrinsics", "[", "5", "]", ")", ",", "float", "(", "cam_intrinsics", "[", "2", "]", ")", ",", "float", "(", "cam_intrinsics", "[", "6", "]", ")", "\n", "\n", "return", "focalx", ",", "focaly", ",", "centerx", ",", "centery", "\n", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation1.upscale_flow": [[26, 34], ["len", "range", "glob.glob1", "numpy.load", "cv2.resize", "utils.visflow", "cv2.imwrite", "str().zfill", "str().zfill", "str", "str"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.visflow"], ["def", "upscale_flow", "(", "flow_dir", ",", "save_dir", ")", ":", "\n", "    ", "num_flow", "=", "len", "(", "glob", ".", "glob1", "(", "flow_dir", ",", "\"*.npy\"", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_flow", ")", ":", "\n", "        ", "flow", "=", "np", ".", "load", "(", "flow_dir", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".npy\"", ")", "\n", "flow_upscaled", "=", "cv2", ".", "resize", "(", "flow", ",", "(", "640", ",", "448", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "flow_vis", "=", "visflow", "(", "flow_upscaled", ")", "\n", "cv2", ".", "imwrite", "(", "save_dir", "+", "\"flow/\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".png\"", ",", "flow_vis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation1.get_camera_poses": [[36, 48], ["transformation.pos_quats2SE_matrices", "range", "res.append", "len", "numpy.linalg.pinv"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices"], ["", "", "def", "get_camera_poses", "(", "poses_in_world", ")", ":", "\n", "\n", "    ", "SEs", "=", "tf", ".", "pos_quats2SE_matrices", "(", "poses_in_world", ")", "\n", "res", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "SEs", ")", "-", "1", ")", ":", "\n", "        ", "T0", ",", "T1", "=", "SEs", "[", "i", "]", ",", "SEs", "[", "i", "+", "1", "]", "\n", "# T2 = np.eye(4)", "\n", "# T2[:3, :3] = T1[:3, :3] @ T0[:3, :3].T", "\n", "# T2[:3, -1] = T1[:3, -1] - T2[:3, :3] @ T0[:3, -1]", "\n", "T", "=", "T1", "@", "np", ".", "linalg", ".", "pinv", "(", "T0", ")", "\n", "res", ".", "append", "(", "T", ")", "# T is the same as T1 @ inv(T0)", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation1.warp": [[50, 66], ["numpy.meshgrid", "numpy.stack", "points.reshape.reshape", "numpy.hstack", "numpy.stack", "numpy.arange", "numpy.arange", "numpy.ones", "numpy.zeros", "numpy.linalg.pinv"], "function", ["None"], ["", "def", "warp", "(", "depth_map0", ",", "K", ",", "T", ")", ":", "\n", "    ", "h", ",", "w", "=", "depth_map0", ".", "shape", "\n", "_us", ",", "_vs", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "w", ")", "-", "w", "/", "2", ",", "np", ".", "arange", "(", "h", ")", "-", "h", "/", "2", ")", "\n", "points", "=", "np", ".", "stack", "(", "(", "_us", ",", "_vs", ",", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ")", ")", ",", "axis", "=", "2", ")", "\n", "points", "=", "points", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "\n", "K", "=", "np", ".", "hstack", "(", "(", "K", ",", "np", ".", "zeros", "(", "(", "3", ",", "1", ")", ")", ")", ")", "\n", "points_warped", "=", "K", "@", "T", "@", "np", ".", "linalg", ".", "pinv", "(", "K", ")", "@", "(", "points", ".", "T", ")", "# 3 x (h*w)", "\n", "# points_warped =  T @ (points.T)  # 3 x (h*w)", "\n", "# points_warped = K @ (T[:3, :3].T @ (np.linalg.inv(K) @ points.T) -  T[:3, -1].reshape(-1, 1)) # 3 x (h*w)", "\n", "\n", "us", "=", "(", "points_warped", "[", "0", ",", ":", "]", "/", "points_warped", "[", "2", ",", ":", "]", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "vs", "=", "(", "points_warped", "[", "1", ",", ":", "]", "/", "points_warped", "[", "2", ",", ":", "]", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "\n", "ego_flow", "=", "np", ".", "stack", "(", "(", "us", "-", "_us", ",", "vs", "-", "_vs", ")", ",", "axis", "=", "2", ")", "# h X w X 2", "\n", "return", "ego_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation1.warp_usedepth": [[67, 95], ["numpy.meshgrid", "point_fusion.transforms.unproject().reshape", "numpy.hstack", "point_fusion.transforms.project", "numpy.round().astype", "numpy.round().astype", "numpy.arange().astype", "us.reshape.reshape", "vs.reshape.reshape", "filter_mask.reshape.reshape", "numpy.stack", "numpy.arange", "numpy.arange", "numpy.linalg.inv", "_us.reshape", "_vs.reshape", "point_fusion.transforms.unproject", "numpy.ones", "numpy.round", "numpy.round", "numpy.arange", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.unproject"], ["", "def", "warp_usedepth", "(", "depth_map0", ",", "depth_map1", ",", "K", ",", "T0", ",", "T1", ")", ":", "\n", "    ", "h", ",", "w", "=", "depth_map0", ".", "shape", "\n", "_us", ",", "_vs", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "w", ")", ",", "np", ".", "arange", "(", "h", ")", ")", "\n", "\n", "pc0", "=", "unproject", "(", "depth_map0", ",", "K", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "pc0", "=", "np", ".", "hstack", "(", "(", "pc0", ",", "np", ".", "ones", "(", "(", "h", "*", "w", ",", "1", ")", ")", ")", ")", "\n", "T", "=", "T0", "@", "np", ".", "linalg", ".", "inv", "(", "T1", ")", "\n", "# T =np.eye(4)", "\n", "pc1", "=", "(", "T", "@", "pc0", ".", "T", ")", ".", "T", "\n", "us", ",", "vs", ",", "ds", "=", "project", "(", "pc1", ",", "K", ")", "\n", "\n", "us", "=", "np", ".", "round", "(", "us", ")", ".", "astype", "(", "int", ")", "\n", "vs", "=", "np", ".", "round", "(", "vs", ")", ".", "astype", "(", "int", ")", "\n", "filter_mask", "=", "(", "us", ">=", "0", ")", "&", "(", "us", "<", "w", ")", "&", "(", "vs", ">=", "0", ")", "&", "(", "vs", "<", "h", ")", "&", "(", "ds", ">=", "0", ")", "\n", "\n", "indices", "=", "np", ".", "arange", "(", "len", "(", "pc0", ")", ")", ".", "astype", "(", "int", ")", "\n", "indices", "=", "indices", "[", "filter_mask", "]", "\n", "us", "[", "~", "filter_mask", "]", "=", "_us", ".", "reshape", "(", "h", "*", "w", ")", "[", "~", "filter_mask", "]", "\n", "vs", "[", "~", "filter_mask", "]", "=", "_vs", ".", "reshape", "(", "h", "*", "w", ")", "[", "~", "filter_mask", "]", "\n", "# us = us[filter_mask]", "\n", "# vs = vs[filter_mask]", "\n", "\n", "us", "=", "(", "us", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "vs", "=", "(", "vs", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "filter_mask", "=", "filter_mask", ".", "reshape", "(", "h", ",", "w", ")", "\n", "\n", "ego_flow", "=", "np", ".", "stack", "(", "(", "us", "-", "_us", ",", "vs", "-", "_vs", ")", ",", "axis", "=", "2", ")", "# h X w X 2    return ego_flow", "\n", "return", "ego_flow", ",", "filter_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation1.np_depth2flow": [[96, 147], ["numpy.repeat", "numpy.repeat", "numpy.eye", "numpy.eye", "numpy.ones", "numpy.dstack().transpose", "numpy.tensordot", "numpy.split", "numpy.stack", "numpy.array().reshape", "numpy.array().reshape", "numpy.linalg.inv", "numpy.dstack", "numpy.array", "numpy.array", "range", "range"], "function", ["None"], ["", "def", "np_depth2flow", "(", "depth", ",", "K_ini", ",", "T0", ",", "T1", ")", ":", "\n", "    ", "\"\"\" Numpy implementation.\n    Estimate the ego-motion flow given two frames depths and transformation matrices. \n    The output is an ego-motion flow in 2D (2*H*W).\n    :param the depth map of the reference frame\n    :param the camera intrinsics\n    :param the camera coordinate of the reference frame\n    :param the camera coordinate of the target frame\n    \"\"\"", "\n", "h", ",", "w", "=", "depth", ".", "shape", "\n", "u_mat", "=", "np", ".", "repeat", "(", "np", ".", "array", "(", "range", "(", "0", ",", "w", ")", ")", ".", "reshape", "(", "1", ",", "w", ")", ",", "h", ",", "axis", "=", "0", ")", "\n", "v_mat", "=", "np", ".", "repeat", "(", "np", ".", "array", "(", "range", "(", "0", ",", "h", ")", ")", ".", "reshape", "(", "h", ",", "1", ")", ",", "w", ",", "axis", "=", "1", ")", "\n", "\n", "K", "=", "np", ".", "eye", "(", "4", ")", "\n", "K", "[", "0", ",", "0", "]", ",", "K", "[", "1", ",", "1", "]", ",", "K", "[", "0", ",", "2", "]", ",", "K", "[", "1", ",", "2", "]", "=", "K_ini", "[", "0", ",", "0", "]", ",", "K_ini", "[", "1", ",", "1", "]", ",", "K_ini", "[", "0", ",", "2", "]", ",", "K_ini", "[", "1", ",", "2", "]", "\n", "# inv_k = [ 1/f_x,  0, -c_x/f_x, 0;", "\n", "#           0,  1/f_y, -c_y/f_y, 0;", "\n", "#           0,      0,  1,       0;", "\n", "#           0,      0,  0,       1]", "\n", "inv_K", "=", "np", ".", "eye", "(", "4", ")", "\n", "inv_K", "[", "0", ",", "0", "]", ",", "inv_K", "[", "1", ",", "1", "]", "=", "1.0", "/", "K", "[", "0", ",", "0", "]", ",", "1.0", "/", "K", "[", "1", ",", "1", "]", "\n", "inv_K", "[", "0", ",", "2", "]", ",", "inv_K", "[", "1", ",", "2", "]", "=", "-", "K", "[", "0", ",", "2", "]", "/", "K", "[", "0", ",", "0", "]", ",", "-", "K", "[", "1", ",", "2", "]", "/", "K", "[", "1", ",", "1", "]", "\n", "\n", "# the point cloud move w.r.t. the inverse of camera transform", "\n", "T", "=", "K", "@", "T1", "@", "np", ".", "linalg", ".", "inv", "(", "T0", ")", "@", "inv_K", "\n", "\n", "# blender's coordinate is different from sintel", "\n", "ones", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ")", "\n", "z", "=", "depth", "\n", "x", "=", "depth", "*", "u_mat", "\n", "y", "=", "depth", "*", "v_mat", "\n", "p4d", "=", "np", ".", "dstack", "(", "(", "x", ",", "y", ",", "z", ",", "ones", ")", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "p4d_t", "=", "np", ".", "tensordot", "(", "T", ",", "p4d", ",", "axes", "=", "1", ")", "\n", "\n", "x_t", ",", "y_t", ",", "z_t", ",", "w_t", "=", "np", ".", "split", "(", "p4d_t", ",", "4", ")", "\n", "# homogenous to cartsian", "\n", "x_t", ",", "y_t", ",", "z_t", "=", "x_t", "[", "0", "]", "/", "w_t", "[", "0", "]", ",", "y_t", "[", "0", "]", "/", "w_t", "[", "0", "]", ",", "z_t", "[", "0", "]", "/", "w_t", "[", "0", "]", "\n", "\n", "u_t_mat", "=", "x_t", "/", "z_t", "\n", "v_t_mat", "=", "y_t", "/", "z_t", "\n", "\n", "# this is the final ego-motion flow", "\n", "d_u", "=", "u_t_mat", "-", "u_mat", "\n", "d_v", "=", "v_t_mat", "-", "v_mat", "\n", "\n", "# d_u[d_u>w] =0", "\n", "# d_u[d_u<-w] =0", "\n", "# d_v[d_v>h] =0", "\n", "# d_v[d_v<-h] =0", "\n", "ego_flow", "=", "np", ".", "stack", "(", "(", "d_u", ",", "d_v", ")", ",", "axis", "=", "2", ")", "\n", "return", "ego_flow", ",", "u_t_mat", ",", "v_t_mat", ",", "z_t", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.upscale_flow": [[22, 30], ["len", "range", "glob.glob1", "numpy.load", "cv2.resize", "utils.visflow", "cv2.imwrite", "str().zfill", "str().zfill", "str", "str"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.visflow"], ["def", "upscale_flow", "(", "flow_dir", ",", "save_dir", ")", ":", "\n", "    ", "num_flow", "=", "len", "(", "glob", ".", "glob1", "(", "flow_dir", ",", "\"*.npy\"", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_flow", ")", ":", "\n", "        ", "flow", "=", "np", ".", "load", "(", "flow_dir", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".npy\"", ")", "\n", "flow_upscaled", "=", "cv2", ".", "resize", "(", "flow", ",", "(", "640", ",", "448", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "flow_vis", "=", "visflow", "(", "flow_upscaled", ")", "\n", "cv2", ".", "imwrite", "(", "save_dir", "+", "\"flow/\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".png\"", ",", "flow_vis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.get_camera_poses": [[32, 43], ["transformation.pos_quats2SE_matrices", "range", "res.append", "len", "numpy.linalg.inv"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices"], ["", "", "def", "get_camera_poses", "(", "poses_in_world", ")", ":", "\n", "    ", "SEs", "=", "tf", ".", "pos_quats2SE_matrices", "(", "poses_in_world", ")", "\n", "res", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "SEs", ")", "-", "1", ")", ":", "\n", "        ", "T0", ",", "T1", "=", "SEs", "[", "i", "]", ",", "SEs", "[", "i", "+", "1", "]", "\n", "# T = np.eye(4)", "\n", "# T[:3, :3] = T1[:3, :3] @ T0[:3, :3].T", "\n", "# T[:3, -1] = T1[:3, -1] - T[:3, :3] @ T0[:3, -1]", "\n", "T", "=", "T1", "@", "np", ".", "linalg", ".", "inv", "(", "T0", ")", "\n", "res", ".", "append", "(", "T", ")", "# T is the same as T1 @ inv(T0)", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.segmentation2.warp": [[45, 56], ["numpy.meshgrid", "numpy.stack", "points.reshape.reshape", "numpy.stack", "numpy.arange", "numpy.arange", "numpy.ones", "T[].reshape", "numpy.linalg.inv"], "function", ["None"], ["", "def", "warp", "(", "depth_map", ",", "K", ",", "T", ")", ":", "\n", "    ", "h", ",", "w", "=", "depth_map", ".", "shape", "\n", "_us", ",", "_vs", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "w", ")", ",", "np", ".", "arange", "(", "h", ")", ")", "\n", "points", "=", "np", ".", "stack", "(", "(", "_us", ",", "_vs", ",", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ")", ")", ",", "axis", "=", "2", ")", "\n", "points", "=", "points", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "points_warped", "=", "K", "@", "(", "T", "[", ":", "3", ",", ":", "3", "]", "@", "(", "np", ".", "linalg", ".", "inv", "(", "K", ")", "@", "points", ".", "T", ")", "+", "T", "[", ":", "3", ",", "-", "1", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "# 3 x (h*w)", "\n", "us", "=", "(", "points_warped", "[", "0", ",", ":", "]", "/", "points_warped", "[", "2", ",", ":", "]", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "vs", "=", "(", "points_warped", "[", "1", ",", ":", "]", "/", "points_warped", "[", "2", ",", ":", "]", ")", ".", "reshape", "(", "h", ",", "w", ")", "\n", "\n", "ego_flow", "=", "np", ".", "stack", "(", "(", "vs", "-", "_vs", ",", "us", "-", "_us", ")", ",", "axis", "=", "2", ")", "# h X w X 2", "\n", "return", "ego_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.line2mat": [[8, 12], ["numpy.eye", "line_data.reshape", "numpy.matrix"], "function", ["None"], ["def", "line2mat", "(", "line_data", ")", ":", "\n", "    ", "mat", "=", "np", ".", "eye", "(", "4", ")", "\n", "mat", "[", "0", ":", "3", ",", ":", "]", "=", "line_data", ".", "reshape", "(", "3", ",", "4", ")", "\n", "return", "np", ".", "matrix", "(", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.motion2pose": [[13, 22], ["len", "all_pose.append", "numpy.eye", "range", "numpy.eye", "pose.dot.dot", "all_pose.append"], "function", ["None"], ["", "def", "motion2pose", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_pose", "=", "[", "]", "# np.zeros((data_size+1, 4, 4))", "\n", "all_pose", ".", "append", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "#[0,:] = np.eye(4,4)", "\n", "pose", "=", "np", ".", "eye", "(", "4", ",", "4", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "pose", "=", "pose", ".", "dot", "(", "data", "[", "i", "]", ")", "\n", "all_pose", ".", "append", "(", "pose", ")", "\n", "", "return", "all_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pose2motion": [[23, 31], ["len", "range", "numpy.array", "numpy.linalg.inv().dot", "all_motion.append", "numpy.linalg.inv"], "function", ["None"], ["", "def", "pose2motion", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "len", "(", "data", ")", "\n", "all_motion", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", "-", "1", ")", ":", "\n", "        ", "motion", "=", "np", ".", "linalg", ".", "inv", "(", "data", "[", "i", "]", ")", ".", "dot", "(", "data", "[", "i", "+", "1", "]", ")", "\n", "all_motion", ".", "append", "(", "motion", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "all_motion", ")", "# N x 4 x 4", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se": [[32, 37], ["numpy.zeros", "numpy.array", "transformation.SO2so"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2so"], ["", "def", "SE2se", "(", "SE_data", ")", ":", "\n", "    ", "result", "=", "np", ".", "zeros", "(", "(", "6", ")", ")", "\n", "result", "[", "0", ":", "3", "]", "=", "np", ".", "array", "(", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", ")", "\n", "result", "[", "3", ":", "6", "]", "=", "SO2so", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2so": [[38, 40], ["scipy.spatial.transform.Rotation.from_dcm().as_rotvec", "scipy.spatial.transform.Rotation.from_dcm"], "function", ["None"], ["", "def", "SO2so", "(", "SO_data", ")", ":", "\n", "    ", "return", "R", ".", "from_dcm", "(", "SO_data", ")", ".", "as_rotvec", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2SO": [[41, 43], ["scipy.spatial.transform.Rotation.from_rotvec().as_dcm", "scipy.spatial.transform.Rotation.from_rotvec"], "function", ["None"], ["", "def", "so2SO", "(", "so_data", ")", ":", "\n", "    ", "return", "R", ".", "from_rotvec", "(", "so_data", ")", ".", "as_dcm", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE": [[44, 49], ["numpy.matrix", "transformation.so2SO", "numpy.eye", "numpy.matrix"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2SO"], ["", "def", "se2SE", "(", "se_data", ")", ":", "\n", "    ", "result_mat", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "result_mat", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "so2SO", "(", "se_data", "[", "3", ":", "6", "]", ")", "\n", "result_mat", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "se_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "return", "result_mat", "\n", "### can get wrong result", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se_mean": [[50, 59], ["numpy.matrix", "range", "transformation.SE2se", "numpy.eye", "transformation.se2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["", "def", "se_mean", "(", "se_datas", ")", ":", "\n", "    ", "all_SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "for", "i", "in", "range", "(", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "se", "=", "se_datas", "[", "i", ",", ":", "]", "\n", "SE", "=", "se2SE", "(", "se", ")", "\n", "all_SE", "=", "all_SE", "*", "SE", "\n", "", "all_se", "=", "SE2se", "(", "all_SE", ")", "\n", "mean_se", "=", "all_se", "/", "se_datas", ".", "shape", "[", "0", "]", "\n", "return", "mean_se", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.ses_mean": [[60, 68], ["numpy.array", "numpy.transpose", "numpy.zeros", "range", "np.transpose.reshape", "transformation.se_mean"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se_mean"], ["", "def", "ses_mean", "(", "se_datas", ")", ":", "\n", "    ", "se_datas", "=", "np", ".", "array", "(", "se_datas", ")", "\n", "se_datas", "=", "np", ".", "transpose", "(", "se_datas", ".", "reshape", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "1", "]", ",", "se_datas", ".", "shape", "[", "2", "]", "*", "se_datas", ".", "shape", "[", "3", "]", ")", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "se_result", "=", "np", ".", "zeros", "(", "(", "se_datas", ".", "shape", "[", "0", "]", ",", "se_datas", ".", "shape", "[", "2", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "se_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "mean_se", "=", "se_mean", "(", "se_datas", "[", "i", ",", ":", ",", ":", "]", ")", "\n", "se_result", "[", "i", ",", ":", "]", "=", "mean_se", "\n", "", "return", "se_result", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.ses2poses": [[69, 81], ["numpy.zeros", "numpy.eye().reshape", "numpy.matrix", "range", "numpy.eye", "transformation.se2SE", "numpy.array().reshape", "numpy.eye", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.se2SE"], ["", "def", "ses2poses", "(", "data", ")", ":", "\n", "    ", "data_size", "=", "data", ".", "shape", "[", "0", "]", "\n", "all_pose", "=", "np", ".", "zeros", "(", "(", "data_size", "+", "1", ",", "12", ")", ")", "\n", "temp", "=", "np", ".", "eye", "(", "4", ",", "4", ")", ".", "reshape", "(", "1", ",", "16", ")", "\n", "all_pose", "[", "0", ",", ":", "]", "=", "temp", "[", "0", ",", "0", ":", "12", "]", "\n", "pose", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ",", "4", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "data_mat", "=", "se2SE", "(", "data", "[", "i", ",", ":", "]", ")", "\n", "pose", "=", "pose", "*", "data_mat", "\n", "pose_line", "=", "np", ".", "array", "(", "pose", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "all_pose", "[", "i", "+", "1", ",", ":", "]", "=", "pose_line", "\n", "", "return", "all_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SEs2ses": [[82, 90], ["numpy.zeros", "range", "numpy.matrix", "motion_data[].reshape", "transformation.SE2se", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2se"], ["", "def", "SEs2ses", "(", "motion_data", ")", ":", "\n", "    ", "data_size", "=", "motion_data", ".", "shape", "[", "0", "]", "\n", "ses", "=", "np", ".", "zeros", "(", "(", "data_size", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data_size", ")", ":", "\n", "        ", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", ":", "]", "=", "motion_data", "[", "i", ",", ":", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "ses", "[", "i", ",", ":", "]", "=", "SE2se", "(", "SE", ")", "\n", "", "return", "ses", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2quat": [[91, 99], ["numpy.array", "numpy.sqrt", "numpy.zeros", "numpy.cos", "numpy.sum", "numpy.sin"], "function", ["None"], ["", "def", "so2quat", "(", "so_data", ")", ":", "\n", "    ", "so_data", "=", "np", ".", "array", "(", "so_data", ")", "\n", "theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "so_data", "*", "so_data", ")", ")", "\n", "axis", "=", "so_data", "/", "theta", "\n", "quat", "=", "np", ".", "zeros", "(", "4", ")", "\n", "quat", "[", "0", ":", "3", "]", "=", "np", ".", "sin", "(", "theta", "/", "2", ")", "*", "axis", "\n", "quat", "[", "3", "]", "=", "np", ".", "cos", "(", "theta", "/", "2", ")", "\n", "return", "quat", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.quat2so": [[100, 108], ["numpy.array", "numpy.sqrt", "numpy.sum", "numpy.arctan2"], "function", ["None"], ["", "def", "quat2so", "(", "quat_data", ")", ":", "\n", "    ", "quat_data", "=", "np", ".", "array", "(", "quat_data", ")", "\n", "sin_half_theta", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "quat_data", "[", "0", ":", "3", "]", "*", "quat_data", "[", "0", ":", "3", "]", ")", ")", "\n", "axis", "=", "quat_data", "[", "0", ":", "3", "]", "/", "sin_half_theta", "\n", "cos_half_theta", "=", "quat_data", "[", "3", "]", "\n", "theta", "=", "2", "*", "np", ".", "arctan2", "(", "sin_half_theta", ",", "cos_half_theta", ")", "\n", "so", "=", "theta", "*", "axis", "\n", "return", "so", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.sos2quats": [[111, 122], ["numpy.array", "np.transpose.reshape", "numpy.transpose", "numpy.zeros", "range", "range", "transformation.so2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.so2quat"], ["", "def", "sos2quats", "(", "so_datas", ",", "mean_std", "=", "[", "[", "1", "]", ",", "[", "1", "]", "]", ")", ":", "\n", "    ", "so_datas", "=", "np", ".", "array", "(", "so_datas", ")", "\n", "so_datas", "=", "so_datas", ".", "reshape", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "so_datas", ".", "shape", "[", "2", "]", "*", "so_datas", ".", "shape", "[", "3", "]", ")", "\n", "so_datas", "=", "np", ".", "transpose", "(", "so_datas", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "quat_datas", "=", "np", ".", "zeros", "(", "(", "so_datas", ".", "shape", "[", "0", "]", ",", "so_datas", ".", "shape", "[", "1", "]", ",", "4", ")", ")", "\n", "for", "i_b", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "i_p", "in", "range", "(", "0", ",", "so_datas", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "so_data", "=", "so_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "\n", "quat_data", "=", "so2quat", "(", "so_data", ")", "\n", "quat_datas", "[", "i_b", ",", "i_p", ",", ":", "]", "=", "quat_data", "\n", "", "", "return", "quat_datas", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat": [[123, 126], ["scipy.spatial.transform.Rotation.from_dcm", "R.from_dcm.as_quat"], "function", ["None"], ["", "def", "SO2quat", "(", "SO_data", ")", ":", "\n", "    ", "rr", "=", "R", ".", "from_dcm", "(", "SO_data", ")", "\n", "return", "rr", ".", "as_quat", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.quat2SO": [[127, 129], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], ["", "def", "quat2SO", "(", "quat_data", ")", ":", "\n", "    ", "return", "R", ".", "from_quat", "(", "quat_data", ")", ".", "as_dcm", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quat2SE": [[131, 138], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.matrix", "numpy.matrix", "numpy.array().reshape", "numpy.eye", "numpy.matrix", "scipy.spatial.transform.Rotation.from_quat", "numpy.array"], "function", ["None"], ["", "def", "pos_quat2SE", "(", "quat_data", ")", ":", "\n", "    ", "SO", "=", "R", ".", "from_quat", "(", "quat_data", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "matrix", "(", "np", ".", "eye", "(", "4", ")", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "np", ".", "matrix", "(", "SO", ")", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "matrix", "(", "quat_data", "[", "0", ":", "3", "]", ")", ".", "T", "\n", "SE", "=", "np", ".", "array", "(", "SE", "[", "0", ":", "3", ",", ":", "]", ")", ".", "reshape", "(", "1", ",", "12", ")", "\n", "return", "SE", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SEs": [[140, 147], ["numpy.zeros", "range", "transformation.pos_quat2SE"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quat2SE"], ["", "def", "pos_quats2SEs", "(", "quat_datas", ")", ":", "\n", "    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "np", ".", "zeros", "(", "(", "data_len", ",", "12", ")", ")", "\n", "for", "i_data", "in", "range", "(", "0", ",", "data_len", ")", ":", "\n", "        ", "SE", "=", "pos_quat2SE", "(", "quat_datas", "[", "i_data", ",", ":", "]", ")", "\n", "SEs", "[", "i_data", ",", ":", "]", "=", "SE", "\n", "", "return", "SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.pos_quats2SE_matrices": [[149, 159], ["scipy.spatial.transform.Rotation.from_quat().as_dcm", "numpy.eye", "SEs.append", "scipy.spatial.transform.Rotation.from_quat"], "function", ["None"], ["", "def", "pos_quats2SE_matrices", "(", "quat_datas", ")", ":", "\n", "    ", "data_len", "=", "quat_datas", ".", "shape", "[", "0", "]", "\n", "SEs", "=", "[", "]", "\n", "for", "quat", "in", "quat_datas", ":", "\n", "        ", "SO", "=", "R", ".", "from_quat", "(", "quat", "[", "3", ":", "7", "]", ")", ".", "as_dcm", "(", ")", "\n", "SE", "=", "np", ".", "eye", "(", "4", ")", "\n", "SE", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "SO", "\n", "SE", "[", "0", ":", "3", ",", "3", "]", "=", "quat", "[", "0", ":", "3", "]", "\n", "SEs", ".", "append", "(", "SE", ")", "\n", "", "return", "SEs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SE2pos_quat": [[160, 165], ["numpy.zeros", "transformation.SO2quat"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.transformation.SO2quat"], ["", "def", "SE2pos_quat", "(", "SE_data", ")", ":", "\n", "    ", "pos_quat", "=", "np", ".", "zeros", "(", "7", ")", "\n", "pos_quat", "[", "3", ":", "]", "=", "SO2quat", "(", "SE_data", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "pos_quat", "[", ":", "3", "]", "=", "SE_data", "[", "0", ":", "3", ",", "3", "]", ".", "T", "\n", "return", "pos_quat", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.skew": [[12, 16], ["numpy.array"], "function", ["None"], ["def", "skew", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "[", "0", ",", "-", "x", "[", "2", "]", ",", "x", "[", "1", "]", "]", ",", "\n", "[", "x", "[", "2", "]", ",", "0", ",", "-", "x", "[", "0", "]", "]", ",", "\n", "[", "-", "x", "[", "1", "]", ",", "x", "[", "0", "]", ",", "0", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.visualize_keypoints": [[18, 43], ["cv2.cvtColor", "range", "range", "cv2.destroyAllWindows", "len", "cv2.imshow", "cv2.circle", "cv2.line", "cv2.waitKey", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "visualize_keypoints", "(", "image", ",", "pts", ",", "Threshold", "=", "None", ")", ":", "\n", "    ", "'''\n    plot 2d keypoint\n    :param image: image\n    :param car_points: np.array points * 3\n    '''", "\n", "import", "cv2", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "i", "in", "range", "(", "12", ")", ":", "\n", "        ", "cx", ",", "cy", "=", "pts", "[", "i", "]", "[", "0", ":", "2", "]", "\n", "if", "pts", "[", "i", "]", "[", "2", "]", ">", "Threshold", ":", "\n", "            ", "cv2", ".", "circle", "(", "image", ",", "(", "int", "(", "cx", ")", ",", "int", "(", "cy", ")", ")", ",", "5", ",", "(", "0", ",", "255", ",", "255", ")", ",", "5", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "connections_3d", ")", ")", ":", "\n", "        ", "idx0", ",", "idx1", "=", "connections_3d", "[", "i", "]", "\n", "if", "pts", "[", "idx0", "]", "[", "2", "]", ">", "Threshold", "and", "pts", "[", "idx1", "]", "[", "2", "]", ">", "Threshold", ":", "\n", "            ", "x0", ",", "y0", "=", "pts", "[", "idx0", "]", "[", "0", ":", "2", "]", "\n", "x1", ",", "y1", "=", "pts", "[", "idx1", "]", "[", "0", ":", "2", "]", "\n", "cv2", ".", "line", "(", "image", ",", "(", "int", "(", "x0", ")", ",", "int", "(", "y0", ")", ")", ",", "(", "int", "(", "x1", ")", ",", "int", "(", "y1", ")", ")", ",", "color_links", "[", "i", "]", ",", "2", ")", "\n", "", "", "while", "True", ":", "\n", "        ", "cv2", ".", "imshow", "(", "\"sample\"", ",", "image", ")", "\n", "if", "cv2", ".", "waitKey", "(", "0", ")", "==", "27", ":", "\n", "            ", "break", "\n", "", "", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "return", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.plot_3d_keypoint": [[44, 63], ["matplotlib.figure", "plt.figure.add_subplot", "range", "numpy.set_printoptions", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "fig.add_subplot.set_zlabel", "matplotlib.show", "len", "fig.add_subplot.plot"], "function", ["None"], ["", "def", "plot_3d_keypoint", "(", "pts_3d", ")", ":", "\n", "    ", "'''\n    plot 3d keypoint\n    :param car_points: np.array points * 3\n    '''", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "num_points", "=", "pts_3d", ".", "shape", "[", "0", "]", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "'3d'", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "connections_3d", ")", ")", ":", "\n", "        ", "index0", ",", "index1", "=", "connections_3d", "[", "j", "]", "\n", "xline", "=", "[", "pts_3d", "[", "index0", ",", "0", "]", ",", "pts_3d", "[", "index1", ",", "0", "]", "]", "\n", "yline", "=", "[", "pts_3d", "[", "index0", ",", "1", "]", ",", "pts_3d", "[", "index1", ",", "1", "]", "]", "\n", "zline", "=", "[", "pts_3d", "[", "index0", ",", "2", "]", ",", "pts_3d", "[", "index1", ",", "2", "]", "]", "\n", "ax", ".", "plot", "(", "xline", ",", "yline", ",", "zline", ",", "color", "=", "colors", "[", "j", "]", ")", "\n", "", "np", ".", "set_printoptions", "(", "threshold", "=", "1e6", ",", "suppress", "=", "True", ")", "\n", "ax", ".", "set_xlabel", "(", "'X Label'", ")", "\n", "ax", ".", "set_ylabel", "(", "'Y Label'", ")", "\n", "ax", ".", "set_zlabel", "(", "'Z Label'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper._epipoles": [[65, 71], ["numpy.linalg.svd", "numpy.linalg.svd"], "function", ["None"], ["", "def", "_epipoles", "(", "E", ")", ":", "\n", "    ", "U", ",", "S", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "E", ")", "\n", "e1", "=", "V", "[", "-", "1", ",", ":", "]", "\n", "U", ",", "S", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "E", ".", "T", ")", "\n", "e2", "=", "V", "[", "-", "1", ",", ":", "]", "\n", "return", "e1", ",", "e2", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.displayEpipolarF": [[72, 115], ["helper._epipoles", "matplotlib.subplots", "ax1.imshow", "ax1.set_title", "ax1.set_axis_off", "ax2.imshow", "ax2.set_title", "ax2.set_axis_off", "matplotlib.sca", "numpy.array", "F.dot", "numpy.sqrt", "ax1.plot", "ax2.plot", "matplotlib.draw", "matplotlib.ginput", "print"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper._epipoles"], ["", "def", "displayEpipolarF", "(", "I1", ",", "I2", ",", "F", ")", ":", "\n", "    ", "e1", ",", "e2", "=", "_epipoles", "(", "F", ")", "\n", "\n", "sy", ",", "sx", ",", "_", "=", "I2", ".", "shape", "\n", "\n", "f", ",", "[", "ax1", ",", "ax2", "]", "=", "plt", ".", "subplots", "(", "1", ",", "2", ",", "figsize", "=", "(", "12", ",", "9", ")", ")", "\n", "ax1", ".", "imshow", "(", "I1", ")", "\n", "ax1", ".", "set_title", "(", "'Select a point in this image'", ")", "\n", "ax1", ".", "set_axis_off", "(", ")", "\n", "ax2", ".", "imshow", "(", "I2", ")", "\n", "ax2", ".", "set_title", "(", "'Verify that the corresponding point \\n is on the epipolar line in this image'", ")", "\n", "ax2", ".", "set_axis_off", "(", ")", "\n", "\n", "while", "True", ":", "\n", "        ", "plt", ".", "sca", "(", "ax1", ")", "\n", "x", ",", "y", "=", "plt", ".", "ginput", "(", "1", ",", "timeout", "=", "3600", ",", "mouse_stop", "=", "2", ")", "[", "0", "]", "\n", "\n", "xc", "=", "x", "\n", "yc", "=", "y", "\n", "v", "=", "np", ".", "array", "(", "[", "xc", ",", "yc", ",", "1", "]", ")", "\n", "l", "=", "F", ".", "dot", "(", "v", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "l", "[", "0", "]", "**", "2", "+", "l", "[", "1", "]", "**", "2", ")", "\n", "\n", "if", "s", "==", "0", ":", "\n", "            ", "print", "(", "'Zero line vector in displayEpipolar'", ")", "\n", "\n", "", "l", "=", "l", "/", "s", "\n", "\n", "if", "l", "[", "0", "]", "!=", "0", ":", "\n", "            ", "ye", "=", "sy", "-", "1", "\n", "ys", "=", "0", "\n", "xe", "=", "-", "(", "l", "[", "1", "]", "*", "ye", "+", "l", "[", "2", "]", ")", "/", "l", "[", "0", "]", "\n", "xs", "=", "-", "(", "l", "[", "1", "]", "*", "ys", "+", "l", "[", "2", "]", ")", "/", "l", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "xe", "=", "sx", "-", "1", "\n", "xs", "=", "0", "\n", "ye", "=", "-", "(", "l", "[", "0", "]", "*", "xe", "+", "l", "[", "2", "]", ")", "/", "l", "[", "1", "]", "\n", "ys", "=", "-", "(", "l", "[", "0", "]", "*", "xs", "+", "l", "[", "2", "]", ")", "/", "l", "[", "1", "]", "\n", "\n", "# plt.plot(x,y, '*', 'MarkerSize', 6, 'LineWidth', 2);", "\n", "", "ax1", ".", "plot", "(", "x", ",", "y", ",", "'*'", ",", "MarkerSize", "=", "6", ",", "linewidth", "=", "1", ")", "\n", "ax2", ".", "plot", "(", "[", "xs", ",", "xe", "]", ",", "[", "ys", ",", "ye", "]", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.camera2": [[117, 133], ["numpy.linalg.svd", "S[].mean", "U.dot().dot", "numpy.linalg.svd", "numpy.array", "numpy.zeros", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.linalg.det", "U.dot", "U.dot().dot", "U.dot().dot", "U.dot().dot", "U.dot().dot", "U.dot().dot", "numpy.array", "U[].reshape", "abs().max", "abs().max", "U[].reshape", "abs().max", "abs().max", "U.dot", "U.dot", "U.dot", "U[].reshape", "U.dot", "U.dot", "U[].reshape", "abs", "abs", "abs", "abs"], "function", ["None"], ["", "", "def", "camera2", "(", "E", ")", ":", "\n", "    ", "U", ",", "S", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "E", ")", "\n", "m", "=", "S", "[", ":", "2", "]", ".", "mean", "(", ")", "\n", "E", "=", "U", ".", "dot", "(", "np", ".", "array", "(", "[", "[", "m", ",", "0", ",", "0", "]", ",", "[", "0", ",", "m", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ")", ")", ".", "dot", "(", "V", ")", "\n", "U", ",", "S", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "E", ")", "\n", "W", "=", "np", ".", "array", "(", "[", "[", "0", ",", "-", "1", ",", "0", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n", "if", "np", ".", "linalg", ".", "det", "(", "U", ".", "dot", "(", "W", ")", ".", "dot", "(", "V", ")", ")", "<", "0", ":", "\n", "        ", "W", "=", "-", "W", "\n", "\n", "", "M2s", "=", "np", ".", "zeros", "(", "[", "3", ",", "4", ",", "4", "]", ")", "\n", "M2s", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "concatenate", "(", "[", "U", ".", "dot", "(", "W", ")", ".", "dot", "(", "V", ")", ",", "U", "[", ":", ",", "2", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "/", "abs", "(", "U", "[", ":", ",", "2", "]", ")", ".", "max", "(", ")", "]", ",", "axis", "=", "1", ")", "\n", "M2s", "[", ":", ",", ":", ",", "1", "]", "=", "np", ".", "concatenate", "(", "[", "U", ".", "dot", "(", "W", ")", ".", "dot", "(", "V", ")", ",", "-", "U", "[", ":", ",", "2", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "/", "abs", "(", "U", "[", ":", ",", "2", "]", ")", ".", "max", "(", ")", "]", ",", "axis", "=", "1", ")", "\n", "M2s", "[", ":", ",", ":", ",", "2", "]", "=", "np", ".", "concatenate", "(", "[", "U", ".", "dot", "(", "W", ".", "T", ")", ".", "dot", "(", "V", ")", ",", "U", "[", ":", ",", "2", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "/", "abs", "(", "U", "[", ":", ",", "2", "]", ")", ".", "max", "(", ")", "]", ",", "axis", "=", "1", ")", "\n", "M2s", "[", ":", ",", ":", ",", "3", "]", "=", "np", ".", "concatenate", "(", "[", "U", ".", "dot", "(", "W", ".", "T", ")", ".", "dot", "(", "V", ")", ",", "-", "U", "[", ":", ",", "2", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "/", "abs", "(", "U", "[", ":", ",", "2", "]", ")", ".", "max", "(", ")", "]", ",", "axis", "=", "1", ")", "\n", "return", "M2s", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.epipolarMatchGUI": [[134, 190], ["helper._epipoles", "matplotlib.subplots", "ax1.imshow", "ax1.set_title", "ax1.set_axis_off", "ax2.imshow", "ax2.set_title", "ax2.set_axis_off", "matplotlib.close", "matplotlib.sca", "matplotlib.ginput", "pts1.append", "int", "int", "numpy.array", "F.dot", "numpy.sqrt", "ax1.plot", "ax2.plot", "helper.epipolarCorrespondence", "pts2.append", "ax2.plot", "matplotlib.draw", "len", "print"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper._epipoles", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.epipolarCorrespondence"], ["", "def", "epipolarMatchGUI", "(", "I1", ",", "I2", ",", "F", ")", ":", "\n", "    ", "e1", ",", "e2", "=", "_epipoles", "(", "F", ")", "\n", "\n", "sy", ",", "sx", ",", "_", "=", "I2", ".", "shape", "\n", "\n", "f", ",", "[", "ax1", ",", "ax2", "]", "=", "plt", ".", "subplots", "(", "1", ",", "2", ",", "figsize", "=", "(", "12", ",", "9", ")", ")", "\n", "ax1", ".", "imshow", "(", "I1", ")", "\n", "ax1", ".", "set_title", "(", "'Select a point in this image'", ")", "\n", "ax1", ".", "set_axis_off", "(", ")", "\n", "ax2", ".", "imshow", "(", "I2", ")", "\n", "ax2", ".", "set_title", "(", "'Verify that the corresponding point \\n is on the epipolar line in this image'", ")", "\n", "ax2", ".", "set_axis_off", "(", ")", "\n", "\n", "pts1", "=", "[", "]", "\n", "pts2", "=", "[", "]", "\n", "while", "True", ":", "\n", "        ", "plt", ".", "sca", "(", "ax1", ")", "\n", "input", "=", "plt", ".", "ginput", "(", "1", ",", "mouse_stop", "=", "2", ",", "timeout", "=", "10", ")", "\n", "if", "len", "(", "input", ")", "<", "1", ":", "\n", "            ", "break", "\n", "", "x", ",", "y", "=", "input", "[", "0", "]", "\n", "pts1", ".", "append", "(", "[", "x", ",", "y", "]", ")", "\n", "\n", "xc", "=", "int", "(", "x", ")", "\n", "yc", "=", "int", "(", "y", ")", "\n", "v", "=", "np", ".", "array", "(", "[", "xc", ",", "yc", ",", "1", "]", ")", "\n", "l", "=", "F", ".", "dot", "(", "v", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "l", "[", "0", "]", "**", "2", "+", "l", "[", "1", "]", "**", "2", ")", "\n", "\n", "if", "s", "==", "0", ":", "\n", "            ", "print", "(", "'Zero line vector in displayEpipolar'", ")", "\n", "\n", "", "l", "=", "l", "/", "s", ";", "\n", "\n", "if", "l", "[", "0", "]", "!=", "0", ":", "\n", "            ", "ye", "=", "sy", "-", "1", "\n", "ys", "=", "0", "\n", "xe", "=", "-", "(", "l", "[", "1", "]", "*", "ye", "+", "l", "[", "2", "]", ")", "/", "l", "[", "0", "]", "\n", "xs", "=", "-", "(", "l", "[", "1", "]", "*", "ys", "+", "l", "[", "2", "]", ")", "/", "l", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "xe", "=", "sx", "-", "1", "\n", "xs", "=", "0", "\n", "ye", "=", "-", "(", "l", "[", "0", "]", "*", "xe", "+", "l", "[", "2", "]", ")", "/", "l", "[", "1", "]", "\n", "ys", "=", "-", "(", "l", "[", "0", "]", "*", "xs", "+", "l", "[", "2", "]", ")", "/", "l", "[", "1", "]", "\n", "\n", "# plt.plot(x,y, '*', 'MarkerSize', 6, 'LineWidth', 2);", "\n", "", "ax1", ".", "plot", "(", "x", ",", "y", ",", "'*'", ",", "MarkerSize", "=", "6", ",", "linewidth", "=", "2", ")", "\n", "ax2", ".", "plot", "(", "[", "xs", ",", "xe", "]", ",", "[", "ys", ",", "ye", "]", ",", "linewidth", "=", "2", ")", "\n", "\n", "# draw points", "\n", "x2", ",", "y2", "=", "epipolarCorrespondence", "(", "I1", ",", "I2", ",", "F", ",", "xc", ",", "yc", ")", "\n", "pts2", ".", "append", "(", "[", "x2", ",", "y2", "]", ")", "\n", "ax2", ".", "plot", "(", "x2", ",", "y2", ",", "'ro'", ",", "MarkerSize", "=", "3", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "draw", "(", ")", "\n", "\n", "", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.helper.epipolarCorrespondence": [[192, 227], ["helper.epipolarCorrespondence.gkern"], "function", ["None"], ["", "def", "epipolarCorrespondence", "(", "im1", ",", "im2", ",", "F", ",", "x1", ",", "y1", ")", ":", "\n", "    ", "def", "gkern", "(", "l", "=", "5", ",", "sig", "=", "1.", ")", ":", "\n", "# creates a lxl gaussian kernel with sigma 'sig'", "\n", "        ", "ax", "=", "np", ".", "linspace", "(", "-", "(", "l", "-", "1", ")", "/", "2.", ",", "(", "l", "-", "1", ")", "/", "2.", ",", "l", ")", "\n", "gauss", "=", "np", ".", "exp", "(", "-", "0.5", "*", "np", ".", "square", "(", "ax", ")", "/", "np", ".", "square", "(", "sig", ")", ")", "\n", "kernel", "=", "np", ".", "outer", "(", "gauss", ",", "gauss", ")", "\n", "kernel", "=", "kernel", "/", "np", ".", "sum", "(", "kernel", ")", "\n", "return", "np", ".", "array", "(", "[", "kernel", "]", "*", "3", ")", "\n", "\n", "", "W", "=", "10", "# half of the window size", "\n", "k", "=", "gkern", "(", "2", "*", "W", ")", "# gaussian weighting of the window", "\n", "height", ",", "width", "=", "im1", ".", "shape", "[", "0", "]", ",", "im1", ".", "shape", "[", "1", "]", "\n", "\n", "l2", "=", "F", "@", "np", ".", "array", "(", "[", "x1", ",", "y1", ",", "1", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "# epipolar line on im2", "\n", "num", "=", "30", "# Look at 30 pixels per above/below y1, the row entry", "\n", "y2s", "=", "np", ".", "arange", "(", "y1", "-", "num", ",", "y1", "+", "num", ")", "\n", "x2s", "=", "(", "-", "l2", "[", "1", "]", "*", "y2s", "-", "l2", "[", "2", "]", ")", "/", "l2", "[", "0", "]", "# Corresponding x coord on epipolar line", "\n", "\n", "inBound", "=", "lambda", "y", ",", "x", ":", "True", "if", "0", "<=", "y", "<", "height", "and", "0", "<=", "x", "<", "width", "else", "False", "\n", "w1", "=", "im1", "[", "y1", "-", "W", ":", "y1", "+", "W", ",", "x1", "-", "W", ":", "x1", "+", "W", "]", "#* k", "\n", "\n", "# Search", "\n", "minDist", "=", "float", "(", "'inf'", ")", "\n", "x2", ",", "y2", "=", "-", "1", ",", "-", "1", "\n", "for", "x", ",", "y", "in", "zip", "(", "x2s", ",", "y2s", ")", ":", "\n", "        ", "x", ",", "y", "=", "round", "(", "x", ")", ",", "round", "(", "y", ")", "\n", "if", "not", "inBound", "(", "y", "-", "W", ",", "x", "-", "W", ")", "or", "not", "inBound", "(", "y", "+", "W", ",", "x", "+", "W", ")", ":", "\n", "            ", "continue", "\n", "", "w2", "=", "im2", "[", "y", "-", "W", ":", "y", "+", "W", ",", "x", "-", "W", ":", "x", "+", "W", "]", "#* k", "\n", "dist", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "w1", "-", "w2", ")", "**", "2", ")", ")", "\n", "if", "dist", "<", "minDist", ":", "\n", "            ", "x2", ",", "y2", "=", "x", ",", "y", "\n", "minDist", "=", "dist", "\n", "\n", "", "", "return", "x2", ",", "y2", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.bilinear_interpolate": [[19, 44], ["int", "int", "max", "max", "min", "min", "math.floor", "math.floor"], "function", ["None"], ["class", "Compose", "(", "object", ")", ":", "\n", "    ", "\"\"\"Composes several transforms together.\n\n    Args:\n        transforms (List[Transform]): list of transforms to compose.\n\n    Example:\n        >>> transforms.Compose([\n        >>>     transforms.CenterCrop(10),\n        >>>     transforms.ToTensor(),\n        >>> ])\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n", "", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", "=", "t", "(", "img", ")", "\n", "", "return", "img", "\n", "\n", "\n", "", "", "class", "DownscaleFlow", "(", "object", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.calculate_angle_distance_from_du_dv": [[46, 59], ["numpy.arctan2", "numpy.sqrt"], "function", ["None"], ["def", "__init__", "(", "self", ",", "scale", "=", "4", ")", ":", "\n", "        ", "'''\n        size: output frame size, this should be NO LARGER than the input frame size! \n        '''", "\n", "self", ".", "downscale", "=", "1.0", "/", "scale", "\n", "\n", "", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "if", "self", ".", "downscale", "!=", "1", "and", "'flow'", "in", "sample", ":", "\n", "            ", "sample", "[", "'flow'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'flow'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "", "if", "self", ".", "downscale", "!=", "1", "and", "'intrinsic'", "in", "sample", ":", "\n", "            ", "sample", "[", "'intrinsic'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'intrinsic'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.visflow": [[61, 90], ["utils.calculate_angle_distance_from_du_dv", "numpy.zeros", "numpy.remainder", "hsv.astype.astype", "cv2.cvtColor", "numpy.clip", "numpy.clip", "numpy.array"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.calculate_angle_distance_from_du_dv"], ["", "if", "self", ".", "downscale", "!=", "1", "and", "'fmask'", "in", "sample", ":", "\n", "            ", "sample", "[", "'fmask'", "]", "=", "cv2", ".", "resize", "(", "sample", "[", "'fmask'", "]", ",", "\n", "(", "0", ",", "0", ")", ",", "fx", "=", "self", ".", "downscale", ",", "fy", "=", "self", ".", "downscale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "return", "sample", "\n", "\n", "", "", "class", "CropCenter", "(", "object", ")", ":", "\n", "    ", "\"\"\"Crops the a sample of data (tuple) at center\n    if the image size is not large enough, it will be first resized with fixed ratio\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "kks", "=", "list", "(", "sample", ".", "keys", "(", ")", ")", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "h", ",", "w", "=", "sample", "[", "kks", "[", "0", "]", "]", ".", "shape", "[", "0", "]", ",", "sample", "[", "kks", "[", "0", "]", "]", ".", "shape", "[", "1", "]", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "            ", "return", "sample", "\n", "\n", "# resize the image if the image size is smaller than the target size", "\n", "", "scale_h", ",", "scale_w", ",", "scale", "=", "1.", ",", "1.", ",", "1.", "\n", "if", "th", ">", "h", ":", "\n", "            ", "scale_h", "=", "float", "(", "th", ")", "/", "h", "\n", "", "if", "tw", ">", "w", ":", "\n", "            ", "scale_w", "=", "float", "(", "tw", ")", "/", "w", "\n", "", "if", "scale_h", ">", "1", "or", "scale_w", ">", "1", ":", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.dataset_intrinsics": [[92, 104], ["None"], "function", ["None"], ["w", "=", "int", "(", "round", "(", "w", "*", "scale", ")", ")", "# w after resize", "\n", "h", "=", "int", "(", "round", "(", "h", "*", "scale", ")", ")", "# h after resize", "\n", "\n", "", "x1", "=", "int", "(", "(", "w", "-", "tw", ")", "/", "2", ")", "\n", "y1", "=", "int", "(", "(", "h", "-", "th", ")", "/", "2", ")", "\n", "\n", "for", "kk", "in", "kks", ":", "\n", "            ", "if", "sample", "[", "kk", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "img", "=", "sample", "[", "kk", "]", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "                ", "if", "scale", ">", "1", ":", "\n", "                    ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.plot_traj": [[106, 122], ["matplotlib.figure", "matplotlib.cm.get_cmap", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.title", "matplotlib.close", "matplotlib.savefig", "matplotlib.show"], "function", ["None"], ["", "elif", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "                ", "if", "scale", ">", "1", ":", "\n", "                    ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "sample", "[", "kk", "]", "=", "img", "[", "y1", ":", "y1", "+", "th", ",", "x1", ":", "x1", "+", "tw", "]", "\n", "\n", "", "", "return", "sample", "\n", "\n", "", "", "class", "ToTensor", "(", "object", ")", ":", "\n", "    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "sss", "=", "time", ".", "time", "(", ")", "\n", "\n", "kks", "=", "list", "(", "sample", ")", "\n", "\n", "for", "kk", "in", "kks", ":", "\n", "            ", "data", "=", "sample", "[", "kk", "]", "\n", "data", "=", "data", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "len", "(", "data", ".", "shape", ")", "==", "3", ":", "# transpose image-like data", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.make_intrinsics_layer": [[124, 131], ["numpy.meshgrid", "numpy.stack().transpose", "range", "range", "numpy.stack", "ww.astype", "hh.astype"], "function", ["None"], ["", "elif", "len", "(", "data", ".", "shape", ")", "==", "2", ":", "\n", "                ", "data", "=", "data", ".", "reshape", "(", "(", "1", ",", ")", "+", "data", ".", "shape", ")", "\n", "\n", "", "if", "len", "(", "data", ".", "shape", ")", "==", "3", "and", "data", ".", "shape", "[", "0", "]", "==", "3", ":", "# normalization of rgb images", "\n", "                ", "data", "=", "data", "/", "255.0", "\n", "\n", "", "sample", "[", "kk", "]", "=", "torch", ".", "from_numpy", "(", "data", ".", "copy", "(", ")", ")", "# copy to make memory continuous", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.load_kiiti_intrinsics": [[133, 143], ["open", "f.readlines", "lines[].strip().split", "float", "float", "float", "float", "lines[].strip"], "function", ["None"], ["\n", "\n", "", "", "def", "tensor2img", "(", "tensImg", ",", "mean", "=", "0", ",", "std", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    convert a tensor a numpy array, for visualization\n    \"\"\"", "\n", "# undo normalize", "\n", "# for t, m, s in zip(tensImg, mean, std):", "\n", "#     t.mul_(s).add_(m) ", "\n", "tensImg", "=", "tensImg", "*", "float", "(", "255", ")", "\n", "# undo transpose", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.unproject": [[9, 26], ["numpy.meshgrid", "numpy.zeros", "numpy.arange", "numpy.arange"], "function", ["None"], ["def", "unproject", "(", "depth_map", ",", "intrinsic", ")", ":", "\n", "    ", "h", ",", "w", "=", "depth_map", ".", "shape", "\n", "fx", "=", "intrinsic", "[", "0", ",", "0", "]", "\n", "fy", "=", "intrinsic", "[", "1", ",", "1", "]", "\n", "cx", "=", "intrinsic", "[", "0", ",", "2", "]", "\n", "cy", "=", "intrinsic", "[", "1", ",", "2", "]", "\n", "\n", "us", ",", "vs", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "w", ")", ",", "np", ".", "arange", "(", "h", ")", ")", "\n", "xs", "=", "(", "us", "-", "cx", ")", "/", "fx", "*", "depth_map", "\n", "ys", "=", "(", "vs", "-", "cy", ")", "/", "fy", "*", "depth_map", "\n", "\n", "vertex_map", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ")", "\n", "vertex_map", "[", ":", ",", ":", ",", "0", "]", "=", "xs", "\n", "vertex_map", "[", ":", ",", ":", ",", "1", "]", "=", "ys", "\n", "vertex_map", "[", ":", ",", ":", ",", "2", "]", "=", "depth_map", "\n", "\n", "return", "vertex_map", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project": [[28, 39], ["None"], "function", ["None"], ["", "def", "project", "(", "points", ",", "intrinsic", ")", ":", "\n", "    ", "fx", "=", "intrinsic", "[", "0", ",", "0", "]", "\n", "fy", "=", "intrinsic", "[", "1", ",", "1", "]", "\n", "cx", "=", "intrinsic", "[", "0", ",", "2", "]", "\n", "cy", "=", "intrinsic", "[", "1", ",", "2", "]", "\n", "\n", "us", "=", "fx", "*", "points", "[", ":", ",", "0", "]", "/", "points", "[", ":", ",", "2", "]", "+", "cx", "\n", "vs", "=", "fy", "*", "points", "[", ":", ",", "1", "]", "/", "points", "[", ":", ",", "2", "]", "+", "cy", "\n", "ds", "=", "points", "[", ":", ",", "2", "]", "\n", "\n", "return", "us", ",", "vs", ",", "ds", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.pixel_intersection": [[41, 47], ["numpy.intersect1d", "A.view", "B.view", "C.view().reshape", "range", "C.view"], "function", ["None"], ["", "def", "pixel_intersection", "(", "A", ",", "B", ")", ":", "\n", "    ", "nrows", ",", "ncols", "=", "A", ".", "shape", "\n", "dtype", "=", "{", "'names'", ":", "[", "'f{}'", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "ncols", ")", "]", ",", "\n", "'formats'", ":", "ncols", "*", "[", "A", ".", "dtype", "]", "}", "\n", "C", ",", "Aind", ",", "Bind", "=", "np", ".", "intersect1d", "(", "A", ".", "view", "(", "dtype", ")", ",", "B", ".", "view", "(", "dtype", ")", ",", "return_indices", "=", "True", ")", "\n", "return", "C", ".", "view", "(", "A", ".", "dtype", ")", ".", "reshape", "(", "-", "1", ",", "ncols", ")", ",", "Aind", ",", "Bind", "", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.find_projective_correspondence": [[17, 67], ["numpy.arange().astype", "transforms.project", "numpy.round().astype", "numpy.round().astype", "numpy.linalg.norm", "numpy.arange", "numpy.round", "numpy.round", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project"], ["def", "find_projective_correspondence", "(", "source_points", ",", "\n", "source_normals", ",", "\n", "target_vertex_map", ",", "\n", "target_normal_map", ",", "\n", "intrinsic", ",", "\n", "T_init", ",", "\n", "dist_diff", "=", "0.07", ")", ":", "\n", "    ", "'''\n    \\param source_points Source point cloud locations, (N, 3)\n    \\param source_normals Source point cloud normals, (N, 3)\n    \\param target_vertex_map Target vertex map, (H, W, 3)\n    \\param target_normal_map Target normal map, (H, W, 3)\n    \\param intrinsic Intrinsic matrix, (3, 3)\n    \\param T_init Initial transformation from source to target, (4, 4)\n    \\param dist_diff Distance difference threshold to filter correspondences\n    \\return source_indices: indices of points in the source point cloud with a valid projective correspondence in the target map, (M, 1)\n    \\return target_us: associated u coordinate of points in the target map, (M, 1)\n    \\return target_vs: associated v coordinate of points in the target map, (M, 1)\n    '''", "\n", "h", ",", "w", ",", "_", "=", "target_vertex_map", ".", "shape", "\n", "\n", "R", "=", "T_init", "[", ":", "3", ",", ":", "3", "]", "\n", "t", "=", "T_init", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "# Transform source points from the source coordinate system to the target coordinate system", "\n", "T_source_points", "=", "(", "R", "@", "source_points", ".", "T", "+", "t", ")", ".", "T", "\n", "\n", "# Set up initial correspondences from source to target", "\n", "source_indices", "=", "np", ".", "arange", "(", "len", "(", "source_points", ")", ")", ".", "astype", "(", "int", ")", "# a mask in range(N)", "\n", "target_us", ",", "target_vs", ",", "target_ds", "=", "transforms", ".", "project", "(", "\n", "T_source_points", ",", "intrinsic", ")", "\n", "target_us", "=", "np", ".", "round", "(", "target_us", ")", ".", "astype", "(", "int", ")", "\n", "target_vs", "=", "np", ".", "round", "(", "target_vs", ")", ".", "astype", "(", "int", ")", "\n", "\n", "# first filter: valid projection", "\n", "mask", "=", "(", "target_us", ">=", "0", ")", "&", "(", "target_us", "<", "w", ")", "&", "(", "target_vs", ">=", "0", ")", "&", "(", "target_vs", "<", "h", ")", "&", "(", "target_ds", ">=", "0", ")", "\n", "source_indices", "=", "source_indices", "[", "mask", "]", "\n", "target_us", "=", "target_us", "[", "mask", "]", "\n", "target_vs", "=", "target_vs", "[", "mask", "]", "\n", "T_source_points", "=", "T_source_points", "[", "mask", "]", "\n", "\n", "# second filter: apply distance threshold", "\n", "# point-to-plane error metric is used for distance: length of the projection of difference onto normal vector", "\n", "d", "=", "(", "T_source_points", "-", "target_vertex_map", "[", "target_vs", ",", "target_us", "]", ")", "*", "target_normal_map", "[", "target_vs", ",", "target_us", "]", "\n", "mask", "=", "np", ".", "linalg", ".", "norm", "(", "d", ",", "axis", "=", "1", ")", "<", "dist_diff", "\n", "source_indices", "=", "source_indices", "[", "mask", "]", "\n", "target_us", "=", "target_us", "[", "mask", "]", "\n", "target_vs", "=", "target_vs", "[", "mask", "]", "\n", "\n", "return", "source_indices", ",", "target_us", ",", "target_vs", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.build_linear_system": [[69, 93], ["len", "numpy.vstack", "len", "len"], "function", ["None"], ["", "def", "build_linear_system", "(", "source_points", ",", "target_points", ",", "target_normals", ",", "T", ")", ":", "\n", "    ", "M", "=", "len", "(", "source_points", ")", "\n", "assert", "len", "(", "target_points", ")", "==", "M", "and", "len", "(", "target_normals", ")", "==", "M", "\n", "\n", "R", "=", "T", "[", ":", "3", ",", ":", "3", "]", "\n", "t", "=", "T", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "p_prime", "=", "(", "R", "@", "source_points", ".", "T", "+", "t", ")", ".", "T", "\n", "q", "=", "target_points", "\n", "n_q", "=", "target_normals", "# M x 3", "\n", "\n", "# build the linear system", "\n", "# data association is handled by source_indices, and target_points[target_us, target_vs]", "\n", "n_x", ",", "n_y", ",", "n_z", "=", "n_q", "[", ":", ",", "0", "]", ",", "n_q", "[", ":", ",", "1", "]", ",", "n_q", "[", ":", ",", "2", "]", "\n", "p_x", ",", "p_y", ",", "p_z", "=", "p_prime", "[", ":", ",", "0", "]", ",", "p_prime", "[", ":", ",", "1", "]", ",", "p_prime", "[", ":", ",", "2", "]", "\n", "a_1", ",", "a_2", ",", "a_3", "=", "n_z", "*", "p_y", "-", "n_y", "*", "p_z", ",", "n_x", "*", "p_z", "-", "n_z", "*", "p_x", ",", "n_y", "*", "p_x", "-", "n_x", "*", "p_y", "\n", "A", "=", "np", ".", "vstack", "(", "(", "a_1", ",", "a_2", ",", "a_3", ",", "n_x", ",", "n_y", ",", "n_z", ")", ")", ".", "T", "\n", "assert", "A", ".", "shape", "==", "(", "M", ",", "6", ")", "\n", "\n", "q_x", ",", "q_y", ",", "q_z", "=", "q", "[", ":", ",", "0", "]", ",", "q", "[", ":", ",", "1", "]", ",", "q", "[", ":", ",", "2", "]", "\n", "b", "=", "n_x", "*", "q_x", "+", "n_y", "*", "q_y", "+", "n_z", "*", "q_z", "-", "n_x", "*", "p_x", "-", "n_y", "*", "p_y", "-", "n_z", "*", "p_z", "\n", "assert", "b", ".", "shape", "==", "(", "M", ",", ")", "\n", "\n", "return", "A", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.pose2transformation": [[95, 128], ["numpy.expand_dims", "numpy.eye", "numpy.array", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sin"], "function", ["None"], ["", "def", "pose2transformation", "(", "delta", ")", ":", "\n", "    ", "'''\n    \\param delta Vector (6, ) in the tangent space with the small angle assumption.\n    \\return T Matrix (4, 4) transformation matrix recovered from delta\n    Reference: https://en.wikipedia.org/wiki/Euler_angles in the ZYX order\n    '''", "\n", "w", "=", "delta", "[", ":", "3", "]", "\n", "u", "=", "np", ".", "expand_dims", "(", "delta", "[", "3", ":", "]", ",", "axis", "=", "1", ")", "\n", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "\n", "# yapf: disable", "\n", "R", "=", "np", ".", "array", "(", "[", "[", "\n", "np", ".", "cos", "(", "w", "[", "2", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "1", "]", ")", ",", "\n", "-", "np", ".", "sin", "(", "w", "[", "2", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "0", "]", ")", "+", "np", ".", "cos", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "1", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "0", "]", ")", ",", "\n", "np", ".", "sin", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "0", "]", ")", "+", "np", ".", "cos", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "1", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "1", "]", ")", "\n", "]", ",", "\n", "[", "\n", "np", ".", "sin", "(", "w", "[", "2", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "1", "]", ")", ",", "\n", "np", ".", "cos", "(", "w", "[", "2", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "0", "]", ")", "+", "np", ".", "sin", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "1", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "0", "]", ")", ",", "\n", "-", "np", ".", "cos", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "0", "]", ")", "+", "np", ".", "sin", "(", "w", "[", "2", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "1", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "0", "]", ")", "\n", "]", ",", "\n", "[", "\n", "-", "np", ".", "sin", "(", "w", "[", "1", "]", ")", ",", "\n", "np", ".", "cos", "(", "w", "[", "1", "]", ")", "*", "np", ".", "sin", "(", "w", "[", "0", "]", ")", ",", "\n", "np", ".", "cos", "(", "w", "[", "1", "]", ")", "*", "np", ".", "cos", "(", "w", "[", "0", "]", ")", "\n", "]", "]", ")", "\n", "# yapf: enable", "\n", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", "\n", "T", "[", ":", "3", ",", "3", ":", "]", "=", "u", "\n", "\n", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.solve": [[130, 140], ["numpy.linalg.qr", "Q.T.dot", "numpy.linalg.solve"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.solve"], ["", "def", "solve", "(", "A", ",", "b", ")", ":", "\n", "    ", "'''\n    \\param A (6, 6) matrix in the LU formulation, or (N, 6) in the QR formulation\n    \\param b (6, 1) vector in the LU formulation, or (N, 1) in the QR formulation\n    \\return delta (6, ) vector by solving the linear system. You may directly use dense solvers from numpy.\n    '''", "\n", "Q", ",", "R", "=", "np", ".", "linalg", ".", "qr", "(", "A", ")", "\n", "d", "=", "Q", ".", "T", ".", "dot", "(", "b", ")", "\n", "x", "=", "np", ".", "linalg", ".", "solve", "(", "R", ",", "d", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.icp": [[142, 190], ["numpy.eye", "range", "icp.find_projective_correspondence", "icp.build_linear_system", "icp.solve", "numpy.mean", "print", "o3d_utility.visualize_correspondences", "icp.pose2transformation", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.find_projective_correspondence", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.build_linear_system", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.solve", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.visualize_correspondences", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.icp.pose2transformation"], ["", "def", "icp", "(", "source_points", ",", "\n", "source_normals", ",", "\n", "target_vertex_map", ",", "\n", "target_normal_map", ",", "\n", "intrinsic", ",", "\n", "T_init", "=", "np", ".", "eye", "(", "4", ")", ",", "\n", "debug_association", "=", "False", ")", ":", "\n", "    ", "'''\n    \\param source_points Source point cloud locations, (N, 3)\n    \\param source_normals Source point cloud normals, (N, 3)\n    \\param target_vertex_map Target vertex map, (H, W, 3)\n    \\param target_normal_map Target normal map, (H, W, 3)\n    \\param intrinsic Intrinsic matrix, (3, 3)\n    \\param T_init Initial transformation from source to target, (4, 4)\n    \\param debug_assocation Visualize association between sources and targets for debug\n    \\return T (4, 4) transformation from source to target\n    '''", "\n", "\n", "T", "=", "T_init", "\n", "\n", "for", "i", "in", "range", "(", "20", ")", ":", "\n", "# TODO: fill in find_projective_correspondences", "\n", "        ", "source_indices", ",", "target_us", ",", "target_vs", "=", "find_projective_correspondence", "(", "\n", "source_points", ",", "source_normals", ",", "target_vertex_map", ",", "\n", "target_normal_map", ",", "intrinsic", ",", "T", ")", "\n", "\n", "# Select associated source and target points", "\n", "corres_source_points", "=", "source_points", "[", "source_indices", "]", "\n", "corres_target_points", "=", "target_vertex_map", "[", "target_vs", ",", "target_us", "]", "\n", "corres_target_normals", "=", "target_normal_map", "[", "target_vs", ",", "target_us", "]", "\n", "\n", "# Debug, if necessary", "\n", "if", "debug_association", ":", "\n", "            ", "o3d_utility", ".", "visualize_correspondences", "(", "corres_source_points", ",", "\n", "corres_target_points", ",", "T", ")", "\n", "\n", "# TODO: fill in build_linear_system and solve", "\n", "", "A", ",", "b", "=", "build_linear_system", "(", "corres_source_points", ",", "corres_target_points", ",", "\n", "corres_target_normals", ",", "T", ")", "\n", "delta", "=", "solve", "(", "A", ",", "b", ")", "\n", "\n", "# Update and output", "\n", "T", "=", "pose2transformation", "(", "delta", ")", "@", "T", "\n", "loss", "=", "np", ".", "mean", "(", "b", "**", "2", ")", "\n", "print", "(", "'iter {}: avg loss = {:.4e}, inlier count = {}'", ".", "format", "(", "\n", "i", ",", "loss", ",", "len", "(", "corres_source_points", ")", ")", ")", "\n", "\n", "", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.__init__": [[22, 29], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "points", "=", "np", ".", "empty", "(", "(", "0", ",", "3", ")", ")", "\n", "self", ".", "normals", "=", "np", ".", "empty", "(", "(", "0", ",", "3", ")", ")", "\n", "self", ".", "colors", "=", "np", ".", "empty", "(", "(", "0", ",", "3", ")", ")", "\n", "self", ".", "weights", "=", "np", ".", "empty", "(", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "timestamps", "=", "np", ".", "empty", "(", "(", "0", ",", "1", ")", ")", "# last timestamp the point is active (merged, or added)", "\n", "self", ".", "initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.merge": [[30, 59], ["numpy.linalg.norm"], "methods", ["None"], ["", "def", "merge", "(", "self", ",", "indices", ",", "points", ",", "normals", ",", "colors", ",", "R", ",", "t", ",", "timestamp", "=", "-", "1", ")", ":", "\n", "        ", "'''\n        Implement the merge function\n        \\param self The current maintained map\n        \\param indices Indices of selected points. Used for IN PLACE modification.\n        \\param points Input associated points, (N, 3)\n        \\param normals Input associated normals, (N, 3)\n        \\param colors Input associated colors, (N, 3)\n        \\param R rotation from camera (input) to world (map), (3, 3)\n        \\param t translation from camera (input) to world (map), (3, )\n        \\param timestamp the current timestamp\n        \\return None, update map properties IN PLACE\n        '''", "\n", "# transform from camera to world", "\n", "points_w", "=", "(", "R", "@", "points", ".", "T", "+", "t", ")", ".", "T", "\n", "normals_w", "=", "(", "R", "@", "normals", ".", "T", ")", ".", "T", "\n", "\n", "# weighted average", "\n", "weights", "=", "self", ".", "weights", "[", "indices", "]", "\n", "self", ".", "points", "[", "indices", ",", ":", "]", "=", "(", "self", ".", "points", "[", "indices", ",", ":", "]", "*", "weights", "+", "points_w", ")", "/", "(", "weights", "+", "1", ")", "\n", "temp_normals", "=", "(", "self", ".", "normals", "[", "indices", ",", ":", "]", "*", "weights", "+", "normals_w", ")", "/", "(", "weights", "+", "1", ")", "\n", "self", ".", "normals", "[", "indices", ",", ":", "]", "=", "temp_normals", "/", "np", ".", "linalg", ".", "norm", "(", "temp_normals", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "self", ".", "colors", "[", "indices", ",", ":", "]", "=", "(", "self", ".", "colors", "[", "indices", ",", ":", "]", "*", "weights", "+", "colors", ")", "/", "(", "weights", "+", "1", ")", "\n", "\n", "# update weights, which is simply a counter of matched points", "\n", "self", ".", "weights", "[", "indices", "]", "=", "self", ".", "weights", "[", "indices", "]", "+", "1", "\n", "\n", "# update timestamps, to distinguish between dormant and active points", "\n", "self", ".", "timestamps", "[", "indices", "]", "=", "timestamp", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.add": [[61, 78], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "numpy.ones", "len", "len"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "points", ",", "normals", ",", "colors", ",", "R", ",", "t", ",", "timestamp", "=", "-", "1", ")", ":", "\n", "        ", "'''\n        Implement the add function\n        \\param self The current maintained map\n        \\param points Input associated points, (N, 3)\n        \\param normals Input associated normals, (N, 3)\n        \\param colors Input associated colors, (N, 3)\n        \\param R rotation from camera (input) to world (map), (3, 3)\n        \\param t translation from camera (input) to world (map), (3, )\n        \\param timestamp the current timestamp\n        \\return None, update map properties by concatenation\n        '''", "\n", "self", ".", "points", "=", "np", ".", "concatenate", "(", "(", "self", ".", "points", ",", "(", "R", "@", "points", ".", "T", "+", "t", ")", ".", "T", ")", ")", "\n", "self", ".", "normals", "=", "np", ".", "concatenate", "(", "(", "self", ".", "normals", ",", "(", "R", "@", "normals", ".", "T", ")", ".", "T", ")", ")", "\n", "self", ".", "colors", "=", "np", ".", "concatenate", "(", "(", "self", ".", "colors", ",", "colors", ")", ")", "\n", "self", ".", "weights", "=", "np", ".", "concatenate", "(", "(", "self", ".", "weights", ",", "np", ".", "ones", "(", "(", "len", "(", "points", ")", ",", "1", ")", ")", ")", ")", "\n", "self", ".", "timestamps", "=", "np", ".", "concatenate", "(", "(", "self", ".", "timestamps", ",", "np", ".", "ones", "(", "(", "len", "(", "points", ")", ",", "1", ")", ")", "*", "timestamp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove": [[80, 98], ["numpy.arange().astype", "numpy.arange", "len", "mask.squeeze"], "methods", ["None"], ["", "def", "remove", "(", "self", ",", "c_stable", ",", "t_max", ",", "timestamp", ")", ":", "\n", "        ", "'''\n        Remove points that remain in the unstable state for a long time\n        \\param c_stable threshold to determine whether points are stable\n        \\param t_max threshold to determine whether points are dormant\n        \\param timestamp the current timestamp\n        \\return None, update map properties by removing outliers or artifacts\n        '''", "\n", "# points with confidence counter (weights) >= c_stable are considered stable", "\n", "# points that haven't been active longer than t_max are considered dormant", "\n", "mask", "=", "(", "self", ".", "weights", "<", "c_stable", ")", "&", "(", "(", "timestamp", "-", "self", ".", "timestamps", ")", ">", "t_max", ")", "\n", "indices", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "points", ")", ")", ".", "astype", "(", "int", ")", "\n", "indices", "=", "indices", "[", "~", "(", "mask", ".", "squeeze", "(", ")", ")", "]", "\n", "self", ".", "points", "=", "self", ".", "points", "[", "indices", "]", "\n", "self", ".", "normals", "=", "self", ".", "normals", "[", "indices", "]", "\n", "self", ".", "colors", "=", "self", ".", "colors", "[", "indices", "]", "\n", "self", ".", "weights", "=", "self", ".", "weights", "[", "indices", "]", "\n", "self", ".", "timestamps", "=", "self", ".", "timestamps", "[", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass1": [[100, 113], ["None"], "methods", ["None"], ["", "def", "filter_pass1", "(", "self", ",", "us", ",", "vs", ",", "ds", ",", "h", ",", "w", ")", ":", "\n", "        ", "'''\n        Implement the filter function\n        \\param self The current maintained map, unused\n        \\param us Putative corresponding u coordinates on an image, (N, 1)\n        \\param vs Putative corresponding v coordinates on an image, (N, 1)\n        \\param ds Putative corresponding d depth on an image, (N, 1)\n        \\param h Height of the image projected to\n        \\param w Width of the image projected to\n        \\return mask (N, 1) in bool indicating the valid coordinates\n        '''", "\n", "\n", "return", "(", "us", ">=", "0", ")", "&", "(", "us", "<", "w", ")", "&", "(", "vs", ">=", "0", ")", "&", "(", "vs", "<", "h", ")", "&", "(", "ds", ">=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass2": [[115, 136], ["numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.arccos", "numpy.sum"], "methods", ["None"], ["", "def", "filter_pass2", "(", "self", ",", "points", ",", "normals", ",", "input_points", ",", "input_normals", ",", "\n", "dist_diff", ",", "angle_diff", ")", ":", "\n", "        ", "'''\n        Implement the filter function\n        \\param self The current maintained map, unused\n        \\param points Maintained associated points, (M, 3)\n        \\param normals Maintained associated normals, (M, 3)\n        \\param input_points Input associated points, (M, 3)\n        \\param input_normals Input associated normals, (M, 3)\n        \\param dist_diff Distance difference threshold to filter correspondences by positions\n        \\param angle_diff Angle difference threshold to filter correspondences by normals\n        \\return mask (N, 1) in bool indicating the valid correspondences\n        '''", "\n", "d", "=", "(", "input_points", "-", "points", ")", "*", "input_normals", "\n", "mask1", "=", "np", ".", "linalg", ".", "norm", "(", "d", ",", "axis", "=", "1", ")", "<", "dist_diff", "\n", "\n", "n1", "=", "normals", "/", "np", ".", "linalg", ".", "norm", "(", "normals", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "n2", "=", "input_normals", "/", "np", ".", "linalg", ".", "norm", "(", "input_normals", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "mask2", "=", "np", ".", "arccos", "(", "np", ".", "sum", "(", "n1", "*", "n2", ",", "axis", "=", "1", ")", ")", "<", "angle_diff", "\n", "\n", "return", "mask1", "&", "mask2", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.fuse": [[138, 237], ["numpy.deg2rad", "numpy.linalg.inv", "vertex_map.reshape", "normal_map.reshape", "color_map.reshape", "fusion.Map.add", "numpy.arange().astype", "transforms.project", "numpy.round().astype", "numpy.round().astype", "fusion.Map.filter_pass1", "fusion.Map.filter_pass2", "len", "fusion.Map.merge", "numpy.zeros().astype", "fusion.Map.add", "len", "print", "fusion.Map.sum", "fusion.Map.sum", "numpy.arange", "numpy.round", "numpy.round", "numpy.zeros", "len", "len"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.add", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass1", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass2", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.merge", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.add"], ["", "def", "fuse", "(", "self", ",", "\n", "vertex_map", ",", "\n", "normal_map", ",", "\n", "color_map", ",", "\n", "intrinsic", ",", "\n", "T", ",", "\n", "dist_diff", "=", "0.03", ",", "\n", "angle_diff", "=", "np", ".", "deg2rad", "(", "5", ")", ")", ":", "\n", "        ", "'''\n        \\param self The current maintained map\n        \\param vertex_map Input vertex map, (H, W, 3)\n        \\param normal_map Input normal map, (H, W, 3)\n        \\param intrinsic Intrinsic matrix, (3, 3)\n        \\param T transformation from camera (input) to world (map), (4, 4)\n        \\return None, update map properties on demand\n        '''", "\n", "# Camera to world", "\n", "R", "=", "T", "[", ":", "3", ",", ":", "3", "]", "\n", "t", "=", "T", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "# World to camera", "\n", "T_inv", "=", "np", ".", "linalg", ".", "inv", "(", "T", ")", "\n", "R_inv", "=", "T_inv", "[", ":", "3", ",", ":", "3", "]", "\n", "t_inv", "=", "T_inv", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "points", "=", "vertex_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "normals", "=", "normal_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "colors", "=", "color_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "\n", "# TODO: add step", "\n", "self", ".", "add", "(", "points", ",", "normals", ",", "colors", ",", "R", ",", "t", ")", "\n", "self", ".", "initialized", "=", "True", "\n", "\n", "", "else", ":", "\n", "            ", "h", ",", "w", ",", "_", "=", "vertex_map", ".", "shape", "\n", "\n", "# Transform from world to camera for projective association", "\n", "indices", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "points", ")", ")", ".", "astype", "(", "int", ")", "\n", "T_points", "=", "(", "R_inv", "@", "self", ".", "points", ".", "T", "+", "t_inv", ")", ".", "T", "\n", "R_normals", "=", "(", "R_inv", "@", "self", ".", "normals", ".", "T", ")", ".", "T", "\n", "\n", "# Projective association", "\n", "us", ",", "vs", ",", "ds", "=", "transforms", ".", "project", "(", "T_points", ",", "intrinsic", ")", "\n", "us", "=", "np", ".", "round", "(", "us", ")", ".", "astype", "(", "int", ")", "\n", "vs", "=", "np", ".", "round", "(", "vs", ")", ".", "astype", "(", "int", ")", "\n", "\n", "# TODO: first filter: valid projection", "\n", "mask", "=", "self", ".", "filter_pass1", "(", "us", ",", "vs", ",", "ds", ",", "h", ",", "w", ")", "\n", "# Should not happen -- placeholder before implementation", "\n", "if", "mask", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "return", "\n", "# End of TODO", "\n", "\n", "", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "\n", "T_points", "=", "T_points", "[", "indices", "]", "\n", "R_normals", "=", "R_normals", "[", "indices", "]", "\n", "valid_points", "=", "vertex_map", "[", "vs", ",", "us", "]", "\n", "valid_normals", "=", "normal_map", "[", "vs", ",", "us", "]", "\n", "\n", "# TODO: second filter: apply thresholds", "\n", "mask", "=", "self", ".", "filter_pass2", "(", "T_points", ",", "R_normals", ",", "valid_points", ",", "\n", "valid_normals", ",", "dist_diff", ",", "angle_diff", ")", "\n", "# Should not happen -- placeholder before implementation", "\n", "if", "mask", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "return", "\n", "# End of TODO", "\n", "\n", "", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "\n", "updated_entries", "=", "len", "(", "indices", ")", "\n", "\n", "merged_points", "=", "vertex_map", "[", "vs", ",", "us", "]", "\n", "merged_normals", "=", "normal_map", "[", "vs", ",", "us", "]", "\n", "merged_colors", "=", "color_map", "[", "vs", ",", "us", "]", "\n", "\n", "# TODO: Merge step - compute weight average after transformation", "\n", "self", ".", "merge", "(", "indices", ",", "merged_points", ",", "merged_normals", ",", "merged_colors", ",", "\n", "R", ",", "t", ")", "\n", "# End of TODO", "\n", "\n", "associated_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", ".", "astype", "(", "bool", ")", "\n", "associated_mask", "[", "vs", ",", "us", "]", "=", "True", "\n", "new_points", "=", "vertex_map", "[", "~", "associated_mask", "]", "\n", "new_normals", "=", "normal_map", "[", "~", "associated_mask", "]", "\n", "new_colors", "=", "color_map", "[", "~", "associated_mask", "]", "\n", "\n", "# TODO: Add step", "\n", "self", ".", "add", "(", "new_points", ",", "new_normals", ",", "new_colors", ",", "R", ",", "t", ")", "\n", "# End of TODO", "\n", "\n", "added_entries", "=", "len", "(", "new_points", ")", "\n", "print", "(", "'updated: {}, added: {}, total: {}'", ".", "format", "(", "\n", "updated_entries", ",", "added_entries", ",", "len", "(", "self", ".", "points", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.fuse_bonus": [[238, 386], ["numpy.deg2rad", "numpy.linalg.inv", "numpy.zeros_like", "transforms.project", "numpy.round().astype", "numpy.round().astype", "print", "fusion.Map.add", "numpy.arange().astype", "transforms.project", "numpy.round().astype", "numpy.round().astype", "fusion.Map.filter_pass1", "print", "numpy.unravel_index", "transforms.pixel_intersection", "print", "fusion.Map.filter_pass2", "len", "fusion.Map.merge", "numpy.zeros().astype", "fusion.Map.add", "fusion.Map.remove", "len", "print", "fusion.Map.sum", "numpy.where", "numpy.hstack", "numpy.hstack", "fusion.Map.sum", "print", "numpy.unravel_index", "transforms.pixel_intersection", "print", "numpy.round", "numpy.round", "vertex_map.reshape", "normal_map.reshape", "color_map.reshape", "vertex_map.reshape", "normal_map.reshape", "color_map.reshape", "numpy.arange", "numpy.round", "numpy.round", "len", "len", "numpy.where", "numpy.hstack", "numpy.hstack", "numpy.zeros", "len", "len", "numpy.round().astype.reshape", "numpy.round().astype.reshape", "_vs.reshape", "_us.reshape", "len", "len", "numpy.round().astype.reshape", "numpy.round().astype.reshape", "_vs.reshape", "_us.reshape"], "methods", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.add", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.project", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass1", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.pixel_intersection", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.filter_pass2", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.merge", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.add", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.transforms.pixel_intersection"], ["", "", "def", "fuse_bonus", "(", "self", ",", "\n", "vertex_map", ",", "\n", "normal_map", ",", "\n", "color_map", ",", "\n", "intrinsic", ",", "\n", "T", ",", "\n", "timestamp", ",", "\n", "dist_diff", "=", "0.03", ",", "\n", "angle_diff", "=", "np", ".", "deg2rad", "(", "5", ")", ",", "\n", "c_stable", "=", "10", ",", "\n", "t_max", "=", "20", ",", "\n", "static_mask", "=", "None", ",", "\n", "depth_mask", "=", "None", ")", ":", "\n", "        ", "'''\n        \\param self The current maintained map\n        \\param vertex_map Input vertex map, (H, W, 3)\n        \\param normal_map Input normal map, (H, W, 3)\n        \\param intrinsic Intrinsic matrix, (3, 3)\n        \\param T transformation from camera (input) to world (map), (4, 4)\n        \\param timestamp the current timestamp\n        \\param dist_diff distance threshold to filter projective association\n        \\param angle_diff angle threshold to filter projective association\n        \\param c_stable threshold to determine whether points are stable\n        \\param t_max threshold to determine whether points are dormant\n        \\return None, update map properties on demand\n        '''", "\n", "# Camera to world", "\n", "R", "=", "T", "[", ":", "3", ",", ":", "3", "]", "\n", "t", "=", "T", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "# World to camera", "\n", "T_inv", "=", "np", ".", "linalg", ".", "inv", "(", "T", ")", "\n", "R_inv", "=", "T_inv", "[", ":", "3", ",", ":", "3", "]", "\n", "t_inv", "=", "T_inv", "[", ":", "3", ",", "3", ":", "]", "\n", "\n", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "print", "(", "\"Initializing point clouds...\"", ")", "\n", "if", "static_mask", "is", "None", ":", "\n", "                ", "points", "=", "vertex_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "depth_mask", "]", "\n", "normals", "=", "normal_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "depth_mask", "]", "\n", "colors", "=", "color_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "depth_mask", "]", "\n", "", "else", ":", "\n", "                ", "points", "=", "vertex_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "static_mask", "&", "depth_mask", "]", "\n", "normals", "=", "normal_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "static_mask", "&", "depth_mask", "]", "\n", "colors", "=", "color_map", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "[", "static_mask", "&", "depth_mask", "]", "\n", "\n", "", "self", ".", "add", "(", "points", ",", "normals", ",", "colors", ",", "R", ",", "t", ",", "timestamp", ")", "\n", "self", ".", "initialized", "=", "True", "\n", "\n", "", "else", ":", "\n", "            ", "h", ",", "w", ",", "_", "=", "vertex_map", ".", "shape", "\n", "\n", "# Transform from world to camera for projective association", "\n", "indices", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "points", ")", ")", ".", "astype", "(", "int", ")", "\n", "T_points", "=", "(", "R_inv", "@", "self", ".", "points", ".", "T", "+", "t_inv", ")", ".", "T", "\n", "R_normals", "=", "(", "R_inv", "@", "self", ".", "normals", ".", "T", ")", ".", "T", "\n", "\n", "# Projective association", "\n", "us", ",", "vs", ",", "ds", "=", "transforms", ".", "project", "(", "T_points", ",", "intrinsic", ")", "\n", "us", "=", "np", ".", "round", "(", "us", ")", ".", "astype", "(", "int", ")", "\n", "vs", "=", "np", ".", "round", "(", "vs", ")", ".", "astype", "(", "int", ")", "\n", "\n", "# first filter: valid projection", "\n", "mask", "=", "self", ".", "filter_pass1", "(", "us", ",", "vs", ",", "ds", ",", "h", ",", "w", ")", "\n", "# Should not happen -- placeholder before implementation", "\n", "if", "mask", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "return", "\n", "\n", "", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "\n", "# second filter: remove points with invalid depth", "\n", "print", "(", "\"Before removing invalid depth points: %d matched points\"", "%", "len", "(", "indices", ")", ")", "\n", "_vs", ",", "_us", "=", "np", ".", "unravel_index", "(", "np", ".", "where", "(", "depth_mask", ")", ",", "(", "h", ",", "w", ")", ")", "\n", "pxs", ",", "mask", ",", "_", "=", "transforms", ".", "pixel_intersection", "(", "\n", "np", ".", "hstack", "(", "(", "vs", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "us", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", ",", "\n", "np", ".", "hstack", "(", "(", "_vs", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "_us", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", ")", "\n", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "print", "(", "\"After removing invalid depth points: %d matched points\"", "%", "len", "(", "indices", ")", ")", "\n", "\n", "T_points", "=", "T_points", "[", "indices", "]", "\n", "R_normals", "=", "R_normals", "[", "indices", "]", "\n", "valid_points", "=", "vertex_map", "[", "vs", ",", "us", "]", "\n", "valid_normals", "=", "normal_map", "[", "vs", ",", "us", "]", "\n", "\n", "# third filter: apply thresholds", "\n", "mask", "=", "self", ".", "filter_pass2", "(", "T_points", ",", "R_normals", ",", "valid_points", ",", "\n", "valid_normals", ",", "dist_diff", ",", "angle_diff", ")", "\n", "# Should not happen -- placeholder before implementation", "\n", "if", "mask", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "return", "\n", "\n", "", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "\n", "# fourth filter: remove dynamic points", "\n", "if", "static_mask", "is", "not", "None", ":", "\n", "                ", "print", "(", "\"Before removing dynamic points: %d matched points\"", "%", "len", "(", "indices", ")", ")", "\n", "_vs", ",", "_us", "=", "np", ".", "unravel_index", "(", "np", ".", "where", "(", "static_mask", ")", ",", "(", "h", ",", "w", ")", ")", "\n", "pxs", ",", "mask", ",", "_", "=", "transforms", ".", "pixel_intersection", "(", "\n", "np", ".", "hstack", "(", "(", "vs", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "us", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", ",", "\n", "np", ".", "hstack", "(", "(", "_vs", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "_us", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", ")", "\n", "indices", "=", "indices", "[", "mask", "]", "\n", "us", "=", "us", "[", "mask", "]", "\n", "vs", "=", "vs", "[", "mask", "]", "\n", "print", "(", "\"After removing dynamic points: %d matched points\"", "%", "len", "(", "indices", ")", ")", "\n", "\n", "", "updated_entries", "=", "len", "(", "indices", ")", "\n", "\n", "merged_points", "=", "vertex_map", "[", "vs", ",", "us", "]", "\n", "merged_normals", "=", "normal_map", "[", "vs", ",", "us", "]", "\n", "merged_colors", "=", "color_map", "[", "vs", ",", "us", "]", "\n", "\n", "# Merge step - compute weight average after transformation", "\n", "self", ".", "merge", "(", "indices", ",", "merged_points", ",", "merged_normals", ",", "merged_colors", ",", "\n", "R", ",", "t", ",", "timestamp", ")", "\n", "\n", "associated_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", ".", "astype", "(", "bool", ")", "\n", "associated_mask", "[", "vs", ",", "us", "]", "=", "True", "\n", "new_points", "=", "vertex_map", "[", "~", "associated_mask", "]", "\n", "new_normals", "=", "normal_map", "[", "~", "associated_mask", "]", "\n", "new_colors", "=", "color_map", "[", "~", "associated_mask", "]", "\n", "\n", "# Add step", "\n", "self", ".", "add", "(", "new_points", ",", "new_normals", ",", "new_colors", ",", "R", ",", "t", ",", "timestamp", ")", "\n", "\n", "# Remove step", "\n", "self", ".", "remove", "(", "c_stable", ",", "t_max", ",", "timestamp", ")", "\n", "\n", "added_entries", "=", "len", "(", "new_points", ")", "\n", "print", "(", "'updated: {}, added: {}, total: {}'", ".", "format", "(", "\n", "updated_entries", ",", "added_entries", ",", "len", "(", "self", ".", "points", ")", ")", ")", "\n", "\n", "# Render point clouds back to image to input TartanVO", "\n", "", "img", "=", "np", ".", "zeros_like", "(", "vertex_map", ")", "\n", "T_points", "=", "(", "R_inv", "@", "self", ".", "points", ".", "T", "+", "t_inv", ")", ".", "T", "\n", "R_normals", "=", "(", "R_inv", "@", "self", ".", "normals", ".", "T", ")", ".", "T", "\n", "us", ",", "vs", ",", "ds", "=", "transforms", ".", "project", "(", "T_points", ",", "intrinsic", ")", "\n", "us", "=", "np", ".", "round", "(", "us", ")", ".", "astype", "(", "int", ")", "\n", "vs", "=", "np", ".", "round", "(", "vs", ")", ".", "astype", "(", "int", ")", "\n", "img", "[", "vs", ",", "us", "]", "=", "self", ".", "colors", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "img", "=", "(", "img", "*", "256", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.preprocess.load_gt_poses": [[17, 48], ["numpy.eye", "open", "f.readlines", "numpy.array", "indices.append", "quaternion.from_float_array", "quaternion.as_rotation_matrix", "numpy.eye", "Ts.append", "list", "int", "map", "numpy.linalg.inv", "line.strip().split", "line.strip"], "function", ["None"], ["def", "load_gt_poses", "(", "gt_filename", ")", ":", "\n", "    ", "indices", "=", "[", "]", "\n", "Ts", "=", "[", "]", "\n", "\n", "# Camera to world", "\n", "# Dirty left 2 right coordinate transform", "\n", "# https://github.com/theNded/MeshHashing/blob/master/src/io/config_manager.cc#L88", "\n", "T_l2r", "=", "np", ".", "eye", "(", "4", ")", "\n", "T_l2r", "[", "1", ",", "1", "]", "=", "-", "1", "\n", "\n", "with", "open", "(", "gt_filename", ")", "as", "f", ":", "\n", "        ", "content", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "content", ":", "\n", "            ", "data", "=", "np", ".", "array", "(", "list", "(", "map", "(", "float", ",", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", ")", ")", ")", "\n", "indices", ".", "append", "(", "int", "(", "data", "[", "0", "]", ")", ")", "\n", "\n", "data", "=", "data", "[", "1", ":", "]", "\n", "\n", "q", "=", "data", "[", "3", ":", "]", "[", "[", "3", ",", "0", ",", "1", ",", "2", "]", "]", "\n", "q", "=", "quaternion", ".", "from_float_array", "(", "q", ")", "\n", "R", "=", "quaternion", ".", "as_rotation_matrix", "(", "q", ")", "\n", "\n", "t", "=", "data", "[", ":", "3", "]", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "\n", "T", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "R", "\n", "T", "[", "0", ":", "3", ",", "3", "]", "=", "t", "\n", "\n", "Ts", ".", "append", "(", "T_l2r", "@", "T", "@", "np", ".", "linalg", ".", "inv", "(", "T_l2r", ")", ")", "\n", "\n", "", "", "return", "indices", ",", "Ts", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.make_point_cloud": [[12, 20], ["open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector"], "function", ["None"], ["def", "make_point_cloud", "(", "points", ",", "normals", "=", "None", ",", "colors", "=", "None", ")", ":", "\n", "    ", "pcd", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "points", ")", "\n", "if", "normals", "is", "not", "None", ":", "\n", "        ", "pcd", ".", "normals", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "normals", ")", "\n", "", "if", "colors", "is", "not", "None", ":", "\n", "        ", "pcd", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "colors", ")", "\n", "", "return", "pcd", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.visualize_icp": [[22, 33], ["o3d_utility.make_point_cloud", "make_point_cloud.paint_uniform_color", "o3d_utility.make_point_cloud", "make_point_cloud.paint_uniform_color", "make_point_cloud.transform", "open3d.visualization.draw_geometries", "make_point_cloud.transform", "make_point_cloud.transform"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.make_point_cloud", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.make_point_cloud"], ["", "def", "visualize_icp", "(", "source_points", ",", "target_points", ",", "T", ")", ":", "\n", "    ", "pcd_source", "=", "make_point_cloud", "(", "source_points", ")", "\n", "pcd_source", ".", "paint_uniform_color", "(", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "\n", "pcd_target", "=", "make_point_cloud", "(", "target_points", ")", "\n", "pcd_target", ".", "paint_uniform_color", "(", "[", "0", ",", "1", ",", "0", "]", ")", "\n", "\n", "pcd_source", ".", "transform", "(", "T", ")", "\n", "o3d", ".", "visualization", ".", "draw_geometries", "(", "[", "\n", "pcd_source", ".", "transform", "(", "flip_transform", ")", ",", "\n", "pcd_target", ".", "transform", "(", "flip_transform", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.visualize_correspondences": [[36, 60], ["o3d_utility.make_point_cloud", "make_point_cloud.paint_uniform_color", "make_point_cloud.transform", "make_point_cloud.transform", "o3d_utility.make_point_cloud", "make_point_cloud.paint_uniform_color", "make_point_cloud.transform", "range", "open3d.geometry.LineSet.create_from_point_cloud_correspondences", "open3d.visualization.draw_geometries", "len", "len", "print", "len", "corres.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.make_point_cloud", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.o3d_utility.make_point_cloud"], ["", "def", "visualize_correspondences", "(", "source_points", ",", "target_points", ",", "T", ")", ":", "\n", "    ", "if", "len", "(", "source_points", ")", "!=", "len", "(", "target_points", ")", ":", "\n", "        ", "print", "(", "\n", "'Error! source points and target points has different length {} vs {}'", "\n", ".", "format", "(", "len", "(", "source_points", ")", ",", "len", "(", "target_points", ")", ")", ")", "\n", "return", "\n", "\n", "", "pcd_source", "=", "make_point_cloud", "(", "source_points", ")", "\n", "pcd_source", ".", "paint_uniform_color", "(", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "pcd_source", ".", "transform", "(", "T", ")", "\n", "pcd_source", ".", "transform", "(", "flip_transform", ")", "\n", "\n", "pcd_target", "=", "make_point_cloud", "(", "target_points", ")", "\n", "pcd_target", ".", "paint_uniform_color", "(", "[", "0", ",", "1", ",", "0", "]", ")", "\n", "pcd_target", ".", "transform", "(", "flip_transform", ")", "\n", "\n", "corres", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "source_points", ")", ")", ":", "\n", "        ", "corres", ".", "append", "(", "(", "k", ",", "k", ")", ")", "\n", "\n", "", "lineset", "=", "o3d", ".", "geometry", ".", "LineSet", ".", "create_from_point_cloud_correspondences", "(", "\n", "pcd_source", ",", "pcd_target", ",", "corres", ")", "\n", "\n", "o3d", ".", "visualization", ".", "draw_geometries", "(", "[", "pcd_source", ",", "pcd_target", ",", "lineset", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.preprocess.upscale.upscale_flow": [[10, 18], ["len", "range", "glob.glob1", "numpy.load", "cv2.resize", "utils.visflow", "cv2.imwrite", "str().zfill", "str().zfill", "str", "str"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.backend.utils.visflow"], ["def", "upscale_flow", "(", "flow_dir", ",", "save_dir", ")", ":", "\n", "    ", "num_flow", "=", "len", "(", "glob", ".", "glob1", "(", "flow_dir", ",", "\"*.npy\"", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_flow", ")", ":", "\n", "        ", "flow", "=", "np", ".", "load", "(", "flow_dir", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".npy\"", ")", "\n", "flow_upscaled", "=", "cv2", ".", "resize", "(", "flow", ",", "(", "640", ",", "448", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "flow_vis", "=", "visflow", "(", "flow_upscaled", ")", "\n", "cv2", ".", "imwrite", "(", "save_dir", "+", "\"flow/\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\".png\"", ",", "flow_vis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.preprocess.crop.crop_img": [[5, 35], ["int", "int", "max", "int", "int", "len", "float", "float", "round", "round", "cv2.resize", "len", "cv2.resize"], "function", ["None"], ["def", "crop_img", "(", "img", ",", "size", "=", "(", "448", ",", "640", ")", ")", ":", "\n", "    ", "th", ",", "tw", "=", "size", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "        ", "return", "img", "\n", "\n", "# resize the image if the image size is smaller than the target size", "\n", "", "scale_h", ",", "scale_w", ",", "scale", "=", "1.", ",", "1.", ",", "1.", "\n", "if", "th", ">", "h", ":", "\n", "        ", "scale_h", "=", "float", "(", "th", ")", "/", "h", "\n", "", "if", "tw", ">", "w", ":", "\n", "        ", "scale_w", "=", "float", "(", "tw", ")", "/", "w", "\n", "", "if", "scale_h", ">", "1", "or", "scale_w", ">", "1", ":", "\n", "        ", "scale", "=", "max", "(", "scale_h", ",", "scale_w", ")", "\n", "w", "=", "int", "(", "round", "(", "w", "*", "scale", ")", ")", "# w after resize", "\n", "h", "=", "int", "(", "round", "(", "h", "*", "scale", ")", ")", "# h after resize", "\n", "\n", "", "x1", "=", "int", "(", "(", "w", "-", "tw", ")", "/", "2", ")", "\n", "y1", "=", "int", "(", "(", "h", "-", "th", ")", "/", "2", ")", "\n", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "        ", "if", "scale", ">", "1", ":", "\n", "            ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "cropped", "=", "img", "[", "y1", ":", "y1", "+", "th", ",", "x1", ":", "x1", "+", "tw", ",", ":", "]", "\n", "", "elif", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "        ", "if", "scale", ">", "1", ":", "\n", "            ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "cropped", "=", "img", "[", "y1", ":", "y1", "+", "th", ",", "x1", ":", "x1", "+", "tw", "]", "\n", "\n", "", "return", "cropped", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.preprocess.associate.read_file_list": [[50, 71], ["open", "open.read", "file.read.replace().replace().split", "dict", "file.read.replace().replace", "v.strip", "float", "line.split", "len", "file.read.replace", "v.strip", "len"], "function", ["None"], ["def", "read_file_list", "(", "filename", ")", ":", "\n", "    ", "\"\"\"\n    Reads a trajectory from a text file. \n    \n    File format:\n    The file format is \"stamp d1 d2 d3 ...\", where stamp denotes the time stamp (to be matched)\n    and \"d1 d2 d3..\" is arbitary data (e.g., a 3D position and 3D orientation) associated to this timestamp. \n    \n    Input:\n    filename -- File name\n    \n    Output:\n    dict -- dictionary of (stamp,data) tuples\n    \n    \"\"\"", "\n", "file", "=", "open", "(", "filename", ")", "\n", "data", "=", "file", ".", "read", "(", ")", "\n", "lines", "=", "data", ".", "replace", "(", "\",\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "split", "(", "\"\\n\"", ")", "\n", "list", "=", "[", "[", "v", ".", "strip", "(", ")", "for", "v", "in", "line", ".", "split", "(", "\" \"", ")", "if", "v", ".", "strip", "(", ")", "!=", "\"\"", "]", "for", "line", "in", "lines", "if", "len", "(", "line", ")", ">", "0", "and", "line", "[", "0", "]", "!=", "\"#\"", "]", "\n", "list", "=", "[", "(", "float", "(", "l", "[", "0", "]", ")", ",", "l", "[", "1", ":", "]", ")", "for", "l", "in", "list", "if", "len", "(", "l", ")", ">", "1", "]", "\n", "return", "dict", "(", "list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.preprocess.associate.associate": [[72, 107], ["list", "list", "list", "potential_matches.sort", "matches.sort", "first_list.keys", "second_list.keys", "third_list.keys", "abs", "abs", "list.remove", "list.remove", "list.remove", "matches.append", "abs", "abs"], "function", ["home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove", "home.repos.pwc.inspect_result.geniussh_dynamic-dense-rgbd-slam-with-tartanvo.point_fusion.fusion.Map.remove"], ["", "def", "associate", "(", "first_list", ",", "second_list", ",", "third_list", ",", "offset", ",", "max_difference", ")", ":", "\n", "    ", "\"\"\"\n    Associate two dictionaries of (stamp,data). As the time stamps never match exactly, we aim \n    to find the closest match for every input tuple.\n    \n    Input:\n    first_list -- first dictionary of (stamp,data) tuples\n    second_list -- second dictionary of (stamp,data) tuples\n    offset -- time offset between both dictionaries (e.g., to model the delay between the sensors)\n    max_difference -- search radius for candidate generation\n\n    Output:\n    matches -- list of matched tuples ((stamp1,data1),(stamp2,data2))\n    \n    \"\"\"", "\n", "first_keys", "=", "list", "(", "first_list", ".", "keys", "(", ")", ")", "\n", "second_keys", "=", "list", "(", "second_list", ".", "keys", "(", ")", ")", "\n", "third_keys", "=", "list", "(", "third_list", ".", "keys", "(", ")", ")", "\n", "potential_matches", "=", "[", "(", "abs", "(", "a", "-", "(", "b", "+", "offset", ")", ")", ",", "abs", "(", "c", "-", "(", "b", "+", "offset", ")", ")", ",", "a", ",", "b", ",", "c", ")", "\n", "for", "a", "in", "first_keys", "\n", "for", "b", "in", "second_keys", "\n", "for", "c", "in", "third_keys", "\n", "if", "abs", "(", "a", "-", "(", "b", "+", "offset", ")", ")", "<", "max_difference", "\n", "and", "abs", "(", "c", "-", "(", "b", "+", "offset", ")", ")", "<", "max_difference", "]", "\n", "potential_matches", ".", "sort", "(", ")", "\n", "matches", "=", "[", "]", "\n", "for", "_", ",", "_", ",", "a", ",", "b", ",", "c", "in", "potential_matches", ":", "\n", "        ", "if", "a", "in", "first_keys", "and", "b", "in", "second_keys", "and", "c", "in", "third_keys", ":", "\n", "            ", "first_keys", ".", "remove", "(", "a", ")", "\n", "second_keys", ".", "remove", "(", "b", ")", "\n", "third_keys", ".", "remove", "(", "c", ")", "\n", "matches", ".", "append", "(", "(", "a", ",", "b", ",", "c", ")", ")", "\n", "\n", "", "", "matches", ".", "sort", "(", ")", "\n", "return", "matches", "\n", "\n"]]}