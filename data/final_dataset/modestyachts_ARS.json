{"home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.__init__": [[14, 23], ["numpy.empty", "filter.get_filter"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.get_filter"], ["    ", "def", "__init__", "(", "self", ",", "policy_params", ")", ":", "\n", "\n", "        ", "self", ".", "ob_dim", "=", "policy_params", "[", "'ob_dim'", "]", "\n", "self", ".", "ac_dim", "=", "policy_params", "[", "'ac_dim'", "]", "\n", "self", ".", "weights", "=", "np", ".", "empty", "(", "0", ")", "\n", "\n", "# a filter for updating statistics of the observations and normalizing inputs to the policies", "\n", "self", ".", "observation_filter", "=", "get_filter", "(", "policy_params", "[", "'ob_filter'", "]", ",", "shape", "=", "(", "self", ".", "ob_dim", ",", ")", ")", "\n", "self", ".", "update_filter", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.update_weights": [[24, 27], ["None"], "methods", ["None"], ["", "def", "update_weights", "(", "self", ",", "new_weights", ")", ":", "\n", "        ", "self", ".", "weights", "[", ":", "]", "=", "new_weights", "[", ":", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.get_weights": [[28, 30], ["None"], "methods", ["None"], ["", "def", "get_weights", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.get_observation_filter": [[31, 33], ["None"], "methods", ["None"], ["", "def", "get_observation_filter", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "observation_filter", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.act": [[34, 36], ["None"], "methods", ["None"], ["", "def", "act", "(", "self", ",", "ob", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.copy": [[37, 39], ["None"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.LinearPolicy.__init__": [[45, 48], ["policies.Policy.__init__", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD.__init__"], ["def", "__init__", "(", "self", ",", "policy_params", ")", ":", "\n", "        ", "Policy", ".", "__init__", "(", "self", ",", "policy_params", ")", "\n", "self", ".", "weights", "=", "np", ".", "zeros", "(", "(", "self", ".", "ac_dim", ",", "self", ".", "ob_dim", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.LinearPolicy.act": [[49, 52], ["policies.LinearPolicy.observation_filter", "numpy.dot"], "methods", ["None"], ["", "def", "act", "(", "self", ",", "ob", ")", ":", "\n", "        ", "ob", "=", "self", ".", "observation_filter", "(", "ob", ",", "update", "=", "self", ".", "update_filter", ")", "\n", "return", "np", ".", "dot", "(", "self", ".", "weights", ",", "ob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.LinearPolicy.get_weights_plus_stats": [[53, 58], ["policies.LinearPolicy.observation_filter.get_stats", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.get_stats"], ["", "def", "get_weights_plus_stats", "(", "self", ")", ":", "\n", "\n", "        ", "mu", ",", "std", "=", "self", ".", "observation_filter", ".", "get_stats", "(", ")", "\n", "aux", "=", "np", ".", "asarray", "(", "[", "self", ".", "weights", ",", "mu", ",", "std", "]", ")", "\n", "return", "aux", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.__init__": [[27, 50], ["gym.make", "ars.Worker.env.seed", "shared_noise.SharedNoiseTable", "policies.LinearPolicy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "env_seed", ",", "\n", "env_name", "=", "''", ",", "\n", "policy_params", "=", "None", ",", "\n", "deltas", "=", "None", ",", "\n", "rollout_length", "=", "1000", ",", "\n", "delta_std", "=", "0.02", ")", ":", "\n", "\n", "# initialize OpenAI environment for each worker", "\n", "        ", "self", ".", "env", "=", "gym", ".", "make", "(", "env_name", ")", "\n", "self", ".", "env", ".", "seed", "(", "env_seed", ")", "\n", "\n", "# each worker gets access to the shared noise table", "\n", "# with independent random streams for sampling", "\n", "# from the shared noise table. ", "\n", "self", ".", "deltas", "=", "SharedNoiseTable", "(", "deltas", ",", "env_seed", "+", "7", ")", "\n", "self", ".", "policy_params", "=", "policy_params", "\n", "if", "policy_params", "[", "'type'", "]", "==", "'linear'", ":", "\n", "            ", "self", ".", "policy", "=", "LinearPolicy", "(", "policy_params", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "self", ".", "delta_std", "=", "delta_std", "\n", "self", ".", "rollout_length", "=", "rollout_length", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_weights_plus_stats": [[52, 58], ["ars.Worker.policy.get_weights_plus_stats"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_weights_plus_stats"], ["", "def", "get_weights_plus_stats", "(", "self", ")", ":", "\n", "        ", "\"\"\" \n        Get current policy weights and current statistics of past states.\n        \"\"\"", "\n", "assert", "self", ".", "policy_params", "[", "'type'", "]", "==", "'linear'", "\n", "return", "self", ".", "policy", ".", "get_weights_plus_stats", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.rollout": [[60, 82], ["ars.Worker.env.reset", "range", "ars.Worker.policy.act", "ars.Worker.env.step"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.LinearPolicy.act"], ["", "def", "rollout", "(", "self", ",", "shift", "=", "0.", ",", "rollout_length", "=", "None", ")", ":", "\n", "        ", "\"\"\" \n        Performs one rollout of maximum length rollout_length. \n        At each time-step it substracts shift from the reward.\n        \"\"\"", "\n", "\n", "if", "rollout_length", "is", "None", ":", "\n", "            ", "rollout_length", "=", "self", ".", "rollout_length", "\n", "\n", "", "total_reward", "=", "0.", "\n", "steps", "=", "0", "\n", "\n", "ob", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "for", "i", "in", "range", "(", "rollout_length", ")", ":", "\n", "            ", "action", "=", "self", ".", "policy", ".", "act", "(", "ob", ")", "\n", "ob", ",", "reward", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "steps", "+=", "1", "\n", "total_reward", "+=", "(", "reward", "-", "shift", ")", "\n", "if", "done", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "total_reward", ",", "steps", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.do_rollouts": [[83, 126], ["range", "ars.Worker.policy.update_weights", "deltas_idx.append", "ars.Worker.rollout", "rollout_rewards.append", "ars.Worker.deltas.get_delta", "deltas_idx.append", "ars.Worker.policy.update_weights", "ars.Worker.rollout", "ars.Worker.policy.update_weights", "ars.Worker.rollout", "rollout_rewards.append"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.update_weights", "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.rollout", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get_delta", "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.update_weights", "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.rollout", "home.repos.pwc.inspect_result.modestyachts_ARS.code.policies.Policy.update_weights", "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.rollout"], ["", "def", "do_rollouts", "(", "self", ",", "w_policy", ",", "num_rollouts", "=", "1", ",", "shift", "=", "1", ",", "evaluate", "=", "False", ")", ":", "\n", "        ", "\"\"\" \n        Generate multiple rollouts with a policy parametrized by w_policy.\n        \"\"\"", "\n", "\n", "rollout_rewards", ",", "deltas_idx", "=", "[", "]", ",", "[", "]", "\n", "steps", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "num_rollouts", ")", ":", "\n", "\n", "            ", "if", "evaluate", ":", "\n", "                ", "self", ".", "policy", ".", "update_weights", "(", "w_policy", ")", "\n", "deltas_idx", ".", "append", "(", "-", "1", ")", "\n", "\n", "# set to false so that evaluation rollouts are not used for updating state statistics", "\n", "self", ".", "policy", ".", "update_filter", "=", "False", "\n", "\n", "# for evaluation we do not shift the rewards (shift = 0) and we use the", "\n", "# default rollout length (1000 for the MuJoCo locomotion tasks)", "\n", "reward", ",", "r_steps", "=", "self", ".", "rollout", "(", "shift", "=", "0.", ",", "rollout_length", "=", "self", ".", "env", ".", "spec", ".", "timestep_limit", ")", "\n", "rollout_rewards", ".", "append", "(", "reward", ")", "\n", "\n", "", "else", ":", "\n", "                ", "idx", ",", "delta", "=", "self", ".", "deltas", ".", "get_delta", "(", "w_policy", ".", "size", ")", "\n", "\n", "delta", "=", "(", "self", ".", "delta_std", "*", "delta", ")", ".", "reshape", "(", "w_policy", ".", "shape", ")", "\n", "deltas_idx", ".", "append", "(", "idx", ")", "\n", "\n", "# set to true so that state statistics are updated ", "\n", "self", ".", "policy", ".", "update_filter", "=", "True", "\n", "\n", "# compute reward and number of timesteps used for positive perturbation rollout", "\n", "self", ".", "policy", ".", "update_weights", "(", "w_policy", "+", "delta", ")", "\n", "pos_reward", ",", "pos_steps", "=", "self", ".", "rollout", "(", "shift", "=", "shift", ")", "\n", "\n", "# compute reward and number of timesteps used for negative pertubation rollout", "\n", "self", ".", "policy", ".", "update_weights", "(", "w_policy", "-", "delta", ")", "\n", "neg_reward", ",", "neg_steps", "=", "self", ".", "rollout", "(", "shift", "=", "shift", ")", "\n", "steps", "+=", "pos_steps", "+", "neg_steps", "\n", "\n", "rollout_rewards", ".", "append", "(", "[", "pos_reward", ",", "neg_reward", "]", ")", "\n", "\n", "", "", "return", "{", "'deltas_idx'", ":", "deltas_idx", ",", "'rollout_rewards'", ":", "rollout_rewards", ",", "\"steps\"", ":", "steps", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.stats_increment": [[127, 130], ["ars.Worker.policy.observation_filter.stats_increment"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.stats_increment"], ["", "def", "stats_increment", "(", "self", ")", ":", "\n", "        ", "self", ".", "policy", ".", "observation_filter", ".", "stats_increment", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_weights": [[131, 133], ["ars.Worker.policy.get_weights"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_weights"], ["", "def", "get_weights", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "policy", ".", "get_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_filter": [[134, 136], ["None"], "methods", ["None"], ["", "def", "get_filter", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "policy", ".", "observation_filter", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.sync_filter": [[137, 140], ["ars.Worker.policy.observation_filter.sync"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.sync"], ["", "def", "sync_filter", "(", "self", ",", "other", ")", ":", "\n", "        ", "self", ".", "policy", ".", "observation_filter", ".", "sync", "(", "other", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.__init__": [[147, 207], ["logz.configure_output_dir", "logz.save_params", "gym.make", "float", "float", "print", "shared_noise.create_shared_noise.remote", "shared_noise.SharedNoiseTable", "print", "print", "optimizers.SGD", "print", "ray.get", "Worker.remote", "policies.LinearPolicy", "ars.ARSLearner.policy.get_weights", "range"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.configure_output_dir", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.save_params", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.Worker.get_weights"], ["def", "__init__", "(", "self", ",", "env_name", "=", "'HalfCheetah-v1'", ",", "\n", "policy_params", "=", "None", ",", "\n", "num_workers", "=", "32", ",", "\n", "num_deltas", "=", "320", ",", "\n", "deltas_used", "=", "320", ",", "\n", "delta_std", "=", "0.02", ",", "\n", "logdir", "=", "None", ",", "\n", "rollout_length", "=", "1000", ",", "\n", "step_size", "=", "0.01", ",", "\n", "shift", "=", "'constant zero'", ",", "\n", "params", "=", "None", ",", "\n", "seed", "=", "123", ")", ":", "\n", "\n", "        ", "logz", ".", "configure_output_dir", "(", "logdir", ")", "\n", "logz", ".", "save_params", "(", "params", ")", "\n", "\n", "env", "=", "gym", ".", "make", "(", "env_name", ")", "\n", "\n", "self", ".", "timesteps", "=", "0", "\n", "self", ".", "action_size", "=", "env", ".", "action_space", ".", "shape", "[", "0", "]", "\n", "self", ".", "ob_size", "=", "env", ".", "observation_space", ".", "shape", "[", "0", "]", "\n", "self", ".", "num_deltas", "=", "num_deltas", "\n", "self", ".", "deltas_used", "=", "deltas_used", "\n", "self", ".", "rollout_length", "=", "rollout_length", "\n", "self", ".", "step_size", "=", "step_size", "\n", "self", ".", "delta_std", "=", "delta_std", "\n", "self", ".", "logdir", "=", "logdir", "\n", "self", ".", "shift", "=", "shift", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "max_past_avg_reward", "=", "float", "(", "'-inf'", ")", "\n", "self", ".", "num_episodes_used", "=", "float", "(", "'inf'", ")", "\n", "\n", "\n", "# create shared table for storing noise", "\n", "print", "(", "\"Creating deltas table.\"", ")", "\n", "deltas_id", "=", "create_shared_noise", ".", "remote", "(", ")", "\n", "self", ".", "deltas", "=", "SharedNoiseTable", "(", "ray", ".", "get", "(", "deltas_id", ")", ",", "seed", "=", "seed", "+", "3", ")", "\n", "print", "(", "'Created deltas table.'", ")", "\n", "\n", "# initialize workers with different random seeds", "\n", "print", "(", "'Initializing workers.'", ")", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "workers", "=", "[", "Worker", ".", "remote", "(", "seed", "+", "7", "*", "i", ",", "\n", "env_name", "=", "env_name", ",", "\n", "policy_params", "=", "policy_params", ",", "\n", "deltas", "=", "deltas_id", ",", "\n", "rollout_length", "=", "rollout_length", ",", "\n", "delta_std", "=", "delta_std", ")", "for", "i", "in", "range", "(", "num_workers", ")", "]", "\n", "\n", "\n", "# initialize policy ", "\n", "if", "policy_params", "[", "'type'", "]", "==", "'linear'", ":", "\n", "            ", "self", ".", "policy", "=", "LinearPolicy", "(", "policy_params", ")", "\n", "self", ".", "w_policy", "=", "self", ".", "policy", ".", "get_weights", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# initialize optimization algorithm", "\n", "", "self", ".", "optimizer", "=", "optimizers", ".", "SGD", "(", "self", ".", "w_policy", ",", "self", ".", "step_size", ")", "\n", "print", "(", "\"Initialization of ARS complete.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.aggregate_rollouts": [[208, 286], ["ray.put", "time.time", "int", "ray.get", "ray.get", "numpy.array", "numpy.array", "print", "time.time", "print", "numpy.max", "numpy.std", "time.time", "utils.batched_weighted_sum", "time.time", "print", "worker.do_rollouts.remote", "worker.do_rollouts.remote", "numpy.array.max", "numpy.arange", "ars.ARSLearner.deltas.get", "numpy.percentile"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.std", "home.repos.pwc.inspect_result.modestyachts_ARS.code.utils.batched_weighted_sum", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get"], ["", "def", "aggregate_rollouts", "(", "self", ",", "num_rollouts", "=", "None", ",", "evaluate", "=", "False", ")", ":", "\n", "        ", "\"\"\" \n        Aggregate update step from rollouts generated in parallel.\n        \"\"\"", "\n", "\n", "if", "num_rollouts", "is", "None", ":", "\n", "            ", "num_deltas", "=", "self", ".", "num_deltas", "\n", "", "else", ":", "\n", "            ", "num_deltas", "=", "num_rollouts", "\n", "\n", "# put policy weights in the object store", "\n", "", "policy_id", "=", "ray", ".", "put", "(", "self", ".", "w_policy", ")", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "num_rollouts", "=", "int", "(", "num_deltas", "/", "self", ".", "num_workers", ")", "\n", "\n", "# parallel generation of rollouts", "\n", "rollout_ids_one", "=", "[", "worker", ".", "do_rollouts", ".", "remote", "(", "policy_id", ",", "\n", "num_rollouts", "=", "num_rollouts", ",", "\n", "shift", "=", "self", ".", "shift", ",", "\n", "evaluate", "=", "evaluate", ")", "for", "worker", "in", "self", ".", "workers", "]", "\n", "\n", "rollout_ids_two", "=", "[", "worker", ".", "do_rollouts", ".", "remote", "(", "policy_id", ",", "\n", "num_rollouts", "=", "1", ",", "\n", "shift", "=", "self", ".", "shift", ",", "\n", "evaluate", "=", "evaluate", ")", "for", "worker", "in", "self", ".", "workers", "[", ":", "(", "num_deltas", "%", "self", ".", "num_workers", ")", "]", "]", "\n", "\n", "# gather results ", "\n", "results_one", "=", "ray", ".", "get", "(", "rollout_ids_one", ")", "\n", "results_two", "=", "ray", ".", "get", "(", "rollout_ids_two", ")", "\n", "\n", "rollout_rewards", ",", "deltas_idx", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "result", "in", "results_one", ":", "\n", "            ", "if", "not", "evaluate", ":", "\n", "                ", "self", ".", "timesteps", "+=", "result", "[", "\"steps\"", "]", "\n", "", "deltas_idx", "+=", "result", "[", "'deltas_idx'", "]", "\n", "rollout_rewards", "+=", "result", "[", "'rollout_rewards'", "]", "\n", "\n", "", "for", "result", "in", "results_two", ":", "\n", "            ", "if", "not", "evaluate", ":", "\n", "                ", "self", ".", "timesteps", "+=", "result", "[", "\"steps\"", "]", "\n", "", "deltas_idx", "+=", "result", "[", "'deltas_idx'", "]", "\n", "rollout_rewards", "+=", "result", "[", "'rollout_rewards'", "]", "\n", "\n", "", "deltas_idx", "=", "np", ".", "array", "(", "deltas_idx", ")", "\n", "rollout_rewards", "=", "np", ".", "array", "(", "rollout_rewards", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "print", "(", "'Maximum reward of collected rollouts:'", ",", "rollout_rewards", ".", "max", "(", ")", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "\n", "print", "(", "'Time to generate rollouts:'", ",", "t2", "-", "t1", ")", "\n", "\n", "if", "evaluate", ":", "\n", "            ", "return", "rollout_rewards", "\n", "\n", "# select top performing directions if deltas_used < num_deltas", "\n", "", "max_rewards", "=", "np", ".", "max", "(", "rollout_rewards", ",", "axis", "=", "1", ")", "\n", "if", "self", ".", "deltas_used", ">", "self", ".", "num_deltas", ":", "\n", "            ", "self", ".", "deltas_used", "=", "self", ".", "num_deltas", "\n", "\n", "", "idx", "=", "np", ".", "arange", "(", "max_rewards", ".", "size", ")", "[", "max_rewards", ">=", "np", ".", "percentile", "(", "max_rewards", ",", "100", "*", "(", "1", "-", "(", "self", ".", "deltas_used", "/", "self", ".", "num_deltas", ")", ")", ")", "]", "\n", "deltas_idx", "=", "deltas_idx", "[", "idx", "]", "\n", "rollout_rewards", "=", "rollout_rewards", "[", "idx", ",", ":", "]", "\n", "\n", "# normalize rewards by their standard deviation", "\n", "rollout_rewards", "/=", "np", ".", "std", "(", "rollout_rewards", ")", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "# aggregate rollouts to form g_hat, the gradient used to compute SGD step", "\n", "g_hat", ",", "count", "=", "utils", ".", "batched_weighted_sum", "(", "rollout_rewards", "[", ":", ",", "0", "]", "-", "rollout_rewards", "[", ":", ",", "1", "]", ",", "\n", "(", "self", ".", "deltas", ".", "get", "(", "idx", ",", "self", ".", "w_policy", ".", "size", ")", "\n", "for", "idx", "in", "deltas_idx", ")", ",", "\n", "batch_size", "=", "500", ")", "\n", "g_hat", "/=", "deltas_idx", ".", "size", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'time to aggregate rollouts'", ",", "t2", "-", "t1", ")", "\n", "return", "g_hat", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.train_step": [[288, 297], ["ars.ARSLearner.aggregate_rollouts", "print", "ars.ARSLearner.optimizer._compute_step().reshape", "numpy.linalg.norm", "ars.ARSLearner.optimizer._compute_step"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.aggregate_rollouts", "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD._compute_step"], ["", "def", "train_step", "(", "self", ")", ":", "\n", "        ", "\"\"\" \n        Perform one update step of the policy weights.\n        \"\"\"", "\n", "\n", "g_hat", "=", "self", ".", "aggregate_rollouts", "(", ")", "\n", "print", "(", "\"Euclidean norm of update step:\"", ",", "np", ".", "linalg", ".", "norm", "(", "g_hat", ")", ")", "\n", "self", ".", "w_policy", "-=", "self", ".", "optimizer", ".", "_compute_step", "(", "g_hat", ")", ".", "reshape", "(", "self", ".", "w_policy", ".", "shape", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.train": [[298, 347], ["time.time", "range", "time.time", "ars.ARSLearner.train_step", "time.time", "print", "print", "time.time", "range", "ars.ARSLearner.policy.observation_filter.stats_increment", "ars.ARSLearner.policy.observation_filter.clear_buffer", "ray.put", "ray.get", "ray.get", "time.time", "print", "ars.ARSLearner.aggregate_rollouts", "ray.get", "numpy.savez", "print", "logz.log_tabular", "logz.log_tabular", "logz.log_tabular", "logz.log_tabular", "logz.log_tabular", "logz.log_tabular", "logz.log_tabular", "logz.dump_tabular", "ars.ARSLearner.policy.observation_filter.update", "worker.sync_filter.remote", "worker.stats_increment.remote", "ars.ARSLearner.workers[].get_weights_plus_stats.remote", "sorted", "numpy.mean", "numpy.std", "numpy.max", "numpy.min", "ray.get", "ars.ARSLearner.params.items", "time.time", "ars.ARSLearner.workers[].get_filter.remote"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.train_step", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.stats_increment", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.clear_buffer", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.aggregate_rollouts", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.dump_tabular", "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer.update", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.std", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get"], ["", "def", "train", "(", "self", ",", "num_iter", ")", ":", "\n", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "num_iter", ")", ":", "\n", "\n", "            ", "t1", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "train_step", "(", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'total time of one step'", ",", "t2", "-", "t1", ")", "\n", "print", "(", "'iter '", ",", "i", ",", "' done'", ")", "\n", "\n", "# record statistics every 10 iterations", "\n", "if", "(", "(", "i", "+", "1", ")", "%", "10", "==", "0", ")", ":", "\n", "\n", "                ", "rewards", "=", "self", ".", "aggregate_rollouts", "(", "num_rollouts", "=", "100", ",", "evaluate", "=", "True", ")", "\n", "w", "=", "ray", ".", "get", "(", "self", ".", "workers", "[", "0", "]", ".", "get_weights_plus_stats", ".", "remote", "(", ")", ")", "\n", "np", ".", "savez", "(", "self", ".", "logdir", "+", "\"/lin_policy_plus\"", ",", "w", ")", "\n", "\n", "print", "(", "sorted", "(", "self", ".", "params", ".", "items", "(", ")", ")", ")", "\n", "logz", ".", "log_tabular", "(", "\"Time\"", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "logz", ".", "log_tabular", "(", "\"Iteration\"", ",", "i", "+", "1", ")", "\n", "logz", ".", "log_tabular", "(", "\"AverageReward\"", ",", "np", ".", "mean", "(", "rewards", ")", ")", "\n", "logz", ".", "log_tabular", "(", "\"StdRewards\"", ",", "np", ".", "std", "(", "rewards", ")", ")", "\n", "logz", ".", "log_tabular", "(", "\"MaxRewardRollout\"", ",", "np", ".", "max", "(", "rewards", ")", ")", "\n", "logz", ".", "log_tabular", "(", "\"MinRewardRollout\"", ",", "np", ".", "min", "(", "rewards", ")", ")", "\n", "logz", ".", "log_tabular", "(", "\"timesteps\"", ",", "self", ".", "timesteps", ")", "\n", "logz", ".", "dump_tabular", "(", ")", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "# get statistics from all workers", "\n", "for", "j", "in", "range", "(", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "policy", ".", "observation_filter", ".", "update", "(", "ray", ".", "get", "(", "self", ".", "workers", "[", "j", "]", ".", "get_filter", ".", "remote", "(", ")", ")", ")", "\n", "", "self", ".", "policy", ".", "observation_filter", ".", "stats_increment", "(", ")", "\n", "\n", "# make sure master filter buffer is clear", "\n", "self", ".", "policy", ".", "observation_filter", ".", "clear_buffer", "(", ")", "\n", "# sync all workers", "\n", "filter_id", "=", "ray", ".", "put", "(", "self", ".", "policy", ".", "observation_filter", ")", "\n", "setting_filters_ids", "=", "[", "worker", ".", "sync_filter", ".", "remote", "(", "filter_id", ")", "for", "worker", "in", "self", ".", "workers", "]", "\n", "# waiting for sync of all workers", "\n", "ray", ".", "get", "(", "setting_filters_ids", ")", "\n", "\n", "increment_filters_ids", "=", "[", "worker", ".", "stats_increment", ".", "remote", "(", ")", "for", "worker", "in", "self", ".", "workers", "]", "\n", "# waiting for increment of all workers", "\n", "ray", ".", "get", "(", "increment_filters_ids", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Time to sync statistics:'", ",", "t2", "-", "t1", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.run_ars": [[348, 384], ["gym.make", "ars.ARSLearner", "ars.ARSLearner.train", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.ars.ARSLearner.train"], ["", "", "def", "run_ars", "(", "params", ")", ":", "\n", "\n", "    ", "dir_path", "=", "params", "[", "'dir_path'", "]", "\n", "\n", "if", "not", "(", "os", ".", "path", ".", "exists", "(", "dir_path", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "", "logdir", "=", "dir_path", "\n", "if", "not", "(", "os", ".", "path", ".", "exists", "(", "logdir", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "logdir", ")", "\n", "\n", "", "env", "=", "gym", ".", "make", "(", "params", "[", "'env_name'", "]", ")", "\n", "ob_dim", "=", "env", ".", "observation_space", ".", "shape", "[", "0", "]", "\n", "ac_dim", "=", "env", ".", "action_space", ".", "shape", "[", "0", "]", "\n", "\n", "# set policy parameters. Possible filters: 'MeanStdFilter' for v2, 'NoFilter' for v1.", "\n", "policy_params", "=", "{", "'type'", ":", "'linear'", ",", "\n", "'ob_filter'", ":", "params", "[", "'filter'", "]", ",", "\n", "'ob_dim'", ":", "ob_dim", ",", "\n", "'ac_dim'", ":", "ac_dim", "}", "\n", "\n", "ARS", "=", "ARSLearner", "(", "env_name", "=", "params", "[", "'env_name'", "]", ",", "\n", "policy_params", "=", "policy_params", ",", "\n", "num_workers", "=", "params", "[", "'n_workers'", "]", ",", "\n", "num_deltas", "=", "params", "[", "'n_directions'", "]", ",", "\n", "deltas_used", "=", "params", "[", "'deltas_used'", "]", ",", "\n", "step_size", "=", "params", "[", "'step_size'", "]", ",", "\n", "delta_std", "=", "params", "[", "'delta_std'", "]", ",", "\n", "logdir", "=", "logdir", ",", "\n", "rollout_length", "=", "params", "[", "'rollout_length'", "]", ",", "\n", "shift", "=", "params", "[", "'shift'", "]", ",", "\n", "params", "=", "params", ",", "\n", "seed", "=", "params", "[", "'seed'", "]", ")", "\n", "\n", "ARS", ".", "train", "(", "params", "[", "'n_iter'", "]", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.run_policy.main": [[11, 60], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "numpy.load", "gym.make", "range", "print", "print", "print", "print", "gym.make.reset", "returns.append", "numpy.mean", "numpy.std", "np.load.items", "numpy.dot", "observations.append", "actions.append", "gym.make.step", "gym.make.render", "print"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.std"], ["def", "main", "(", ")", ":", "\n", "    ", "import", "argparse", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'expert_policy_file'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'envname'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--render'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_rollouts'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "\n", "help", "=", "'Number of expert rollouts'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "print", "(", "'loading and building expert policy'", ")", "\n", "lin_policy", "=", "np", ".", "load", "(", "args", ".", "expert_policy_file", ")", "\n", "lin_policy", "=", "lin_policy", ".", "items", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "\n", "M", "=", "lin_policy", "[", "0", "]", "\n", "# mean and std of state vectors estimated online by ARS. ", "\n", "mean", "=", "lin_policy", "[", "1", "]", "\n", "std", "=", "lin_policy", "[", "2", "]", "\n", "\n", "env", "=", "gym", ".", "make", "(", "args", ".", "envname", ")", "\n", "\n", "returns", "=", "[", "]", "\n", "observations", "=", "[", "]", "\n", "actions", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "num_rollouts", ")", ":", "\n", "        ", "print", "(", "'iter'", ",", "i", ")", "\n", "obs", "=", "env", ".", "reset", "(", ")", "\n", "done", "=", "False", "\n", "totalr", "=", "0.", "\n", "steps", "=", "0", "\n", "while", "not", "done", ":", "\n", "            ", "action", "=", "np", ".", "dot", "(", "M", ",", "(", "obs", "-", "mean", ")", "/", "std", ")", "\n", "observations", ".", "append", "(", "obs", ")", "\n", "actions", ".", "append", "(", "action", ")", "\n", "\n", "\n", "obs", ",", "r", ",", "done", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "totalr", "+=", "r", "\n", "steps", "+=", "1", "\n", "if", "args", ".", "render", ":", "\n", "                ", "env", ".", "render", "(", ")", "\n", "", "if", "steps", "%", "100", "==", "0", ":", "print", "(", "\"%i/%i\"", "%", "(", "steps", ",", "env", ".", "spec", ".", "timestep_limit", ")", ")", "\n", "if", "steps", ">=", "env", ".", "spec", ".", "timestep_limit", ":", "\n", "                ", "break", "\n", "", "", "returns", ".", "append", "(", "totalr", ")", "\n", "\n", "", "print", "(", "'returns'", ",", "returns", ")", "\n", "print", "(", "'mean return'", ",", "np", ".", "mean", "(", "returns", ")", ")", "\n", "print", "(", "'std of return'", ",", "np", ".", "std", "(", "returns", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env.__init__": [[9, 29], ["numpy.array", "numpy.eye", "numpy.eye", "gym.spaces.Box", "gym.spaces.Box", "numpy.random.normal", "lqr_env.LQR_Env._seed", "numpy.eye", "float", "float"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._seed"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "viewer", "=", "None", "\n", "\n", "self", ".", "A", "=", "np", ".", "array", "(", "[", "[", "1.01", ",", "0.01", ",", "0.0", "]", ",", "[", "0.01", ",", "1.01", ",", "0.01", "]", ",", "[", "0.", ",", "0.01", ",", "1.01", "]", "]", ")", "\n", "self", ".", "B", "=", "np", ".", "eye", "(", "3", ")", "\n", "\n", "self", ".", "d", ",", "self", ".", "p", "=", "self", ".", "B", ".", "shape", "\n", "\n", "self", ".", "R", "=", "np", ".", "eye", "(", "self", ".", "p", ")", "\n", "self", ".", "Q", "=", "np", ".", "eye", "(", "self", ".", "d", ")", "/", "1000", "\n", "\n", "self", ".", "time", "=", "0", "\n", "\n", "self", ".", "action_space", "=", "spaces", ".", "Box", "(", "low", "=", "-", "1e+8", ",", "high", "=", "1e+8", ",", "shape", "=", "(", "self", ".", "p", ",", ")", ")", "\n", "self", ".", "observation_space", "=", "spaces", ".", "Box", "(", "low", "=", "-", "float", "(", "'inf'", ")", ",", "high", "=", "float", "(", "'inf'", ")", ",", "shape", "=", "(", "self", ".", "d", ",", ")", ")", "\n", "\n", "self", ".", "state", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "self", ".", "d", ")", "\n", "\n", "self", ".", "_seed", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._seed": [[31, 34], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "_seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._step": [[35, 51], ["numpy.dot", "numpy.dot", "lqr_env.LQR_Env.np_random.normal", "lqr_env.LQR_Env._get_obs", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._get_obs"], ["", "def", "_step", "(", "self", ",", "u", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "state", "\n", "\n", "cost", "=", "np", ".", "dot", "(", "x", ",", "np", ".", "dot", "(", "self", ".", "Q", ",", "x", ")", ")", "+", "np", ".", "dot", "(", "u", ",", "np", ".", "dot", "(", "self", ".", "R", ",", "u", ")", ")", "\n", "new_x", "=", "np", ".", "dot", "(", "self", ".", "A", ",", "x", ")", "+", "np", ".", "dot", "(", "self", ".", "B", ",", "u", ")", "+", "self", ".", "np_random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "self", ".", "d", ")", "\n", "\n", "self", ".", "state", "=", "new_x", "\n", "\n", "terminated", "=", "False", "\n", "if", "self", ".", "time", ">", "300", ":", "\n", "            ", "terminated", "=", "True", "\n", "\n", "", "self", ".", "time", "+=", "1", "\n", "\n", "return", "self", ".", "_get_obs", "(", ")", ",", "-", "cost", ",", "terminated", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._reset": [[52, 58], ["lqr_env.LQR_Env.np_random.normal", "lqr_env.LQR_Env._get_obs"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._get_obs"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "self", ".", "np_random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "self", ".", "d", ")", "\n", "self", ".", "last_u", "=", "None", "\n", "self", ".", "time", "=", "0", "\n", "\n", "return", "self", ".", "_get_obs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env._get_obs": [[59, 61], ["None"], "methods", ["None"], ["", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.lqr_env.LQR_Env.get_params": [[62, 64], ["None"], "methods", ["None"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "A", ",", "self", ".", "B", ",", "self", ".", "Q", ",", "self", ".", "R", "\n", "", "", ""]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.__init__": [[21, 26], ["numpy.random.RandomState"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "noise", ",", "seed", "=", "11", ")", ":", "\n", "\n", "        ", "self", ".", "rg", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "self", ".", "noise", "=", "noise", "\n", "assert", "self", ".", "noise", ".", "dtype", "==", "np", ".", "float64", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get": [[27, 29], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "i", ",", "dim", ")", ":", "\n", "        ", "return", "self", ".", "noise", "[", "i", ":", "i", "+", "dim", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.sample_index": [[30, 32], ["shared_noise.SharedNoiseTable.rg.randint", "len"], "methods", ["None"], ["", "def", "sample_index", "(", "self", ",", "dim", ")", ":", "\n", "        ", "return", "self", ".", "rg", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "noise", ")", "-", "dim", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get_delta": [[33, 36], ["shared_noise.SharedNoiseTable.sample_index", "shared_noise.SharedNoiseTable.get"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.sample_index", "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get"], ["", "def", "get_delta", "(", "self", ",", "dim", ")", ":", "\n", "        ", "idx", "=", "self", ".", "sample_index", "(", "dim", ")", "\n", "return", "idx", ",", "self", ".", "get", "(", "idx", ",", "dim", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.create_shared_noise": [[7, 18], ["numpy.random.RandomState().randn().astype", "numpy.random.RandomState().randn", "numpy.random.RandomState"], "function", ["None"], ["@", "ray", ".", "remote", "\n", "def", "create_shared_noise", "(", ")", ":", "\n", "    ", "\"\"\"\n    Create a large array of noise to be shared by all workers. Used \n    for avoiding the communication of the random perturbations delta.\n    \"\"\"", "\n", "\n", "seed", "=", "12345", "\n", "count", "=", "250000000", "\n", "noise", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", ".", "randn", "(", "count", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.colorize": [[30, 37], ["attr.append", "str", "attr.append"], "function", ["None"], ["def", "colorize", "(", "string", ",", "color", ",", "bold", "=", "False", ",", "highlight", "=", "False", ")", ":", "\n", "    ", "attr", "=", "[", "]", "\n", "num", "=", "color2num", "[", "color", "]", "\n", "if", "highlight", ":", "num", "+=", "10", "\n", "attr", ".", "append", "(", "str", "(", "num", ")", ")", "\n", "if", "bold", ":", "attr", ".", "append", "(", "'1'", ")", "\n", "return", "'\\x1b[%sm%s\\x1b[0m'", "%", "(", "';'", ".", "join", "(", "attr", ")", ",", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.configure_output_dir": [[45, 59], ["open", "atexit.register", "print", "os.exists", "os.makedirs", "os.makedirs", "os.join", "logz.colorize", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.colorize"], ["", "def", "configure_output_dir", "(", "d", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Set output directory to d, or to /tmp/somerandomnumber if d is None\n    \"\"\"", "\n", "G", ".", "first_row", "=", "True", "\n", "G", ".", "log_headers", "=", "[", "]", "\n", "G", ".", "log_current_row", "=", "{", "}", "\n", "\n", "G", ".", "output_dir", "=", "d", "or", "\"/tmp/experiments/%i\"", "%", "int", "(", "time", ".", "time", "(", ")", ")", "\n", "if", "not", "osp", ".", "exists", "(", "G", ".", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "G", ".", "output_dir", ")", "\n", "", "G", ".", "output_file", "=", "open", "(", "osp", ".", "join", "(", "G", ".", "output_dir", ",", "\"log.txt\"", ")", ",", "'w'", ")", "\n", "atexit", ".", "register", "(", "G", ".", "output_file", ".", "close", ")", "\n", "print", "(", "colorize", "(", "\"Logging data to %s\"", "%", "G", ".", "output_file", ".", "name", ",", "'green'", ",", "bold", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.log_tabular": [[60, 71], ["G.log_headers.append"], "function", ["None"], ["", "def", "log_tabular", "(", "key", ",", "val", ")", ":", "\n", "    ", "\"\"\"\n    Log a value of some diagnostic\n    Call this once for each diagnostic quantity, each iteration\n    \"\"\"", "\n", "if", "G", ".", "first_row", ":", "\n", "        ", "G", ".", "log_headers", ".", "append", "(", "key", ")", "\n", "", "else", ":", "\n", "        ", "assert", "key", "in", "G", ".", "log_headers", ",", "\"Trying to introduce a new key %s that you didn't include in the first iteration\"", "%", "key", "\n", "", "assert", "key", "not", "in", "G", ".", "log_current_row", ",", "\"You already set %s this iteration. Maybe you forgot to call dump_tabular()\"", "%", "key", "\n", "G", ".", "log_current_row", "[", "key", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.save_params": [[73, 76], ["open", "out.write", "os.join", "json.dumps"], "function", ["None"], ["", "def", "save_params", "(", "params", ")", ":", "\n", "    ", "with", "open", "(", "osp", ".", "join", "(", "G", ".", "output_dir", ",", "\"params.json\"", ")", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "out", ".", "write", "(", "json", ".", "dumps", "(", "params", ",", "separators", "=", "(", "',\\n'", ",", "'\\t:\\t'", ")", ",", "sort_keys", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.logz.dump_tabular": [[78, 105], ["max", "print", "print", "G.log_current_row.clear", "len", "max", "G.log_current_row.get", "hasattr", "print", "vals.append", "G.output_file.write", "G.output_file.write", "G.output_file.flush", "G.output_file.write", "G.output_file.write", "map"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.shared_noise.SharedNoiseTable.get"], ["", "", "def", "dump_tabular", "(", ")", ":", "\n", "    ", "\"\"\"\n    Write all of the diagnostics from the current iteration\n    \"\"\"", "\n", "vals", "=", "[", "]", "\n", "key_lens", "=", "[", "len", "(", "key", ")", "for", "key", "in", "G", ".", "log_headers", "]", "\n", "max_key_len", "=", "max", "(", "15", ",", "max", "(", "key_lens", ")", ")", "\n", "keystr", "=", "'%'", "+", "'%d'", "%", "max_key_len", "\n", "fmt", "=", "\"| \"", "+", "keystr", "+", "\"s | %15s |\"", "\n", "n_slashes", "=", "22", "+", "max_key_len", "\n", "print", "(", "\"-\"", "*", "n_slashes", ")", "\n", "for", "key", "in", "G", ".", "log_headers", ":", "\n", "        ", "val", "=", "G", ".", "log_current_row", ".", "get", "(", "key", ",", "\"\"", ")", "\n", "if", "hasattr", "(", "val", ",", "\"__float__\"", ")", ":", "valstr", "=", "\"%8.3g\"", "%", "val", "\n", "else", ":", "valstr", "=", "val", "\n", "print", "(", "fmt", "%", "(", "key", ",", "valstr", ")", ")", "\n", "vals", ".", "append", "(", "val", ")", "\n", "", "print", "(", "\"-\"", "*", "n_slashes", ")", "\n", "if", "G", ".", "output_file", "is", "not", "None", ":", "\n", "        ", "if", "G", ".", "first_row", ":", "\n", "            ", "G", ".", "output_file", ".", "write", "(", "\"\\t\"", ".", "join", "(", "G", ".", "log_headers", ")", ")", "\n", "G", ".", "output_file", ".", "write", "(", "\"\\n\"", ")", "\n", "", "G", ".", "output_file", ".", "write", "(", "\"\\t\"", ".", "join", "(", "map", "(", "str", ",", "vals", ")", ")", ")", "\n", "G", ".", "output_file", ".", "write", "(", "\"\\n\"", ")", "\n", "G", ".", "output_file", ".", "flush", "(", ")", "\n", "", "G", ".", "log_current_row", ".", "clear", "(", ")", "\n", "G", ".", "first_row", "=", "False", "\n", "", ""]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.utils.itergroups": [[6, 16], ["group.append", "len", "tuple", "tuple"], "function", ["None"], ["def", "itergroups", "(", "items", ",", "group_size", ")", ":", "\n", "    ", "assert", "group_size", ">=", "1", "\n", "group", "=", "[", "]", "\n", "for", "x", "in", "items", ":", "\n", "        ", "group", ".", "append", "(", "x", ")", "\n", "if", "len", "(", "group", ")", "==", "group_size", ":", "\n", "            ", "yield", "tuple", "(", "group", ")", "\n", "del", "group", "[", ":", "]", "\n", "", "", "if", "group", ":", "\n", "        ", "yield", "tuple", "(", "group", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.utils.batched_weighted_sum": [[19, 29], ["zip", "utils.itergroups", "utils.itergroups", "numpy.dot", "len", "len", "len", "numpy.asarray", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.utils.itergroups", "home.repos.pwc.inspect_result.modestyachts_ARS.code.utils.itergroups"], ["", "", "def", "batched_weighted_sum", "(", "weights", ",", "vecs", ",", "batch_size", ")", ":", "\n", "    ", "total", "=", "0", "\n", "num_items_summed", "=", "0", "\n", "for", "batch_weights", ",", "batch_vecs", "in", "zip", "(", "itergroups", "(", "weights", ",", "batch_size", ")", ",", "\n", "itergroups", "(", "vecs", ",", "batch_size", ")", ")", ":", "\n", "        ", "assert", "len", "(", "batch_weights", ")", "==", "len", "(", "batch_vecs", ")", "<=", "batch_size", "\n", "total", "+=", "np", ".", "dot", "(", "np", ".", "asarray", "(", "batch_weights", ",", "dtype", "=", "np", ".", "float64", ")", ",", "\n", "np", ".", "asarray", "(", "batch_vecs", ",", "dtype", "=", "np", ".", "float64", ")", ")", "\n", "num_items_summed", "+=", "len", "(", "batch_weights", ")", "\n", "", "return", "total", ",", "num_items_summed", "\n", "", ""]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.Filter.update": [[15, 18], ["None"], "methods", ["None"], ["def", "update", "(", "self", ",", "other", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Updates self with \"new state\" from other filter.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.Filter.copy": [[19, 25], ["None"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "\"\"\"Creates a new object with same state as self.\n\n        Returns:\n            copy (Filter): Copy of self\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.Filter.sync": [[26, 29], ["None"], "methods", ["None"], ["", "def", "sync", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"Copies all state from other filter to self.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.__init__": [[32, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.__call__": [[35, 37], ["numpy.asarray"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ",", "update", "=", "True", ")", ":", "\n", "        ", "return", "np", ".", "asarray", "(", "x", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.update": [[38, 40], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "other", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.copy": [[41, 43], ["None"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.sync": [[44, 46], ["None"], "methods", ["None"], ["", "def", "sync", "(", "self", ",", "other", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.stats_increment": [[47, 49], ["None"], "methods", ["None"], ["", "def", "stats_increment", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.clear_buffer": [[50, 52], ["None"], "methods", ["None"], ["", "def", "clear_buffer", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.get_stats": [[53, 55], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "0", ",", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.mean": [[56, 59], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mean", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.var": [[60, 63], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "var", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.NoFilter.std": [[64, 67], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "std", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.__init__": [[73, 78], ["numpy.zeros", "numpy.zeros", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shape", "=", "None", ")", ":", "\n", "        ", "self", ".", "_n", "=", "0", "\n", "self", ".", "_M", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "self", ".", "_S", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "self", ".", "_M2", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.copy": [[79, 85], ["filter.RunningStat", "numpy.copy", "numpy.copy"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "other", "=", "RunningStat", "(", ")", "\n", "other", ".", "_n", "=", "self", ".", "_n", "\n", "other", ".", "_M", "=", "np", ".", "copy", "(", "self", ".", "_M", ")", "\n", "other", ".", "_S", "=", "np", ".", "copy", "(", "self", ".", "_S", ")", "\n", "return", "other", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push": [[86, 100], ["numpy.asarray", "numpy.square"], "methods", ["None"], ["", "def", "push", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "# Unvectorized update of the running statistics.", "\n", "assert", "x", ".", "shape", "==", "self", ".", "_M", ".", "shape", ",", "(", "\"x.shape = {}, self.shape = {}\"", "\n", ".", "format", "(", "x", ".", "shape", ",", "self", ".", "_M", ".", "shape", ")", ")", "\n", "n1", "=", "self", ".", "_n", "\n", "self", ".", "_n", "+=", "1", "\n", "if", "self", ".", "_n", "==", "1", ":", "\n", "            ", "self", ".", "_M", "[", "...", "]", "=", "x", "\n", "", "else", ":", "\n", "            ", "delta", "=", "x", "-", "self", ".", "_M", "\n", "deltaM2", "=", "np", ".", "square", "(", "x", ")", "-", "self", ".", "_M2", "\n", "self", ".", "_M", "[", "...", "]", "+=", "delta", "/", "self", ".", "_n", "\n", "self", ".", "_S", "[", "...", "]", "+=", "delta", "*", "delta", "*", "n1", "/", "self", ".", "_n", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.update": [[102, 113], ["None"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "other", ")", ":", "\n", "        ", "n1", "=", "self", ".", "_n", "\n", "n2", "=", "other", ".", "_n", "\n", "n", "=", "n1", "+", "n2", "\n", "delta", "=", "self", ".", "_M", "-", "other", ".", "_M", "\n", "delta2", "=", "delta", "*", "delta", "\n", "M", "=", "(", "n1", "*", "self", ".", "_M", "+", "n2", "*", "other", ".", "_M", ")", "/", "n", "\n", "S", "=", "self", ".", "_S", "+", "other", ".", "_S", "+", "delta2", "*", "n1", "*", "n2", "/", "n", "\n", "self", ".", "_n", "=", "n", "\n", "self", ".", "_M", "=", "M", "\n", "self", ".", "_S", "=", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.__repr__": [[114, 117], ["numpy.mean", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'(n={}, mean_mean={}, mean_std={})'", ".", "format", "(", "\n", "self", ".", "n", ",", "np", ".", "mean", "(", "self", ".", "mean", ")", ",", "np", ".", "mean", "(", "self", ".", "std", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.n": [[118, 121], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_n", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean": [[122, 125], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mean", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_M", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.var": [[126, 129], ["numpy.square"], "methods", ["None"], ["", "@", "property", "\n", "def", "var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_S", "/", "(", "self", ".", "_n", "-", "1", ")", "if", "self", ".", "_n", ">", "1", "else", "np", ".", "square", "(", "self", ".", "_M", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.std": [[130, 133], ["numpy.sqrt"], "methods", ["None"], ["", "@", "property", "\n", "def", "std", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "sqrt", "(", "self", ".", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.shape": [[134, 137], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "shape", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_M", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.__init__": [[142, 155], ["filter.RunningStat", "filter.RunningStat", "numpy.zeros", "numpy.ones"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "shape", ",", "demean", "=", "True", ",", "destd", "=", "True", ")", ":", "\n", "        ", "self", ".", "shape", "=", "shape", "\n", "self", ".", "demean", "=", "demean", "\n", "self", ".", "destd", "=", "destd", "\n", "self", ".", "rs", "=", "RunningStat", "(", "shape", ")", "\n", "# In distributed rollouts, each worker sees different states.", "\n", "# The buffer is used to keep track of deltas amongst all the", "\n", "# observation filters.", "\n", "\n", "self", ".", "buffer", "=", "RunningStat", "(", "shape", ")", "\n", "\n", "self", ".", "mean", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "self", ".", "std", "=", "np", ".", "ones", "(", "shape", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.clear_buffer": [[156, 159], ["filter.RunningStat"], "methods", ["None"], ["", "def", "clear_buffer", "(", "self", ")", ":", "\n", "        ", "self", ".", "buffer", "=", "RunningStat", "(", "self", ".", "shape", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.update": [[160, 174], ["filter.MeanStdFilter.rs.update", "other.buffer.copy"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer.update", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy"], ["", "def", "update", "(", "self", ",", "other", ",", "copy_buffer", "=", "False", ")", ":", "\n", "        ", "\"\"\"Takes another filter and only applies the information from the\n        buffer.\n\n        Using notation `F(state, buffer)`\n        Given `Filter1(x1, y1)` and `Filter2(x2, yt)`,\n        `update` modifies `Filter1` to `Filter1(x1 + yt, y1)`\n        If `copy_buffer`, then `Filter1` is modified to\n        `Filter1(x1 + yt, yt)`.\n        \"\"\"", "\n", "self", ".", "rs", ".", "update", "(", "other", ".", "buffer", ")", "\n", "if", "copy_buffer", ":", "\n", "            ", "self", ".", "buffer", "=", "other", ".", "buffer", ".", "copy", "(", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy": [[175, 183], ["filter.MeanStdFilter", "filter.MeanStdFilter.rs.copy", "filter.MeanStdFilter.buffer.copy"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns a copy of Filter.\"\"\"", "\n", "other", "=", "MeanStdFilter", "(", "self", ".", "shape", ")", "\n", "other", ".", "demean", "=", "self", ".", "demean", "\n", "other", ".", "destd", "=", "self", ".", "destd", "\n", "other", ".", "rs", "=", "self", ".", "rs", ".", "copy", "(", ")", "\n", "other", ".", "buffer", "=", "self", ".", "buffer", ".", "copy", "(", ")", "\n", "return", "other", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.sync": [[184, 197], ["other.rs.copy", "other.buffer.copy"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.copy"], ["", "def", "sync", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"Syncs all fields together from other filter.\n\n        Using notation `F(state, buffer)`\n        Given `Filter1(x1, y1)` and `Filter2(x2, yt)`,\n        `sync` modifies `Filter1` to `Filter1(x2, yt)`\n        \"\"\"", "\n", "assert", "other", ".", "shape", "==", "self", ".", "shape", ",", "\"Shapes don't match!\"", "\n", "self", ".", "demean", "=", "other", ".", "demean", "\n", "self", ".", "destd", "=", "other", ".", "destd", "\n", "self", ".", "rs", "=", "other", ".", "rs", ".", "copy", "(", ")", "\n", "self", ".", "buffer", "=", "other", ".", "buffer", ".", "copy", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.__call__": [[198, 215], ["numpy.asarray", "len", "range", "filter.MeanStdFilter.rs.push", "filter.MeanStdFilter.buffer.push", "len", "filter.MeanStdFilter.rs.push", "filter.MeanStdFilter.buffer.push"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push"], ["", "def", "__call__", "(", "self", ",", "x", ",", "update", "=", "True", ")", ":", "\n", "        ", "x", "=", "np", ".", "asarray", "(", "x", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "if", "update", ":", "\n", "            ", "if", "len", "(", "x", ".", "shape", ")", "==", "len", "(", "self", ".", "rs", ".", "shape", ")", "+", "1", ":", "\n", "# The vectorized case.", "\n", "                ", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "self", ".", "rs", ".", "push", "(", "x", "[", "i", "]", ")", "\n", "self", ".", "buffer", ".", "push", "(", "x", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "# The unvectorized case.", "\n", "                ", "self", ".", "rs", ".", "push", "(", "x", ")", "\n", "self", ".", "buffer", ".", "push", "(", "x", ")", "\n", "", "", "if", "self", ".", "demean", ":", "\n", "            ", "x", "=", "x", "-", "self", ".", "mean", "\n", "", "if", "self", ".", "destd", ":", "\n", "            ", "x", "=", "x", "/", "(", "self", ".", "std", "+", "1e-8", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.stats_increment": [[216, 225], ["float"], "methods", ["None"], ["", "def", "stats_increment", "(", "self", ")", ":", "\n", "        ", "self", ".", "mean", "=", "self", ".", "rs", ".", "mean", "\n", "self", ".", "std", "=", "self", ".", "rs", ".", "std", "\n", "\n", "# Set values for std less than 1e-7 to +inf to avoid ", "\n", "# dividing by zero. State elements with zero variance", "\n", "# are set to zero as a result. ", "\n", "self", ".", "std", "[", "self", ".", "std", "<", "1e-7", "]", "=", "float", "(", "\"inf\"", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.get_stats": [[226, 228], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "rs", ".", "mean", ",", "(", "self", ".", "rs", ".", "std", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.MeanStdFilter.__repr__": [[229, 233], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'MeanStdFilter({}, {}, {}, {}, {}, {})'", ".", "format", "(", "\n", "self", ".", "shape", ",", "self", ".", "demean", ",", "\n", "self", ".", "rs", ",", "self", ".", "buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.get_filter": [[235, 243], ["filter.MeanStdFilter", "filter.NoFilter", "Exception", "str"], "function", ["None"], ["", "", "def", "get_filter", "(", "filter_config", ",", "shape", "=", "None", ")", ":", "\n", "    ", "if", "filter_config", "==", "\"MeanStdFilter\"", ":", "\n", "        ", "return", "MeanStdFilter", "(", "shape", ")", "\n", "", "elif", "filter_config", "==", "\"NoFilter\"", ":", "\n", "        ", "return", "NoFilter", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown observation_filter: \"", "+", "\n", "str", "(", "filter_config", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.test_running_stat": [[245, 257], ["filter.RunningStat", "range", "numpy.random.randn", "filter.RunningStat.push", "li.append", "numpy.mean", "numpy.allclose", "numpy.allclose", "numpy.square", "numpy.var", "len"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.mean", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.var"], ["", "", "def", "test_running_stat", "(", ")", ":", "\n", "    ", "for", "shp", "in", "(", "(", ")", ",", "(", "3", ",", ")", ",", "(", "3", ",", "4", ")", ")", ":", "\n", "        ", "li", "=", "[", "]", "\n", "rs", "=", "RunningStat", "(", "shp", ")", "\n", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "            ", "val", "=", "np", ".", "random", ".", "randn", "(", "*", "shp", ")", "\n", "rs", ".", "push", "(", "val", ")", "\n", "li", ".", "append", "(", "val", ")", "\n", "m", "=", "np", ".", "mean", "(", "li", ",", "axis", "=", "0", ")", "\n", "assert", "np", ".", "allclose", "(", "rs", ".", "mean", ",", "m", ")", "\n", "v", "=", "np", ".", "square", "(", "m", ")", "if", "(", "len", "(", "li", ")", "==", "1", ")", "else", "np", ".", "var", "(", "li", ",", "ddof", "=", "1", ",", "axis", "=", "0", ")", "\n", "assert", "np", ".", "allclose", "(", "rs", ".", "var", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.test_combining_stat": [[259, 277], ["filter.RunningStat", "filter.RunningStat", "filter.RunningStat", "range", "range", "filter.RunningStat.update", "numpy.allclose", "numpy.allclose", "numpy.random.randn", "filter.RunningStat.push", "filter.RunningStat.push", "li.append", "filter.RunningStat.push", "filter.RunningStat.push", "li.append"], "function", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer.update", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push", "home.repos.pwc.inspect_result.modestyachts_ARS.code.filter.RunningStat.push"], ["", "", "", "def", "test_combining_stat", "(", ")", ":", "\n", "    ", "for", "shape", "in", "[", "(", ")", ",", "(", "3", ",", ")", ",", "(", "3", ",", "4", ")", "]", ":", "\n", "        ", "li", "=", "[", "]", "\n", "rs1", "=", "RunningStat", "(", "shape", ")", "\n", "rs2", "=", "RunningStat", "(", "shape", ")", "\n", "rs", "=", "RunningStat", "(", "shape", ")", "\n", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "            ", "val", "=", "np", ".", "random", ".", "randn", "(", "*", "shape", ")", "\n", "rs1", ".", "push", "(", "val", ")", "\n", "rs", ".", "push", "(", "val", ")", "\n", "li", ".", "append", "(", "val", ")", "\n", "", "for", "_", "in", "range", "(", "9", ")", ":", "\n", "            ", "rs2", ".", "push", "(", "val", ")", "\n", "rs", ".", "push", "(", "val", ")", "\n", "li", ".", "append", "(", "val", ")", "\n", "", "rs1", ".", "update", "(", "rs2", ")", "\n", "assert", "np", ".", "allclose", "(", "rs", ".", "mean", ",", "rs1", ".", "mean", ")", "\n", "assert", "np", ".", "allclose", "(", "rs", ".", "std", ",", "rs1", ".", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer.__init__": [[12, 16], ["w_policy.flatten"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "w_policy", ")", ":", "\n", "        ", "self", ".", "w_policy", "=", "w_policy", ".", "flatten", "(", ")", "\n", "self", ".", "dim", "=", "w_policy", ".", "size", "\n", "self", ".", "t", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer.update": [[17, 22], ["optimizers.Optimizer._compute_step", "numpy.linalg.norm", "numpy.linalg.norm"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD._compute_step"], ["", "def", "update", "(", "self", ",", "globalg", ")", ":", "\n", "        ", "self", ".", "t", "+=", "1", "\n", "step", "=", "self", ".", "_compute_step", "(", "globalg", ")", "\n", "ratio", "=", "np", ".", "linalg", ".", "norm", "(", "step", ")", "/", "(", "np", ".", "linalg", ".", "norm", "(", "self", ".", "w_policy", ")", "+", "1e-5", ")", "\n", "return", "self", ".", "w_policy", "+", "step", ",", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.Optimizer._compute_step": [[23, 25], ["None"], "methods", ["None"], ["", "def", "_compute_step", "(", "self", ",", "globalg", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD.__init__": [[28, 31], ["optimizers.Optimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pi", ",", "stepsize", ")", ":", "\n", "        ", "Optimizer", ".", "__init__", "(", "self", ",", "pi", ")", "\n", "self", ".", "stepsize", "=", "stepsize", "\n", "\n"]], "home.repos.pwc.inspect_result.modestyachts_ARS.code.optimizers.SGD._compute_step": [[32, 35], ["None"], "methods", ["None"], ["", "def", "_compute_step", "(", "self", ",", "globalg", ")", ":", "\n", "        ", "step", "=", "-", "self", ".", "stepsize", "*", "globalg", "\n", "return", "step", "\n", "\n"]]}