{"home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.conv": [[9, 25], ["tensorflow.layers.conv2d", "tensorflow.zeros_initializer", "tensorflow.random_normal_initializer"], "function", ["None"], ["def", "conv", "(", "inputs", ",", "filters", ",", "kernel_size", ",", "strides", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "'SAME'", ",", "dilation_rate", "=", "(", "1", ",", "1", ")", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "use_bias", "=", "None", ",", "regularizer", "=", "None", ",", "name", "=", "None", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "out", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "inputs", ",", "\n", "filters", "=", "filters", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation_rate", "=", "dilation_rate", ",", "\n", "activation", "=", "activation", ",", "\n", "use_bias", "=", "use_bias", ",", "\n", "kernel_regularizer", "=", "regularizer", ",", "\n", "bias_initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ",", "\n", "kernel_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.1", ")", ",", "\n", "name", "=", "name", ",", "\n", "reuse", "=", "reuse", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.batch": [[30, 33], ["tensorflow.layers.batch_normalization"], "function", ["None"], ["", "def", "batch", "(", "inputs", ",", "training", "=", "True", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'n'", ")", ":", "\n", "    ", "out", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", ",", "training", "=", "training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "name", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.branch1": [[38, 47], ["tensorflow.contrib.layers.l2_regularizer", "tensorflow.variable_scope", "sfn.conv", "tensorflow.nn.relu", "tensorflow.variable_scope", "sfn.conv", "sfn.batch", "sfn.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "branch1", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "momentum", "=", "0.9", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "x", ",", "numOut", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "activation", "=", "None", ",", "strides", "=", "(", "stride", ",", "stride", ")", ",", "name", "=", "'conv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "y", ",", "numOut", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "activation", "=", "None", ",", "regularizer", "=", "reg", ",", "name", "=", "'conv'", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.branch2": [[52, 58], ["tensorflow.contrib.layers.l2_regularizer", "tensorflow.variable_scope", "sfn.conv", "sfn.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "branch2", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "momentum", "=", "0.9", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"convshortcut\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "x", ",", "numOut", ",", "kernel_size", "=", "[", "1", ",", "1", "]", ",", "activation", "=", "None", ",", "strides", "=", "(", "stride", ",", "stride", ")", ",", "name", "=", "'conv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.residual": [[63, 71], ["tensorflow.variable_scope", "sfn.branch1", "sfn.branch2", "tensorflow.nn.relu", "tensorflow.nn.relu", "x.get_shape().as_list", "x.get_shape"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch1", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch2"], ["", "", "def", "residual", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "branch", "=", "False", ",", "name", "=", "'res'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "block", "=", "branch1", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "stride", ",", "is_training", "=", "is_training", ",", "momentum", "=", "momentum", ",", "reuse", "=", "reuse", ")", "\n", "if", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "!=", "numOut", "or", "branch", ":", "\n", "            ", "skip", "=", "branch2", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "stride", ",", "is_training", "=", "is_training", ",", "momentum", "=", "momentum", ",", "reuse", "=", "reuse", ")", "\n", "return", "tf", ".", "nn", ".", "relu", "(", "block", "+", "skip", ")", ",", "block", "+", "skip", "\n", "", "else", ":", "\n", "            ", "return", "tf", ".", "nn", ".", "relu", "(", "x", "+", "block", ")", ",", "x", "+", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.resnet18": [[76, 107], ["tensorflow.variable_scope", "sfn.conv", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.contrib.layers.l2_regularizer", "sfn.batch", "tensorflow.variable_scope", "sfn.residual", "sfn.residual", "feature.append", "tensorflow.variable_scope", "sfn.residual", "sfn.residual", "feature.append", "tensorflow.variable_scope", "sfn.residual", "sfn.residual", "feature.append", "tensorflow.variable_scope", "sfn.residual", "sfn.residual", "feature.append"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual"], ["", "", "", "def", "resnet18", "(", "x", ",", "is_training", ",", "l2", "=", "None", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'Resnet18'", ")", ":", "\n", "    ", "feature", "=", "[", "]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", "/", "4", ")", "\n", "y", "=", "conv", "(", "x", ",", "64", ",", "kernel_size", "=", "[", "7", ",", "7", "]", ",", "activation", "=", "None", ",", "strides", "=", "2", ",", "name", "=", "'conv0'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'conv0/bn'", ")", ")", "\n", "y", "=", "tf", ".", "nn", ".", "max_pool", "(", "y", ",", "ksize", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'SAME'", ",", "name", "=", "'pool1'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'group0'", ")", ":", "\n", "            ", "res2a", ",", "t", "=", "residual", "(", "y", ",", "64", ",", "l2", ",", "branch", "=", "True", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res2b", ",", "t", "=", "residual", "(", "res2a", ",", "64", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group1'", ")", ":", "\n", "            ", "res3a", ",", "t", "=", "residual", "(", "res2b", ",", "128", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res3b", ",", "t", "=", "residual", "(", "res3a", ",", "128", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group2'", ")", ":", "\n", "            ", "res4a", ",", "t", "=", "residual", "(", "res3b", ",", "256", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res4b", ",", "t", "=", "residual", "(", "res4a", ",", "256", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group3'", ")", ":", "\n", "            ", "res5a", ",", "t", "=", "residual", "(", "res4b", ",", "512", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res5b", ",", "t", "=", "residual", "(", "res5a", ",", "512", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "#pool5=tf.reduce_mean(res5b, [1, 2],keepdims=True)", "\n", "#dropout = tf.layers.dropout(pool5,rate=dropout,training=is_training)", "\n", "#y=conv(dropout, 1000, kernel_size=[1, 1],activation=None,name='class',use_bias=True,regularizer=reg,reuse=reuse)", "\n", "#y=conv(y, 512, kernel_size=[1, 1],activation=None,name='attention',use_bias=None,regularizer=reg,reuse=reuse)", "\n", "#y=tf.nn.sigmoid(batch(y,training=is_training,reuse=reuse,momentum=momentum,name='attentionbn'))\t\t", "\n", "#y=res5b*y+res5b", "\n", "#feature.append(y)", "\n", "", "", "return", "y", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.erfupsample": [[108, 130], ["int", "int", "tensorflow.variable_scope", "tensorflow.nn.relu", "sfn.conv", "tensorflow.image.resize_images", "tensorflow.nn.relu", "sfn.conv", "sfn.conv", "sfn.conv", "sfn.conv", "tensorflow.nn.relu", "sfn.conv", "math.pow", "math.pow", "tensorflow.contrib.layers.l2_regularizer", "sfn.batch", "sfn.batch", "sfn.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "erfupsample", "(", "x", ",", "skip", ",", "is_training", ",", "shape", "=", "[", "512", ",", "512", "]", ",", "kernal", "=", "3", ",", "stage", "=", "0", ",", "l2", "=", "None", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'up0'", ")", ":", "\n", "    ", "height", "=", "int", "(", "shape", "[", "0", "]", "//", "math", ".", "pow", "(", "2", ",", "5", "-", "stage", ")", ")", "\n", "weight", "=", "int", "(", "shape", "[", "1", "]", "//", "math", ".", "pow", "(", "2", ",", "5", "-", "stage", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "skip", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "skip", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'skipbn'", ")", ")", "\n", "skip", "=", "conv", "(", "skip", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'changedemesion'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "x", "=", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "[", "height", ",", "weight", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "skip", "=", "x", "+", "skip", "\n", "skip", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "skip", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'blendbn0'", ")", ")", "\n", "skip1", "=", "conv", "(", "skip", ",", "128", ",", "kernel_size", "=", "[", "kernal", ",", "1", "]", ",", "activation", "=", "None", ",", "name", "=", "'skipconv1a'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "skip1", "=", "conv", "(", "skip1", ",", "128", ",", "kernel_size", "=", "[", "1", ",", "kernal", "]", ",", "activation", "=", "None", ",", "name", "=", "'skipconv1b'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "skip2", "=", "conv", "(", "skip", ",", "128", ",", "kernel_size", "=", "[", "1", ",", "kernal", "]", ",", "activation", "=", "None", ",", "name", "=", "'skipconv2a'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "skip2", "=", "conv", "(", "skip2", ",", "128", ",", "kernel_size", "=", "[", "kernal", ",", "1", "]", ",", "activation", "=", "None", ",", "name", "=", "'skipconv2b'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "x", "=", "skip", "+", "skip1", "+", "skip2", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'blendbn'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "128", ",", "kernel_size", "=", "3", ",", "activation", "=", "None", ",", "name", "=", "'blendconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "#pool5=tf.reduce_mean(x, [1, 2],keepdims=True)", "\n", "#y=conv(pool5, 128, kernel_size=[1, 1],activation=None,name='attention',use_bias=None,regularizer=reg,reuse=reuse)", "\n", "#y=tf.nn.sigmoid(batch(y,training=is_training,reuse=reuse,momentum=momentum,name='attentionbn'))\t\t", "\n", "#x=x*y+x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.SpatialPyramidPooling": [[132, 156], ["tensorflow.variable_scope", "tensorflow.nn.relu", "sfn.conv", "levels.append", "range", "tensorflow.concat", "tensorflow.nn.relu", "sfn.conv", "tensorflow.nn.relu", "tensorflow.contrib.layers.l2_regularizer", "sfn.batch", "len", "math.floor", "math.floor", "tensorflow.nn.avg_pool", "tensorflow.nn.relu", "sfn.conv", "tensorflow.image.resize_images", "levels.append", "sfn.batch", "sfn.batch", "sfn.batch", "str", "str"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "", "def", "SpatialPyramidPooling", "(", "x", ",", "is_training", ",", "shape", "=", "[", "512", ",", "512", "]", ",", "grids", "=", "(", "8", ",", "4", ",", "2", ",", "1", ")", ",", "l2", "=", "None", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'spp'", ")", ":", "\n", "    ", "levels", "=", "[", "]", "\n", "height", "=", "shape", "[", "0", "]", "//", "32", "\n", "weight", "=", "shape", "[", "1", "]", "//", "32", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn0'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'conv0'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "levels", ".", "append", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "grids", ")", ")", ":", "\n", "            ", "h", "=", "math", ".", "floor", "(", "height", "/", "grids", "[", "i", "]", ")", "\n", "w", "=", "math", ".", "floor", "(", "weight", "/", "grids", "[", "i", "]", ")", "\n", "kh", "=", "height", "-", "(", "grids", "[", "i", "]", "-", "1", ")", "*", "h", "\n", "kw", "=", "weight", "-", "(", "grids", "[", "i", "]", "-", "1", ")", "*", "w", "\n", "y", "=", "tf", ".", "nn", ".", "avg_pool", "(", "x", ",", "[", "1", ",", "kh", ",", "kw", ",", "1", "]", ",", "[", "1", ",", "h", ",", "w", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "y", "=", "conv", "(", "y", ",", "32", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "image", ".", "resize_images", "(", "y", ",", "[", "height", ",", "weight", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "levels", ".", "append", "(", "y", ")", "\n", "", "final", "=", "tf", ".", "concat", "(", "levels", ",", "-", "1", ")", "\n", "final", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "final", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'blendbn'", ")", ")", "\n", "final", "=", "conv", "(", "final", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'blendconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "final", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "final", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'finalbn'", ")", ")", "\n", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.swiftnet": [[162, 175], ["sfn.resnet18", "sfn.SpatialPyramidPooling", "sfn.erfupsample", "sfn.erfupsample", "sfn.erfupsample", "tensorflow.variable_scope", "tensorflow.nn.relu", "sfn.conv", "tensorflow.image.resize_images", "tensorflow.nn.softmax", "tensorflow.contrib.layers.l2_regularizer", "sfn.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.resnet18", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.SpatialPyramidPooling", "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.erfupsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.erfupsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.erfupsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "swiftnet", "(", "x", ",", "numclass", ",", "is_training", ",", "shape", ",", "l2", "=", "None", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ")", ":", "\n", "    ", "xclass", ",", "feature", "=", "resnet18", "(", "x", ",", "is_training", ",", "l2", ",", "dropout", "=", "dropout", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'Resnet18'", ")", "\n", "x", "=", "SpatialPyramidPooling", "(", "feature", "[", "-", "1", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "grids", "=", "(", "8", ",", "4", ",", "2", ",", "1", ")", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'spp'", ")", "\n", "x", "=", "erfupsample", "(", "x", ",", "feature", "[", "-", "2", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "kernal", "=", "3", ",", "stage", "=", "1", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up1'", ")", "\n", "x", "=", "erfupsample", "(", "x", ",", "feature", "[", "-", "3", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "kernal", "=", "5", ",", "stage", "=", "2", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up2'", ")", "\n", "x", "=", "erfupsample", "(", "x", ",", "feature", "[", "-", "4", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "kernal", "=", "7", ",", "stage", "=", "3", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up3'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'class'", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'classbn'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "numclass", ",", "kernel_size", "=", "3", ",", "activation", "=", "None", ",", "name", "=", "'classconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "x", "=", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "[", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "final", "=", "tf", ".", "nn", ".", "softmax", "(", "x", ",", "name", "=", "'logits_to_softmax'", ")", "\n", "", "return", "x", ",", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).sfn.load_weight": [[179, 206], ["dict", "numpy.load", "sess.run", "print", "v.name.split", "v.assign", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate", "v.name.split", "v.name.split"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run"], ["", "def", "load_weight", "(", "sess", ",", "resnet50_path", ",", "varss", ")", ":", "\n", "    ", "param", "=", "dict", "(", "np", ".", "load", "(", "resnet50_path", ")", ")", "\n", "for", "v", "in", "varss", ":", "\n", "        ", "nameEnd", "=", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "if", "nameEnd", "==", "\"moving_mean:0\"", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "13", "]", "+", "\"mean/EMA\"", "\n", "", "elif", "nameEnd", "==", "\"moving_variance:0\"", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "17", "]", "+", "\"variance/EMA\"", "\n", "", "elif", "nameEnd", "==", "'kernel:0'", ":", "\n", "            ", "if", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "1", "]", "==", "'conv0'", ":", "\n", "                ", "name", "=", "'conv0/W'", "\n", "b", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "0", ",", ":", "]", ",", "2", ")", "\n", "g", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "1", ",", ":", "]", ",", "2", ")", "\n", "r", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "2", ",", ":", "]", ",", "2", ")", "\n", "param", "[", "name", "]", "=", "np", ".", "concatenate", "(", "[", "r", ",", "g", ",", "b", "]", ",", "2", ")", "\n", "", "elif", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "1", "]", "==", "'class'", ":", "\n", "                ", "name", "=", "'linear/W'", "\n", "", "else", ":", "\n", "                ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "13", "]", "+", "'W'", "\n", "", "", "elif", "nameEnd", "==", "'gamma:0'", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "2", "]", "\n", "", "elif", "nameEnd", "==", "'beta:0'", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "2", "]", "\n", "", "else", ":", "\n", "            ", "name", "=", "'linear/b'", "\n", "", "sess", ".", "run", "(", "v", ".", "assign", "(", "param", "[", "name", "]", ")", ")", "\n", "print", "(", "\"Copy weights: \"", "+", "name", "+", "\"---->\"", "+", "v", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).train.weighted_cross_entropy": [[82, 86], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.clip_by_value"], "function", ["None"], ["def", "weighted_cross_entropy", "(", "onehot_labels", ",", "logits", ",", "class_weights", ",", "annotations_ohe", ")", ":", "\n", "    ", "a", "=", "tf", ".", "reduce_sum", "(", "-", "tf", ".", "log", "(", "tf", ".", "clip_by_value", "(", "logits", ",", "1e-10", ",", "1.0", ")", ")", "*", "onehot_labels", "*", "class_weights", ")", "\n", "MASK", "=", "tf", ".", "reduce_sum", "(", "1", "-", "annotations_ohe", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "#calculation the pixel number of the meaningful classes.", "\n", "return", "a", "/", "MASK", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).train.decode": [[89, 119], ["tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.cast", "tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.random_uniform", "tensorflow.floor", "tensorflow.floor", "tensorflow.concat", "tensorflow.cast", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.convert_image_dtype", "tensorflow.concat", "tensorflow.image.random_crop", "tensorflow.image.random_flip_left_right", "tensorflow.split", "tensorflow.concat", "tensorflow.image.convert_image_dtype", "tensorflow.image.convert_image_dtype", "tf.concat.set_shape", "tf.image.convert_image_dtype.set_shape", "tf.image.convert_image_dtype.set_shape"], "function", ["None"], ["", "def", "decode", "(", "a", ",", "b", ")", ":", "\n", "    ", "a", "=", "tf", ".", "read_file", "(", "a", ")", "\n", "a", "=", "tf", ".", "image", ".", "decode_png", "(", "a", ",", "channels", "=", "3", ")", "\n", "a", "=", "tf", ".", "cast", "(", "a", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "read_file", "(", "b", ")", "\n", "b", "=", "tf", ".", "image", ".", "decode_png", "(", "b", ",", "channels", "=", "1", ")", "\n", "#random scale", "\n", "scale", "=", "tf", ".", "random_uniform", "(", "[", "1", "]", ",", "minval", "=", "0.75", ",", "maxval", "=", "1.25", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "hi", "=", "tf", ".", "floor", "(", "scale", "*", "1024", ")", "\n", "wi", "=", "tf", ".", "floor", "(", "scale", "*", "2048", ")", "\n", "s", "=", "tf", ".", "concat", "(", "[", "hi", ",", "wi", "]", ",", "0", ")", "\n", "s", "=", "tf", ".", "cast", "(", "s", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "a", "=", "tf", ".", "image", ".", "resize_images", "(", "a", ",", "s", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "b", "=", "tf", ".", "image", ".", "resize_images", "(", "b", ",", "s", ",", "method", "=", "1", ",", "align_corners", "=", "True", ")", "\n", "b", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "b", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "#random crop and flip    ", "\n", "m", "=", "tf", ".", "concat", "(", "[", "a", ",", "b", "]", ",", "axis", "=", "-", "1", ")", "\n", "m", "=", "tf", ".", "image", ".", "random_crop", "(", "m", ",", "[", "image_height", ",", "image_width", ",", "4", "]", ")", "\n", "m", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "m", ")", "\n", "\n", "m", "=", "tf", ".", "split", "(", "m", ",", "num_or_size_splits", "=", "4", ",", "axis", "=", "-", "1", ")", "\n", "a", "=", "tf", ".", "concat", "(", "[", "m", "[", "0", "]", ",", "m", "[", "1", "]", ",", "m", "[", "2", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "img", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "a", "/", "255", ",", "dtype", "=", "tf", ".", "uint8", ")", "\n", "a", "=", "a", "-", "[", "123.68", ",", "116.779", ",", "103.939", "]", "\n", "b", "=", "m", "[", "3", "]", "\n", "b", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "b", ",", "dtype", "=", "tf", ".", "uint8", ")", "\n", "a", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "3", ")", ")", "\n", "b", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "1", ")", ")", "\n", "img", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "3", ")", ")", "\n", "return", "a", ",", "b", ",", "img", "\n", "", "def", "decodev", "(", "a", ",", "b", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).train.decodev": [[119, 129], ["tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.cast", "tensorflow.read_file", "tensorflow.image.decode_png", "tf.cast.set_shape", "tf.image.decode_png.set_shape"], "function", ["None"], ["", "def", "decodev", "(", "a", ",", "b", ")", ":", "\n", "    ", "a", "=", "tf", ".", "read_file", "(", "a", ")", "\n", "a", "=", "tf", ".", "image", ".", "decode_png", "(", "a", ",", "channels", "=", "3", ")", "\n", "a", "=", "tf", ".", "cast", "(", "a", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "read_file", "(", "b", ")", "\n", "a", "=", "a", "-", "[", "123.68", ",", "116.779", ",", "103.939", "]", "\n", "b", "=", "tf", ".", "image", ".", "decode_png", "(", "b", ",", "channels", "=", "1", ")", "\n", "a", ".", "set_shape", "(", "shape", "=", "(", "1024", ",", "2048", ",", "3", ")", ")", "\n", "b", ".", "set_shape", "(", "shape", "=", "(", "1024", ",", "2048", ",", "1", ")", ")", "\n", "return", "a", ",", "b", "\n", "", "def", "run", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.Swift_Factorized_Network(SFN).train.run": [[129, 317], ["tensorflow.Graph().as_default", "tensorflow.logging.set_verbosity", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.data.Dataset.from_tensor_slices().map().shuffle().batch().repeat", "tf.data.Dataset.from_tensor_slices().map().shuffle().batch().repeat.make_initializable_iterator", "tdataset.make_initializable_iterator.get_next", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.data.Dataset.from_tensor_slices().map().batch().repeat", "tf.data.Dataset.from_tensor_slices().map().batch().repeat.make_initializable_iterator", "vdataset.make_initializable_iterator.get_next", "sfn.swiftnet", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.gather", "tensorflow.global_variables", "tensorflow.one_hot", "train.weighted_cross_entropy", "tensorflow.losses.add_loss", "tensorflow.losses.get_total_loss", "tensorflow.train.get_or_create_global_step", "tensorflow.train.cosine_decay", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.group", "sfn.swiftnet", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.argmax", "tensorflow.gather", "tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.to_int32", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.merge_all", "tensorflow.GPUOptions", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.where", "tensorflow.gather", "tensorflow.control_dependencies", "tensorflow.gradients", "tf.train.AdamOptimizer.apply_gradients", "tf.train.AdamOptimizer.apply_gradients", "tensorflow.group", "tensorflow.reshape", "tensorflow.where", "tensorflow.gather", "tensorflow.reshape", "time.time", "sess.run", "tensorflow.python.platform.tf_logging.info", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reshape", "time.time", "sess.run", "tensorflow.python.platform.tf_logging.info", "sess.run", "tensorflow.python.platform.tf_logging.info", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.mean", "numpy.mean", "numpy.mean", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "tensorflow.Session", "sess.run", "sess.run", "sfn.load_weight", "tensorflow.summary.FileWriter", "range", "tf.summary.FileWriter.close", "train.run.eval"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.swiftnet", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.weighted_cross_entropy", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.swiftnet", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.load_weight"], ["", "def", "run", "(", ")", ":", "\n", "    ", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", "as", "graph", ":", "\n", "        ", "tf", ".", "logging", ".", "set_verbosity", "(", "tf", ".", "logging", ".", "INFO", ")", "\n", "#===================TRAINING BRANCH=======================", "\n", "#Load the files into one input queue", "\n", "images", "=", "tf", ".", "convert_to_tensor", "(", "image_files", ")", "\n", "annotations", "=", "tf", ".", "convert_to_tensor", "(", "annotation_files", ")", "\n", "tdataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "images", ",", "annotations", ")", ")", ".", "map", "(", "decode", ")", ".", "shuffle", "(", "100", ")", ".", "batch", "(", "batch_size", ")", ".", "repeat", "(", "num_epochs", ")", "\n", "titerator", "=", "tdataset", ".", "make_initializable_iterator", "(", ")", "\n", "images", ",", "annotations", ",", "realimg", "=", "titerator", ".", "get_next", "(", ")", "\n", "images_val", "=", "tf", ".", "convert_to_tensor", "(", "image_val_files", ")", "\n", "annotations_val", "=", "tf", ".", "convert_to_tensor", "(", "annotation_val_files", ")", "\n", "vdataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "images_val", ",", "annotations_val", ")", ")", ".", "map", "(", "decodev", ")", ".", "batch", "(", "eval_batch_size", ")", ".", "repeat", "(", "num_epochs", "*", "3", ")", "\n", "viterator", "=", "vdataset", ".", "make_initializable_iterator", "(", ")", "\n", "images_val", ",", "annotations_val", "=", "viterator", ".", "get_next", "(", ")", "\n", "#perform one-hot-encoding on the ground truth annotation to get same shape as the logits", "\n", "_", ",", "probabilities", "=", "sfn", ".", "swiftnet", "(", "images", ",", "numclass", "=", "num_classes", ",", "is_training", "=", "True", ",", "shape", "=", "[", "image_height", ",", "image_width", "]", ",", "l2", "=", "weight_decay", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ")", "\n", "annotations", "=", "tf", ".", "reshape", "(", "annotations", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", "]", ")", "\n", "#loss function", "\n", "raw_gt", "=", "tf", ".", "reshape", "(", "annotations", ",", "[", "-", "1", ",", "]", ")", "\n", "indices", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tf", ".", "greater", "(", "raw_gt", ",", "0", ")", ")", ",", "1", ")", "\n", "gt", "=", "tf", ".", "cast", "(", "tf", ".", "gather", "(", "raw_gt", ",", "indices", ")", ",", "tf", ".", "int32", ")", "\n", "gt", "=", "gt", "-", "1", "\n", "gt_one", "=", "tf", ".", "one_hot", "(", "gt", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "raw_prediction", "=", "tf", ".", "reshape", "(", "probabilities", ",", "[", "-", "1", ",", "num_classes", "]", ")", "\n", "prediction", "=", "tf", ".", "gather", "(", "raw_prediction", ",", "indices", ")", "\n", "var", "=", "tf", ".", "global_variables", "(", ")", "\n", "var1", "=", "[", "v", "for", "v", "in", "var", "if", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "0", "]", "==", "'Resnet18'", "and", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "!=", "'attention'", "and", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "!=", "'attentionbn'", "]", "#base_net parameters\t", "\n", "var2", "=", "[", "v", "for", "v", "in", "var", "if", "v", "not", "in", "var1", "]", "#added parameters\t\t", "\n", "annotations_ohe", "=", "tf", ".", "one_hot", "(", "annotations", ",", "num_classes", "+", "1", ",", "axis", "=", "-", "1", ")", "\n", "los", "=", "weighted_cross_entropy", "(", "gt_one", ",", "prediction", ",", "class_weights", ",", "annotations_ohe", ")", "\n", "loss", "=", "tf", ".", "losses", ".", "add_loss", "(", "los", ")", "\n", "total_loss", "=", "tf", ".", "losses", ".", "get_total_loss", "(", ")", "\n", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "#Define your  learning rate and optimizer", "\n", "lr", "=", "tf", ".", "train", ".", "cosine_decay", "(", "\n", "learning_rate", "=", "initial_learning_rate", ",", "\n", "global_step", "=", "global_step", ",", "\n", "decay_steps", "=", "decay_steps", ",", "\n", "alpha", "=", "2.5e-3", ")", "\n", "optimizer1", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "lr", "/", "4", ",", "epsilon", "=", "epsilon", ")", "\n", "optimizer2", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "lr", ",", "epsilon", "=", "epsilon", ")", "\n", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "updates_op", "=", "tf", ".", "group", "(", "*", "update_ops", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "updates_op", "]", ")", ":", "\n", "            ", "grads", "=", "tf", ".", "gradients", "(", "total_loss", ",", "var1", "+", "var2", ")", "\n", "grads1", "=", "grads", "[", ":", "len", "(", "var1", ")", "]", "\n", "grads2", "=", "grads", "[", "len", "(", "var1", ")", ":", "]", "\n", "train_op1", "=", "optimizer1", ".", "apply_gradients", "(", "zip", "(", "grads1", ",", "var1", ")", ")", "\n", "train_op2", "=", "optimizer2", ".", "apply_gradients", "(", "zip", "(", "grads2", ",", "var2", ")", ",", "global_step", "=", "global_step", ")", "\n", "train_op", "=", "tf", ".", "group", "(", "train_op1", ",", "train_op2", ")", "\n", "", "_", ",", "probabilities_val", "=", "sfn", ".", "swiftnet", "(", "images_val", ",", "numclass", "=", "num_classes", ",", "is_training", "=", "None", ",", "shape", "=", "[", "1024", ",", "2048", "]", ",", "l2", "=", "None", ",", "dropout", "=", "0", ",", "reuse", "=", "True", ")", "\n", "raw_gt_v", "=", "tf", ".", "reshape", "(", "tf", ".", "reshape", "(", "annotations_val", ",", "shape", "=", "[", "-", "1", ",", "1024", ",", "2048", "]", ")", ",", "[", "-", "1", ",", "]", ")", "\n", "indices_v", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tf", ".", "greater", "(", "raw_gt_v", ",", "0", ")", ")", ",", "1", ")", "\n", "gt_v", "=", "tf", ".", "cast", "(", "tf", ".", "gather", "(", "raw_gt_v", ",", "indices_v", ")", ",", "tf", ".", "int32", ")", "\n", "gt_v", "=", "gt_v", "-", "1", "\n", "gt_one_v", "=", "tf", ".", "one_hot", "(", "gt_v", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "raw_prediction_v", "=", "tf", ".", "argmax", "(", "tf", ".", "reshape", "(", "probabilities_val", ",", "[", "-", "1", ",", "num_classes", "]", ")", ",", "-", "1", ")", "\n", "prediction_v", "=", "tf", ".", "gather", "(", "raw_prediction_v", ",", "indices_v", ")", "\n", "prediction_ohe_v", "=", "tf", ".", "one_hot", "(", "prediction_v", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "and_val", "=", "gt_one_v", "*", "prediction_ohe_v", "\n", "and_sum", "=", "tf", ".", "reduce_sum", "(", "and_val", ",", "[", "0", "]", ")", "\n", "or_val", "=", "tf", ".", "to_int32", "(", "(", "gt_one_v", "+", "prediction_ohe_v", ")", ">", "0.5", ")", "\n", "or_sum", "=", "tf", ".", "reduce_sum", "(", "or_val", ",", "axis", "=", "[", "0", "]", ")", "\n", "T_sum", "=", "tf", ".", "reduce_sum", "(", "gt_one_v", ",", "axis", "=", "[", "0", "]", ")", "\n", "R_sum", "=", "tf", ".", "reduce_sum", "(", "prediction_ohe_v", ",", "axis", "=", "[", "0", "]", ")", "\n", "mPrecision", "=", "0", "\n", "mRecall_rate", "=", "0", "\n", "mIoU", "=", "0", "\n", "#Now we need to create a training step function that runs both the train_op, metrics_op and updates the global_step concurrently.", "\n", "def", "train_step", "(", "sess", ",", "train_op", ",", "global_step", ",", "loss", "=", "total_loss", ")", ":", "\n", "#Check the time for each sess run", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "_", ",", "total_loss", ",", "global_step_count", "=", "sess", ".", "run", "(", "[", "train_op", ",", "loss", ",", "global_step", "]", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "global_step_count", "=", "global_step_count", "+", "1", "\n", "#Run the logging to show some results", "\n", "logging", ".", "info", "(", "'global step %s: loss: %.4f (%.2f sec/step)'", ",", "global_step_count", ",", "total_loss", ",", "time_elapsed", ")", "\n", "\n", "return", "total_loss", "\n", "#Now finally create all the summaries you need to monitor and group them into one summary op.", "\n", "", "A", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "a", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "Precision", "=", "tf", ".", "assign", "(", "A", ",", "a", ")", "\n", "B", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "Recall", "=", "tf", ".", "assign", "(", "B", ",", "b", ")", "\n", "C", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "c", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "mIOU", "=", "tf", ".", "assign", "(", "C", ",", "c", ")", "\n", "predictions", "=", "tf", ".", "argmax", "(", "probabilities", ",", "-", "1", ")", "\n", "segmentation_output", "=", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "(", "predictions", "+", "1", ")", "*", "255", "/", "num_classes", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", ",", "1", "]", ")", ",", "tf", ".", "uint8", ")", "\n", "segmentation_ground_truth", "=", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "tf", ".", "cast", "(", "annotations", ",", "dtype", "=", "tf", ".", "float32", ")", "*", "255", "/", "num_classes", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", ",", "1", "]", ")", ",", "tf", ".", "uint8", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Total_Loss'", ",", "total_loss", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Precision'", ",", "Precision", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Recall_rate'", ",", "Recall", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/mIoU'", ",", "mIOU", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/learning_rate'", ",", "lr", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/original_image'", ",", "realimg", ",", "max_outputs", "=", "1", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/segmentation_output'", ",", "segmentation_output", ",", "max_outputs", "=", "1", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/segmentation_ground_truth'", ",", "segmentation_ground_truth", ",", "max_outputs", "=", "1", ")", "\n", "my_summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n", "def", "train_sum", "(", "sess", ",", "train_op", ",", "global_step", ",", "sums", ",", "loss", "=", "total_loss", ",", "pre", "=", "0", ",", "recall", "=", "0", ",", "iou", "=", "0", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "_", ",", "total_loss", ",", "global_step_count", ",", "ss", "=", "sess", ".", "run", "(", "[", "train_op", ",", "loss", ",", "global_step", ",", "sums", "]", ",", "feed_dict", "=", "{", "a", ":", "pre", ",", "b", ":", "recall", ",", "c", ":", "iou", "}", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "global_step_count", "=", "global_step_count", "+", "1", "\n", "logging", ".", "info", "(", "'global step %s: loss: %.4f (%.2f sec/step)'", ",", "global_step_count", ",", "total_loss", ",", "time_elapsed", ")", "\n", "\n", "return", "total_loss", ",", "ss", "\n", "\n", "", "def", "eval_step", "(", "sess", ",", "i", ")", ":", "\n", "            ", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "=", "sess", ".", "run", "(", "[", "and_sum", ",", "or_sum", ",", "T_sum", ",", "R_sum", "]", ")", "\n", "#Log some information", "\n", "logging", ".", "info", "(", "'STEP: %d '", ",", "i", ")", "\n", "return", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "\n", "", "def", "eval", "(", "num_class", ",", "csvname", ",", "session", ",", "image_val", ",", "eval_batch", ")", ":", "\n", "            ", "or_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "and_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "T_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "R_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "math", ".", "ceil", "(", "len", "(", "image_val", ")", "/", "eval_batch", ")", ")", ":", "\n", "                ", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "=", "eval_step", "(", "session", ",", "i", "+", "1", ")", "\n", "and_", "=", "and_", "+", "and_eval_batch", "\n", "or_", "=", "or_", "+", "or_eval_batch", "\n", "T_", "=", "T_", "+", "T_eval_batch", "\n", "R_", "=", "R_", "+", "R_eval_batch", "\n", "", "Recall_rate", "=", "and_", "/", "T_", "\n", "Precision", "=", "and_", "/", "R_", "\n", "IoU", "=", "and_", "/", "or_", "\n", "mPrecision", "=", "np", ".", "mean", "(", "Precision", ")", "\n", "mRecall_rate", "=", "np", ".", "mean", "(", "Recall_rate", ")", "\n", "mIoU", "=", "np", ".", "mean", "(", "IoU", ")", "\n", "print", "(", "\"Precision:\"", ")", "\n", "print", "(", "Precision", ")", "\n", "print", "(", "\"Recall rate:\"", ")", "\n", "print", "(", "Recall_rate", ")", "\n", "print", "(", "\"IoU:\"", ")", "\n", "print", "(", "IoU", ")", "\n", "print", "(", "\"mPrecision:\"", ")", "\n", "print", "(", "mPrecision", ")", "\n", "print", "(", "\"mRecall_rate:\"", ")", "\n", "print", "(", "mRecall_rate", ")", "\n", "print", "(", "\"mIoU\"", ")", "\n", "print", "(", "mIoU", ")", "\n", "with", "open", "(", "csvname", ",", "'a'", ",", "newline", "=", "''", ")", "as", "out", ":", "\n", "                ", "csv_write", "=", "csv", ".", "writer", "(", "out", ",", "dialect", "=", "'excel'", ")", "\n", "csv_write", ".", "writerow", "(", "Precision", ")", "\n", "csv_write", ".", "writerow", "(", "Recall_rate", ")", "\n", "csv_write", ".", "writerow", "(", "IoU", ")", "\n", "", "return", "mPrecision", ",", "mPrecision", ",", "mIoU", "\n", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", "log_device_placement", "=", "False", ",", "gpu_options", "=", "gpu_options", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "var_list", "=", "tf", ".", "global_variables", "(", ")", ",", "max_to_keep", "=", "10", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "init", ")", "\n", "sess", ".", "run", "(", "[", "titerator", ".", "initializer", ",", "viterator", ".", "initializer", "]", ")", "\n", "sfn", ".", "load_weight", "(", "sess", ",", "'imgnet_resnet18.npz'", ",", "var1", ")", "#load base_net's parameter.", "\n", "step", "=", "0", ";", "\n", "if", "Start_train", "is", "not", "True", ":", "\n", "#input the checkpoint address,and the step number.", "\n", "                ", "checkpoint", "=", "'./log/swiftnet/model.ckpt-37127'", "\n", "saver", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "step", "=", "37127", "\n", "sess", ".", "run", "(", "tf", ".", "assign", "(", "global_step", ",", "step", ")", ")", "\n", "", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", ",", "sess", ".", "graph", ")", "\n", "final", "=", "num_steps_per_epoch", "*", "num_epochs", "\n", "for", "i", "in", "range", "(", "step", ",", "final", ",", "1", ")", ":", "\n", "                ", "if", "i", "%", "num_batches_per_epoch", "==", "0", ":", "\n", "                    ", "logging", ".", "info", "(", "'Epoch %s/%s'", ",", "i", "/", "num_batches_per_epoch", "+", "1", ",", "num_epochs", ")", "\n", "learning_rate_value", "=", "sess", ".", "run", "(", "[", "lr", "]", ")", "\n", "logging", ".", "info", "(", "'Current Learning Rate: %s'", ",", "learning_rate_value", ")", "\n", "if", "i", "is", "not", "step", ":", "\n", "                        ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "logdir", ",", "log_name", ")", ",", "global_step", "=", "i", ")", "\n", "mPrecision", ",", "mRecall_rate", ",", "mIoU", "=", "eval", "(", "num_class", "=", "num_classes", ",", "csvname", "=", "csvname", ",", "session", "=", "sess", ",", "image_val", "=", "image_val_files", ",", "eval_batch", "=", "eval_batch_size", ")", "\n", "", "", "if", "i", "%", "min", "(", "num_steps_per_epoch", ",", "10", ")", "==", "0", ":", "\n", "                    ", "loss", ",", "summaries", "=", "train_sum", "(", "sess", ",", "train_op", ",", "global_step", ",", "sums", "=", "my_summary_op", ",", "loss", "=", "total_loss", ",", "pre", "=", "mPrecision", ",", "recall", "=", "mPrecision", ",", "iou", "=", "mIoU", ")", "\n", "summary_writer", ".", "add_summary", "(", "summaries", ",", "global_step", "=", "i", "+", "1", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "train_step", "(", "sess", ",", "train_op", ",", "global_step", ")", "\n", "", "", "summary_writer", ".", "close", "(", ")", "\n", "eval", "(", "num_class", "=", "num_classes", ",", "csvname", "=", "csvname", ",", "session", "=", "sess", ",", "image_val", "=", "image_val_files", ",", "eval_batch", "=", "eval_batch_size", ")", "\n", "logging", ".", "info", "(", "'Final Loss: %s'", ",", "loss", ")", "\n", "logging", ".", "info", "(", "'Finished training! Saving model to disk now.'", ")", "\n", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "logdir", ",", "log_name", ")", ",", "global_step", "=", "final", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.weighted_cross_entropy": [[82, 86], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.clip_by_value"], "function", ["None"], ["def", "weighted_cross_entropy", "(", "onehot_labels", ",", "logits", ",", "class_weights", ",", "annotations_ohe", ")", ":", "\n", "    ", "a", "=", "tf", ".", "reduce_sum", "(", "-", "tf", ".", "log", "(", "tf", ".", "clip_by_value", "(", "logits", ",", "1e-10", ",", "1.0", ")", ")", "*", "onehot_labels", "*", "class_weights", ")", "\n", "MASK", "=", "tf", ".", "reduce_sum", "(", "1", "-", "annotations_ohe", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "#calculation the pixel number of the meaningful classes.", "\n", "return", "a", "/", "MASK", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.decode": [[89, 119], ["tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.cast", "tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.random_uniform", "tensorflow.floor", "tensorflow.floor", "tensorflow.concat", "tensorflow.cast", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.convert_image_dtype", "tensorflow.concat", "tensorflow.image.random_crop", "tensorflow.image.random_flip_left_right", "tensorflow.split", "tensorflow.concat", "tensorflow.image.convert_image_dtype", "tensorflow.image.convert_image_dtype", "tf.concat.set_shape", "tf.image.convert_image_dtype.set_shape", "tf.image.convert_image_dtype.set_shape"], "function", ["None"], ["", "def", "decode", "(", "a", ",", "b", ")", ":", "\n", "    ", "a", "=", "tf", ".", "read_file", "(", "a", ")", "\n", "a", "=", "tf", ".", "image", ".", "decode_png", "(", "a", ",", "channels", "=", "3", ")", "\n", "a", "=", "tf", ".", "cast", "(", "a", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "read_file", "(", "b", ")", "\n", "b", "=", "tf", ".", "image", ".", "decode_png", "(", "b", ",", "channels", "=", "1", ")", "\n", "#random scale", "\n", "scale", "=", "tf", ".", "random_uniform", "(", "[", "1", "]", ",", "minval", "=", "0.75", ",", "maxval", "=", "1.25", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "hi", "=", "tf", ".", "floor", "(", "scale", "*", "1024", ")", "\n", "wi", "=", "tf", ".", "floor", "(", "scale", "*", "2048", ")", "\n", "s", "=", "tf", ".", "concat", "(", "[", "hi", ",", "wi", "]", ",", "0", ")", "\n", "s", "=", "tf", ".", "cast", "(", "s", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "a", "=", "tf", ".", "image", ".", "resize_images", "(", "a", ",", "s", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "b", "=", "tf", ".", "image", ".", "resize_images", "(", "b", ",", "s", ",", "method", "=", "1", ",", "align_corners", "=", "True", ")", "\n", "b", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "b", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "#random crop and flip    ", "\n", "m", "=", "tf", ".", "concat", "(", "[", "a", ",", "b", "]", ",", "axis", "=", "-", "1", ")", "\n", "m", "=", "tf", ".", "image", ".", "random_crop", "(", "m", ",", "[", "image_height", ",", "image_width", ",", "4", "]", ")", "\n", "m", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "m", ")", "\n", "\n", "m", "=", "tf", ".", "split", "(", "m", ",", "num_or_size_splits", "=", "4", ",", "axis", "=", "-", "1", ")", "\n", "a", "=", "tf", ".", "concat", "(", "[", "m", "[", "0", "]", ",", "m", "[", "1", "]", ",", "m", "[", "2", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "img", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "a", "/", "255", ",", "dtype", "=", "tf", ".", "uint8", ")", "\n", "a", "=", "a", "-", "[", "123.68", ",", "116.779", ",", "103.939", "]", "\n", "b", "=", "m", "[", "3", "]", "\n", "b", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "b", ",", "dtype", "=", "tf", ".", "uint8", ")", "\n", "a", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "3", ")", ")", "\n", "b", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "1", ")", ")", "\n", "img", ".", "set_shape", "(", "shape", "=", "(", "image_height", ",", "image_width", ",", "3", ")", ")", "\n", "return", "a", ",", "b", ",", "img", "\n", "", "def", "decodev", "(", "a", ",", "b", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.decodev": [[119, 129], ["tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.cast", "tensorflow.read_file", "tensorflow.image.decode_png", "tf.cast.set_shape", "tf.image.decode_png.set_shape"], "function", ["None"], ["", "def", "decodev", "(", "a", ",", "b", ")", ":", "\n", "    ", "a", "=", "tf", ".", "read_file", "(", "a", ")", "\n", "a", "=", "tf", ".", "image", ".", "decode_png", "(", "a", ",", "channels", "=", "3", ")", "\n", "a", "=", "tf", ".", "cast", "(", "a", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "read_file", "(", "b", ")", "\n", "a", "=", "a", "-", "[", "123.68", ",", "116.779", ",", "103.939", "]", "\n", "b", "=", "tf", ".", "image", ".", "decode_png", "(", "b", ",", "channels", "=", "1", ")", "\n", "a", ".", "set_shape", "(", "shape", "=", "(", "1024", ",", "2048", ",", "3", ")", ")", "\n", "b", ".", "set_shape", "(", "shape", "=", "(", "1024", ",", "2048", ",", "1", ")", ")", "\n", "return", "a", ",", "b", "\n", "", "def", "run", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run": [[129, 317], ["tensorflow.Graph().as_default", "tensorflow.logging.set_verbosity", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.data.Dataset.from_tensor_slices().map().shuffle().batch().repeat", "tf.data.Dataset.from_tensor_slices().map().shuffle().batch().repeat.make_initializable_iterator", "tdataset.make_initializable_iterator.get_next", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.data.Dataset.from_tensor_slices().map().batch().repeat", "tf.data.Dataset.from_tensor_slices().map().batch().repeat.make_initializable_iterator", "vdataset.make_initializable_iterator.get_next", "swiftnet.swiftnet", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.gather", "tensorflow.global_variables", "tensorflow.one_hot", "train.weighted_cross_entropy", "tensorflow.losses.add_loss", "tensorflow.losses.get_total_loss", "tensorflow.train.get_or_create_global_step", "tensorflow.train.cosine_decay", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.group", "swiftnet.swiftnet", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.argmax", "tensorflow.gather", "tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.to_int32", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.merge_all", "tensorflow.GPUOptions", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.where", "tensorflow.gather", "tensorflow.control_dependencies", "tensorflow.gradients", "tf.train.AdamOptimizer.apply_gradients", "tf.train.AdamOptimizer.apply_gradients", "tensorflow.group", "tensorflow.reshape", "tensorflow.where", "tensorflow.gather", "tensorflow.reshape", "time.time", "sess.run", "tensorflow.python.platform.tf_logging.info", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reshape", "time.time", "sess.run", "tensorflow.python.platform.tf_logging.info", "sess.run", "tensorflow.python.platform.tf_logging.info", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.mean", "numpy.mean", "numpy.mean", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "tensorflow.Session", "sess.run", "sess.run", "swiftnet.load_weight", "tensorflow.summary.FileWriter", "range", "tf.summary.FileWriter.close", "train.run.eval"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.swiftnet", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.weighted_cross_entropy", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.swiftnet", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.load_weight"], ["", "def", "run", "(", ")", ":", "\n", "    ", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", "as", "graph", ":", "\n", "        ", "tf", ".", "logging", ".", "set_verbosity", "(", "tf", ".", "logging", ".", "INFO", ")", "\n", "#===================TRAINING BRANCH=======================", "\n", "#Load the files into one input queue", "\n", "images", "=", "tf", ".", "convert_to_tensor", "(", "image_files", ")", "\n", "annotations", "=", "tf", ".", "convert_to_tensor", "(", "annotation_files", ")", "\n", "tdataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "images", ",", "annotations", ")", ")", ".", "map", "(", "decode", ")", ".", "shuffle", "(", "100", ")", ".", "batch", "(", "batch_size", ")", ".", "repeat", "(", "num_epochs", ")", "\n", "titerator", "=", "tdataset", ".", "make_initializable_iterator", "(", ")", "\n", "images", ",", "annotations", ",", "realimg", "=", "titerator", ".", "get_next", "(", ")", "\n", "images_val", "=", "tf", ".", "convert_to_tensor", "(", "image_val_files", ")", "\n", "annotations_val", "=", "tf", ".", "convert_to_tensor", "(", "annotation_val_files", ")", "\n", "vdataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "images_val", ",", "annotations_val", ")", ")", ".", "map", "(", "decodev", ")", ".", "batch", "(", "eval_batch_size", ")", ".", "repeat", "(", "num_epochs", "*", "3", ")", "\n", "viterator", "=", "vdataset", ".", "make_initializable_iterator", "(", ")", "\n", "images_val", ",", "annotations_val", "=", "viterator", ".", "get_next", "(", ")", "\n", "#perform one-hot-encoding on the ground truth annotation to get same shape as the logits", "\n", "_", ",", "probabilities", "=", "sfn", ".", "swiftnet", "(", "images", ",", "numclass", "=", "num_classes", ",", "is_training", "=", "True", ",", "shape", "=", "[", "image_height", ",", "image_width", "]", ",", "l2", "=", "weight_decay", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ")", "\n", "annotations", "=", "tf", ".", "reshape", "(", "annotations", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", "]", ")", "\n", "#loss function", "\n", "raw_gt", "=", "tf", ".", "reshape", "(", "annotations", ",", "[", "-", "1", ",", "]", ")", "\n", "indices", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tf", ".", "greater", "(", "raw_gt", ",", "0", ")", ")", ",", "1", ")", "\n", "gt", "=", "tf", ".", "cast", "(", "tf", ".", "gather", "(", "raw_gt", ",", "indices", ")", ",", "tf", ".", "int32", ")", "\n", "gt", "=", "gt", "-", "1", "\n", "gt_one", "=", "tf", ".", "one_hot", "(", "gt", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "raw_prediction", "=", "tf", ".", "reshape", "(", "probabilities", ",", "[", "-", "1", ",", "num_classes", "]", ")", "\n", "prediction", "=", "tf", ".", "gather", "(", "raw_prediction", ",", "indices", ")", "\n", "var", "=", "tf", ".", "global_variables", "(", ")", "\n", "var1", "=", "[", "v", "for", "v", "in", "var", "if", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "0", "]", "==", "'Resnet18'", "and", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "!=", "'attention'", "and", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "!=", "'attentionbn'", "]", "#base_net parameters\t", "\n", "var2", "=", "[", "v", "for", "v", "in", "var", "if", "v", "not", "in", "var1", "]", "#added parameters\t\t", "\n", "annotations_ohe", "=", "tf", ".", "one_hot", "(", "annotations", ",", "num_classes", "+", "1", ",", "axis", "=", "-", "1", ")", "\n", "los", "=", "weighted_cross_entropy", "(", "gt_one", ",", "prediction", ",", "class_weights", ",", "annotations_ohe", ")", "\n", "loss", "=", "tf", ".", "losses", ".", "add_loss", "(", "los", ")", "\n", "total_loss", "=", "tf", ".", "losses", ".", "get_total_loss", "(", ")", "\n", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "#Define your  learning rate and optimizer", "\n", "lr", "=", "tf", ".", "train", ".", "cosine_decay", "(", "\n", "learning_rate", "=", "initial_learning_rate", ",", "\n", "global_step", "=", "global_step", ",", "\n", "decay_steps", "=", "decay_steps", ",", "\n", "alpha", "=", "2.5e-3", ")", "\n", "optimizer1", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "lr", "/", "4", ",", "epsilon", "=", "epsilon", ")", "\n", "optimizer2", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "lr", ",", "epsilon", "=", "epsilon", ")", "\n", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "updates_op", "=", "tf", ".", "group", "(", "*", "update_ops", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "updates_op", "]", ")", ":", "\n", "            ", "grads", "=", "tf", ".", "gradients", "(", "total_loss", ",", "var1", "+", "var2", ")", "\n", "grads1", "=", "grads", "[", ":", "len", "(", "var1", ")", "]", "\n", "grads2", "=", "grads", "[", "len", "(", "var1", ")", ":", "]", "\n", "train_op1", "=", "optimizer1", ".", "apply_gradients", "(", "zip", "(", "grads1", ",", "var1", ")", ")", "\n", "train_op2", "=", "optimizer2", ".", "apply_gradients", "(", "zip", "(", "grads2", ",", "var2", ")", ",", "global_step", "=", "global_step", ")", "\n", "train_op", "=", "tf", ".", "group", "(", "train_op1", ",", "train_op2", ")", "\n", "", "_", ",", "probabilities_val", "=", "sfn", ".", "swiftnet", "(", "images_val", ",", "numclass", "=", "num_classes", ",", "is_training", "=", "None", ",", "shape", "=", "[", "1024", ",", "2048", "]", ",", "l2", "=", "None", ",", "dropout", "=", "0", ",", "reuse", "=", "True", ")", "\n", "raw_gt_v", "=", "tf", ".", "reshape", "(", "tf", ".", "reshape", "(", "annotations_val", ",", "shape", "=", "[", "-", "1", ",", "1024", ",", "2048", "]", ")", ",", "[", "-", "1", ",", "]", ")", "\n", "indices_v", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tf", ".", "greater", "(", "raw_gt_v", ",", "0", ")", ")", ",", "1", ")", "\n", "gt_v", "=", "tf", ".", "cast", "(", "tf", ".", "gather", "(", "raw_gt_v", ",", "indices_v", ")", ",", "tf", ".", "int32", ")", "\n", "gt_v", "=", "gt_v", "-", "1", "\n", "gt_one_v", "=", "tf", ".", "one_hot", "(", "gt_v", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "raw_prediction_v", "=", "tf", ".", "argmax", "(", "tf", ".", "reshape", "(", "probabilities_val", ",", "[", "-", "1", ",", "num_classes", "]", ")", ",", "-", "1", ")", "\n", "prediction_v", "=", "tf", ".", "gather", "(", "raw_prediction_v", ",", "indices_v", ")", "\n", "prediction_ohe_v", "=", "tf", ".", "one_hot", "(", "prediction_v", ",", "num_classes", ",", "axis", "=", "-", "1", ")", "\n", "and_val", "=", "gt_one_v", "*", "prediction_ohe_v", "\n", "and_sum", "=", "tf", ".", "reduce_sum", "(", "and_val", ",", "[", "0", "]", ")", "\n", "or_val", "=", "tf", ".", "to_int32", "(", "(", "gt_one_v", "+", "prediction_ohe_v", ")", ">", "0.5", ")", "\n", "or_sum", "=", "tf", ".", "reduce_sum", "(", "or_val", ",", "axis", "=", "[", "0", "]", ")", "\n", "T_sum", "=", "tf", ".", "reduce_sum", "(", "gt_one_v", ",", "axis", "=", "[", "0", "]", ")", "\n", "R_sum", "=", "tf", ".", "reduce_sum", "(", "prediction_ohe_v", ",", "axis", "=", "[", "0", "]", ")", "\n", "mPrecision", "=", "0", "\n", "mRecall_rate", "=", "0", "\n", "mIoU", "=", "0", "\n", "#Now we need to create a training step function that runs both the train_op, metrics_op and updates the global_step concurrently.", "\n", "def", "train_step", "(", "sess", ",", "train_op", ",", "global_step", ",", "loss", "=", "total_loss", ")", ":", "\n", "#Check the time for each sess run", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "_", ",", "total_loss", ",", "global_step_count", "=", "sess", ".", "run", "(", "[", "train_op", ",", "loss", ",", "global_step", "]", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "global_step_count", "=", "global_step_count", "+", "1", "\n", "#Run the logging to show some results", "\n", "logging", ".", "info", "(", "'global step %s: loss: %.4f (%.2f sec/step)'", ",", "global_step_count", ",", "total_loss", ",", "time_elapsed", ")", "\n", "\n", "return", "total_loss", "\n", "#Now finally create all the summaries you need to monitor and group them into one summary op.", "\n", "", "A", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "a", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "Precision", "=", "tf", ".", "assign", "(", "A", ",", "a", ")", "\n", "B", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "Recall", "=", "tf", ".", "assign", "(", "B", ",", "b", ")", "\n", "C", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "c", "=", "tf", ".", "placeholder", "(", "shape", "=", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "mIOU", "=", "tf", ".", "assign", "(", "C", ",", "c", ")", "\n", "predictions", "=", "tf", ".", "argmax", "(", "probabilities", ",", "-", "1", ")", "\n", "segmentation_output", "=", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "(", "predictions", "+", "1", ")", "*", "255", "/", "num_classes", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", ",", "1", "]", ")", ",", "tf", ".", "uint8", ")", "\n", "segmentation_ground_truth", "=", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "tf", ".", "cast", "(", "annotations", ",", "dtype", "=", "tf", ".", "float32", ")", "*", "255", "/", "num_classes", ",", "shape", "=", "[", "-", "1", ",", "image_height", ",", "image_width", ",", "1", "]", ")", ",", "tf", ".", "uint8", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Total_Loss'", ",", "total_loss", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Precision'", ",", "Precision", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/Recall_rate'", ",", "Recall", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/mIoU'", ",", "mIOU", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Monitor/learning_rate'", ",", "lr", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/original_image'", ",", "realimg", ",", "max_outputs", "=", "1", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/segmentation_output'", ",", "segmentation_output", ",", "max_outputs", "=", "1", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'Images/segmentation_ground_truth'", ",", "segmentation_ground_truth", ",", "max_outputs", "=", "1", ")", "\n", "my_summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n", "def", "train_sum", "(", "sess", ",", "train_op", ",", "global_step", ",", "sums", ",", "loss", "=", "total_loss", ",", "pre", "=", "0", ",", "recall", "=", "0", ",", "iou", "=", "0", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "_", ",", "total_loss", ",", "global_step_count", ",", "ss", "=", "sess", ".", "run", "(", "[", "train_op", ",", "loss", ",", "global_step", ",", "sums", "]", ",", "feed_dict", "=", "{", "a", ":", "pre", ",", "b", ":", "recall", ",", "c", ":", "iou", "}", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "global_step_count", "=", "global_step_count", "+", "1", "\n", "logging", ".", "info", "(", "'global step %s: loss: %.4f (%.2f sec/step)'", ",", "global_step_count", ",", "total_loss", ",", "time_elapsed", ")", "\n", "\n", "return", "total_loss", ",", "ss", "\n", "\n", "", "def", "eval_step", "(", "sess", ",", "i", ")", ":", "\n", "            ", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "=", "sess", ".", "run", "(", "[", "and_sum", ",", "or_sum", ",", "T_sum", ",", "R_sum", "]", ")", "\n", "#Log some information", "\n", "logging", ".", "info", "(", "'STEP: %d '", ",", "i", ")", "\n", "return", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "\n", "", "def", "eval", "(", "num_class", ",", "csvname", ",", "session", ",", "image_val", ",", "eval_batch", ")", ":", "\n", "            ", "or_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "and_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "T_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "R_", "=", "np", ".", "zeros", "(", "(", "num_class", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "math", ".", "ceil", "(", "len", "(", "image_val", ")", "/", "eval_batch", ")", ")", ":", "\n", "                ", "and_eval_batch", ",", "or_eval_batch", ",", "T_eval_batch", ",", "R_eval_batch", "=", "eval_step", "(", "session", ",", "i", "+", "1", ")", "\n", "and_", "=", "and_", "+", "and_eval_batch", "\n", "or_", "=", "or_", "+", "or_eval_batch", "\n", "T_", "=", "T_", "+", "T_eval_batch", "\n", "R_", "=", "R_", "+", "R_eval_batch", "\n", "", "Recall_rate", "=", "and_", "/", "T_", "\n", "Precision", "=", "and_", "/", "R_", "\n", "IoU", "=", "and_", "/", "or_", "\n", "mPrecision", "=", "np", ".", "mean", "(", "Precision", ")", "\n", "mRecall_rate", "=", "np", ".", "mean", "(", "Recall_rate", ")", "\n", "mIoU", "=", "np", ".", "mean", "(", "IoU", ")", "\n", "print", "(", "\"Precision:\"", ")", "\n", "print", "(", "Precision", ")", "\n", "print", "(", "\"Recall rate:\"", ")", "\n", "print", "(", "Recall_rate", ")", "\n", "print", "(", "\"IoU:\"", ")", "\n", "print", "(", "IoU", ")", "\n", "print", "(", "\"mPrecision:\"", ")", "\n", "print", "(", "mPrecision", ")", "\n", "print", "(", "\"mRecall_rate:\"", ")", "\n", "print", "(", "mRecall_rate", ")", "\n", "print", "(", "\"mIoU\"", ")", "\n", "print", "(", "mIoU", ")", "\n", "with", "open", "(", "csvname", ",", "'a'", ",", "newline", "=", "''", ")", "as", "out", ":", "\n", "                ", "csv_write", "=", "csv", ".", "writer", "(", "out", ",", "dialect", "=", "'excel'", ")", "\n", "csv_write", ".", "writerow", "(", "Precision", ")", "\n", "csv_write", ".", "writerow", "(", "Recall_rate", ")", "\n", "csv_write", ".", "writerow", "(", "IoU", ")", "\n", "", "return", "mPrecision", ",", "mPrecision", ",", "mIoU", "\n", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", "log_device_placement", "=", "False", ",", "gpu_options", "=", "gpu_options", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "var_list", "=", "tf", ".", "global_variables", "(", ")", ",", "max_to_keep", "=", "10", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "init", ")", "\n", "sess", ".", "run", "(", "[", "titerator", ".", "initializer", ",", "viterator", ".", "initializer", "]", ")", "\n", "sfn", ".", "load_weight", "(", "sess", ",", "'imgnet_resnet18.npz'", ",", "var1", ")", "#load base_net's parameter.", "\n", "step", "=", "0", ";", "\n", "if", "Start_train", "is", "not", "True", ":", "\n", "#input the checkpoint address,and the step number.", "\n", "                ", "checkpoint", "=", "'./log/swiftnet/model.ckpt-37127'", "\n", "saver", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "step", "=", "37127", "\n", "sess", ".", "run", "(", "tf", ".", "assign", "(", "global_step", ",", "step", ")", ")", "\n", "", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", ",", "sess", ".", "graph", ")", "\n", "final", "=", "num_steps_per_epoch", "*", "num_epochs", "\n", "for", "i", "in", "range", "(", "step", ",", "final", ",", "1", ")", ":", "\n", "                ", "if", "i", "%", "num_batches_per_epoch", "==", "0", ":", "\n", "                    ", "logging", ".", "info", "(", "'Epoch %s/%s'", ",", "i", "/", "num_batches_per_epoch", "+", "1", ",", "num_epochs", ")", "\n", "learning_rate_value", "=", "sess", ".", "run", "(", "[", "lr", "]", ")", "\n", "logging", ".", "info", "(", "'Current Learning Rate: %s'", ",", "learning_rate_value", ")", "\n", "if", "i", "is", "not", "step", ":", "\n", "                        ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "logdir", ",", "log_name", ")", ",", "global_step", "=", "i", ")", "\n", "mPrecision", ",", "mRecall_rate", ",", "mIoU", "=", "eval", "(", "num_class", "=", "num_classes", ",", "csvname", "=", "csvname", ",", "session", "=", "sess", ",", "image_val", "=", "image_val_files", ",", "eval_batch", "=", "eval_batch_size", ")", "\n", "", "", "if", "i", "%", "min", "(", "num_steps_per_epoch", ",", "10", ")", "==", "0", ":", "\n", "                    ", "loss", ",", "summaries", "=", "train_sum", "(", "sess", ",", "train_op", ",", "global_step", ",", "sums", "=", "my_summary_op", ",", "loss", "=", "total_loss", ",", "pre", "=", "mPrecision", ",", "recall", "=", "mPrecision", ",", "iou", "=", "mIoU", ")", "\n", "summary_writer", ".", "add_summary", "(", "summaries", ",", "global_step", "=", "i", "+", "1", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "train_step", "(", "sess", ",", "train_op", ",", "global_step", ")", "\n", "", "", "summary_writer", ".", "close", "(", ")", "\n", "eval", "(", "num_class", "=", "num_classes", ",", "csvname", "=", "csvname", ",", "session", "=", "sess", ",", "image_val", "=", "image_val_files", ",", "eval_batch", "=", "eval_batch_size", ")", "\n", "logging", ".", "info", "(", "'Final Loss: %s'", ",", "loss", ")", "\n", "logging", ".", "info", "(", "'Finished training! Saving model to disk now.'", ")", "\n", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "logdir", ",", "log_name", ")", ",", "global_step", "=", "final", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv": [[9, 25], ["tensorflow.layers.conv2d", "tensorflow.zeros_initializer", "tensorflow.random_normal_initializer"], "function", ["None"], ["def", "conv", "(", "inputs", ",", "filters", ",", "kernel_size", ",", "strides", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "'SAME'", ",", "dilation_rate", "=", "(", "1", ",", "1", ")", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "use_bias", "=", "None", ",", "regularizer", "=", "None", ",", "name", "=", "None", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "out", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "inputs", ",", "\n", "filters", "=", "filters", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation_rate", "=", "dilation_rate", ",", "\n", "activation", "=", "activation", ",", "\n", "use_bias", "=", "use_bias", ",", "\n", "kernel_regularizer", "=", "regularizer", ",", "\n", "bias_initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ",", "\n", "kernel_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.1", ")", ",", "\n", "name", "=", "name", ",", "\n", "reuse", "=", "reuse", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch": [[30, 33], ["tensorflow.layers.batch_normalization"], "function", ["None"], ["", "def", "batch", "(", "inputs", ",", "training", "=", "True", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'n'", ")", ":", "\n", "    ", "out", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", ",", "training", "=", "training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "name", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch1": [[38, 47], ["tensorflow.contrib.layers.l2_regularizer", "tensorflow.variable_scope", "swiftnet.conv", "tensorflow.nn.relu", "tensorflow.variable_scope", "swiftnet.conv", "swiftnet.batch", "swiftnet.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "branch1", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "momentum", "=", "0.9", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "x", ",", "numOut", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "activation", "=", "None", ",", "strides", "=", "(", "stride", ",", "stride", ")", ",", "name", "=", "'conv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "y", ",", "numOut", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "activation", "=", "None", ",", "regularizer", "=", "reg", ",", "name", "=", "'conv'", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch2": [[52, 58], ["tensorflow.contrib.layers.l2_regularizer", "tensorflow.variable_scope", "swiftnet.conv", "swiftnet.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "branch2", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "momentum", "=", "0.9", ",", "reuse", "=", "None", ")", ":", "\n", "    ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"convshortcut\"", ")", ":", "\n", "        ", "y", "=", "conv", "(", "x", ",", "numOut", ",", "kernel_size", "=", "[", "1", ",", "1", "]", ",", "activation", "=", "None", ",", "strides", "=", "(", "stride", ",", "stride", ")", ",", "name", "=", "'conv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual": [[63, 71], ["tensorflow.variable_scope", "swiftnet.branch1", "swiftnet.branch2", "tensorflow.nn.relu", "tensorflow.nn.relu", "x.get_shape().as_list", "x.get_shape"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch1", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.branch2"], ["", "", "def", "residual", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "1", ",", "is_training", "=", "True", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "branch", "=", "False", ",", "name", "=", "'res'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "block", "=", "branch1", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "stride", ",", "is_training", "=", "is_training", ",", "momentum", "=", "momentum", ",", "reuse", "=", "reuse", ")", "\n", "if", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "!=", "numOut", "or", "branch", ":", "\n", "            ", "skip", "=", "branch2", "(", "x", ",", "numOut", ",", "l2", ",", "stride", "=", "stride", ",", "is_training", "=", "is_training", ",", "momentum", "=", "momentum", ",", "reuse", "=", "reuse", ")", "\n", "return", "tf", ".", "nn", ".", "relu", "(", "block", "+", "skip", ")", ",", "block", "+", "skip", "\n", "", "else", ":", "\n", "            ", "return", "tf", ".", "nn", ".", "relu", "(", "x", "+", "block", ")", ",", "x", "+", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.resnet18": [[76, 107], ["tensorflow.variable_scope", "swiftnet.conv", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.contrib.layers.l2_regularizer", "swiftnet.batch", "tensorflow.variable_scope", "swiftnet.residual", "swiftnet.residual", "feature.append", "tensorflow.variable_scope", "swiftnet.residual", "swiftnet.residual", "feature.append", "tensorflow.variable_scope", "swiftnet.residual", "swiftnet.residual", "feature.append", "tensorflow.variable_scope", "swiftnet.residual", "swiftnet.residual", "feature.append"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.residual"], ["", "", "", "def", "resnet18", "(", "x", ",", "is_training", ",", "l2", "=", "None", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'Resnet18'", ")", ":", "\n", "    ", "feature", "=", "[", "]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", "/", "4", ")", "\n", "y", "=", "conv", "(", "x", ",", "64", ",", "kernel_size", "=", "[", "7", ",", "7", "]", ",", "activation", "=", "None", ",", "strides", "=", "2", ",", "name", "=", "'conv0'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'conv0/bn'", ")", ")", "\n", "y", "=", "tf", ".", "nn", ".", "max_pool", "(", "y", ",", "ksize", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'SAME'", ",", "name", "=", "'pool1'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'group0'", ")", ":", "\n", "            ", "res2a", ",", "t", "=", "residual", "(", "y", ",", "64", ",", "l2", ",", "branch", "=", "True", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res2b", ",", "t", "=", "residual", "(", "res2a", ",", "64", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group1'", ")", ":", "\n", "            ", "res3a", ",", "t", "=", "residual", "(", "res2b", ",", "128", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res3b", ",", "t", "=", "residual", "(", "res3a", ",", "128", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group2'", ")", ":", "\n", "            ", "res4a", ",", "t", "=", "residual", "(", "res3b", ",", "256", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res4b", ",", "t", "=", "residual", "(", "res4a", ",", "256", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'group3'", ")", ":", "\n", "            ", "res5a", ",", "t", "=", "residual", "(", "res4b", ",", "512", ",", "l2", ",", "stride", "=", "2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block0'", ")", "\n", "res5b", ",", "t", "=", "residual", "(", "res5a", ",", "512", ",", "l2", ",", "reuse", "=", "reuse", ",", "is_training", "=", "is_training", ",", "name", "=", "'block1'", ")", "\n", "feature", ".", "append", "(", "t", ")", "\n", "#pool5=tf.reduce_mean(res5b, [1, 2],keepdims=True)", "\n", "#dropout = tf.layers.dropout(pool5,rate=dropout,training=is_training)", "\n", "#y=conv(dropout, 1000, kernel_size=[1, 1],activation=None,name='class',use_bias=True,regularizer=reg,reuse=reuse)", "\n", "#y=conv(y, 512, kernel_size=[1, 1],activation=None,name='attention',use_bias=None,regularizer=reg,reuse=reuse)", "\n", "#y=tf.nn.relu(batch(y,training=is_training,reuse=reuse,momentum=momentum,name='bn'))\t\t", "\n", "#y=res5b*y", "\n", "#feature.append(y)", "\n", "", "", "return", "y", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.SpatialPyramidPooling": [[111, 134], ["math.ceil", "math.ceil", "tensorflow.variable_scope", "tensorflow.nn.relu", "swiftnet.conv", "levels.append", "range", "tensorflow.concat", "tensorflow.nn.relu", "swiftnet.conv", "tensorflow.contrib.layers.l2_regularizer", "swiftnet.batch", "len", "math.floor", "math.floor", "tensorflow.nn.avg_pool", "tensorflow.nn.relu", "swiftnet.conv", "tensorflow.image.resize_images", "levels.append", "swiftnet.batch", "swiftnet.batch", "str", "str"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "SpatialPyramidPooling", "(", "x", ",", "is_training", ",", "shape", "=", "[", "512", ",", "512", "]", ",", "grids", "=", "(", "8", ",", "4", ",", "2", ")", ",", "l2", "=", "None", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'spp'", ")", ":", "\n", "    ", "levels", "=", "[", "]", "\n", "height", "=", "math", ".", "ceil", "(", "shape", "[", "0", "]", "/", "32", ")", "\n", "weight", "=", "math", ".", "ceil", "(", "shape", "[", "1", "]", "/", "32", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn0'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'conv0'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "levels", ".", "append", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "grids", ")", ")", ":", "\n", "            ", "h", "=", "math", ".", "floor", "(", "height", "/", "grids", "[", "i", "]", ")", "\n", "w", "=", "math", ".", "floor", "(", "weight", "/", "grids", "[", "i", "]", ")", "\n", "kh", "=", "height", "-", "(", "grids", "[", "i", "]", "-", "1", ")", "*", "h", "\n", "kw", "=", "weight", "-", "(", "grids", "[", "i", "]", "-", "1", ")", "*", "w", "\n", "y", "=", "tf", ".", "nn", ".", "avg_pool", "(", "x", ",", "[", "1", ",", "kh", ",", "kw", ",", "1", "]", ",", "[", "1", ",", "h", ",", "w", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "y", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "y", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "y", "=", "conv", "(", "y", ",", "42", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "y", "=", "tf", ".", "image", ".", "resize_images", "(", "y", ",", "[", "height", ",", "weight", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "levels", ".", "append", "(", "y", ")", "\n", "", "final", "=", "tf", ".", "concat", "(", "levels", ",", "-", "1", ")", "\n", "final", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "final", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'blendbn'", ")", ")", "\n", "final", "=", "conv", "(", "final", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'blendconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.upsample": [[137, 149], ["math.ceil", "math.ceil", "tensorflow.variable_scope", "tensorflow.nn.relu", "swiftnet.conv", "tensorflow.image.resize_images", "tensorflow.nn.relu", "swiftnet.conv", "math.pow", "math.pow", "tensorflow.contrib.layers.l2_regularizer", "swiftnet.batch", "swiftnet.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "def", "upsample", "(", "x", ",", "skip", ",", "is_training", ",", "shape", "=", "[", "512", ",", "512", "]", ",", "stage", "=", "0", ",", "l2", "=", "None", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ",", "name", "=", "'up0'", ")", ":", "\n", "    ", "height", "=", "math", ".", "ceil", "(", "shape", "[", "0", "]", "/", "math", ".", "pow", "(", "2", ",", "5", "-", "stage", ")", ")", "\n", "weight", "=", "math", ".", "ceil", "(", "shape", "[", "1", "]", "/", "math", ".", "pow", "(", "2", ",", "5", "-", "stage", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "skip", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "skip", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'skipbn'", ")", ")", "\n", "skip", "=", "conv", "(", "skip", ",", "128", ",", "kernel_size", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'skipconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "x", "=", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "[", "height", ",", "weight", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "x", "+", "skip", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'blendbn'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "128", ",", "kernel_size", "=", "3", ",", "activation", "=", "None", ",", "name", "=", "'blendconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.swiftnet": [[152, 165], ["swiftnet.resnet18", "swiftnet.SpatialPyramidPooling", "swiftnet.upsample", "swiftnet.upsample", "swiftnet.upsample", "tensorflow.variable_scope", "tensorflow.nn.relu", "swiftnet.conv", "tensorflow.image.resize_images", "tensorflow.nn.softmax", "tensorflow.contrib.layers.l2_regularizer", "swiftnet.batch"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.resnet18", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.SpatialPyramidPooling", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.upsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.upsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.upsample", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.conv", "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.batch"], ["", "", "def", "swiftnet", "(", "x", ",", "numclass", ",", "is_training", ",", "shape", ",", "l2", "=", "None", ",", "dropout", "=", "0.05", ",", "reuse", "=", "None", ",", "momentum", "=", "0.9", ")", ":", "\n", "    ", "xclass", ",", "feature", "=", "resnet18", "(", "x", ",", "is_training", ",", "l2", ",", "dropout", "=", "dropout", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'Resnet18'", ")", "\n", "x", "=", "SpatialPyramidPooling", "(", "feature", "[", "-", "1", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "grids", "=", "(", "8", ",", "4", ",", "2", ")", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'spp'", ")", "\n", "x", "=", "upsample", "(", "x", ",", "feature", "[", "-", "2", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "stage", "=", "1", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up1'", ")", "\n", "x", "=", "upsample", "(", "x", ",", "feature", "[", "-", "3", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "stage", "=", "2", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up2'", ")", "\n", "x", "=", "upsample", "(", "x", ",", "feature", "[", "-", "4", "]", ",", "is_training", ",", "shape", "=", "shape", ",", "stage", "=", "3", ",", "l2", "=", "l2", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'up3'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'class'", ")", ":", "\n", "        ", "reg", "=", "None", "if", "l2", "is", "None", "else", "tf", ".", "contrib", ".", "layers", ".", "l2_regularizer", "(", "scale", "=", "l2", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "batch", "(", "x", ",", "training", "=", "is_training", ",", "reuse", "=", "reuse", ",", "momentum", "=", "momentum", ",", "name", "=", "'classbn'", ")", ")", "\n", "x", "=", "conv", "(", "x", ",", "numclass", ",", "kernel_size", "=", "3", ",", "activation", "=", "None", ",", "name", "=", "'classconv'", ",", "regularizer", "=", "reg", ",", "reuse", "=", "reuse", ")", "\n", "x", "=", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "[", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "]", ",", "method", "=", "0", ",", "align_corners", "=", "True", ")", "\n", "final", "=", "tf", ".", "nn", ".", "softmax", "(", "x", ",", "name", "=", "'logits_to_softmax'", ")", "\n", "", "return", "x", ",", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.swiftnet.load_weight": [[172, 199], ["dict", "numpy.load", "sess.run", "print", "v.name.split", "v.assign", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate", "v.name.split", "v.name.split"], "function", ["home.repos.pwc.inspect_result.Katexiang_swiftnet.swiftnet.train.run"], ["", "def", "load_weight", "(", "sess", ",", "resnet50_path", ",", "varss", ")", ":", "\n", "    ", "param", "=", "dict", "(", "np", ".", "load", "(", "resnet50_path", ")", ")", "\n", "for", "v", "in", "varss", ":", "\n", "        ", "nameEnd", "=", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "if", "nameEnd", "==", "\"moving_mean:0\"", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "13", "]", "+", "\"mean/EMA\"", "\n", "", "elif", "nameEnd", "==", "\"moving_variance:0\"", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "17", "]", "+", "\"variance/EMA\"", "\n", "", "elif", "nameEnd", "==", "'kernel:0'", ":", "\n", "            ", "if", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "1", "]", "==", "'conv0'", ":", "\n", "                ", "name", "=", "'conv0/W'", "\n", "b", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "0", ",", ":", "]", ",", "2", ")", "\n", "g", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "1", ",", ":", "]", ",", "2", ")", "\n", "r", "=", "np", ".", "expand_dims", "(", "param", "[", "name", "]", "[", ":", ",", ":", ",", "2", ",", ":", "]", ",", "2", ")", "\n", "param", "[", "name", "]", "=", "np", ".", "concatenate", "(", "[", "r", ",", "g", ",", "b", "]", ",", "2", ")", "\n", "", "elif", "v", ".", "name", ".", "split", "(", "'/'", ")", "[", "1", "]", "==", "'class'", ":", "\n", "                ", "name", "=", "'linear/W'", "\n", "", "else", ":", "\n", "                ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "13", "]", "+", "'W'", "\n", "", "", "elif", "nameEnd", "==", "'gamma:0'", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "2", "]", "\n", "", "elif", "nameEnd", "==", "'beta:0'", ":", "\n", "            ", "name", "=", "v", ".", "name", "[", "9", ":", "-", "2", "]", "\n", "", "else", ":", "\n", "            ", "name", "=", "'linear/b'", "\n", "", "sess", ".", "run", "(", "v", ".", "assign", "(", "param", "[", "name", "]", ")", ")", "\n", "print", "(", "\"Copy weights: \"", "+", "name", "+", "\"---->\"", "+", "v", ".", "name", ")", "\n", "\n"]]}