{"home.repos.pwc.inspect_result.otamio_kga.None.summary.EpocResult.__gt__": [[15, 17], ["None"], "methods", ["None"], ["    ", "def", "__gt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "validation", ".", "mrr", ">", "other", ".", "validation", ".", "mrr", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.EpocResult.__lt__": [[18, 20], ["None"], "methods", ["None"], ["", "def", "__lt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "validation", ".", "mrr", "<", "other", ".", "validation", ".", "mrr", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.EpocResult.__eq__": [[21, 23], ["None"], "methods", ["None"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "validation", ".", "mrr", "==", "other", ".", "validation", ".", "mrr", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result": [[25, 31], ["Result"], "function", ["None"], ["", "", "def", "convert_result", "(", "dic", ")", ":", "\n", "    ", "return", "Result", "(", "dic", "[", "'mr'", "]", ",", "\n", "dic", "[", "'mrr'", "]", ",", "\n", "dic", "[", "'hits@1'", "]", ",", "\n", "dic", "[", "'hits@3'", "]", ",", "\n", "dic", "[", "'hits@10'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_tucker": [[33, 68], ["glob.iglob", "open", "result.append", "print", "[].strip", "[].strip.startswith", "[].strip.startswith", "summary.EpocResult", "[].strip", "int", "[].strip.startswith", "summary.convert_result", "summary.convert_result", "len", "result.append", "float", "[].strip.startswith", "[].strip.split", "summary.EpocResult", "[].strip.split", "float", "[].strip.startswith", "[].split", "summary.convert_result", "summary.convert_result", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "fname.split", "[].strip.split", "[].strip.split"], "function", ["home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result"], ["", "def", "parse_tucker", "(", "args", ")", ":", "\n", "    ", "results", "=", "{", "}", "\n", "for", "fname", "in", "glob", ".", "iglob", "(", "f\"{args.path}/*{args.dataset}*{args.mode}*{args.model}*.log\"", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "with", "open", "(", "fname", ")", "as", "fd", ":", "\n", "                ", "epoc", "=", "0", "\n", "result", "=", "[", "]", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "current", "=", "valid", "\n", "for", "line", "in", "fd", ":", "\n", "                    ", "line", "=", "line", ".", "split", "(", "'INFO'", ")", "[", "1", "]", ".", "strip", "(", ")", "\n", "if", "line", ".", "startswith", "(", "\"Validation at\"", ")", ":", "\n", "                        ", "if", "len", "(", "test", ")", ">", "0", ":", "\n", "                            ", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "convert_result", "(", "valid", ")", ",", "convert_result", "(", "test", ")", ")", ")", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "", "current", "=", "valid", "\n", "epoc", "=", "int", "(", "line", ".", "split", "(", ")", "[", "-", "1", "]", ")", "\n", "", "if", "line", ".", "startswith", "(", "\"Test at\"", ")", ":", "\n", "                        ", "current", "=", "test", "\n", "", "elif", "line", ".", "startswith", "(", "\"Hits @10\"", ")", ":", "\n", "                        ", "current", "[", "\"hits@10\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Hits @3\"", ")", ":", "\n", "                        ", "current", "[", "\"hits@3\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Hits @1\"", ")", ":", "\n", "                        ", "current", "[", "\"hits@1\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Mean rank\"", ")", ":", "\n", "                        ", "current", "[", "\"mr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Mean reciprocal rank\"", ")", ":", "\n", "                        ", "current", "[", "\"mrr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "convert_result", "(", "valid", ")", ",", "convert_result", "(", "test", ")", ")", ")", "\n", "", "results", "[", "fname", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "strip", "(", ")", "]", "=", "result", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "print", "(", "'Running:'", ",", "fname", ",", "e", ")", "\n", "pass", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_rotate": [[70, 113], ["glob.iglob", "[].strip", "open", "[].strip", "[].strip.startswith", "result.append", "[].strip.startswith", "result.append", "int", "float", "[].strip.startswith", "summary.EpocResult", "print", "[].split", "len", "summary.EpocResult", "float", "[].strip.startswith", "summary.convert_result", "summary.convert_result", "[].strip.strip().split", "summary.convert_result", "summary.convert_result", "[].split", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.startswith", "fname.split", "[].strip.strip", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.startswith", "[].strip.split", "float", "[].strip.split", "[].strip.split"], "function", ["home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result"], ["", "def", "parse_rotate", "(", "args", ")", ":", "\n", "    ", "results", "=", "{", "}", "\n", "for", "fname", "in", "glob", ".", "iglob", "(", "f\"{args.path}/*{args.dataset}*{args.mode}*{args.model}*/train.log\"", ")", ":", "\n", "        ", "with", "open", "(", "fname", ")", "as", "fd", ":", "\n", "            ", "epoc", "=", "0", "\n", "result", "=", "[", "]", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "for", "line", "in", "fd", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"INFO\"", ")", "[", "1", "]", ".", "strip", "(", ")", "\n", "if", "len", "(", "test", ")", ">", "0", "and", "line", ".", "startswith", "(", "\"Valid MRR at step\"", ")", ":", "\n", "                    ", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "\n", "convert_result", "(", "valid", ")", ",", "\n", "convert_result", "(", "test", ")", ")", ")", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "epoc", "=", "int", "(", "line", ".", "split", "(", "':'", ")", "[", "0", "]", ".", "split", "(", ")", "[", "-", "1", "]", ")", "\n", "", "if", "line", ".", "startswith", "(", "\"Valid HITS@10 at step\"", ")", ":", "\n", "                    ", "valid", "[", "\"hits@10\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Valid HITS@3 at step\"", ")", ":", "\n", "                    ", "valid", "[", "\"hits@3\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Valid HITS@1 at step\"", ")", ":", "\n", "                    ", "valid", "[", "\"hits@1\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Valid MR at step\"", ")", ":", "\n", "                    ", "valid", "[", "\"mr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Valid MRR at step\"", ")", ":", "\n", "                    ", "valid", "[", "\"mrr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Test HITS@10 at step\"", ")", ":", "\n", "                    ", "test", "[", "\"hits@10\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Test HITS@3 at step\"", ")", ":", "\n", "                    ", "test", "[", "\"hits@3\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Test HITS@1 at step\"", ")", ":", "\n", "                    ", "test", "[", "\"hits@1\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Test MR at step\"", ")", ":", "\n", "                    ", "test", "[", "\"mr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "elif", "line", ".", "startswith", "(", "\"Test MRR at step\"", ")", ":", "\n", "                    ", "test", "[", "\"mrr\"", "]", "=", "float", "(", "line", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "", "", "try", ":", "\n", "                ", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "convert_result", "(", "valid", ")", ",", "convert_result", "(", "test", ")", ")", ")", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "                ", "print", "(", "'Running:'", ",", "fname", ",", "e", ")", "\n", "pass", "\n", "", "", "exp_name", "=", "fname", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "strip", "(", ")", "\n", "results", "[", "exp_name", "]", "=", "result", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_pbg": [[115, 150], ["glob.iglob", "open", "result.append", "print", "line[].strip.startswith", "line[].strip.startswith", "summary.EpocResult", "[].strip", "int", "line[].strip", "list", "summary.convert_result", "summary.convert_result", "len", "map", "len", "result.append", "len", "[].strip", "fname.split", "[].split", "line[].strip.split", "summary.EpocResult", "line[].strip.split", "float", "summary.convert_result", "summary.convert_result", "[].split", "line[].strip.split", "x.split", "fname.split"], "function", ["home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result", "home.repos.pwc.inspect_result.otamio_kga.None.summary.convert_result"], ["", "def", "parse_pbg", "(", "args", ")", ":", "\n", "    ", "results", "=", "{", "}", "\n", "for", "fname", "in", "glob", ".", "iglob", "(", "f\"{args.path}/*{args.dataset}*/{args.model}*/{args.model}*.log\"", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "with", "open", "(", "fname", ")", "as", "fd", ":", "\n", "                ", "epoc", "=", "0", "\n", "result", "=", "[", "]", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "for", "line", "in", "fd", ":", "\n", "                    ", "try", ":", "\n", "                        ", "line", "=", "line", ".", "split", "(", "'INFO:'", ")", "[", "1", "]", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "                            ", "continue", "\n", "", "", "except", "IndexError", ":", "\n", "                        ", "continue", "\n", "", "if", "line", ".", "startswith", "(", "\"Finished epoch\"", ")", ":", "\n", "                        ", "epoc", "=", "int", "(", "line", ".", "split", "(", "'Finished epoch'", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "0", "]", ")", "\n", "", "if", "line", ".", "startswith", "(", "\"Stats: loss:\"", ")", ":", "\n", "                        ", "line", "=", "line", "[", "6", ":", "]", ".", "strip", "(", ")", "\n", "values", "=", "list", "(", "map", "(", "lambda", "x", ":", "float", "(", "x", ".", "split", "(", "':'", ")", "[", "1", "]", ")", ",", "line", ".", "split", "(", "','", ")", ")", ")", "\n", "if", "len", "(", "test", ")", ">", "0", ":", "\n", "                            ", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "convert_result", "(", "valid", ")", ",", "convert_result", "(", "test", ")", ")", ")", "\n", "valid", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "", "if", "len", "(", "valid", ")", "==", "0", ":", "\n", "                            ", "_", ",", "valid", "[", "\"mr\"", "]", ",", "valid", "[", "\"mrr\"", "]", ",", "valid", "[", "\"hits@1\"", "]", ",", "valid", "[", "\"hits@10\"", "]", ",", "_", ",", "_", ",", "_", "=", "values", "\n", "valid", "[", "\"hits@3\"", "]", "=", "0.0", "\n", "", "else", ":", "\n", "                            ", "_", ",", "test", "[", "\"mr\"", "]", ",", "test", "[", "\"mrr\"", "]", ",", "test", "[", "\"hits@1\"", "]", ",", "test", "[", "\"hits@10\"", "]", ",", "_", ",", "_", ",", "_", "=", "values", "\n", "test", "[", "\"hits@3\"", "]", "=", "0.0", "\n", "", "", "", "result", ".", "append", "(", "EpocResult", "(", "epoc", ",", "convert_result", "(", "valid", ")", ",", "convert_result", "(", "test", ")", ")", ")", "\n", "", "results", "[", "fname", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "strip", "(", ")", "+", "'_'", "+", "fname", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "]", "=", "result", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "print", "(", "\"Error:\"", ",", "fname", ",", "e", ")", "\n", "pass", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.None.summary.main": [[152, 183], ["parser.parse_args", "enumerate", "summary.parse_rotate", "summary.parse_tucker", "summary.parse_pbg", "sorted", "len", "print", "result.items", "pandas.DataFrame().sort_values", "max", "exp.rsplit", "frame.append", "print", "pandas.DataFrame", "round", "round", "round"], "function", ["home.repos.pwc.inspect_result.otamio_kga.rotate.run.parse_args", "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_rotate", "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_tucker", "home.repos.pwc.inspect_result.otamio_kga.None.summary.parse_pbg"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "'DWD'", "not", "in", "args", ".", "dataset", ":", "\n", "        ", "results_rotate", "=", "parse_rotate", "(", "args", ")", "\n", "results_tucker", "=", "parse_tucker", "(", "args", ")", "\n", "results_pbg", "=", "{", "}", "\n", "", "else", ":", "\n", "        ", "results_rotate", "=", "{", "}", "\n", "results_tucker", "=", "{", "}", "\n", "results_pbg", "=", "parse_pbg", "(", "args", ")", "\n", "\n", "", "frame", "=", "[", "]", "\n", "for", "idx", ",", "result", "in", "enumerate", "(", "[", "results_rotate", ",", "results_tucker", ",", "results_pbg", "]", ")", ":", "\n", "        ", "for", "exp", ",", "res", "in", "sorted", "(", "result", ".", "items", "(", ")", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "best", "=", "max", "(", "res", ")", "\n", "exp", ",", "model", "=", "exp", ".", "rsplit", "(", "'_'", ",", "1", ")", "\n", "frame", ".", "append", "(", "{", "\n", "\"dataset\"", ":", "exp", ",", "\n", "\"model\"", ":", "model", ",", "\n", "\"best_epoc\"", ":", "best", ".", "epoc", "//", "100", "if", "idx", "==", "0", "else", "best", ".", "epoc", ",", "\n", "\"mrr\"", ":", "round", "(", "best", ".", "test", ".", "mrr", ",", "3", ")", ",", "\n", "\"hits@1\"", ":", "round", "(", "best", ".", "test", ".", "hits_1", ",", "3", ")", ",", "\n", "\"hits@10\"", ":", "round", "(", "best", ".", "test", ".", "hits_10", ",", "3", ")", "\n", "}", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "print", "(", "\"Cannot process out:\"", ",", "exp", ")", "\n", "\n", "", "", "", "if", "len", "(", "frame", ")", ">", "0", ":", "\n", "        ", "print", "(", "pd", ".", "DataFrame", "(", "frame", ")", ".", "sort_values", "(", "by", "=", "[", "\"model\"", ",", "\"mrr\"", ",", "\"hits@1\"", ",", "\"hits@10\"", "]", ",", "ascending", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.preprocess_kg.load_data": [[15, 28], ["pandas.read_csv", "numpy.zeros", "tqdm.tqdm", "pd.read_csv.iterrows"], "function", ["None"], ["def", "load_data", "(", "file_path", ",", "ent2idx", ",", "rel2idx", ")", ":", "\n", "    ", "df", "=", "pd", ".", "read_csv", "(", "file_path", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ")", "\n", "\n", "M", "=", "df", ".", "shape", "[", "0", "]", "# dataset size", "\n", "\n", "X", "=", "np", ".", "zeros", "(", "[", "M", ",", "3", "]", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "i", ",", "row", "in", "tqdm", ".", "tqdm", "(", "df", ".", "iterrows", "(", ")", ")", ":", "\n", "        ", "X", "[", "i", ",", "0", "]", "=", "ent2idx", "[", "row", "[", "0", "]", "]", "\n", "X", "[", "i", ",", "1", "]", "=", "rel2idx", "[", "row", "[", "1", "]", "]", "\n", "X", "[", "i", ",", "2", "]", "=", "ent2idx", "[", "row", "[", "2", "]", "]", "\n", "\n", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.numeric_eval.populate_estimate": [[28, 56], ["test.iterrows", "tqdm.tqdm", "test.columns.tolist().index", "range", "print", "ent_rel.append", "range", "model", "range", "len", "len", "min", "list", "test.columns.tolist", "torch.LongTensor().view", "torch.LongTensor", "len", "filter", "preds.append", "preds.append", "torch.LongTensor", "range", "len", "x.item", "torch.argsort"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.numeric_eval.compute_result": [[58, 68], ["abs", "test[].unique", "print", "res.append", "pandas.DataFrame", "round", "sli[].mean"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.Gate.__init__": [[24, 37], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_size", ",", "\n", "output_size", ",", "\n", "gate_activation", "=", "torch", ".", "sigmoid", ")", ":", "\n", "\n", "        ", "super", "(", "Gate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "self", ".", "gate_activation", "=", "gate_activation", "\n", "self", ".", "g", "=", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ")", "\n", "self", ".", "g1", "=", "nn", ".", "Linear", "(", "output_size", ",", "output_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "g2", "=", "nn", ".", "Linear", "(", "input_size", "-", "output_size", ",", "output_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "gate_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "output_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.Gate.forward": [[38, 45], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "model.Gate.gate_activation", "model.Gate.g", "model.Gate.g1", "model.Gate.g2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_ent", ",", "x_lit", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "[", "x_ent", ",", "x_lit", "]", ",", "1", ")", "\n", "g_embedded", "=", "torch", ".", "tanh", "(", "self", ".", "g", "(", "x", ")", ")", "\n", "gate", "=", "self", ".", "gate_activation", "(", "self", ".", "g1", "(", "x_ent", ")", "+", "self", ".", "g2", "(", "x_lit", ")", "+", "self", ".", "gate_bias", ")", "\n", "output", "=", "(", "1", "-", "gate", ")", "*", "x_ent", "+", "gate", "*", "g_embedded", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.__init__": [[48, 115], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.KGEModel.numerical_literals.size", "model.Gate", "torch.Parameter", "torch.Parameter", "torch.Parameter", "ValueError", "ValueError", "ValueError", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.KGEModel.numerical_literals.size", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "model.KGEModel.gamma.item", "model.KGEModel.embedding_range.item"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_name", ",", "nentity", ",", "nrelation", ",", "hidden_dim", ",", "gamma", ",", "\n", "double_entity_embedding", "=", "False", ",", "double_relation_embedding", "=", "False", ",", "\n", "numerical_literals", "=", "None", ",", "c", "=", "None", ",", "var", "=", "None", ")", ":", "\n", "        ", "super", "(", "KGEModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "epsilon", "=", "2.0", "\n", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "gamma", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n", "self", ".", "embedding_range", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "(", "self", ".", "gamma", ".", "item", "(", ")", "+", "self", ".", "epsilon", ")", "/", "hidden_dim", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n", "self", ".", "entity_dim", "=", "hidden_dim", "*", "2", "if", "double_entity_embedding", "else", "hidden_dim", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "*", "2", "if", "double_relation_embedding", "else", "hidden_dim", "\n", "\n", "self", ".", "entity_embedding", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "nentity", ",", "self", ".", "entity_dim", ")", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "entity_embedding", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "self", ".", "relation_embedding", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "nrelation", ",", "self", ".", "relation_dim", ")", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "relation_embedding", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "# Load numeric literals if necessary", "\n", "if", "'Gate'", "in", "model_name", ":", "\n", "            ", "assert", "(", "numerical_literals", "is", "not", "None", ")", "\n", "self", ".", "numerical_literals", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "from_numpy", "(", "numerical_literals", ")", ")", "\n", "self", ".", "n_num_lit", "=", "self", ".", "numerical_literals", ".", "size", "(", "1", ")", "\n", "self", ".", "gate", "=", "Gate", "(", "self", ".", "entity_dim", "+", "self", ".", "n_num_lit", ",", "self", ".", "entity_dim", ")", "\n", "self", ".", "entity_embedding_enriched", "=", "None", "\n", "", "elif", "'KBLN'", "in", "model_name", ":", "\n", "            ", "assert", "(", "numerical_literals", "is", "not", "None", ")", "\n", "self", ".", "numerical_literals", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "from_numpy", "(", "numerical_literals", ")", ")", "\n", "self", ".", "n_num_lit", "=", "self", ".", "numerical_literals", ".", "size", "(", "1", ")", "\n", "self", ".", "c", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "FloatTensor", "(", "c", ")", ")", "\n", "self", ".", "var", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "FloatTensor", "(", "var", ")", ")", "\n", "self", ".", "nf_weights", "=", "nn", ".", "Embedding", "(", "nrelation", ",", "self", ".", "n_num_lit", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "numerical_literals", "=", "None", "\n", "\n", "", "if", "model_name", "==", "'pRotatE'", ":", "\n", "            ", "self", ".", "modulus", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "[", "0.5", "*", "self", ".", "embedding_range", ".", "item", "(", ")", "]", "]", ")", ")", "\n", "\n", "# Do not forget to modify this line when you add a new model in the \"forward\" function", "\n", "", "if", "model_name", "not", "in", "[", "'TransE'", ",", "'DistMult'", ",", "'ComplEx'", ",", "'RotatE'", ",", "'pRotatE'", ",", "\n", "'TransE_Gate'", ",", "'RotatE_Gate'", ",", "'TransE_KBLN'", ",", "'RotatE_KBLN'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "model_name", ")", "\n", "\n", "", "if", "model_name", "==", "'RotatE'", "and", "(", "not", "double_entity_embedding", "or", "double_relation_embedding", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'RotatE should use --double_entity_embedding'", ")", "\n", "\n", "", "if", "model_name", "==", "'ComplEx'", "and", "(", "not", "double_entity_embedding", "or", "not", "double_relation_embedding", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'ComplEx should use --double_entity_embedding and --double_relation_embedding'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.forward": [[116, 262], ["torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "sample.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "ValueError", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "head_part.size", "head_part.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "ValueError", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "tail_part.size", "tail_part.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "head_part.view", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "head_part.view", "tail_part.view", "tail_part.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "sample", ",", "mode", "=", "'single'", ")", ":", "\n", "        ", "'''\n        Forward function that calculate the score of a batch of triples.\n        In the 'single' mode, sample is a batch of triple.\n        In the 'head-batch' or 'tail-batch' mode, sample consists two part.\n        The first part is usually the positive sample.\n        And the second part is the entities in the negative samples.\n        Because negative samples and positive samples usually share two elements\n        in their triple ((head, relation) or (relation, tail)).\n        '''", "\n", "if", "self", ".", "numerical_literals", "is", "not", "None", "and", "'Gate'", "in", "self", ".", "model_name", ":", "\n", "            ", "embedding", "=", "self", ".", "entity_embedding_enriched", "# If model_Gate, then use enriched embedding", "\n", "", "else", ":", "\n", "            ", "embedding", "=", "self", ".", "entity_embedding", "# Otherwise, use normal embedding", "\n", "\n", "", "if", "mode", "==", "'single'", ":", "\n", "            ", "batch_size", ",", "negative_sample_size", "=", "sample", ".", "size", "(", "0", ")", ",", "1", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "0", "]", "\n", ")", "\n", "relation_idx", "=", "sample", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "2", "]", "\n", ")", "\n", "\n", "", "", "elif", "mode", "==", "'head-batch'", ":", "\n", "            ", "tail_part", ",", "head_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "head_part", ".", "size", "(", "0", ")", ",", "head_part", ".", "size", "(", "1", ")", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", ".", "view", "(", "-", "1", ")", "\n", ")", "\n", "relation_idx", "=", "tail_part", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "2", "]", "\n", ")", "\n", "\n", "", "", "elif", "mode", "==", "'tail-batch'", ":", "\n", "            ", "head_part", ",", "tail_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "tail_part", ".", "size", "(", "0", ")", ",", "tail_part", ".", "size", "(", "1", ")", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", "\n", "relation_idx", "=", "head_part", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "model_func", "=", "{", "\n", "'TransE'", ":", "self", ".", "TransE", ",", "\n", "'DistMult'", ":", "self", ".", "DistMult", ",", "\n", "'ComplEx'", ":", "self", ".", "ComplEx", ",", "\n", "'RotatE'", ":", "self", ".", "RotatE", ",", "\n", "'pRotatE'", ":", "self", ".", "pRotatE", ",", "\n", "'TransE_Gate'", ":", "self", ".", "TransE_Gate", ",", "\n", "'RotatE_Gate'", ":", "self", ".", "RotatE_Gate", "\n", "}", "\n", "\n", "kbln_func", "=", "{", "\n", "'TransE_KBLN'", ":", "self", ".", "TransE_KBLN", ",", "\n", "'RotatE_KBLN'", ":", "self", ".", "RotatE_KBLN", "\n", "}", "\n", "\n", "if", "self", ".", "model_name", "in", "model_func", ":", "\n", "            ", "score", "=", "model_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "", "elif", "self", ".", "model_name", "in", "kbln_func", ":", "\n", "            ", "score", "=", "kbln_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n", "relation_idx", ",", "tail_literal", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "self", ".", "model_name", ")", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.enrich_embedding": [[263, 267], ["model.KGEModel.gate"], "methods", ["None"], ["", "def", "enrich_embedding", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "numerical_literals", "is", "not", "None", "and", "'Gate'", "in", "self", ".", "model_name", ":", "\n", "            ", "self", ".", "entity_embedding_enriched", "=", "self", ".", "gate", "(", "self", ".", "entity_embedding", ",", "\n", "self", ".", "numerical_literals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.TransE": [[268, 276], ["model.KGEModel.gamma.item", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "", "def", "TransE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "+", "(", "relation", "-", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "+", "relation", ")", "-", "tail", "\n", "\n", "", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.TransE_Gate": [[277, 279], ["model.KGEModel.TransE"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.TransE"], ["", "def", "TransE_Gate", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "return", "self", ".", "TransE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.TransE_KBLN": [[280, 293], ["model.KGEModel.TransE", "model.KGEModel.rbf", "model.KGEModel.nf_weights", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "head_literal.view.view.view", "tail_literal.view.view.view", "relation_idx.view", "tail_literal.view.view.unsqueeze().repeat", "head_literal.view.view.unsqueeze().repeat", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.KGEModel.transpose", "tail_literal.view.view.unsqueeze", "head_literal.view.view.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.TransE", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], ["", "def", "TransE_KBLN", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n", "relation_idx", ",", "tail_literal", ")", ":", "\n", "        ", "score_l", "=", "self", ".", "TransE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "head_literal", "=", "head_literal", ".", "view", "(", "head", ".", "shape", "[", "0", "]", ",", "head", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "tail_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "head_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "head_literal", "\n", "", "else", ":", "\n", "            ", "tail_literal", "=", "tail_literal", ".", "view", "(", "tail", ".", "shape", "[", "0", "]", ",", "tail", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "head_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "tail_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "tail_literal", "\n", "", "phi", "=", "self", ".", "rbf", "(", "n", ")", "\n", "w_nf", "=", "self", ".", "nf_weights", "(", "relation_idx", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "score_n", "=", "torch", ".", "bmm", "(", "phi", ",", "w_nf", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "return", "score_l", "+", "score_n", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.rbf": [[294, 296], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "def", "rbf", "(", "self", ",", "n", ")", ":", "\n", "        ", "return", "torch", ".", "exp", "(", "-", "(", "n", "-", "self", ".", "c", ")", "**", "2", "/", "self", ".", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.DistMult": [[297, 305], ["score.sum.sum.sum"], "methods", ["None"], ["", "def", "DistMult", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "*", "(", "relation", "*", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "*", "relation", ")", "*", "tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.ComplEx": [[306, 322], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "score.sum.sum.sum"], "methods", ["None"], ["", "def", "ComplEx", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_relation", ",", "im_relation", "=", "torch", ".", "chunk", "(", "relation", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "score", "=", "re_head", "*", "re_score", "+", "im_head", "*", "im_score", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "score", "=", "re_score", "*", "re_tail", "+", "im_score", "*", "im_tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.RotatE": [[323, 352], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "score.norm.norm.norm", "model.KGEModel.gamma.item", "score.norm.norm.sum", "model.KGEModel.embedding_range.item"], "methods", ["None"], ["", "def", "RotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159265358979323846", "\n", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "# Make phases of relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n", "re_relation", "=", "torch", ".", "cos", "(", "phase_relation", ")", "\n", "im_relation", "=", "torch", ".", "sin", "(", "phase_relation", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "re_score", "=", "re_score", "-", "re_head", "\n", "im_score", "=", "im_score", "-", "im_head", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "re_score", "=", "re_score", "-", "re_tail", "\n", "im_score", "=", "im_score", "-", "im_tail", "\n", "\n", "", "score", "=", "torch", ".", "stack", "(", "[", "re_score", ",", "im_score", "]", ",", "dim", "=", "0", ")", "\n", "score", "=", "score", ".", "norm", "(", "dim", "=", "0", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.RotatE_Gate": [[353, 355], ["model.KGEModel.RotatE"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.RotatE"], ["", "def", "RotatE_Gate", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "return", "self", ".", "RotatE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.RotatE_KBLN": [[356, 369], ["model.KGEModel.RotatE", "model.KGEModel.rbf", "model.KGEModel.nf_weights", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "head_literal.view.view.view", "tail_literal.view.view.view", "relation_idx.view", "tail_literal.view.view.unsqueeze().repeat", "head_literal.view.view.unsqueeze().repeat", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.KGEModel.transpose", "tail_literal.view.view.unsqueeze", "head_literal.view.view.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.RotatE", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], ["", "def", "RotatE_KBLN", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n", "relation_idx", ",", "tail_literal", ")", ":", "\n", "        ", "score_l", "=", "self", ".", "RotatE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "head_literal", "=", "head_literal", ".", "view", "(", "head", ".", "shape", "[", "0", "]", ",", "head", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "tail_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "head_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "head_literal", "\n", "", "else", ":", "\n", "            ", "tail_literal", "=", "tail_literal", ".", "view", "(", "tail", ".", "shape", "[", "0", "]", ",", "tail", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "head_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "tail_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "tail_literal", "\n", "", "phi", "=", "self", ".", "rbf", "(", "n", ")", "\n", "w_nf", "=", "self", ".", "nf_weights", "(", "relation_idx", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "score_n", "=", "torch", ".", "bmm", "(", "phi", ",", "w_nf", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "return", "score_l", "+", "score_n", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.pRotatE": [[370, 389], ["torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "model.KGEModel.gamma.item", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "torch.abs.sum", "torch.abs.sum", "torch.abs.sum"], "methods", ["None"], ["", "def", "pRotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159262358979323846", "\n", "\n", "# Make phases of entities and relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_head", "=", "head", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "phase_tail", "=", "tail", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "phase_head", "+", "(", "phase_relation", "-", "phase_tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "phase_head", "+", "phase_relation", ")", "-", "phase_tail", "\n", "\n", "", "score", "=", "torch", ".", "sin", "(", "score", ")", "\n", "score", "=", "torch", ".", "abs", "(", "score", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "*", "self", ".", "modulus", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.train_step": [[390, 454], ["model.train", "model.enrich_embedding", "optimizer.zero_grad", "next", "model", "model", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze", "loss.backward", "optimizer.step", "positive_sample.cuda.cuda.cuda", "negative_sample.cuda.cuda.cuda", "subsampling_weight.cuda.cuda.cuda", "torch.logsigmoid().mean", "torch.logsigmoid().mean", "torch.logsigmoid().mean", "positive_sample_loss.item", "negative_sample_loss.item", "loss.item", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid().squeeze.mean", "torch.logsigmoid().mean.mean", "subsampling_weight.cuda.cuda.sum", "subsampling_weight.cuda.cuda.sum", "regularization.item", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "model.entity_embedding.norm", "model.relation_embedding.norm().norm", "torch.softmax", "torch.softmax", "torch.softmax", "model.relation_embedding.norm"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.enrich_embedding"], ["", "@", "staticmethod", "\n", "def", "train_step", "(", "model", ",", "optimizer", ",", "train_iterator", ",", "args", ")", ":", "\n", "        ", "'''\n        A single train step. Apply back-propation and return the loss\n        '''", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "model", ".", "enrich_embedding", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "mode", "=", "next", "(", "train_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "subsampling_weight", "=", "subsampling_weight", ".", "cuda", "(", ")", "\n", "\n", "", "negative_score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", "=", "mode", ")", "\n", "\n", "if", "args", ".", "negative_adversarial_sampling", ":", "\n", "# In self-adversarial sampling, we do not apply back-propagation on the sampling weight", "\n", "            ", "negative_score", "=", "(", "F", ".", "softmax", "(", "negative_score", "*", "args", ".", "adversarial_temperature", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", "\n", "*", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "negative_score", "=", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "\n", "", "positive_score", "=", "model", "(", "positive_sample", ")", "\n", "\n", "positive_score", "=", "F", ".", "logsigmoid", "(", "positive_score", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "if", "args", ".", "uni_weight", ":", "\n", "            ", "positive_sample_loss", "=", "-", "positive_score", ".", "mean", "(", ")", "\n", "negative_sample_loss", "=", "-", "negative_score", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "positive_sample_loss", "=", "-", "(", "subsampling_weight", "*", "positive_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "negative_sample_loss", "=", "-", "(", "subsampling_weight", "*", "negative_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "\n", "", "loss", "=", "(", "positive_sample_loss", "+", "negative_sample_loss", ")", "/", "2", "\n", "\n", "if", "args", ".", "regularization", "!=", "0.0", ":", "\n", "# Use L3 regularization for ComplEx and DistMult", "\n", "            ", "regularization", "=", "args", ".", "regularization", "*", "(", "\n", "model", ".", "entity_embedding", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "+", "\n", "model", ".", "relation_embedding", ".", "norm", "(", "p", "=", "3", ")", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "\n", ")", "\n", "loss", "=", "loss", "+", "regularization", "\n", "regularization_log", "=", "{", "'regularization'", ":", "regularization", ".", "item", "(", ")", "}", "\n", "", "else", ":", "\n", "            ", "regularization_log", "=", "{", "}", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "log", "=", "{", "\n", "**", "regularization_log", ",", "\n", "'positive_sample_loss'", ":", "positive_sample_loss", ".", "item", "(", ")", ",", "\n", "'negative_sample_loss'", ":", "negative_sample_loss", ".", "item", "(", ")", ",", "\n", "'loss'", ":", "loss", ".", "item", "(", ")", "\n", "}", "\n", "\n", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step": [[455, 571], ["model.eval", "list", "list", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "numpy.array", "sklearn.metrics.average_precision_score", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "sum", "logs[].keys", "sample.cuda.cuda.cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model().squeeze().cpu().numpy", "dataloader.TestDataset", "dataloader.TestDataset", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "numpy.array.append", "sample.cuda.cuda.append", "max", "max", "len", "sum", "len", "model().squeeze().cpu", "positive_sample.cuda.cuda.size", "model", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "range", "positive_sample.cuda.cuda.cuda", "negative_sample.cuda.cuda.cuda", "filter_bias.cuda.cuda.cuda", "logs.append", "logging.info", "model().squeeze", "ValueError", "ranking.size", "ranking.item", "float", "model"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "test_step", "(", "model", ",", "test_triples", ",", "all_true_triples", ",", "args", ")", ":", "\n", "        ", "'''\n        Evaluate the model on test or valid datasets\n        '''", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "countries", ":", "\n", "# Countries S* datasets are evaluated on AUC-PR", "\n", "# Process test data for AUC-PR evaluation", "\n", "            ", "sample", "=", "list", "(", ")", "\n", "y_true", "=", "list", "(", ")", "\n", "for", "head", ",", "relation", ",", "tail", "in", "test_triples", ":", "\n", "                ", "for", "candidate_region", "in", "args", ".", "regions", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", "if", "candidate_region", "==", "tail", "else", "0", ")", "\n", "sample", ".", "append", "(", "(", "head", ",", "relation", ",", "candidate_region", ")", ")", "\n", "\n", "", "", "sample", "=", "torch", ".", "LongTensor", "(", "sample", ")", "\n", "if", "args", ".", "cuda", ":", "\n", "                ", "sample", "=", "sample", ".", "cuda", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "y_score", "=", "model", "(", "sample", ")", ".", "squeeze", "(", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "y_true", "=", "np", ".", "array", "(", "y_true", ")", "\n", "\n", "# average_precision_score is the same as auc_pr", "\n", "auc_pr", "=", "average_precision_score", "(", "y_true", ",", "y_score", ")", "\n", "\n", "metrics", "=", "{", "'auc_pr'", ":", "auc_pr", "}", "\n", "\n", "", "else", ":", "\n", "# Otherwise use standard (filtered) MRR, MR, HITS@1, HITS@3, and HITS@10 metrics", "\n", "# Prepare dataloader for evaluation", "\n", "            ", "test_dataloader_head", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "all_true_triples", ",", "\n", "args", ".", "nentity", ",", "\n", "args", ".", "nrelation", ",", "\n", "'head-batch'", "\n", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataloader_tail", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "all_true_triples", ",", "\n", "args", ".", "nentity", ",", "\n", "args", ".", "nrelation", ",", "\n", "'tail-batch'", "\n", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataset_list", "=", "[", "test_dataloader_head", ",", "test_dataloader_tail", "]", "\n", "\n", "logs", "=", "[", "]", "\n", "\n", "step", "=", "0", "\n", "total_steps", "=", "sum", "(", "[", "len", "(", "dataset", ")", "for", "dataset", "in", "test_dataset_list", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "test_dataset", "in", "test_dataset_list", ":", "\n", "                    ", "for", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "mode", "in", "test_dataset", ":", "\n", "                        ", "if", "args", ".", "cuda", ":", "\n", "                            ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "filter_bias", "=", "filter_bias", ".", "cuda", "(", ")", "\n", "\n", "", "batch_size", "=", "positive_sample", ".", "size", "(", "0", ")", "\n", "\n", "score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", ")", "\n", "score", "+=", "filter_bias", "\n", "\n", "# Explicitly sort all the entities to ensure that there is no test exposure bias", "\n", "argsort", "=", "torch", ".", "argsort", "(", "score", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "                            ", "positive_arg", "=", "positive_sample", "[", ":", ",", "0", "]", "\n", "", "elif", "mode", "==", "'tail-batch'", ":", "\n", "                            ", "positive_arg", "=", "positive_sample", "[", ":", ",", "2", "]", "\n", "", "else", ":", "\n", "                            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "# Notice that argsort is not ranking", "\n", "                            ", "ranking", "=", "(", "argsort", "[", "i", ",", ":", "]", "==", "positive_arg", "[", "i", "]", ")", ".", "nonzero", "(", ")", "\n", "assert", "ranking", ".", "size", "(", "0", ")", "==", "1", "\n", "\n", "# ranking + 1 is the true ranking used in evaluation metrics", "\n", "ranking", "=", "1", "+", "ranking", ".", "item", "(", ")", "\n", "logs", ".", "append", "(", "{", "\n", "'MRR'", ":", "1.0", "/", "ranking", ",", "\n", "'MR'", ":", "float", "(", "ranking", ")", ",", "\n", "'HITS@1'", ":", "1.0", "if", "ranking", "<=", "1", "else", "0.0", ",", "\n", "'HITS@3'", ":", "1.0", "if", "ranking", "<=", "3", "else", "0.0", ",", "\n", "'HITS@10'", ":", "1.0", "if", "ranking", "<=", "10", "else", "0.0", ",", "\n", "}", ")", "\n", "\n", "", "if", "step", "%", "args", ".", "test_log_steps", "==", "0", ":", "\n", "                            ", "logging", ".", "info", "(", "'Evaluating the model... (%d/%d)'", "%", "(", "step", ",", "total_steps", ")", ")", "\n", "\n", "", "step", "+=", "1", "\n", "\n", "", "", "", "metrics", "=", "{", "}", "\n", "for", "metric", "in", "logs", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "                ", "metrics", "[", "metric", "]", "=", "sum", "(", "[", "log", "[", "metric", "]", "for", "log", "in", "logs", "]", ")", "/", "len", "(", "logs", ")", "\n", "\n", "", "", "return", "metrics", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.parse_args": [[33, 89], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.otamio_kga.rotate.run.parse_args"], ["f\"--input {args.input} --output {args.output}\"", "\n", "", "else", ":", "\n", "                ", "command", "=", "f\"CUDA_VISIBLE_DEVICES={gpu} python tucker/main.py --dataset {dataset} --model {model} \"", "\"--num_iterations 500 --batch_size 128 --lr 0.003 --dr 0.99 --edim 200 --rdim 200 \"", "\"--input_dropout 0.2 --hidden_dropout1 0.2 --hidden_dropout2 0.3 --label_smoothing 0.0 \"", "f\"--input {args.input} --output {args.output}\"", "\n", "", "", "elif", "model", ".", "startswith", "(", "\"distmult\"", ")", ":", "\n", "            ", "command", "=", "f\"CUDA_VISIBLE_DEVICES={gpu} python tucker/main.py --dataset {dataset} --model {model} \"", "\"--num_iterations 200 --eval_step 5 --batch_size 128 --lr 0.003 --dr 0.995 \"", "\"--edim 200 --rdim 200 --input_dropout 0.2 --label_smoothing 0.1 \"", "f\"--input {args.input} --output {args.output}\"", "\n", "", "elif", "model", ".", "startswith", "(", "\"complex\"", ")", ":", "\n", "            ", "command", "=", "f\"CUDA_VISIBLE_DEVICES={gpu} python tucker/main.py --dataset {dataset} --model {model} \"", "\"--num_iterations 200 --eval_step 5 --batch_size 128 --lr 0.003 --dr 0.995 \"", "\"--edim 400 --rdim 400 --input_dropout 0.2 --label_smoothing 0.1 \"", "f\"--input {args.input} --output {args.output}\"", "\n", "", "elif", "model", ".", "startswith", "(", "\"conve\"", ")", ":", "\n", "            ", "command", "=", "f\"CUDA_VISIBLE_DEVICES={gpu} python tucker/main.py --dataset {dataset} --model {model} \"", "\"--num_iterations 1000 --eval_step 10 --batch_size 128 --lr 0.003 --dr 0.995 \"", "\"--edim 200 --rdim 200 --input_dropout 0.2 --hidden_dropout1 0.3 --feature_map_dropout 0.2 \"", "f\"--label_smoothing 0.1 --use_bias --input {args.input} --output {args.output}\"", "\n", "", "elif", "model", ".", "startswith", "(", "\"transe\"", ")", ":", "\n", "            ", "command", "=", "f\"python rotate/create_mapping.py --dataset {args.input}/{dataset} && \"", "f\"CUDA_VISIBLE_DEVICES={gpu} python -u rotate/run.py --do_train --cuda --do_valid --do_test \"", "f\"--data_path {args.input}/{dataset} --model {model} -n 256 -b 1024 -d 1000 -g 24.0 -a 1.0 -adv \"", "f\"-lr 0.0001 --max_steps 150000 --valid_steps 5000 -save {args.output}/{dataset}_{model} \"", "\"--test_batch_size 16\"", "\n", "", "elif", "model", ".", "startswith", "(", "\"rotate\"", ")", ":", "\n", "            ", "command", "=", "f\"python rotate/create_mapping.py --dataset {args.input}/{dataset} && \"", "f\"CUDA_VISIBLE_DEVICES={gpu} python -u rotate/run.py --do_train --cuda --do_valid --do_test \"", "f\"--data_path {args.input}/{dataset} --model {model} -n 256 -b 1024 -d 1000 -g 24.0 -a 1.0 -adv \"", "f\"-lr 0.0001 --max_steps 150000 --valid_steps 5000 -save {args.output}/{dataset}_{model} \"", "\"--test_batch_size 16 -de\"", "\n", "", "else", ":", "\n", "            ", "print", "(", "model", ",", "\"is not supported\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "command", "=", "f\"python pbg/main.py --model {args.model} --dataset {args.dataset} \"", "f\"--input {args.input} --output {args.output} --workers {args.workers}\"", "\n", "if", "args", ".", "eval_only", ":", "\n", "            ", "command", "+=", "\" --eval_only\"", "\n", "\n", "", "", "if", "args", ".", "options", "==", "\"dry-run\"", ":", "\n", "        ", "print", "(", "command", ")", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "save_best", ":", "\n", "            ", "command", "+=", "\" --save_best\"", "\n", "", "subprocess", ".", "run", "(", "command", ",", "shell", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.override_config": [[91, 107], ["open", "json.load", "os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.save_model": [[109, 136], ["vars", "torch.save", "model.entity_embedding.detach().cpu().numpy", "numpy.save", "model.relation_embedding.detach().cpu().numpy", "numpy.save", "open", "json.dump", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "model.state_dict", "optimizer.state_dict", "model.entity_embedding.detach().cpu", "model.relation_embedding.detach().cpu", "model.entity_embedding.detach", "model.relation_embedding.detach"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.read_triple": [[139, 149], ["open", "line.strip().split", "triples.append", "line.strip"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.set_logger": [[151, 173], ["logging.basicConfig", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger().addHandler", "os.path.join", "os.path.join", "logging.getLogger"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics": [[175, 181], ["logging.info"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.run.main": [[183, 435], ["run.set_logger", "len", "len", "logging.info", "logging.info", "logging.info", "logging.info", "run.read_triple", "logging.info", "run.read_triple", "logging.info", "run.read_triple", "logging.info", "model.KGEModel", "logging.info", "kge_model.cuda.named_parameters", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "ValueError", "run.override_config", "ValueError", "os.makedirs", "open", "dict", "open", "dict", "list", "os.path.join", "os.path.join", "os.path.join", "logging.info", "kge_model.cuda.cuda", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataloader.BidirectionalOneShotIterator", "torch.optim.Adam", "logging.info", "torch.load", "kge_model.cuda.load_state_dict", "logging.info", "logging.info", "logging.info", "range", "run.save_model", "logging.info", "kge_model.cuda.test_step", "run.log_metrics", "logging.info", "kge_model.cuda.test_step", "run.log_metrics", "logging.info", "kge_model.cuda.test_step", "run.log_metrics", "ValueError", "os.path.exists", "os.path.join", "line.strip().split", "int", "os.path.join", "line.strip().split", "int", "numpy.load", "numpy.load", "numpy.load", "numpy.mean().astype", "numpy.max", "numpy.min", "open", "len", "len", "len", "kge_model.cuda.numerical_literals.cuda", "kge_model.cuda.gate.cuda", "dataloader.TrainDataset", "dataloader.TrainDataset", "filter", "os.path.join", "torch.optim.Adam.load_state_dict", "str", "kge_model.cuda.train_step", "training_logs.append", "numpy.var", "os.path.join", "line.strip", "list.append", "kge_model.cuda.numerical_literals.cuda", "kge_model.cuda.c.cuda", "kge_model.cuda.var.cuda", "kge_model.cuda.nf_weights.cuda", "max", "max", "kge_model.cuda.parameters", "logging.info", "torch.optim.Adam", "run.save_model", "training_logs[].keys", "run.log_metrics", "logging.info", "kge_model.cuda.enrich_embedding", "kge_model.cuda.test_step", "run.log_metrics", "line.strip", "line.strip", "numpy.mean", "str", "str", "filter", "logging.info", "kge_model.cuda.test_step", "run.log_metrics", "mrrs.append", "param.size", "kge_model.cuda.parameters", "sum", "len", "torch.save", "logging.info", "max", "max", "kge_model.cuda.state_dict"], "function", ["home.repos.pwc.inspect_result.otamio_kga.rotate.run.set_logger", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.read_triple", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.read_triple", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.read_triple", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.override_config", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.save_model", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.train_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.save_model", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.enrich_embedding", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics", "home.repos.pwc.inspect_result.otamio_kga.rotate.model.KGEModel.test_step", "home.repos.pwc.inspect_result.otamio_kga.rotate.run.log_metrics"], []], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.__init__": [[14, 24], ["len", "set", "dataloader.TrainDataset.count_frequency", "dataloader.TrainDataset.get_true_head_and_tail"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.count_frequency", "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.get_true_head_and_tail"], ["    ", "def", "__init__", "(", "self", ",", "triples", ",", "nentity", ",", "nrelation", ",", "negative_sample_size", ",", "mode", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "triple_set", "=", "set", "(", "triples", ")", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "negative_sample_size", "=", "negative_sample_size", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "count", "=", "self", ".", "count_frequency", "(", "triples", ")", "\n", "self", ".", "true_head", ",", "self", ".", "true_tail", "=", "self", ".", "get_true_head_and_tail", "(", "self", ".", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.__len__": [[25, 27], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.__getitem__": [[28, 68], ["torch.sqrt", "torch.LongTensor", "torch.LongTensor", "numpy.random.randint", "negative_sample_list.append", "numpy.concatenate", "torch.Tensor", "numpy.in1d", "numpy.in1d", "ValueError"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "positive_sample", "=", "self", ".", "triples", "[", "idx", "]", "\n", "\n", "head", ",", "relation", ",", "tail", "=", "positive_sample", "\n", "\n", "subsampling_weight", "=", "self", ".", "count", "[", "(", "head", ",", "relation", ")", "]", "+", "self", ".", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "\n", "subsampling_weight", "=", "torch", ".", "sqrt", "(", "1", "/", "torch", ".", "Tensor", "(", "[", "subsampling_weight", "]", ")", ")", "\n", "\n", "negative_sample_list", "=", "[", "]", "\n", "negative_sample_size", "=", "0", "\n", "\n", "while", "negative_sample_size", "<", "self", ".", "negative_sample_size", ":", "\n", "            ", "negative_sample", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "nentity", ",", "size", "=", "self", ".", "negative_sample_size", "*", "2", ")", "\n", "if", "self", ".", "mode", "==", "'head-batch'", ":", "\n", "                ", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "elif", "self", ".", "mode", "==", "'tail-batch'", ":", "\n", "                ", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Training batch mode %s not supported'", "%", "self", ".", "mode", ")", "\n", "", "negative_sample", "=", "negative_sample", "[", "mask", "]", "\n", "negative_sample_list", ".", "append", "(", "negative_sample", ")", "\n", "negative_sample_size", "+=", "negative_sample", ".", "size", "\n", "\n", "", "negative_sample", "=", "np", ".", "concatenate", "(", "negative_sample_list", ")", "[", ":", "self", ".", "negative_sample_size", "]", "\n", "\n", "negative_sample", "=", "torch", ".", "LongTensor", "(", "negative_sample", ")", "\n", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "positive_sample", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.collate_fn": [[69, 76], ["torch.stack", "torch.stack", "torch.cat"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "subsample_weight", "=", "torch", ".", "cat", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsample_weight", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.count_frequency": [[77, 95], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "count_frequency", "(", "triples", ",", "start", "=", "4", ")", ":", "\n", "        ", "'''\n        Get frequency of a partial triple like (head, relation) or (relation, tail)\n        The frequency will be used for subsampling like word2vec\n        '''", "\n", "count", "=", "{", "}", "\n", "for", "head", ",", "relation", ",", "tail", "in", "triples", ":", "\n", "            ", "if", "(", "head", ",", "relation", ")", "not", "in", "count", ":", "\n", "                ", "count", "[", "(", "head", ",", "relation", ")", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "(", "head", ",", "relation", ")", "]", "+=", "1", "\n", "\n", "", "if", "(", "tail", ",", "-", "relation", "-", "1", ")", "not", "in", "count", ":", "\n", "                ", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TrainDataset.get_true_head_and_tail": [[96, 120], ["true_tail[].append", "true_head[].append", "numpy.array", "numpy.array", "list", "list", "set", "set"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_true_head_and_tail", "(", "triples", ")", ":", "\n", "        ", "'''\n        Build a dictionary of true triples that will\n        be used to filter these true triples for negative sampling\n        '''", "\n", "\n", "true_head", "=", "{", "}", "\n", "true_tail", "=", "{", "}", "\n", "\n", "for", "head", ",", "relation", ",", "tail", "in", "triples", ":", "\n", "            ", "if", "(", "head", ",", "relation", ")", "not", "in", "true_tail", ":", "\n", "                ", "true_tail", "[", "(", "head", ",", "relation", ")", "]", "=", "[", "]", "\n", "", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ".", "append", "(", "tail", ")", "\n", "if", "(", "relation", ",", "tail", ")", "not", "in", "true_head", ":", "\n", "                ", "true_head", "[", "(", "relation", ",", "tail", ")", "]", "=", "[", "]", "\n", "", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ".", "append", "(", "head", ")", "\n", "\n", "", "for", "relation", ",", "tail", "in", "true_head", ":", "\n", "            ", "true_head", "[", "(", "relation", ",", "tail", ")", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ")", ")", ")", "\n", "", "for", "head", ",", "relation", "in", "true_tail", ":", "\n", "            ", "true_tail", "[", "(", "head", ",", "relation", ")", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ")", ")", ")", "\n", "\n", "", "return", "true_head", ",", "true_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TestDataset.__init__": [[123, 130], ["len", "set"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "triples", ",", "all_true_triples", ",", "nentity", ",", "nrelation", ",", "mode", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", ")", "\n", "self", ".", "triple_set", "=", "set", "(", "all_true_triples", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TestDataset.__len__": [[131, 133], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TestDataset.__getitem__": [[134, 155], ["torch.LongTensor", "tmp[].float", "torch.LongTensor", "ValueError", "range", "range"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "head", ",", "relation", ",", "tail", "=", "self", ".", "triples", "[", "idx", "]", "\n", "\n", "if", "self", ".", "mode", "==", "'head-batch'", ":", "\n", "            ", "tmp", "=", "[", "(", "0", ",", "rand_head", ")", "if", "(", "rand_head", ",", "relation", ",", "tail", ")", "not", "in", "self", ".", "triple_set", "\n", "else", "(", "-", "1", ",", "head", ")", "for", "rand_head", "in", "range", "(", "self", ".", "nentity", ")", "]", "\n", "tmp", "[", "head", "]", "=", "(", "0", ",", "head", ")", "\n", "", "elif", "self", ".", "mode", "==", "'tail-batch'", ":", "\n", "            ", "tmp", "=", "[", "(", "0", ",", "rand_tail", ")", "if", "(", "head", ",", "relation", ",", "rand_tail", ")", "not", "in", "self", ".", "triple_set", "\n", "else", "(", "-", "1", ",", "tail", ")", "for", "rand_tail", "in", "range", "(", "self", ".", "nentity", ")", "]", "\n", "tmp", "[", "tail", "]", "=", "(", "0", ",", "tail", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'negative batch mode %s not supported'", "%", "self", ".", "mode", ")", "\n", "\n", "", "tmp", "=", "torch", ".", "LongTensor", "(", "tmp", ")", "\n", "filter_bias", "=", "tmp", "[", ":", ",", "0", "]", ".", "float", "(", ")", "\n", "negative_sample", "=", "tmp", "[", ":", ",", "1", "]", "\n", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "(", "head", ",", "relation", ",", "tail", ")", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.TestDataset.collate_fn": [[156, 163], ["torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "filter_bias", "=", "torch", ".", "stack", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.BidirectionalOneShotIterator.__init__": [[166, 170], ["dataloader.BidirectionalOneShotIterator.one_shot_iterator", "dataloader.BidirectionalOneShotIterator.one_shot_iterator"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.BidirectionalOneShotIterator.one_shot_iterator", "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.BidirectionalOneShotIterator.one_shot_iterator"], ["    ", "def", "__init__", "(", "self", ",", "dataloader_head", ",", "dataloader_tail", ")", ":", "\n", "        ", "self", ".", "iterator_head", "=", "self", ".", "one_shot_iterator", "(", "dataloader_head", ")", "\n", "self", ".", "iterator_tail", "=", "self", ".", "one_shot_iterator", "(", "dataloader_tail", ")", "\n", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.BidirectionalOneShotIterator.__next__": [[171, 178], ["next", "next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "+=", "1", "\n", "if", "self", ".", "step", "%", "2", "==", "0", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_head", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_tail", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.rotate.dataloader.BidirectionalOneShotIterator.one_shot_iterator": [[179, 187], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "one_shot_iterator", "(", "dataloader", ")", ":", "\n", "        ", "'''\n        Transform a PyTorch Dataloader into python iterator\n        '''", "\n", "while", "True", ":", "\n", "            ", "for", "data", "in", "dataloader", ":", "\n", "                ", "yield", "data", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.__init__": [[3, 15], ["load_data.Data.load_data", "load_data.Data.load_data", "load_data.Data.load_data", "load_data.Data.get_entities", "load_data.Data.get_relations", "load_data.Data.get_relations", "load_data.Data.get_relations"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.load_data", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.load_data", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.load_data", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_entities", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_relations", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_relations", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_relations"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", "=", "\"data/FB15k-237/\"", ",", "reverse", "=", "False", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "self", ".", "load_data", "(", "data_dir", ",", "\"train\"", ",", "reverse", "=", "reverse", ")", "\n", "self", ".", "valid_data", "=", "self", ".", "load_data", "(", "data_dir", ",", "\"valid\"", ",", "reverse", "=", "reverse", ")", "\n", "self", ".", "test_data", "=", "self", ".", "load_data", "(", "data_dir", ",", "\"test\"", ",", "reverse", "=", "reverse", ")", "\n", "self", ".", "data", "=", "self", ".", "train_data", "+", "self", ".", "valid_data", "+", "self", ".", "test_data", "\n", "self", ".", "entities", "=", "self", ".", "get_entities", "(", "self", ".", "data", ")", "\n", "self", ".", "train_relations", "=", "self", ".", "get_relations", "(", "self", ".", "train_data", ")", "\n", "self", ".", "valid_relations", "=", "self", ".", "get_relations", "(", "self", ".", "valid_data", ")", "\n", "self", ".", "test_relations", "=", "self", ".", "get_relations", "(", "self", ".", "test_data", ")", "\n", "self", ".", "relations", "=", "self", ".", "train_relations", "+", "[", "i", "for", "i", "in", "self", ".", "valid_relations", "if", "i", "not", "in", "self", ".", "train_relations", "]", "+", "[", "i", "for", "i", "in", "self", ".", "test_relations", "if", "i", "not", "in", "self", ".", "train_relations", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.load_data": [[16, 23], ["open", "f.read().strip().split", "i.split", "f.read().strip", "f.read"], "methods", ["None"], ["", "def", "load_data", "(", "self", ",", "data_dir", ",", "data_type", "=", "\"train\"", ",", "reverse", "=", "False", ")", ":", "\n", "        ", "with", "open", "(", "\"%s%s.txt\"", "%", "(", "data_dir", ",", "data_type", ")", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "read", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "\"\\n\"", ")", "\n", "data", "=", "[", "i", ".", "split", "(", ")", "for", "i", "in", "data", "]", "\n", "if", "reverse", ":", "\n", "                ", "data", "+=", "[", "[", "i", "[", "2", "]", ",", "i", "[", "1", "]", "+", "\"_reverse\"", ",", "i", "[", "0", "]", "]", "for", "i", "in", "data", "]", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_relations": [[24, 27], ["sorted", "list", "set"], "methods", ["None"], ["", "def", "get_relations", "(", "self", ",", "data", ")", ":", "\n", "        ", "relations", "=", "sorted", "(", "list", "(", "set", "(", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ")", ")", ")", "\n", "return", "relations", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.get_entities": [[28, 31], ["sorted", "list", "set"], "methods", ["None"], ["", "def", "get_entities", "(", "self", ",", "data", ")", ":", "\n", "        ", "entities", "=", "sorted", "(", "list", "(", "set", "(", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", "+", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ")", ")", ")", "\n", "return", "entities", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.__init__": [[30, 75], ["logging.basicConfig", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger().addHandler", "range", "range", "torch.cuda.is_available", "logging.getLogger", "os.mkdir", "open", "json.dump", "open", "json.dump", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "learning_rate", "=", "0.0005", ",", "ent_vec_dim", "=", "200", ",", "rel_vec_dim", "=", "200", ",", "\n", "num_iterations", "=", "500", ",", "batch_size", "=", "128", ",", "decay_rate", "=", "0.", ",", "cuda", "=", "False", ",", "\n", "input_dropout", "=", "0.3", ",", "hidden_dropout1", "=", "0.4", ",", "hidden_dropout2", "=", "0.5", ",", "\n", "feature_map_dropout", "=", "0.2", ",", "embedding_shape1", "=", "20", ",", "\n", "hidden_size", "=", "10368", ",", "use_bias", "=", "True", ",", "\n", "label_smoothing", "=", "0.", ")", ":", "\n", "        ", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "ent_vec_dim", "=", "ent_vec_dim", "\n", "self", ".", "rel_vec_dim", "=", "rel_vec_dim", "\n", "self", ".", "num_iterations", "=", "num_iterations", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "decay_rate", "=", "decay_rate", "\n", "self", ".", "label_smoothing", "=", "label_smoothing", "\n", "self", ".", "cuda", "=", "cuda", "\n", "self", ".", "entity_idxs", "=", "{", "d", ".", "entities", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "d", ".", "entities", ")", ")", "}", "\n", "self", ".", "relation_idxs", "=", "{", "d", ".", "relations", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "d", ".", "relations", ")", ")", "}", "\n", "self", ".", "kwargs", "=", "{", "\"input_dropout\"", ":", "input_dropout", ",", "\"hidden_dropout1\"", ":", "hidden_dropout1", ",", "\n", "\"hidden_dropout2\"", ":", "hidden_dropout2", ",", "\"feature_map_dropout\"", ":", "feature_map_dropout", ",", "\n", "\"hidden_size\"", ":", "hidden_size", ",", "\"use_bias\"", ":", "use_bias", ",", "\"embedding_shape1\"", ":", "embedding_shape1", ",", "\n", "\"dataset\"", ":", "dataset", ",", "\"ent2idx\"", ":", "self", ".", "entity_idxs", ",", "\"rel2idx\"", ":", "self", ".", "relation_idxs", ",", "\n", "\"device\"", ":", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "}", "\n", "# Set up log file", "\n", "logging", ".", "basicConfig", "(", "\n", "format", "=", "'%(asctime)s %(levelname)-8s %(message)s'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "datefmt", "=", "'%Y-%m-%d %H:%M:%S'", ",", "\n", "filename", "=", "log_file", ",", "\n", "filemode", "=", "'w'", "\n", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s %(levelname)-8s %(message)s'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "# If need checkpoint, save it", "\n", "if", "save_best", ":", "\n", "            ", "self", ".", "target", "=", "f\"{args.output}/{dataset}\"", "\n", "try", ":", "\n", "                ", "os", ".", "mkdir", "(", "self", ".", "target", ")", "\n", "", "except", "FileExistsError", ":", "\n", "                ", "pass", "\n", "", "with", "open", "(", "f\"{self.target}/{args.model}_entities.dict\"", ",", "'w+'", ")", "as", "fd", ":", "\n", "                ", "json", ".", "dump", "(", "self", ".", "entity_idxs", ",", "fd", ",", "indent", "=", "2", ")", "\n", "", "with", "open", "(", "f\"{self.target}/{args.model}_relations.dict\"", ",", "'w+'", ")", "as", "fd", ":", "\n", "                ", "json", ".", "dump", "(", "self", ".", "relation_idxs", ",", "fd", ",", "indent", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_data_idxs": [[76, 80], ["range", "len"], "methods", ["None"], ["", "", "", "def", "get_data_idxs", "(", "self", ",", "data", ")", ":", "\n", "        ", "data_idxs", "=", "[", "(", "self", ".", "entity_idxs", "[", "data", "[", "i", "]", "[", "0", "]", "]", ",", "self", ".", "relation_idxs", "[", "data", "[", "i", "]", "[", "1", "]", "]", ",", "\n", "self", ".", "entity_idxs", "[", "data", "[", "i", "]", "[", "2", "]", "]", ")", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", "\n", "return", "data_idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_er_vocab": [[81, 86], ["collections.defaultdict", "er_vocab[].append"], "methods", ["None"], ["", "def", "get_er_vocab", "(", "self", ",", "data", ")", ":", "\n", "        ", "er_vocab", "=", "defaultdict", "(", "list", ")", "\n", "for", "triple", "in", "data", ":", "\n", "            ", "er_vocab", "[", "(", "triple", "[", "0", "]", ",", "triple", "[", "1", "]", ")", "]", ".", "append", "(", "triple", "[", "2", "]", ")", "\n", "", "return", "er_vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_batch": [[87, 96], ["np.zeros", "enumerate", "torch.FloatTensor", "targets.cuda.cuda.cuda", "np.array", "len", "len"], "methods", ["None"], ["", "def", "get_batch", "(", "self", ",", "er_vocab", ",", "er_vocab_pairs", ",", "idx", ")", ":", "\n", "        ", "batch", "=", "er_vocab_pairs", "[", "idx", ":", "idx", "+", "self", ".", "batch_size", "]", "\n", "targets", "=", "np", ".", "zeros", "(", "(", "len", "(", "batch", ")", ",", "len", "(", "d", ".", "entities", ")", ")", ")", "\n", "for", "idx", ",", "pair", "in", "enumerate", "(", "batch", ")", ":", "\n", "            ", "targets", "[", "idx", ",", "er_vocab", "[", "pair", "]", "]", "=", "1.", "\n", "", "targets", "=", "torch", ".", "FloatTensor", "(", "targets", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "targets", "=", "targets", ".", "cuda", "(", ")", "\n", "", "return", "np", ".", "array", "(", "batch", ")", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.evaluate": [[97, 144], ["range", "main.Experiment.get_data_idxs", "main.Experiment.get_er_vocab", "logging.info", "range", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "np.mean", "hits.append", "main.Experiment.get_data_idxs", "len", "main.Experiment.get_batch", "torch.tensor", "torch.tensor", "torch.tensor", "model.forward", "range", "torch.sort", "sort_idxs.cpu().numpy.cpu().numpy.cpu().numpy", "range", "len", "e1_idx.cuda.cuda.cuda", "r_idx.cuda.cuda.cuda", "e2_idx.cuda.cuda.cuda", "predictions[].item", "ranks.append", "range", "np.mean", "np.mean", "np.mean", "np.mean", "np.mean", "np.array", "sort_idxs.cpu().numpy.cpu().numpy.cpu", "np.where", "hits[].append", "hits[].append", "np.array", "e2_idx[].item"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_data_idxs", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_er_vocab", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_data_idxs", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_batch", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.forward"], ["", "def", "evaluate", "(", "self", ",", "model", ",", "data", ")", ":", "\n", "        ", "hits", "=", "[", "]", "\n", "ranks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "hits", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "test_data_idxs", "=", "self", ".", "get_data_idxs", "(", "data", ")", "\n", "er_vocab", "=", "self", ".", "get_er_vocab", "(", "self", ".", "get_data_idxs", "(", "d", ".", "data", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"Number of data points: %d\"", "%", "len", "(", "test_data_idxs", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "test_data_idxs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "            ", "data_batch", ",", "_", "=", "self", ".", "get_batch", "(", "er_vocab", ",", "test_data_idxs", ",", "i", ")", "\n", "e1_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "0", "]", ")", "\n", "r_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "1", "]", ")", "\n", "e2_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "2", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "e1_idx", "=", "e1_idx", ".", "cuda", "(", ")", "\n", "r_idx", "=", "r_idx", ".", "cuda", "(", ")", "\n", "e2_idx", "=", "e2_idx", ".", "cuda", "(", ")", "\n", "", "predictions", "=", "model", ".", "forward", "(", "e1_idx", ",", "r_idx", ")", "\n", "\n", "for", "j", "in", "range", "(", "data_batch", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "filt", "=", "er_vocab", "[", "(", "data_batch", "[", "j", "]", "[", "0", "]", ",", "data_batch", "[", "j", "]", "[", "1", "]", ")", "]", "\n", "target_value", "=", "predictions", "[", "j", ",", "e2_idx", "[", "j", "]", "]", ".", "item", "(", ")", "\n", "predictions", "[", "j", ",", "filt", "]", "=", "0.0", "\n", "predictions", "[", "j", ",", "e2_idx", "[", "j", "]", "]", "=", "target_value", "\n", "\n", "", "sort_values", ",", "sort_idxs", "=", "torch", ".", "sort", "(", "predictions", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", "\n", "\n", "sort_idxs", "=", "sort_idxs", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "j", "in", "range", "(", "data_batch", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "rank", "=", "np", ".", "where", "(", "sort_idxs", "[", "j", "]", "==", "e2_idx", "[", "j", "]", ".", "item", "(", ")", ")", "[", "0", "]", "[", "0", "]", "\n", "ranks", ".", "append", "(", "rank", "+", "1", ")", "\n", "\n", "for", "hits_level", "in", "range", "(", "10", ")", ":", "\n", "                    ", "if", "rank", "<=", "hits_level", ":", "\n", "                        ", "hits", "[", "hits_level", "]", ".", "append", "(", "1.0", ")", "\n", "", "else", ":", "\n", "                        ", "hits", "[", "hits_level", "]", ".", "append", "(", "0.0", ")", "\n", "\n", "", "", "", "", "logging", ".", "info", "(", "'Hits @10: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "9", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Hits @3: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "2", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Hits @1: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "0", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Mean rank: {0}'", ".", "format", "(", "np", ".", "mean", "(", "ranks", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Mean reciprocal rank: {0}'", ".", "format", "(", "np", ".", "mean", "(", "1.", "/", "np", ".", "array", "(", "ranks", ")", ")", ")", ")", "\n", "return", "np", ".", "mean", "(", "1.", "/", "np", ".", "array", "(", "ranks", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.train_and_eval": [[145, 207], ["logging.info", "main.Experiment.get_data_idxs", "logging.info", "model.init", "torch.optim.Adam", "main.Experiment.get_er_vocab", "list", "logging.info", "range", "model.cuda", "model.to_cuda", "model.parameters", "torch.optim.lr_scheduler.ExponentialLR", "main.Experiment.keys", "time.time", "model.train", "np.random.shuffle", "range", "logging.info", "logging.info", "logging.info", "model.eval", "len", "len", "main.Experiment.get_batch", "torch.optim.Adam.zero_grad", "torch.tensor", "torch.tensor", "model.forward", "model.loss", "model.loss.backward", "torch.optim.Adam.step", "losses.append", "torch.optim.lr_scheduler.ExponentialLR.step", "torch.no_grad", "e1_idx.cuda.cuda.cuda", "r_idx.cuda.cuda.cuda", "model.loss.item", "logging.info", "mrrs.append", "logging.info", "time.time", "main.Experiment.evaluate", "logging.info", "np.mean", "main.Experiment.evaluate", "torch.save", "logging.info", "targets.size", "time.time", "max", "max", "model.state_dict", "time.time"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_data_idxs", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.init", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_er_vocab", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.to_cuda", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.get_batch", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.forward", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.evaluate", "home.repos.pwc.inspect_result.otamio_kga.tucker.main.Experiment.evaluate"], ["", "def", "train_and_eval", "(", "self", ",", "model", "=", "\"tucker\"", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f\"Training the {model} model...\"", ")", "\n", "\n", "train_data_idxs", "=", "self", ".", "get_data_idxs", "(", "d", ".", "train_data", ")", "\n", "logging", ".", "info", "(", "\"Number of training data points: %d\"", "%", "len", "(", "train_data_idxs", ")", ")", "\n", "\n", "model", "=", "model_mapping", "[", "model", "]", "(", "d", ",", "self", ".", "ent_vec_dim", ",", "self", ".", "rel_vec_dim", ",", "**", "self", ".", "kwargs", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "model", ".", "cuda", "(", ")", "\n", "model", ".", "to_cuda", "(", ")", "\n", "", "model", ".", "init", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "learning_rate", ")", "\n", "if", "self", ".", "decay_rate", ":", "\n", "            ", "scheduler", "=", "ExponentialLR", "(", "opt", ",", "self", ".", "decay_rate", ")", "\n", "\n", "", "er_vocab", "=", "self", ".", "get_er_vocab", "(", "train_data_idxs", ")", "\n", "er_vocab_pairs", "=", "list", "(", "er_vocab", ".", "keys", "(", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"Starting training...\"", ")", "\n", "for", "it", "in", "range", "(", "1", ",", "self", ".", "num_iterations", "+", "1", ")", ":", "\n", "            ", "start_train", "=", "time", ".", "time", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "er_vocab_pairs", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "len", "(", "er_vocab_pairs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "                ", "data_batch", ",", "targets", "=", "self", ".", "get_batch", "(", "er_vocab", ",", "er_vocab_pairs", ",", "j", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "e1_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "0", "]", ")", "\n", "r_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "1", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                    ", "e1_idx", "=", "e1_idx", ".", "cuda", "(", ")", "\n", "r_idx", "=", "r_idx", ".", "cuda", "(", ")", "\n", "", "predictions", "=", "model", ".", "forward", "(", "e1_idx", ",", "r_idx", ")", "\n", "if", "self", ".", "label_smoothing", ":", "\n", "                    ", "targets", "=", "(", "(", "1.0", "-", "self", ".", "label_smoothing", ")", "*", "targets", ")", "+", "(", "1.0", "/", "targets", ".", "size", "(", "1", ")", ")", "\n", "", "loss", "=", "model", ".", "loss", "(", "predictions", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "self", ".", "decay_rate", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "", "logging", ".", "info", "(", "f\"Step at {it}\"", ")", "\n", "logging", ".", "info", "(", "f\"Training Time elapsed: {time.time() - start_train}\"", ")", "\n", "logging", ".", "info", "(", "f\"Training Loss: {np.mean(losses)}\"", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "it", ">=", "args", ".", "warm_up", "and", "not", "it", "%", "eval_step", ":", "\n", "\n", "                    ", "logging", ".", "info", "(", "f\"Validation at step {it}\"", ")", "\n", "mrrs", ".", "append", "(", "self", ".", "evaluate", "(", "model", ",", "d", ".", "valid_data", ")", ")", "\n", "logging", ".", "info", "(", "f\"Test at step {it}\"", ")", "\n", "start_test", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "evaluate", "(", "model", ",", "d", ".", "test_data", ")", "\n", "logging", ".", "info", "(", "f\"Test Evaluation Time: {time.time() - start_test}\"", ")", "\n", "\n", "patience", "=", "patience", "-", "1", "if", "mrrs", "[", "-", "1", "]", "!=", "max", "(", "mrrs", ")", "else", "args", ".", "patience", "\n", "if", "save_best", "and", "mrrs", "[", "-", "1", "]", "==", "max", "(", "mrrs", ")", ":", "\n", "                        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "f\"{self.target}/{args.model}.model\"", ")", "\n", "", "if", "use_stopper", "and", "patience", "<=", "0", ":", "\n", "                        ", "logging", ".", "info", "(", "f\"Early stop since no further improvement is made on the validation set\"", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.numeric_eval.populate_estimate": [[21, 41], ["test.iterrows", "model", "test.columns.tolist().index", "tqdm.tqdm", "print", "ent.append", "rel.append", "torch.LongTensor", "torch.LongTensor", "test.iterrows", "test.columns.tolist", "list", "filter", "list", "map", "x.item", "torch.argsort"], "function", ["None"], ["", "else", ":", "\n", "        ", "subprocess", ".", "run", "(", "f\"python tucker/numeric_eval.py --dataset {args.dataset} --gpu {args.gpu} \"", "\n", "f\"--model {args.model} --input {args.input}\"", ",", "\n", "shell", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.tucker.numeric_eval.compute_result": [[43, 53], ["abs", "test[].unique", "print", "res.append", "pandas.DataFrame", "round", "sli[].mean"], "function", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.Gate.__init__": [[49, 62], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Parameter", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["double_entity_embedding", "=", "False", ",", "double_relation_embedding", "=", "False", ",", "\n", "numerical_literals", "=", "None", ",", "c", "=", "None", ",", "var", "=", "None", ")", ":", "\n", "        ", "super", "(", "KGEModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "epsilon", "=", "2.0", "\n", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "gamma", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.Gate.forward": [[63, 70], ["torch.cat", "torch.tanh", "model.Gate.gate_activation", "model.Gate.g", "model.Gate.g1", "model.Gate.g2"], "methods", ["None"], ["self", ".", "embedding_range", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "(", "self", ".", "gamma", ".", "item", "(", ")", "+", "self", ".", "epsilon", ")", "/", "hidden_dim", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n", "self", ".", "entity_dim", "=", "hidden_dim", "*", "2", "if", "double_entity_embedding", "else", "hidden_dim", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "*", "2", "if", "double_relation_embedding", "else", "hidden_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER.__init__": [[73, 88], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.BCELoss", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "len", "len", "torch.tensor", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["tensor", "=", "self", ".", "entity_embedding", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "self", ".", "relation_embedding", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "nrelation", ",", "self", ".", "relation_dim", ")", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "relation_embedding", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "# Load numeric literals if necessary", "\n", "if", "'Gate'", "in", "model_name", ":", "\n", "            ", "assert", "(", "numerical_literals", "is", "not", "None", ")", "\n", "self", ".", "numerical_literals", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "from_numpy", "(", "numerical_literals", ")", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER.init": [[89, 92], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["self", ".", "n_num_lit", "=", "self", ".", "numerical_literals", ".", "size", "(", "1", ")", "\n", "self", ".", "gate", "=", "Gate", "(", "self", ".", "entity_dim", "+", "self", ".", "n_num_lit", ",", "self", ".", "entity_dim", ")", "\n", "self", ".", "entity_embedding_enriched", "=", "None", "\n", "", "elif", "'KBLN'", "in", "model_name", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER.to_cuda": [[93, 95], ["None"], "methods", ["None"], ["            ", "assert", "(", "numerical_literals", "is", "not", "None", ")", "\n", "self", ".", "numerical_literals", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "from_numpy", "(", "numerical_literals", ")", ")", "\n", "self", ".", "n_num_lit", "=", "self", ".", "numerical_literals", ".", "size", "(", "1", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER.forward": [[96, 114], ["model.TuckER.E", "model.TuckER.bn0", "model.TuckER.input_dropout", "torch.mm.view", "model.TuckER.R", "torch.mm", "model.TuckER.view", "model.TuckER.hidden_dropout1", "torch.bmm", "torch.mm.view", "model.TuckER.bn1", "model.TuckER.hidden_dropout2", "torch.mm", "torch.sigmoid", "model.TuckER.size", "model.TuckER.W.view", "model.TuckER.size", "model.TuckER.size", "model.TuckER.size", "model.TuckER.E.weight.transpose", "model.TuckER.size"], "methods", ["None"], ["self", ".", "c", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "FloatTensor", "(", "c", ")", ")", "\n", "self", ".", "var", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "FloatTensor", "(", "var", ")", ")", "\n", "self", ".", "nf_weights", "=", "nn", ".", "Embedding", "(", "nrelation", ",", "self", ".", "n_num_lit", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "numerical_literals", "=", "None", "\n", "\n", "", "if", "model_name", "==", "'pRotatE'", ":", "\n", "            ", "self", ".", "modulus", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "[", "0.5", "*", "self", ".", "embedding_range", ".", "item", "(", ")", "]", "]", ")", ")", "\n", "\n", "# Do not forget to modify this line when you add a new model in the \"forward\" function", "\n", "", "if", "model_name", "not", "in", "[", "'TransE'", ",", "'DistMult'", ",", "'ComplEx'", ",", "'RotatE'", ",", "'pRotatE'", ",", "\n", "'TransE_Gate'", ",", "'RotatE_Gate'", ",", "'TransE_KBLN'", ",", "'RotatE_KBLN'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "model_name", ")", "\n", "\n", "", "if", "model_name", "==", "'RotatE'", "and", "(", "not", "double_entity_embedding", "or", "double_relation_embedding", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'RotatE should use --double_entity_embedding'", ")", "\n", "\n", "", "if", "model_name", "==", "'ComplEx'", "and", "(", "not", "double_entity_embedding", "or", "not", "double_relation_embedding", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'ComplEx should use --double_entity_embedding and --double_relation_embedding'", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_Literal.__init__": [[117, 137], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.BCELoss", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "model.load_num_lit", "model.TuckER_Literal.numerical_literals.size", "model.Gate", "len", "len", "torch.tensor", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit"], ["        ", "'''\n        Forward function that calculate the score of a batch of triples.\n        In the 'single' mode, sample is a batch of triple.\n        In the 'head-batch' or 'tail-batch' mode, sample consists two part.\n        The first part is usually the positive sample.\n        And the second part is the entities in the negative samples.\n        Because negative samples and positive samples usually share two elements\n        in their triple ((head, relation) or (relation, tail)).\n        '''", "\n", "if", "self", ".", "numerical_literals", "is", "not", "None", "and", "'Gate'", "in", "self", ".", "model_name", ":", "\n", "            ", "embedding", "=", "self", ".", "entity_embedding_enriched", "# If model_Gate, then use enriched embedding", "\n", "", "else", ":", "\n", "            ", "embedding", "=", "self", ".", "entity_embedding", "# Otherwise, use normal embedding", "\n", "\n", "", "if", "mode", "==", "'single'", ":", "\n", "            ", "batch_size", ",", "negative_sample_size", "=", "sample", ".", "size", "(", "0", ")", ",", "1", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "0", "]", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_Literal.to_cuda": [[138, 141], ["model.TuckER_Literal.numerical_literals.cuda", "model.TuckER_Literal.emb_num_lit.cuda"], "methods", ["None"], [")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_Literal.init": [[142, 145], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_Literal.forward": [[146, 169], ["model.TuckER_Literal.E", "model.TuckER_Literal.emb_num_lit", "model.TuckER_Literal.emb_num_lit", "model.TuckER_Literal.bn0", "model.TuckER_Literal.input_dropout", "torch.mm.view", "model.TuckER_Literal.R", "torch.mm", "model.TuckER_Literal.view", "model.TuckER_Literal.hidden_dropout1", "torch.bmm", "torch.mm.view", "model.TuckER_Literal.bn1", "model.TuckER_Literal.hidden_dropout2", "torch.mm", "torch.sigmoid", "model.TuckER_Literal.size", "model.TuckER_Literal.W.view", "model.TuckER_Literal.size", "model.TuckER_Literal.size", "model.TuckER_Literal.size", "model.TuckER_Literal.transpose", "e1_idx.view", "model.TuckER_Literal.size"], "methods", ["None"], ["tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "0", "]", "\n", ")", "\n", "relation_idx", "=", "sample", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "2", "]", "\n", ")", "\n", "\n", "", "", "elif", "mode", "==", "'head-batch'", ":", "\n", "            ", "tail_part", ",", "head_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "head_part", ".", "size", "(", "0", ")", ",", "head_part", ".", "size", "(", "1", ")", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_KBLN.__init__": [[172, 195], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.BCELoss", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "len", "model.load_num_lit_kbln", "model.TuckER_KBLN.numerical_literals.size", "torch.nn.Embedding", "len", "len", "torch.tensor", "len", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit_kbln"], ["index", "=", "head_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", ".", "view", "(", "-", "1", ")", "\n", ")", "\n", "relation_idx", "=", "tail_part", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_KBLN.to_cuda": [[196, 200], ["model.TuckER_KBLN.numerical_literals.cuda", "model.TuckER_KBLN.c.cuda", "model.TuckER_KBLN.var.cuda"], "methods", ["None"], ["dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "2", "]", "\n", ")", "\n", "\n", "", "", "elif", "mode", "==", "'tail-batch'", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_KBLN.init": [[201, 204], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["            ", "head_part", ",", "tail_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "tail_part", ".", "size", "(", "0", ")", ",", "tail_part", ".", "size", "(", "1", ")", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_KBLN.rbf": [[205, 211], ["torch.exp"], "methods", ["None"], ["embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.TuckER_KBLN.forward": [[212, 244], ["model.TuckER_KBLN.E", "model.TuckER_KBLN.bn0", "model.TuckER_KBLN.input_dropout", "model.TuckER_KBLN.view", "model.TuckER_KBLN.R", "torch.mm", "model.TuckER_KBLN.view", "model.TuckER_KBLN.hidden_dropout1", "torch.bmm", "model.TuckER_KBLN.view", "model.TuckER_KBLN.bn1", "model.TuckER_KBLN.hidden_dropout2", "torch.mm", "model.TuckER_KBLN.rbf", "model.TuckER_KBLN.nf_weights", "torch.bmm().squeeze", "torch.sigmoid", "model.TuckER_KBLN.size", "model.TuckER_KBLN.W.view", "model.TuckER_KBLN.size", "model.TuckER_KBLN.size", "model.TuckER_KBLN.size", "model.TuckER_KBLN.E.weight.transpose", "n_h.unsqueeze().repeat", "r_idx.view", "model.TuckER_KBLN.size", "e1_idx.view", "torch.bmm", "n_h.unsqueeze", "model.TuckER_KBLN.transpose"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], ["dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "if", "'KBLN'", "in", "self", ".", "model_name", ":", "\n", "                ", "head_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", "\n", "relation_idx", "=", "head_part", "[", ":", ",", "1", "]", "\n", "tail_literal", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "numerical_literals", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "model_func", "=", "{", "\n", "'TransE'", ":", "self", ".", "TransE", ",", "\n", "'DistMult'", ":", "self", ".", "DistMult", ",", "\n", "'ComplEx'", ":", "self", ".", "ComplEx", ",", "\n", "'RotatE'", ":", "self", ".", "RotatE", ",", "\n", "'pRotatE'", ":", "self", ".", "pRotatE", ",", "\n", "'TransE_Gate'", ":", "self", ".", "TransE_Gate", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult.__init__": [[247, 256], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["\n", "kbln_func", "=", "{", "\n", "'TransE_KBLN'", ":", "self", ".", "TransE_KBLN", ",", "\n", "'RotatE_KBLN'", ":", "self", ".", "RotatE_KBLN", "\n", "}", "\n", "\n", "if", "self", ".", "model_name", "in", "model_func", ":", "\n", "            ", "score", "=", "model_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "", "elif", "self", ".", "model_name", "in", "kbln_func", ":", "\n", "            ", "score", "=", "kbln_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult.init": [[257, 260], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["relation_idx", ",", "tail_literal", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "self", ".", "model_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult.to_cuda": [[261, 263], ["None"], "methods", ["None"], ["", "return", "score", "\n", "\n", "", "def", "enrich_embedding", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult.forward": [[264, 269], ["model.DistMult.input_dropout", "model.DistMult.input_dropout", "torch.sigmoid", "model.DistMult.E().squeeze", "model.DistMult.R().squeeze", "torch.mm", "model.DistMult.E.weight.transpose", "model.DistMult.E", "model.DistMult.R"], "methods", ["None"], ["        ", "if", "self", ".", "numerical_literals", "is", "not", "None", "and", "'Gate'", "in", "self", ".", "model_name", ":", "\n", "            ", "self", ".", "entity_embedding_enriched", "=", "self", ".", "gate", "(", "self", ".", "entity_embedding", ",", "\n", "self", ".", "numerical_literals", ")", "\n", "\n", "", "", "def", "TransE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_Literal.__init__": [[272, 286], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "model.load_num_lit", "model.DistMult_Literal.numerical_literals.size", "model.Gate", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit"], ["            ", "score", "=", "(", "head", "+", "relation", ")", "-", "tail", "\n", "\n", "", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n", "", "def", "TransE_Gate", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "return", "self", ".", "TransE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "\n", "", "def", "TransE_KBLN", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n", "relation_idx", ",", "tail_literal", ")", ":", "\n", "        ", "score_l", "=", "self", ".", "TransE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "head_literal", "=", "head_literal", ".", "view", "(", "head", ".", "shape", "[", "0", "]", ",", "head", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "tail_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "head_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "head_literal", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_Literal.to_cuda": [[287, 290], ["model.DistMult_Literal.numerical_literals.cuda", "model.DistMult_Literal.emb_num_lit.cuda"], "methods", ["None"], ["            ", "tail_literal", "=", "tail_literal", ".", "view", "(", "tail", ".", "shape", "[", "0", "]", ",", "tail", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "head_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "tail_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "tail_literal", "\n", "", "phi", "=", "self", ".", "rbf", "(", "n", ")", "\n", "w_nf", "=", "self", ".", "nf_weights", "(", "relation_idx", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_Literal.init": [[291, 294], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["score_n", "=", "torch", ".", "bmm", "(", "phi", ",", "w_nf", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "return", "score_l", "+", "score_n", "\n", "\n", "", "def", "rbf", "(", "self", ",", "n", ")", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_Literal.forward": [[295, 308], ["model.DistMult_Literal.E().squeeze", "model.DistMult_Literal.R().squeeze", "model.DistMult_Literal.emb_num_lit", "model.DistMult_Literal.emb_num_lit", "model.DistMult_Literal.input_dropout", "model.DistMult_Literal.input_dropout", "torch.sigmoid", "torch.mm", "model.DistMult_Literal.E", "model.DistMult_Literal.R", "e1_idx.view", "model.DistMult_Literal.transpose"], "methods", ["None"], ["        ", "return", "torch", ".", "exp", "(", "-", "(", "n", "-", "self", ".", "c", ")", "**", "2", "/", "self", ".", "var", ")", "\n", "\n", "", "def", "DistMult", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "*", "(", "relation", "*", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "*", "relation", ")", "*", "tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n", "", "def", "ComplEx", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_relation", ",", "im_relation", "=", "torch", ".", "chunk", "(", "relation", ",", "2", ",", "dim", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_KBLN.__init__": [[311, 328], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "len", "model.load_num_lit_kbln", "model.DistMult_KBLN.numerical_literals.size", "torch.nn.Embedding", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit_kbln"], ["if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "score", "=", "re_head", "*", "re_score", "+", "im_head", "*", "im_score", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "score", "=", "re_score", "*", "re_tail", "+", "im_score", "*", "im_tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n", "", "def", "RotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159265358979323846", "\n", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_KBLN.to_cuda": [[329, 333], ["model.DistMult_KBLN.numerical_literals.cuda", "model.DistMult_KBLN.c.cuda", "model.DistMult_KBLN.var.cuda"], "methods", ["None"], ["# Make phases of relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n", "re_relation", "=", "torch", ".", "cos", "(", "phase_relation", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_KBLN.init": [[334, 337], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["im_relation", "=", "torch", ".", "sin", "(", "phase_relation", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_KBLN.rbf": [[338, 340], ["torch.exp"], "methods", ["None"], ["im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "re_score", "=", "re_score", "-", "re_head", "\n", "im_score", "=", "im_score", "-", "im_head", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.DistMult_KBLN.forward": [[341, 358], ["model.DistMult_KBLN.input_dropout", "model.DistMult_KBLN.input_dropout", "torch.mm", "model.DistMult_KBLN.rbf", "model.DistMult_KBLN.nf_weights", "torch.bmm().squeeze", "torch.sigmoid", "model.DistMult_KBLN.E().squeeze", "model.DistMult_KBLN.R().squeeze", "model.DistMult_KBLN.E.weight.transpose", "n_h.unsqueeze().repeat", "r_idx.view", "e1_idx.view", "torch.bmm", "model.DistMult_KBLN.E", "model.DistMult_KBLN.R", "n_h.unsqueeze", "model.DistMult_KBLN.transpose"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], ["", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "re_score", "=", "re_score", "-", "re_tail", "\n", "im_score", "=", "im_score", "-", "im_tail", "\n", "\n", "", "score", "=", "torch", ".", "stack", "(", "[", "re_score", ",", "im_score", "]", ",", "dim", "=", "0", ")", "\n", "score", "=", "score", ".", "norm", "(", "dim", "=", "0", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n", "", "def", "RotatE_Gate", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "return", "self", ".", "RotatE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "\n", "", "def", "RotatE_KBLN", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ",", "head_literal", ",", "\n", "relation_idx", ",", "tail_literal", ")", ":", "\n", "        ", "score_l", "=", "self", ".", "RotatE", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx.__init__": [[361, 371], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["n", "=", "tail_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "head_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "head_literal", "\n", "", "else", ":", "\n", "            ", "tail_literal", "=", "tail_literal", ".", "view", "(", "tail", ".", "shape", "[", "0", "]", ",", "tail", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "n", "=", "head_literal", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "tail_literal", ".", "shape", "[", "1", "]", ",", "1", ")", "-", "tail_literal", "\n", "", "phi", "=", "self", ".", "rbf", "(", "n", ")", "\n", "w_nf", "=", "self", ".", "nf_weights", "(", "relation_idx", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "score_n", "=", "torch", ".", "bmm", "(", "phi", ",", "w_nf", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "return", "score_l", "+", "score_n", "\n", "\n", "", "def", "pRotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159262358979323846", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx.init": [[372, 375], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["\n", "# Make phases of entities and relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_head", "=", "head", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx.to_cuda": [[376, 378], ["None"], "methods", ["None"], ["phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "phase_tail", "=", "tail", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx.forward": [[379, 391], ["model.ComplEx.input_dropout", "model.ComplEx.input_dropout", "model.ComplEx.input_dropout", "model.ComplEx.input_dropout", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.sigmoid", "[].squeeze", "[].squeeze", "[].squeeze", "[].squeeze", "model.ComplEx.E.weight[].transpose", "model.ComplEx.E.weight[].transpose", "model.ComplEx.E.weight[].transpose", "model.ComplEx.E.weight[].transpose", "model.ComplEx.E", "model.ComplEx.E", "model.ComplEx.R", "model.ComplEx.R"], "methods", ["None"], ["if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "phase_head", "+", "(", "phase_relation", "-", "phase_tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "phase_head", "+", "phase_relation", ")", "-", "phase_tail", "\n", "\n", "", "score", "=", "torch", ".", "sin", "(", "score", ")", "\n", "score", "=", "torch", ".", "abs", "(", "score", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "*", "self", ".", "modulus", "\n", "return", "score", "\n", "\n", "", "@", "staticmethod", "\n", "def", "train_step", "(", "model", ",", "optimizer", ",", "train_iterator", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_Literal.__init__": [[394, 409], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "model.load_num_lit", "model.ComplEx_Literal.numerical_literals.size", "model.Gate", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit"], ["\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "model", ".", "enrich_embedding", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "mode", "=", "next", "(", "train_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "subsampling_weight", "=", "subsampling_weight", ".", "cuda", "(", ")", "\n", "\n", "", "negative_score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", "=", "mode", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_Literal.to_cuda": [[410, 413], ["model.ComplEx_Literal.numerical_literals.cuda", "model.ComplEx_Literal.emb_num_lit.cuda"], "methods", ["None"], ["\n", "if", "args", ".", "negative_adversarial_sampling", ":", "\n", "# In self-adversarial sampling, we do not apply back-propagation on the sampling weight", "\n", "            ", "negative_score", "=", "(", "F", ".", "softmax", "(", "negative_score", "*", "args", ".", "adversarial_temperature", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_Literal.init": [[414, 417], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["*", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "negative_score", "=", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_Literal.forward": [[418, 438], ["model.ComplEx_Literal.emb_num_lit", "model.ComplEx_Literal.emb_num_lit", "model.ComplEx_Literal.input_dropout", "model.ComplEx_Literal.input_dropout", "model.ComplEx_Literal.input_dropout", "model.ComplEx_Literal.input_dropout", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.sigmoid", "model.ComplEx_Literal.E", "model.ComplEx_Literal.R", "e1[].squeeze", "e1[].squeeze", "r[].squeeze", "r[].squeeze", "e2[].transpose", "e2[].transpose", "e2[].transpose", "e2[].transpose", "e1_idx.view"], "methods", ["None"], ["", "positive_score", "=", "model", "(", "positive_sample", ")", "\n", "\n", "positive_score", "=", "F", ".", "logsigmoid", "(", "positive_score", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "if", "args", ".", "uni_weight", ":", "\n", "            ", "positive_sample_loss", "=", "-", "positive_score", ".", "mean", "(", ")", "\n", "negative_sample_loss", "=", "-", "negative_score", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "positive_sample_loss", "=", "-", "(", "subsampling_weight", "*", "positive_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "negative_sample_loss", "=", "-", "(", "subsampling_weight", "*", "negative_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "\n", "", "loss", "=", "(", "positive_sample_loss", "+", "negative_sample_loss", ")", "/", "2", "\n", "\n", "if", "args", ".", "regularization", "!=", "0.0", ":", "\n", "# Use L3 regularization for ComplEx and DistMult", "\n", "            ", "regularization", "=", "args", ".", "regularization", "*", "(", "\n", "model", ".", "entity_embedding", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "+", "\n", "model", ".", "relation_embedding", ".", "norm", "(", "p", "=", "3", ")", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "\n", ")", "\n", "loss", "=", "loss", "+", "regularization", "\n", "regularization_log", "=", "{", "'regularization'", ":", "regularization", ".", "item", "(", ")", "}", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_KBLN.__init__": [[441, 459], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.BCELoss", "len", "model.load_num_lit_kbln", "model.ComplEx_KBLN.numerical_literals.size", "torch.nn.Embedding", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit_kbln"], ["\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "log", "=", "{", "\n", "**", "regularization_log", ",", "\n", "'positive_sample_loss'", ":", "positive_sample_loss", ".", "item", "(", ")", ",", "\n", "'negative_sample_loss'", ":", "negative_sample_loss", ".", "item", "(", ")", ",", "\n", "'loss'", ":", "loss", ".", "item", "(", ")", "\n", "}", "\n", "\n", "return", "log", "\n", "\n", "", "@", "staticmethod", "\n", "def", "test_step", "(", "model", ",", "test_triples", ",", "all_true_triples", ",", "args", ")", ":", "\n", "        ", "'''\n        Evaluate the model on test or valid datasets\n        '''", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_KBLN.init": [[460, 463], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "countries", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_KBLN.to_cuda": [[464, 468], ["model.ComplEx_KBLN.numerical_literals.cuda", "model.ComplEx_KBLN.c.cuda", "model.ComplEx_KBLN.var.cuda"], "methods", ["None"], ["# Countries S* datasets are evaluated on AUC-PR", "\n", "# Process test data for AUC-PR evaluation", "\n", "            ", "sample", "=", "list", "(", ")", "\n", "y_true", "=", "list", "(", ")", "\n", "for", "head", ",", "relation", ",", "tail", "in", "test_triples", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_KBLN.rbf": [[469, 471], ["torch.exp"], "methods", ["None"], ["                ", "for", "candidate_region", "in", "args", ".", "regions", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", "if", "candidate_region", "==", "tail", "else", "0", ")", "\n", "sample", ".", "append", "(", "(", "head", ",", "relation", ",", "candidate_region", ")", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ComplEx_KBLN.forward": [[472, 497], ["model.ComplEx_KBLN.input_dropout", "model.ComplEx_KBLN.input_dropout", "model.ComplEx_KBLN.input_dropout", "model.ComplEx_KBLN.input_dropout", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "model.ComplEx_KBLN.rbf", "model.ComplEx_KBLN.nf_weights", "torch.bmm().squeeze", "torch.sigmoid", "[].squeeze", "[].squeeze", "[].squeeze", "[].squeeze", "model.ComplEx_KBLN.E.weight[].transpose", "model.ComplEx_KBLN.E.weight[].transpose", "model.ComplEx_KBLN.E.weight[].transpose", "model.ComplEx_KBLN.E.weight[].transpose", "n_h.unsqueeze().repeat", "r_idx.view", "e1_idx.view", "torch.bmm", "n_h.unsqueeze", "model.ComplEx_KBLN.transpose", "model.ComplEx_KBLN.E", "model.ComplEx_KBLN.E", "model.ComplEx_KBLN.R", "model.ComplEx_KBLN.R"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], ["\n", "", "", "sample", "=", "torch", ".", "LongTensor", "(", "sample", ")", "\n", "if", "args", ".", "cuda", ":", "\n", "                ", "sample", "=", "sample", ".", "cuda", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "y_score", "=", "model", "(", "sample", ")", ".", "squeeze", "(", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "y_true", "=", "np", ".", "array", "(", "y_true", ")", "\n", "\n", "# average_precision_score is the same as auc_pr", "\n", "auc_pr", "=", "average_precision_score", "(", "y_true", ",", "y_score", ")", "\n", "\n", "metrics", "=", "{", "'auc_pr'", ":", "auc_pr", "}", "\n", "\n", "", "else", ":", "\n", "# Otherwise use standard (filtered) MRR, MR, HITS@1, HITS@3, and HITS@10 metrics", "\n", "# Prepare dataloader for evaluation", "\n", "            ", "test_dataloader_head", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "all_true_triples", ",", "\n", "args", ".", "nentity", ",", "\n", "args", ".", "nrelation", ",", "\n", "'head-batch'", "\n", ")", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE.__init__": [[500, 522], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout2d", "torch.nn.BCELoss", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm1d", "model.ConvE.register_parameter", "torch.nn.Linear", "len", "len", "torch.nn.Parameter", "torch.zeros", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__"], ["collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataloader_tail", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "all_true_triples", ",", "\n", "args", ".", "nentity", ",", "\n", "args", ".", "nrelation", ",", "\n", "'tail-batch'", "\n", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataset_list", "=", "[", "test_dataloader_head", ",", "test_dataloader_tail", "]", "\n", "\n", "logs", "=", "[", "]", "\n", "\n", "step", "=", "0", "\n", "total_steps", "=", "sum", "(", "[", "len", "(", "dataset", ")", "for", "dataset", "in", "test_dataset_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE.to_cuda": [[523, 525], ["None"], "methods", ["None"], ["with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "test_dataset", "in", "test_dataset_list", ":", "\n", "                    ", "for", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "mode", "in", "test_dataset", ":", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE.init": [[526, 529], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], ["                        ", "if", "args", ".", "cuda", ":", "\n", "                            ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "filter_bias", "=", "filter_bias", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE.forward": [[530, 549], ["model.ConvE.E().view", "model.ConvE.R().view", "model.ConvE.bn0", "model.ConvE.input_dropout", "model.ConvE.conv1", "model.ConvE.bn1", "torch.nn.functional.relu", "model.ConvE.feature_map_dropout", "torch.mm.view", "model.ConvE.fc", "model.ConvE.hidden_dropout", "model.ConvE.bn2", "torch.nn.functional.relu", "torch.mm", "model.ConvE.b.expand_as", "torch.sigmoid", "torch.cat", "model.ConvE.E.weight.transpose", "model.ConvE.E", "model.ConvE.R"], "methods", ["None"], ["\n", "", "batch_size", "=", "positive_sample", ".", "size", "(", "0", ")", "\n", "\n", "score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", ")", "\n", "score", "+=", "filter_bias", "\n", "\n", "# Explicitly sort all the entities to ensure that there is no test exposure bias", "\n", "argsort", "=", "torch", ".", "argsort", "(", "score", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "                            ", "positive_arg", "=", "positive_sample", "[", ":", ",", "0", "]", "\n", "", "elif", "mode", "==", "'tail-batch'", ":", "\n", "                            ", "positive_arg", "=", "positive_sample", "[", ":", ",", "2", "]", "\n", "", "else", ":", "\n", "                            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "# Notice that argsort is not ranking", "\n", "                            ", "ranking", "=", "(", "argsort", "[", "i", ",", ":", "]", "==", "positive_arg", "[", "i", "]", ")", ".", "nonzero", "(", ")", "\n", "assert", "ranking", ".", "size", "(", "0", ")", "==", "1", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_Literal.__init__": [[552, 579], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout2d", "torch.nn.BCELoss", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm1d", "model.ConvE_Literal.register_parameter", "torch.nn.Linear", "model.load_num_lit", "model.ConvE_Literal.numerical_literals.size", "model.Gate", "len", "len", "torch.nn.Parameter", "torch.zeros", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit"], ["ranking", "=", "1", "+", "ranking", ".", "item", "(", ")", "\n", "logs", ".", "append", "(", "{", "\n", "'MRR'", ":", "1.0", "/", "ranking", ",", "\n", "'MR'", ":", "float", "(", "ranking", ")", ",", "\n", "'HITS@1'", ":", "1.0", "if", "ranking", "<=", "1", "else", "0.0", ",", "\n", "'HITS@3'", ":", "1.0", "if", "ranking", "<=", "3", "else", "0.0", ",", "\n", "'HITS@10'", ":", "1.0", "if", "ranking", "<=", "10", "else", "0.0", ",", "\n", "}", ")", "\n", "\n", "", "if", "step", "%", "args", ".", "test_log_steps", "==", "0", ":", "\n", "                            ", "logging", ".", "info", "(", "'Evaluating the model... (%d/%d)'", "%", "(", "step", ",", "total_steps", ")", ")", "\n", "\n", "", "step", "+=", "1", "\n", "\n", "", "", "", "metrics", "=", "{", "}", "\n", "for", "metric", "in", "logs", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "                ", "metrics", "[", "metric", "]", "=", "sum", "(", "[", "log", "[", "metric", "]", "for", "log", "in", "logs", "]", ")", "/", "len", "(", "logs", ")", "\n", "\n", "", "", "return", "metrics", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_Literal.to_cuda": [[580, 583], ["model.ConvE_Literal.numerical_literals.cuda", "model.ConvE_Literal.emb_num_lit.cuda"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_Literal.init": [[584, 587], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_Literal.forward": [[588, 614], ["model.ConvE_Literal.E", "model.ConvE_Literal.emb_num_lit().view", "model.ConvE_Literal.emb_num_lit", "model.ConvE_Literal.R().view", "model.ConvE_Literal.bn0", "model.ConvE_Literal.input_dropout", "model.ConvE_Literal.conv1", "model.ConvE_Literal.bn1", "torch.nn.functional.relu", "model.ConvE_Literal.feature_map_dropout", "torch.mm.view", "model.ConvE_Literal.fc", "model.ConvE_Literal.hidden_dropout", "model.ConvE_Literal.bn2", "torch.nn.functional.relu", "torch.mm", "model.ConvE_Literal.b.expand_as", "torch.sigmoid", "torch.cat", "model.ConvE_Literal.transpose", "e1_idx.view", "model.ConvE_Literal.emb_num_lit", "model.ConvE_Literal.R"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__": [[617, 647], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout2d", "torch.nn.BCELoss", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm1d", "model.ConvE_KBLN.register_parameter", "torch.nn.Linear", "len", "model.load_num_lit_kbln", "model.ConvE_KBLN.numerical_literals.size", "torch.nn.Embedding", "len", "len", "torch.nn.Parameter", "len", "torch.zeros", "len"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.__init__", "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit_kbln"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.to_cuda": [[648, 652], ["model.ConvE_KBLN.numerical_literals.cuda", "model.ConvE_KBLN.c.cuda", "model.ConvE_KBLN.var.cuda"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.init": [[653, 656], ["torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf": [[657, 659], ["torch.exp"], "methods", ["None"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.forward": [[660, 690], ["model.ConvE_KBLN.E().view", "model.ConvE_KBLN.R().view", "model.ConvE_KBLN.bn0", "model.ConvE_KBLN.input_dropout", "model.ConvE_KBLN.conv1", "model.ConvE_KBLN.bn1", "torch.nn.functional.relu", "model.ConvE_KBLN.feature_map_dropout", "torch.mm.view", "model.ConvE_KBLN.fc", "model.ConvE_KBLN.hidden_dropout", "model.ConvE_KBLN.bn2", "torch.nn.functional.relu", "torch.mm", "model.ConvE_KBLN.b.expand_as", "model.ConvE_KBLN.rbf", "model.ConvE_KBLN.nf_weights", "torch.bmm().squeeze", "torch.sigmoid", "torch.cat", "model.ConvE_KBLN.E.weight.transpose", "n_h.unsqueeze().repeat", "r_idx.view", "model.ConvE_KBLN.E", "model.ConvE_KBLN.R", "e1_idx.view", "torch.bmm", "n_h.unsqueeze", "model.ConvE_KBLN.transpose"], "methods", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.ConvE_KBLN.rbf"], []], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit": [[7, 21], ["pandas.read_csv", "numpy.zeros", "enumerate", "numpy.max", "numpy.min", "torch.autograd.Variable", "enumerate", "len", "len", "torch.from_numpy", "df[].unique", "s.lower"], "function", ["None"], ["import", "logging", "\n", "\n", "import", "numpy", "as", "np", "\n", "\n", "import", "torch", "\n", "import", "torch", ".", "nn", "as", "nn", "\n", "import", "torch", ".", "nn", ".", "functional", "as", "F", "\n", "\n", "from", "sklearn", ".", "metrics", "import", "average_precision_score", "\n", "\n", "from", "torch", ".", "utils", ".", "data", "import", "DataLoader", "\n", "\n", "from", "dataloader", "import", "TestDataset", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit_kbln": [[23, 45], ["model.load_num_lit", "load_data().astype", "numpy.mean().astype", "pandas.read_csv", "numpy.zeros", "pd.read_csv.iterrows", "numpy.var", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.load_num_lit_kbln.load_data"], "function", ["home.repos.pwc.inspect_result.otamio_kga.tucker.model.load_num_lit", "home.repos.pwc.inspect_result.otamio_kga.tucker.load_data.Data.load_data"], ["\n", "    ", "def", "__init__", "(", "self", ",", "\n", "input_size", ",", "\n", "output_size", ",", "\n", "gate_activation", "=", "torch", ".", "sigmoid", ")", ":", "\n", "\n", "        ", "super", "(", "Gate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "self", ".", "gate_activation", "=", "gate_activation", "\n", "self", ".", "g", "=", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ")", "\n", "self", ".", "g1", "=", "nn", ".", "Linear", "(", "output_size", ",", "output_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "g2", "=", "nn", ".", "Linear", "(", "input_size", "-", "output_size", ",", "output_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "gate_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "output_size", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x_ent", ",", "x_lit", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "[", "x_ent", ",", "x_lit", "]", ",", "1", ")", "\n", "g_embedded", "=", "torch", ".", "tanh", "(", "self", ".", "g", "(", "x", ")", ")", "\n", "gate", "=", "self", ".", "gate_activation", "(", "self", ".", "g1", "(", "x_ent", ")", "+", "self", ".", "g2", "(", "x_lit", ")", "+", "self", ".", "gate_bias", ")", "\n", "output", "=", "(", "1", "-", "gate", ")", "*", "x_ent", "+", "gate", "*", "g_embedded", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_intervals_for_values_based_on_percentile": [[8, 36], ["numpy.array", "numpy.arange", "numpy.array", "np.array.sort", "range", "range", "numpy.zeros", "range", "len", "int", "interval_bounds.append", "len", "intervals_for_values.append", "len", "len", "int", "sorted", "len", "zip", "len"], "function", ["None"], ["def", "get_intervals_for_values_based_on_percentile", "(", "values", ",", "num_bins", ")", ":", "\n", "    ", "values", "=", "np", ".", "array", "(", "values", ")", "\n", "indexes", "=", "np", ".", "arange", "(", "len", "(", "values", ")", ")", "\n", "\n", "# sort values and corresponding labels in ascending order", "\n", "indexes", "=", "np", ".", "array", "(", "[", "i", "for", "i", ",", "v", "in", "sorted", "(", "zip", "(", "indexes", ",", "values", ")", ",", "key", "=", "lambda", "pair", ":", "pair", "[", "1", "]", ")", "]", ")", "\n", "values", ".", "sort", "(", ")", "\n", "\n", "interval_bounds", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_bins", ")", ":", "\n", "        ", "index_of_lbound", "=", "int", "(", "(", "i", "/", "num_bins", ")", "*", "len", "(", "values", ")", ")", "\n", "index_of_ubound", "=", "int", "(", "(", "(", "i", "+", "1", ")", "/", "num_bins", ")", "*", "len", "(", "values", ")", ")", "-", "1", "\n", "lbound", "=", "values", "[", "index_of_lbound", "]", "\n", "ubound", "=", "values", "[", "index_of_ubound", "]", "\n", "interval_bounds", ".", "append", "(", "(", "lbound", ",", "ubound", ")", ")", "\n", "", "intervals_for_values", "=", "[", "]", "\n", "cur_interval_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "values", ")", ")", ":", "\n", "        ", "while", "values", "[", "i", "]", ">", "interval_bounds", "[", "cur_interval_idx", "]", "[", "1", "]", ":", "\n", "            ", "cur_interval_idx", "+=", "1", "\n", "", "intervals_for_values", ".", "append", "(", "interval_bounds", "[", "cur_interval_idx", "]", ")", "\n", "\n", "# rearrange intervals to original order of values", "\n", "", "intervals_for_values_unscrambled", "=", "np", ".", "zeros", "(", "len", "(", "intervals_for_values", ")", ",", "dtype", "=", "tuple", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "indexes", ")", ")", ":", "\n", "        ", "intervals_for_values_unscrambled", "[", "indexes", "[", "i", "]", "]", "=", "intervals_for_values", "[", "i", "]", "\n", "\n", "", "return", "intervals_for_values_unscrambled", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_jenks": [[38, 52], ["len", "numpy.array", "jenkspy.jenks_breaks", "partition.get_bins_kde", "min"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_kde"], ["", "def", "get_bins_jenks", "(", "df", ")", ":", "\n", "    ", "\"\"\"\n    MODE: JENKS\n    Partition the 1D array in Jenks Natural Breaks Algorithms\n    \"\"\"", "\n", "import", "jenkspy", "\n", "\n", "num_bins", "=", "len", "(", "get_bins_kde", "(", "df", ")", ")", "\n", "values", "=", "np", ".", "array", "(", "df", ".", "loc", "[", ":", ",", "\"node2\"", "]", ")", "\n", "if", "num_bins", "<", "2", ":", "\n", "        ", "return", "[", "min", "(", "values", ")", "]", "\n", "\n", "", "breaks", "=", "jenkspy", ".", "jenks_breaks", "(", "values", ",", "num_bins", ")", "\n", "return", "breaks", "[", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_kde": [[54, 70], ["numpy.array", "KernelDensity().fit", "numpy.linspace", "KernelDensity().fit.score_samples", "plot", "np.array.reshape", "min", "max", "np.linspace.reshape", "KernelDensity", "argrelextrema", "argrelextrema", "min"], "function", ["None"], ["", "def", "get_bins_kde", "(", "df", ")", ":", "\n", "    ", "\"\"\"\n    MODE: KDE\n    Partition the 1D array in KDE\n    \"\"\"", "\n", "from", "sklearn", ".", "neighbors", "import", "KernelDensity", "\n", "from", "scipy", ".", "signal", "import", "argrelextrema", "\n", "from", "matplotlib", ".", "pyplot", "import", "plot", "\n", "\n", "values", "=", "np", ".", "array", "(", "df", ".", "loc", "[", ":", ",", "\"node2\"", "]", ")", "\n", "kde", "=", "KernelDensity", "(", "kernel", "=", "'gaussian'", ",", "bandwidth", "=", "3", ")", ".", "fit", "(", "values", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "s", "=", "np", ".", "linspace", "(", "min", "(", "values", ")", ",", "max", "(", "values", ")", ")", "\n", "e", "=", "kde", ".", "score_samples", "(", "s", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "plot", "(", "s", ",", "e", ")", "\n", "mi", ",", "ma", "=", "argrelextrema", "(", "e", ",", "np", ".", "less", ")", "[", "0", "]", ",", "argrelextrema", "(", "e", ",", "np", ".", "greater", ")", "[", "0", "]", "\n", "return", "[", "min", "(", "values", ")", "]", "+", "[", "s", "[", "i", "]", "for", "i", "in", "mi", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_quantile": [[72, 98], ["numpy.array", "partition.get_intervals_for_values_based_on_percentile", "set", "set", "enumerate", "sorted", "len", "df.insert", "df.insert", "sorted", "set.add", "partition.get_bins_kde", "len", "len", "range", "range"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_intervals_for_values_based_on_percentile", "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_kde"], ["", "def", "get_bins_quantile", "(", "df", ",", "num_bins", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    MODE: ORIGIN, QUANTILE\n    Partition the 1D array into a list of entity nodes\n    \"\"\"", "\n", "if", "num_bins", "is", "None", ":", "\n", "        ", "num_bins", "=", "len", "(", "get_bins_kde", "(", "df", ")", ")", "\n", "\n", "# Add two columns", "\n", "", "try", ":", "\n", "        ", "df", ".", "insert", "(", "loc", "=", "len", "(", "df", ".", "columns", ")", ",", "column", "=", "\"lower_bound\"", ",", "value", "=", "[", "\"\"", "for", "i", "in", "range", "(", "df", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "df", ".", "insert", "(", "loc", "=", "len", "(", "df", ".", "columns", ")", ",", "column", "=", "\"upper_bound\"", ",", "value", "=", "[", "\"\"", "for", "i", "in", "range", "(", "df", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "values", "=", "np", ".", "array", "(", "df", ".", "loc", "[", ":", ",", "\"node2\"", "]", ")", "\n", "\n", "# Partition the nodes based on node2", "\n", "intervals_for_values", "=", "get_intervals_for_values_based_on_percentile", "(", "values", ",", "num_bins", ")", "\n", "\n", "intervals", "=", "set", "(", "intervals_for_values", ")", "\n", "set_", "=", "set", "(", ")", "\n", "\n", "for", "i", ",", "(", "p1", ",", "p2", ")", "in", "enumerate", "(", "sorted", "(", "intervals", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", ")", ":", "\n", "        ", "set_", ".", "add", "(", "p1", ")", "\n", "", "return", "sorted", "(", "set_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_fixed_length": [[100, 108], ["numpy.array", "len", "numpy.linspace", "partition.get_bins_kde", "np.array.min", "np.array.max", "np.array.min"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_kde"], ["", "def", "get_bins_fixed_length", "(", "df", ",", "num_bins", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    MODE: FIXED_LENGTH\n    \"\"\"", "\n", "if", "num_bins", "is", "None", ":", "\n", "        ", "num_bins", "=", "len", "(", "get_bins_kde", "(", "df", ")", ")", "\n", "", "values", "=", "np", ".", "array", "(", "df", ".", "loc", "[", ":", ",", "\"node2\"", "]", ")", "\n", "return", "np", ".", "linspace", "(", "values", ".", "min", "(", ")", ",", "values", ".", "max", "(", ")", "-", "values", ".", "min", "(", ")", ",", "num_bins", "+", "1", ")", "[", ":", "-", "1", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.get_edge_starts": [[13, 28], ["mode.startswith", "partition.get_bins_quantile", "mode.startswith", "partition.get_bins_fixed_length", "mode.startswith", "partition.get_bins_jenks", "mode.startswith", "partition.get_bins_kde"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_quantile", "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_fixed_length", "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_jenks", "home.repos.pwc.inspect_result.otamio_kga.augment.partition.get_bins_kde"], ["def", "get_edge_starts", "(", "df_sli", ",", "mode", ",", "num_bins", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Get the start of each bin\n    \"\"\"", "\n", "if", "mode", ".", "startswith", "(", "'Quantile'", ")", ":", "\n", "        ", "bins", "=", "get_bins_quantile", "(", "df_sli", ",", "num_bins", ")", "\n", "", "elif", "mode", ".", "startswith", "(", "'Fixed'", ")", ":", "\n", "        ", "bins", "=", "get_bins_fixed_length", "(", "df_sli", ",", "num_bins", ")", "\n", "", "elif", "mode", ".", "startswith", "(", "'Jenks'", ")", ":", "\n", "        ", "bins", "=", "get_bins_jenks", "(", "df_sli", ")", "\n", "", "elif", "mode", ".", "startswith", "(", "'Kde'", ")", ":", "\n", "        ", "bins", "=", "get_bins_kde", "(", "df_sli", ")", "\n", "", "else", ":", "# Unsupported Mode", "\n", "        ", "return", "None", "\n", "", "return", "bins", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_chain": [[30, 49], ["range", "len", "qnode_chain.append", "qnode_chain.append", "len"], "function", ["None"], ["", "def", "create_chain", "(", "qnodes_collect", ",", "property_", ",", "reverse_chain", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    create the chain needed\n    \"\"\"", "\n", "qnode_chain", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "qnodes_collect", ")", ")", ":", "\n", "        ", "if", "reverse_chain", "and", "i", ">", "0", ":", "\n", "            ", "qnode_chain", ".", "append", "(", "{", "\n", "'node1'", ":", "qnodes_collect", "[", "i", "]", ",", "\n", "'label'", ":", "property_", "+", "'_prev'", ",", "\n", "'node2'", ":", "qnodes_collect", "[", "i", "-", "1", "]", "\n", "}", ")", "\n", "", "if", "i", "<", "len", "(", "qnodes_collect", ")", "-", "1", ":", "\n", "            ", "qnode_chain", ".", "append", "(", "{", "\n", "'node1'", ":", "qnodes_collect", "[", "i", "]", ",", "\n", "'label'", ":", "property_", "+", "'_next'", ",", "\n", "'node2'", ":", "qnodes_collect", "[", "i", "+", "1", "]", "\n", "}", ")", "\n", "", "", "return", "qnode_chain", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_hierarchy": [[51, 69], ["range", "len", "qnode_hierarchy.append", "qnode_hierarchy.append"], "function", ["None"], ["", "def", "create_hierarchy", "(", "qnodes_collect_a", ",", "qnodes_collect_b", ",", "property_", ",", "reverse_relation", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    create the hierarchy needed\n    \"\"\"", "\n", "qnode_hierarchy", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "qnodes_collect_a", ")", ")", ":", "\n", "        ", "qnode_hierarchy", ".", "append", "(", "{", "\n", "'node1'", ":", "qnodes_collect_a", "[", "i", "]", ",", "\n", "'label'", ":", "property_", "+", "'_is_subgroup_of'", ",", "\n", "'node2'", ":", "qnodes_collect_b", "[", "i", "//", "2", "]", "\n", "}", ")", "\n", "if", "reverse_relation", ":", "\n", "            ", "qnode_hierarchy", ".", "append", "(", "{", "\n", "'node1'", ":", "qnodes_collect_b", "[", "i", "//", "2", "]", ",", "\n", "'label'", ":", "property_", "+", "'_has_subgroup'", ",", "\n", "'node2'", ":", "qnodes_collect_a", "[", "i", "]", "\n", "}", ")", "\n", "", "", "return", "qnode_hierarchy", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_literal_labels": [[71, 100], ["range", "len", "utils.gen_qnode", "utils.gen_qlabel", "qnodes_collect.append", "qnodes_label_edges.append", "len"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_qnode", "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_qlabel"], ["", "def", "create_literal_labels", "(", "bins", ",", "property_", ")", ":", "\n", "    ", "\"\"\"\n    Create labels for quantity_intervals\n    \"\"\"", "\n", "qnodes_collect", "=", "[", "]", "\n", "qnodes_label_edges", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "bins", ")", ")", ":", "\n", "        ", "if", "i", "==", "0", ":", "\n", "            ", "start", "=", "bins", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "start", "=", "bins", "[", "i", "]", "+", "1e-6", "\n", "\n", "", "if", "i", "==", "len", "(", "bins", ")", "-", "1", ":", "\n", "            ", "end", "=", "'inf'", "\n", "", "else", ":", "\n", "            ", "end", "=", "bins", "[", "i", "+", "1", "]", "\n", "\n", "", "_qnode", "=", "gen_qnode", "(", "property_", ",", "start", ",", "end", ")", "\n", "_qlabel", "=", "gen_qlabel", "(", "property_", ",", "start", ",", "end", ")", "\n", "\n", "qnodes_collect", ".", "append", "(", "_qnode", ")", "\n", "\n", "qnodes_label_edges", ".", "append", "(", "{", "\n", "'node1'", ":", "_qnode", ",", "\n", "'label'", ":", "'label'", ",", "\n", "'node2'", ":", "_qlabel", "\n", "}", ")", "\n", "", "return", "qnodes_collect", ",", "qnodes_label_edges", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_property_labels": [[102, 117], ["utils.gen_pnode", "pnodes_collect.append", "utils.gen_plabel", "pnodes_label_edges.append"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_pnode", "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_plabel"], ["", "def", "create_property_labels", "(", "property_", ",", "unit", ")", ":", "\n", "    ", "\"\"\" Generate the pnodes \"\"\"", "\n", "pnodes_collect", "=", "[", "]", "\n", "pnodes_edges", "=", "[", "]", "\n", "pnodes_label_edges", "=", "[", "]", "\n", "\n", "_pnode", "=", "gen_pnode", "(", "property_", ",", "unit", ")", "\n", "pnodes_collect", ".", "append", "(", "_pnode", ")", "\n", "_plabel", "=", "gen_plabel", "(", "property_", ",", "unit", ")", "\n", "pnodes_label_edges", ".", "append", "(", "{", "\n", "'node1'", ":", "_pnode", ",", "\n", "'label'", ":", "'label'", ",", "\n", "'node2'", ":", "_plabel", "\n", "}", ")", "\n", "return", "pnodes_collect", ",", "pnodes_edges", ",", "pnodes_label_edges", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_numeric_edges": [[119, 137], ["df_sli.iterrows", "len", "utils.gen_pnode", "numeric_edges.append", "bisect.bisect"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_pnode"], ["", "def", "create_numeric_edges", "(", "df_sli", ",", "bins", ",", "qnodes_collect", ",", "suffix", "=", "\"\"", ")", ":", "\n", "    ", "\"\"\" Create numeric edges \"\"\"", "\n", "numeric_edges", "=", "[", "]", "\n", "if", "len", "(", "qnodes_collect", ")", "==", "0", ":", "\n", "        ", "return", "numeric_edges", "\n", "\n", "", "for", "i", ",", "row", "in", "df_sli", ".", "iterrows", "(", ")", ":", "\n", "        ", "_pnode", "=", "gen_pnode", "(", "row", "[", "'label'", "]", ")", "\n", "try", ":", "\n", "            ", "_qnode", "=", "qnodes_collect", "[", "bisect", "(", "bins", ",", "row", "[", "'node2'", "]", ")", "-", "1", "]", "\n", "", "except", ":", "\n", "            ", "_qnode", "=", "qnodes_collect", "[", "0", "]", "\n", "", "numeric_edges", ".", "append", "(", "{", "\n", "'node1'", ":", "row", "[", "'node1'", "]", ",", "\n", "'label'", ":", "f\"{_pnode}{suffix}\"", ",", "\n", "'node2'", ":", "_qnode", "\n", "}", ")", "\n", "", "return", "numeric_edges", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_single": [[143, 163], ["augment_utils.get_edge_starts", "augment_utils.create_literal_labels", "augment_utils.create_chain", "augment_utils.create_property_labels", "augment_utils.create_numeric_edges", "augment_utils.create_numeric_edges", "augment_utils.create_numeric_edges"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.get_edge_starts", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_literal_labels", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_chain", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_property_labels", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_numeric_edges", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_numeric_edges", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_numeric_edges"], ["", "def", "generate_edges_single", "(", "train", ",", "property_", ",", "num_bins", "=", "None", ",", "unit", "=", "None", ",", "mode", "=", "'Quantile_Single'", ",", "\n", "valid", "=", "None", ",", "test", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Generate a 1D partition of literal nodes and add them to entity nodes\n    \"\"\"", "\n", "bins", "=", "get_edge_starts", "(", "train", ",", "mode", ",", "num_bins", ")", "\n", "# Generate the qnode", "\n", "qnodes_collect", ",", "qnodes_label_edges", "=", "create_literal_labels", "(", "bins", ",", "property_", ")", "\n", "\n", "# Connect with quantity nodes", "\n", "qnode_chain", "=", "create_chain", "(", "qnodes_collect", ",", "property_", ",", "reverse_chain", "=", "reverse", ")", "\n", "# Generate the pnodes", "\n", "pnodes_collect", ",", "pnodes_edges", ",", "pnodes_label_edges", "=", "create_property_labels", "(", "property_", ",", "unit", ")", "\n", "# Generate numeric edges", "\n", "numeric_edges_train", "=", "create_numeric_edges", "(", "train", ",", "bins", ",", "qnodes_collect", ")", "\n", "numeric_edges_valid", "=", "create_numeric_edges", "(", "valid", ",", "bins", ",", "qnodes_collect", ")", "if", "valid", "is", "not", "None", "else", "None", "\n", "numeric_edges_test", "=", "create_numeric_edges", "(", "test", ",", "bins", ",", "qnodes_collect", ")", "if", "test", "is", "not", "None", "else", "None", "\n", "\n", "return", "qnode_chain", ",", "qnodes_label_edges", ",", "pnodes_edges", ",", "pnodes_label_edges", ",", "(", "numeric_edges_train", ",", "numeric_edges_valid", ",", "numeric_edges_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_overlapping": [[165, 202], ["augment_utils.get_edge_starts", "augment_utils.create_literal_labels", "augment_utils.create_literal_labels", "range", "augment_utils.create_chain", "augment_utils.create_property_labels", "augment_utils.generate_edges_overlapping.compute_numeric_edges"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.get_edge_starts", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_literal_labels", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_literal_labels", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_chain", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_property_labels"], ["", "def", "generate_edges_overlapping", "(", "train", ",", "property_", ",", "num_bins", "=", "None", ",", "unit", "=", "None", ",", "mode", "=", "'Quantile_Overlap'", ",", "\n", "valid", "=", "None", ",", "test", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "def", "compute_numeric_edges", "(", "df", ",", "bins_a", ",", "bins_b", ",", "qnodes_collect_a", ",", "qnodes_collect_b", ")", ":", "\n", "        ", "if", "df", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "numeric_edges_a", "=", "create_numeric_edges", "(", "df", ",", "bins_a", ",", "qnodes_collect_a", ",", "suffix", "=", "\"_right\"", ")", "\n", "numeric_edges_b", "=", "create_numeric_edges", "(", "df", ",", "bins_b", ",", "qnodes_collect_b", ",", "suffix", "=", "\"_left\"", ")", "\n", "numeric_edges", "=", "numeric_edges_a", "+", "numeric_edges_b", "\n", "return", "numeric_edges", "\n", "\n", "", "\"\"\"\n    One numeric edge = 2 links\n    \"\"\"", "\n", "bs", "=", "get_edge_starts", "(", "train", ",", "mode", ",", "num_bins", ")", "\n", "bins_a", ",", "bins_b", "=", "bs", "[", "0", ":", ":", "2", "]", ",", "np", ".", "concatenate", "(", "(", "[", "bs", "[", "0", "]", "]", ",", "bs", "[", "1", ":", ":", "2", "]", ")", ")", "\n", "\n", "qnodes_collect_a", ",", "qnodes_label_edges_a", "=", "create_literal_labels", "(", "bins_a", ",", "property_", ")", "\n", "qnodes_collect_b", ",", "qnodes_label_edges_b", "=", "create_literal_labels", "(", "bins_b", ",", "property_", ")", "\n", "qnodes_label_edges", "=", "qnodes_label_edges_a", "+", "qnodes_label_edges_b", "\n", "\n", "qnodes_collect_all", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "qnodes_collect_a", ")", ")", ":", "\n", "        ", "qnodes_collect_all", ".", "append", "(", "qnodes_collect_a", "[", "i", "]", ")", "\n", "qnodes_collect_all", ".", "append", "(", "qnodes_collect_b", "[", "i", "]", ")", "\n", "", "if", "len", "(", "qnodes_collect_a", ")", ">", "len", "(", "qnodes_collect_b", ")", ":", "\n", "        ", "qnodes_collect_all", "+=", "qnodes_collect_a", "[", "len", "(", "qnodes_collect_b", ")", ":", "]", "\n", "\n", "", "qnode_chain", "=", "create_chain", "(", "qnodes_collect_all", ",", "property_", ",", "reverse_chain", "=", "reverse", ")", "\n", "\n", "pnodes_collect", ",", "pnodes_edges", ",", "pnodes_label_edges", "=", "create_property_labels", "(", "property_", ",", "unit", ")", "\n", "\n", "numeric_edges_train", "=", "compute_numeric_edges", "(", "train", ",", "bins_a", ",", "bins_b", ",", "qnodes_collect_a", ",", "qnodes_collect_b", ")", "\n", "numeric_edges_valid", "=", "compute_numeric_edges", "(", "valid", ",", "bins_a", ",", "bins_b", ",", "qnodes_collect_a", ",", "qnodes_collect_b", ")", "\n", "numeric_edges_test", "=", "compute_numeric_edges", "(", "test", ",", "bins_a", ",", "bins_b", ",", "qnodes_collect_a", ",", "qnodes_collect_b", ")", "\n", "\n", "return", "qnode_chain", ",", "qnodes_label_edges", ",", "pnodes_edges", ",", "pnodes_label_edges", ",", "(", "numeric_edges_train", ",", "numeric_edges_valid", ",", "numeric_edges_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_hierarchy": [[204, 248], ["augment_utils.get_edge_starts", "range", "range", "list", "range", "range", "augment_utils.create_property_labels", "reduce", "reduce", "augment_utils.generate_edges_overlapping.compute_numeric_edges"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.get_edge_starts", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_property_labels"], ["", "def", "generate_edges_hierarchy", "(", "train", ",", "property_", ",", "levels", "=", "3", ",", "unit", "=", "None", ",", "mode", "=", "'Quantile_Hierarchy'", ",", "\n", "valid", "=", "None", ",", "test", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Link Hierarchy\n    \"\"\"", "\n", "from", "functools", "import", "reduce", "\n", "def", "compute_numeric_edges", "(", "df", ",", "bs_list", ",", "qnodes_collect_list", ")", ":", "\n", "        ", "if", "df", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "numeric_edges_list", "=", "list", "(", ")", "\n", "for", "lv", "in", "range", "(", "levels", "+", "1", ")", ":", "\n", "            ", "numeric_edges_list", ".", "append", "(", "\n", "create_numeric_edges", "(", "train", ",", "bs_list", "[", "lv", "]", ",", "qnodes_collect_list", "[", "lv", "]", ",", "suffix", "=", "f\"_{lv}\"", ")", "\n", ")", "\n", "", "return", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "numeric_edges_list", ")", "\n", "\n", "", "bs", "=", "get_edge_starts", "(", "train", ",", "mode", ",", "2", "**", "levels", ")", "\n", "bs_list", "=", "[", "]", "\n", "for", "lv", "in", "range", "(", "levels", "+", "1", ")", ":", "\n", "        ", "bs_list", ".", "append", "(", "bs", "[", "0", ":", ":", "2", "**", "lv", "]", ")", "\n", "\n", "", "qnodes_collect_list", ",", "qnodes_label_edges_list", "=", "list", "(", ")", ",", "list", "(", ")", "\n", "for", "lv", "in", "range", "(", "levels", "+", "1", ")", ":", "\n", "        ", "_a", ",", "_b", "=", "create_literal_labels", "(", "bs_list", "[", "lv", "]", ",", "property_", ")", "\n", "qnodes_collect_list", ".", "append", "(", "_a", ")", "\n", "qnodes_label_edges_list", ".", "append", "(", "_b", ")", "\n", "\n", "", "qnode_chain_list", "=", "list", "(", ")", "\n", "for", "lv", "in", "range", "(", "levels", "+", "1", ")", ":", "\n", "        ", "qnode_chain_list", ".", "append", "(", "create_chain", "(", "qnodes_collect_list", "[", "lv", "]", ",", "property_", ",", "reverse_chain", "=", "reverse", ")", ")", "\n", "", "for", "lv", "in", "range", "(", "levels", "-", "1", ")", ":", "\n", "        ", "qnode_chain_list", ".", "append", "(", "create_hierarchy", "(", "qnodes_collect_list", "[", "lv", "]", ",", "qnodes_collect_list", "[", "lv", "+", "1", "]", ",", "\n", "property_", ",", "reverse_relation", "=", "reverse", ")", ")", "\n", "\n", "", "pnodes_collect", ",", "pnodes_edges", ",", "pnodes_label_edges", "=", "create_property_labels", "(", "property_", ",", "unit", ")", "\n", "\n", "qnode_chain", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "qnode_chain_list", ")", "\n", "qnodes_label_edges", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "qnodes_label_edges_list", ")", "\n", "numeric_edges_train", "=", "compute_numeric_edges", "(", "train", ",", "bs_list", ",", "qnodes_collect_list", ")", "\n", "numeric_edges_valid", "=", "compute_numeric_edges", "(", "valid", ",", "bs_list", ",", "qnodes_collect_list", ")", "\n", "numeric_edges_test", "=", "compute_numeric_edges", "(", "test", ",", "bs_list", ",", "qnodes_collect_list", ")", "\n", "\n", "return", "qnode_chain", ",", "qnodes_label_edges", ",", "pnodes_edges", ",", "pnodes_label_edges", ",", "(", "numeric_edges_train", ",", "numeric_edges_valid", ",", "numeric_edges_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_new_edges": [[254, 320], ["tqdm.tqdm", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "train[].unique", "len", "mode.endswith", "augment_utils.generate_edges_single", "mode.endswith", "pandas.concat", "print", "traceback.print_exc", "augment_utils.generate_edges_overlapping", "mode.endswith", "pandas.concat", "pandas.concat", "augment_utils.generate_edges_hierarchy", "print", "len", "int", "np.log2"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_single", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_overlapping", "home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.generate_edges_hierarchy"], ["", "def", "create_new_edges", "(", "train", ",", "mode", ",", "num_bins", "=", "None", ",", "valid", "=", "None", ",", "test", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Create the new edges based on the partitioned data\n    \"\"\"", "\n", "qnodes_edges", ",", "qnodes_label_edges", "=", "[", "]", ",", "[", "]", "# (metadata) entity labels", "\n", "pnodes_edges", ",", "pnodes_label_edges", "=", "[", "]", ",", "[", "]", "# (metadata) property labels", "\n", "train_edges", ",", "train_edges_raw", "=", "[", "]", ",", "None", "# numeric edges (node2 as numbers)", "\n", "valid_edges", ",", "valid_edges_raw", "=", "[", "]", ",", "None", "\n", "test_edges", ",", "test_edges_raw", "=", "[", "]", ",", "None", "\n", "\n", "for", "property_", "in", "tqdm", "(", "train", "[", "'label'", "]", ".", "unique", "(", ")", ")", ":", "\n", "\n", "# Iterate through each numeric property", "\n", "        ", "sli_train", "=", "train", "[", "train", "[", "'label'", "]", "==", "property_", "]", "\n", "if", "len", "(", "sli_train", ")", "<", "100", ":", "# Filter out rare properties", "\n", "            ", "continue", "\n", "", "sli_valid", "=", "valid", "[", "valid", "[", "'label'", "]", "==", "property_", "]", "if", "valid", "is", "not", "None", "else", "None", "\n", "sli_test", "=", "test", "[", "test", "[", "'label'", "]", "==", "property_", "]", "if", "test", "is", "not", "None", "else", "None", "\n", "\n", "try", ":", "\n", "            ", "if", "mode", ".", "endswith", "(", "\"Single\"", ")", ":", "\n", "                ", "assert", "(", "num_bins", "is", "not", "None", ")", "\n", "a", ",", "b", ",", "c", ",", "d", ",", "e", "=", "generate_edges_single", "(", "sli_train", ",", "property_", ",", "num_bins", "=", "num_bins", ",", "\n", "unit", "=", "None", ",", "mode", "=", "mode", ",", "valid", "=", "sli_valid", ",", "test", "=", "sli_test", ",", "\n", "reverse", "=", "reverse", ")", "\n", "", "elif", "mode", ".", "endswith", "(", "\"Overlap\"", ")", ":", "\n", "                ", "assert", "(", "num_bins", "is", "not", "None", ")", "\n", "a", ",", "b", ",", "c", ",", "d", ",", "e", "=", "generate_edges_overlapping", "(", "sli_train", ",", "property_", ",", "num_bins", "=", "num_bins", ",", "\n", "unit", "=", "None", ",", "mode", "=", "mode", ",", "valid", "=", "sli_valid", ",", "test", "=", "sli_test", ",", "\n", "reverse", "=", "reverse", ")", "\n", "", "elif", "mode", ".", "endswith", "(", "\"Hierarchy\"", ")", ":", "\n", "                ", "assert", "(", "num_bins", "is", "not", "None", ")", "\n", "a", ",", "b", ",", "c", ",", "d", ",", "e", "=", "generate_edges_hierarchy", "(", "sli_train", ",", "property_", ",", "levels", "=", "int", "(", "np", ".", "log2", "(", "num_bins", ")", ")", ",", "\n", "unit", "=", "None", ",", "mode", "=", "mode", ",", "valid", "=", "sli_valid", ",", "test", "=", "sli_test", ",", "\n", "reverse", "=", "reverse", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"Unsupported data type!\"", ")", "\n", "continue", "\n", "\n", "", "qnodes_edges", "+=", "a", "\n", "qnodes_label_edges", "+=", "b", "\n", "pnodes_edges", "+=", "c", "\n", "pnodes_label_edges", "+=", "d", "\n", "\n", "train_edges", "+=", "e", "[", "0", "]", "\n", "train_edges_raw", "=", "sli_train", "if", "train_edges_raw", "is", "None", "else", "pd", ".", "concat", "(", "[", "train_edges_raw", ",", "sli_train", "]", ")", "\n", "if", "valid", "is", "not", "None", ":", "\n", "                ", "valid_edges", "+=", "e", "[", "1", "]", "\n", "valid_edges_raw", "=", "sli_valid", "if", "valid_edges_raw", "is", "None", "else", "pd", ".", "concat", "(", "[", "valid_edges_raw", ",", "sli_valid", "]", ")", "\n", "", "if", "test", "is", "not", "None", ":", "\n", "                ", "test_edges", "+=", "e", "[", "2", "]", "\n", "test_edges_raw", "=", "sli_test", "if", "test_edges_raw", "is", "None", "else", "pd", ".", "concat", "(", "[", "test_edges_raw", ",", "sli_test", "]", ")", "\n", "\n", "", "", "except", "TypeError", "as", "e", ":", "\n", "            ", "assert", "(", "sli_train", "is", "not", "None", ")", "\n", "print", "(", "f\"Error encountered at property {property_}. Size {len(sli_train)}. Error: {e}. Continue...\"", ")", "\n", "import", "traceback", "\n", "traceback", ".", "print_exc", "(", ")", "\n", "\n", "", "", "train_edges_processed", "=", "pd", ".", "DataFrame", "(", "train_edges", ")", "\n", "if", "valid", "is", "None", "or", "test", "is", "None", ":", "\n", "        ", "return", "(", "train_edges_processed", ",", "None", ",", "None", ")", ",", "(", "train_edges_raw", ",", "None", ",", "None", ")", ",", "qnodes_edges", "\n", "", "valid_edges_processed", "=", "pd", ".", "DataFrame", "(", "valid_edges", ")", "\n", "test_edges_processed", "=", "pd", ".", "DataFrame", "(", "test_edges", ")", "\n", "return", "(", "train_edges_processed", ",", "valid_edges_processed", ",", "test_edges_processed", ")", ",", "(", "train_edges_raw", ",", "valid_edges_raw", ",", "test_edges_raw", ")", ",", "qnodes_edges", "\n", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_main.try_to_make_dir": [[9, 14], ["os.mkdir"], "function", ["None"], ["def", "try_to_make_dir", "(", "folder", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "mkdir", "(", "folder", ")", "\n", "", "except", "FileExistsError", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_main.augment_lp": [[21, 48], ["mode.endswith", "int", "print", "augment_utils.create_new_edges", "augment_main.try_to_make_dir", "pd.concat().to_csv", "shutil.copy", "shutil.copy", "augment_main.try_to_make_dir", "pd.concat().to_csv", "shutil.copy", "shutil.copy", "np.log2", "pd.concat", "pd.concat", "pd.DataFrame"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_new_edges", "home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir", "home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir"], ["", "", "def", "augment_lp", "(", "entities", ",", "df", ",", "dataset", ",", "mode", ",", "bins", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "suffix", "=", "int", "(", "np", ".", "log2", "(", "bins", ")", ")", "if", "mode", ".", "endswith", "(", "\"Hierarchy\"", ")", "else", "bins", "\n", "\n", "if", "mode", "in", "CHAINABLE_MODE", ":", "\n", "        ", "print", "(", "f'Running mode {mode}'", ")", "\n", "\n", "(", "numeric_edges_processed", ",", "_", ",", "_", ")", ",", "_", ",", "qnode_edges", "=", "create_new_edges", "(", "df", ",", "mode", ",", "bins", ",", "reverse", "=", "reverse", ")", "\n", "\n", "# Write the augmented version (without chain)", "\n", "target", "=", "f'data/{dataset}_{mapping_no_chain[mode]}_{suffix}'", "\n", "if", "reverse", ":", "\n", "            ", "target", "+=", "\"_reverse\"", "\n", "", "try_to_make_dir", "(", "target", ")", "\n", "pd", ".", "concat", "(", "[", "entities", ",", "numeric_edges_processed", "]", ")", ".", "to_csv", "(", "f'{target}/train.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "shutil", ".", "copy", "(", "f'data/{dataset}/valid.txt'", ",", "f'{target}/valid.txt'", ")", "\n", "shutil", ".", "copy", "(", "f'data/{dataset}/test.txt'", ",", "f'{target}/test.txt'", ")", "\n", "\n", "# Write the augmented version (with chain)", "\n", "target", "=", "f'data/{dataset}_{mapping_chain[mode]}_{suffix}'", "\n", "if", "reverse", ":", "\n", "            ", "target", "+=", "\"_reverse\"", "\n", "", "try_to_make_dir", "(", "target", ")", "\n", "pd", ".", "concat", "(", "[", "entities", ",", "numeric_edges_processed", ",", "pd", ".", "DataFrame", "(", "qnode_edges", ")", "]", ")", ".", "to_csv", "(", "f'{target}/train.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "shutil", ".", "copy", "(", "f'data/{dataset}/valid.txt'", ",", "f'{target}/valid.txt'", ")", "\n", "shutil", ".", "copy", "(", "f'data/{dataset}/test.txt'", ",", "f'{target}/test.txt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.augment_main.augment_np": [[50, 107], ["mode.endswith", "int", "print", "augment_utils.create_new_edges", "collections.defaultdict", "collections.defaultdict", "train_edges_raw.iterrows", "train_edges_processed.iterrows", "collections.defaultdict.items", "train_edges_raw[].unique", "augment_main.augment_np.generate_target"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.augment_utils.create_new_edges"], ["", "", "def", "augment_np", "(", "entities", ",", "train", ",", "valid", ",", "test", ",", "dataset", ",", "mode", ",", "bins", "=", "None", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "suffix", "=", "int", "(", "np", ".", "log2", "(", "bins", ")", ")", "if", "mode", ".", "endswith", "(", "\"Hierarchy\"", ")", "else", "bins", "\n", "\n", "if", "mode", "in", "CHAINABLE_MODE", ":", "\n", "\n", "        ", "print", "(", "f'Running mode {mode}'", ")", "\n", "\n", "(", "train_edges_processed", ",", "valid_edges_processed", ",", "test_edges_processed", ")", ",", "(", "train_edges_raw", ",", "valid_edges_raw", ",", "test_edges_raw", ")", ",", "qnode_edges", "=", "create_new_edges", "(", "train", ",", "mode", ",", "bins", ",", "valid", "=", "valid", ",", "test", "=", "test", ",", "reverse", "=", "reverse", ")", "\n", "\n", "medians_dict", "=", "{", "}", "\n", "collections", "=", "defaultdict", "(", "list", ")", "\n", "collections_raw", "=", "defaultdict", "(", "list", ")", "\n", "\n", "for", "i", ",", "row", "in", "train_edges_raw", ".", "iterrows", "(", ")", ":", "\n", "            ", "collections_raw", "[", "row", "[", "'node1'", "]", "+", "'  '", "+", "row", "[", "'label'", "]", "]", ".", "append", "(", "row", "[", "'node2'", "]", ")", "\n", "\n", "", "for", "i", ",", "row", "in", "train_edges_processed", ".", "iterrows", "(", ")", ":", "\n", "            ", "key", "=", "row", "[", "'node1'", "]", "+", "'  '", "+", "row", "[", "'label'", "]", ".", "split", "(", "'-'", ")", "[", "1", "]", ".", "rsplit", "(", "'_'", ",", "1", ")", "[", "0", "]", "\n", "for", "item", "in", "collections_raw", "[", "key", "]", ":", "\n", "                ", "collections", "[", "row", "[", "'node2'", "]", "]", ".", "append", "(", "item", ")", "\n", "\n", "", "", "for", "k", ",", "v", "in", "collections", ".", "items", "(", ")", ":", "\n", "            ", "medians_dict", "[", "k", "]", "=", "np", ".", "median", "(", "v", ")", "\n", "\n", "# Finally, add the median of each property as a baseline", "\n", "", "for", "property_", "in", "train_edges_raw", "[", "'label'", "]", ".", "unique", "(", ")", ":", "\n", "            ", "medians_dict", "[", "property_", "]", "=", "train_edges_raw", "[", "train_edges_raw", "[", "'label'", "]", "==", "property_", "]", "[", "'node2'", "]", ".", "median", "(", ")", "\n", "\n", "# Write the original version", "\n", "", "def", "generate_target", "(", "target", ",", "with_chain", "=", "False", ")", ":", "\n", "            ", "try_to_make_dir", "(", "target", ")", "\n", "if", "not", "with_chain", ":", "\n", "                ", "pd", ".", "concat", "(", "[", "entities", ",", "train_edges_processed", "]", ")", ".", "to_csv", "(", "f'{target}/train.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "pd", ".", "concat", "(", "[", "entities", ",", "train_edges_processed", ",", "pd", ".", "DataFrame", "(", "qnode_edges", ")", "]", ")", ".", "to_csv", "(", "f'{target}/train.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "\n", "", "valid_edges_processed", ".", "to_csv", "(", "f'{target}/valid.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "test_edges_processed", ".", "to_csv", "(", "f'{target}/test.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "valid_edges_raw", ".", "to_csv", "(", "f'{target}/valid_raw.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "test_edges_raw", ".", "to_csv", "(", "f'{target}/test_raw.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "False", ",", "index", "=", "False", ")", "\n", "with", "open", "(", "f'{target}/medians.dict'", ",", "'w+'", ")", "as", "fd", ":", "\n", "                ", "json", ".", "dump", "(", "medians_dict", ",", "fd", ",", "indent", "=", "2", ")", "\n", "\n", "", "", "target", "=", "f'numeric/{dataset}_{mapping_no_chain[mode]}_{suffix}'", "\n", "if", "reverse", ":", "\n", "            ", "target", "+=", "\"_reverse\"", "\n", "", "generate_target", "(", "target", ")", "\n", "\n", "target", "=", "f'numeric/{dataset}_{mapping_chain[mode]}_{suffix}'", "\n", "if", "reverse", ":", "\n", "            ", "target", "+=", "\"_reverse\"", "\n", "", "generate_target", "(", "target", ",", "with_chain", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_qnode": [[5, 9], ["None"], "function", ["None"], ["def", "gen_qnode", "(", "property_", ",", "start", ",", "end", ",", "unit", "=", "None", ")", ":", "\n", "    ", "if", "not", "unit", ":", "\n", "        ", "return", "f'Interval-{property_}({start}_{end})'", "\n", "", "return", "f'Interval-{property_}|{unit}({start}_{end})'", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_qlabel": [[11, 15], ["None"], "function", ["None"], ["", "def", "gen_qlabel", "(", "property_", ",", "start", ",", "end", ",", "unit", "=", "None", ")", ":", "\n", "    ", "if", "not", "unit", ":", "\n", "        ", "return", "f'{property_}({start}_{end})'", "\n", "", "return", "f'{property_}|{unit}({start}_{end})'", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_pnode": [[17, 21], ["None"], "function", ["None"], ["", "def", "gen_pnode", "(", "pnode", ",", "unit", "=", "None", ")", ":", "\n", "    ", "if", "not", "unit", ":", "\n", "        ", "return", "f'Interval-{pnode}'", "\n", "", "return", "f'Interval-{pnode}|{unit}'", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.utils.gen_plabel": [[23, 27], ["None"], "function", ["None"], ["", "def", "gen_plabel", "(", "pnode", ",", "unit", "=", "None", ")", ":", "\n", "    ", "if", "not", "unit", ":", "\n", "        ", "return", "pnode", "+", "' (Interval)'", "\n", "", "return", "pnode", "+", "' '", "+", "unit", "+", "' (Interval)'", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.utils.parse_number": [[29, 44], ["float", "int", "s.split", "s.split", "print", "int", "print", "int", "s.split", "s.split"], "function", ["None"], ["", "def", "parse_number", "(", "s", ")", ":", "\n", "    ", "\"\"\"\n    Parsing the literals in Wikidata\n    \"\"\"", "\n", "if", "s", "[", "0", "]", "!=", "'-'", "and", "'-'", "in", "s", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "int", "(", "s", ".", "split", "(", "'-'", ")", "[", "0", "]", ")", "\n", "", "except", ":", "\n", "            ", "try", ":", "\n", "                ", "print", "(", "s", ")", "\n", "return", "int", "(", "s", ".", "split", "(", "'-'", ")", "[", "0", "]", "[", ":", "-", "1", "]", ")", "*", "10", "\n", "", "except", ":", "\n", "                ", "print", "(", "s", ")", "\n", "return", "int", "(", "s", ".", "split", "(", "'-'", ")", "[", "0", "]", "[", ":", "-", "2", "]", ")", "*", "100", "\n", "", "", "", "return", "float", "(", "s", ".", "split", "(", "'^^'", ")", "[", "0", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.augment.loader.get_data_lp": [[8, 24], ["pandas.read_csv", "df.reset_index.reset_index", "pandas.read_csv", "pandas.read_csv", "df[].notnull"], "function", ["None"], ["def", "get_data_lp", "(", "dataset", ")", ":", "\n", "    ", "\"\"\"\n    Get the entity file and literal file for Link Prediction\n    \"\"\"", "\n", "if", "dataset", "==", "\"WikidataDWD\"", ":", "\n", "        ", "entities", "=", "pd", ".", "read_csv", "(", "f'data/{dataset}/train.txt'", ",", "sep", "=", "'\\t'", ",", "usecols", "=", "[", "0", ",", "1", ",", "2", "]", ")", "\n", "", "else", ":", "\n", "        ", "entities", "=", "pd", ".", "read_csv", "(", "f'data/{dataset}/train.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ",", "usecols", "=", "[", "0", ",", "1", ",", "2", "]", ")", "\n", "", "entities", ".", "columns", "=", "[", "'node1'", ",", "'label'", ",", "'node2'", "]", "\n", "\n", "df", "=", "pd", ".", "read_csv", "(", "f'data/{dataset}/numerical_literals.txt'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ",", "usecols", "=", "[", "0", ",", "1", ",", "2", "]", ")", "\n", "df", ".", "columns", "=", "[", "'node1'", ",", "'label'", ",", "'node2'", "]", "\n", "df", "=", "df", "[", "df", "[", "'node2'", "]", ".", "notnull", "(", ")", "]", "\n", "df", "=", "df", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "return", "entities", ",", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_entities": [[26, 33], ["dataset.lower", "df[].apply", "df[].apply", "df[].apply", "x.split", "x.split", "x.split"], "function", ["None"], ["", "def", "clean_entities", "(", "df", ",", "dataset", ")", ":", "\n", "    ", "if", "dataset", ".", "lower", "(", ")", "==", "\"yago15k\"", ":", "\n", "        ", "df", "[", "0", "]", "=", "df", "[", "0", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"resource\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "df", "[", "1", "]", "=", "df", "[", "1", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"resource\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "df", "[", "2", "]", "=", "df", "[", "2", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"resource\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "", "df", ".", "columns", "=", "[", "'node1'", ",", "'label'", ",", "'node2'", "]", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_numeric": [[35, 45], ["df.reset_index.reset_index", "dataset.lower", "df[].apply", "df[].apply", "dataset.lower", "df[].apply", "df[].notnull", "x.split", "x.split", "x.split"], "function", ["None"], ["", "def", "clean_numeric", "(", "df", ",", "dataset", ")", ":", "\n", "    ", "if", "dataset", ".", "lower", "(", ")", "==", "\"yago15k\"", ":", "\n", "        ", "df", "[", "0", "]", "=", "df", "[", "0", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"resource\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "df", "[", "1", "]", "=", "df", "[", "1", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"resource\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "", "elif", "dataset", ".", "lower", "(", ")", "==", "\"fb15k237\"", ":", "\n", "        ", "df", "[", "1", "]", "=", "df", "[", "1", "]", ".", "apply", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"ns\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "", "df", ".", "columns", "=", "[", "'node1'", ",", "'label'", ",", "'node2'", "]", "\n", "df", "=", "df", "[", "df", "[", "'node2'", "]", ".", "notnull", "(", ")", "]", "\n", "df", "=", "df", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.augment.loader.get_data_np": [[47, 54], ["loader.clean_entities", "loader.clean_numeric", "loader.clean_numeric", "loader.clean_numeric", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_entities", "home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_numeric", "home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_numeric", "home.repos.pwc.inspect_result.otamio_kga.augment.loader.clean_numeric"], ["", "def", "get_data_np", "(", "dataset", ")", ":", "\n", "    ", "\"\"\" Get the entity file and literal file for \"\"\"", "\n", "entities", "=", "clean_entities", "(", "pd", ".", "read_csv", "(", "f'data/{dataset}/train_kge'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ")", ",", "dataset", ")", "\n", "train", "=", "clean_numeric", "(", "pd", ".", "read_csv", "(", "f'data/{dataset}/train_100'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ")", ",", "dataset", ")", "\n", "valid", "=", "clean_numeric", "(", "pd", ".", "read_csv", "(", "f'data/{dataset}/dev'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ")", ",", "dataset", ")", "\n", "test", "=", "clean_numeric", "(", "pd", ".", "read_csv", "(", "f'data/{dataset}/test'", ",", "sep", "=", "'\\t'", ",", "header", "=", "None", ")", ",", "dataset", ")", "\n", "return", "entities", ",", "train", ",", "valid", ",", "test", "\n", "", ""]], "home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir": [[44, 49], ["os.mkdir"], "function", ["None"], ["self", ".", "entity_idxs", "=", "{", "d", ".", "entities", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "d", ".", "entities", ")", ")", "}", "\n", "self", ".", "relation_idxs", "=", "{", "d", ".", "relations", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "d", ".", "relations", ")", ")", "}", "\n", "self", ".", "kwargs", "=", "{", "\"input_dropout\"", ":", "input_dropout", ",", "\"hidden_dropout1\"", ":", "hidden_dropout1", ",", "\n", "\"hidden_dropout2\"", ":", "hidden_dropout2", ",", "\"feature_map_dropout\"", ":", "feature_map_dropout", ",", "\n", "\"hidden_size\"", ":", "hidden_size", ",", "\"use_bias\"", ":", "use_bias", ",", "\"embedding_shape1\"", ":", "embedding_shape1", ",", "\n", "\"dataset\"", ":", "dataset", ",", "\"ent2idx\"", ":", "self", ".", "entity_idxs", ",", "\"rel2idx\"", ":", "self", ".", "relation_idxs", ",", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.pbg.main.get_torchbiggraph_config": [[80, 123], ["main.try_to_make_dir", "main.try_to_make_dir", "main.try_to_make_dir", "dict"], "function", ["home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir", "home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir", "home.repos.pwc.inspect_result.otamio_kga.pbg.main.try_to_make_dir"], ["\n", "", "def", "get_er_vocab", "(", "self", ",", "data", ")", ":", "\n", "        ", "er_vocab", "=", "defaultdict", "(", "list", ")", "\n", "for", "triple", "in", "data", ":", "\n", "            ", "er_vocab", "[", "(", "triple", "[", "0", "]", ",", "triple", "[", "1", "]", ")", "]", ".", "append", "(", "triple", "[", "2", "]", ")", "\n", "", "return", "er_vocab", "\n", "\n", "", "def", "get_batch", "(", "self", ",", "er_vocab", ",", "er_vocab_pairs", ",", "idx", ")", ":", "\n", "        ", "batch", "=", "er_vocab_pairs", "[", "idx", ":", "idx", "+", "self", ".", "batch_size", "]", "\n", "targets", "=", "np", ".", "zeros", "(", "(", "len", "(", "batch", ")", ",", "len", "(", "d", ".", "entities", ")", ")", ")", "\n", "for", "idx", ",", "pair", "in", "enumerate", "(", "batch", ")", ":", "\n", "            ", "targets", "[", "idx", ",", "er_vocab", "[", "pair", "]", "]", "=", "1.", "\n", "", "targets", "=", "torch", ".", "FloatTensor", "(", "targets", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "targets", "=", "targets", ".", "cuda", "(", ")", "\n", "", "return", "np", ".", "array", "(", "batch", ")", ",", "targets", "\n", "\n", "", "def", "evaluate", "(", "self", ",", "model", ",", "data", ")", ":", "\n", "        ", "hits", "=", "[", "]", "\n", "ranks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "hits", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "test_data_idxs", "=", "self", ".", "get_data_idxs", "(", "data", ")", "\n", "er_vocab", "=", "self", ".", "get_er_vocab", "(", "self", ".", "get_data_idxs", "(", "d", ".", "data", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"Number of data points: %d\"", "%", "len", "(", "test_data_idxs", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "test_data_idxs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "            ", "data_batch", ",", "_", "=", "self", ".", "get_batch", "(", "er_vocab", ",", "test_data_idxs", ",", "i", ")", "\n", "e1_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "0", "]", ")", "\n", "r_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "1", "]", ")", "\n", "e2_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "2", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "e1_idx", "=", "e1_idx", ".", "cuda", "(", ")", "\n", "r_idx", "=", "r_idx", ".", "cuda", "(", ")", "\n", "e2_idx", "=", "e2_idx", ".", "cuda", "(", ")", "\n", "", "predictions", "=", "model", ".", "forward", "(", "e1_idx", ",", "r_idx", ")", "\n", "\n", "for", "j", "in", "range", "(", "data_batch", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "filt", "=", "er_vocab", "[", "(", "data_batch", "[", "j", "]", "[", "0", "]", ",", "data_batch", "[", "j", "]", "[", "1", "]", ")", "]", "\n", "target_value", "=", "predictions", "[", "j", ",", "e2_idx", "[", "j", "]", "]", ".", "item", "(", ")", "\n", "predictions", "[", "j", ",", "filt", "]", "=", "0.0", "\n", "predictions", "[", "j", ",", "e2_idx", "[", "j", "]", "]", "=", "target_value", "\n"]], "home.repos.pwc.inspect_result.otamio_kga.pbg.main.main": [[132, 193], ["torchbiggraph.config.parse_config", "torchbiggraph.util.set_logging_verbosity", "torchbiggraph.util.SubprocessInitializer", "torchbiggraph.util.SubprocessInitializer.register", "logging.basicConfig", "logging.info", "logging.info", "logging.info", "torchbiggraph.converters.importers.convert_input_data", "torchbiggraph.util.setup_logging", "attr.evolve", "attr.evolve", "attr.evolve", "main.get_torchbiggraph_config", "attr.evolve", "attr.evolve", "attr.evolve", "attr.evolve", "torch.cuda.is_available", "pathlib.Path", "os.mkdir", "torchbiggraph.converters.importers.TSVEdgelistReader", "attr.evolve", "torchbiggraph.train.train", "attr.evolve", "exit", "datetime.datetime.now().strftime", "str", "torchbiggraph.eval.do_eval", "torchbiggraph.numeric_eval.NumericMetricsReporter", "torchbiggraph.numeric_eval.NumericMetricsReporter.update_index", "torchbiggraph.numeric_eval.NumericMetricsReporter.report", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.otamio_kga.pbg.main.get_torchbiggraph_config"], ["for", "hits_level", "in", "range", "(", "10", ")", ":", "\n", "                    ", "if", "rank", "<=", "hits_level", ":", "\n", "                        ", "hits", "[", "hits_level", "]", ".", "append", "(", "1.0", ")", "\n", "", "else", ":", "\n", "                        ", "hits", "[", "hits_level", "]", ".", "append", "(", "0.0", ")", "\n", "\n", "", "", "", "", "logging", ".", "info", "(", "'Hits @10: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "9", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Hits @3: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "2", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Hits @1: {0}'", ".", "format", "(", "np", ".", "mean", "(", "hits", "[", "0", "]", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Mean rank: {0}'", ".", "format", "(", "np", ".", "mean", "(", "ranks", ")", ")", ")", "\n", "logging", ".", "info", "(", "'Mean reciprocal rank: {0}'", ".", "format", "(", "np", ".", "mean", "(", "1.", "/", "np", ".", "array", "(", "ranks", ")", ")", ")", ")", "\n", "return", "np", ".", "mean", "(", "1.", "/", "np", ".", "array", "(", "ranks", ")", ")", "\n", "\n", "", "def", "train_and_eval", "(", "self", ",", "model", "=", "\"tucker\"", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f\"Training the {model} model...\"", ")", "\n", "\n", "train_data_idxs", "=", "self", ".", "get_data_idxs", "(", "d", ".", "train_data", ")", "\n", "logging", ".", "info", "(", "\"Number of training data points: %d\"", "%", "len", "(", "train_data_idxs", ")", ")", "\n", "\n", "model", "=", "model_mapping", "[", "model", "]", "(", "d", ",", "self", ".", "ent_vec_dim", ",", "self", ".", "rel_vec_dim", ",", "**", "self", ".", "kwargs", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "model", ".", "cuda", "(", ")", "\n", "model", ".", "to_cuda", "(", ")", "\n", "", "model", ".", "init", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "learning_rate", ")", "\n", "if", "self", ".", "decay_rate", ":", "\n", "            ", "scheduler", "=", "ExponentialLR", "(", "opt", ",", "self", ".", "decay_rate", ")", "\n", "\n", "", "er_vocab", "=", "self", ".", "get_er_vocab", "(", "train_data_idxs", ")", "\n", "er_vocab_pairs", "=", "list", "(", "er_vocab", ".", "keys", "(", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"Starting training...\"", ")", "\n", "for", "it", "in", "range", "(", "1", ",", "self", ".", "num_iterations", "+", "1", ")", ":", "\n", "            ", "start_train", "=", "time", ".", "time", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "er_vocab_pairs", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "len", "(", "er_vocab_pairs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "                ", "data_batch", ",", "targets", "=", "self", ".", "get_batch", "(", "er_vocab", ",", "er_vocab_pairs", ",", "j", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "e1_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "0", "]", ")", "\n", "r_idx", "=", "torch", ".", "tensor", "(", "data_batch", "[", ":", ",", "1", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                    ", "e1_idx", "=", "e1_idx", ".", "cuda", "(", ")", "\n", "r_idx", "=", "r_idx", ".", "cuda", "(", ")", "\n", "", "predictions", "=", "model", ".", "forward", "(", "e1_idx", ",", "r_idx", ")", "\n", "if", "self", ".", "label_smoothing", ":", "\n", "                    ", "targets", "=", "(", "(", "1.0", "-", "self", ".", "label_smoothing", ")", "*", "targets", ")", "+", "(", "1.0", "/", "targets", ".", "size", "(", "1", ")", ")", "\n", "", "loss", "=", "model", ".", "loss", "(", "predictions", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "self", ".", "decay_rate", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "", "logging", ".", "info", "(", "f\"Step at {it}\"", ")", "\n", "logging", ".", "info", "(", "f\"Training Time elapsed: {time.time() - start_train}\"", ")", "\n", "logging", ".", "info", "(", "f\"Training Loss: {np.mean(losses)}\"", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "it", ">=", "args", ".", "warm_up", "and", "not", "it", "%", "eval_step", ":", "\n", "\n"]]}