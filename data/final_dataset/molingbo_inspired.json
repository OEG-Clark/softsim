{"home.repos.pwc.inspect_result.molingbo_inspired.data_process.translation.isDigit": [[12, 21], ["int", "isinstance"], "function", ["None"], ["def", "isDigit", "(", "x", ")", ":", "\n", "\t", "try", ":", "\n", "\t\t", "if", "'-'", "in", "x", ":", "# '1997-06-12'", "\n", "\t\t\t", "return", "True", "\n", "", "else", ":", "\n", "\t\t\t", "x", "=", "int", "(", "x", ")", "# '1997'", "\n", "return", "isinstance", "(", "x", ",", "int", ")", "\n", "", "", "except", "ValueError", ":", "\n", "\t\t", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.molingbo_inspired.data_process.translation.get_sketch_triple": [[22, 142], ["ori_input.replace.replace().replace", "ori_input.replace.split", "range", "re.findall", "len", "input[].startswith", "concat_result.append", "enumerate", "enumerate", "ori_input.replace.replace", "ori_input.replace.replace", "len", "[].split", "sketch.append", "[].split.append", "predicates.append", "predicates.append", "[].split.append", "[].split.append", "sketch.append", "compile_sketch[].append", "zip", "len", "len", "compile_sketch.append", "input[].startswith", "input[].startswith", "temp[].replace", "[].split", "[].split", "temp1[].replace", "temp2[].replace", "compile_sketch.append", "enumerate", "compile_sketch.append", "compile_sketch[].append", "len", "result[].append", "str", "[].startswith", "compile_sketch[].append"], "function", ["None"], ["", "", "def", "get_sketch_triple", "(", "ori_input", ",", "template_corpus", ")", ":", "\n", "\n", "\t", "ori_input", "=", "ori_input", ".", "replace", "(", "'<sparql-header-1> '", ",", "''", ")", ".", "replace", "(", "'<sparql-header-2> '", ",", "''", ")", "\n", "\n", "if", "'filter'", "in", "ori_input", ":", "\n", "\n", "\t\t", "filter_str", "=", "re", ".", "findall", "(", "'(filter.*)\\?x'", ",", "ori_input", ")", "\n", "if", "filter_str", "!=", "[", "]", ":", "\n", "\n", "\t\t\t", "ori_input", "=", "ori_input", ".", "replace", "(", "filter_str", "[", "0", "]", ",", "''", ")", "\n", "\n", "", "", "input", "=", "ori_input", ".", "split", "(", "' . '", ")", "\n", "input", "[", "-", "1", "]", "=", "input", "[", "-", "1", "]", "[", ":", "-", "2", "]", "\n", "\n", "bridge_mark", "=", "False", "\n", "c_count", "=", "0", "\n", "for", "item", "in", "input", ":", "\n", "\t\t", "if", "'?c'", "in", "item", ":", "\n", "\t\t\t", "c_count", "+=", "1", "\n", "", "", "if", "c_count", ">=", "2", "and", "'?c . ?c'", "not", "in", "ori_input", ":", "\n", "\t\t", "bridge_mark", "=", "True", "\n", "\n", "", "result", "=", "{", "}", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "input", ")", ")", ":", "\n", "\t\t", "if", "input", "[", "i", "]", ".", "startswith", "(", "'filter'", ")", ":", "\n", "\t\t\t", "break", "\n", "", "if", "i", "==", "0", ":", "\n", "\t\t\t", "count", "+=", "1", "\n", "result", "[", "count", "]", "=", "[", "input", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "\n", "\t\t\t", "if", "input", "[", "i", "]", "[", "0", ":", "2", "]", "==", "input", "[", "i", "-", "1", "]", "[", "-", "2", ":", "]", "and", "input", "[", "i", "]", "[", "0", ":", "2", "]", "!=", "'?x'", "and", "'time.event'", "not", "in", "input", "[", "i", "]", ":", "\n", "\t\t\t\t", "if", "input", "[", "i", "]", ".", "startswith", "(", "'?'", ")", ":", "\n", "\t\t\t\t\t", "if", "len", "(", "result", "[", "count", "]", ")", "==", "1", ":", "\n", "\t\t\t\t\t\t", "result", "[", "count", "]", ".", "append", "(", "input", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "count", "+=", "1", "\n", "result", "[", "count", "]", "=", "[", "input", "[", "i", "]", "]", "\n", "\n", "", "", "", "else", ":", "\n", "\t\t\t\t", "if", "input", "[", "i", "]", ".", "startswith", "(", "'?'", ")", ":", "\n", "\t\t\t\t\t", "count", "+=", "1", "\n", "result", "[", "count", "]", "=", "[", "input", "[", "i", "]", "]", "\n", "\n", "", "", "", "", "concat_result", "=", "[", "]", "\n", "for", "key", "in", "result", ":", "\n", "\t\t", "concat_result", ".", "append", "(", "' '", ".", "join", "(", "result", "[", "key", "]", ")", ")", "\n", "\n", "", "sketch", "=", "[", "]", "\n", "for", "item", "in", "result", ":", "\n", "\t\t", "if", "len", "(", "result", "[", "item", "]", ")", "==", "1", ":", "\n", "\n", "\t\t\t", "temp", "=", "result", "[", "item", "]", "[", "0", "]", ".", "split", "(", ")", "\n", "\n", "temp", "[", "1", "]", "=", "[", "temp", "[", "1", "]", ".", "replace", "(", "'ns:'", ",", "''", ")", "]", "\n", "\n", "sketch", ".", "append", "(", "temp", ")", "\n", "", "else", ":", "\n", "\t\t\t", "temp", "=", "[", "]", "\n", "temp1", "=", "result", "[", "item", "]", "[", "0", "]", ".", "split", "(", ")", "[", "0", ":", "-", "1", "]", "\n", "temp2", "=", "result", "[", "item", "]", "[", "1", "]", ".", "split", "(", ")", "[", "1", ":", "]", "\n", "temp", ".", "append", "(", "temp1", "[", "0", "]", ")", "\n", "predicates", "=", "[", "]", "\n", "predicates", ".", "append", "(", "temp1", "[", "1", "]", ".", "replace", "(", "'ns:'", ",", "''", ")", ")", "\n", "predicates", ".", "append", "(", "temp2", "[", "0", "]", ".", "replace", "(", "'ns:'", ",", "''", ")", ")", "\n", "temp", ".", "append", "(", "predicates", ")", "\n", "temp", ".", "append", "(", "temp2", "[", "1", "]", ")", "\n", "sketch", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "num_x", "=", "0", "\n", "for", "item", "in", "concat_result", ":", "\n", "\t\t", "if", "'?x'", "in", "item", ":", "\n", "\t\t\t", "num_x", "+=", "1", "\n", "\n", "\n", "", "", "compile_sketch", "=", "[", "]", "\n", "# One scenario (constraint triple with ?x)", "\n", "if", "num_x", ">=", "3", "or", "(", "num_x", "==", "2", "and", "bridge_mark", ")", ":", "\n", "\n", "\t\t", "notable_type_mark", "=", "False", "# recognize common.topic.notable_types occured at the beginning", "\n", "for", "i", ",", "ske", "in", "enumerate", "(", "sketch", ")", ":", "\n", "\t\t\t", "if", "i", "==", "0", "and", "ske", "[", "1", "]", "[", "0", "]", "==", "'common.topic.notable_types'", ":", "\n", "\t\t\t\t", "notable_type_mark", "=", "True", "\n", "continue", "\n", "\n", "", "if", "str", "(", "ske", "[", "1", "]", ")", "not", "in", "template_corpus", "and", "not", "ske", "[", "1", "]", "[", "0", "]", ".", "startswith", "(", "'Of these'", ")", "or", "ske", "[", "1", "]", "[", "0", "]", "==", "'common.topic.notable_types'", ":", "\n", "\t\t\t\t", "try", ":", "\n", "\t\t\t\t\t", "compile_sketch", "[", "-", "1", "]", ".", "append", "(", "ske", ")", "\n", "", "except", "IndexError", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "compile_sketch", ".", "append", "(", "[", "ske", "]", ")", "\n", "\n", "", "", "if", "notable_type_mark", ":", "\n", "\t\t\t", "compile_sketch", "[", "0", "]", ".", "append", "(", "sketch", "[", "0", "]", ")", "\n", "\n", "# The other scenario (constraint triple without ?x)", "\n", "", "", "else", ":", "\n", "\n", "\t\t", "for", "i", ",", "(", "concat", ",", "ske", ")", "in", "enumerate", "(", "zip", "(", "concat_result", ",", "sketch", ")", ")", ":", "\n", "\t\t\t", "if", "'?x'", "not", "in", "concat", "and", "'?c'", "not", "in", "concat", ":", "\n", "\t\t\t\t", "head_var", "=", "concat", "[", "0", ":", "2", "]", "+", "' '", "\n", "\n", "for", "j", ",", "concat_", "in", "enumerate", "(", "concat_result", ")", ":", "\n", "\n", "\t\t\t\t\t", "if", "head_var", "in", "concat_", ":", "\n", "\t\t\t\t\t\t", "try", ":", "\n", "\t\t\t\t\t\t\t", "compile_sketch", "[", "j", "]", ".", "append", "(", "ske", ")", "\n", "break", "\n", "", "except", "IndexError", ":", "\n", "\t\t\t\t\t\t\t", "continue", "\n", "\n", "", "", "", "", "else", ":", "\n", "\n", "\t\t\t\t", "compile_sketch", ".", "append", "(", "[", "ske", "]", ")", "\n", "", "", "if", "len", "(", "sketch", ")", ">", "len", "(", "concat_result", ")", ":", "\n", "\t\t\t", "compile_sketch", ".", "append", "(", "[", "sketch", "[", "-", "1", "]", "]", ")", "\n", "\n", "", "", "return", "compile_sketch", "\n", "\n"]], "home.repos.pwc.inspect_result.molingbo_inspired.data_process.translation.translate": [[143, 342], ["lf.replace().replace", "translation.get_sketch_triple", "enumerate", "enumerate", "re.findall", "temp.replace().replace.replace", "translation.isDigit", "translated_questions.append", "translated_questions.append", "item.replace", "new_item.replace.replace", "processed_trans_ques.append", "lf.replace", "re.findall", "input.replace.replace", "re.findall", "re.findall", "re.findall", "list", "len", "mini_template.replace.replace", "temp.replace().replace.replace", "[].startswith", "[].startswith", "temp.replace().replace.replace", "re.findall", "item.replace().replace().replace", "corpus.values", "list().index", "len", "item.replace", "new_item.replace.replace", "date_str[].split", "str", "str", "temp.replace().replace.replace", "len", "temp.replace().replace.replace().replace", "item.replace().replace", "new_item.replace.replace", "date_str[].split", "list", "temp.replace().replace.replace", "temp.replace().replace.replace", "len", "corpus.keys", "temp.replace().replace.replace", "temp.replace().replace.replace", "temp.replace().replace.replace", "temp.replace().replace.replace", "len", "item.replace", "str", "len", "temp.replace().replace.replace().replace", "temp.replace().replace.replace"], "function", ["home.repos.pwc.inspect_result.molingbo_inspired.data_process.translation.get_sketch_triple", "home.repos.pwc.inspect_result.molingbo_inspired.data_process.translation.isDigit"], ["", "def", "translate", "(", "lf", ")", ":", "\n", "\n", "\t", "input", "=", "lf", ".", "replace", "(", "'<sparql-header-1> '", ",", "''", ")", ".", "replace", "(", "'<sparql-header-2> '", ",", "''", ")", "\n", "\n", "r_type", "=", "''", "# reasoning type", "\n", "if", "'?c'", "in", "input", "and", "'?c . ?c'", "not", "in", "input", ":", "\n", "\t\t", "r_type", "=", "'bridging'", "\n", "", "else", ":", "\n", "\t\t", "r_type", "=", "'intersection'", "\n", "\n", "", "order_by", "=", "''", "# order by, order by desc", "\n", "date_time", "=", "False", "# order by + datetime, order by desc + datetime", "\n", "num", "=", "False", "# order by ( ?num ), order by desc ( ?num ) ", "\n", "integer_num", "=", "False", "# order by xsd:integer ( ?num ), order by desc ( xsd:integer ( ?num )", "\n", "if", "'order by desc'", "in", "input", ":", "\n", "\t\t", "order_by", "=", "'decrease'", "\n", "if", "'order by desc ( xsd:datetime'", "in", "input", ":", "\n", "\t\t\t", "date_time", "=", "True", "\n", "", "if", "'order by desc ( xsd:integer ( ?num )'", "in", "input", ":", "\n", "\t\t\t", "integer_num", "=", "True", "\n", "", "if", "'order by desc ( ?num )'", "in", "input", ":", "\n", "\t\t\t", "num", "=", "True", "\n", "", "", "elif", "'order by'", "in", "input", ":", "\n", "\t\t", "order_by", "=", "'increase'", "\n", "if", "'order by xsd:datetime'", "in", "input", ":", "\n", "\t\t\t", "date_time", "=", "True", "\n", "", "if", "'order by xsd:integer ( ?num )'", "in", "input", ":", "\n", "\t\t\t", "integer_num", "=", "True", "\n", "", "if", "'order by ?num'", "in", "input", ":", "\n", "\t\t\t", "num", "=", "True", "\n", "", "", "else", ":", "\n", "\t\t", "order_by", "=", "''", "\n", "\n", "", "before_after", "=", "''", "\n", "if", "'filter ( ?num >'", "in", "input", ":", "\n", "\t\t", "before_after", "=", "' after '", "\n", "", "elif", "'filter ( ?num <'", "in", "input", ":", "\n", "\t\t", "before_after", "=", "' before '", "\n", "", "else", ":", "\n", "\t\t", "before_after", "=", "' in '", "\n", "\n", "# Consider the \"filter\"", "\n", "", "middle_datetime", "=", "''", "\n", "last_datetime", "=", "''", "\n", "if", "'filter'", "in", "input", ":", "\n", "\n", "\t\t", "filter_str", "=", "re", ".", "findall", "(", "'(filter.*)\\?x'", ",", "input", ")", "# filter, exist ...", "\n", "if", "filter_str", "!=", "[", "]", ":", "\n", "\t\t\t", "date_str", "=", "re", ".", "findall", "(", "'\\'\\' (.*?) \\`\\`'", ",", "filter_str", "[", "0", "]", ")", "\n", "\n", "if", "date_str", "!=", "[", "]", ":", "\n", "\t\t\t\t", "middle_datetime", "=", "date_str", "[", "0", "]", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "\n", "", "input", "=", "input", ".", "replace", "(", "filter_str", "[", "0", "]", ",", "''", ")", "\n", "\n", "", "if", "'filter'", "in", "input", ":", "\n", "\t\t\t", "filter_str", "=", "re", ".", "findall", "(", "'(filter.*)'", ",", "input", ")", "\n", "date_str", "=", "re", ".", "findall", "(", "'\\'\\' (.*?) \\`\\`'", ",", "filter_str", "[", "0", "]", ")", "\n", "if", "'not exists'", "in", "filter_str", "[", "0", "]", ":", "\n", "\n", "\t\t\t\t", "if", "date_str", "!=", "[", "]", ":", "\n", "\t\t\t\t\t", "last_datetime", "=", "date_str", "[", "0", "]", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "if", "date_str", "!=", "[", "]", ":", "\n", "\t\t\t\t\t", "last_datetime", "=", "date_str", "[", "0", "]", "\n", "", "", "", "else", ":", "\n", "\t\t\t", "date_str", "=", "re", ".", "findall", "(", "'\\'\\' (.*) \\`\\`'", ",", "input", ")", "\n", "if", "date_str", "!=", "[", "]", ":", "\n", "\t\t\t\t", "last_datetime", "=", "date_str", "[", "0", "]", "\n", "\n", "", "", "", "sketch", "=", "get_sketch_triple", "(", "input", ",", "corpus", ")", "\n", "\n", "translated_questions", "=", "[", "]", "\n", "\n", "for", "index", ",", "j", "in", "enumerate", "(", "sketch", ")", ":", "\n", "\n", "\t\t", "template", "=", "list", "(", "corpus", ".", "values", "(", ")", ")", "[", "list", "(", "corpus", ".", "keys", "(", ")", ")", ".", "index", "(", "str", "(", "j", "[", "0", "]", "[", "1", "]", ")", ")", "]", "\n", "temp", "=", "template", "[", "0", "]", "\n", "\n", "# handle restriction issue", "\n", "if", "len", "(", "j", ")", ">", "1", ":", "\n", "\t\t\t", "mini_template", "=", "mini_template_corpus", "[", "j", "[", "1", "]", "[", "1", "]", "[", "0", "]", "]", "\n", "mini_template", "=", "mini_template", ".", "replace", "(", "'<MINI_PLD>'", ",", "j", "[", "1", "]", "[", "2", "]", ")", "\n", "if", "'<RSTR>'", "in", "temp", ":", "\n", "\t\t\t\t", "if", "str", "(", "j", "[", "0", "]", "[", "1", "]", ")", "in", "multi_restriction_corpus", ":", "\n", "\t\t\t\t\t", "if", "j", "[", "1", "]", "[", "1", "]", "[", "0", "]", "in", "multi_restriction_corpus", "[", "str", "(", "j", "[", "0", "]", "[", "1", "]", ")", "]", ":", "\n", "\t\t\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<RSTR>'", ",", "mini_template", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "' <RSTR>'", ",", "''", ")", "\n", "temp", "=", "temp", "+", "' '", "+", "mini_template", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "temp", "=", "temp", "+", "' '", "+", "mini_template", "\n", "\n", "", "", "temp", "=", "temp", ".", "replace", "(", "' <RSTR>'", ",", "''", ")", "# if there's no matched restriction predicate", "\n", "\n", "h_index", "=", "0", "# head index", "\n", "t_index", "=", "2", "# tail index", "\n", "\n", "if", "isDigit", "(", "j", "[", "0", "]", "[", "2", "]", ")", ":", "# deal with: miss ?num", "\n", "\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<PLD>'", ",", "j", "[", "0", "]", "[", "2", "]", ")", "\n", "\n", "", "if", "j", "[", "0", "]", "[", "h_index", "]", ".", "startswith", "(", "'#'", ")", "or", "j", "[", "0", "]", "[", "h_index", "]", "==", "'?num'", ":", "\n", "\t\t\t", "temp", "=", "j", "[", "0", "]", "[", "h_index", "]", "+", "' is/are '", "+", "temp", "\n", "", "elif", "j", "[", "0", "]", "[", "h_index", "]", "==", "'?x'", ":", "\n", "\t\t\t", "if", "r_type", "==", "'bridging'", "or", "(", "r_type", "==", "'intersection'", "and", "index", "==", "0", ")", ":", "\n", "\t\t\t\t", "temp", "=", "'What is/are '", "+", "temp", "\n", "", "else", ":", "\n", "\t\t\t\t", "temp", "=", "'Of which, what is/are '", "+", "temp", "\n", "", "", "elif", "j", "[", "0", "]", "[", "h_index", "]", "==", "'?c'", "and", "r_type", "==", "'bridging'", ":", "\n", "\t\t\t", "if", "index", "==", "0", ":", "\n", "\t\t\t\t", "temp", "=", "'What is/are '", "+", "temp", "\n", "", "else", ":", "\n", "\t\t\t\t", "temp", "=", "'<ANS> is/are '", "+", "temp", "\n", "\n", "\n", "", "", "if", "j", "[", "0", "]", "[", "t_index", "]", ".", "startswith", "(", "'#'", ")", "or", "j", "[", "0", "]", "[", "t_index", "]", "==", "'?num'", ":", "\n", "\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<PLD>'", ",", "j", "[", "0", "]", "[", "t_index", "]", ")", "\n", "", "elif", "j", "[", "0", "]", "[", "t_index", "]", "==", "'?x'", ":", "\n", "\t\t\t", "if", "r_type", "==", "'bridging'", "or", "(", "r_type", "==", "'intersection'", "and", "index", "==", "0", ")", ":", "\n", "\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<PLD>'", ",", "'what'", ")", "if", "'<PLD>'", "in", "temp", "else", "'What is/are '", "+", "temp", "\n", "", "else", ":", "\n", "\t\t\t\t", "temp", "=", "'Of which, '", "+", "temp", ".", "replace", "(", "'<PLD>'", ",", "'what'", ")", "if", "'<PLD>'", "in", "temp", "else", "'Of which, what is/are '", "+", "temp", "\n", "", "", "elif", "j", "[", "0", "]", "[", "t_index", "]", "==", "'?c'", "and", "r_type", "==", "'bridging'", ":", "\n", "\t\t\t", "if", "index", "==", "0", ":", "\n", "\t\t\t\t", "if", "'<PLD>'", "in", "temp", ":", "\n", "\t\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<PLD>'", ",", "'what'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "if", "'What is/are'", "not", "in", "temp", ":", "\n", "\t\t\t\t \t\t", "temp", "=", "'What is/are '", "+", "temp", "\n", "", "", "", "else", ":", "\n", "\t\t\t\t", "if", "'<PLD>'", "in", "temp", ":", "\n", "\t\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'<PLD>'", ",", "'<ANS>'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "if", "'What is/are'", "not", "in", "temp", ":", "\n", "\t\t\t\t\t\t", "temp", "=", "'What is/are '", "+", "temp", "\n", "\n", "# consider filter", "\n", "", "", "", "", "if", "middle_datetime", "!=", "''", "and", "last_datetime", "==", "''", "and", "index", "==", "len", "(", "sketch", ")", "-", "2", ":", "\n", "\t\t\t", "temp", "=", "temp", "+", "' in '", "+", "middle_datetime", "\n", "", "elif", "middle_datetime", "==", "''", "and", "last_datetime", "!=", "''", "and", "index", "==", "len", "(", "sketch", ")", "-", "1", ":", "\n", "\t\t\t", "if", "'?num'", "in", "temp", "or", "'<PLD>'", "in", "temp", ":", "\n", "\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'?num'", ",", "before_after", "[", "1", ":", "]", "+", "last_datetime", ")", ".", "replace", "(", "'<PLD>'", ",", "before_after", "[", "1", ":", "]", "+", "last_datetime", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "temp", "=", "temp", "+", "' in '", "+", "last_datetime", "\n", "", "", "elif", "middle_datetime", "!=", "''", "and", "last_datetime", "!=", "''", ":", "\n", "\t\t\t", "if", "index", "==", "len", "(", "sketch", ")", "-", "2", ":", "\n", "\t\t\t\t", "temp", "=", "temp", "+", "' in '", "+", "middle_datetime", "\n", "", "elif", "index", "==", "len", "(", "sketch", ")", "-", "1", ":", "\n", "\t\t\t\t", "if", "'?num'", "in", "temp", "or", "'<PLD>'", "in", "temp", ":", "\n", "\t\t\t\t\t", "temp", "=", "temp", ".", "replace", "(", "'?num'", ",", "before_after", "[", "1", ":", "]", "+", "last_datetime", ")", ".", "replace", "(", "'<PLD>'", ",", "before_after", "[", "1", ":", "]", "+", "last_datetime", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "temp", "=", "temp", "+", "' in '", "+", "last_datetime", "\n", "\n", "", "", "", "translated_questions", ".", "append", "(", "temp", ")", "\n", "\n", "", "if", "order_by", "!=", "''", ":", "# consider order_by", "\n", "\t\t", "if", "order_by", "==", "'increase'", "and", "date_time", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the earliest'", "\n", "", "elif", "order_by", "==", "'increase'", "and", "num", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the entity associated with the earliest date'", "\n", "", "elif", "order_by", "==", "'increase'", "and", "integer_num", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the entity that has the least'", "\n", "", "elif", "order_by", "==", "'increase'", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the smallest'", "\n", "", "elif", "order_by", "==", "'decrease'", "and", "date_time", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the latest'", "\n", "", "elif", "order_by", "==", "'decrease'", "and", "num", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the entity associated with the latest date'", "\n", "", "elif", "order_by", "==", "'decrease'", "and", "integer_num", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the entity that has the most'", "\n", "", "elif", "order_by", "==", "'decrease'", ":", "\n", "\t\t\t", "temp", "=", "'Of these, which is the largest'", "\n", "", "translated_questions", ".", "append", "(", "temp", ")", "\n", "\n", "# post processing for remaining <PLD>, and superlative questions", "\n", "", "processed_trans_ques", "=", "[", "]", "\n", "for", "j", ",", "item", "in", "enumerate", "(", "translated_questions", ")", ":", "\n", "\t\t", "new_item", "=", "item", ".", "replace", "(", "' (?sk0)'", ",", "''", ")", "\n", "if", "'<PLD>'", "in", "item", ":", "\n", "\n", "\t\t\t", "tmp", "=", "re", ".", "findall", "(", "'\\'\\' (.*?)\"'", ",", "lf", ")", "\n", "if", "len", "(", "tmp", ")", ">", "0", ":", "\n", "\t\t\t\t", "new_item", "=", "item", ".", "replace", "(", "'<PLD>'", ",", "tmp", "[", "0", "]", ")", "\n", "\n", "", "", "if", "j", "==", "1", "and", "'order by'", "!=", "''", ":", "\n", "\t\t\t", "new_item", "=", "item", ".", "replace", "(", "'Of which, what is/are'", ",", "'These entities are'", ")", ".", "replace", "(", "'?num'", ",", "'what'", ")", ".", "replace", "(", "'?sk0'", ",", "'what'", ")", "\n", "\n", "# handle before_after issue", "\n", "", "preposition_words", "=", "[", "'on'", ",", "'from'", ",", "'since'", ",", "'until'", ",", "'in'", "]", "\n", "for", "word", "in", "preposition_words", ":", "\n", "\t\t\t", "if", "word", "+", "' before'", "in", "new_item", ":", "\n", "\t\t\t\t", "new_item", "=", "new_item", ".", "replace", "(", "word", "+", "' before'", ",", "'before'", ")", "\n", "", "elif", "word", "+", "' after'", "in", "new_item", ":", "\n", "\t\t\t\t", "new_item", "=", "new_item", ".", "replace", "(", "word", "+", "' after'", ",", "'after'", ")", "\n", "\n", "", "", "new_item", "=", "new_item", ".", "replace", "(", "' in in '", ",", "' in '", ")", "\n", "processed_trans_ques", ".", "append", "(", "new_item", ")", "\n", "\n", "", "return", "processed_trans_ques", "\n", "\n"]], "home.repos.pwc.inspect_result.molingbo_inspired.data_process.preprocess_lf.valid": [[3, 7], ["any", "str", "range"], "function", ["None"], ["def", "valid", "(", "m_str", ")", ":", "\n", "    ", "if", "not", "any", "(", "str", "(", "n", ")", "in", "m_str", "for", "n", "in", "range", "(", "0", ",", "9", ")", ")", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.molingbo_inspired.data_process.preprocess_lf.preprocess_sparql": [[8, 41], ["sparql.replace.strip", "sparql.replace.lower", "re.sub", "sparql.replace.replace", "sparql.replace.replace", "sparql.replace.replace", "re.sub", "enumerate", "re.sub", "re.sub", "sparql.replace.replace", "sparql.replace.replace", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub().strip", "sparql.replace.replace", "re.findall", "preprocess_lf.valid", "re.sub"], "function", ["home.repos.pwc.inspect_result.molingbo_inspired.data_process.preprocess_lf.valid"], ["", "def", "preprocess_sparql", "(", "sparql", ")", ":", "\n", "    ", "\"\"\"Preprocess for sparql logic form\"\"\"", "\n", "sparql", "=", "sparql", ".", "strip", "(", ")", "\n", "sparql", "=", "sparql", ".", "lower", "(", ")", "# lower", "\n", "sparql", "=", "re", ".", "sub", "(", "'\\t'", ",", "' '", ",", "sparql", ")", "# replace \\t with ' '", "\n", "# 0. remove the meaningless header and \\n", "\n", "sparql", "=", "sparql", ".", "replace", "(", "'#MANUAL SPARQL'", ".", "lower", "(", ")", ",", "''", ")", "\n", "sparql", "=", "sparql", ".", "replace", "(", "'prefix ns: <http://rdf.freebase.com/ns/>'", ",", "''", ")", "\n", "sparql", "=", "sparql", ".", "replace", "(", "'\\n'", ",", "' '", ")", "# remove \\n", "\n", "sparql", "=", "re", ".", "sub", "(", "'\\n'", ",", "' '", ",", "sparql", ")", "# remove \\n", "\n", "# 1. replace entity", "\n", "patterns", "=", "[", "possible_entity_pattern", "for", "possible_entity_pattern", "in", "re", ".", "findall", "(", "'ns:m.[a-z_0-9]*'", ",", "sparql", ")", "if", "\n", "valid", "(", "possible_entity_pattern", ")", "]", "\n", "\n", "for", "i", ",", "pattern", "in", "enumerate", "(", "patterns", ")", ":", "\n", "        ", "num", "=", "i", "+", "1", "\n", "sparql", "=", "sparql", ".", "replace", "(", "pattern", ",", "'#entity%s#'", "%", "(", "num", ")", ")", "\n", "# 2. remove type header", "\n", "", "sparql", "=", "re", ".", "sub", "(", "r\"select distinct[ ]*\\?x[ ]*where[ ]*{[ ]*\"", ",", "\" \"", ",", "sparql", ")", "# remove main clause", "\n", "sparql", "=", "re", ".", "sub", "(", "'}[ ]?$'", ",", "' '", ",", "sparql", ")", "# remove } in the tail", "\n", "sparql", "=", "sparql", ".", "replace", "(", "\n", "\"filter (?x != ?c) filter (!isliteral(?x) or lang(?x) = '' or langmatches(lang(?x), 'en'))\"", ",", "\n", "'<sparql-header-1> '", ")", "# replace fixed header of one type LF", "\n", "sparql", "=", "sparql", ".", "replace", "(", "\n", "\"filter (?x != #entity#) filter (!isliteral(?x) or lang(?x) = '' or langmatches(lang(?x), 'en'))\"", ",", "\n", "\"<sparql-header-2> \"", ")", "# replace fixed header of another type LF", "\n", "# 3. sep special chars", "\n", "sparql", "=", "re", ".", "sub", "(", "r'([a-z_0-9!?) \\'#])([{()}])([#, )a-z_0-9!?])'", ",", "r\"\\1 \\2 \\3\"", ",", "sparql", ")", "# sep ( ) in word start", "\n", "sparql", "=", "re", ".", "sub", "(", "r'([a-z_0-9!?)\\\" \\'])\\^\\^([, )a-z_0-9!?])'", ",", "r\"\\1 ^^ \\2\"", ",", "sparql", ")", "# sep ^^", "\n", "sparql", "=", "re", ".", "sub", "(", "r'([a-z_0-9@)])[\"\\'] '", ",", "r'\\1 `` '", ",", "sparql", ")", "# sep \" in word tail", "\n", "sparql", "=", "re", ".", "sub", "(", "r' [\"\\']([a-z_0-9@)])'", ",", "r\" '' \\1\"", ",", "sparql", ")", "# sep \" in word start", "\n", "sparql", "=", "re", ".", "sub", "(", "' [ ]+'", ",", "' '", ",", "sparql", ")", ".", "strip", "(", ")", "# extra whitespace", "\n", "return", "sparql", "\n", "\n"]]}