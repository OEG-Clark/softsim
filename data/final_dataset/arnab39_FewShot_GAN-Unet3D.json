{"home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.pytorch.main.get_args": [[6, 17], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "# parse the path of the json config file", "\n", "    ", "arg_parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"FewShot 3D Medical Image Segmenation\"", ")", "\n", "arg_parser", ".", "add_argument", "(", "\n", "'config'", ",", "\n", "metavar", "=", "'config_json_file'", ",", "\n", "default", "=", "'None'", ",", "\n", "help", "=", "'The Configuration file in json format'", ")", "\n", "\n", "args", "=", "arg_parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.pytorch.main.main": [[18, 28], ["main.get_args", "utils.config.process_config", "agent_class", "agent_class.run", "agent_class.finalize", "globals"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.pytorch.main.get_args", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.process_config", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.finalize"], ["", "def", "main", "(", ")", ":", "\n", "# parse the config json file", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "config", "=", "process_config", "(", "args", ".", "config", ",", "args", ")", "\n", "\n", "# Create the Agent and pass all the configuration to it then run it..", "\n", "agent_class", "=", "globals", "(", ")", "[", "config", ".", "agent", "]", "\n", "agent", "=", "agent_class", "(", "config", ")", "\n", "agent", ".", "run", "(", ")", "\n", "agent", ".", "finalize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.setup_logging": [[14, 37], ["logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.handlers.RotatingFileHandler", "logging.handlers.RotatingFileHandler.setLevel", "logging.handlers.RotatingFileHandler.setFormatter", "logging.handlers.RotatingFileHandler", "logging.handlers.RotatingFileHandler.setLevel", "logging.handlers.RotatingFileHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.Formatter", "logging.Formatter", "logging.Formatter"], "function", ["None"], ["def", "setup_logging", "(", "log_dir", ")", ":", "\n", "    ", "log_file_format", "=", "\"[%(levelname)s] - %(asctime)s - %(name)s - : %(message)s in %(pathname)s:%(lineno)d\"", "\n", "log_console_format", "=", "\"[%(levelname)s]: %(message)s\"", "\n", "\n", "# Main logger", "\n", "main_logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "main_logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "console_handler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console_handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "console_handler", ".", "setFormatter", "(", "Formatter", "(", "log_console_format", ")", ")", "\n", "\n", "exp_file_handler", "=", "RotatingFileHandler", "(", "'{}exp_debug.log'", ".", "format", "(", "log_dir", ")", ",", "maxBytes", "=", "10", "**", "6", ",", "backupCount", "=", "5", ")", "\n", "exp_file_handler", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "exp_file_handler", ".", "setFormatter", "(", "Formatter", "(", "log_file_format", ")", ")", "\n", "\n", "exp_errors_file_handler", "=", "RotatingFileHandler", "(", "'{}exp_error.log'", ".", "format", "(", "log_dir", ")", ",", "maxBytes", "=", "10", "**", "6", ",", "backupCount", "=", "5", ")", "\n", "exp_errors_file_handler", ".", "setLevel", "(", "logging", ".", "WARNING", ")", "\n", "exp_errors_file_handler", ".", "setFormatter", "(", "Formatter", "(", "log_file_format", ")", ")", "\n", "\n", "main_logger", ".", "addHandler", "(", "console_handler", ")", "\n", "main_logger", ".", "addHandler", "(", "exp_file_handler", ")", "\n", "main_logger", ".", "addHandler", "(", "exp_errors_file_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.get_config_from_json": [[39, 56], ["open", "json.load", "easydict.EasyDict", "print", "exit"], "function", ["None"], ["", "def", "get_config_from_json", "(", "json_file", ")", ":", "\n", "    ", "\"\"\"\n    Get the config from a json file\n    :param json_file: the path of the config file\n    :return: config(namespace), config(dictionary)\n    \"\"\"", "\n", "\n", "# parse the configurations from the config json file provided", "\n", "with", "open", "(", "json_file", ",", "'r'", ")", "as", "config_file", ":", "\n", "        ", "try", ":", "\n", "            ", "config_dict", "=", "json", ".", "load", "(", "config_file", ")", "\n", "# EasyDict allows to access dict values as attributes (works recursively).", "\n", "config", "=", "EasyDict", "(", "config_dict", ")", "\n", "return", "config", ",", "config_dict", "\n", "", "except", "ValueError", ":", "\n", "            ", "print", "(", "\"INVALID JSON file format.. Please provide a good json file\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.process_config": [[58, 98], ["config.get_config_from_json", "print", "pprint.pprint", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.dirs.create_dirs", "config.setup_logging", "logging.getLogger().info", "logging.getLogger().info", "logging.getLogger().info", "print", "print", "print", "print", "exit", "logging.getLogger", "logging.getLogger", "logging.getLogger"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.get_config_from_json", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.dirs.create_dirs", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.config.setup_logging"], ["", "", "", "def", "process_config", "(", "json_file", ",", "args", ")", ":", "\n", "    ", "\"\"\"\n    Get the json file\n    Processing it with EasyDict to be accessible as attributes\n    then editing the path of the experiments folder\n    creating some important directories in the experiment folder\n    Then setup the logging in the whole program\n    Then return the config\n    :param json_file: the path of the config file\n    :return: config object(namespace)\n    \"\"\"", "\n", "config", ",", "_", "=", "get_config_from_json", "(", "json_file", ")", "\n", "\n", "print", "(", "\" THE Configuration of your experiment ..\"", ")", "\n", "pprint", "(", "config", ")", "\n", "\n", "# making sure that you have provided the exp_name.", "\n", "try", ":", "\n", "        ", "print", "(", "\" *************************************** \"", ")", "\n", "print", "(", "\"The experiment name is {}\"", ".", "format", "(", "config", ".", "exp_name", ")", ")", "\n", "print", "(", "\" *************************************** \"", ")", "\n", "", "except", "AttributeError", ":", "\n", "        ", "print", "(", "\"ERROR!!..Please provide the exp_name in json file..\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "# create some important directories to be used for that experiment.", "\n", "", "config", ".", "summary_dir", "=", "os", ".", "path", ".", "join", "(", "\"experiments\"", ",", "config", ".", "exp_name", ",", "\"summaries/\"", ")", "\n", "config", ".", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "\"experiments\"", ",", "config", ".", "exp_name", ",", "\"checkpoints/\"", ")", "\n", "config", ".", "out_dir", "=", "os", ".", "path", ".", "join", "(", "\"experiments\"", ",", "config", ".", "exp_name", ",", "\"out/\"", ")", "\n", "config", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "\"experiments\"", ",", "config", ".", "exp_name", ",", "\"logs/\"", ")", "\n", "create_dirs", "(", "[", "config", ".", "summary_dir", ",", "config", ".", "checkpoint_dir", ",", "config", ".", "out_dir", ",", "config", ".", "log_dir", "]", ")", "\n", "\n", "# setup logging in the project", "\n", "setup_logging", "(", "config", ".", "log_dir", ")", "\n", "\n", "logging", ".", "getLogger", "(", ")", ".", "info", "(", "\"Hi, This is root.\"", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "info", "(", "\"After the configurations are successfully processed and dirs are created.\"", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "info", "(", "\"The pipeline of the project will begin now.\"", ")", "\n", "\n", "return", "config", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.recompose.recompose3D_overlap": [[4, 43], ["print", "print", "print", "print", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.around", "range", "numpy.min", "range", "str", "range", "str", "str", "str"], "function", ["None"], ["def", "recompose3D_overlap", "(", "preds", ",", "img_h", ",", "img_w", ",", "img_d", ",", "stride_h", ",", "stride_w", ",", "stride_d", ")", ":", "\n", "  ", "patch_h", "=", "preds", ".", "shape", "[", "1", "]", "\n", "patch_w", "=", "preds", ".", "shape", "[", "2", "]", "\n", "patch_d", "=", "preds", ".", "shape", "[", "3", "]", "\n", "N_patches_h", "=", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", "\n", "N_patches_w", "=", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", "\n", "N_patches_d", "=", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", "\n", "N_patches_img", "=", "N_patches_h", "*", "N_patches_w", "*", "N_patches_d", "\n", "print", "(", "\"N_patches_h: \"", ",", "N_patches_h", ")", "\n", "print", "(", "\"N_patches_w: \"", ",", "N_patches_w", ")", "\n", "print", "(", "\"N_patches_d: \"", ",", "N_patches_d", ")", "\n", "print", "(", "\"N_patches_img: \"", ",", "N_patches_img", ")", "\n", "assert", "(", "preds", ".", "shape", "[", "0", "]", "%", "N_patches_img", "==", "0", ")", "\n", "N_full_imgs", "=", "preds", ".", "shape", "[", "0", "]", "//", "N_patches_img", "\n", "print", "(", "\"According to the dimension inserted, there are \"", "+", "str", "(", "N_full_imgs", ")", "+", "\" full images (of \"", "+", "str", "(", "img_h", ")", "+", "\"x\"", "+", "str", "(", "img_w", ")", "+", "\"x\"", "+", "str", "(", "img_d", ")", "+", "\" each)\"", ")", "\n", "# itialize to zero mega array with sum of Probabilities", "\n", "raw_pred_martrix", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ")", "\n", "raw_sum", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ")", "\n", "final_matrix", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ",", "dtype", "=", "'uint16'", ")", "\n", "\n", "k", "=", "0", "\n", "# iterator over all the patches", "\n", "for", "i", "in", "range", "(", "N_full_imgs", ")", ":", "\n", "    ", "for", "h", "in", "range", "(", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", ")", ":", "\n", "      ", "for", "w", "in", "range", "(", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", ")", ":", "\n", "        ", "for", "d", "in", "range", "(", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", ")", ":", "\n", "          ", "raw_pred_martrix", "[", "i", ",", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "+=", "preds", "[", "k", "]", "\n", "raw_sum", "[", "i", ",", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "+=", "1.0", "\n", "k", "+=", "1", "\n", "", "", "", "", "assert", "(", "k", "==", "preds", ".", "shape", "[", "0", "]", ")", "\n", "#To check for non zero sum matrix", "\n", "assert", "(", "np", ".", "min", "(", "raw_sum", ")", ">=", "1.0", ")", "\n", "final_matrix", "=", "np", ".", "around", "(", "raw_pred_martrix", "/", "raw_sum", ")", "\n", "return", "final_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.IOUMetric.__init__": [[12, 15], ["numpy.zeros"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "hist", "=", "np", ".", "zeros", "(", "(", "num_classes", ",", "num_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.IOUMetric._fast_hist": [[16, 22], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "methods", ["None"], ["", "def", "_fast_hist", "(", "self", ",", "label_pred", ",", "label_true", ")", ":", "\n", "        ", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "self", ".", "num_classes", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "self", ".", "num_classes", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "\n", "label_pred", "[", "mask", "]", ",", "minlength", "=", "self", ".", "num_classes", "**", "2", ")", ".", "reshape", "(", "self", ".", "num_classes", ",", "self", ".", "num_classes", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.IOUMetric.add_batch": [[23, 26], ["zip", "metrics.IOUMetric._fast_hist", "lp.flatten", "lt.flatten"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.IOUMetric._fast_hist"], ["", "def", "add_batch", "(", "self", ",", "predictions", ",", "gts", ")", ":", "\n", "        ", "for", "lp", ",", "lt", "in", "zip", "(", "predictions", ",", "gts", ")", ":", "\n", "            ", "self", ".", "hist", "+=", "self", ".", "_fast_hist", "(", "lp", ".", "flatten", "(", ")", ",", "lt", ".", "flatten", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.IOUMetric.evaluate": [[27, 36], ["numpy.nanmean", "numpy.nanmean", "numpy.diag().sum", "metrics.IOUMetric.hist.sum", "numpy.diag", "metrics.IOUMetric.hist.sum", "numpy.diag", "metrics.IOUMetric.hist.sum", "metrics.IOUMetric.hist.sum", "numpy.diag", "numpy.diag", "metrics.IOUMetric.hist.sum", "metrics.IOUMetric.hist.sum"], "methods", ["None"], ["", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "acc", "=", "np", ".", "diag", "(", "self", ".", "hist", ")", ".", "sum", "(", ")", "/", "self", ".", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "self", ".", "hist", ")", "/", "self", ".", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "np", ".", "diag", "(", "self", ".", "hist", ")", "/", "(", "self", ".", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "self", ".", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "self", ".", "hist", ")", ")", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", ")", "\n", "freq", "=", "self", ".", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "self", ".", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "return", "acc", ",", "acc_cls", ",", "iu", ",", "mean_iu", ",", "fwavacc", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeter.__init__": [[43, 49], ["metrics.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "value", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeter.reset": [[50, 55], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "value", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeter.update": [[56, 61], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "value", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeter.val": [[62, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "val", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.__init__": [[72, 79], ["metrics.AverageMeterList.reset"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.reset"], ["def", "__init__", "(", "self", ",", "num_cls", ")", ":", "\n", "        ", "self", ".", "cls", "=", "num_cls", "\n", "self", ".", "value", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "avg", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "sum", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "count", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.reset": [[80, 85], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "value", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "avg", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "sum", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "self", ".", "count", "=", "[", "0", "]", "*", "self", ".", "cls", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update": [[86, 92], ["range"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "cls", ")", ":", "\n", "            ", "self", ".", "value", "[", "i", "]", "=", "val", "[", "i", "]", "\n", "self", ".", "sum", "[", "i", "]", "+=", "val", "[", "i", "]", "*", "n", "\n", "self", ".", "count", "[", "i", "]", "+=", "n", "\n", "self", ".", "avg", "[", "i", "]", "=", "self", ".", "sum", "[", "i", "]", "/", "self", ".", "count", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.val": [[93, 96], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "val", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.cls_accuracy": [[98, 111], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "cls_accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", "/", "batch_size", ")", "\n", "", "return", "res", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.dirs.create_dirs": [[5, 18], ["logging.getLogger().info", "exit", "os.path.exists", "os.makedirs", "logging.getLogger"], "function", ["None"], ["def", "create_dirs", "(", "dirs", ")", ":", "\n", "    ", "\"\"\"\n    dirs - a list of directories to create if these directories are not found\n    :param dirs:\n    :return:\n    \"\"\"", "\n", "try", ":", "\n", "        ", "for", "dir_", "in", "dirs", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "dir_", ")", "\n", "", "", "", "except", "Exception", "as", "err", ":", "\n", "        ", "logging", ".", "getLogger", "(", "\"Dirs Creator\"", ")", ".", "info", "(", "\"Creating directories error: {0}\"", ".", "format", "(", "err", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.get_filename": [[13, 16], ["pattern.format"], "function", ["None"], ["def", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "loc", ")", ":", "\n", "    ", "pattern", "=", "'{0}/{1}/{3}/subject-{2}-{3}.nii'", "\n", "return", "pattern", ".", "format", "(", "loc", ",", "set_name", ",", "case_idx", ",", "input_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.get_set_name": [[17, 19], ["None"], "function", ["None"], ["", "def", "get_set_name", "(", "case_idx", ")", ":", "\n", "    ", "return", "'Training'", "if", "case_idx", "<", "11", "else", "'Testing'", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.read_data": [[20, 25], ["preprocess.get_set_name", "preprocess.get_filename", "print", "nibabel.load"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_set_name", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename"], ["", "def", "read_data", "(", "case_idx", ",", "input_name", ",", "loc", ")", ":", "\n", "    ", "set_name", "=", "get_set_name", "(", "case_idx", ")", "\n", "image_path", "=", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "loc", ")", "\n", "print", "(", "image_path", ")", "\n", "return", "nib", ".", "load", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.read_vol": [[26, 29], ["preprocess.read_data", "read_data.get_data"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_data"], ["", "def", "read_vol", "(", "case_idx", ",", "input_name", ",", "dir", ")", ":", "\n", "    ", "image_data", "=", "read_data", "(", "case_idx", ",", "input_name", ",", "dir", ")", "\n", "return", "image_data", ".", "get_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.correct_bias": [[30, 36], ["nipype.interfaces.ants.N4BiasFieldCorrection", "nipype.interfaces.ants.N4BiasFieldCorrection.run"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run"], ["", "def", "correct_bias", "(", "in_file", ",", "out_file", ")", ":", "\n", "    ", "correct", "=", "N4BiasFieldCorrection", "(", ")", "\n", "correct", ".", "inputs", ".", "input_image", "=", "in_file", "\n", "correct", ".", "inputs", ".", "output_image", "=", "out_file", "\n", "done", "=", "correct", ".", "run", "(", ")", "\n", "return", "done", ".", "outputs", ".", "output_image", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.normalise": [[37, 46], ["preprocess.get_set_name", "preprocess.get_filename", "preprocess.get_filename", "print", "shutil.copy", "preprocess.correct_bias"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_set_name", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.correct_bias"], ["", "def", "normalise", "(", "case_idx", ",", "input_name", ",", "in_dir", ",", "out_dir", ",", "copy", "=", "False", ")", ":", "\n", "\t", "set_name", "=", "get_set_name", "(", "case_idx", ")", "\n", "image_in_path", "=", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "in_dir", ")", "\n", "image_out_path", "=", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "out_dir", ")", "\n", "if", "copy", ":", "\n", "\t\t", "shutil", ".", "copy", "(", "image_in_path", ",", "image_out_path", ")", "\n", "", "else", ":", "\n", "\t\t", "correct_bias", "(", "image_in_path", ",", "image_out_path", ")", "\n", "", "print", "(", "image_in_path", "+", "\" done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.extract_patches": [[50, 71], ["numpy.zeros", "range", "range", "range"], "function", ["None"], ["def", "extract_patches", "(", "volume", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "'float32'", ")", ":", "\n", "    ", "patch_h", ",", "patch_w", ",", "patch_d", "=", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "patch_shape", "[", "2", "]", "\n", "stride_h", ",", "stride_w", ",", "stride_d", "=", "extraction_step", "[", "0", "]", ",", "extraction_step", "[", "1", "]", ",", "extraction_step", "[", "2", "]", "\n", "img_h", ",", "img_w", ",", "img_d", "=", "volume", ".", "shape", "[", "0", "]", ",", "volume", ".", "shape", "[", "1", "]", ",", "volume", ".", "shape", "[", "2", "]", "\n", "N_patches_h", "=", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", "\n", "N_patches_w", "=", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", "\n", "N_patches_d", "=", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", "\n", "N_patches_img", "=", "N_patches_h", "*", "N_patches_w", "*", "N_patches_d", "\n", "raw_patch_martrix", "=", "np", ".", "zeros", "(", "(", "N_patches_img", ",", "patch_h", ",", "patch_w", ",", "patch_d", ")", ",", "dtype", "=", "datype", ")", "\n", "k", "=", "0", "\n", "\n", "#iterator over all the patches", "\n", "for", "h", "in", "range", "(", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", ")", ":", "\n", "        ", "for", "w", "in", "range", "(", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", ")", ":", "\n", "            ", "for", "d", "in", "range", "(", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", ")", ":", "\n", "                ", "raw_patch_martrix", "[", "k", "]", "=", "volume", "[", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "\n", "k", "+=", "1", "\n", "", "", "", "assert", "(", "k", "==", "N_patches_img", ")", "\n", "return", "raw_patch_martrix", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.get_patches_lab": [[76, 117], ["numpy.zeros", "numpy.zeros", "range", "len", "len", "sklearn.feature_extraction.image.extract_patches", "numpy.vstack", "numpy.vstack", "sklearn.feature_extraction.image.extract_patches", "sklearn.feature_extraction.image.extract_patches", "print", "numpy.where", "numpy.where", "print", "print", "numpy.zeros", "numpy.zeros", "numpy.sum", "numpy.count_nonzero", "len", "len"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches"], ["def", "get_patches_lab", "(", "T1_vols", ",", "T2_vols", ",", "label_vols", ",", "extraction_step", ",", "\n", "patch_shape", ",", "validating", ",", "testing", ",", "num_images_training", ")", ":", "\n", "    ", "patch_shape_1d", "=", "patch_shape", "[", "0", "]", "\n", "# Extract patches from input volumes and ground truth", "\n", "x", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "y", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "T1_vols", ")", ")", ":", "\n", "        ", "y_length", "=", "len", "(", "y", ")", "\n", "if", "testing", ":", "\n", "            ", "print", "(", "(", "\"Extracting Patches from Image %2d ....\"", ")", "%", "(", "num_images_training", "+", "idx", "+", "2", ")", ")", "\n", "", "elif", "validating", ":", "\n", "            ", "print", "(", "(", "\"Extracting Patches from Image %2d ....\"", ")", "%", "(", "num_images_training", "+", "idx", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "(", "\"Extracting Patches from Image %2d ....\"", ")", "%", "(", "1", "+", "idx", ")", ")", "\n", "", "label_patches", "=", "extract_patches", "(", "label_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "\n", "datype", "=", "\"uint8\"", ")", "\n", "\n", "# Select only those who are important for processing", "\n", "if", "testing", "or", "validating", ":", "\n", "            ", "valid_idxs", "=", "np", ".", "where", "(", "np", ".", "sum", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "!=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "valid_idxs", "=", "np", ".", "where", "(", "np", ".", "count_nonzero", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ">", "6000", ")", "\n", "\n", "# Filtering extracted patches", "\n", "", "label_patches", "=", "label_patches", "[", "valid_idxs", "]", "\n", "\n", "x", "=", "np", ".", "vstack", "(", "(", "x", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ",", "dtype", "=", "\"float32\"", ")", ")", ")", "\n", "y", "=", "np", ".", "vstack", "(", "(", "y", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ")", ",", "dtype", "=", "\"uint8\"", ")", ")", ")", "\n", "\n", "y", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", "]", "=", "label_patches", "\n", "\n", "# Sampling strategy: reject samples which labels are mostly 0 and have less than 6000 nonzero elements", "\n", "T1_train", "=", "extract_patches", "(", "T1_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", ",", "0", "]", "=", "T1_train", "[", "valid_idxs", "]", "\n", "\n", "# Sampling strategy: reject samples which labels are mostly 0 and have less than 6000 nonzero elements", "\n", "T2_train", "=", "extract_patches", "(", "T2_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", ",", "1", "]", "=", "T2_train", "[", "valid_idxs", "]", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.preprocess_dynamic_lab": [[121, 176], ["list", "range", "np.empty.mean", "np.empty.std", "np.empty.mean", "np.empty.std", "range", "range", "preprocess.get_patches_lab", "print", "range", "print", "numpy.empty", "numpy.empty", "numpy.empty", "print", "preprocess.read_vol", "preprocess.read_vol", "preprocess.read_vol", "print", "numpy.empty", "numpy.empty", "numpy.empty", "print", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.rollaxis", "numpy.rollaxis", "numpy.rollaxis", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol"], ["def", "preprocess_dynamic_lab", "(", "dir", ",", "seed", ",", "num_classes", ",", "extraction_step", ",", "patch_shape", ",", "num_images_training", "=", "2", ",", "\n", "validating", "=", "False", ",", "testing", "=", "False", ",", "num_images_testing", "=", "7", ")", ":", "\n", "    ", "x", "=", "list", "(", "range", "(", "1", ",", "11", ")", ")", "\n", "if", "testing", ":", "\n", "        ", "print", "(", "\"Testing\"", ")", "\n", "index_start", "=", "num_images_training", "+", "2", "\n", "index_end", "=", "index_start", "+", "num_images_testing", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "", "elif", "validating", ":", "\n", "        ", "print", "(", "\"Validating\"", ")", "\n", "index_start", "=", "num_images_training", "+", "1", "\n", "index_end", "=", "index_start", "+", "1", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Training\"", ")", "\n", "index_start", "=", "1", "\n", "index_end", "=", "index_start", "+", "num_images_training", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "", "i", "=", "0", "\n", "for", "index", "in", "range", "(", "index_start", ",", "index_end", ")", ":", "\n", "        ", "print", "(", "x", "[", "index", "-", "1", "]", ")", "\n", "T1_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'T1'", ",", "dir", ")", "\n", "T2_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'T2'", ",", "dir", ")", "\n", "label_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'label'", ",", "dir", ")", "\n", "i", "=", "i", "+", "1", "\n", "", "T1_mean", "=", "T1_vols", ".", "mean", "(", ")", "\n", "T1_std", "=", "T1_vols", ".", "std", "(", ")", "\n", "T1_vols", "=", "(", "T1_vols", "-", "T1_mean", ")", "/", "T1_std", "\n", "T2_mean", "=", "T2_vols", ".", "mean", "(", ")", "\n", "T2_std", "=", "T2_vols", ".", "std", "(", ")", "\n", "T2_vols", "=", "(", "T2_vols", "-", "T2_mean", ")", "/", "T2_std", "\n", "\n", "for", "i", "in", "range", "(", "T1_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T1_vols", "[", "i", "]", "=", "(", "(", "T1_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T1_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "for", "i", "in", "range", "(", "T2_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T2_vols", "[", "i", "]", "=", "(", "(", "T2_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T2_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "T1_vols", "=", "T1_vols", "/", "127.5", "-", "1.", "\n", "T2_vols", "=", "T2_vols", "/", "127.5", "-", "1.", "\n", "x", ",", "y", "=", "get_patches_lab", "(", "T1_vols", ",", "T2_vols", ",", "label_vols", ",", "extraction_step", ",", "patch_shape", ",", "validating", "=", "validating", ",", "\n", "testing", "=", "testing", ",", "num_images_training", "=", "num_images_training", ")", "\n", "print", "(", "\"Total Extracted Labelled Patches Shape:\"", ",", "x", ".", "shape", ",", "y", ".", "shape", ")", "\n", "if", "testing", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "label_vols", "\n", "", "elif", "validating", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "y", ",", "label_vols", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.get_patches_unlab": [[180, 206], ["numpy.empty", "numpy.zeros", "preprocess.read_vol", "range", "len", "len", "print", "sklearn.feature_extraction.image.extract_patches", "numpy.where", "numpy.vstack", "sklearn.feature_extraction.image.extract_patches", "sklearn.feature_extraction.image.extract_patches", "numpy.count_nonzero", "numpy.zeros", "len"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches"], ["def", "get_patches_unlab", "(", "T1_vols", ",", "T2_vols", ",", "extraction_step", ",", "patch_shape", ",", "dir", ")", ":", "\n", "    ", "patch_shape_1d", "=", "patch_shape", "[", "0", "]", "\n", "# Extract patches from input volumes and ground truth", "\n", "label_ref", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "x", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ")", "\n", "label_ref", "=", "read_vol", "(", "1", ",", "'label'", ",", "dir", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "T1_vols", ")", ")", ":", "\n", "\n", "        ", "x_length", "=", "len", "(", "x", ")", "\n", "print", "(", "(", "\"Processing the Image %2d ....\"", ")", "%", "(", "idx", "+", "11", ")", ")", "\n", "label_patches", "=", "extract_patches", "(", "label_ref", ",", "patch_shape", ",", "extraction_step", ")", "\n", "\n", "# Select only those who are important for processing", "\n", "# Sampling strategy: reject samples which labels are mostly 0 and have less than 6000 nonzero elements", "\n", "valid_idxs", "=", "np", ".", "where", "(", "np", ".", "count_nonzero", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ">", "6000", ")", "\n", "\n", "label_patches", "=", "label_patches", "[", "valid_idxs", "]", "\n", "x", "=", "np", ".", "vstack", "(", "(", "x", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ")", ")", ")", "\n", "\n", "T1_train", "=", "extract_patches", "(", "T1_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "x_length", ":", ",", ":", ",", ":", ",", ":", ",", "0", "]", "=", "T1_train", "[", "valid_idxs", "]", "\n", "\n", "T2_train", "=", "extract_patches", "(", "T2_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "x_length", ":", ",", ":", ",", ":", ",", ":", ",", "1", "]", "=", "T2_train", "[", "valid_idxs", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.preprocess.preprocess_dynamic_unlab": [[210, 234], ["numpy.empty", "numpy.empty", "range", "np.empty.mean", "np.empty.std", "np.empty.mean", "np.empty.std", "range", "range", "preprocess.get_patches_unlab", "print", "numpy.rollaxis", "preprocess.read_vol", "preprocess.read_vol", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_unlab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol"], ["def", "preprocess_dynamic_unlab", "(", "dir", ",", "extraction_step", ",", "patch_shape", ",", "num_images_training_unlab", ")", ":", "\n", "    ", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_training_unlab", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_training_unlab", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "for", "case_idx", "in", "range", "(", "11", ",", "11", "+", "num_images_training_unlab", ")", ":", "\n", "        ", "T1_vols", "[", "(", "case_idx", "-", "11", ")", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "case_idx", ",", "'T1'", ",", "dir", ")", "\n", "T2_vols", "[", "(", "case_idx", "-", "11", ")", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "case_idx", ",", "'T2'", ",", "dir", ")", "\n", "#print(read_vol(case_idx, 'T2', dir).shape)", "\n", "", "T1_mean", "=", "T1_vols", ".", "mean", "(", ")", "\n", "T1_std", "=", "T1_vols", ".", "std", "(", ")", "\n", "T1_vols", "=", "(", "T1_vols", "-", "T1_mean", ")", "/", "T1_std", "\n", "T2_mean", "=", "T2_vols", ".", "mean", "(", ")", "\n", "T2_std", "=", "T2_vols", ".", "std", "(", ")", "\n", "T2_vols", "=", "(", "T2_vols", "-", "T2_mean", ")", "/", "T2_std", "\n", "for", "i", "in", "range", "(", "T1_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T1_vols", "[", "i", "]", "=", "(", "(", "T1_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T1_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "for", "i", "in", "range", "(", "T2_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T2_vols", "[", "i", "]", "=", "(", "(", "T2_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T2_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "T1_vols", "=", "T1_vols", "/", "127.5", "-", "1.", "\n", "T2_vols", "=", "T2_vols", "/", "127.5", "-", "1.", "\n", "x", "=", "get_patches_unlab", "(", "T1_vols", ",", "T2_vols", ",", "extraction_step", ",", "patch_shape", ",", "dir", ")", "\n", "print", "(", "\"Total Extracted Unlabeled Patches Shape:\"", ",", "x", ".", "shape", ")", "\n", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.timeit": [[5, 18], ["time.time", "f", "time.time", "logging.getLogger().info", "logging.getLogger"], "function", ["None"], ["def", "timeit", "(", "f", ")", ":", "\n", "    ", "\"\"\" Decorator to time Any Function \"\"\"", "\n", "\n", "def", "timed", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "result", "=", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "seconds", "=", "end_time", "-", "start_time", "\n", "logging", ".", "getLogger", "(", "\"Timer\"", ")", ".", "info", "(", "\"   [-] %s : %2.5f sec, which is %2.5f min, which is %2.5f hour\"", "%", "\n", "(", "f", ".", "__name__", ",", "seconds", ",", "seconds", "/", "60", ",", "seconds", "/", "3600", ")", ")", "\n", "return", "result", "\n", "\n", "", "return", "timed", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.print_cuda_statistics": [[20, 37], ["logging.getLogger", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "call", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "torch.cuda.current_device", "torch.cuda.device_count", "torch.cuda.current_device"], "function", ["None"], ["", "def", "print_cuda_statistics", "(", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "\"Cuda Statistics\"", ")", "\n", "import", "sys", "\n", "from", "subprocess", "import", "call", "\n", "import", "torch", "\n", "logger", ".", "info", "(", "'__Python VERSION:  {}'", ".", "format", "(", "sys", ".", "version", ")", ")", "\n", "logger", ".", "info", "(", "'__pyTorch VERSION:  {}'", ".", "format", "(", "torch", ".", "__version__", ")", ")", "\n", "logger", ".", "info", "(", "'__CUDA VERSION'", ")", "\n", "# call([\"nvcc\", \"--version\"])", "\n", "# logger.info('__CUDNN VERSION:  {}'.format(torch.backends.cudnn.version()))", "\n", "# logger.info('__Number CUDA Devices:  {}'.format(torch.cuda.device_count()))", "\n", "# logger.info('__Devices')", "\n", "call", "(", "[", "\"nvidia-smi\"", ",", "\"--format=csv\"", ",", "\n", "\"--query-gpu=index,name,driver_version,memory.total,memory.used,memory.free\"", "]", ")", "\n", "logger", ".", "info", "(", "'Active CUDA Device: GPU {}'", ".", "format", "(", "torch", ".", "cuda", ".", "current_device", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Available devices  {}'", ".", "format", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Current cuda device  {}'", ".", "format", "(", "torch", ".", "cuda", ".", "current_device", "(", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.Supervised_Dataloader.__init__": [[18, 40], ["print", "print", "preprocess_dynamic_lab", "print", "preprocess_dynamic_lab", "print", "preprocess_dynamic_lab", "numpy.max", "numpy.min", "numpy.unique", "numpy.unique"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "phase", ")", ":", "\n", "        ", "assert", "phase", "in", "[", "'training'", ",", "'validating'", ",", "'testing'", "]", "\n", "self", ".", "phase", "=", "phase", "\n", "if", "phase", "==", "'training'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "label", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ")", "\n", "print", "(", "\"Label unique:\"", ",", "np", ".", "unique", "(", "self", ".", "label", ")", ")", "\n", "", "if", "phase", "==", "'validating'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "label", ",", "self", ".", "whole_vol", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ",", "validating", "=", "True", ")", "\n", "print", "(", "\"Label unique:\"", ",", "np", ".", "unique", "(", "self", ".", "label", ")", ")", "\n", "\n", "", "if", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "whole_vol", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ",", "testing", "=", "True", ")", "\n", "\n", "# self.data_lab, self.label = shuffle(self.data_lab, self.label, random_state=0)", "\n", "", "print", "(", "\"Data_shape:\"", ",", "self", ".", "patches", ".", "shape", ")", "\n", "print", "(", "\"Data lab max and min:\"", ",", "np", ".", "max", "(", "self", ".", "patches", ")", ",", "np", ".", "min", "(", "self", ".", "patches", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.Supervised_Dataloader.__len__": [[41, 43], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "patches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.Supervised_Dataloader.__getitem__": [[44, 51], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'training'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", "\n", "", "if", "self", ".", "phase", "==", "'validating'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", ",", "self", ".", "whole_vol", "\n", "", "if", "self", ".", "phase", "==", "'testing'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "whole_vol", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.Supervised_Dataset.__init__": [[54, 69], ["dataloader.Supervised_Dataloader", "torch.utils.data.DataLoader", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "phase", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "dataset", "=", "Supervised_Dataloader", "(", "config", ",", "phase", ")", "\n", "if", "phase", "==", "'training'", ":", "\n", "            ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "            ", "shuffle", "=", "False", "\n", "", "self", ".", "loader", "=", "DataLoader", "(", "self", ".", "dataset", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "config", ".", "data_loader_workers", ",", "\n", "pin_memory", "=", "config", ".", "pin_memory", ")", "\n", "\n", "self", ".", "num_iterations", "=", "len", "(", "self", ".", "loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.Supervised_Dataset.finalize": [[70, 72], ["None"], "methods", ["None"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.FewShot_Dataloader.__init__": [[75, 110], ["preprocess_dynamic_lab", "print", "preprocess_dynamic_unlab", "shuffle", "print", "numpy.concatenate", "numpy.concatenate", "print", "print", "print", "print", "preprocess_dynamic_lab", "print", "preprocess_dynamic_lab", "numpy.unique", "len", "len", "len", "len", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.unique", "numpy.unique", "numpy.repeat", "numpy.repeat"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_unlab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "phase", ")", ":", "\n", "\n", "        ", "assert", "phase", "in", "[", "'training'", ",", "'validating'", ",", "'testing'", "]", "\n", "self", ".", "phase", "=", "phase", "\n", "if", "phase", "==", "'training'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "label", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ")", "\n", "print", "(", "\"Label unique:\"", ",", "np", ".", "unique", "(", "self", ".", "label", ")", ")", "\n", "self", ".", "patches_unlab", "=", "preprocess_dynamic_unlab", "(", "config", ".", "data_directory", ",", "config", ".", "extraction_step", ",", "\n", "config", ".", "patch_shape", ",", "config", ".", "number_unlab_images_training", ")", "\n", "self", ".", "patches_unlab", "=", "shuffle", "(", "self", ".", "patches_unlab", ",", "random_state", "=", "0", ")", "\n", "factor", "=", "len", "(", "self", ".", "patches_unlab", ")", "//", "len", "(", "self", ".", "patches", ")", "\n", "print", "(", "\"Factor for labeled images:\"", ",", "factor", ")", "\n", "rem", "=", "len", "(", "self", ".", "patches_unlab", ")", "%", "len", "(", "self", ".", "patches", ")", "\n", "temp", "=", "self", ".", "patches", "[", ":", "rem", "]", "\n", "self", ".", "patches", "=", "np", ".", "concatenate", "(", "(", "np", ".", "repeat", "(", "self", ".", "patches", ",", "factor", ",", "axis", "=", "0", ")", ",", "temp", ")", ",", "axis", "=", "0", ")", "\n", "temp", "=", "self", ".", "label", "[", ":", "rem", "]", "\n", "self", ".", "label", "=", "np", ".", "concatenate", "(", "(", "np", ".", "repeat", "(", "self", ".", "label", ",", "factor", ",", "axis", "=", "0", ")", ",", "temp", ")", ",", "axis", "=", "0", ")", "\n", "assert", "(", "self", ".", "patches", ".", "shape", "==", "self", ".", "patches_unlab", ".", "shape", ")", "\n", "print", "(", "\"Data_shape:\"", ",", "self", ".", "patches", ".", "shape", ",", "self", ".", "patches_unlab", ".", "shape", ")", "\n", "print", "(", "\"Data lab max and min:\"", ",", "np", ".", "max", "(", "self", ".", "patches", ")", ",", "np", ".", "min", "(", "self", ".", "patches", ")", ")", "\n", "print", "(", "\"Data unlab max and min:\"", ",", "np", ".", "max", "(", "self", ".", "patches_unlab", ")", ",", "np", ".", "min", "(", "self", ".", "patches_unlab", ")", ")", "\n", "print", "(", "\"Label unique:\"", ",", "np", ".", "unique", "(", "self", ".", "label", ")", ")", "\n", "\n", "", "if", "phase", "==", "'validating'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "label", ",", "self", ".", "whole_vol", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ",", "validating", "=", "True", ")", "\n", "print", "(", "\"Label unique:\"", ",", "np", ".", "unique", "(", "self", ".", "label", ")", ")", "\n", "\n", "", "if", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "patches", ",", "self", ".", "whole_vol", "=", "preprocess_dynamic_lab", "(", "config", ".", "data_directory", ",", "config", ".", "seed", ",", "config", ".", "num_classes", ",", "config", ".", "extraction_step", ",", "config", ".", "patch_shape", ",", "config", ".", "number_images_training", ",", "testing", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.FewShot_Dataloader.__len__": [[113, 115], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "patches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.FewShot_Dataloader.__getitem__": [[116, 123], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'training'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "patches_unlab", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", "\n", "", "if", "self", ".", "phase", "==", "'validating'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", ",", "self", ".", "whole_vol", "\n", "", "if", "self", ".", "phase", "==", "'testing'", ":", "\n", "            ", "return", "self", ".", "patches", "[", "index", "]", ",", "self", ".", "whole_vol", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.FewShot_Dataset.__init__": [[125, 140], ["dataloader.FewShot_Dataloader", "torch.utils.data.DataLoader", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "phase", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "dataset", "=", "FewShot_Dataloader", "(", "config", ",", "phase", ")", "\n", "if", "phase", "==", "'training'", ":", "\n", "            ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "            ", "shuffle", "=", "False", "\n", "", "self", ".", "loader", "=", "DataLoader", "(", "self", ".", "dataset", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "config", ".", "data_loader_workers", ",", "\n", "pin_memory", "=", "config", ".", "pin_memory", ")", "\n", "\n", "self", ".", "num_iterations", "=", "len", "(", "self", ".", "loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.datasets.dataloader.FewShot_Dataset.finalize": [[141, 143], ["None"], "methods", ["None"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.__init__": [[29, 83], ["agents.base.BaseAgent.__init__", "graphs.models.generator.Generator", "graphs.models.discriminator.Discriminator", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "normal_gan.NormalGAN_Model.logger.info", "random.seed", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "normal_gan.NormalGAN_Model.generator.parameters", "normal_gan.NormalGAN_Model.discriminator.parameters", "normal_gan.NormalGAN_Model.logger.info", "normal_gan.NormalGAN_Model.generator.cuda", "normal_gan.NormalGAN_Model.discriminator.cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "random.randint", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "normal_gan.NormalGAN_Model.logger.info", "utils.misc.print_cuda_statistics", "torch.device", "torch.device", "torch.device", "torch.device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "normal_gan.NormalGAN_Model.logger.info", "normal_gan.NormalGAN_Model.load_checkpoint", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.print_cuda_statistics", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "self", ".", "config", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "config", ")", "# Segmenation Network", "\n", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "testloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"testing\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "trainloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"training\"", ")", "\n", "self", ".", "valloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"validating\"", ")", "\n", "\n", "# optimizer", "\n", "", "self", ".", "g_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_G", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1G", ",", "self", ".", "config", ".", "beta2G", ")", ")", "\n", "self", ".", "d_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_D", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1D", ",", "self", ".", "config", ".", "beta2D", ")", ")", "\n", "# counter initialization", "\n", "self", ".", "current_epoch", "=", "0", "\n", "self", ".", "best_validation_dice", "=", "0", "\n", "self", ".", "current_iteration", "=", "0", "\n", "\n", "self", ".", "is_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "self", ".", "is_cuda", "and", "not", "self", ".", "config", ".", "cuda", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"WARNING: You have a CUDA device, so you should probably enable CUDA\"", ")", "\n", "\n", "", "self", ".", "cuda", "=", "self", ".", "is_cuda", "&", "self", ".", "config", ".", "cuda", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "generator", "=", "self", ".", "generator", ".", "cuda", "(", ")", "\n", "self", ".", "discriminator", "=", "self", ".", "discriminator", ".", "cuda", "(", ")", "\n", "\n", "", "class_weights", "=", "torch", ".", "tensor", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "class_weights", "=", "torch", ".", "FloatTensor", "(", "class_weights", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "class_weights", ")", "\n", "\n", "# set the manual seed for torch", "\n", "if", "not", "self", ".", "config", ".", "seed", ":", "\n", "            ", "self", ".", "manual_seed", "=", "random", ".", "randint", "(", "1", ",", "10000", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "manual_seed", "=", "self", ".", "config", ".", "seed", "\n", "", "self", ".", "logger", ".", "info", "(", "\"seed: %d\"", ",", "self", ".", "manual_seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "manual_seed", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "config", ".", "gpu_device", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****GPU-CUDA***** \"", ")", "\n", "print_cuda_statistics", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "torch", ".", "manual_seed", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****CPU***** \"", ")", "\n", "\n", "", "if", "(", "self", ".", "config", ".", "load_chkpt", "==", "True", ")", ":", "\n", "            ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.load_checkpoint": [[84, 104], ["normal_gan.NormalGAN_Model.logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "normal_gan.NormalGAN_Model.generator.load_state_dict", "normal_gan.NormalGAN_Model.discriminator.load_state_dict", "normal_gan.NormalGAN_Model.logger.info", "os.path.join", "normal_gan.NormalGAN_Model.logger.info", "normal_gan.NormalGAN_Model.logger.info", "os.path.join"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "phase", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "phase", "==", "'training'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'checkpoint.pth.tar'", ")", "\n", "", "elif", "phase", "==", "'testing'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'model_best.pth.tar'", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Loading checkpoint '{}'\"", ".", "format", "(", "filename", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "self", ".", "current_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "self", ".", "discriminator", ".", "load_state_dict", "(", "checkpoint", "[", "'discriminator'", "]", ")", "\n", "self", ".", "manual_seed", "=", "checkpoint", "[", "'manual_seed'", "]", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Checkpoint loaded successfully from '{}' at (epoch {})\\n\"", "\n", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"No checkpoint exists from '{}'. Skipping...\"", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"**First time to train**\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.save_checkpoint": [[105, 118], ["torch.save", "torch.save", "torch.save", "torch.save", "normal_gan.NormalGAN_Model.generator.state_dict", "normal_gan.NormalGAN_Model.discriminator.state_dict", "os.path.join", "print", "shutil.copyfile"], "methods", ["None"], ["", "", "def", "save_checkpoint", "(", "self", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "file_name", "=", "\"checkpoint.pth.tar\"", "\n", "state", "=", "{", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'generator'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'discriminator'", ":", "self", ".", "discriminator", ".", "state_dict", "(", ")", ",", "\n", "'manual_seed'", ":", "self", ".", "manual_seed", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "file_name", ")", ")", "\n", "if", "is_best", ":", "\n", "            ", "print", "(", "\"SAVING BEST CHECKPOINT !!!\\n\"", ")", "\n", "shutil", ".", "copyfile", "(", "self", ".", "config", ".", "checkpoint_dir", "+", "file_name", ",", "\n", "self", ".", "config", ".", "checkpoint_dir", "+", "'model_best.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.run": [[119, 128], ["normal_gan.NormalGAN_Model.train", "normal_gan.NormalGAN_Model.load_checkpoint", "normal_gan.NormalGAN_Model.test", "normal_gan.NormalGAN_Model.logger.info"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "self", ".", "config", ".", "phase", "==", "'training'", ":", "\n", "                ", "self", ".", "train", "(", ")", "\n", "", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "                ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "self", ".", "test", "(", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"You have entered CTRL+C.. Wait to finalize\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.train": [[129, 137], ["range", "normal_gan.NormalGAN_Model.train_one_epoch", "normal_gan.NormalGAN_Model.save_checkpoint", "normal_gan.NormalGAN_Model.validate"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train_one_epoch", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.validate"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "current_epoch", ",", "self", ".", "config", ".", "epochs", ")", ":", "\n", "            ", "self", ".", "current_epoch", "=", "epoch", "\n", "self", ".", "current_iteration", "=", "0", "\n", "self", ".", "train_one_epoch", "(", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "if", "(", "self", ".", "current_epoch", "%", "self", ".", "config", ".", "validation_every_epoch", "==", "0", ")", ":", "\n", "                ", "self", ".", "validate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.train_one_epoch": [[138, 213], ["tqdm.tqdm.tqdm", "normal_gan.NormalGAN_Model.generator.train", "normal_gan.NormalGAN_Model.discriminator.train", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "enumerate", "tqdm.tqdm.tqdm.close", "normal_gan.NormalGAN_Model.logger.info", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable().long", "torch.autograd.Variable().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "normal_gan.NormalGAN_Model.generator", "normal_gan.NormalGAN_Model.discriminator", "normal_gan.NormalGAN_Model.criterion", "normal_gan.NormalGAN_Model.discriminator", "normal_gan.NormalGAN_Model.discriminator", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "normal_gan.NormalGAN_Model.d_optim.zero_grad", "discriminator_loss.backward", "normal_gan.NormalGAN_Model.d_optim.step", "normal_gan.NormalGAN_Model.discriminator", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "normal_gan.NormalGAN_Model.g_optim.zero_grad", "normal_gan.NormalGAN_Model.d_optim.zero_grad", "generator_loss.backward", "normal_gan.NormalGAN_Model.g_optim.step", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "print", "patches_lab.cuda.cuda.cuda", "patches_unlab.cuda.cuda.cuda", "labels.cuda.cuda.cuda", "patches_unlab.cuda.cuda.float", "noise_vector.cuda.cuda.cuda", "normal_gan.NormalGAN_Model.detach", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "generator_loss.item", "discriminator_loss.item", "normal_gan.NormalGAN_Model.item", "unlab_loss.item", "fake_loss.item", "str", "torch.autograd.Variable", "torch.autograd.Variable", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.softplus", "torch.softplus", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "generator_loss.item", "discriminator_loss.item", "normal_gan.NormalGAN_Model.item", "unlab_loss.item", "fake_loss.item", "numpy.random.uniform", "torch.softplus", "torch.softplus", "torch.softplus", "torch.softplus", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.generator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update"], ["", "", "", "def", "train_one_epoch", "(", "self", ")", ":", "\n", "# initialize tqdm batch", "\n", "        ", "tqdm_batch", "=", "tqdm", "(", "self", ".", "trainloader", ".", "loader", ",", "total", "=", "self", ".", "trainloader", ".", "num_iterations", ",", "desc", "=", "\"epoch-{}-\"", ".", "format", "(", "self", ".", "current_epoch", ")", ")", "\n", "\n", "self", ".", "generator", ".", "train", "(", ")", "\n", "self", ".", "discriminator", ".", "train", "(", ")", "\n", "epoch_loss_gen", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_dis", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_ce", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_unlab", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_fake", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "curr_it", ",", "(", "patches_lab", ",", "patches_unlab", ",", "labels", ")", "in", "enumerate", "(", "tqdm_batch", ")", ":", "\n", "#y = torch.full((self.batch_size,), self.real_label)", "\n", "            ", "if", "self", ".", "cuda", ":", "\n", "                ", "patches_lab", "=", "patches_lab", ".", "cuda", "(", ")", "\n", "patches_unlab", "=", "patches_unlab", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "patches_lab", "=", "Variable", "(", "patches_lab", ")", "\n", "patches_unlab", "=", "Variable", "(", "patches_unlab", ".", "float", "(", ")", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "noise_vector", "=", "torch", ".", "tensor", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "[", "self", ".", "config", ".", "batch_size", ",", "self", ".", "config", ".", "noise_dim", "]", ")", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "noise_vector", "=", "noise_vector", ".", "cuda", "(", ")", "\n", "", "patches_fake", "=", "self", ".", "generator", "(", "noise_vector", ")", "\n", "\n", "## Discriminator", "\n", "# Supervised loss", "\n", "lab_output", ",", "lab_output_sofmax", "=", "self", ".", "discriminator", "(", "patches_lab", ")", "\n", "lab_loss", "=", "self", ".", "criterion", "(", "lab_output", ",", "labels", ")", "\n", "\n", "unlab_output", ",", "unlab_output_softmax", "=", "self", ".", "discriminator", "(", "patches_unlab", ")", "\n", "fake_output", ",", "fake_output_softmax", "=", "self", ".", "discriminator", "(", "patches_fake", ".", "detach", "(", ")", ")", "\n", "\n", "# Unlabeled Loss and Fake loss", "\n", "unlab_lsp", "=", "torch", ".", "logsumexp", "(", "unlab_output", ",", "dim", "=", "1", ")", "\n", "fake_lsp", "=", "torch", ".", "logsumexp", "(", "fake_output", ",", "dim", "=", "1", ")", "\n", "unlab_loss", "=", "-", "0.5", "*", "torch", ".", "mean", "(", "unlab_lsp", ")", "+", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "unlab_lsp", ",", "1", ")", ")", "\n", "fake_loss", "=", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "fake_lsp", ",", "1", ")", ")", "\n", "discriminator_loss", "=", "lab_loss", "+", "unlab_loss", "+", "fake_loss", "\n", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "discriminator_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optim", ".", "step", "(", ")", "\n", "\n", "## Generator", "\n", "fake_output", ",", "fake_output_softmax", "=", "self", ".", "discriminator", "(", "patches_fake", ")", "\n", "fake_lsp", "=", "torch", ".", "logsumexp", "(", "fake_output", ",", "dim", "=", "1", ")", "\n", "generator_loss", "=", "-", "0.5", "*", "torch", ".", "mean", "(", "fake_lsp", ")", "+", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "fake_lsp", ",", "1", ")", ")", "\n", "\n", "self", ".", "g_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "generator_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optim", ".", "step", "(", ")", "\n", "\n", "epoch_loss_gen", ".", "update", "(", "generator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_dis", ".", "update", "(", "discriminator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_ce", ".", "update", "(", "lab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_unlab", ".", "update", "(", "unlab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_fake", ".", "update", "(", "fake_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "current_iteration", "+=", "1", "\n", "\n", "print", "(", "\"Epoch: {0}, Iteration: {1}/{2}, Gen loss: {3}, Dis loss: {4} :: CE loss {5}, Unlab loss: {6}, Fake loss: {7}\"", ".", "format", "(", "\n", "self", ".", "current_epoch", ",", "self", ".", "current_iteration", ",", "self", ".", "trainloader", ".", "num_iterations", ",", "generator_loss", ".", "item", "(", ")", ",", "discriminator_loss", ".", "item", "(", ")", ",", "lab_loss", ".", "item", "(", ")", ",", "unlab_loss", ".", "item", "(", ")", ",", "fake_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "tqdm_batch", ".", "close", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Training at epoch-\"", "+", "str", "(", "self", ".", "current_epoch", ")", "+", "\" | \"", "+", "\" Generator loss: \"", "+", "str", "(", "epoch_loss_gen", ".", "val", ")", "+", "\" Discriminator loss: \"", "+", "str", "(", "epoch_loss_dis", ".", "val", ")", "+", "\" CE loss: \"", "+", "str", "(", "epoch_loss_ce", ".", "val", ")", "+", "\" Unlab loss: \"", "+", "str", "(", "epoch_loss_unlab", ".", "val", ")", "+", "\" Fake loss: \"", "+", "str", "(", "epoch_loss_fake", ".", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.validate": [[214, 248], ["normal_gan.NormalGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "val_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "normal_gan.NormalGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "normal_gan.NormalGAN_Model.save_checkpoint", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "valloader", ".", "dataset", ".", "label", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "valloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "label", ",", "_", ")", "in", "enumerate", "(", "self", ".", "valloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Validating.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "valloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "current_validation_dice", "=", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", "\n", "if", "(", "self", ".", "best_validation_dice", "<", "current_validation_dice", ")", ":", "\n", "            ", "self", ".", "best_validation_dice", "=", "current_validation_dice", "\n", "self", ".", "save_checkpoint", "(", "is_best", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.test": [[249, 278], ["normal_gan.NormalGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "test_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "normal_gan.NormalGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator"], ["", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "testloader", ".", "dataset", ".", "patches", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "testloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "_", ")", "in", "enumerate", "(", "self", ".", "testloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Testing.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "testloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "test_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "test_image_pred", "=", "test_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "test_image_pred", ",", "(", "test_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Test Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.normal_gan.NormalGAN_Model.finalize": [[280, 290], ["normal_gan.NormalGAN_Model.logger.info", "normal_gan.NormalGAN_Model.save_checkpoint", "normal_gan.NormalGAN_Model.testloader.finalize"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.finalize"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Finalize all the operations of the 2 Main classes of the process the operator and the data loader\n        :return:\n        \"\"\"", "\n", "self", ".", "logger", ".", "info", "(", "\"Please wait while finalizing the operation.. Thank you\"", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "# self.summary_writer.export_scalars_to_json(\"{}all_scalars.json\".format(self.config.summary_dir))", "\n", "# self.summary_writer.close()", "\n", "self", ".", "testloader", ".", "finalize", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.__init__": [[12, 15], ["logging.getLogger"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "\"Agent\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.load_checkpoint": [[16, 23], ["None"], "methods", ["None"], ["", "def", "load_checkpoint", "(", "self", ",", "file_name", ")", ":", "\n", "        ", "\"\"\"\n        Latest checkpoint loader\n        :param file_name: name of the checkpoint file\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.save_checkpoint": [[24, 32], ["None"], "methods", ["None"], ["", "def", "save_checkpoint", "(", "self", ",", "file_name", "=", "\"checkpoint.pth.tar\"", ",", "is_best", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Checkpoint saver\n        :param file_name: name of the checkpoint file\n        :param is_best: boolean flag to indicate whether current checkpoint's metric is the best so far\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.run": [[33, 39], ["None"], "methods", ["None"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The main operator\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.train": [[40, 46], ["None"], "methods", ["None"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Main training loop\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.train_one_epoch": [[47, 53], ["None"], "methods", ["None"], ["", "def", "train_one_epoch", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        One epoch of training\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.validate": [[54, 60], ["None"], "methods", ["None"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        One cycle of model validation\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.base.BaseAgent.finalize": [[61, 67], ["None"], "methods", ["None"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Finalizes all the operations of the 2 Main classes of the process, the operator and the data loader\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.__init__": [[31, 88], ["agents.base.BaseAgent.__init__", "graphs.models.generator.Generator", "graphs.models.encoder.Encoder", "graphs.models.discriminator.Discriminator", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "bad_gan.BADGAN_Model.logger.info", "random.seed", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "bad_gan.BADGAN_Model.generator.parameters", "bad_gan.BADGAN_Model.discriminator.parameters", "bad_gan.BADGAN_Model.encoder.parameters", "bad_gan.BADGAN_Model.logger.info", "bad_gan.BADGAN_Model.generator.cuda", "bad_gan.BADGAN_Model.discriminator.cuda", "bad_gan.BADGAN_Model.encoder.cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "random.randint", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "bad_gan.BADGAN_Model.logger.info", "utils.misc.print_cuda_statistics", "torch.device", "torch.device", "torch.device", "torch.device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "bad_gan.BADGAN_Model.logger.info", "bad_gan.BADGAN_Model.load_checkpoint", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.print_cuda_statistics", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "self", ".", "config", ")", "\n", "self", ".", "encoder", "=", "Encoder", "(", "self", ".", "config", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "config", ")", "# Segmenation Network", "\n", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "testloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"testing\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "trainloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"training\"", ")", "\n", "self", ".", "valloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"validating\"", ")", "\n", "\n", "# optimizer", "\n", "", "self", ".", "g_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_G", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1G", ",", "self", ".", "config", ".", "beta2G", ")", ")", "\n", "self", ".", "d_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_D", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1D", ",", "self", ".", "config", ".", "beta2D", ")", ")", "\n", "self", ".", "e_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_E", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1E", ",", "self", ".", "config", ".", "beta2E", ")", ")", "\n", "# counter initialization", "\n", "self", ".", "current_epoch", "=", "0", "\n", "self", ".", "best_validation_dice", "=", "0", "\n", "self", ".", "current_iteration", "=", "0", "\n", "\n", "self", ".", "is_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "self", ".", "is_cuda", "and", "not", "self", ".", "config", ".", "cuda", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"WARNING: You have a CUDA device, so you should probably enable CUDA\"", ")", "\n", "\n", "", "self", ".", "cuda", "=", "self", ".", "is_cuda", "&", "self", ".", "config", ".", "cuda", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "generator", "=", "self", ".", "generator", ".", "cuda", "(", ")", "\n", "self", ".", "discriminator", "=", "self", ".", "discriminator", ".", "cuda", "(", ")", "\n", "self", ".", "encoder", "=", "self", ".", "encoder", ".", "cuda", "(", ")", "\n", "\n", "", "class_weights", "=", "torch", ".", "tensor", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "class_weights", "=", "torch", ".", "FloatTensor", "(", "class_weights", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "class_weights", ")", "\n", "\n", "# set the manual seed for torch", "\n", "if", "not", "self", ".", "config", ".", "seed", ":", "\n", "            ", "self", ".", "manual_seed", "=", "random", ".", "randint", "(", "1", ",", "10000", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "manual_seed", "=", "self", ".", "config", ".", "seed", "\n", "", "self", ".", "logger", ".", "info", "(", "\"seed: %d\"", ",", "self", ".", "manual_seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "manual_seed", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "config", ".", "gpu_device", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****GPU-CUDA***** \"", ")", "\n", "print_cuda_statistics", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "torch", ".", "manual_seed", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****CPU***** \"", ")", "\n", "\n", "", "if", "(", "self", ".", "config", ".", "load_chkpt", "==", "True", ")", ":", "\n", "            ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.load_checkpoint": [[89, 109], ["bad_gan.BADGAN_Model.logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "bad_gan.BADGAN_Model.generator.load_state_dict", "bad_gan.BADGAN_Model.discriminator.load_state_dict", "bad_gan.BADGAN_Model.logger.info", "os.path.join", "bad_gan.BADGAN_Model.logger.info", "bad_gan.BADGAN_Model.logger.info", "os.path.join"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "phase", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "phase", "==", "'training'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'checkpoint.pth.tar'", ")", "\n", "", "elif", "phase", "==", "'testing'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'model_best.pth.tar'", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Loading checkpoint '{}'\"", ".", "format", "(", "filename", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "self", ".", "current_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "self", ".", "discriminator", ".", "load_state_dict", "(", "checkpoint", "[", "'discriminator'", "]", ")", "\n", "self", ".", "manual_seed", "=", "checkpoint", "[", "'manual_seed'", "]", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Checkpoint loaded successfully from '{}' at (epoch {})\\n\"", "\n", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"No checkpoint exists from '{}'. Skipping...\"", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"**First time to train**\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.save_checkpoint": [[110, 123], ["torch.save", "torch.save", "torch.save", "torch.save", "bad_gan.BADGAN_Model.generator.state_dict", "bad_gan.BADGAN_Model.discriminator.state_dict", "os.path.join", "print", "shutil.copyfile"], "methods", ["None"], ["", "", "def", "save_checkpoint", "(", "self", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "file_name", "=", "\"checkpoint.pth.tar\"", "\n", "state", "=", "{", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'generator'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'discriminator'", ":", "self", ".", "discriminator", ".", "state_dict", "(", ")", ",", "\n", "'manual_seed'", ":", "self", ".", "manual_seed", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "file_name", ")", ")", "\n", "if", "is_best", ":", "\n", "            ", "print", "(", "\"SAVING BEST CHECKPOINT !!!\\n\"", ")", "\n", "shutil", ".", "copyfile", "(", "self", ".", "config", ".", "checkpoint_dir", "+", "file_name", ",", "\n", "self", ".", "config", ".", "checkpoint_dir", "+", "'model_best.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.run": [[124, 133], ["bad_gan.BADGAN_Model.train", "bad_gan.BADGAN_Model.load_checkpoint", "bad_gan.BADGAN_Model.test", "bad_gan.BADGAN_Model.logger.info"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "self", ".", "config", ".", "phase", "==", "'training'", ":", "\n", "                ", "self", ".", "train", "(", ")", "\n", "", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "                ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "self", ".", "test", "(", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"You have entered CTRL+C.. Wait to finalize\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.train": [[134, 142], ["range", "bad_gan.BADGAN_Model.train_one_epoch", "bad_gan.BADGAN_Model.save_checkpoint", "bad_gan.BADGAN_Model.validate"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train_one_epoch", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.validate"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "current_epoch", ",", "self", ".", "config", ".", "epochs", ")", ":", "\n", "            ", "self", ".", "current_epoch", "=", "epoch", "\n", "self", ".", "current_iteration", "=", "0", "\n", "self", ".", "train_one_epoch", "(", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "if", "(", "self", ".", "current_epoch", "%", "self", ".", "config", ".", "validation_every_epoch", "==", "0", ")", ":", "\n", "                ", "self", ".", "validate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.train_one_epoch": [[143, 228], ["tqdm.tqdm.tqdm", "bad_gan.BADGAN_Model.generator.train", "bad_gan.BADGAN_Model.discriminator.train", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "enumerate", "tqdm.tqdm.tqdm.close", "bad_gan.BADGAN_Model.logger.info", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable().long", "torch.autograd.Variable().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "bad_gan.BADGAN_Model.generator", "bad_gan.BADGAN_Model.discriminator", "bad_gan.BADGAN_Model.criterion", "bad_gan.BADGAN_Model.discriminator", "bad_gan.BADGAN_Model.discriminator", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "bad_gan.BADGAN_Model.d_optim.zero_grad", "discriminator_loss.backward", "bad_gan.BADGAN_Model.d_optim.step", "bad_gan.BADGAN_Model.discriminator", "bad_gan.BADGAN_Model.discriminator", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "bad_gan.BADGAN_Model.encoder", "graphs.losses.gaussian_nll.gaussian_nll", "bad_gan.BADGAN_Model.g_optim.zero_grad", "bad_gan.BADGAN_Model.e_optim.zero_grad", "generator_loss.backward", "bad_gan.BADGAN_Model.g_optim.step", "bad_gan.BADGAN_Model.e_optim.step", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "print", "patches_lab.cuda.cuda.cuda", "patches_unlab.cuda.cuda.cuda", "labels.cuda.cuda.cuda", "patches_unlab.cuda.cuda.float", "noise_vector.cuda.cuda.cuda", "bad_gan.BADGAN_Model.detach", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "generator_loss.item", "discriminator_loss.item", "bad_gan.BADGAN_Model.item", "unlab_loss.item", "fake_loss.item", "str", "torch.autograd.Variable", "torch.autograd.Variable", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.softplus", "torch.softplus", "generator_loss.item", "discriminator_loss.item", "bad_gan.BADGAN_Model.item", "unlab_loss.item", "fake_loss.item", "graphs.losses.gaussian_nll.gaussian_nll.item", "numpy.random.uniform", "torch.softplus", "torch.softplus", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.generator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.encoder", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.gaussian_nll", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update"], ["", "", "", "def", "train_one_epoch", "(", "self", ")", ":", "\n", "# initialize tqdm batch", "\n", "        ", "tqdm_batch", "=", "tqdm", "(", "self", ".", "trainloader", ".", "loader", ",", "total", "=", "self", ".", "trainloader", ".", "num_iterations", ",", "desc", "=", "\"epoch-{}-\"", ".", "format", "(", "self", ".", "current_epoch", ")", ")", "\n", "\n", "self", ".", "generator", ".", "train", "(", ")", "\n", "self", ".", "discriminator", ".", "train", "(", ")", "\n", "epoch_loss_gen", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_dis", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_ce", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_unlab", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_fake", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "curr_it", ",", "(", "patches_lab", ",", "patches_unlab", ",", "labels", ")", "in", "enumerate", "(", "tqdm_batch", ")", ":", "\n", "#y = torch.full((self.batch_size,), self.real_label)", "\n", "            ", "if", "self", ".", "cuda", ":", "\n", "                ", "patches_lab", "=", "patches_lab", ".", "cuda", "(", ")", "\n", "patches_unlab", "=", "patches_unlab", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "patches_lab", "=", "Variable", "(", "patches_lab", ")", "\n", "patches_unlab", "=", "Variable", "(", "patches_unlab", ".", "float", "(", ")", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "noise_vector", "=", "torch", ".", "tensor", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "[", "self", ".", "config", ".", "batch_size", ",", "self", ".", "config", ".", "noise_dim", "]", ")", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "noise_vector", "=", "noise_vector", ".", "cuda", "(", ")", "\n", "", "patches_fake", "=", "self", ".", "generator", "(", "noise_vector", ")", "\n", "\n", "## Discriminator", "\n", "# Supervised loss", "\n", "lab_output", ",", "lab_output_sofmax", "=", "self", ".", "discriminator", "(", "patches_lab", ")", "\n", "lab_loss", "=", "self", ".", "criterion", "(", "lab_output", ",", "labels", ")", "\n", "\n", "unlab_output", ",", "unlab_output_softmax", "=", "self", ".", "discriminator", "(", "patches_unlab", ")", "\n", "fake_output", ",", "fake_output_softmax", "=", "self", ".", "discriminator", "(", "patches_fake", ".", "detach", "(", ")", ")", "\n", "\n", "# Unlabeled Loss and Fake loss", "\n", "unlab_lsp", "=", "torch", ".", "logsumexp", "(", "unlab_output", ",", "dim", "=", "1", ")", "\n", "fake_lsp", "=", "torch", ".", "logsumexp", "(", "fake_output", ",", "dim", "=", "1", ")", "\n", "unlab_loss", "=", "-", "0.5", "*", "torch", ".", "mean", "(", "unlab_lsp", ")", "+", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "unlab_lsp", ",", "1", ")", ")", "\n", "fake_loss", "=", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "fake_lsp", ",", "1", ")", ")", "\n", "discriminator_loss", "=", "lab_loss", "+", "unlab_loss", "+", "fake_loss", "\n", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "discriminator_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optim", ".", "step", "(", ")", "\n", "\n", "## Generator", "\n", "_", ",", "_", ",", "unlab_feature", "=", "self", ".", "discriminator", "(", "patches_unlab", ",", "get_feature", "=", "True", ")", "\n", "_", ",", "_", ",", "fake_feature", "=", "self", ".", "discriminator", "(", "patches_fake", ",", "get_feature", "=", "True", ")", "\n", "\n", "# Feature matching loss", "\n", "unlab_feature", ",", "fake_feature", "=", "torch", ".", "mean", "(", "unlab_feature", ",", "0", ")", ",", "torch", ".", "mean", "(", "fake_feature", ",", "0", ")", "\n", "fm_loss", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "unlab_feature", "-", "fake_feature", ")", ")", "\n", "\n", "# Variational Inferece loss", "\n", "mu", ",", "log_sigma", "=", "self", ".", "encoder", "(", "patches_fake", ")", "\n", "vi_loss", "=", "gaussian_nll", "(", "mu", ",", "log_sigma", ",", "noise_vector", ")", "\n", "\n", "generator_loss", "=", "fm_loss", "+", "self", ".", "config", ".", "vi_loss_weight", "*", "vi_loss", "\n", "\n", "self", ".", "g_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optim", ".", "zero_grad", "(", ")", "\n", "generator_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optim", ".", "step", "(", ")", "\n", "self", ".", "e_optim", ".", "step", "(", ")", "\n", "\n", "epoch_loss_gen", ".", "update", "(", "generator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_dis", ".", "update", "(", "discriminator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_ce", ".", "update", "(", "lab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_unlab", ".", "update", "(", "unlab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_fake", ".", "update", "(", "fake_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "current_iteration", "+=", "1", "\n", "\n", "print", "(", "\"Epoch: {0}, Iteration: {1}/{2}, Gen loss: {3:.3f}, Dis loss: {4:.3f} :: CE loss {5:.3f}, Unlab loss: {6:.3f}, Fake loss: {7:.3f}, VI loss: {8:.3f}\"", ".", "format", "(", "\n", "self", ".", "current_epoch", ",", "self", ".", "current_iteration", ",", "self", ".", "trainloader", ".", "num_iterations", ",", "generator_loss", ".", "item", "(", ")", ",", "discriminator_loss", ".", "item", "(", ")", ",", "lab_loss", ".", "item", "(", ")", ",", "unlab_loss", ".", "item", "(", ")", ",", "fake_loss", ".", "item", "(", ")", ",", "vi_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "tqdm_batch", ".", "close", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Training at epoch-\"", "+", "str", "(", "self", ".", "current_epoch", ")", "+", "\" | \"", "+", "\" Generator loss: \"", "+", "str", "(", "epoch_loss_gen", ".", "val", ")", "+", "\" Discriminator loss: \"", "+", "str", "(", "epoch_loss_dis", ".", "val", ")", "+", "\" CE loss: \"", "+", "str", "(", "epoch_loss_ce", ".", "val", ")", "+", "\" Unlab loss: \"", "+", "str", "(", "epoch_loss_unlab", ".", "val", ")", "+", "\" Fake loss: \"", "+", "str", "(", "epoch_loss_fake", ".", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.validate": [[229, 263], ["bad_gan.BADGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "val_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "bad_gan.BADGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "bad_gan.BADGAN_Model.save_checkpoint", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "valloader", ".", "dataset", ".", "label", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "valloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "label", ",", "_", ")", "in", "enumerate", "(", "self", ".", "valloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Validating.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "valloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "current_validation_dice", "=", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", "\n", "if", "(", "self", ".", "best_validation_dice", "<", "current_validation_dice", ")", ":", "\n", "            ", "self", ".", "best_validation_dice", "=", "current_validation_dice", "\n", "self", ".", "save_checkpoint", "(", "is_best", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.test": [[264, 293], ["bad_gan.BADGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "test_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "bad_gan.BADGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator"], ["", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "testloader", ".", "dataset", ".", "patches", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "testloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "_", ")", "in", "enumerate", "(", "self", ".", "testloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Testing.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "testloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "test_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "test_image_pred", "=", "test_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "test_image_pred", ",", "(", "test_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Test Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.bad_gan.BADGAN_Model.finalize": [[295, 302], ["bad_gan.BADGAN_Model.logger.info", "bad_gan.BADGAN_Model.save_checkpoint"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Finalize all the operations of the 2 Main classes of the process the operator and the data loader\n        :return:\n        \"\"\"", "\n", "self", ".", "logger", ".", "info", "(", "\"Please wait while finalizing the operation.. Thank you\"", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "# self.summary_writer.export_scalars_to_json(\"{}all_scalars.json\".format(self.config.summary_dir))", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.__init__": [[29, 83], ["agents.base.BaseAgent.__init__", "graphs.models.generator.Generator", "graphs.models.discriminator.Discriminator", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "fm_gan.FMGAN_Model.logger.info", "random.seed", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "datasets.dataloader.FewShot_Dataset", "fm_gan.FMGAN_Model.generator.parameters", "fm_gan.FMGAN_Model.discriminator.parameters", "fm_gan.FMGAN_Model.logger.info", "fm_gan.FMGAN_Model.generator.cuda", "fm_gan.FMGAN_Model.discriminator.cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "random.randint", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "fm_gan.FMGAN_Model.logger.info", "utils.misc.print_cuda_statistics", "torch.device", "torch.device", "torch.device", "torch.device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "fm_gan.FMGAN_Model.logger.info", "fm_gan.FMGAN_Model.load_checkpoint", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.print_cuda_statistics", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "self", ".", "config", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "config", ")", "# Segmenation Network", "\n", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "testloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"testing\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "trainloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"training\"", ")", "\n", "self", ".", "valloader", "=", "FewShot_Dataset", "(", "self", ".", "config", ",", "\"validating\"", ")", "\n", "\n", "# optimizer", "\n", "", "self", ".", "g_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_G", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1G", ",", "self", ".", "config", ".", "beta2G", ")", ")", "\n", "self", ".", "d_optim", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate_D", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1D", ",", "self", ".", "config", ".", "beta2D", ")", ")", "\n", "# counter initialization", "\n", "self", ".", "current_epoch", "=", "0", "\n", "self", ".", "best_validation_dice", "=", "0", "\n", "self", ".", "current_iteration", "=", "0", "\n", "\n", "self", ".", "is_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "self", ".", "is_cuda", "and", "not", "self", ".", "config", ".", "cuda", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"WARNING: You have a CUDA device, so you should probably enable CUDA\"", ")", "\n", "\n", "", "self", ".", "cuda", "=", "self", ".", "is_cuda", "&", "self", ".", "config", ".", "cuda", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "generator", "=", "self", ".", "generator", ".", "cuda", "(", ")", "\n", "self", ".", "discriminator", "=", "self", ".", "discriminator", ".", "cuda", "(", ")", "\n", "\n", "", "class_weights", "=", "torch", ".", "tensor", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "class_weights", "=", "torch", ".", "FloatTensor", "(", "class_weights", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "class_weights", ")", "\n", "\n", "# set the manual seed for torch", "\n", "if", "not", "self", ".", "config", ".", "seed", ":", "\n", "            ", "self", ".", "manual_seed", "=", "random", ".", "randint", "(", "1", ",", "10000", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "manual_seed", "=", "self", ".", "config", ".", "seed", "\n", "", "self", ".", "logger", ".", "info", "(", "\"seed: %d\"", ",", "self", ".", "manual_seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "manual_seed", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "config", ".", "gpu_device", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****GPU-CUDA***** \"", ")", "\n", "print_cuda_statistics", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "torch", ".", "manual_seed", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****CPU***** \"", ")", "\n", "\n", "", "if", "(", "self", ".", "config", ".", "load_chkpt", "==", "True", ")", ":", "\n", "            ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.load_checkpoint": [[84, 104], ["fm_gan.FMGAN_Model.logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "fm_gan.FMGAN_Model.generator.load_state_dict", "fm_gan.FMGAN_Model.discriminator.load_state_dict", "fm_gan.FMGAN_Model.logger.info", "os.path.join", "fm_gan.FMGAN_Model.logger.info", "fm_gan.FMGAN_Model.logger.info", "os.path.join"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "phase", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "phase", "==", "'training'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'checkpoint.pth.tar'", ")", "\n", "", "elif", "phase", "==", "'testing'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'model_best.pth.tar'", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Loading checkpoint '{}'\"", ".", "format", "(", "filename", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "self", ".", "current_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "self", ".", "discriminator", ".", "load_state_dict", "(", "checkpoint", "[", "'discriminator'", "]", ")", "\n", "self", ".", "manual_seed", "=", "checkpoint", "[", "'manual_seed'", "]", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Checkpoint loaded successfully from '{}' at (epoch {})\\n\"", "\n", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"No checkpoint exists from '{}'. Skipping...\"", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"**First time to train**\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.save_checkpoint": [[105, 118], ["torch.save", "torch.save", "torch.save", "torch.save", "fm_gan.FMGAN_Model.generator.state_dict", "fm_gan.FMGAN_Model.discriminator.state_dict", "os.path.join", "print", "shutil.copyfile"], "methods", ["None"], ["", "", "def", "save_checkpoint", "(", "self", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "file_name", "=", "\"checkpoint.pth.tar\"", "\n", "state", "=", "{", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'generator'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'discriminator'", ":", "self", ".", "discriminator", ".", "state_dict", "(", ")", ",", "\n", "'manual_seed'", ":", "self", ".", "manual_seed", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "file_name", ")", ")", "\n", "if", "is_best", ":", "\n", "            ", "print", "(", "\"SAVING BEST CHECKPOINT !!!\\n\"", ")", "\n", "shutil", ".", "copyfile", "(", "self", ".", "config", ".", "checkpoint_dir", "+", "file_name", ",", "\n", "self", ".", "config", ".", "checkpoint_dir", "+", "'model_best.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.run": [[119, 128], ["fm_gan.FMGAN_Model.train", "fm_gan.FMGAN_Model.load_checkpoint", "fm_gan.FMGAN_Model.test", "fm_gan.FMGAN_Model.logger.info"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "self", ".", "config", ".", "phase", "==", "'training'", ":", "\n", "                ", "self", ".", "train", "(", ")", "\n", "", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "                ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "self", ".", "test", "(", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"You have entered CTRL+C.. Wait to finalize\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.train": [[129, 137], ["range", "fm_gan.FMGAN_Model.train_one_epoch", "fm_gan.FMGAN_Model.save_checkpoint", "fm_gan.FMGAN_Model.validate"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train_one_epoch", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.validate"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "current_epoch", ",", "self", ".", "config", ".", "epochs", ")", ":", "\n", "            ", "self", ".", "current_epoch", "=", "epoch", "\n", "self", ".", "current_iteration", "=", "0", "\n", "self", ".", "train_one_epoch", "(", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "if", "(", "self", ".", "current_epoch", "%", "self", ".", "config", ".", "validation_every_epoch", "==", "0", ")", ":", "\n", "                ", "self", ".", "validate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.train_one_epoch": [[138, 216], ["tqdm.tqdm.tqdm", "fm_gan.FMGAN_Model.generator.train", "fm_gan.FMGAN_Model.discriminator.train", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "enumerate", "tqdm.tqdm.tqdm.close", "fm_gan.FMGAN_Model.logger.info", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable().long", "torch.autograd.Variable().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "fm_gan.FMGAN_Model.generator", "fm_gan.FMGAN_Model.discriminator", "fm_gan.FMGAN_Model.criterion", "fm_gan.FMGAN_Model.discriminator", "fm_gan.FMGAN_Model.discriminator", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "fm_gan.FMGAN_Model.d_optim.zero_grad", "discriminator_loss.backward", "fm_gan.FMGAN_Model.d_optim.step", "fm_gan.FMGAN_Model.discriminator", "fm_gan.FMGAN_Model.discriminator", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "fm_gan.FMGAN_Model.g_optim.zero_grad", "fm_gan.FMGAN_Model.d_optim.zero_grad", "torch.mean.backward", "torch.mean.backward", "fm_gan.FMGAN_Model.g_optim.step", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "utils.metrics.AverageMeter.update", "print", "patches_lab.cuda.cuda.cuda", "patches_unlab.cuda.cuda.cuda", "labels.cuda.cuda.cuda", "patches_unlab.cuda.cuda.float", "noise_vector.cuda.cuda.cuda", "fm_gan.FMGAN_Model.detach", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean.item", "torch.mean.item", "discriminator_loss.item", "fm_gan.FMGAN_Model.item", "unlab_loss.item", "fake_loss.item", "str", "torch.autograd.Variable", "torch.autograd.Variable", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.softplus", "torch.softplus", "torch.mean.item", "torch.mean.item", "discriminator_loss.item", "fm_gan.FMGAN_Model.item", "unlab_loss.item", "fake_loss.item", "numpy.random.uniform", "torch.softplus", "torch.softplus", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.generator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update"], ["", "", "", "def", "train_one_epoch", "(", "self", ")", ":", "\n", "# initialize tqdm batch", "\n", "        ", "tqdm_batch", "=", "tqdm", "(", "self", ".", "trainloader", ".", "loader", ",", "total", "=", "self", ".", "trainloader", ".", "num_iterations", ",", "desc", "=", "\"epoch-{}-\"", ".", "format", "(", "self", ".", "current_epoch", ")", ")", "\n", "\n", "self", ".", "generator", ".", "train", "(", ")", "\n", "self", ".", "discriminator", ".", "train", "(", ")", "\n", "epoch_loss_gen", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_dis", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_ce", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_unlab", "=", "AverageMeter", "(", ")", "\n", "epoch_loss_fake", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "curr_it", ",", "(", "patches_lab", ",", "patches_unlab", ",", "labels", ")", "in", "enumerate", "(", "tqdm_batch", ")", ":", "\n", "#y = torch.full((self.batch_size,), self.real_label)", "\n", "            ", "if", "self", ".", "cuda", ":", "\n", "                ", "patches_lab", "=", "patches_lab", ".", "cuda", "(", ")", "\n", "patches_unlab", "=", "patches_unlab", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "patches_lab", "=", "Variable", "(", "patches_lab", ")", "\n", "patches_unlab", "=", "Variable", "(", "patches_unlab", ".", "float", "(", ")", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "noise_vector", "=", "torch", ".", "tensor", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "[", "self", ".", "config", ".", "batch_size", ",", "self", ".", "config", ".", "noise_dim", "]", ")", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "noise_vector", "=", "noise_vector", ".", "cuda", "(", ")", "\n", "", "patches_fake", "=", "self", ".", "generator", "(", "noise_vector", ")", "\n", "\n", "## Discriminator", "\n", "# Supervised loss", "\n", "lab_output", ",", "lab_output_sofmax", "=", "self", ".", "discriminator", "(", "patches_lab", ")", "\n", "lab_loss", "=", "self", ".", "criterion", "(", "lab_output", ",", "labels", ")", "\n", "\n", "unlab_output", ",", "unlab_output_softmax", "=", "self", ".", "discriminator", "(", "patches_unlab", ")", "\n", "fake_output", ",", "fake_output_softmax", "=", "self", ".", "discriminator", "(", "patches_fake", ".", "detach", "(", ")", ")", "\n", "\n", "# Unlabeled Loss and Fake loss", "\n", "unlab_lsp", "=", "torch", ".", "logsumexp", "(", "unlab_output", ",", "dim", "=", "1", ")", "\n", "fake_lsp", "=", "torch", ".", "logsumexp", "(", "fake_output", ",", "dim", "=", "1", ")", "\n", "unlab_loss", "=", "-", "0.5", "*", "torch", ".", "mean", "(", "unlab_lsp", ")", "+", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "unlab_lsp", ",", "1", ")", ")", "\n", "fake_loss", "=", "0.5", "*", "torch", ".", "mean", "(", "F", ".", "softplus", "(", "fake_lsp", ",", "1", ")", ")", "\n", "discriminator_loss", "=", "lab_loss", "+", "unlab_loss", "+", "fake_loss", "\n", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "discriminator_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optim", ".", "step", "(", ")", "\n", "\n", "## Generator", "\n", "_", ",", "_", ",", "unlab_feature", "=", "self", ".", "discriminator", "(", "patches_unlab", ",", "get_feature", "=", "True", ")", "\n", "_", ",", "_", ",", "fake_feature", "=", "self", ".", "discriminator", "(", "patches_fake", ",", "get_feature", "=", "True", ")", "\n", "\n", "# Feature matching loss", "\n", "unlab_feature", ",", "fake_feature", "=", "torch", ".", "mean", "(", "unlab_feature", ",", "0", ")", ",", "torch", ".", "mean", "(", "fake_feature", ",", "0", ")", "\n", "generator_loss", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "unlab_feature", "-", "fake_feature", ")", ")", "\n", "\n", "self", ".", "g_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "generator_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optim", ".", "step", "(", ")", "\n", "\n", "epoch_loss_gen", ".", "update", "(", "generator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_dis", ".", "update", "(", "discriminator_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_ce", ".", "update", "(", "lab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_unlab", ".", "update", "(", "unlab_loss", ".", "item", "(", ")", ")", "\n", "epoch_loss_fake", ".", "update", "(", "fake_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "current_iteration", "+=", "1", "\n", "\n", "print", "(", "\"\\nEpoch: {0}, Iteration: {1}/{2}, Gen loss: {3:.3f}, Dis loss: {4:.3f} :: CE loss {5:.3f}, Unlab loss: {6:.3f}, Fake loss: {7:.3f}\"", ".", "format", "(", "\n", "self", ".", "current_epoch", ",", "self", ".", "current_iteration", ",", "self", ".", "trainloader", ".", "num_iterations", ",", "generator_loss", ".", "item", "(", ")", ",", "discriminator_loss", ".", "item", "(", ")", ",", "lab_loss", ".", "item", "(", ")", ",", "unlab_loss", ".", "item", "(", ")", ",", "fake_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "tqdm_batch", ".", "close", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Training at epoch-\"", "+", "str", "(", "self", ".", "current_epoch", ")", "+", "\" | \"", "+", "\" Generator loss: \"", "+", "str", "(", "epoch_loss_gen", ".", "val", ")", "+", "\" Discriminator loss: \"", "+", "str", "(", "epoch_loss_dis", ".", "val", ")", "+", "\" CE loss: \"", "+", "str", "(", "epoch_loss_ce", ".", "val", ")", "+", "\" Unlab loss: \"", "+", "str", "(", "epoch_loss_unlab", ".", "val", ")", "+", "\" Fake loss: \"", "+", "str", "(", "epoch_loss_fake", ".", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.validate": [[217, 251], ["fm_gan.FMGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "val_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "fm_gan.FMGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "fm_gan.FMGAN_Model.save_checkpoint", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "valloader", ".", "dataset", ".", "label", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "valloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "label", ",", "_", ")", "in", "enumerate", "(", "self", ".", "valloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Validating.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "valloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "current_validation_dice", "=", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", "\n", "if", "(", "self", ".", "best_validation_dice", "<", "current_validation_dice", ")", ":", "\n", "            ", "self", ".", "best_validation_dice", "=", "current_validation_dice", "\n", "self", ".", "save_checkpoint", "(", "is_best", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.test": [[252, 281], ["fm_gan.FMGAN_Model.discriminator.eval", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "test_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "fm_gan.FMGAN_Model.discriminator", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "print", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator"], ["", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "testloader", ".", "dataset", ".", "patches", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "testloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "_", ")", "in", "enumerate", "(", "self", ".", "testloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "discriminator", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Testing.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "testloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "test_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "test_image_pred", "=", "test_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "test_image_pred", ",", "(", "test_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Test Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.fm_gan.FMGAN_Model.finalize": [[283, 290], ["fm_gan.FMGAN_Model.logger.info", "fm_gan.FMGAN_Model.save_checkpoint"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Finalize all the operations of the 2 Main classes of the process the operator and the data loader\n        :return:\n        \"\"\"", "\n", "self", ".", "logger", ".", "info", "(", "\"Please wait while finalizing the operation.. Thank you\"", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "# self.summary_writer.export_scalars_to_json(\"{}all_scalars.json\".format(self.config.summary_dir))", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.__init__": [[28, 80], ["agents.base.BaseAgent.__init__", "graphs.models.discriminator.Discriminator", "torch.optim.Adam", "torch.cuda.is_available", "torch.tensor", "torch.nn.CrossEntropyLoss", "supervised_baseline.Supervised_Model.logger.info", "random.seed", "datasets.dataloader.Supervised_Dataset", "datasets.dataloader.Supervised_Dataset", "datasets.dataloader.Supervised_Dataset", "supervised_baseline.Supervised_Model.net.parameters", "supervised_baseline.Supervised_Model.logger.info", "supervised_baseline.Supervised_Model.net.cuda", "torch.FloatTensor().cuda", "random.randint", "torch.device", "torch.cuda.set_device", "torch.cuda.manual_seed_all", "supervised_baseline.Supervised_Model.logger.info", "utils.misc.print_cuda_statistics", "torch.device", "torch.manual_seed", "supervised_baseline.Supervised_Model.logger.info", "supervised_baseline.Supervised_Model.load_checkpoint", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.misc.print_cuda_statistics", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n", "self", ".", "net", "=", "Discriminator", "(", "self", ".", "config", ")", "# Segmenation Network", "\n", "if", "config", ".", "phase", "==", "'testing'", ":", "\n", "            ", "self", ".", "testloader", "=", "Supervised_Dataset", "(", "self", ".", "config", ",", "\"testing\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "trainloader", "=", "Supervised_Dataset", "(", "self", ".", "config", ",", "\"training\"", ")", "\n", "self", ".", "valloader", "=", "Supervised_Dataset", "(", "self", ".", "config", ",", "\"validating\"", ")", "\n", "\n", "# optimizer", "\n", "", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "learning_rate", ",", "betas", "=", "(", "self", ".", "config", ".", "beta1", ",", "self", ".", "config", ".", "beta2", ")", ")", "\n", "\n", "# counter initialization", "\n", "self", ".", "current_epoch", "=", "0", "\n", "self", ".", "best_validation_dice", "=", "0", "\n", "self", ".", "current_iteration", "=", "0", "\n", "\n", "self", ".", "is_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "self", ".", "is_cuda", "and", "not", "self", ".", "config", ".", "cuda", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"WARNING: You have a CUDA device, so you should probably enable CUDA\"", ")", "\n", "\n", "", "self", ".", "cuda", "=", "self", ".", "is_cuda", "&", "self", ".", "config", ".", "cuda", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "net", "=", "self", ".", "net", ".", "cuda", "(", ")", "\n", "\n", "", "class_weights", "=", "torch", ".", "tensor", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "class_weights", "=", "torch", ".", "FloatTensor", "(", "class_weights", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "class_weights", ")", "\n", "\n", "# set the manual seed for torch", "\n", "if", "not", "self", ".", "config", ".", "seed", ":", "\n", "            ", "self", ".", "manual_seed", "=", "random", ".", "randint", "(", "1", ",", "10000", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "manual_seed", "=", "self", ".", "config", ".", "seed", "\n", "", "self", ".", "logger", ".", "info", "(", "\"seed: %d\"", ",", "self", ".", "manual_seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "manual_seed", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "config", ".", "gpu_device", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****GPU-CUDA***** \"", ")", "\n", "print_cuda_statistics", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "torch", ".", "manual_seed", "(", "self", ".", "manual_seed", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Program will run on *****CPU***** \"", ")", "\n", "\n", "", "if", "(", "self", ".", "config", ".", "load_chkpt", "==", "True", ")", ":", "\n", "            ", "self", ".", "load_checkpoint", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint": [[81, 100], ["supervised_baseline.Supervised_Model.logger.info", "torch.load", "supervised_baseline.Supervised_Model.net.load_state_dict", "supervised_baseline.Supervised_Model.logger.info", "os.path.join", "supervised_baseline.Supervised_Model.logger.info", "supervised_baseline.Supervised_Model.logger.info", "os.path.join"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "phase", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "phase", "==", "'training'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'checkpoint.pth.tar'", ")", "\n", "", "elif", "phase", "==", "'testing'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "'model_best.pth.tar'", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Loading checkpoint '{}'\"", ".", "format", "(", "filename", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "self", ".", "current_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "self", ".", "net", ".", "load_state_dict", "(", "checkpoint", "[", "'net'", "]", ")", "\n", "self", ".", "manual_seed", "=", "checkpoint", "[", "'manual_seed'", "]", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Checkpoint loaded successfully from '{}' at (epoch {})\\n\"", "\n", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"No checkpoint exists from '{}'. Skipping...\"", ".", "format", "(", "self", ".", "config", ".", "checkpoint_dir", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"**First time to train**\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint": [[101, 113], ["torch.save", "supervised_baseline.Supervised_Model.net.state_dict", "os.path.join", "print", "shutil.copyfile"], "methods", ["None"], ["", "", "def", "save_checkpoint", "(", "self", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "file_name", "=", "\"checkpoint.pth.tar\"", "\n", "state", "=", "{", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'net'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'manual_seed'", ":", "self", ".", "manual_seed", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "os", ".", "path", ".", "join", "(", "self", ".", "config", ".", "checkpoint_dir", ",", "file_name", ")", ")", "\n", "if", "is_best", ":", "\n", "            ", "print", "(", "\"SAVING BEST CHECKPOINT !!!\"", ")", "\n", "shutil", ".", "copyfile", "(", "self", ".", "config", ".", "checkpoint_dir", "+", "file_name", ",", "\n", "self", ".", "config", ".", "checkpoint_dir", "+", "'model_best.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run": [[114, 123], ["supervised_baseline.Supervised_Model.train", "supervised_baseline.Supervised_Model.load_checkpoint", "supervised_baseline.Supervised_Model.test", "supervised_baseline.Supervised_Model.logger.info"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.load_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "self", ".", "config", ".", "phase", "==", "'training'", ":", "\n", "                ", "self", ".", "train", "(", ")", "\n", "", "if", "self", ".", "config", ".", "phase", "==", "'testing'", ":", "\n", "                ", "self", ".", "load_checkpoint", "(", "self", ".", "config", ".", "phase", ")", "\n", "self", ".", "test", "(", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"You have entered CTRL+C.. Wait to finalize\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train": [[124, 132], ["range", "supervised_baseline.Supervised_Model.train_one_epoch", "supervised_baseline.Supervised_Model.save_checkpoint", "supervised_baseline.Supervised_Model.validate"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train_one_epoch", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.validate"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "current_epoch", ",", "self", ".", "config", ".", "epochs", ")", ":", "\n", "            ", "self", ".", "current_epoch", "=", "epoch", "\n", "self", ".", "current_iteration", "=", "0", "\n", "self", ".", "train_one_epoch", "(", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "if", "(", "self", ".", "current_epoch", "%", "self", ".", "config", ".", "validation_every_epoch", "==", "0", ")", ":", "\n", "                ", "self", ".", "validate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.train_one_epoch": [[133, 164], ["tqdm.tqdm.tqdm", "supervised_baseline.Supervised_Model.net.train", "utils.metrics.AverageMeter", "enumerate", "tqdm.tqdm.tqdm.close", "supervised_baseline.Supervised_Model.logger.info", "torch.autograd.Variable", "torch.autograd.Variable().long", "supervised_baseline.Supervised_Model.net.zero_grad", "supervised_baseline.Supervised_Model.net", "supervised_baseline.Supervised_Model.criterion", "supervised_baseline.Supervised_Model.backward", "supervised_baseline.Supervised_Model.optimizer.step", "utils.metrics.AverageMeter.update", "print", "patches.cuda.cuda.cuda", "labels.cuda.cuda.cuda", "supervised_baseline.Supervised_Model.item", "str", "torch.autograd.Variable", "supervised_baseline.Supervised_Model.item", "str"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.utils.metrics.AverageMeterList.update"], ["", "", "", "def", "train_one_epoch", "(", "self", ")", ":", "\n", "# initialize tqdm batch", "\n", "        ", "tqdm_batch", "=", "tqdm", "(", "self", ".", "trainloader", ".", "loader", ",", "total", "=", "self", ".", "trainloader", ".", "num_iterations", ",", "desc", "=", "\"epoch-{}-\"", ".", "format", "(", "self", ".", "current_epoch", ")", ")", "\n", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "epoch_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "curr_it", ",", "(", "patches", ",", "labels", ")", "in", "enumerate", "(", "tqdm_batch", ")", ":", "\n", "#y = torch.full((self.batch_size,), self.real_label)", "\n", "            ", "if", "self", ".", "cuda", ":", "\n", "                ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "patches", "=", "Variable", "(", "patches", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "self", ".", "net", ".", "zero_grad", "(", ")", "\n", "output_logits", ",", "output_prob", "=", "self", ".", "net", "(", "patches", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "output_logits", ",", "labels", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "epoch_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "self", ".", "current_iteration", "+=", "1", "\n", "print", "(", "\"Epoch: {0}, Iteration: {1}/{2}, Loss: {3}\"", ".", "format", "(", "self", ".", "current_epoch", ",", "self", ".", "current_iteration", ",", "self", ".", "trainloader", ".", "num_iterations", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "tqdm_batch", ".", "close", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Training at epoch-\"", "+", "str", "(", "self", ".", "current_epoch", ")", "+", "\" | \"", "+", "\"Model loss: \"", "+", "str", "(", "epoch_loss", ".", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.validate": [[165, 198], ["supervised_baseline.Supervised_Model.net.eval", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "val_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "supervised_baseline.Supervised_Model.net", "torch.argmax().cpu", "print", "range", "supervised_baseline.Supervised_Model.save_checkpoint", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "valloader", ".", "dataset", ".", "label", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "valloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "label", ",", "_", ")", "in", "enumerate", "(", "self", ".", "valloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "net", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Validating.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "valloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "current_validation_dice", "=", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", "\n", "if", "(", "self", ".", "best_validation_dice", "<", "current_validation_dice", ")", ":", "\n", "            ", "self", ".", "best_validation_dice", "=", "current_validation_dice", "\n", "self", ".", "save_checkpoint", "(", "is_best", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.test": [[199, 228], ["supervised_baseline.Supervised_Model.net.eval", "torch.zeros", "enumerate", "prediction_image.numpy.numpy.numpy", "utils.recompose.recompose3D_overlap", "test_image_pred.astype.astype.astype", "numpy.reshape", "numpy.reshape", "list", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "patches.cuda.cuda.cuda", "supervised_baseline.Supervised_Model.net", "torch.argmax().cpu", "print", "range", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap"], ["", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "prediction_image", "=", "torch", ".", "zeros", "(", "[", "self", ".", "testloader", ".", "dataset", ".", "patches", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "config", ".", "patch_shape", "[", "2", "]", "]", ")", "\n", "whole_vol", "=", "self", ".", "testloader", ".", "dataset", ".", "whole_vol", "\n", "for", "batch_number", ",", "(", "patches", ",", "_", ")", "in", "enumerate", "(", "self", ".", "testloader", ".", "loader", ")", ":", "\n", "            ", "patches", "=", "patches", ".", "cuda", "(", ")", "\n", "_", ",", "batch_prediction_softmax", "=", "self", ".", "net", "(", "patches", ")", "\n", "batch_prediction", "=", "torch", ".", "argmax", "(", "batch_prediction_softmax", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "prediction_image", "[", "batch_number", "*", "self", ".", "config", ".", "batch_size", ":", "(", "batch_number", "+", "1", ")", "*", "self", ".", "config", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "batch_prediction", "\n", "\n", "print", "(", "\"Testing.. [{0}/{1}]\"", ".", "format", "(", "batch_number", ",", "self", ".", "testloader", ".", "num_iterations", ")", ")", "\n", "\n", "", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", "=", "self", ".", "config", ".", "volume_shape", "\n", "prediction_image", "=", "prediction_image", ".", "numpy", "(", ")", "\n", "test_image_pred", "=", "recompose3D_overlap", "(", "prediction_image", ",", "vol_shape_x", ",", "vol_shape_y", ",", "vol_shape_z", ",", "self", ".", "config", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "config", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "config", ".", "extraction_step", "[", "2", "]", ")", "\n", "test_image_pred", "=", "test_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred2d", "=", "np", ".", "reshape", "(", "test_image_pred", ",", "(", "test_image_pred", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "whole_vol", ",", "(", "whole_vol", ".", "shape", "[", "0", "]", "*", "vol_shape_x", "*", "vol_shape_y", "*", "vol_shape_z", ")", ")", "\n", "\n", "classes", "=", "list", "(", "range", "(", "0", ",", "self", ".", "config", ".", "num_classes", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "classes", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Test Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.finalize": [[230, 237], ["supervised_baseline.Supervised_Model.logger.info", "supervised_baseline.Supervised_Model.save_checkpoint"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.save_checkpoint"], ["", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Finalize all the operations of the 2 Main classes of the process the operator and the data loader\n        :return:\n        \"\"\"", "\n", "self", ".", "logger", ".", "info", "(", "\"Please wait while finalizing the operation.. Thank you\"", ")", "\n", "self", ".", "save_checkpoint", "(", ")", "\n", "# self.summary_writer.export_scalars_to_json(\"{}all_scalars.json\".format(self.config.summary_dir))", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.graphs.weights_initializer.weights_init": [[11, 18], ["classname.find", "m.weight.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.graphs.weights_initializer.weights_init_normal": [[20, 31], ["isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["", "", "def", "weights_init_normal", "(", "m", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the weights of Convolution3D and BatchNorm3D with normal.\n    :param m:\n    :return:\n    \"\"\"", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.graphs.weights_initializer.init_model_weights": [[33, 44], ["m.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "function", ["None"], ["", "", "def", "init_model_weights", "(", "m", ")", ":", "\n", "### initialize", "\n", "    ", "for", "m", "in", "m", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.discriminator.Discriminator.__init__": [[11, 55], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout3d", "torch.Dropout3d", "torch.Dropout3d", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_ConvTranspose3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_ConvTranspose3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_ConvTranspose3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d", "graphs.models.custom_functions.weight_norm.WN_Conv3d"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "input_channel", "=", "self", ".", "config", ".", "num_modalities", "\n", "self", ".", "num_classes", "=", "self", ".", "config", ".", "num_classes", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", "\n", "kernel_size_deconv", "=", "(", "2", ",", "2", ",", "2", ")", "\n", "stride_deconv", "=", "(", "2", ",", "2", ",", "2", ")", "\n", "out_channels", "=", "32", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "0.2", ",", "inplace", "=", "False", ")", "\n", "self", ".", "final_activation", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n", "# Defining the convolutional operations", "\n", "self", ".", "pool", "=", "nn", ".", "AvgPool3d", "(", "2", ")", "\n", "\n", "self", ".", "encoder0", "=", "WN_Conv3d", "(", "self", ".", "input_channel", ",", "out_channels", ",", "kernel_size", ")", "\n", "self", ".", "encoder1", "=", "WN_Conv3d", "(", "out_channels", ",", "out_channels", ",", "kernel_size", ")", "\n", "\n", "self", ".", "encoder2", "=", "WN_Conv3d", "(", "out_channels", ",", "out_channels", "*", "(", "2", ")", ",", "kernel_size", ")", "\n", "self", ".", "encoder3", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", ")", ",", "out_channels", "*", "(", "2", ")", ",", "kernel_size", ")", "\n", "\n", "self", ".", "encoder4", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", ")", ",", "out_channels", "*", "(", "2", "**", "2", ")", ",", "kernel_size", ")", "\n", "self", ".", "encoder5", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", "**", "2", ")", ",", "out_channels", "*", "(", "2", "**", "2", ")", ",", "kernel_size", ")", "\n", "\n", "self", ".", "encoder6", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", "**", "2", ")", ",", "out_channels", "*", "(", "2", "**", "3", ")", ",", "kernel_size", ")", "\n", "self", ".", "encoder7", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", "**", "3", ")", ",", "out_channels", "*", "(", "2", "**", "3", ")", ",", "kernel_size", ")", "\n", "\n", "self", ".", "decoder1", "=", "WN_ConvTranspose3d", "(", "out_channels", "*", "(", "2", "**", "3", ")", ",", "out_channels", "*", "(", "2", "**", "3", ")", ",", "kernel_size_deconv", ",", "stride_deconv", ")", "\n", "#encoder5 + decoder1", "\n", "self", ".", "encoder8", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", "**", "2", ")", "+", "out_channels", "*", "(", "2", "**", "3", ")", ",", "out_channels", "*", "(", "2", "**", "2", ")", ",", "kernel_size", ")", "\n", "self", ".", "encoder9", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", "**", "2", ")", ",", "out_channels", "*", "(", "2", "**", "2", ")", ",", "kernel_size", ")", "\n", "\n", "self", ".", "decoder2", "=", "WN_ConvTranspose3d", "(", "out_channels", "*", "(", "2", "**", "2", ")", ",", "out_channels", "*", "(", "2", "**", "2", ")", ",", "kernel_size_deconv", ",", "stride_deconv", ")", "\n", "#encoder3 + decoder2", "\n", "self", ".", "encoder10", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", ")", "+", "out_channels", "*", "(", "2", "**", "2", ")", ",", "out_channels", "*", "(", "2", ")", ",", "kernel_size", ")", "\n", "self", ".", "encoder11", "=", "WN_Conv3d", "(", "out_channels", "*", "(", "2", ")", ",", "out_channels", "*", "(", "2", ")", ",", "kernel_size", ")", "\n", "\n", "self", ".", "decoder3", "=", "WN_ConvTranspose3d", "(", "out_channels", "*", "(", "2", ")", ",", "out_channels", "*", "(", "2", ")", ",", "kernel_size_deconv", ",", "stride_deconv", ")", "\n", "#encoder1 + decoder3", "\n", "self", ".", "encoder12", "=", "WN_Conv3d", "(", "out_channels", "+", "out_channels", "*", "(", "2", ")", ",", "out_channels", ",", "kernel_size", ")", "\n", "self", ".", "encoder13", "=", "WN_Conv3d", "(", "out_channels", ",", "out_channels", ",", "kernel_size", ")", "\n", "\n", "self", ".", "final_conv", "=", "WN_Conv3d", "(", "out_channels", ",", "self", ".", "num_classes", ",", "kernel_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.discriminator.Discriminator.forward": [[56, 99], ["discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.pool", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.pool", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.pool", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.decoder1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.decoder2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.decoder3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.lrelu", "discriminator.Discriminator.final_conv", "discriminator.Discriminator.encoder0", "discriminator.Discriminator.encoder1", "discriminator.Discriminator.encoder2", "discriminator.Discriminator.encoder3", "discriminator.Discriminator.encoder4", "discriminator.Discriminator.encoder5", "discriminator.Discriminator.encoder6", "discriminator.Discriminator.encoder7", "discriminator.Discriminator.dropout", "discriminator.Discriminator.encoder8", "discriminator.Discriminator.encoder9", "discriminator.Discriminator.encoder10", "discriminator.Discriminator.encoder11", "discriminator.Discriminator.encoder12", "discriminator.Discriminator.encoder13", "discriminator.Discriminator.dropout", "discriminator.Discriminator.final_activation", "discriminator.Discriminator.final_activation"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu"], ["", "def", "forward", "(", "self", ",", "input", ",", "get_feature", "=", "False", ",", "use_dropout", "=", "False", ")", ":", "\n", "        ", "conv0", "=", "self", ".", "lrelu", "(", "self", ".", "encoder0", "(", "input", ")", ")", "\n", "conv1", "=", "self", ".", "lrelu", "(", "self", ".", "encoder1", "(", "conv0", ")", ")", "\n", "pool1", "=", "self", ".", "pool", "(", "conv1", ")", "\n", "\n", "conv2", "=", "self", ".", "lrelu", "(", "self", ".", "encoder2", "(", "pool1", ")", ")", "\n", "conv3", "=", "self", ".", "lrelu", "(", "self", ".", "encoder3", "(", "conv2", ")", ")", "\n", "pool3", "=", "self", ".", "pool", "(", "conv3", ")", "\n", "\n", "conv4", "=", "self", ".", "lrelu", "(", "self", ".", "encoder4", "(", "pool3", ")", ")", "\n", "conv5", "=", "self", ".", "lrelu", "(", "self", ".", "encoder5", "(", "conv4", ")", ")", "\n", "pool5", "=", "self", ".", "pool", "(", "conv5", ")", "\n", "\n", "conv6", "=", "self", ".", "lrelu", "(", "self", ".", "encoder6", "(", "pool5", ")", ")", "\n", "conv7", "=", "self", ".", "lrelu", "(", "self", ".", "encoder7", "(", "conv6", ")", ")", "\n", "\n", "if", "use_dropout", ":", "\n", "            ", "conv7", "=", "self", ".", "dropout", "(", "conv7", ")", "\n", "\n", "", "deconv1", "=", "self", ".", "decoder1", "(", "conv7", ")", "\n", "skip_connection1", "=", "torch", ".", "cat", "(", "(", "conv5", ",", "deconv1", ")", ",", "1", ")", "\n", "conv8", "=", "self", ".", "lrelu", "(", "self", ".", "encoder8", "(", "skip_connection1", ")", ")", "\n", "conv9", "=", "self", ".", "lrelu", "(", "self", ".", "encoder9", "(", "conv8", ")", ")", "\n", "\n", "deconv2", "=", "self", ".", "decoder2", "(", "conv9", ")", "\n", "skip_connection2", "=", "torch", ".", "cat", "(", "(", "conv3", ",", "deconv2", ")", ",", "1", ")", "\n", "conv10", "=", "self", ".", "lrelu", "(", "self", ".", "encoder10", "(", "skip_connection2", ")", ")", "\n", "conv11", "=", "self", ".", "lrelu", "(", "self", ".", "encoder11", "(", "conv10", ")", ")", "\n", "\n", "deconv3", "=", "self", ".", "decoder3", "(", "conv11", ")", "\n", "skip_connection3", "=", "torch", ".", "cat", "(", "(", "conv1", ",", "deconv3", ")", ",", "1", ")", "\n", "conv12", "=", "self", ".", "lrelu", "(", "self", ".", "encoder12", "(", "skip_connection3", ")", ")", "\n", "conv13", "=", "self", ".", "lrelu", "(", "self", ".", "encoder13", "(", "conv12", ")", ")", "\n", "\n", "if", "use_dropout", ":", "\n", "            ", "conv13", "=", "self", ".", "dropout", "(", "conv13", ")", "\n", "\n", "", "final_output", "=", "self", ".", "final_conv", "(", "conv13", ")", "\n", "\n", "if", "not", "get_feature", ":", "\n", "            ", "return", "final_output", ",", "self", ".", "final_activation", "(", "final_output", ")", "\n", "", "else", ":", "\n", "            ", "return", "final_output", ",", "self", ".", "final_activation", "(", "final_output", ")", ",", "conv6", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.discriminator.main": [[104, 112], ["json.load", "easydict.EasyDict", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "print", "discriminator.Discriminator", "Discriminator.", "print", "open", "torch.randn", "torch.randn", "torch.randn"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "config", "=", "json", ".", "load", "(", "open", "(", "'../../configs/gan_exp_0.json'", ")", ")", "\n", "config", "=", "edict", "(", "config", ")", "\n", "inp", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "randn", "(", "config", ".", "batch_size", ",", "config", ".", "input_channels", ",", "config", ".", "patch_shape", "[", "0", "]", ",", "config", ".", "patch_shape", "[", "1", "]", ",", "config", ".", "patch_shape", "[", "2", "]", ")", ")", "\n", "print", "(", "inp", ".", "shape", ")", "\n", "netD", "=", "Discriminator", "(", "config", ")", "\n", "out", "=", "netD", "(", "inp", ")", "\n", "print", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.encoder.Encoder.__init__": [[10, 30], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "graphs.models.custom_functions.weight_norm.WN_Linear", "encoder.Encoder.apply"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "kernel_size", "=", "[", "5", ",", "5", ",", "5", "]", "\n", "stride", "=", "[", "2", ",", "2", ",", "2", "]", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "in_channels", "=", "2", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm1", "=", "nn", ".", "BatchNorm3d", "(", "128", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm2", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm3", "=", "nn", ".", "BatchNorm3d", "(", "512", ")", "\n", "\n", "self", ".", "linear", "=", "WN_Linear", "(", "512", ",", "self", ".", "config", ".", "noise_dim", "*", "2", ")", "# (*2) for mean and variance", "\n", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.encoder.Encoder.forward": [[31, 49], ["encoder.Encoder.conv1", "print", "encoder.Encoder.relu", "encoder.Encoder.conv2", "print", "encoder.Encoder.relu", "encoder.Encoder.conv3", "print", "encoder.Encoder.relu", "encoder.Encoder.view", "encoder.Encoder.linear", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "encoder.Encoder.batch_norm1", "encoder.Encoder.batch_norm2", "encoder.Encoder.batch_norm3"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear"], ["", "def", "forward", "(", "self", ",", "patch", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "patch", ")", "\n", "print", "(", "\"************** \"", ",", "out", ".", "shape", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "batch_norm1", "(", "out", ")", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "print", "(", "\"************** \"", ",", "out", ".", "shape", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "batch_norm2", "(", "out", ")", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "print", "(", "\"************** \"", ",", "out", ".", "shape", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "batch_norm3", "(", "out", ")", ")", "\n", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "out", ".", "shape", "[", "1", "]", "*", "out", ".", "shape", "[", "2", "]", "*", "out", ".", "shape", "[", "3", "]", "*", "out", ".", "shape", "[", "4", "]", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "return", "torch", ".", "chunk", "(", "out", ",", "2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.encoder.main": [[54, 62], ["json.load", "easydict.EasyDict", "torch.autograd.Variable", "torch.autograd.Variable", "print", "Generator", "Generator.", "print", "open", "torch.randn", "torch.randn"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "config", "=", "json", ".", "load", "(", "open", "(", "'../../configs/gan_exp_0.json'", ")", ")", "\n", "config", "=", "edict", "(", "config", ")", "\n", "inp", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "randn", "(", "config", ".", "batch_size", ",", "config", ".", "noise_dim", ")", ")", "\n", "print", "(", "inp", ".", "shape", ")", "\n", "netD", "=", "Generator", "(", "config", ")", "\n", "out", "=", "netD", "(", "inp", ")", "\n", "print", "(", "out", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.generator.Generator.__init__": [[10, 36], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "graphs.models.custom_functions.weight_norm.WN_ConvTranspose3d", "torch.Tanh", "torch.Tanh", "generator.Generator.apply", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sh1", ",", "self", ".", "sh2", ",", "self", ".", "sh3", ",", "self", ".", "sh4", "=", "int", "(", "self", ".", "config", ".", "patch_shape", "[", "0", "]", "/", "16", ")", ",", "int", "(", "self", ".", "config", ".", "patch_shape", "[", "0", "]", "/", "8", ")", ",", "int", "(", "self", ".", "config", ".", "patch_shape", "[", "0", "]", "/", "4", ")", ",", "int", "(", "self", ".", "config", ".", "patch_shape", "[", "0", "]", "/", "2", ")", "\n", "kernel_size", "=", "[", "2", ",", "2", ",", "2", "]", "\n", "stride", "=", "[", "2", ",", "2", ",", "2", "]", "\n", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "self", ".", "config", ".", "noise_dim", ",", "self", ".", "sh1", "*", "self", ".", "sh1", "*", "self", ".", "sh1", "*", "512", ")", "\n", "self", ".", "batch_norm0", "=", "nn", ".", "BatchNorm3d", "(", "512", ")", "\n", "\n", "self", ".", "deconv1", "=", "nn", ".", "ConvTranspose3d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm1", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "\n", "self", ".", "deconv2", "=", "nn", ".", "ConvTranspose3d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm2", "=", "nn", ".", "BatchNorm3d", "(", "128", ")", "\n", "\n", "self", ".", "deconv3", "=", "nn", ".", "ConvTranspose3d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "batch_norm3", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "deconv4", "=", "WN_ConvTranspose3d", "(", "64", ",", "self", ".", "config", ".", "num_modalities", ",", "kernel_size", ",", "stride", ")", "\n", "self", ".", "activation", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.generator.Generator.forward": [[37, 59], ["generator.Generator.linear", "generator.Generator.view", "generator.Generator.relu", "generator.Generator.deconv1", "generator.Generator.batch_norm1", "generator.Generator.relu", "generator.Generator.deconv2", "generator.Generator.batch_norm2", "generator.Generator.relu", "generator.Generator.deconv3", "generator.Generator.batch_norm3", "generator.Generator.relu", "generator.Generator.deconv4", "generator.Generator.activation", "generator.Generator.batch_norm0"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "linear", "(", "z", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "512", ",", "self", ".", "sh1", ",", "self", ".", "sh1", ",", "self", ".", "sh1", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "batch_norm0", "(", "out", ")", ")", "\n", "\n", "out", "=", "self", ".", "deconv1", "(", "out", ")", "\n", "out", "=", "self", ".", "batch_norm1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "deconv2", "(", "out", ")", "\n", "out", "=", "self", ".", "batch_norm2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "deconv3", "(", "out", ")", "\n", "out", "=", "self", ".", "batch_norm3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "deconv4", "(", "out", ")", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.models.generator.main": [[64, 72], ["json.load", "easydict.EasyDict", "torch.autograd.Variable", "torch.autograd.Variable", "print", "generator.Generator", "Generator.", "print", "open", "torch.randn", "torch.randn"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "config", "=", "json", ".", "load", "(", "open", "(", "'../../configs/gan_exp_0.json'", ")", ")", "\n", "config", "=", "edict", "(", "config", ")", "\n", "inp", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "randn", "(", "config", ".", "batch_size", ",", "config", ".", "noise_dim", ")", ")", "\n", "print", "(", "inp", ".", "shape", ")", "\n", "netD", "=", "Generator", "(", "config", ")", "\n", "out", "=", "netD", "(", "inp", ")", "\n", "print", "(", "out", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Linear.__init__": [[12, 24], ["torch.Linear.__init__", "weight_norm.WN_Linear._reset_parameters", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "weight_norm.WN_Linear.register_buffer", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d._reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "train_scale", "=", "False", ",", "init_stdv", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "WN_Linear", ",", "self", ")", ".", "__init__", "(", "in_features", ",", "out_features", ",", "bias", "=", "bias", ")", "\n", "if", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", "=", "Parameter", "(", "torch", ".", "ones", "(", "self", ".", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "'weight_scale'", ",", "torch", ".", "Tensor", "(", "out_features", ")", ")", "\n", "\n", "", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "init_mode", "=", "False", "\n", "self", ".", "init_stdv", "=", "init_stdv", "\n", "\n", "self", ".", "_reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Linear._reset_parameters": [[25, 33], ["weight_norm.WN_Linear.weight.data.normal_", "weight_norm.WN_Linear.bias.data.zero_", "weight_norm.WN_Linear.weight_scale.data.fill_", "weight_norm.WN_Linear.weight_scale.fill_"], "methods", ["None"], ["", "def", "_reset_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "std", "=", "0.05", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "if", "self", ".", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", ".", "data", ".", "fill_", "(", "1.", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight_scale", ".", "fill_", "(", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Linear.forward": [[34, 62], ["torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.linear.mean().squeeze", "F.linear.mean().squeeze.expand_as", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "inv_stdv.expand_as", "torch.linear.mean", "weight_norm.WN_Linear.bias.expand_as", "torch.autograd.Variable.unsqueeze", "torch.autograd.Variable.unsqueeze", "torch.autograd.Variable.unsqueeze", "torch.autograd.Variable.unsqueeze", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "train_scale", ":", "\n", "            ", "weight_scale", "=", "self", ".", "weight_scale", "\n", "", "else", ":", "\n", "            ", "weight_scale", "=", "Variable", "(", "self", ".", "weight_scale", ")", "\n", "\n", "# normalize weight matrix and linear projection", "\n", "", "norm_weight", "=", "self", ".", "weight", "*", "(", "weight_scale", ".", "unsqueeze", "(", "1", ")", "/", "torch", ".", "sqrt", "(", "(", "self", ".", "weight", "**", "2", ")", ".", "sum", "(", "1", ")", "+", "1e-6", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", ".", "expand_as", "(", "self", ".", "weight", ")", "\n", "activation", "=", "F", ".", "linear", "(", "input", ",", "norm_weight", ")", "\n", "\n", "if", "self", ".", "init_mode", "==", "True", ":", "\n", "            ", "mean_act", "=", "activation", ".", "mean", "(", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "activation", "=", "activation", "-", "mean_act", ".", "expand_as", "(", "activation", ")", "\n", "\n", "inv_stdv", "=", "self", ".", "init_stdv", "/", "torch", ".", "sqrt", "(", "(", "activation", "**", "2", ")", ".", "mean", "(", "0", ")", "+", "1e-6", ")", ".", "squeeze", "(", "0", ")", "\n", "activation", "=", "activation", "*", "inv_stdv", ".", "expand_as", "(", "activation", ")", "\n", "\n", "if", "self", ".", "train_scale", ":", "\n", "                ", "self", ".", "weight_scale", ".", "data", "=", "self", ".", "weight_scale", ".", "data", "*", "inv_stdv", ".", "data", "\n", "", "else", ":", "\n", "                ", "self", ".", "weight_scale", "=", "self", ".", "weight_scale", "*", "inv_stdv", ".", "data", "\n", "", "self", ".", "bias", ".", "data", "=", "-", "mean_act", ".", "data", "*", "inv_stdv", ".", "data", "\n", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "                ", "activation", "=", "activation", "+", "self", ".", "bias", ".", "expand_as", "(", "activation", ")", "\n", "\n", "", "", "return", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Conv3d.__init__": [[65, 78], ["torch.Conv3d.__init__", "weight_norm.WN_Conv3d._reset_parameters", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "weight_norm.WN_Conv3d.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d._reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "train_scale", "=", "False", ",", "init_stdv", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "WN_Conv3d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "if", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "'weight_scale'", ",", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "\n", "", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "init_mode", "=", "False", "\n", "self", ".", "init_stdv", "=", "init_stdv", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n", "self", ".", "_reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Conv3d._reset_parameters": [[79, 87], ["weight_norm.WN_Conv3d.weight.data.normal_", "weight_norm.WN_Conv3d.bias.data.zero_", "weight_norm.WN_Conv3d.weight_scale.data.fill_", "weight_norm.WN_Conv3d.weight_scale.fill_"], "methods", ["None"], ["", "def", "_reset_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "0.05", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "if", "self", ".", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", ".", "data", ".", "fill_", "(", "1.", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight_scale", ".", "fill_", "(", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_Conv3d.forward": [[88, 125], ["math.ceil", "math.ceil", "math.ceil", "torch.conv3d", "torch.conv3d", "torch.conv3d", "torch.conv3d", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.conv3d.mean().mean().mean().mean().squeeze", "mean_act[].expand_as", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "inv_stdv[].expand_as", "torch.conv3d.mean().mean().mean().mean", "weight_norm.WN_Conv3d.bias[].expand_as", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.conv3d.mean().mean().mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.conv3d.mean().mean", "torch.conv3d.mean"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "train_scale", ":", "\n", "            ", "weight_scale", "=", "self", ".", "weight_scale", "\n", "", "else", ":", "\n", "            ", "weight_scale", "=", "Variable", "(", "self", ".", "weight_scale", ")", "\n", "# normalize weight matrix and linear projection [out x in x h x w x z]", "\n", "# for each output dimension, normalize through (in, h, w, z) = (1, 2, 3, 4) dims", "\n", "\n", "# This is done to ensure padding as \"SAME\"", "\n", "", "pad_h", "=", "math", ".", "ceil", "(", "(", "self", ".", "kernel_size", "[", "0", "]", "-", "input", ".", "shape", "[", "2", "]", "*", "(", "1", "-", "self", ".", "stride", "[", "0", "]", ")", "-", "self", ".", "stride", "[", "0", "]", ")", "/", "2", ")", "\n", "pad_w", "=", "math", ".", "ceil", "(", "(", "self", ".", "kernel_size", "[", "1", "]", "-", "input", ".", "shape", "[", "3", "]", "*", "(", "1", "-", "self", ".", "stride", "[", "1", "]", ")", "-", "self", ".", "stride", "[", "1", "]", ")", "/", "2", ")", "\n", "pad_z", "=", "math", ".", "ceil", "(", "(", "self", ".", "kernel_size", "[", "2", "]", "-", "input", ".", "shape", "[", "4", "]", "*", "(", "1", "-", "self", ".", "stride", "[", "2", "]", ")", "-", "self", ".", "stride", "[", "2", "]", ")", "/", "2", ")", "\n", "padding", "=", "(", "pad_h", ",", "pad_w", ",", "pad_z", ")", "\n", "\n", "norm_weight", "=", "self", ".", "weight", "*", "(", "weight_scale", "[", ":", ",", "None", ",", "None", ",", "None", ",", "None", "]", "/", "torch", ".", "sqrt", "(", "(", "self", ".", "weight", "**", "2", ")", ".", "sum", "(", "4", ")", ".", "sum", "(", "3", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "1", ")", "+", "1e-6", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ")", ".", "expand_as", "(", "self", ".", "weight", ")", "\n", "activation", "=", "F", ".", "conv3d", "(", "input", ",", "norm_weight", ",", "bias", "=", "None", ",", "\n", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "groups", ")", "\n", "\n", "if", "self", ".", "init_mode", "==", "True", ":", "\n", "            ", "mean_act", "=", "activation", ".", "mean", "(", "4", ")", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", ".", "mean", "(", "0", ")", ".", "squeeze", "(", ")", "\n", "activation", "=", "activation", "-", "mean_act", "[", "None", ",", ":", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "inv_stdv", "=", "self", ".", "init_stdv", "/", "torch", ".", "sqrt", "(", "(", "activation", "**", "2", ")", ".", "mean", "(", "4", ")", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", ".", "mean", "(", "0", ")", "+", "1e-6", ")", ".", "squeeze", "(", ")", "\n", "activation", "=", "activation", "*", "inv_stdv", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "if", "self", ".", "train_scale", ":", "\n", "                ", "self", ".", "weight_scale", ".", "data", "=", "self", ".", "weight_scale", ".", "data", "*", "inv_stdv", ".", "data", "\n", "", "else", ":", "\n", "                ", "self", ".", "weight_scale", "=", "self", ".", "weight_scale", "*", "inv_stdv", ".", "data", "\n", "", "self", ".", "bias", ".", "data", "=", "-", "mean_act", ".", "data", "*", "inv_stdv", ".", "data", "\n", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "                ", "activation", "=", "activation", "+", "self", ".", "bias", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "", "", "return", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d.__init__": [[127, 143], ["torch.ConvTranspose3d.__init__", "weight_norm.WN_ConvTranspose3d._reset_parameters", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "weight_norm.WN_ConvTranspose3d.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d._reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "output_padding", "=", "0", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "train_scale", "=", "False", ",", "init_stdv", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "WN_ConvTranspose3d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "output_padding", ",", "groups", ",", "bias", ")", "\n", "if", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "'weight_scale'", ",", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "\n", "", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "init_mode", "=", "False", "\n", "self", ".", "init_stdv", "=", "init_stdv", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "_reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d._reset_parameters": [[144, 152], ["weight_norm.WN_ConvTranspose3d.weight.data.normal_", "weight_norm.WN_ConvTranspose3d.bias.data.zero_", "weight_norm.WN_ConvTranspose3d.weight_scale.data.fill_", "weight_norm.WN_ConvTranspose3d.weight_scale.fill_"], "methods", ["None"], ["", "def", "_reset_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "0.05", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "if", "self", ".", "train_scale", ":", "\n", "            ", "self", ".", "weight_scale", ".", "data", ".", "fill_", "(", "1.", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight_scale", ".", "fill_", "(", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.custom_functions.weight_norm.WN_ConvTranspose3d.forward": [[153, 188], ["weight_norm.WN_ConvTranspose3d._output_padding", "torch.conv_transpose3d", "torch.conv_transpose3d", "torch.conv_transpose3d", "torch.conv_transpose3d", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.conv_transpose3d.mean().mean().mean().mean().squeeze", "mean_act[].expand_as", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "torch.sqrt().squeeze", "inv_stdv[].expand_as", "torch.conv_transpose3d.mean().mean().mean().mean", "weight_norm.WN_ConvTranspose3d.bias[].expand_as", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt().reshape", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.conv_transpose3d.mean().mean().mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.conv_transpose3d.mean().mean", "torch.conv_transpose3d.mean"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "output_size", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "train_scale", ":", "\n", "            ", "weight_scale", "=", "self", ".", "weight_scale", "\n", "", "else", ":", "\n", "            ", "weight_scale", "=", "Variable", "(", "self", ".", "weight_scale", ")", "\n", "\n", "# normalize weight matrix and linear projection [in x out x h x w x z]", "\n", "# for each output dimension, normalize through (in, h, w, z)  = (0, 2, 3, 4) dims", "\n", "", "if", "self", ".", "in_channels", "==", "self", ".", "out_channels", ":", "\n", "            ", "norm_weight", "=", "self", ".", "weight", "*", "(", "weight_scale", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", "/", "torch", ".", "sqrt", "(", "(", "self", ".", "weight", "**", "2", ")", ".", "sum", "(", "4", ")", ".", "sum", "(", "3", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "0", ")", "+", "1e-6", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ")", ".", "expand_as", "(", "self", ".", "weight", ")", "\n", "", "else", ":", "\n", "            ", "norm_weight", "=", "self", ".", "weight", "*", "(", "weight_scale", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", "/", "torch", ".", "sqrt", "(", "(", "self", ".", "weight", "**", "2", ")", ".", "sum", "(", "4", ")", ".", "sum", "(", "3", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "0", ")", "+", "1e-6", ")", ")", ".", "expand_as", "(", "self", ".", "weight", ")", "\n", "", "output_padding", "=", "self", ".", "_output_padding", "(", "input", ",", "output_size", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "kernel_size", ")", "\n", "activation", "=", "F", ".", "conv_transpose3d", "(", "input", ",", "norm_weight", ",", "bias", "=", "None", ",", "\n", "stride", "=", "self", ".", "stride", ",", "padding", "=", "self", ".", "padding", ",", "\n", "output_padding", "=", "output_padding", ",", "groups", "=", "self", ".", "groups", ")", "\n", "\n", "if", "self", ".", "init_mode", "==", "True", ":", "\n", "            ", "mean_act", "=", "activation", ".", "mean", "(", "4", ")", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", ".", "mean", "(", "0", ")", ".", "squeeze", "(", ")", "\n", "activation", "=", "activation", "-", "mean_act", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "inv_stdv", "=", "self", ".", "init_stdv", "/", "torch", ".", "sqrt", "(", "(", "activation", "**", "2", ")", ".", "mean", "(", "4", ")", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", ".", "mean", "(", "0", ")", "+", "1e-6", ")", ".", "squeeze", "(", ")", "\n", "activation", "=", "activation", "*", "inv_stdv", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "if", "self", ".", "train_scale", ":", "\n", "                ", "self", ".", "weight_scale", ".", "data", "=", "self", ".", "weight_scale", ".", "data", "*", "inv_stdv", ".", "data", "\n", "", "else", ":", "\n", "                ", "self", ".", "weight_scale", "=", "self", ".", "weight_scale", "*", "inv_stdv", ".", "data", "\n", "", "self", ".", "bias", ".", "data", "=", "-", "mean_act", ".", "data", "*", "inv_stdv", ".", "data", "\n", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "                ", "activation", "=", "activation", "+", "self", ".", "bias", "[", "None", ",", ":", ",", "None", ",", "None", ",", "None", "]", ".", "expand_as", "(", "activation", ")", "\n", "\n", "", "", "return", "activation", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.losses.gaussian_nll.gaussian_nll": [[5, 9], ["NLL.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp"], "function", ["None"], ["def", "gaussian_nll", "(", "mu", ",", "log_sigma", ",", "noise", ")", ":", "\n", "    ", "NLL", "=", "torch", ".", "sum", "(", "log_sigma", ",", "1", ")", "+", "torch", ".", "sum", "(", "(", "(", "noise", "-", "mu", ")", "/", "(", "1e-8", "+", "torch", ".", "exp", "(", "log_sigma", ")", ")", ")", "**", "2", ",", "1", ")", "/", "2.", "\n", "return", "NLL", ".", "mean", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.losses.cross_entropy.CrossEntropyLoss.__init__": [[9, 18], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "numpy.load", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.load.astype"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "config", "==", "None", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "", "else", ":", "\n", "            ", "class_weights", "=", "np", ".", "load", "(", "config", ".", "class_weights", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "config", ".", "ignore_index", ",", "\n", "weight", "=", "torch", ".", "from_numpy", "(", "class_weights", ".", "astype", "(", "np", ".", "float32", ")", ")", ",", "\n", "size_average", "=", "True", ",", "reduce", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.losses.cross_entropy.CrossEntropyLoss.forward": [[19, 21], ["cross_entropy.CrossEntropyLoss.loss"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "return", "self", ".", "loss", "(", "inputs", ",", "targets", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.losses.example.CrossEntropyLoss3d.__init__": [[8, 11], ["torch.Module.__init__", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLoss2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.losses.example.CrossEntropyLoss3d.forward": [[12, 15], ["example.CrossEntropyLoss3d.loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", "(", "logits", ",", "labels", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.batch_norm.__init__": [[67, 72], ["tensorflow.variable_scope"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "epsilon", "=", "1e-5", ",", "momentum", "=", "0.9", ",", "name", "=", "\"batch_norm\"", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "      ", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.batch_norm.__call__": [[73, 81], ["tensorflow.contrib.layers.batch_norm"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "x", ",", "train", "=", "True", ")", ":", "\n", "    ", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "\n", "decay", "=", "self", ".", "momentum", ",", "\n", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ",", "\n", "scale", "=", "True", ",", "\n", "is_training", "=", "train", ",", "\n", "scope", "=", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.gaussian_nll": [[6, 10], ["tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.exp"], "function", ["None"], ["def", "gaussian_nll", "(", "mu", ",", "log_sigma", ",", "noise", ")", ":", "\n", "    ", "NLL", "=", "tf", ".", "reduce_sum", "(", "log_sigma", ",", "1", ")", "+", "tf", ".", "reduce_sum", "(", "(", "(", "noise", "-", "mu", ")", "/", "(", "1e-8", "+", "tf", ".", "exp", "(", "log_sigma", ")", ")", ")", "**", "2", ",", "1", ")", "/", "2.", "\n", "return", "tf", ".", "reduce_mean", "(", "NLL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d": [[12, 22], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv3d", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tf.reshape.get_shape", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "input_.get_shape"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["", "def", "conv3d", "(", "input_", ",", "output_dim", ",", "k_d", "=", "3", ",", "k_h", "=", "3", ",", "k_w", "=", "3", ",", "\n", "s_d", "=", "1", ",", "s_h", "=", "1", ",", "s_w", "=", "1", ",", "stddev", "=", "0.05", ",", "name", "=", "\"conv3d\"", ")", ":", "\n", "  ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "'w'", ",", "[", "k_d", ",", "k_h", ",", "k_w", ",", "input_", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "output_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv3d", "(", "input_", ",", "w", ",", "strides", "=", "[", "1", ",", "s_d", ",", "s_h", ",", "s_w", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "biases", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "output_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "conv", "=", "tf", ".", "reshape", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "biases", ")", ",", "conv", ".", "get_shape", "(", ")", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d": [[24, 35], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv3d_transpose", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tf.reshape.get_shape", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "input_.get_shape"], "function", ["None"], ["", "", "def", "deconv3d", "(", "input_", ",", "output_shape", ",", "k_d", "=", "2", ",", "k_h", "=", "2", ",", "k_w", "=", "2", ",", "\n", "s_d", "=", "2", ",", "s_h", "=", "2", ",", "s_w", "=", "2", ",", "stddev", "=", "0.05", ",", "name", "=", "\"deconv3d\"", ")", ":", "\n", "  ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "'w'", ",", "[", "k_d", ",", "k_h", ",", "k_w", ",", "output_shape", "[", "-", "1", "]", ",", "input_", ".", "get_shape", "(", ")", "[", "-", "1", "]", "]", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "deconv", "=", "tf", ".", "nn", ".", "conv3d_transpose", "(", "input_", ",", "w", ",", "output_shape", "=", "output_shape", ",", "\n", "strides", "=", "[", "1", ",", "s_d", ",", "s_h", ",", "s_w", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ")", "\n", "biases", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "output_shape", "[", "-", "1", "]", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "deconv", "=", "tf", ".", "reshape", "(", "tf", ".", "nn", ".", "bias_add", "(", "deconv", ",", "biases", ")", ",", "deconv", ".", "get_shape", "(", ")", ")", "\n", "return", "deconv", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu": [[37, 39], ["tensorflow.nn.relu"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu"], ["", "", "def", "relu", "(", "x", ",", "name", "=", "\"relu\"", ")", ":", "\n", "  ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu": [[40, 42], ["tensorflow.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "leak", "=", "0.2", ",", "name", "=", "\"lrelu\"", ")", ":", "\n", "  ", "return", "tf", ".", "maximum", "(", "x", ",", "leak", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D": [[43, 45], ["tensorflow.nn.max_pool3d"], "function", ["None"], ["", "def", "max_pool3D", "(", "input_", ",", "k_d", "=", "2", ",", "k_h", "=", "2", ",", "k_w", "=", "2", ",", "s_d", "=", "2", ",", "s_h", "=", "2", ",", "s_w", "=", "2", ")", ":", "\n", "  ", "return", "tf", ".", "nn", ".", "max_pool3d", "(", "input_", ",", "[", "1", ",", "k_d", ",", "k_h", ",", "k_w", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "s_d", ",", "s_h", ",", "s_w", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D": [[46, 48], ["tensorflow.nn.avg_pool3d"], "function", ["None"], ["", "def", "avg_pool3D", "(", "input_", ",", "k_d", "=", "2", ",", "k_h", "=", "2", ",", "k_w", "=", "2", ",", "s_d", "=", "2", ",", "s_h", "=", "2", ",", "s_w", "=", "2", ")", ":", "\n", "  ", "return", "tf", ".", "nn", ".", "avg_pool3d", "(", "input_", ",", "[", "1", ",", "k_d", ",", "k_h", ",", "k_w", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "s_d", ",", "s_h", ",", "s_w", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear": [[50, 58], ["input_.get_shape().as_list", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "input_.get_shape", "tensorflow.random_normal_initializer", "tensorflow.matmul", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "linear", "(", "input_", ",", "output_size", ",", "scope", "=", "None", ",", "stddev", "=", "0.05", ",", "bias_start", "=", "0.0", ")", ":", "\n", "  ", "shape", "=", "input_", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "with", "tf", ".", "variable_scope", "(", "scope", "or", "\"Linear\"", ")", ":", "\n", "    ", "matrix", "=", "tf", ".", "get_variable", "(", "\"Matrix\"", ",", "[", "shape", "[", "1", "]", ",", "output_size", "]", ",", "tf", ".", "float32", ",", "\n", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "output_size", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "bias_start", ")", ")", "\n", "return", "tf", ".", "matmul", "(", "input_", ",", "matrix", ")", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.instance_norm": [[61, 65], ["tensorflow.nn.moments", "tensorflow.div", "tensorflow.subtract", "tensorflow.sqrt", "tensorflow.add"], "function", ["None"], ["", "", "def", "instance_norm", "(", "x", ",", "phase", "=", "False", ",", "name", "=", "\"instance_norm\"", ")", ":", "\n", "  ", "epsilon", "=", "1e-9", "\n", "mean", ",", "var", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "1", ",", "2", ",", "3", "]", ",", "keep_dims", "=", "True", ")", "\n", "return", "tf", ".", "div", "(", "tf", ".", "subtract", "(", "x", ",", "mean", ")", ",", "tf", ".", "sqrt", "(", "tf", ".", "add", "(", "var", ",", "epsilon", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.int_shape": [[82, 84], ["list", "map", "x.get_shape"], "function", ["None"], ["", "", "def", "int_shape", "(", "x", ")", ":", "\n", "  ", "return", "list", "(", "map", "(", "int", ",", "x", ".", "get_shape", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg": [[85, 91], ["tensorflow.get_variable", "ema.average"], "function", ["None"], ["", "def", "get_var_maybe_avg", "(", "var_name", ",", "ema", ",", "**", "kwargs", ")", ":", "\n", "    ", "''' utility for retrieving polyak averaged params '''", "\n", "v", "=", "tf", ".", "get_variable", "(", "var_name", ",", "**", "kwargs", ")", "\n", "if", "ema", "is", "not", "None", ":", "\n", "        ", "v", "=", "ema", ".", "average", "(", "v", ")", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN": [[92, 114], ["tensorflow.variable_scope", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "tensorflow.nn.bias_add", "tensorflow.reshape", "tensorflow.nn.l2_normalize", "tensorflow.nn.conv3d", "tensorflow.nn.moments", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.constant_initializer", "tensorflow.sqrt", "tensorflow.control_dependencies", "tensorflow.identity", "int", "get_var_maybe_avg.assign", "get_var_maybe_avg.assign_add", "tf.identity.get_shape"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["", "def", "conv3d_WN", "(", "x", ",", "num_filters", ",", "filter_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "1", ",", "1", "]", ",", "pad", "=", "'SAME'", ",", "init_scale", "=", "1.", ",", "name", "=", "\"conv_WN\"", ",", "init", "=", "False", ",", "ema", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "''' convolutional layer '''", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "V", "=", "get_var_maybe_avg", "(", "'V'", ",", "ema", ",", "shape", "=", "filter_size", "+", "[", "int", "(", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ")", ",", "num_filters", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "0", ",", "0.05", ")", ",", "trainable", "=", "True", ")", "\n", "g", "=", "get_var_maybe_avg", "(", "'g'", ",", "ema", ",", "shape", "=", "[", "num_filters", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "1.", ")", ",", "trainable", "=", "True", ")", "\n", "b", "=", "get_var_maybe_avg", "(", "'b'", ",", "ema", ",", "shape", "=", "[", "num_filters", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.", ")", ",", "trainable", "=", "True", ")", "\n", "\n", "# use weight normalization (Salimans & Kingma, 2016)", "\n", "W", "=", "tf", ".", "reshape", "(", "g", ",", "[", "1", ",", "1", ",", "1", ",", "1", ",", "num_filters", "]", ")", "*", "tf", ".", "nn", ".", "l2_normalize", "(", "V", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# calculate convolutional layer output", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv3d", "(", "x", ",", "W", ",", "[", "1", "]", "+", "stride", "+", "[", "1", "]", ",", "pad", ")", ",", "b", ")", "\n", "\n", "if", "init", ":", "# normalize x", "\n", "            ", "m_init", ",", "v_init", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "\n", "scale_init", "=", "init_scale", "/", "tf", ".", "sqrt", "(", "v_init", "+", "1e-10", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "g", ".", "assign", "(", "g", "*", "scale_init", ")", ",", "b", ".", "assign_add", "(", "-", "m_init", "*", "scale_init", ")", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "identity", "(", "x", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN": [[115, 143], ["operations.int_shape", "tensorflow.variable_scope", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "tensorflow.nn.conv3d_transpose", "tensorflow.nn.bias_add", "tensorflow.reshape", "tensorflow.nn.l2_normalize", "tensorflow.nn.moments", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.constant_initializer", "tensorflow.sqrt", "tensorflow.control_dependencies", "tensorflow.identity", "int", "get_var_maybe_avg.assign", "get_var_maybe_avg.assign_add", "tf.identity.get_shape"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.int_shape", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg"], ["", "", "def", "deconv3d_WN", "(", "x", ",", "num_filters", ",", "filter_size", "=", "[", "2", ",", "2", ",", "2", "]", ",", "stride", "=", "[", "2", ",", "2", ",", "2", "]", ",", "pad", "=", "'SAME'", ",", "init_scale", "=", "1.", ",", "name", "=", "\"deconv_WN\"", ",", "init", "=", "False", ",", "ema", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "''' transposed convolutional layer '''", "\n", "xs", "=", "int_shape", "(", "x", ")", "\n", "if", "pad", "==", "'SAME'", ":", "\n", "        ", "target_shape", "=", "[", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", "*", "stride", "[", "0", "]", ",", "xs", "[", "2", "]", "*", "stride", "[", "1", "]", ",", "xs", "[", "3", "]", "*", "stride", "[", "2", "]", ",", "num_filters", "]", "\n", "", "else", ":", "\n", "        ", "target_shape", "=", "[", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", "*", "stride", "[", "0", "]", "+", "filter_size", "[", "0", "]", "-", "1", ",", "xs", "[", "2", "]", "*", "stride", "[", "1", "]", "+", "filter_size", "[", "1", "]", "-", "1", ",", "xs", "[", "3", "]", "*", "stride", "[", "2", "]", "+", "filter_size", "[", "2", "]", "-", "1", ",", "num_filters", "]", "\n", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "V", "=", "get_var_maybe_avg", "(", "'V'", ",", "ema", ",", "shape", "=", "filter_size", "+", "[", "num_filters", ",", "int", "(", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ")", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "0", ",", "0.05", ")", ",", "trainable", "=", "True", ")", "\n", "g", "=", "get_var_maybe_avg", "(", "'g'", ",", "ema", ",", "shape", "=", "[", "num_filters", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "1.", ")", ",", "trainable", "=", "True", ")", "\n", "b", "=", "get_var_maybe_avg", "(", "'b'", ",", "ema", ",", "shape", "=", "[", "num_filters", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.", ")", ",", "trainable", "=", "True", ")", "\n", "\n", "# use weight normalization (Salimans & Kingma, 2016)", "\n", "W", "=", "tf", ".", "reshape", "(", "g", ",", "[", "1", ",", "1", ",", "1", ",", "num_filters", ",", "1", "]", ")", "*", "tf", ".", "nn", ".", "l2_normalize", "(", "V", ",", "[", "0", ",", "1", ",", "2", ",", "4", "]", ")", "\n", "\n", "# calculate convolutional layer output", "\n", "x", "=", "tf", ".", "nn", ".", "conv3d_transpose", "(", "x", ",", "W", ",", "target_shape", ",", "[", "1", "]", "+", "stride", "+", "[", "1", "]", ",", "padding", "=", "pad", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "b", ")", "\n", "\n", "if", "init", ":", "# normalize x", "\n", "            ", "m_init", ",", "v_init", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "\n", "scale_init", "=", "init_scale", "/", "tf", ".", "sqrt", "(", "v_init", "+", "1e-10", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "g", ".", "assign", "(", "g", "*", "scale_init", ")", ",", "b", ".", "assign_add", "(", "-", "m_init", "*", "scale_init", ")", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "identity", "(", "x", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear_WN": [[144, 165], ["tensorflow.variable_scope", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "operations.get_var_maybe_avg", "tensorflow.matmul", "tensorflow.sqrt", "tensorflow.reshape", "tensorflow.nn.moments", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.constant_initializer", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.sqrt", "tensorflow.control_dependencies", "tensorflow.identity", "int", "tensorflow.square", "get_var_maybe_avg.assign", "get_var_maybe_avg.assign_add", "tf.identity.get_shape"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.get_var_maybe_avg"], ["", "", "def", "linear_WN", "(", "x", ",", "num_units", ",", "name", "=", "\"linear_WN\"", ",", "init_scale", "=", "1.", ",", "init", "=", "False", ",", "ema", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "''' fully connected layer '''", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "V", "=", "get_var_maybe_avg", "(", "'V'", ",", "ema", ",", "shape", "=", "[", "int", "(", "x", ".", "get_shape", "(", ")", "[", "1", "]", ")", ",", "num_units", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "0", ",", "0.05", ")", ",", "trainable", "=", "True", ")", "\n", "g", "=", "get_var_maybe_avg", "(", "'g'", ",", "ema", ",", "shape", "=", "[", "num_units", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "1.", ")", ",", "trainable", "=", "True", ")", "\n", "b", "=", "get_var_maybe_avg", "(", "'b'", ",", "ema", ",", "shape", "=", "[", "num_units", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.", ")", ",", "trainable", "=", "True", ")", "\n", "\n", "# use weight normalization (Salimans & Kingma, 2016)", "\n", "x", "=", "tf", ".", "matmul", "(", "x", ",", "V", ")", "\n", "scaler", "=", "g", "/", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "V", ")", ",", "[", "0", "]", ")", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "scaler", ",", "[", "1", ",", "num_units", "]", ")", "*", "x", "+", "tf", ".", "reshape", "(", "b", ",", "[", "1", ",", "num_units", "]", ")", "\n", "\n", "if", "init", ":", "# normalize x", "\n", "            ", "m_init", ",", "v_init", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "0", "]", ")", "\n", "scale_init", "=", "init_scale", "/", "tf", ".", "sqrt", "(", "v_init", "+", "1e-10", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "g", ".", "assign", "(", "g", "*", "scale_init", ")", ",", "b", ".", "assign_add", "(", "-", "m_init", "*", "scale_init", ")", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "identity", "(", "x", ")", "\n", "", "", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.save_model": [[16, 21], ["saver.save", "os.path.exists", "os.makedirs", "os.path.join"], "function", ["None"], ["def", "save_model", "(", "checkpoint_dir", ",", "sess", ",", "saver", ")", ":", "\n", "  ", "model_name", "=", "\"model.ckpt\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "checkpoint_dir", ")", "\n", "", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "model_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.load_model": [[31, 40], ["print", "tensorflow.train.get_checkpoint_state", "os.path.basename", "saver.restore", "os.path.join"], "function", ["None"], ["def", "load_model", "(", "checkpoint_dir", ",", "sess", ",", "saver", ")", ":", "\n", "  ", "print", "(", "\" [*] Reading checkpoints...\"", ")", "\n", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "checkpoint_dir", ")", "\n", "if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "    ", "ckpt_name", "=", "os", ".", "path", ".", "basename", "(", "ckpt", ".", "model_checkpoint_path", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "ckpt_name", ")", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "    ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.compute_weighted_fm_loss": [[41, 55], ["range", "tensorflow.stack", "tensorflow.reduce_sum", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "len", "tensorflow.reduce_mean", "tf.stack.append", "numpy.multiply", "tensorflow.abs", "tensorflow.log", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["None"], ["", "", "def", "compute_weighted_fm_loss", "(", "intermediate_layers", ")", ":", "\n", "    ", "intermediate_layers_unlab", ",", "intermediate_layers_fake", "=", "intermediate_layers", "\n", "layers_distance", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "intermediate_layers_unlab", ")", ")", ":", "\n", "        ", "normalized_dist", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "tf", ".", "reduce_mean", "(", "intermediate_layers_unlab", "[", "i", "]", ",", "0", ")", "-", "tf", ".", "reduce_mean", "(", "intermediate_layers_fake", "[", "i", "]", ",", "0", ")", ")", ")", "\n", "layers_distance", ".", "append", "(", "normalized_dist", ")", "\n", "\n", "", "layers_distance", "=", "tf", ".", "stack", "(", "layers_distance", ")", "\n", "total_distance", "=", "tf", ".", "reduce_sum", "(", "layers_distance", ")", "\n", "weights", "=", "tf", ".", "nn", ".", "softmax", "(", "-", "tf", ".", "log", "(", "layers_distance", "/", "total_distance", ")", ")", "\n", "\n", "loss", "=", "tf", ".", "reduce_sum", "(", "np", ".", "multiply", "(", "layers_distance", ",", "weights", ")", ")", "\n", "return", "loss", ",", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap": [[59, 98], ["print", "print", "print", "print", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.around", "range", "numpy.min", "range", "str", "range", "str", "str", "str"], "function", ["None"], ["def", "recompose3D_overlap", "(", "preds", ",", "img_h", ",", "img_w", ",", "img_d", ",", "stride_h", ",", "stride_w", ",", "stride_d", ")", ":", "\n", "  ", "patch_h", "=", "preds", ".", "shape", "[", "1", "]", "\n", "patch_w", "=", "preds", ".", "shape", "[", "2", "]", "\n", "patch_d", "=", "preds", ".", "shape", "[", "3", "]", "\n", "N_patches_h", "=", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", "\n", "N_patches_w", "=", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", "\n", "N_patches_d", "=", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", "\n", "N_patches_img", "=", "N_patches_h", "*", "N_patches_w", "*", "N_patches_d", "\n", "print", "(", "\"N_patches_h: \"", ",", "N_patches_h", ")", "\n", "print", "(", "\"N_patches_w: \"", ",", "N_patches_w", ")", "\n", "print", "(", "\"N_patches_d: \"", ",", "N_patches_d", ")", "\n", "print", "(", "\"N_patches_img: \"", ",", "N_patches_img", ")", "\n", "assert", "(", "preds", ".", "shape", "[", "0", "]", "%", "N_patches_img", "==", "0", ")", "\n", "N_full_imgs", "=", "preds", ".", "shape", "[", "0", "]", "//", "N_patches_img", "\n", "print", "(", "\"According to the dimension inserted, there are \"", "+", "str", "(", "N_full_imgs", ")", "+", "\" full images (of \"", "+", "str", "(", "img_h", ")", "+", "\"x\"", "+", "str", "(", "img_w", ")", "+", "\"x\"", "+", "str", "(", "img_d", ")", "+", "\" each)\"", ")", "\n", "# itialize to zero mega array with sum of Probabilities", "\n", "raw_pred_martrix", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ")", "\n", "raw_sum", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ")", "\n", "final_matrix", "=", "np", ".", "zeros", "(", "(", "N_full_imgs", ",", "img_h", ",", "img_w", ",", "img_d", ")", ",", "dtype", "=", "'uint16'", ")", "\n", "\n", "k", "=", "0", "\n", "# iterator over all the patches", "\n", "for", "i", "in", "range", "(", "N_full_imgs", ")", ":", "\n", "    ", "for", "h", "in", "range", "(", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", ")", ":", "\n", "      ", "for", "w", "in", "range", "(", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", ")", ":", "\n", "        ", "for", "d", "in", "range", "(", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", ")", ":", "\n", "          ", "raw_pred_martrix", "[", "i", ",", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "+=", "preds", "[", "k", "]", "\n", "raw_sum", "[", "i", ",", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "+=", "1.0", "\n", "k", "+=", "1", "\n", "", "", "", "", "assert", "(", "k", "==", "preds", ".", "shape", "[", "0", "]", ")", "\n", "#To check for non zero sum matrix", "\n", "assert", "(", "np", ".", "min", "(", "raw_sum", ")", ">=", "1.0", ")", "\n", "final_matrix", "=", "np", ".", "around", "(", "raw_pred_martrix", "/", "raw_sum", ")", "\n", "return", "final_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.__init__": [[25, 30], ["batch_norm", "range"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "sess", ",", "patch_shape", ",", "extraction_step", ")", ":", "\n", "    ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "patch_shape", "=", "patch_shape", "\n", "self", ".", "extraction_step", "=", "extraction_step", "\n", "self", ".", "d_bns", "=", "[", "batch_norm", "(", "name", "=", "'u_bn{}'", ".", "format", "(", "i", ",", ")", ")", "for", "i", "in", "range", "(", "14", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.network_dis": [[32, 79], ["tensorflow.variable_scope", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "conv3d_WN", "scope.reuse_variables", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "tensorflow.nn.softmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN"], ["", "def", "network_dis", "(", "self", ",", "patch", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * patch - input image for the network\n    * reuse - boolean variable to reuse weights\n    Returns: \n    * logits\n    * softmax of logits\n    * features extracted from encoding path \n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'U'", ")", "as", "scope", ":", "\n", "      ", "if", "reuse", ":", "\n", "        ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "h0", "=", "lrelu", "(", "conv3d_WN", "(", "patch", ",", "32", ",", "name", "=", "'u_h0_conv'", ")", ")", "\n", "h1", "=", "lrelu", "(", "conv3d_WN", "(", "h0", ",", "32", ",", "name", "=", "'u_h1_conv'", ")", ")", "\n", "p1", "=", "avg_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "lrelu", "(", "conv3d_WN", "(", "p1", ",", "64", ",", "name", "=", "'u_h2_conv'", ")", ")", "\n", "h3", "=", "lrelu", "(", "conv3d_WN", "(", "h2", ",", "64", ",", "name", "=", "'u_h3_conv'", ")", ")", "\n", "p3", "=", "avg_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "lrelu", "(", "conv3d_WN", "(", "p3", ",", "128", ",", "name", "=", "'u_h4_conv'", ")", ")", "\n", "h5", "=", "lrelu", "(", "conv3d_WN", "(", "h4", ",", "128", ",", "name", "=", "'u_h5_conv'", ")", ")", "\n", "p5", "=", "avg_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "lrelu", "(", "conv3d_WN", "(", "p5", ",", "256", ",", "name", "=", "'u_h6_conv'", ")", ")", "\n", "h7", "=", "lrelu", "(", "conv3d_WN", "(", "h6", ",", "256", ",", "name", "=", "'u_h7_conv'", ")", ")", "\n", "\n", "up1", "=", "deconv3d_WN", "(", "h7", ",", "256", ",", "name", "=", "'u_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "lrelu", "(", "conv3d_WN", "(", "up1", ",", "128", ",", "name", "=", "'u_h8_conv'", ")", ")", "\n", "h9", "=", "lrelu", "(", "conv3d_WN", "(", "h8", ",", "128", ",", "name", "=", "'u_h9_conv'", ")", ")", "\n", "\n", "up2", "=", "deconv3d_WN", "(", "h9", ",", "128", ",", "name", "=", "'u_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "lrelu", "(", "conv3d_WN", "(", "up2", ",", "64", ",", "name", "=", "'u_h10_conv'", ")", ")", "\n", "h11", "=", "lrelu", "(", "conv3d_WN", "(", "h10", ",", "64", ",", "name", "=", "'u_h11_conv'", ")", ")", "\n", "\n", "up3", "=", "deconv3d_WN", "(", "h11", ",", "64", ",", "name", "=", "'u_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "lrelu", "(", "conv3d_WN", "(", "up3", ",", "32", ",", "name", "=", "'u_h12_conv'", ")", ")", "\n", "h13", "=", "lrelu", "(", "conv3d_WN", "(", "h12", ",", "32", ",", "name", "=", "'u_h13_conv'", ")", ")", "\n", "\n", "h14", "=", "conv3d_WN", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'u_h14_conv'", ")", "\n", "\n", "return", "h14", ",", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.network": [[87, 128], ["tensorflow.variable_scope", "relu", "relu", "max_pool3D", "relu", "relu", "max_pool3D", "relu", "relu", "max_pool3D", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "conv3d", "scope.reuse_variables", "int", "int", "int", "tensorflow.nn.softmax", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["def", "network", "(", "self", ",", "patch", ",", "phase", ",", "pshape", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'U'", ")", "as", "scope", ":", "\n", "      ", "if", "reuse", ":", "\n", "        ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "sh1", ",", "sh2", ",", "sh3", "=", "int", "(", "pshape", "[", "0", "]", "/", "4", ")", ",", "int", "(", "pshape", "[", "0", "]", "/", "2", ")", ",", "int", "(", "pshape", "[", "0", "]", ")", "\n", "\n", "h0", "=", "relu", "(", "self", ".", "d_bns", "[", "0", "]", "(", "conv3d", "(", "patch", ",", "32", ",", "name", "=", "'u_h0_conv'", ")", ",", "phase", ")", ")", "\n", "h1", "=", "relu", "(", "self", ".", "d_bns", "[", "1", "]", "(", "conv3d", "(", "h0", ",", "32", ",", "name", "=", "'u_h1_conv'", ")", ",", "phase", ")", ")", "\n", "p1", "=", "max_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "relu", "(", "self", ".", "d_bns", "[", "2", "]", "(", "conv3d", "(", "p1", ",", "64", ",", "name", "=", "'u_h2_conv'", ")", ",", "phase", ")", ")", "\n", "h3", "=", "relu", "(", "self", ".", "d_bns", "[", "3", "]", "(", "conv3d", "(", "h2", ",", "64", ",", "name", "=", "'u_h3_conv'", ")", ",", "phase", ")", ")", "\n", "p3", "=", "max_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "relu", "(", "self", ".", "d_bns", "[", "4", "]", "(", "conv3d", "(", "p3", ",", "128", ",", "name", "=", "'u_h4_conv'", ")", ",", "phase", ")", ")", "\n", "h5", "=", "relu", "(", "self", ".", "d_bns", "[", "5", "]", "(", "conv3d", "(", "h4", ",", "128", ",", "name", "=", "'u_h5_conv'", ")", ",", "phase", ")", ")", "\n", "p5", "=", "max_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "relu", "(", "self", ".", "d_bns", "[", "6", "]", "(", "conv3d", "(", "p5", ",", "256", ",", "name", "=", "'u_h6_conv'", ")", ",", "phase", ")", ")", "\n", "h7", "=", "relu", "(", "self", ".", "d_bns", "[", "7", "]", "(", "conv3d", "(", "h6", ",", "256", ",", "name", "=", "'u_h7_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up1", "=", "deconv3d", "(", "h7", ",", "[", "F", ".", "batch_size", ",", "sh1", ",", "sh1", ",", "sh1", ",", "256", "]", ",", "name", "=", "'d_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "relu", "(", "self", ".", "d_bns", "[", "8", "]", "(", "conv3d", "(", "up1", ",", "128", ",", "name", "=", "'u_h8_conv'", ")", ",", "phase", ")", ")", "\n", "h9", "=", "relu", "(", "self", ".", "d_bns", "[", "9", "]", "(", "conv3d", "(", "h8", ",", "128", ",", "name", "=", "'u_h9_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up2", "=", "deconv3d", "(", "h9", ",", "[", "F", ".", "batch_size", ",", "sh2", ",", "sh2", ",", "sh2", ",", "128", "]", ",", "name", "=", "'d_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "relu", "(", "self", ".", "d_bns", "[", "10", "]", "(", "conv3d", "(", "up2", ",", "64", ",", "name", "=", "'u_h10_conv'", ")", ",", "phase", ")", ")", "\n", "h11", "=", "relu", "(", "self", ".", "d_bns", "[", "11", "]", "(", "conv3d", "(", "h10", ",", "64", ",", "name", "=", "'u_h11_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up3", "=", "deconv3d", "(", "h11", ",", "[", "F", ".", "batch_size", ",", "sh3", ",", "sh3", ",", "sh3", ",", "64", "]", ",", "name", "=", "'d_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "relu", "(", "self", ".", "d_bns", "[", "12", "]", "(", "conv3d", "(", "up3", ",", "32", ",", "name", "=", "'u_h12_conv'", ")", ",", "phase", ")", ")", "\n", "h13", "=", "relu", "(", "self", ".", "d_bns", "[", "13", "]", "(", "conv3d", "(", "h12", ",", "32", ",", "name", "=", "'u_h13_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "h14", "=", "conv3d", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'u_h14_conv'", ")", "\n", "\n", "return", "h14", ",", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.build_model": [[133, 163], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.placeholder", "model_unet.UNET.network_dis", "tensorflow.argmax", "tensorflow.constant", "tensorflow.reduce_sum", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.reduce_mean", "tensorflow.trainable_variables", "tensorflow.train.Saver"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.network_dis"], ["def", "build_model", "(", "self", ")", ":", "\n", "    ", "self", ".", "patches_labeled", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "F", ".", "batch_size", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "\n", "self", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "patch_shape", "[", "2", "]", ",", "F", ".", "num_mod", "]", ",", "name", "=", "'real_images_l'", ")", "\n", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "uint8", ",", "[", "F", ".", "batch_size", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "1", "]", ",", "\n", "self", ".", "patch_shape", "[", "2", "]", "]", ",", "name", "=", "'image_labels'", ")", "\n", "self", ".", "labels_1hot", "=", "tf", ".", "one_hot", "(", "self", ".", "labels", ",", "depth", "=", "F", ".", "num_classes", ")", "\n", "self", ".", "phase", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "# Forward pass through network", "\n", "# To use original 3D U-Net use ***network*** function and don't forget to change the testing file", "\n", "#self._logits_labeled, self._probdist = self.network(self.patches_labeled, self.phase, self.patch_shape, reuse=False)", "\n", "self", ".", "_logits_labeled", ",", "self", ".", "_probdist", "=", "self", ".", "network_dis", "(", "self", ".", "patches_labeled", ",", "reuse", "=", "False", ")", "\n", "\n", "#Validation Output", "\n", "self", ".", "Val_output", "=", "tf", ".", "argmax", "(", "self", ".", "_probdist", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# Weighted ross entropy loss", "\n", "# Weights of different class are: Background- 0.33, CSF- 1.5, GM- 0.83, WM- 1.33", "\n", "class_weights", "=", "tf", ".", "constant", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "weights", "=", "tf", ".", "reduce_sum", "(", "class_weights", "*", "self", ".", "labels_1hot", ",", "axis", "=", "-", "1", ")", "\n", "unweighted_losses", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits_v2", "(", "logits", "=", "self", ".", "_logits_labeled", ",", "labels", "=", "self", ".", "labels_1hot", ")", "\n", "weighted_losses", "=", "unweighted_losses", "*", "weights", "\n", "self", ".", "u_loss", "=", "tf", ".", "reduce_mean", "(", "weighted_losses", ")", "\n", "\n", "#define the trainable variables", "\n", "t_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "u_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'u_'", "in", "var", ".", "name", "]", "\n", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.model_unet.UNET.train": [[170, 295], ["dataset", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.global_variables_initializer().run", "preprocess_dynamic_lab", "numpy.zeros", "six.moves.xrange", "print", "int", "dataset.batch_train", "save_model", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "load_model", "print", "tensorflow.train.AdamOptimizer().minimize.run", "model_unet.UNET.u_loss.eval", "print", "print", "int", "print", "print", "range", "print", "print", "recompose3D_overlap", "val_image_pred.astype.astype.astype", "print", "numpy.reshape", "numpy.reshape", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "print", "model_unet.UNET.Val_output.eval", "model_unet.UNET.u_loss.eval", "print", "numpy.min", "numpy.max", "numpy.unique", "numpy.unique", "numpy.mean", "numpy.mean", "save_model", "print"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.batch_train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.save_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.load_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.save_model"], ["def", "train", "(", "self", ")", ":", "\n", "    ", "data", "=", "dataset", "(", "num_classes", "=", "F", ".", "num_classes", ",", "extraction_step", "=", "self", ".", "extraction_step", ",", "number_images_training", "=", "\n", "F", ".", "number_train_images", ",", "batch_size", "=", "F", ".", "batch_size", ",", "patch_shape", "=", "self", ".", "patch_shape", ",", "data_directory", "=", "F", ".", "data_directory", ")", "\n", "\n", "global_step", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "]", ",", "name", "=", "\"global_step_epochs\"", ")", "\n", "\n", "\n", "# Optimizer operation", "\n", "_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "F", ".", "learning_rate_", ",", "beta1", "=", "F", ".", "beta1", ")", ".", "minimize", "(", "self", ".", "u_loss", ",", "\n", "var_list", "=", "self", ".", "u_vars", ")", "\n", "\n", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "# Load checkpoints if required", "\n", "if", "F", ".", "load_chkpt", ":", "\n", "      ", "try", ":", "\n", "        ", "load_model", "(", "F", ".", "checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "print", "(", "\"\\n [*] Checkpoint loaded succesfully!\"", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "\"\\n [!] Checkpoint loading failed!\"", ")", "\n", "", "", "else", ":", "\n", "      ", "print", "(", "\"\\n [*] Checkpoint load not required.\"", ")", "\n", "\n", "\n", "", "patches_val", ",", "labels_val_patch", ",", "labels_val", "=", "preprocess_dynamic_lab", "(", "F", ".", "data_directory", ",", "\n", "F", ".", "num_classes", ",", "self", ".", "extraction_step", ",", "self", ".", "patch_shape", ",", "\n", "F", ".", "number_train_images", ",", "validating", "=", "F", ".", "training", ",", "\n", "testing", "=", "F", ".", "testing", ",", "num_images_testing", "=", "F", ".", "number_test_images", ")", "\n", "\n", "predictions_val", "=", "np", ".", "zeros", "(", "(", "patches_val", ".", "shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "1", "]", ",", "\n", "self", ".", "patch_shape", "[", "2", "]", ")", ",", "dtype", "=", "'uint8'", ")", "\n", "max_par", "=", "0.0", "\n", "max_loss", "=", "100", "\n", "for", "epoch", "in", "xrange", "(", "int", "(", "F", ".", "epoch", ")", ")", ":", "\n", "      ", "idx", "=", "0", "\n", "batch_iter_train", "=", "data", ".", "batch_train", "(", ")", "\n", "total_val_loss", "=", "0", "\n", "total_train_loss", "=", "0", "\n", "\n", "for", "patches_lab", ",", "labels", "in", "batch_iter_train", ":", "\n", "# Network update", "\n", "        ", "feed_dict", "=", "{", "self", ".", "patches_labeled", ":", "patches_lab", ",", "self", ".", "labels", ":", "labels", ",", "\n", "self", ".", "phase", ":", "True", ",", "global_step", ":", "epoch", "}", "\n", "_optim", ".", "run", "(", "feed_dict", ")", "\n", "\n", "# Evaluate loss for plotting/printing purposes", "\n", "feed_dict", "=", "{", "self", ".", "patches_labeled", ":", "patches_lab", ",", "self", ".", "labels", ":", "labels", ",", "\n", "self", ".", "phase", ":", "True", ",", "global_step", ":", "epoch", "}", "\n", "u_loss", "=", "self", ".", "u_loss", ".", "eval", "(", "feed_dict", ")", "\n", "total_train_loss", "=", "total_train_loss", "+", "u_loss", "\n", "\n", "idx", "+=", "1", "\n", "print", "(", "(", "\"Epoch:[%2d] [%4d/%4d] Loss:%.2e \\n\"", ")", "%", "(", "epoch", ",", "idx", ",", "data", ".", "num_batches", ",", "u_loss", ")", ")", "\n", "\n", "\n", "# Save model", "\n", "", "save_model", "(", "F", ".", "checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "\n", "\n", "# Validation runs every third epoch", "\n", "if", "epoch", "%", "3", "==", "0", ":", "\n", "        ", "avg_train_loss", "=", "total_train_loss", "/", "(", "idx", "*", "1.0", ")", "\n", "print", "(", "'\\n\\n'", ")", "\n", "\n", "total_batches", "=", "int", "(", "patches_val", ".", "shape", "[", "0", "]", "/", "F", ".", "batch_size", ")", "\n", "print", "(", "\"Total number of Patches: \"", ",", "patches_val", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "\"Total number of Batches: \"", ",", "total_batches", ")", "\n", "\n", "for", "batch", "in", "range", "(", "total_batches", ")", ":", "\n", "          ", "patches_feed", "=", "patches_val", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "labels_feed", "=", "labels_val_patch", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "\n", "feed_dict", "=", "{", "self", ".", "patches_labeled", ":", "patches_feed", ",", "\n", "self", ".", "labels", ":", "labels_feed", ",", "self", ".", "phase", ":", "False", "}", "\n", "preds", "=", "self", ".", "Val_output", ".", "eval", "(", "feed_dict", ")", "\n", "val_loss", "=", "self", ".", "u_loss", ".", "eval", "(", "feed_dict", ")", "\n", "\n", "predictions_val", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "preds", "\n", "print", "(", "(", "\"Validated Patch:[%8d/%8d]\"", ")", "%", "(", "batch", ",", "total_batches", ")", ")", "\n", "total_val_loss", "=", "total_val_loss", "+", "val_loss", "\n", "\n", "", "avg_val_loss", "=", "total_val_loss", "/", "(", "total_batches", "*", "1.0", ")", "\n", "\n", "print", "(", "\"All validation patches Predicted\"", ")", "\n", "\n", "\n", "print", "(", "\"Shape of predictions_val, min and max:\"", ",", "predictions_val", ".", "shape", ",", "np", ".", "min", "(", "predictions_val", ")", ",", "\n", "np", ".", "max", "(", "predictions_val", ")", ")", "\n", "\n", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "predictions_val", ",", "144", ",", "192", ",", "256", ",", "self", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "print", "(", "\"Shape of Predicted Output Groundtruth Images:\"", ",", "val_image_pred", ".", "shape", ",", "\n", "np", ".", "unique", "(", "val_image_pred", ")", ",", "\n", "np", ".", "unique", "(", "labels_val", ")", ",", "\n", "np", ".", "mean", "(", "val_image_pred", ")", ",", "np", ".", "mean", "(", "labels_val", ")", ")", "\n", "\n", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_val", ",", "(", "labels_val", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "# To save the best model based on validation", "\n", "if", "(", "max_par", "<", "(", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", ")", ")", ":", "\n", "          ", "max_par", "=", "(", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", ")", "\n", "save_model", "(", "F", ".", "best_checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "print", "(", "\"Best checkpoint got updated from validation results.\"", ")", "\n", "\n", "# To save losses for plotting ", "\n", "", "'''\n        print(\"Average Validation Loss:\",avg_val_loss)\n        print(\"Average Training Loss\",avg_train_loss)\n        with open('Val_loss.txt', 'a') as f:\n          f.write('%.2e \\n' % avg_val_loss)\n        with open('Train_loss.txt', 'a') as f:\n          f.write('%.2e \\n' % avg_train_loss)\n        '''", "\n", "\n", "", "", "return", "", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.testing_unet.save_image": [[22, 26], ["nib.Nifti1Image", "nib.save", "os.path.join", "str"], "function", ["None"], ["def", "save_image", "(", "direc", ",", "i", ",", "num", ")", ":", "\n", "  ", "img", "=", "nib", ".", "Nifti1Image", "(", "i", ",", "None", ")", "\n", "imgname", "=", "'outputimage_unet_'", "+", "str", "(", "num", ")", "+", "'.nii.gz'", "\n", "nib", ".", "save", "(", "img", ",", "os", ".", "path", ".", "join", "(", "direc", ",", "imgname", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.testing_unet.trained_network_dis": [[30, 75], ["tensorflow.variable_scope", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "conv3d_WN", "tensorflow.nn.softmax", "scope.reuse_variables", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN"], ["def", "trained_network_dis", "(", "patch", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * patch - input image for the network\n    * reuse - boolean variable to reuse weights\n    Returns: \n    * softmax of logits\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'U'", ")", "as", "scope", ":", "\n", "      ", "if", "reuse", ":", "\n", "        ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "h0", "=", "lrelu", "(", "conv3d_WN", "(", "patch", ",", "32", ",", "name", "=", "'u_h0_conv'", ")", ")", "\n", "h1", "=", "lrelu", "(", "conv3d_WN", "(", "h0", ",", "32", ",", "name", "=", "'u_h1_conv'", ")", ")", "\n", "p1", "=", "avg_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "lrelu", "(", "conv3d_WN", "(", "p1", ",", "64", ",", "name", "=", "'u_h2_conv'", ")", ")", "\n", "h3", "=", "lrelu", "(", "conv3d_WN", "(", "h2", ",", "64", ",", "name", "=", "'u_h3_conv'", ")", ")", "\n", "p3", "=", "avg_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "lrelu", "(", "conv3d_WN", "(", "p3", ",", "128", ",", "name", "=", "'u_h4_conv'", ")", ")", "\n", "h5", "=", "lrelu", "(", "conv3d_WN", "(", "h4", ",", "128", ",", "name", "=", "'u_h5_conv'", ")", ")", "\n", "p5", "=", "avg_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "lrelu", "(", "conv3d_WN", "(", "p5", ",", "256", ",", "name", "=", "'u_h6_conv'", ")", ")", "\n", "h7", "=", "lrelu", "(", "conv3d_WN", "(", "h6", ",", "256", ",", "name", "=", "'u_h7_conv'", ")", ")", "\n", "\n", "up1", "=", "deconv3d_WN", "(", "h7", ",", "256", ",", "name", "=", "'u_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "lrelu", "(", "conv3d_WN", "(", "up1", ",", "128", ",", "name", "=", "'u_h8_conv'", ")", ")", "\n", "h9", "=", "lrelu", "(", "conv3d_WN", "(", "h8", ",", "128", ",", "name", "=", "'u_h9_conv'", ")", ")", "\n", "\n", "up2", "=", "deconv3d_WN", "(", "h9", ",", "128", ",", "name", "=", "'u_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "lrelu", "(", "conv3d_WN", "(", "up2", ",", "64", ",", "name", "=", "'u_h10_conv'", ")", ")", "\n", "h11", "=", "lrelu", "(", "conv3d_WN", "(", "h10", ",", "64", ",", "name", "=", "'u_h11_conv'", ")", ")", "\n", "\n", "up3", "=", "deconv3d_WN", "(", "h11", ",", "64", ",", "name", "=", "'u_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "lrelu", "(", "conv3d_WN", "(", "up3", ",", "32", ",", "name", "=", "'u_h12_conv'", ")", ")", "\n", "h13", "=", "lrelu", "(", "conv3d_WN", "(", "h12", ",", "32", ",", "name", "=", "'u_h13_conv'", ")", ")", "\n", "\n", "h14", "=", "conv3d_WN", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'u_h14_conv'", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.testing_unet.trained_network": [[79, 129], ["tensorflow.variable_scope", "relu", "relu", "max_pool3D", "relu", "relu", "max_pool3D", "relu", "relu", "max_pool3D", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "deconv3d", "tensorflow.concat", "relu", "relu", "conv3d", "tensorflow.nn.softmax", "scope.reuse_variables", "int", "int", "int", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d", "conv3d"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.max_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["def", "trained_network", "(", "patch", ",", "phase", ",", "pshape", ",", "reuse", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n    Parameters:\n    * patch - input image for the network\n    * phase - phase for batchnorm\n    * pshape - shape of the patch\n    * reuse - boolean variable to reuse weights\n    Returns: \n    * softmax of logits\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'U'", ")", "as", "scope", ":", "\n", "    ", "if", "reuse", ":", "\n", "      ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "sh1", ",", "sh2", ",", "sh3", "=", "int", "(", "pshape", "[", "0", "]", "/", "4", ")", ",", "int", "(", "pshape", "[", "0", "]", "/", "2", ")", ",", "int", "(", "pshape", "[", "0", "]", ")", "\n", "\n", "h0", "=", "relu", "(", "d_bns", "[", "0", "]", "(", "conv3d", "(", "patch", ",", "32", ",", "name", "=", "'u_h0_conv'", ")", ",", "phase", ")", ")", "\n", "h1", "=", "relu", "(", "d_bns", "[", "1", "]", "(", "conv3d", "(", "h0", ",", "32", ",", "name", "=", "'u_h1_conv'", ")", ",", "phase", ")", ")", "\n", "p1", "=", "max_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "relu", "(", "d_bns", "[", "2", "]", "(", "conv3d", "(", "p1", ",", "64", ",", "name", "=", "'u_h2_conv'", ")", ",", "phase", ")", ")", "\n", "h3", "=", "relu", "(", "d_bns", "[", "3", "]", "(", "conv3d", "(", "h2", ",", "64", ",", "name", "=", "'u_h3_conv'", ")", ",", "phase", ")", ")", "\n", "p3", "=", "max_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "relu", "(", "d_bns", "[", "4", "]", "(", "conv3d", "(", "p3", ",", "128", ",", "name", "=", "'u_h4_conv'", ")", ",", "phase", ")", ")", "\n", "h5", "=", "relu", "(", "d_bns", "[", "5", "]", "(", "conv3d", "(", "h4", ",", "128", ",", "name", "=", "'u_h5_conv'", ")", ",", "phase", ")", ")", "\n", "p5", "=", "max_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "relu", "(", "d_bns", "[", "6", "]", "(", "conv3d", "(", "p5", ",", "256", ",", "name", "=", "'u_h6_conv'", ")", ",", "phase", ")", ")", "\n", "h7", "=", "relu", "(", "d_bns", "[", "7", "]", "(", "conv3d", "(", "h6", ",", "256", ",", "name", "=", "'u_h7_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up1", "=", "deconv3d", "(", "h7", ",", "[", "F", ".", "batch_size", ",", "sh1", ",", "sh1", ",", "sh1", ",", "256", "]", ",", "name", "=", "'d_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "relu", "(", "d_bns", "[", "8", "]", "(", "conv3d", "(", "up1", ",", "128", ",", "name", "=", "'u_h8_conv'", ")", ",", "phase", ")", ")", "\n", "h9", "=", "relu", "(", "d_bns", "[", "9", "]", "(", "conv3d", "(", "h8", ",", "128", ",", "name", "=", "'u_h9_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up2", "=", "deconv3d", "(", "h9", ",", "[", "F", ".", "batch_size", ",", "sh2", ",", "sh2", ",", "sh2", ",", "128", "]", ",", "name", "=", "'d_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "relu", "(", "d_bns", "[", "10", "]", "(", "conv3d", "(", "up2", ",", "64", ",", "name", "=", "'u_h10_conv'", ")", ",", "phase", ")", ")", "\n", "h11", "=", "relu", "(", "d_bns", "[", "11", "]", "(", "conv3d", "(", "h10", ",", "64", ",", "name", "=", "'u_h11_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "up3", "=", "deconv3d", "(", "h11", ",", "[", "F", ".", "batch_size", ",", "sh3", ",", "sh3", ",", "sh3", ",", "64", "]", ",", "name", "=", "'d_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "relu", "(", "d_bns", "[", "12", "]", "(", "conv3d", "(", "up3", ",", "32", ",", "name", "=", "'u_h12_conv'", ")", ",", "phase", ")", ")", "\n", "h13", "=", "relu", "(", "d_bns", "[", "13", "]", "(", "conv3d", "(", "h12", ",", "32", ",", "name", "=", "'u_h13_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "h14", "=", "conv3d", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'u_h14_conv'", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.testing_unet.test": [[137, 216], ["tensorflow.Graph().as_default", "tensorflow.placeholder", "tensorflow.placeholder", "testing_unet.trained_network_dis", "tensorflow.argmax", "print", "tensorflow.train.Saver", "tf.argmax.get_shape", "tensorflow.Session", "preprocess_dynamic_lab", "int", "numpy.zeros", "print", "print", "range", "print", "print", "recompose3D_overlap", "print", "range", "numpy.reshape", "numpy.reshape", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "tensorflow.Graph", "load_model", "print", "numpy.min", "numpy.max", "sess.run", "print", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.mean", "numpy.mean", "numpy.reshape", "numpy.reshape", "testing_unet.save_image", "sklearn.metrics.f1_score", "print"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.testing_unet.trained_network_dis", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.load_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.save_image"], ["def", "test", "(", "patch_shape", ",", "extraction_step", ")", ":", "\n", "\n", "  ", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", ":", "\n", "    ", "test_patches", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "F", ".", "batch_size", ",", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "\n", "patch_shape", "[", "2", "]", ",", "F", ".", "num_mod", "]", ",", "name", "=", "'real_patches'", ")", "\n", "phase", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "# Define the network", "\n", "# For using actual 3-D U-Net change ***trained_network*** function both in training and testing", "\n", "#output_soft = trained_network(test_patches, phase, patch_shape, reuse=None)", "\n", "output_soft", "=", "trained_network_dis", "(", "test_patches", ",", "reuse", "=", "None", ")", "\n", "\n", "# To convert from one hat form", "\n", "output", "=", "tf", ".", "argmax", "(", "output_soft", ",", "axis", "=", "-", "1", ")", "\n", "print", "(", "\"Output Patch Shape:\"", ",", "output", ".", "get_shape", "(", ")", ")", "\n", "\n", "# To load the saved checkpoint", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "      ", "try", ":", "\n", "        ", "load_model", "(", "F", ".", "best_checkpoint_dir", ",", "sess", ",", "saver", ")", "\n", "print", "(", "\" Checkpoint loaded succesfully!....\\n\"", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "\" [!] Checkpoint loading failed!....\\n\"", ")", "\n", "return", "\n", "\n", "# Get patches from test images", "\n", "", "patches_test", ",", "labels_test", "=", "preprocess_dynamic_lab", "(", "F", ".", "data_directory", ",", "\n", "F", ".", "num_classes", ",", "extraction_step", ",", "patch_shape", ",", "\n", "F", ".", "number_train_images", ",", "validating", "=", "F", ".", "training", ",", "\n", "testing", "=", "F", ".", "testing", ",", "num_images_testing", "=", "F", ".", "number_test_images", ")", "\n", "total_batches", "=", "int", "(", "patches_test", ".", "shape", "[", "0", "]", "/", "F", ".", "batch_size", ")", "\n", "\n", "# Array to store the prediction results", "\n", "predictions_test", "=", "np", ".", "zeros", "(", "(", "patches_test", ".", "shape", "[", "0", "]", ",", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "\n", "patch_shape", "[", "2", "]", ")", ")", "\n", "\n", "print", "(", "\"max and min of patches_test:\"", ",", "np", ".", "min", "(", "patches_test", ")", ",", "np", ".", "max", "(", "patches_test", ")", ")", "\n", "\n", "# Batch wise prediction", "\n", "print", "(", "\"Total number of Batches: \"", ",", "total_batches", ")", "\n", "for", "batch", "in", "range", "(", "total_batches", ")", ":", "\n", "        ", "patches_feed", "=", "patches_test", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "preds", "=", "sess", ".", "run", "(", "output", ",", "feed_dict", "=", "{", "test_patches", ":", "patches_feed", ",", "phase", ":", "False", "}", ")", "\n", "predictions_test", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "preds", "\n", "print", "(", "(", "\"Processed_batch:[%8d/%8d]\"", ")", "%", "(", "batch", ",", "total_batches", ")", ")", "\n", "\n", "", "print", "(", "\"All patches Predicted\"", ")", "\n", "\n", "print", "(", "\"Shape of predictions_test, min and max:\"", ",", "predictions_test", ".", "shape", ",", "np", ".", "min", "(", "predictions_test", ")", ",", "\n", "np", ".", "max", "(", "predictions_test", ")", ")", "\n", "\n", "#To stitch the image back", "\n", "images_pred", "=", "recompose3D_overlap", "(", "predictions_test", ",", "144", ",", "192", ",", "256", ",", "extraction_step", "[", "0", "]", ",", "\n", "extraction_step", "[", "1", "]", ",", "extraction_step", "[", "2", "]", ")", "\n", "\n", "print", "(", "\"Shape of Predicted Output Groundtruth Images:\"", ",", "images_pred", ".", "shape", ",", "\n", "np", ".", "min", "(", "images_pred", ")", ",", "np", ".", "max", "(", "images_pred", ")", ",", "\n", "np", ".", "mean", "(", "images_pred", ")", ",", "np", ".", "mean", "(", "labels_test", ")", ")", "\n", "\n", "# To save the images", "\n", "for", "i", "in", "range", "(", "F", ".", "number_test_images", ")", ":", "\n", "        ", "pred2d", "=", "np", ".", "reshape", "(", "images_pred", "[", "i", "]", ",", "(", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_test", "[", "i", "]", ",", "(", "144", "*", "192", "*", "256", ")", ")", "\n", "save_image", "(", "F", ".", "results_dir", ",", "images_pred", "[", "i", "]", ",", "F", ".", "number_train_images", "+", "i", "+", "2", ")", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "average", "=", "None", ")", "\n", "\n", "# Evaluation", "\n", "", "pred2d", "=", "np", ".", "reshape", "(", "images_pred", ",", "(", "images_pred", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_test", ",", "(", "labels_test", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Testing Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.unet3D.main_unet.main": [[38, 66], ["tensorflow.GPUOptions", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "testing_unet.test", "tensorflow.Session", "model_unet.UNET", "model_unet.UNET.build_model", "model_unet.UNET.train", "tensorflow.ConfigProto"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.build_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train"], ["def", "main", "(", "_", ")", ":", "\n", "# Create required directories", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "checkpoint_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "checkpoint_dir", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "results_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "results_dir", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "best_checkpoint_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "best_checkpoint_dir", ")", "\n", "\n", "# To configure the GPU fraction", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", "FLAGS", ".", "gpu_frac", ")", "\n", "\n", "# Parameters of extracted training and testing patches", "\n", "patch_shape", "=", "(", "32", ",", "32", ",", "32", ")", "\n", "extraction_step", "=", "(", "8", ",", "8", ",", "8", ")", "\n", "testing_extraction_shape", "=", "(", "8", ",", "8", ",", "8", ")", "\n", "\n", "if", "FLAGS", ".", "training", ":", "\n", "# For training the network", "\n", "    ", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "      ", "network", "=", "UNET", "(", "sess", ",", "patch_shape", ",", "extraction_step", ")", "\n", "network", ".", "build_model", "(", ")", "\n", "network", ".", "train", "(", ")", "\n", "", "", "if", "FLAGS", ".", "testing", ":", "\n", "# For testing the network", "\n", "      ", "test", "(", "patch_shape", ",", "testing_extraction_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.main.main": [[49, 78], ["tensorflow.GPUOptions", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "test.test", "tensorflow.Session", "model.model", "model.model.build_model", "model.model.train", "tensorflow.ConfigProto"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.build_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train"], []], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.save_image": [[22, 26], ["nib.Nifti1Image", "nib.save", "os.path.join", "str"], "function", ["None"], ["def", "save_image", "(", "direc", ",", "i", ",", "num", ")", ":", "\n", "  ", "img", "=", "nib", ".", "Nifti1Image", "(", "i", ",", "None", ")", "\n", "imgname", "=", "'outputimage_GANbasedunet_'", "+", "str", "(", "num", ")", "+", "'.nii.gz'", "\n", "nib", ".", "save", "(", "img", ",", "os", ".", "path", ".", "join", "(", "direc", ",", "imgname", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.trained_dis_network": [[29, 74], ["tensorflow.variable_scope", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "conv3d_WN", "tensorflow.nn.softmax", "scope.reuse_variables", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN"], ["", "def", "trained_dis_network", "(", "patch", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * patch - input image for the network\n    * reuse - boolean variable to reuse weights\n    Returns: \n    * softmax of logits \n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'D'", ")", "as", "scope", ":", "\n", "      ", "if", "reuse", ":", "\n", "        ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "h0", "=", "lrelu", "(", "conv3d_WN", "(", "patch", ",", "32", ",", "name", "=", "'d_h0_conv'", ")", ")", "\n", "h1", "=", "lrelu", "(", "conv3d_WN", "(", "h0", ",", "32", ",", "name", "=", "'d_h1_conv'", ")", ")", "\n", "p1", "=", "avg_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "lrelu", "(", "conv3d_WN", "(", "p1", ",", "64", ",", "name", "=", "'d_h2_conv'", ")", ")", "\n", "h3", "=", "lrelu", "(", "conv3d_WN", "(", "h2", ",", "64", ",", "name", "=", "'d_h3_conv'", ")", ")", "\n", "p3", "=", "avg_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "lrelu", "(", "conv3d_WN", "(", "p3", ",", "128", ",", "name", "=", "'d_h4_conv'", ")", ")", "\n", "h5", "=", "lrelu", "(", "conv3d_WN", "(", "h4", ",", "128", ",", "name", "=", "'d_h5_conv'", ")", ")", "\n", "p5", "=", "avg_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "lrelu", "(", "conv3d_WN", "(", "p5", ",", "256", ",", "name", "=", "'d_h6_conv'", ")", ")", "\n", "h7", "=", "lrelu", "(", "conv3d_WN", "(", "h6", ",", "256", ",", "name", "=", "'d_h7_conv'", ")", ")", "\n", "\n", "up1", "=", "deconv3d_WN", "(", "h7", ",", "256", ",", "name", "=", "'d_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "lrelu", "(", "conv3d_WN", "(", "up1", ",", "128", ",", "name", "=", "'d_h8_conv'", ")", ")", "\n", "h9", "=", "lrelu", "(", "conv3d_WN", "(", "h8", ",", "128", ",", "name", "=", "'d_h9_conv'", ")", ")", "\n", "\n", "up2", "=", "deconv3d_WN", "(", "h9", ",", "128", ",", "name", "=", "'d_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "lrelu", "(", "conv3d_WN", "(", "up2", ",", "64", ",", "name", "=", "'d_h10_conv'", ")", ")", "\n", "h11", "=", "lrelu", "(", "conv3d_WN", "(", "h10", ",", "64", ",", "name", "=", "'d_h11_conv'", ")", ")", "\n", "\n", "up3", "=", "deconv3d_WN", "(", "h11", ",", "64", ",", "name", "=", "'d_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "lrelu", "(", "conv3d_WN", "(", "up3", ",", "32", ",", "name", "=", "'d_h12_conv'", ")", ")", "\n", "h13", "=", "lrelu", "(", "conv3d_WN", "(", "h12", ",", "32", ",", "name", "=", "'d_h13_conv'", ")", ")", "\n", "\n", "h14", "=", "conv3d_WN", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'d_h14_conv'", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.test": [[81, 161], ["tensorflow.Graph().as_default", "tensorflow.placeholder", "test.trained_dis_network", "tensorflow.argmax", "print", "tensorflow.train.Saver", "tf.argmax.get_shape", "tensorflow.Session", "preprocess_dynamic_lab", "int", "numpy.zeros", "print", "print", "range", "print", "print", "recompose3D_overlap", "print", "range", "numpy.reshape", "numpy.reshape", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "tensorflow.Graph", "load_model", "print", "numpy.min", "numpy.max", "sess.run", "print", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.mean", "numpy.mean", "numpy.reshape", "numpy.reshape", "test.save_image", "print"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.trained_dis_network", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.load_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.test.save_image"], ["def", "test", "(", "patch_shape", ",", "extraction_step", ")", ":", "\n", "\n", "  ", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", ":", "\n", "    ", "test_patches", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "F", ".", "batch_size", ",", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "\n", "patch_shape", "[", "2", "]", ",", "F", ".", "num_mod", "]", ",", "name", "=", "'real_patches'", ")", "\n", "\n", "# Define the network", "\n", "output_soft", "=", "trained_dis_network", "(", "test_patches", ",", "reuse", "=", "None", ")", "\n", "\n", "# To convert from one hat form", "\n", "output", "=", "tf", ".", "argmax", "(", "output_soft", ",", "axis", "=", "-", "1", ")", "\n", "print", "(", "\"Output Patch Shape:\"", ",", "output", ".", "get_shape", "(", ")", ")", "\n", "\n", "# To load the saved checkpoint", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "      ", "try", ":", "\n", "        ", "load_model", "(", "F", ".", "best_checkpoint_dir", ",", "sess", ",", "saver", ")", "\n", "print", "(", "\" Checkpoint loaded succesfully!....\\n\"", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "\" [!] Checkpoint loading failed!....\\n\"", ")", "\n", "return", "\n", "\n", "# Get patches from test images", "\n", "", "patches_test", ",", "labels_test", "=", "preprocess_dynamic_lab", "(", "F", ".", "data_directory", ",", "\n", "F", ".", "num_classes", ",", "extraction_step", ",", "patch_shape", ",", "\n", "F", ".", "number_train_images", ",", "validating", "=", "F", ".", "training", ",", "\n", "testing", "=", "F", ".", "testing", ",", "num_images_testing", "=", "F", ".", "number_test_images", ")", "\n", "total_batches", "=", "int", "(", "patches_test", ".", "shape", "[", "0", "]", "/", "F", ".", "batch_size", ")", "\n", "\n", "# Array to store the prediction results", "\n", "predictions_test", "=", "np", ".", "zeros", "(", "(", "patches_test", ".", "shape", "[", "0", "]", ",", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "\n", "patch_shape", "[", "2", "]", ")", ")", "\n", "\n", "print", "(", "\"max and min of patches_test:\"", ",", "np", ".", "min", "(", "patches_test", ")", ",", "np", ".", "max", "(", "patches_test", ")", ")", "\n", "\n", "print", "(", "\"Total number of Batches: \"", ",", "total_batches", ")", "\n", "\n", "# Batch wise prediction", "\n", "for", "batch", "in", "range", "(", "total_batches", ")", ":", "\n", "        ", "patches_feed", "=", "patches_test", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "preds", "=", "sess", ".", "run", "(", "output", ",", "feed_dict", "=", "{", "test_patches", ":", "patches_feed", "}", ")", "\n", "predictions_test", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "preds", "\n", "print", "(", "(", "\"Processed_batch:[%8d/%8d]\"", ")", "%", "(", "batch", ",", "total_batches", ")", ")", "\n", "\n", "", "print", "(", "\"All patches Predicted\"", ")", "\n", "\n", "print", "(", "\"Shape of predictions_test, min and max:\"", ",", "predictions_test", ".", "shape", ",", "np", ".", "min", "(", "predictions_test", ")", ",", "\n", "np", ".", "max", "(", "predictions_test", ")", ")", "\n", "\n", "# To stitch the image back", "\n", "images_pred", "=", "recompose3D_overlap", "(", "predictions_test", ",", "144", ",", "192", ",", "256", ",", "extraction_step", "[", "0", "]", ",", "\n", "extraction_step", "[", "1", "]", ",", "extraction_step", "[", "2", "]", ")", "\n", "\n", "print", "(", "\"Shape of Predicted Output Groundtruth Images:\"", ",", "images_pred", ".", "shape", ",", "\n", "np", ".", "min", "(", "images_pred", ")", ",", "np", ".", "max", "(", "images_pred", ")", ",", "\n", "np", ".", "mean", "(", "images_pred", ")", ",", "np", ".", "mean", "(", "labels_test", ")", ")", "\n", "\n", "\n", "# To save the images", "\n", "for", "i", "in", "range", "(", "F", ".", "number_test_images", ")", ":", "\n", "        ", "pred2d", "=", "np", ".", "reshape", "(", "images_pred", "[", "i", "]", ",", "(", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_test", "[", "i", "]", ",", "(", "144", "*", "192", "*", "256", ")", ")", "\n", "save_image", "(", "F", ".", "results_dir", ",", "images_pred", "[", "i", "]", ",", "F", ".", "number_train_images", "+", "i", "+", "2", ")", "\n", "\n", "\n", "# Evaluation", "\n", "", "pred2d", "=", "np", ".", "reshape", "(", "images_pred", ",", "(", "images_pred", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_test", ",", "(", "labels_test", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Testing Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.__init__": [[26, 33], ["batch_norm", "range", "batch_norm", "range"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "sess", ",", "patch_shape", ",", "extraction_step", ")", ":", "\n", "    ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "patch_shape", "=", "patch_shape", "\n", "self", ".", "extraction_step", "=", "extraction_step", "\n", "self", ".", "g_bns", "=", "[", "batch_norm", "(", "name", "=", "'g_bn{}'", ".", "format", "(", "i", ",", ")", ")", "for", "i", "in", "range", "(", "4", ")", "]", "\n", "if", "F", ".", "badGAN", ":", "\n", "      ", "self", ".", "e_bns", "=", "[", "batch_norm", "(", "name", "=", "'e_bn{}'", ".", "format", "(", "i", ",", ")", ")", "for", "i", "in", "range", "(", "3", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator": [[35, 82], ["tensorflow.variable_scope", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "avg_pool3D", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "deconv3d_WN", "tensorflow.concat", "lrelu", "lrelu", "conv3d_WN", "scope.reuse_variables", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "conv3d_WN", "tensorflow.nn.softmax"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.avg_pool3D", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.lrelu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d_WN"], ["", "", "def", "discriminator", "(", "self", ",", "patch", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * patch - input image for the network\n    * reuse - boolean variable to reuse weights\n    Returns:\n    * logits\n    * softmax of logits\n    * features extracted from encoding path\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'D'", ")", "as", "scope", ":", "\n", "      ", "if", "reuse", ":", "\n", "        ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "h0", "=", "lrelu", "(", "conv3d_WN", "(", "patch", ",", "32", ",", "name", "=", "'d_h0_conv'", ")", ")", "\n", "h1", "=", "lrelu", "(", "conv3d_WN", "(", "h0", ",", "32", ",", "name", "=", "'d_h1_conv'", ")", ")", "\n", "p1", "=", "avg_pool3D", "(", "h1", ")", "\n", "\n", "h2", "=", "lrelu", "(", "conv3d_WN", "(", "p1", ",", "64", ",", "name", "=", "'d_h2_conv'", ")", ")", "\n", "h3", "=", "lrelu", "(", "conv3d_WN", "(", "h2", ",", "64", ",", "name", "=", "'d_h3_conv'", ")", ")", "\n", "p3", "=", "avg_pool3D", "(", "h3", ")", "\n", "\n", "h4", "=", "lrelu", "(", "conv3d_WN", "(", "p3", ",", "128", ",", "name", "=", "'d_h4_conv'", ")", ")", "\n", "h5", "=", "lrelu", "(", "conv3d_WN", "(", "h4", ",", "128", ",", "name", "=", "'d_h5_conv'", ")", ")", "\n", "p5", "=", "avg_pool3D", "(", "h5", ")", "\n", "\n", "h6", "=", "lrelu", "(", "conv3d_WN", "(", "p5", ",", "256", ",", "name", "=", "'d_h6_conv'", ")", ")", "\n", "h7", "=", "lrelu", "(", "conv3d_WN", "(", "h6", ",", "256", ",", "name", "=", "'d_h7_conv'", ")", ")", "\n", "\n", "up1", "=", "deconv3d_WN", "(", "h7", ",", "256", ",", "name", "=", "'d_up1_deconv'", ")", "\n", "up1", "=", "tf", ".", "concat", "(", "[", "h5", ",", "up1", "]", ",", "4", ")", "\n", "h8", "=", "lrelu", "(", "conv3d_WN", "(", "up1", ",", "128", ",", "name", "=", "'d_h8_conv'", ")", ")", "\n", "h9", "=", "lrelu", "(", "conv3d_WN", "(", "h8", ",", "128", ",", "name", "=", "'d_h9_conv'", ")", ")", "\n", "\n", "up2", "=", "deconv3d_WN", "(", "h9", ",", "128", ",", "name", "=", "'d_up2_deconv'", ")", "\n", "up2", "=", "tf", ".", "concat", "(", "[", "h3", ",", "up2", "]", ",", "4", ")", "\n", "h10", "=", "lrelu", "(", "conv3d_WN", "(", "up2", ",", "64", ",", "name", "=", "'d_h10_conv'", ")", ")", "\n", "h11", "=", "lrelu", "(", "conv3d_WN", "(", "h10", ",", "64", ",", "name", "=", "'d_h11_conv'", ")", ")", "\n", "\n", "up3", "=", "deconv3d_WN", "(", "h11", ",", "64", ",", "name", "=", "'d_up3_deconv'", ")", "\n", "up3", "=", "tf", ".", "concat", "(", "[", "h1", ",", "up3", "]", ",", "4", ")", "\n", "h12", "=", "lrelu", "(", "conv3d_WN", "(", "up3", ",", "32", ",", "name", "=", "'d_h12_conv'", ")", ")", "\n", "h13", "=", "lrelu", "(", "conv3d_WN", "(", "h12", ",", "32", ",", "name", "=", "'d_h13_conv'", ")", ")", "\n", "\n", "h14", "=", "conv3d_WN", "(", "h13", ",", "F", ".", "num_classes", ",", "name", "=", "'d_h14_conv'", ")", "\n", "\n", "return", "h14", ",", "tf", ".", "nn", ".", "softmax", "(", "h14", ")", ",", "[", "h0", ",", "h1", ",", "h2", ",", "h3", ",", "h4", ",", "h5", ",", "h6", ",", "h7", ",", "h8", ",", "h9", ",", "h10", ",", "h11", ",", "h12", ",", "h13", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.generator": [[83, 111], ["tensorflow.variable_scope", "linear", "tensorflow.reshape", "relu", "relu", "relu", "relu", "deconv3d_WN", "tensorflow.nn.tanh", "int", "int", "int", "int", "deconv3d", "deconv3d", "deconv3d"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.deconv3d"], ["", "", "def", "generator", "(", "self", ",", "z", ",", "phase", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * z - Noise vector for generating 3D patches\n    * phase - boolean variable to represent phase of operation of batchnorm\n    Returns:\n    * generated 3D patches\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'G'", ")", "as", "scope", ":", "\n", "      ", "sh1", ",", "sh2", ",", "sh3", ",", "sh4", "=", "int", "(", "self", ".", "patch_shape", "[", "0", "]", "/", "16", ")", ",", "int", "(", "self", ".", "patch_shape", "[", "0", "]", "/", "8", ")", ",", "int", "(", "self", ".", "patch_shape", "[", "0", "]", "/", "4", ")", ",", "int", "(", "self", ".", "patch_shape", "[", "0", "]", "/", "2", ")", "\n", "\n", "h0", "=", "linear", "(", "z", ",", "sh1", "*", "sh1", "*", "sh1", "*", "512", ",", "'g_h0_lin'", ")", "\n", "h0", "=", "tf", ".", "reshape", "(", "h0", ",", "[", "F", ".", "batch_size", ",", "sh1", ",", "sh1", ",", "sh1", ",", "512", "]", ")", "\n", "h0", "=", "relu", "(", "self", ".", "g_bns", "[", "0", "]", "(", "h0", ",", "phase", ")", ")", "\n", "\n", "h1", "=", "relu", "(", "self", ".", "g_bns", "[", "1", "]", "(", "deconv3d", "(", "h0", ",", "[", "F", ".", "batch_size", ",", "sh2", ",", "sh2", ",", "sh2", ",", "256", "]", ",", "\n", "name", "=", "'g_h1_deconv'", ")", ",", "phase", ")", ")", "\n", "\n", "h2", "=", "relu", "(", "self", ".", "g_bns", "[", "2", "]", "(", "deconv3d", "(", "h1", ",", "[", "F", ".", "batch_size", ",", "sh3", ",", "sh3", ",", "sh3", ",", "128", "]", ",", "\n", "name", "=", "'g_h2_deconv'", ")", ",", "phase", ")", ")", "\n", "\n", "h3", "=", "relu", "(", "self", ".", "g_bns", "[", "3", "]", "(", "deconv3d", "(", "h2", ",", "[", "F", ".", "batch_size", ",", "sh4", ",", "sh4", ",", "sh4", ",", "64", "]", ",", "\n", "name", "=", "'g_h3_deconv'", ")", ",", "phase", ")", ")", "\n", "\n", "h4", "=", "deconv3d_WN", "(", "h3", ",", "F", ".", "num_mod", ",", "name", "=", "'g_h4_deconv'", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "tanh", "(", "h4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.encoder": [[112, 130], ["tensorflow.variable_scope", "relu", "relu", "relu", "tensorflow.reshape", "linear_WN", "tensorflow.split", "conv3d", "conv3d", "conv3d"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.relu", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.linear_WN", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.conv3d"], ["", "", "def", "encoder", "(", "self", ",", "patch", ",", "phase", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n    * patch - patches generated from the generator\n    * phase - boolean variable to represent phase of operation of batchnorm\n    Returns:\n    * splitted logits\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'E'", ")", "as", "scope", ":", "\n", "      ", "h0", "=", "relu", "(", "self", ".", "e_bns", "[", "0", "]", "(", "conv3d", "(", "patch", ",", "128", ",", "5", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "name", "=", "'e_h0_conv'", ")", ",", "phase", ")", ")", "\n", "h1", "=", "relu", "(", "self", ".", "e_bns", "[", "1", "]", "(", "conv3d", "(", "h0", ",", "256", ",", "5", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "name", "=", "'e_h1_conv'", ")", ",", "phase", ")", ")", "\n", "h2", "=", "relu", "(", "self", ".", "e_bns", "[", "2", "]", "(", "conv3d", "(", "h1", ",", "512", ",", "5", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "name", "=", "'e_h2_conv'", ")", ",", "phase", ")", ")", "\n", "\n", "h2", "=", "tf", ".", "reshape", "(", "h2", ",", "[", "h2", ".", "shape", "[", "0", "]", ",", "h2", ".", "shape", "[", "1", "]", "*", "h2", ".", "shape", "[", "2", "]", "*", "h2", ".", "shape", "[", "3", "]", "*", "h2", ".", "shape", "[", "4", "]", "]", ")", "\n", "h3", "=", "linear_WN", "(", "h2", ",", "F", ".", "noise_dim", "*", "2", ",", "'e_h3_lin'", ")", "\n", "\n", "h3", "=", "tf", ".", "split", "(", "h3", ",", "2", ",", "1", ")", "\n", "return", "h3", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.build_model": [[136, 213], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "model.model.generator", "model.model.discriminator", "model.model.discriminator", "model.model.discriminator", "tensorflow.argmax", "tensorflow.constant", "tensorflow.reduce_sum", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.reduce_mean", "tensorflow.reduce_logsumexp", "tensorflow.reduce_logsumexp", "tensorflow.trainable_variables", "tensorflow.train.Saver", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "compute_weighted_fm_loss", "model.model.encoder", "gaussian_nll", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.softplus", "tensorflow.abs", "tensorflow.nn.softplus", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.generator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.discriminator", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.compute_weighted_fm_loss", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.encoder", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.operations.gaussian_nll"], ["def", "build_model", "(", "self", ")", ":", "\n", "    ", "self", ".", "patches_lab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "F", ".", "batch_size", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "\n", "self", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "patch_shape", "[", "2", "]", ",", "F", ".", "num_mod", "]", ",", "name", "=", "'real_images_l'", ")", "\n", "self", ".", "patches_unlab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "F", ".", "batch_size", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "\n", "self", ".", "patch_shape", "[", "1", "]", ",", "self", ".", "patch_shape", "[", "2", "]", ",", "F", ".", "num_mod", "]", ",", "name", "=", "'real_images_unl'", ")", "\n", "\n", "self", ".", "z_gen", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "F", ".", "noise_dim", "]", ",", "name", "=", "'noise'", ")", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "uint8", ",", "[", "F", ".", "batch_size", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "1", "]", ",", "\n", "self", ".", "patch_shape", "[", "2", "]", "]", ",", "name", "=", "'image_labels'", ")", "\n", "self", ".", "phase", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "#To make one hot of labels", "\n", "self", ".", "labels_1hot", "=", "tf", ".", "one_hot", "(", "self", ".", "labels", ",", "depth", "=", "F", ".", "num_classes", ")", "\n", "\n", "# To generate samples from noise", "\n", "self", ".", "patches_fake", "=", "self", ".", "generator", "(", "self", ".", "z_gen", ",", "self", ".", "phase", ")", "\n", "\n", "# Forward pass through network with different kinds of training patches", "\n", "self", ".", "D_logits_lab", ",", "self", ".", "D_probdist", ",", "_", "=", "self", ".", "discriminator", "(", "self", ".", "patches_lab", ",", "reuse", "=", "False", ")", "\n", "self", ".", "D_logits_unlab", ",", "_", ",", "self", ".", "features_unlab", "=", "self", ".", "discriminator", "(", "self", ".", "patches_unlab", ",", "reuse", "=", "True", ")", "\n", "self", ".", "D_logits_fake", ",", "_", ",", "self", ".", "features_fake", "=", "self", ".", "discriminator", "(", "self", ".", "patches_fake", ",", "reuse", "=", "True", ")", "\n", "\n", "\n", "# To obtain Validation Output", "\n", "self", ".", "Val_output", "=", "tf", ".", "argmax", "(", "self", ".", "D_probdist", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# Supervised loss", "\n", "# Weighted cross entropy loss (You can play with these values)", "\n", "# Weights of different class are: Background- 0.33, CSF- 1.5, GM- 0.83, WM- 1.33", "\n", "class_weights", "=", "tf", ".", "constant", "(", "[", "[", "0.33", ",", "1.5", ",", "0.83", ",", "1.33", "]", "]", ")", "\n", "weights", "=", "tf", ".", "reduce_sum", "(", "class_weights", "*", "self", ".", "labels_1hot", ",", "axis", "=", "-", "1", ")", "\n", "unweighted_losses", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits_v2", "(", "logits", "=", "self", ".", "D_logits_lab", ",", "labels", "=", "self", ".", "labels_1hot", ")", "\n", "weighted_losses", "=", "unweighted_losses", "*", "weights", "\n", "self", ".", "d_loss_lab", "=", "tf", ".", "reduce_mean", "(", "weighted_losses", ")", "\n", "\n", "# Unsupervised loss", "\n", "self", ".", "unl_lsexp", "=", "tf", ".", "reduce_logsumexp", "(", "self", ".", "D_logits_unlab", ",", "-", "1", ")", "\n", "self", ".", "fake_lsexp", "=", "tf", ".", "reduce_logsumexp", "(", "self", ".", "D_logits_fake", ",", "-", "1", ")", "\n", "# Unlabeled loss", "\n", "self", ".", "true_loss", "=", "-", "F", ".", "tlw", "*", "tf", ".", "reduce_mean", "(", "self", ".", "unl_lsexp", ")", "+", "F", ".", "tlw", "*", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softplus", "(", "self", ".", "unl_lsexp", ")", ")", "\n", "# Fake loss", "\n", "self", ".", "fake_loss", "=", "F", ".", "flw", "*", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softplus", "(", "self", ".", "fake_lsexp", ")", ")", "\n", "self", ".", "d_loss_unlab", "=", "self", ".", "true_loss", "+", "self", ".", "fake_loss", "\n", "\n", "#Total discriminator loss", "\n", "self", ".", "d_loss", "=", "self", ".", "d_loss_lab", "+", "self", ".", "d_loss_unlab", "\n", "\n", "#Feature matching loss", "\n", "if", "not", "F", ".", "use_weighted_fm", ":", "\n", "        ", "self", ".", "g_loss_fm", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "tf", ".", "reduce_mean", "(", "self", ".", "features_unlab", "[", "6", "]", ",", "0", ")", "-", "tf", ".", "reduce_mean", "(", "self", ".", "features_fake", "[", "6", "]", ",", "0", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "g_loss_fm", ",", "_", "=", "compute_weighted_fm_loss", "(", "[", "self", ".", "features_unlab", ",", "self", ".", "features_fake", "]", ")", "\n", "\n", "", "if", "F", ".", "badGAN", ":", "\n", "# Mean and standard deviation for variational inference loss", "\n", "      ", "self", ".", "mu", ",", "self", ".", "log_sigma", "=", "self", ".", "encoder", "(", "self", ".", "patches_fake", ",", "self", ".", "phase", ")", "\n", "# Generator Loss via variational inference", "\n", "self", ".", "vi_loss", "=", "gaussian_nll", "(", "self", ".", "mu", ",", "self", ".", "log_sigma", ",", "self", ".", "z_gen", ")", "\n", "# Total Generator Loss", "\n", "self", ".", "g_loss", "=", "self", ".", "g_loss_fm", "+", "F", ".", "vi_weight", "*", "self", ".", "vi_loss", "\n", "", "else", ":", "\n", "# Total Generator Loss", "\n", "      ", "self", ".", "g_loss", "=", "self", ".", "g_loss_fm", "\n", "\n", "\n", "", "t_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "\n", "#define the trainable variables", "\n", "self", ".", "d_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'d_'", "in", "var", ".", "name", "]", "\n", "self", ".", "g_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'g_'", "in", "var", ".", "name", "]", "\n", "if", "F", ".", "badGAN", ":", "\n", "      ", "self", ".", "e_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'e_'", "in", "var", ".", "name", "]", "\n", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.proposed_model.model.model.train": [[220, 382], ["dataset_badGAN", "tensorflow.get_collection", "tensorflow.global_variables_initializer().run", "preprocess_dynamic_lab", "numpy.zeros", "six.moves.xrange", "tensorflow.control_dependencies", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "print", "int", "dataset_badGAN.batch_train", "save_model", "print", "int", "print", "range", "print", "print", "recompose3D_overlap", "val_image_pred.astype.astype.astype", "print", "numpy.reshape", "numpy.reshape", "sklearn.metrics.f1_score", "print", "print", "print", "print", "print", "print", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.global_variables_initializer", "load_model", "print", "numpy.random.uniform().astype", "model.model.sess.run", "model.model.d_loss_lab.eval", "model.model.true_loss.eval", "model.model.fake_loss.eval", "model.model.g_loss_fm.eval", "model.model.Val_output.eval", "model.model.d_loss_lab.eval", "print", "numpy.min", "numpy.max", "numpy.unique", "numpy.unique", "numpy.mean", "numpy.mean", "save_model", "print", "open", "f.write", "open", "f.write", "open", "f.write", "open", "f.write", "open", "f.write", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "print", "model.model.sess.run", "model.model.sess.run", "model.model.vi_loss.eval", "print", "print", "tensorflow.train.AdamOptimizer", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.batch_train", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.save_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.recompose3D_overlap", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.load_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.lib.utils.save_model", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run"], ["def", "train", "(", "self", ")", ":", "\n", "\n", "# Instantiate the dataset class", "\n", "    ", "data", "=", "dataset_badGAN", "(", "num_classes", "=", "F", ".", "num_classes", ",", "extraction_step", "=", "self", ".", "extraction_step", ",", "\n", "number_images_training", "=", "F", ".", "number_train_images", ",", "batch_size", "=", "F", ".", "batch_size", ",", "\n", "patch_shape", "=", "self", ".", "patch_shape", ",", "number_unlab_images_training", "=", "F", ".", "number_train_unlab_images", ",", "\n", "data_directory", "=", "F", ".", "data_directory", ")", "\n", "\n", "# Optimizer operations", "\n", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "      ", "d_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "F", ".", "learning_rate_D", ",", "beta1", "=", "F", ".", "beta1D", ")", ".", "minimize", "(", "self", ".", "d_loss", ",", "var_list", "=", "self", ".", "d_vars", ")", "\n", "g_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "F", ".", "learning_rate_G", ",", "beta1", "=", "F", ".", "beta1G", ")", ".", "minimize", "(", "self", ".", "g_loss", ",", "var_list", "=", "self", ".", "g_vars", ")", "\n", "if", "F", ".", "badGAN", ":", "\n", "        ", "e_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "F", ".", "learning_rate_E", ",", "beta1", "=", "F", ".", "beta1E", ")", ".", "minimize", "(", "self", ".", "g_loss", ",", "var_list", "=", "self", ".", "e_vars", ")", "\n", "\n", "", "", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "# Load checkpoints if required", "\n", "if", "F", ".", "load_chkpt", ":", "\n", "      ", "try", ":", "\n", "        ", "load_model", "(", "F", ".", "checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "print", "(", "\"\\n [*] Checkpoint loaded succesfully!\"", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "\"\\n [!] Checkpoint loading failed!\"", ")", "\n", "", "", "else", ":", "\n", "      ", "print", "(", "\"\\n [*] Checkpoint load not required.\"", ")", "\n", "\n", "# Load the validation data", "\n", "", "patches_val", ",", "labels_val_patch", ",", "labels_val", "=", "preprocess_dynamic_lab", "(", "F", ".", "data_directory", ",", "\n", "F", ".", "num_classes", ",", "self", ".", "extraction_step", ",", "self", ".", "patch_shape", ",", "\n", "F", ".", "number_train_images", ",", "validating", "=", "F", ".", "training", ",", "\n", "testing", "=", "F", ".", "testing", ",", "num_images_testing", "=", "F", ".", "number_test_images", ")", "\n", "\n", "predictions_val", "=", "np", ".", "zeros", "(", "(", "patches_val", ".", "shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "0", "]", ",", "self", ".", "patch_shape", "[", "1", "]", ",", "\n", "self", ".", "patch_shape", "[", "2", "]", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "max_par", "=", "0.0", "\n", "max_loss", "=", "100", "\n", "for", "epoch", "in", "xrange", "(", "int", "(", "F", ".", "epoch", ")", ")", ":", "\n", "      ", "idx", "=", "0", "\n", "batch_iter_train", "=", "data", ".", "batch_train", "(", ")", "\n", "total_val_loss", "=", "0", "\n", "total_train_loss_CE", "=", "0", "\n", "total_train_loss_UL", "=", "0", "\n", "total_train_loss_FK", "=", "0", "\n", "total_gen_FMloss", "=", "0", "\n", "\n", "for", "patches_lab", ",", "patches_unlab", ",", "labels", "in", "batch_iter_train", ":", "\n", "# Network update", "\n", "        ", "sample_z_gen", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "[", "F", ".", "batch_size", ",", "F", ".", "noise_dim", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "_", "=", "self", ".", "sess", ".", "run", "(", "d_optim", ",", "feed_dict", "=", "{", "self", ".", "patches_lab", ":", "patches_lab", ",", "self", ".", "patches_unlab", ":", "patches_unlab", ",", "\n", "self", ".", "z_gen", ":", "sample_z_gen", ",", "self", ".", "labels", ":", "labels", ",", "self", ".", "phase", ":", "True", "}", ")", "\n", "\n", "if", "F", ".", "badGAN", ":", "\n", "          ", "_", ",", "_", "=", "self", ".", "sess", ".", "run", "(", "[", "e_optim", ",", "g_optim", "]", ",", "feed_dict", "=", "{", "self", ".", "patches_unlab", ":", "patches_unlab", ",", "self", ".", "z_gen", ":", "sample_z_gen", ",", "\n", "self", ".", "z_gen", ":", "sample_z_gen", ",", "self", ".", "phase", ":", "True", "}", ")", "\n", "", "else", ":", "\n", "          ", "_", "=", "self", ".", "sess", ".", "run", "(", "g_optim", ",", "feed_dict", "=", "{", "self", ".", "patches_unlab", ":", "patches_unlab", ",", "self", ".", "z_gen", ":", "sample_z_gen", ",", "\n", "self", ".", "z_gen", ":", "sample_z_gen", ",", "self", ".", "phase", ":", "True", "}", ")", "\n", "\n", "", "feed_dict", "=", "{", "self", ".", "patches_lab", ":", "patches_lab", ",", "self", ".", "patches_unlab", ":", "patches_unlab", ",", "\n", "self", ".", "z_gen", ":", "sample_z_gen", ",", "self", ".", "labels", ":", "labels", ",", "self", ".", "phase", ":", "True", "}", "\n", "\n", "# Evaluate losses for plotting/printing purposes", "\n", "d_loss_lab", "=", "self", ".", "d_loss_lab", ".", "eval", "(", "feed_dict", ")", "\n", "d_loss_unlab_true", "=", "self", ".", "true_loss", ".", "eval", "(", "feed_dict", ")", "\n", "d_loss_unlab_fake", "=", "self", ".", "fake_loss", ".", "eval", "(", "feed_dict", ")", "\n", "g_loss_fm", "=", "self", ".", "g_loss_fm", ".", "eval", "(", "feed_dict", ")", "\n", "\n", "total_train_loss_CE", "=", "total_train_loss_CE", "+", "d_loss_lab", "\n", "total_train_loss_UL", "=", "total_train_loss_UL", "+", "d_loss_unlab_true", "\n", "total_train_loss_FK", "=", "total_train_loss_FK", "+", "d_loss_unlab_fake", "\n", "total_gen_FMloss", "=", "total_gen_FMloss", "+", "g_loss_fm", "\n", "\n", "idx", "+=", "1", "\n", "if", "F", ".", "badGAN", ":", "\n", "          ", "vi_loss", "=", "self", ".", "vi_loss", ".", "eval", "(", "feed_dict", ")", "\n", "print", "(", "(", "\"Epoch:[%2d] [%4d/%4d] Labeled loss:%.2e Unlabeled loss:%.2e Fake loss:%.2e Generator FM loss:%.8f Generator VI loss:%.8f\\n\"", ")", "%", "\n", "(", "epoch", ",", "idx", ",", "data", ".", "num_batches", ",", "d_loss_lab", ",", "d_loss_unlab_true", ",", "d_loss_unlab_fake", ",", "g_loss_fm", ",", "vi_loss", ")", ")", "\n", "", "else", ":", "\n", "          ", "print", "(", "(", "\"Epoch:[%2d] [%4d/%4d] Labeled loss:%.2e Unlabeled loss:%.2e Fake loss:%.2e Generator loss:%.8f \\n\"", ")", "%", "\n", "(", "epoch", ",", "idx", ",", "data", ".", "num_batches", ",", "d_loss_lab", ",", "d_loss_unlab_true", ",", "d_loss_unlab_fake", ",", "g_loss_fm", ")", ")", "\n", "\n", "# Save the curret model", "\n", "", "", "save_model", "(", "F", ".", "checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "\n", "avg_train_loss_CE", "=", "total_train_loss_CE", "/", "(", "idx", "*", "1.0", ")", "\n", "avg_train_loss_UL", "=", "total_train_loss_UL", "/", "(", "idx", "*", "1.0", ")", "\n", "avg_train_loss_FK", "=", "total_train_loss_FK", "/", "(", "idx", "*", "1.0", ")", "\n", "avg_gen_FMloss", "=", "total_gen_FMloss", "/", "(", "idx", "*", "1.0", ")", "\n", "\n", "print", "(", "'\\n\\n'", ")", "\n", "\n", "total_batches", "=", "int", "(", "patches_val", ".", "shape", "[", "0", "]", "/", "F", ".", "batch_size", ")", "\n", "print", "(", "\"Total number of batches for validation: \"", ",", "total_batches", ")", "\n", "\n", "# Prediction of validation patches", "\n", "for", "batch", "in", "range", "(", "total_batches", ")", ":", "\n", "        ", "patches_feed", "=", "patches_val", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "labels_feed", "=", "labels_val_patch", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "\n", "feed_dict", "=", "{", "self", ".", "patches_lab", ":", "patches_feed", ",", "\n", "self", ".", "labels", ":", "labels_feed", ",", "self", ".", "phase", ":", "False", "}", "\n", "preds", "=", "self", ".", "Val_output", ".", "eval", "(", "feed_dict", ")", "\n", "val_loss", "=", "self", ".", "d_loss_lab", ".", "eval", "(", "feed_dict", ")", "\n", "\n", "predictions_val", "[", "batch", "*", "F", ".", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "F", ".", "batch_size", ",", ":", ",", ":", ",", ":", "]", "=", "preds", "\n", "print", "(", "(", "\"Validated Patch:[%8d/%8d]\"", ")", "%", "(", "batch", ",", "total_batches", ")", ")", "\n", "total_val_loss", "=", "total_val_loss", "+", "val_loss", "\n", "\n", "# To compute average patchvise validation loss(cross entropy loss)", "\n", "", "avg_val_loss", "=", "total_val_loss", "/", "(", "total_batches", "*", "1.0", ")", "\n", "\n", "print", "(", "\"All validation patches Predicted\"", ")", "\n", "\n", "print", "(", "\"Shape of predictions_val, min and max:\"", ",", "predictions_val", ".", "shape", ",", "np", ".", "min", "(", "predictions_val", ")", ",", "\n", "np", ".", "max", "(", "predictions_val", ")", ")", "\n", "\n", "# To stitch back the patches into an entire image", "\n", "val_image_pred", "=", "recompose3D_overlap", "(", "predictions_val", ",", "144", ",", "192", ",", "256", ",", "self", ".", "extraction_step", "[", "0", "]", ",", "\n", "self", ".", "extraction_step", "[", "1", "]", ",", "self", ".", "extraction_step", "[", "2", "]", ")", "\n", "val_image_pred", "=", "val_image_pred", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "print", "(", "\"Shape of Predicted Output Groundtruth Images:\"", ",", "val_image_pred", ".", "shape", ",", "\n", "np", ".", "unique", "(", "val_image_pred", ")", ",", "\n", "np", ".", "unique", "(", "labels_val", ")", ",", "\n", "np", ".", "mean", "(", "val_image_pred", ")", ",", "np", ".", "mean", "(", "labels_val", ")", ")", "\n", "\n", "\n", "pred2d", "=", "np", ".", "reshape", "(", "val_image_pred", ",", "(", "val_image_pred", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "lab2d", "=", "np", ".", "reshape", "(", "labels_val", ",", "(", "labels_val", ".", "shape", "[", "0", "]", "*", "144", "*", "192", "*", "256", ")", ")", "\n", "\n", "# For printing the validation results", "\n", "F1_score", "=", "f1_score", "(", "lab2d", ",", "pred2d", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "average", "=", "None", ")", "\n", "print", "(", "\"Validation Dice Coefficient.... \"", ")", "\n", "print", "(", "\"Background:\"", ",", "F1_score", "[", "0", "]", ")", "\n", "print", "(", "\"CSF:\"", ",", "F1_score", "[", "1", "]", ")", "\n", "print", "(", "\"GM:\"", ",", "F1_score", "[", "2", "]", ")", "\n", "print", "(", "\"WM:\"", ",", "F1_score", "[", "3", "]", ")", "\n", "\n", "# To Save the best model", "\n", "if", "(", "max_par", "<", "(", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", ")", ")", ":", "\n", "        ", "max_par", "=", "(", "F1_score", "[", "2", "]", "+", "F1_score", "[", "3", "]", ")", "\n", "save_model", "(", "F", ".", "best_checkpoint_dir", ",", "self", ".", "sess", ",", "self", ".", "saver", ")", "\n", "print", "(", "\"Best checkpoint updated from validation results.\"", ")", "\n", "\n", "# To save the losses for plotting", "\n", "", "print", "(", "\"Average Validation Loss:\"", ",", "avg_val_loss", ")", "\n", "with", "open", "(", "'Val_loss_GAN.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'%.2e \\n'", "%", "avg_val_loss", ")", "\n", "", "with", "open", "(", "'Train_loss_CE.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'%.2e \\n'", "%", "avg_train_loss_CE", ")", "\n", "", "with", "open", "(", "'Train_loss_UL.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'%.2e \\n'", "%", "avg_train_loss_UL", ")", "\n", "", "with", "open", "(", "'Train_loss_FK.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'%.2e \\n'", "%", "avg_train_loss_FK", ")", "\n", "", "with", "open", "(", "'Train_loss_FM.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'%.2e \\n'", "%", "avg_gen_FMloss", ")", "\n", "", "", "return", "\n", "", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset.__init__": [[276, 288], ["preprocess.preprocess_dynamic_lab", "sklearn.utils.shuffle", "print", "print", "print", "numpy.max", "numpy.min", "numpy.unique"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab"], []], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset.batch_train": [[289, 294], ["range", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.__init__": [[300, 326], ["preprocess.preprocess_dynamic_lab", "sklearn.utils.shuffle", "preprocess.preprocess_dynamic_unlab", "sklearn.utils.shuffle", "print", "numpy.concatenate", "numpy.concatenate", "print", "print", "print", "print", "len", "len", "len", "len", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.unique", "numpy.repeat", "numpy.repeat"], "methods", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_unlab"], []], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.dataset_badGAN.batch_train": [[327, 333], ["range", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename": [[23, 26], ["pattern.format"], "function", ["None"], ["print", "(", "image_path", ")", "\n", "return", "nib", ".", "load", "(", "image_path", ")", "\n", "\n", "", "def", "read_vol", "(", "case_idx", ",", "input_name", ",", "dir", ")", ":", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_set_name": [[27, 29], ["None"], "function", ["None"], ["    ", "image_data", "=", "read_data", "(", "case_idx", ",", "input_name", ",", "dir", ")", "\n", "return", "image_data", ".", "get_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_data": [[30, 37], ["preprocess.get_set_name", "preprocess.get_filename", "print", "nibabel.load"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_set_name", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename"], ["", "def", "correct_bias", "(", "in_file", ",", "out_file", ")", ":", "\n", "    ", "correct", "=", "N4BiasFieldCorrection", "(", ")", "\n", "correct", ".", "inputs", ".", "input_image", "=", "in_file", "\n", "correct", ".", "inputs", ".", "output_image", "=", "out_file", "\n", "done", "=", "correct", ".", "run", "(", ")", "\n", "return", "done", ".", "outputs", ".", "output_image", "\n", "\n", "", "def", "normalise", "(", "case_idx", ",", "input_name", ",", "in_dir", ",", "out_dir", ",", "copy", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol": [[38, 41], ["preprocess.read_data", "read_data.get_data"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_data"], ["\t", "set_name", "=", "get_set_name", "(", "case_idx", ")", "\n", "image_in_path", "=", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "in_dir", ")", "\n", "image_out_path", "=", "get_filename", "(", "set_name", ",", "case_idx", ",", "input_name", ",", "out_dir", ")", "\n", "if", "copy", ":", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.correct_bias": [[42, 48], ["nipype.interfaces.ants.N4BiasFieldCorrection", "nipype.interfaces.ants.N4BiasFieldCorrection.run"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.agents.supervised_baseline.Supervised_Model.run"], ["\t\t", "shutil", ".", "copy", "(", "image_in_path", ",", "image_out_path", ")", "\n", "", "else", ":", "\n", "\t\t", "correct_bias", "(", "image_in_path", ",", "image_out_path", ")", "\n", "", "print", "(", "image_in_path", "+", "\" done.\"", ")", "\n", "\n", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise": [[49, 58], ["preprocess.get_set_name", "preprocess.get_filename", "preprocess.get_filename", "print", "shutil.copy", "preprocess.correct_bias"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_set_name", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_filename", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.correct_bias"], ["\n", "def", "extract_patches", "(", "volume", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "'float32'", ")", ":", "\n", "    ", "patch_h", ",", "patch_w", ",", "patch_d", "=", "patch_shape", "[", "0", "]", ",", "patch_shape", "[", "1", "]", ",", "patch_shape", "[", "2", "]", "\n", "stride_h", ",", "stride_w", ",", "stride_d", "=", "extraction_step", "[", "0", "]", ",", "extraction_step", "[", "1", "]", ",", "extraction_step", "[", "2", "]", "\n", "img_h", ",", "img_w", ",", "img_d", "=", "volume", ".", "shape", "[", "0", "]", ",", "volume", ".", "shape", "[", "1", "]", ",", "volume", ".", "shape", "[", "2", "]", "\n", "N_patches_h", "=", "(", "img_h", "-", "patch_h", ")", "//", "stride_h", "+", "1", "\n", "N_patches_w", "=", "(", "img_w", "-", "patch_w", ")", "//", "stride_w", "+", "1", "\n", "N_patches_d", "=", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", "\n", "N_patches_img", "=", "N_patches_h", "*", "N_patches_w", "*", "N_patches_d", "\n", "raw_patch_martrix", "=", "np", ".", "zeros", "(", "(", "N_patches_img", ",", "patch_h", ",", "patch_w", ",", "patch_d", ")", ",", "dtype", "=", "datype", ")", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches": [[64, 85], ["numpy.zeros", "range", "range", "range"], "function", ["None"], ["            ", "for", "d", "in", "range", "(", "(", "img_d", "-", "patch_d", ")", "//", "stride_d", "+", "1", ")", ":", "\n", "                ", "raw_patch_martrix", "[", "k", "]", "=", "volume", "[", "h", "*", "stride_h", ":", "(", "h", "*", "stride_h", ")", "+", "patch_h", ",", "w", "*", "stride_w", ":", "(", "w", "*", "stride_w", ")", "+", "patch_w", ",", "d", "*", "stride_d", ":", "(", "d", "*", "stride_d", ")", "+", "patch_d", "]", "\n", "k", "+=", "1", "\n", "", "", "", "assert", "(", "k", "==", "N_patches_img", ")", "\n", "return", "raw_patch_martrix", "\n", "\n", "\n", "", "\"\"\"\nTo extract labeled patches from array of 3D labeled images\n\"\"\"", "\n", "def", "get_patches_lab", "(", "T1_vols", ",", "T2_vols", ",", "label_vols", ",", "extraction_step", ",", "\n", "patch_shape", ",", "validating", ",", "testing", ",", "num_images_training", ")", ":", "\n", "    ", "patch_shape_1d", "=", "patch_shape", "[", "0", "]", "\n", "# Extract patches from input volumes and ground truth", "\n", "x", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "y", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "T1_vols", ")", ")", ":", "\n", "        ", "y_length", "=", "len", "(", "y", ")", "\n", "if", "testing", ":", "\n", "            ", "print", "(", "(", "\"Extracting Patches from Image %2d ....\"", ")", "%", "(", "num_images_training", "+", "idx", "+", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_lab": [[89, 130], ["numpy.zeros", "numpy.zeros", "range", "len", "len", "sklearn.feature_extraction.image.extract_patches", "numpy.vstack", "numpy.vstack", "sklearn.feature_extraction.image.extract_patches", "sklearn.feature_extraction.image.extract_patches", "print", "numpy.where", "numpy.where", "print", "print", "numpy.zeros", "numpy.zeros", "numpy.sum", "numpy.count_nonzero", "len", "len"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches"], ["            ", "print", "(", "(", "\"Extracting Patches from Image %2d ....\"", ")", "%", "(", "1", "+", "idx", ")", ")", "\n", "", "label_patches", "=", "extract_patches", "(", "label_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "\n", "datype", "=", "\"uint8\"", ")", "\n", "\n", "# Select only those who are important for processing", "\n", "if", "testing", "or", "validating", ":", "\n", "            ", "valid_idxs", "=", "np", ".", "where", "(", "np", ".", "sum", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "!=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "valid_idxs", "=", "np", ".", "where", "(", "np", ".", "count_nonzero", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ">", "6000", ")", "\n", "\n", "# Filtering extracted patches", "\n", "", "label_patches", "=", "label_patches", "[", "valid_idxs", "]", "\n", "\n", "x", "=", "np", ".", "vstack", "(", "(", "x", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ",", "dtype", "=", "\"float32\"", ")", ")", ")", "\n", "y", "=", "np", ".", "vstack", "(", "(", "y", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ")", ",", "dtype", "=", "\"uint8\"", ")", ")", ")", "\n", "\n", "y", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", "]", "=", "label_patches", "\n", "\n", "# Sampling strategy: reject samples which labels are mostly 0 and have less than 6000 nonzero elements", "\n", "T1_train", "=", "extract_patches", "(", "T1_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", ",", "0", "]", "=", "T1_train", "[", "valid_idxs", "]", "\n", "\n", "# Sampling strategy: reject samples which labels are mostly 0 and have less than 6000 nonzero elements", "\n", "T2_train", "=", "extract_patches", "(", "T2_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "y_length", ":", ",", ":", ",", ":", ",", ":", ",", "1", "]", "=", "T2_train", "[", "valid_idxs", "]", "\n", "", "return", "x", ",", "y", "\n", "\n", "", "\"\"\"\nTo preprocess the labeled training data\n\"\"\"", "\n", "def", "preprocess_dynamic_lab", "(", "dir", ",", "seed", ",", "num_classes", ",", "extraction_step", ",", "patch_shape", ",", "num_images_training", "=", "2", ",", "\n", "validating", "=", "False", ",", "testing", "=", "False", ",", "num_images_testing", "=", "7", ")", ":", "\n", "    ", "x", "=", "list", "(", "range", "(", "1", ",", "11", ")", ")", "\n", "if", "testing", ":", "\n", "        ", "print", "(", "\"Testing\"", ")", "\n", "index_start", "=", "num_images_training", "+", "2", "\n", "index_end", "=", "index_start", "+", "num_images_testing", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "num_images_testing", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_lab": [[134, 189], ["range", "np.empty.mean", "np.empty.std", "np.empty.mean", "np.empty.std", "range", "range", "preprocess.get_patches_lab", "print", "print", "numpy.empty", "numpy.empty", "numpy.empty", "print", "preprocess.read_vol", "preprocess.read_vol", "preprocess.read_vol", "print", "numpy.empty", "numpy.empty", "numpy.empty", "print", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_lab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol"], ["index_end", "=", "index_start", "+", "1", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Training\"", ")", "\n", "index_start", "=", "1", "\n", "index_end", "=", "index_start", "+", "num_images_training", "\n", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "label_vols", "=", "np", ".", "empty", "(", "(", "num_images_training", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "", "i", "=", "0", "\n", "for", "index", "in", "range", "(", "index_start", ",", "index_end", ")", ":", "\n", "        ", "print", "(", "x", "[", "index", "-", "1", "]", ")", "\n", "T1_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'T1'", ",", "dir", ")", "\n", "T2_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'T2'", ",", "dir", ")", "\n", "label_vols", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "x", "[", "index", "-", "1", "]", ",", "'label'", ",", "dir", ")", "\n", "i", "=", "i", "+", "1", "\n", "", "T1_mean", "=", "T1_vols", ".", "mean", "(", ")", "\n", "T1_std", "=", "T1_vols", ".", "std", "(", ")", "\n", "T1_vols", "=", "(", "T1_vols", "-", "T1_mean", ")", "/", "T1_std", "\n", "T2_mean", "=", "T2_vols", ".", "mean", "(", ")", "\n", "T2_std", "=", "T2_vols", ".", "std", "(", ")", "\n", "T2_vols", "=", "(", "T2_vols", "-", "T2_mean", ")", "/", "T2_std", "\n", "\n", "for", "i", "in", "range", "(", "T1_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T1_vols", "[", "i", "]", "=", "(", "(", "T1_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T1_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "for", "i", "in", "range", "(", "T2_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T2_vols", "[", "i", "]", "=", "(", "(", "T2_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T2_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "T1_vols", "=", "T1_vols", "/", "127.5", "-", "1.", "\n", "T2_vols", "=", "T2_vols", "/", "127.5", "-", "1.", "\n", "x", ",", "y", "=", "get_patches_lab", "(", "T1_vols", ",", "T2_vols", ",", "label_vols", ",", "extraction_step", ",", "patch_shape", ",", "validating", "=", "validating", ",", "\n", "testing", "=", "testing", ",", "num_images_training", "=", "num_images_training", ")", "\n", "print", "(", "\"Total Extracted Labelled Patches Shape:\"", ",", "x", ".", "shape", ",", "y", ".", "shape", ")", "\n", "if", "testing", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "label_vols", "\n", "", "elif", "validating", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "y", ",", "label_vols", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", ",", "y", "\n", "\n", "", "", "\"\"\"\nTo extract labeled patches from array of 3D ulabeled images\n\"\"\"", "\n", "def", "get_patches_unlab", "(", "T1_vols", ",", "T2_vols", ",", "extraction_step", ",", "patch_shape", ",", "dir", ")", ":", "\n", "    ", "patch_shape_1d", "=", "patch_shape", "[", "0", "]", "\n", "# Extract patches from input volumes and ground truth", "\n", "label_ref", "=", "np", ".", "empty", "(", "(", "1", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "x", "=", "np", ".", "zeros", "(", "(", "0", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ")", "\n", "label_ref", "=", "read_vol", "(", "1", ",", "'label'", ",", "dir", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "T1_vols", ")", ")", ":", "\n", "\n", "        ", "x_length", "=", "len", "(", "x", ")", "\n", "print", "(", "(", "\"Processing the Image %2d ....\"", ")", "%", "(", "idx", "+", "11", ")", ")", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_unlab": [[194, 220], ["numpy.empty", "numpy.zeros", "preprocess.read_vol", "range", "len", "len", "print", "sklearn.feature_extraction.image.extract_patches", "numpy.where", "numpy.vstack", "sklearn.feature_extraction.image.extract_patches", "sklearn.feature_extraction.image.extract_patches", "numpy.count_nonzero", "numpy.zeros", "len"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.extract_patches"], ["valid_idxs", "=", "np", ".", "where", "(", "np", ".", "count_nonzero", "(", "label_patches", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ">", "6000", ")", "\n", "\n", "label_patches", "=", "label_patches", "[", "valid_idxs", "]", "\n", "x", "=", "np", ".", "vstack", "(", "(", "x", ",", "np", ".", "zeros", "(", "(", "len", "(", "label_patches", ")", ",", "patch_shape_1d", ",", "\n", "patch_shape_1d", ",", "patch_shape_1d", ",", "num_mod", ")", ")", ")", ")", "\n", "\n", "T1_train", "=", "extract_patches", "(", "T1_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "x_length", ":", ",", ":", ",", ":", ",", ":", ",", "0", "]", "=", "T1_train", "[", "valid_idxs", "]", "\n", "\n", "T2_train", "=", "extract_patches", "(", "T2_vols", "[", "idx", "]", ",", "patch_shape", ",", "extraction_step", ",", "datype", "=", "\"float32\"", ")", "\n", "x", "[", "x_length", ":", ",", ":", ",", ":", ",", ":", ",", "1", "]", "=", "T2_train", "[", "valid_idxs", "]", "\n", "", "return", "x", "\n", "\n", "", "\"\"\"\nTo preprocess the unlabeled training data\n\"\"\"", "\n", "def", "preprocess_dynamic_unlab", "(", "dir", ",", "extraction_step", ",", "patch_shape", ",", "num_images_training_unlab", ")", ":", "\n", "    ", "T1_vols", "=", "np", ".", "empty", "(", "(", "num_images_training_unlab", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "T2_vols", "=", "np", ".", "empty", "(", "(", "num_images_training_unlab", ",", "144", ",", "192", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "for", "case_idx", "in", "range", "(", "11", ",", "11", "+", "num_images_training_unlab", ")", ":", "\n", "        ", "T1_vols", "[", "(", "case_idx", "-", "11", ")", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "case_idx", ",", "'T1'", ",", "dir", ")", "\n", "T2_vols", "[", "(", "case_idx", "-", "11", ")", ",", ":", ",", ":", ",", ":", "]", "=", "read_vol", "(", "case_idx", ",", "'T2'", ",", "dir", ")", "\n", "#print(read_vol(case_idx, 'T2', dir).shape)", "\n", "", "T1_mean", "=", "T1_vols", ".", "mean", "(", ")", "\n", "T1_std", "=", "T1_vols", ".", "std", "(", ")", "\n", "T1_vols", "=", "(", "T1_vols", "-", "T1_mean", ")", "/", "T1_std", "\n", "T2_mean", "=", "T2_vols", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_dynamic_unlab": [[224, 248], ["numpy.empty", "numpy.empty", "range", "np.empty.mean", "np.empty.std", "np.empty.mean", "np.empty.std", "range", "range", "preprocess.get_patches_unlab", "print", "preprocess.read_vol", "preprocess.read_vol", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.get_patches_unlab", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.read_vol"], ["        ", "T1_vols", "[", "i", "]", "=", "(", "(", "T1_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T1_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T1_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "for", "i", "in", "range", "(", "T2_vols", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "T2_vols", "[", "i", "]", "=", "(", "(", "T2_vols", "[", "i", "]", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", "/", "\n", "(", "np", ".", "max", "(", "T2_vols", "[", "i", "]", ")", "-", "np", ".", "min", "(", "T2_vols", "[", "i", "]", ")", ")", ")", "*", "255", "\n", "", "T1_vols", "=", "T1_vols", "/", "127.5", "-", "1.", "\n", "T2_vols", "=", "T2_vols", "/", "127.5", "-", "1.", "\n", "x", "=", "get_patches_unlab", "(", "T1_vols", ",", "T2_vols", ",", "extraction_step", ",", "patch_shape", ",", "dir", ")", "\n", "print", "(", "\"Total Extracted Unlabeled Patches Shape:\"", ",", "x", ".", "shape", ")", "\n", "return", "np", ".", "rollaxis", "(", "x", ",", "4", ",", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.preprocess_static": [[250, 271], ["glob.glob", "os.path.exists", "os.makedirs", "os.path.join", "os.path.isdir", "range", "range", "os.path.basename", "os.path.join", "preprocess.normalise", "preprocess.normalise", "preprocess.normalise", "preprocess.normalise", "preprocess.normalise", "os.path.basename", "os.path.dirname", "os.path.exists", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise", "home.repos.pwc.inspect_result.arnab39_FewShot_GAN-Unet3D.preprocess.preprocess.normalise"], []]}