{"home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.normalize_answer": [[15, 31], ["2wikimultihop_evaluate_v1.normalize_answer.white_space_fix"], "function", ["None"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.f1_score": [[33, 54], ["2wikimultihop_evaluate_v1.normalize_answer", "2wikimultihop_evaluate_v1.normalize_answer", "normalize_answer.split", "normalize_answer.split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.exact_match_score": [[56, 58], ["2wikimultihop_evaluate_v1.normalize_answer", "2wikimultihop_evaluate_v1.normalize_answer"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.eval_answer": [[60, 64], ["2wikimultihop_evaluate_v1.exact_match_score", "2wikimultihop_evaluate_v1.f1_score"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.exact_match_score", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.f1_score"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.update_answer": [[66, 83], ["float", "2wikimultihop_evaluate_v1.eval_answer", "max", "max", "max", "max"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.eval_answer"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.normalize_sp": [[85, 92], ["list", "sp[].lower", "new_sps.append"], "function", ["None"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.update_sp": [[94, 115], ["2wikimultihop_evaluate_v1.normalize_sp", "2wikimultihop_evaluate_v1.normalize_sp", "set", "set", "map", "map"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_sp", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_sp"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.normalize_evi": [[117, 139], ["2wikimultihop_evaluate_v1.normalize_evi.recurse"], "function", ["None"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.update_evi": [[141, 169], ["2wikimultihop_evaluate_v1.normalize_evi", "2wikimultihop_evaluate_v1.normalize_evi", "set", "list", "len", "len", "map", "map", "set", "map"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_evi", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_evi"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate_v1.eval": [[171, 265], ["len", "metrics.keys", "print", "open", "ujson.load", "open", "ujson.load", "open", "map", "round", "ujson.dumps", "print", "2wikimultihop_evaluate_v1.update_answer", "print", "2wikimultihop_evaluate_v1.update_sp", "print", "enumerate", "2wikimultihop_evaluate_v1.update_evi", "set", "gold_answers.update", "itertools.product", "gold_evidences.append", "gold_evidence.append", "len", "len", "sub_strs.update", "obj_strs.update"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_sp", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_evi"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_answer": [[13, 29], ["2wikimultihop_evaluate.normalize_answer.white_space_fix"], "function", ["None"], ["def", "normalize_answer", "(", "s", ")", ":", "\n", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.f1_score": [[31, 52], ["2wikimultihop_evaluate.normalize_answer", "2wikimultihop_evaluate.normalize_answer", "normalize_answer.split", "normalize_answer.split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"], ["", "def", "f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "normalized_prediction", "=", "normalize_answer", "(", "prediction", ")", "\n", "normalized_ground_truth", "=", "normalize_answer", "(", "ground_truth", ")", "\n", "\n", "ZERO_METRIC", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "\n", "if", "normalized_prediction", "in", "[", "'yes'", ",", "'no'", ",", "'noanswer'", "]", "and", "normalized_prediction", "!=", "normalized_ground_truth", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "", "if", "normalized_ground_truth", "in", "[", "'yes'", ",", "'no'", ",", "'noanswer'", "]", "and", "normalized_prediction", "!=", "normalized_ground_truth", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "\n", "", "prediction_tokens", "=", "normalized_prediction", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalized_ground_truth", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", ",", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.exact_match_score": [[54, 56], ["2wikimultihop_evaluate.normalize_answer", "2wikimultihop_evaluate.normalize_answer"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"], ["", "def", "exact_match_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "return", "(", "normalize_answer", "(", "prediction", ")", "==", "normalize_answer", "(", "ground_truth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_answer": [[58, 66], ["2wikimultihop_evaluate.exact_match_score", "2wikimultihop_evaluate.f1_score", "float"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.exact_match_score", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.f1_score"], ["", "def", "update_answer", "(", "metrics", ",", "prediction", ",", "gold", ")", ":", "\n", "    ", "em", "=", "exact_match_score", "(", "prediction", ",", "gold", ")", "\n", "f1", ",", "prec", ",", "recall", "=", "f1_score", "(", "prediction", ",", "gold", ")", "\n", "metrics", "[", "'em'", "]", "+=", "float", "(", "em", ")", "\n", "metrics", "[", "'f1'", "]", "+=", "f1", "\n", "metrics", "[", "'prec'", "]", "+=", "prec", "\n", "metrics", "[", "'recall'", "]", "+=", "recall", "\n", "return", "em", ",", "prec", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_sp": [[68, 75], ["list", "sp[].lower", "new_sps.append"], "function", ["None"], ["", "def", "normalize_sp", "(", "sps", ")", ":", "\n", "    ", "new_sps", "=", "[", "]", "\n", "for", "sp", "in", "sps", ":", "\n", "        ", "sp", "=", "list", "(", "sp", ")", "\n", "sp", "[", "0", "]", "=", "sp", "[", "0", "]", ".", "lower", "(", ")", "\n", "new_sps", ".", "append", "(", "sp", ")", "\n", "", "return", "new_sps", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_sp": [[77, 98], ["2wikimultihop_evaluate.normalize_sp", "2wikimultihop_evaluate.normalize_sp", "set", "set", "map", "map"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_sp", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_sp"], ["", "def", "update_sp", "(", "metrics", ",", "prediction", ",", "gold", ")", ":", "\n", "    ", "cur_sp_pred", "=", "normalize_sp", "(", "set", "(", "map", "(", "tuple", ",", "prediction", ")", ")", ")", "\n", "gold_sp_pred", "=", "normalize_sp", "(", "set", "(", "map", "(", "tuple", ",", "gold", ")", ")", ")", "\n", "tp", ",", "fp", ",", "fn", "=", "0", ",", "0", ",", "0", "\n", "for", "e", "in", "cur_sp_pred", ":", "\n", "        ", "if", "e", "in", "gold_sp_pred", ":", "\n", "            ", "tp", "+=", "1", "\n", "", "else", ":", "\n", "            ", "fp", "+=", "1", "\n", "", "", "for", "e", "in", "gold_sp_pred", ":", "\n", "        ", "if", "e", "not", "in", "cur_sp_pred", ":", "\n", "            ", "fn", "+=", "1", "\n", "", "", "prec", "=", "1.0", "*", "tp", "/", "(", "tp", "+", "fp", ")", "if", "tp", "+", "fp", ">", "0", "else", "0.0", "\n", "recall", "=", "1.0", "*", "tp", "/", "(", "tp", "+", "fn", ")", "if", "tp", "+", "fn", ">", "0", "else", "0.0", "\n", "f1", "=", "2", "*", "prec", "*", "recall", "/", "(", "prec", "+", "recall", ")", "if", "prec", "+", "recall", ">", "0", "else", "0.0", "\n", "em", "=", "1.0", "if", "fp", "+", "fn", "==", "0", "else", "0.0", "\n", "metrics", "[", "'sp_em'", "]", "+=", "em", "\n", "metrics", "[", "'sp_f1'", "]", "+=", "f1", "\n", "metrics", "[", "'sp_prec'", "]", "+=", "prec", "\n", "metrics", "[", "'sp_recall'", "]", "+=", "recall", "\n", "return", "em", ",", "prec", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_evi": [[100, 116], ["range", "set", "text.lower", "len", "range", "text.split", "len", "2wikimultihop_evaluate.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_evi", "(", "evidences", ")", ":", "\n", "\n", "    ", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "\n", "", "for", "idx_1", "in", "range", "(", "len", "(", "evidences", ")", ")", ":", "\n", "        ", "for", "idx_2", "in", "range", "(", "len", "(", "evidences", "[", "idx_1", "]", ")", ")", ":", "\n", "            ", "evidences", "[", "idx_1", "]", "[", "idx_2", "]", "=", "white_space_fix", "(", "(", "remove_punc", "(", "lower", "(", "evidences", "[", "idx_1", "]", "[", "idx_2", "]", ")", ")", ")", ")", "\n", "", "", "return", "evidences", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_evi": [[118, 144], ["2wikimultihop_evaluate.normalize_evi", "2wikimultihop_evaluate.normalize_evi", "set", "set", "map", "map"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_evi", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.normalize_evi"], ["", "def", "update_evi", "(", "metrics", ",", "prediction", ",", "gold", ")", ":", "\n", "    ", "prediction_normalize", "=", "normalize_evi", "(", "prediction", ")", "\n", "gold_normalize", "=", "normalize_evi", "(", "gold", ")", "\n", "# ", "\n", "cur_evi_pred", "=", "set", "(", "map", "(", "tuple", ",", "prediction_normalize", ")", ")", "\n", "gold_evi_pred", "=", "set", "(", "map", "(", "tuple", ",", "gold_normalize", ")", ")", "\n", "#", "\n", "#", "\n", "tp", ",", "fp", ",", "fn", "=", "0", ",", "0", ",", "0", "\n", "for", "e", "in", "cur_evi_pred", ":", "\n", "        ", "if", "e", "in", "gold_evi_pred", ":", "\n", "            ", "tp", "+=", "1", "\n", "", "else", ":", "\n", "            ", "fp", "+=", "1", "\n", "", "", "for", "e", "in", "gold_evi_pred", ":", "\n", "        ", "if", "e", "not", "in", "cur_evi_pred", ":", "\n", "            ", "fn", "+=", "1", "\n", "", "", "prec", "=", "1.0", "*", "tp", "/", "(", "tp", "+", "fp", ")", "if", "tp", "+", "fp", ">", "0", "else", "0.0", "\n", "recall", "=", "1.0", "*", "tp", "/", "(", "tp", "+", "fn", ")", "if", "tp", "+", "fn", ">", "0", "else", "0.0", "\n", "f1", "=", "2", "*", "prec", "*", "recall", "/", "(", "prec", "+", "recall", ")", "if", "prec", "+", "recall", ">", "0", "else", "0.0", "\n", "em", "=", "1.0", "if", "fp", "+", "fn", "==", "0", "else", "0.0", "\n", "metrics", "[", "'evi_em'", "]", "+=", "em", "\n", "metrics", "[", "'evi_f1'", "]", "+=", "f1", "\n", "metrics", "[", "'evi_prec'", "]", "+=", "prec", "\n", "metrics", "[", "'evi_recall'", "]", "+=", "recall", "\n", "return", "em", ",", "prec", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.eval": [[146, 200], ["len", "metrics.keys", "print", "open", "ujson.load", "open", "ujson.load", "round", "ujson.dumps", "print", "2wikimultihop_evaluate.update_answer", "print", "2wikimultihop_evaluate.update_sp", "print", "2wikimultihop_evaluate.update_evi"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_sp", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.update_evi"], ["", "def", "eval", "(", "prediction_file", ",", "gold_file", ")", ":", "\n", "    ", "with", "open", "(", "prediction_file", ")", "as", "f", ":", "\n", "        ", "prediction", "=", "json", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "gold_file", ")", "as", "f", ":", "\n", "        ", "gold", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "metrics", "=", "{", "'em'", ":", "0", ",", "'f1'", ":", "0", ",", "'prec'", ":", "0", ",", "'recall'", ":", "0", ",", "\n", "'sp_em'", ":", "0", ",", "'sp_f1'", ":", "0", ",", "'sp_prec'", ":", "0", ",", "'sp_recall'", ":", "0", ",", "\n", "'evi_em'", ":", "0", ",", "'evi_f1'", ":", "0", ",", "'evi_prec'", ":", "0", ",", "'evi_recall'", ":", "0", ",", "\n", "'joint_em'", ":", "0", ",", "'joint_f1'", ":", "0", ",", "'joint_prec'", ":", "0", ",", "'joint_recall'", ":", "0", "}", "\n", "\n", "for", "dp", "in", "gold", ":", "\n", "        ", "cur_id", "=", "dp", "[", "'_id'", "]", "\n", "can_eval_joint", "=", "True", "\n", "if", "cur_id", "not", "in", "prediction", "[", "'answer'", "]", ":", "\n", "            ", "print", "(", "'missing answer {}'", ".", "format", "(", "cur_id", ")", ")", "\n", "can_eval_joint", "=", "False", "\n", "", "else", ":", "\n", "            ", "em", ",", "prec", ",", "recall", "=", "update_answer", "(", "\n", "metrics", ",", "prediction", "[", "'answer'", "]", "[", "cur_id", "]", ",", "dp", "[", "'answer'", "]", ")", "\n", "", "if", "cur_id", "not", "in", "prediction", "[", "'sp'", "]", ":", "\n", "            ", "print", "(", "'missing sp fact {}'", ".", "format", "(", "cur_id", ")", ")", "\n", "can_eval_joint", "=", "False", "\n", "", "else", ":", "\n", "            ", "sp_em", ",", "sp_prec", ",", "sp_recall", "=", "update_sp", "(", "\n", "metrics", ",", "prediction", "[", "'sp'", "]", "[", "cur_id", "]", ",", "dp", "[", "'supporting_facts'", "]", ")", "\n", "# ", "\n", "", "if", "cur_id", "not", "in", "prediction", "[", "'evidence'", "]", ":", "\n", "            ", "print", "(", "'missing evidence {}'", ".", "format", "(", "cur_id", ")", ")", "\n", "can_eval_joint", "=", "False", "\n", "", "else", ":", "\n", "            ", "evi_em", ",", "evi_prec", ",", "evi_recall", "=", "update_evi", "(", "\n", "metrics", ",", "prediction", "[", "'evidence'", "]", "[", "cur_id", "]", ",", "dp", "[", "'evidences'", "]", ")", "\n", "\n", "", "if", "can_eval_joint", ":", "\n", "            ", "joint_prec", "=", "prec", "*", "sp_prec", "*", "evi_prec", "\n", "joint_recall", "=", "recall", "*", "sp_recall", "*", "evi_recall", "\n", "# ", "\n", "if", "joint_prec", "+", "joint_recall", ">", "0", ":", "\n", "                ", "joint_f1", "=", "2", "*", "joint_prec", "*", "joint_recall", "/", "(", "joint_prec", "+", "joint_recall", ")", "\n", "", "else", ":", "\n", "                ", "joint_f1", "=", "0.", "\n", "", "joint_em", "=", "em", "*", "sp_em", "*", "evi_em", "\n", "\n", "metrics", "[", "'joint_em'", "]", "+=", "joint_em", "\n", "metrics", "[", "'joint_f1'", "]", "+=", "joint_f1", "\n", "metrics", "[", "'joint_prec'", "]", "+=", "joint_prec", "\n", "metrics", "[", "'joint_recall'", "]", "+=", "joint_recall", "\n", "\n", "", "", "N", "=", "len", "(", "gold", ")", "\n", "for", "k", "in", "metrics", ".", "keys", "(", ")", ":", "\n", "        ", "metrics", "[", "k", "]", "=", "round", "(", "metrics", "[", "k", "]", "/", "N", "*", "100", ",", "2", ")", "\n", "\n", "", "print", "(", "json", ".", "dumps", "(", "metrics", ",", "indent", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.find_nearest": [[27, 42], ["bisect.bisect_left", "len", "abs", "len", "abs", "test_func", "abs", "test_func", "abs"], "function", ["None"], ["def", "find_nearest", "(", "a", ",", "target", ",", "test_func", "=", "lambda", "x", ":", "True", ")", ":", "\n", "    ", "idx", "=", "bisect", ".", "bisect_left", "(", "a", ",", "target", ")", "\n", "if", "(", "0", "<=", "idx", "<", "len", "(", "a", ")", ")", "and", "a", "[", "idx", "]", "==", "target", ":", "\n", "        ", "return", "target", ",", "0", "\n", "", "elif", "idx", "==", "0", ":", "\n", "        ", "return", "a", "[", "0", "]", ",", "abs", "(", "a", "[", "0", "]", "-", "target", ")", "\n", "", "elif", "idx", "==", "len", "(", "a", ")", ":", "\n", "        ", "return", "a", "[", "-", "1", "]", ",", "abs", "(", "a", "[", "-", "1", "]", "-", "target", ")", "\n", "", "else", ":", "\n", "        ", "d1", "=", "abs", "(", "a", "[", "idx", "]", "-", "target", ")", "if", "test_func", "(", "a", "[", "idx", "]", ")", "else", "1e200", "\n", "d2", "=", "abs", "(", "a", "[", "idx", "-", "1", "]", "-", "target", ")", "if", "test_func", "(", "a", "[", "idx", "-", "1", "]", ")", "else", "1e200", "\n", "if", "d1", ">", "d2", ":", "\n", "            ", "return", "a", "[", "idx", "-", "1", "]", ",", "d2", "\n", "", "else", ":", "\n", "            ", "return", "a", "[", "idx", "]", ",", "d1", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.fix_span": [[44, 70], ["span.strip.strip", "map", "re.finditer", "zip", "re.escape", "m.span", "prepro.find_nearest", "prepro.find_nearest", "len"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.find_nearest", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.find_nearest"], ["", "", "", "def", "fix_span", "(", "para", ",", "offsets", ",", "span", ")", ":", "\n", "    ", "span", "=", "span", ".", "strip", "(", ")", "\n", "parastr", "=", "\"\"", ".", "join", "(", "para", ")", "\n", "assert", "span", "in", "parastr", ",", "'{}\\t{}'", ".", "format", "(", "span", ",", "parastr", ")", "\n", "begins", ",", "ends", "=", "map", "(", "list", ",", "zip", "(", "*", "[", "y", "for", "x", "in", "offsets", "for", "y", "in", "x", "]", ")", ")", "\n", "\n", "best_dist", "=", "1e200", "\n", "best_indices", "=", "None", "\n", "\n", "if", "span", "==", "parastr", ":", "\n", "        ", "return", "parastr", ",", "(", "0", ",", "len", "(", "parastr", ")", ")", ",", "0", "\n", "\n", "", "for", "m", "in", "re", ".", "finditer", "(", "re", ".", "escape", "(", "span", ")", ",", "parastr", ")", ":", "\n", "        ", "begin_offset", ",", "end_offset", "=", "m", ".", "span", "(", ")", "\n", "\n", "fixed_begin", ",", "d1", "=", "find_nearest", "(", "begins", ",", "begin_offset", ",", "lambda", "x", ":", "x", "<", "end_offset", ")", "\n", "fixed_end", ",", "d2", "=", "find_nearest", "(", "ends", ",", "end_offset", ",", "lambda", "x", ":", "x", ">", "begin_offset", ")", "\n", "\n", "if", "d1", "+", "d2", "<", "best_dist", ":", "\n", "            ", "best_dist", "=", "d1", "+", "d2", "\n", "best_indices", "=", "(", "fixed_begin", ",", "fixed_end", ")", "\n", "if", "best_dist", "==", "0", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "assert", "best_indices", "is", "not", "None", "\n", "return", "parastr", "[", "best_indices", "[", "0", "]", ":", "best_indices", "[", "1", "]", "]", ",", "best_indices", ",", "best_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.word_tokenize": [[72, 75], ["nlp"], "function", ["None"], ["", "def", "word_tokenize", "(", "sent", ")", ":", "\n", "    ", "doc", "=", "nlp", "(", "sent", ")", "\n", "return", "[", "token", ".", "text", "for", "token", "in", "doc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.convert_idx": [[77, 88], ["text.find", "spans.append", "len", "Exception", "len"], "function", ["None"], ["", "def", "convert_idx", "(", "text", ",", "tokens", ")", ":", "\n", "    ", "current", "=", "0", "\n", "spans", "=", "[", "]", "\n", "for", "token", "in", "tokens", ":", "\n", "        ", "pre", "=", "current", "\n", "current", "=", "text", ".", "find", "(", "token", ",", "current", ")", "\n", "if", "current", "<", "0", ":", "\n", "            ", "raise", "Exception", "(", ")", "\n", "", "spans", ".", "append", "(", "(", "current", ",", "current", "+", "len", "(", "token", ")", ")", ")", "\n", "current", "+=", "len", "(", "token", ")", "\n", "", "return", "spans", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.prepro_sent": [[90, 92], ["None"], "function", ["None"], ["", "def", "prepro_sent", "(", "sent", ")", ":", "\n", "    ", "return", "sent", "\n", "# return sent.replace(\"''\", '\" ').replace(\"``\", '\" ')", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.get_start_end": [[95, 106], ["text.strip", "prepro.fix_span", "enumerate", "text_span.append"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.fix_span"], ["", "def", "get_start_end", "(", "text", ",", "text_context", ",", "flat_offsets", ",", "offsets", ")", ":", "\n", "    ", "if", "text", ".", "strip", "(", ")", "not", "in", "''", ".", "join", "(", "text_context", ")", ":", "\n", "        ", "best_indices", "=", "(", "0", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "_", ",", "best_indices", ",", "_", "=", "fix_span", "(", "text_context", ",", "offsets", ",", "text", ")", "\n", "text_span", "=", "[", "]", "\n", "for", "idx", ",", "span", "in", "enumerate", "(", "flat_offsets", ")", ":", "\n", "            ", "if", "not", "(", "best_indices", "[", "1", "]", "<=", "span", "[", "0", "]", "or", "best_indices", "[", "0", "]", ">=", "span", "[", "1", "]", ")", ":", "\n", "                ", "text_span", ".", "append", "(", "idx", ")", "\n", "", "", "best_indices", "=", "(", "text_span", "[", "0", "]", ",", "text_span", "[", "-", "1", "]", ")", "\n", "", "return", "best_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro._process_article": [[108, 213], ["prepro.word_tokenize", "len", "len", "prepro.word_tokenize", "prepro.convert_idx", "context_tokens.extend", "context_chars.extend", "start_end_facts.append", "offsets.append", "flat_offsets.extend", "set", "set", "prepro._process_article._process"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.word_tokenize", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.word_tokenize", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.convert_idx"], ["", "def", "_process_article", "(", "article", ",", "config", ")", ":", "\n", "    ", "paragraphs", "=", "article", "[", "'context'", "]", "\n", "# some articles in the fullwiki dev/test sets have zero paragraphs", "\n", "if", "len", "(", "paragraphs", ")", "==", "0", ":", "\n", "        ", "paragraphs", "=", "[", "[", "'some random title'", ",", "'some random stuff'", "]", "]", "\n", "\n", "", "text_context", ",", "context_tokens", ",", "context_chars", "=", "''", ",", "[", "]", ",", "[", "]", "\n", "offsets", "=", "[", "]", "\n", "flat_offsets", "=", "[", "]", "\n", "start_end_facts", "=", "[", "]", "# (start_token_id, end_token_id, is_sup_fact=True/False)", "\n", "sent2title_ids", "=", "[", "]", "\n", "\n", "def", "_process", "(", "sent", ",", "is_sup_fact", ",", "is_title", "=", "False", ")", ":", "\n", "        ", "nonlocal", "text_context", ",", "context_tokens", ",", "context_chars", ",", "offsets", ",", "start_end_facts", ",", "flat_offsets", "\n", "N_chars", "=", "len", "(", "text_context", ")", "\n", "#", "\n", "sent", "=", "sent", "\n", "sent_tokens", "=", "word_tokenize", "(", "sent", ")", "\n", "if", "is_title", ":", "\n", "            ", "sent", "=", "'<t> {} </t>'", ".", "format", "(", "sent", ")", "\n", "sent_tokens", "=", "[", "'<t>'", "]", "+", "sent_tokens", "+", "[", "'</t>'", "]", "\n", "", "sent_chars", "=", "[", "list", "(", "token", ")", "for", "token", "in", "sent_tokens", "]", "\n", "sent_spans", "=", "convert_idx", "(", "sent", ",", "sent_tokens", ")", "\n", "#", "\n", "sent_spans", "=", "[", "[", "N_chars", "+", "e", "[", "0", "]", ",", "N_chars", "+", "e", "[", "1", "]", "]", "for", "e", "in", "sent_spans", "]", "\n", "N_tokens", ",", "my_N_tokens", "=", "len", "(", "context_tokens", ")", ",", "len", "(", "sent_tokens", ")", "\n", "#", "\n", "text_context", "+=", "sent", "\n", "context_tokens", ".", "extend", "(", "sent_tokens", ")", "\n", "context_chars", ".", "extend", "(", "sent_chars", ")", "\n", "start_end_facts", ".", "append", "(", "(", "N_tokens", ",", "N_tokens", "+", "my_N_tokens", ",", "is_sup_fact", ")", ")", "\n", "offsets", ".", "append", "(", "sent_spans", ")", "\n", "flat_offsets", ".", "extend", "(", "sent_spans", ")", "\n", "\n", "", "if", "'supporting_facts'", "in", "article", ":", "\n", "        ", "sp_set", "=", "set", "(", "list", "(", "map", "(", "tuple", ",", "article", "[", "'supporting_facts'", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "sp_set", "=", "set", "(", ")", "\n", "\n", "", "sp_fact_cnt", "=", "0", "\n", "for", "para", "in", "paragraphs", ":", "\n", "        ", "cur_title", ",", "cur_para", "=", "para", "[", "0", "]", ",", "para", "[", "1", "]", "\n", "_process", "(", "prepro_sent", "(", "cur_title", ")", ",", "False", ",", "is_title", "=", "True", ")", "\n", "sent2title_ids", ".", "append", "(", "(", "cur_title", ",", "-", "1", ")", ")", "\n", "for", "sent_id", ",", "sent", "in", "enumerate", "(", "cur_para", ")", ":", "\n", "            ", "is_sup_fact", "=", "(", "cur_title", ",", "sent_id", ")", "in", "sp_set", "\n", "if", "is_sup_fact", ":", "\n", "                ", "sp_fact_cnt", "+=", "1", "\n", "", "_process", "(", "prepro_sent", "(", "sent", ")", ",", "is_sup_fact", ")", "\n", "sent2title_ids", ".", "append", "(", "(", "cur_title", ",", "sent_id", ")", ")", "\n", "#", "\n", "# Evidences information", "\n", "", "", "subject_y1", "=", "[", "]", "\n", "subject_y2", "=", "[", "]", "\n", "object_y1", "=", "[", "]", "\n", "object_y2", "=", "[", "]", "\n", "relations", "=", "[", "]", "\n", "if", "'evidences'", "in", "article", ":", "\n", "        ", "evidences", "=", "article", "[", "'evidences'", "]", "\n", "for", "idx", ",", "evi", "in", "enumerate", "(", "evidences", ")", ":", "\n", "            ", "subject_y1_y2", "=", "get_start_end", "(", "evi", "[", "0", "]", ",", "text_context", ",", "flat_offsets", ",", "offsets", ")", "\n", "relation", "=", "evi", "[", "1", "]", ".", "strip", "(", ")", "\n", "object_y1_y2", "=", "get_start_end", "(", "evi", "[", "2", "]", ",", "text_context", ",", "flat_offsets", ",", "offsets", ")", "\n", "#", "\n", "subject_y1", ".", "append", "(", "subject_y1_y2", "[", "0", "]", ")", "\n", "subject_y2", ".", "append", "(", "subject_y1_y2", "[", "1", "]", ")", "\n", "object_y1", ".", "append", "(", "object_y1_y2", "[", "0", "]", ")", "\n", "object_y2", ".", "append", "(", "object_y1_y2", "[", "1", "]", ")", "\n", "relations", ".", "append", "(", "relation", ")", "\n", "# ", "\n", "", "", "if", "'answer'", "in", "article", ":", "\n", "        ", "answer", "=", "article", "[", "'answer'", "]", ".", "strip", "(", ")", "\n", "if", "answer", ".", "lower", "(", ")", "==", "'yes'", ":", "\n", "            ", "best_indices", "=", "[", "-", "1", ",", "-", "1", "]", "\n", "", "elif", "answer", ".", "lower", "(", ")", "==", "'no'", ":", "\n", "            ", "best_indices", "=", "[", "-", "2", ",", "-", "2", "]", "\n", "", "else", ":", "\n", "            ", "if", "article", "[", "'answer'", "]", ".", "strip", "(", ")", "not", "in", "''", ".", "join", "(", "text_context", ")", ":", "\n", "# in the fullwiki setting, the answer might not have been retrieved", "\n", "# use (0, 1) so that we can proceed", "\n", "                ", "best_indices", "=", "(", "0", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "_", ",", "best_indices", ",", "_", "=", "fix_span", "(", "text_context", ",", "offsets", ",", "article", "[", "'answer'", "]", ")", "\n", "answer_span", "=", "[", "]", "\n", "for", "idx", ",", "span", "in", "enumerate", "(", "flat_offsets", ")", ":", "\n", "                    ", "if", "not", "(", "best_indices", "[", "1", "]", "<=", "span", "[", "0", "]", "or", "best_indices", "[", "0", "]", ">=", "span", "[", "1", "]", ")", ":", "\n", "                        ", "answer_span", ".", "append", "(", "idx", ")", "\n", "", "", "best_indices", "=", "(", "answer_span", "[", "0", "]", ",", "answer_span", "[", "-", "1", "]", ")", "\n", "", "", "", "else", ":", "\n", "# some random stuff", "\n", "        ", "answer", "=", "'random'", "\n", "best_indices", "=", "(", "0", ",", "1", ")", "\n", "\n", "", "ques_tokens", "=", "word_tokenize", "(", "prepro_sent", "(", "article", "[", "'question'", "]", ")", ")", "\n", "ques_chars", "=", "[", "list", "(", "token", ")", "for", "token", "in", "ques_tokens", "]", "\n", "#", "\n", "example", "=", "{", "'context_tokens'", ":", "context_tokens", ",", "'context_chars'", ":", "context_chars", ",", "'ques_tokens'", ":", "ques_tokens", ",", "\n", "'ques_chars'", ":", "ques_chars", ",", "'y1s'", ":", "[", "best_indices", "[", "0", "]", "]", ",", "\n", "'y2s'", ":", "[", "best_indices", "[", "1", "]", "]", ",", "'id'", ":", "article", "[", "'_id'", "]", ",", "\n", "'start_end_facts'", ":", "start_end_facts", ",", "'subject_y1'", ":", "subject_y1", ",", "'subject_y2'", ":", "subject_y2", ",", "\n", "'object_y1'", ":", "object_y1", ",", "'object_y2'", ":", "object_y2", ",", "'relations'", ":", "relations", "}", "\n", "#", "\n", "eval_example", "=", "{", "'context'", ":", "text_context", ",", "'spans'", ":", "flat_offsets", ",", "'answer'", ":", "[", "answer", "]", ",", "'id'", ":", "article", "[", "'_id'", "]", ",", "\n", "'sent2title_ids'", ":", "sent2title_ids", "}", "\n", "return", "example", ",", "eval_example", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.process_file": [[215, 243], ["ujson.load", "random.shuffle", "print", "open", "joblib.Parallel", "len", "joblib.delayed"], "function", ["None"], ["", "def", "process_file", "(", "filename", ",", "config", ",", "word_counter", "=", "None", ",", "char_counter", "=", "None", ",", "relation_counter", "=", "None", ")", ":", "\n", "    ", "data", "=", "json", ".", "load", "(", "open", "(", "filename", ",", "'r'", ")", ")", "\n", "\n", "examples", "=", "[", "]", "\n", "eval_examples", "=", "{", "}", "\n", "\n", "outputs", "=", "Parallel", "(", "n_jobs", "=", "12", ",", "verbose", "=", "10", ")", "(", "delayed", "(", "_process_article", ")", "(", "article", ",", "config", ")", "for", "article", "in", "data", ")", "\n", "# outputs = [_process_article(article, config) for article in data]", "\n", "examples", "=", "[", "e", "[", "0", "]", "for", "e", "in", "outputs", "]", "\n", "for", "_", ",", "e", "in", "outputs", ":", "\n", "        ", "if", "e", "is", "not", "None", ":", "\n", "            ", "eval_examples", "[", "e", "[", "'id'", "]", "]", "=", "e", "\n", "\n", "# only count during training", "\n", "", "", "if", "word_counter", "is", "not", "None", "and", "char_counter", "is", "not", "None", "and", "relation_counter", "is", "not", "None", ":", "\n", "        ", "for", "example", "in", "examples", ":", "\n", "#", "\n", "            ", "for", "token", "in", "example", "[", "'ques_tokens'", "]", "+", "example", "[", "'context_tokens'", "]", ":", "\n", "                ", "word_counter", "[", "token", "]", "+=", "1", "\n", "for", "char", "in", "token", ":", "\n", "                    ", "char_counter", "[", "char", "]", "+=", "1", "\n", "", "", "for", "relation", "in", "example", "[", "'relations'", "]", ":", "\n", "                ", "relation_counter", "[", "relation", "]", "+=", "1", "\n", "\n", "", "", "", "random", ".", "shuffle", "(", "examples", ")", "\n", "print", "(", "\"{} questions in total\"", ".", "format", "(", "len", "(", "examples", ")", ")", ")", "\n", "\n", "return", "examples", ",", "eval_examples", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.get_embedding": [[245, 284], ["print", "print", "print", "counter.items", "open", "tqdm.tqdm", "range", "range", "token2idx_dict.items", "range", "token2idx_dict.items", "line.split", "list", "len", "len", "numpy.random.normal", "len", "enumerate", "len", "map", "range", "embedding_dict.keys"], "function", ["None"], ["", "def", "get_embedding", "(", "counter", ",", "data_type", ",", "limit", "=", "-", "1", ",", "emb_file", "=", "None", ",", "size", "=", "None", ",", "vec_size", "=", "None", ",", "token2idx_dict", "=", "None", ")", ":", "\n", "    ", "print", "(", "\"Generating {} embedding...\"", ".", "format", "(", "data_type", ")", ")", "\n", "embedding_dict", "=", "{", "}", "\n", "filtered_elements", "=", "[", "k", "for", "k", ",", "v", "in", "counter", ".", "items", "(", ")", "if", "v", ">", "limit", "]", "\n", "if", "emb_file", "is", "not", "None", ":", "\n", "        ", "assert", "size", "is", "not", "None", "\n", "assert", "vec_size", "is", "not", "None", "\n", "with", "open", "(", "emb_file", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fh", ":", "\n", "            ", "for", "line", "in", "tqdm", "(", "fh", ",", "total", "=", "size", ")", ":", "\n", "                ", "array", "=", "line", ".", "split", "(", ")", "\n", "word", "=", "\"\"", ".", "join", "(", "array", "[", "0", ":", "-", "vec_size", "]", ")", "\n", "vector", "=", "list", "(", "map", "(", "float", ",", "array", "[", "-", "vec_size", ":", "]", ")", ")", "\n", "if", "word", "in", "counter", "and", "counter", "[", "word", "]", ">", "limit", ":", "\n", "                    ", "embedding_dict", "[", "word", "]", "=", "vector", "\n", "", "", "", "print", "(", "\"{} / {} tokens have corresponding {} embedding vector\"", ".", "format", "(", "\n", "len", "(", "embedding_dict", ")", ",", "len", "(", "filtered_elements", ")", ",", "data_type", ")", ")", "\n", "", "else", ":", "\n", "        ", "assert", "vec_size", "is", "not", "None", "\n", "for", "token", "in", "filtered_elements", ":", "\n", "            ", "embedding_dict", "[", "token", "]", "=", "[", "np", ".", "random", ".", "normal", "(", "\n", "scale", "=", "0.01", ")", "for", "_", "in", "range", "(", "vec_size", ")", "]", "\n", "", "print", "(", "\"{} tokens have corresponding embedding vector\"", ".", "format", "(", "\n", "len", "(", "filtered_elements", ")", ")", ")", "\n", "\n", "", "NULL", "=", "\"--NULL--\"", "\n", "OOV", "=", "\"--OOV--\"", "\n", "token2idx_dict", "=", "{", "token", ":", "idx", "for", "idx", ",", "token", "in", "enumerate", "(", "\n", "embedding_dict", ".", "keys", "(", ")", ",", "2", ")", "}", "if", "token2idx_dict", "is", "None", "else", "token2idx_dict", "\n", "token2idx_dict", "[", "NULL", "]", "=", "0", "\n", "token2idx_dict", "[", "OOV", "]", "=", "1", "\n", "embedding_dict", "[", "NULL", "]", "=", "[", "0.", "for", "_", "in", "range", "(", "vec_size", ")", "]", "\n", "embedding_dict", "[", "OOV", "]", "=", "[", "0.", "for", "_", "in", "range", "(", "vec_size", ")", "]", "\n", "idx2emb_dict", "=", "{", "idx", ":", "embedding_dict", "[", "token", "]", "\n", "for", "token", ",", "idx", "in", "token2idx_dict", ".", "items", "(", ")", "}", "\n", "emb_mat", "=", "[", "idx2emb_dict", "[", "idx", "]", "for", "idx", "in", "range", "(", "len", "(", "idx2emb_dict", ")", ")", "]", "\n", "\n", "idx2token_dict", "=", "{", "idx", ":", "token", "for", "token", ",", "idx", "in", "token2idx_dict", ".", "items", "(", ")", "}", "\n", "\n", "return", "emb_mat", ",", "token2idx_dict", ",", "idx2token_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.update_value_np": [[286, 289], ["None"], "function", ["None"], ["", "def", "update_value_np", "(", "array", ",", "list_", ")", ":", "\n", "    ", "for", "item", "in", "list_", ":", "\n", "        ", "array", "[", "item", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.build_features": [[291, 392], ["print", "tqdm.tqdm", "print", "torch.save", "torch.save", "torch.save", "tqdm.tqdm", "prepro.build_features.filter_func"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save"], ["", "", "def", "build_features", "(", "config", ",", "examples", ",", "data_type", ",", "out_file", ",", "word2idx_dict", ",", "char2idx_dict", ",", "relation2idx_dict", ")", ":", "\n", "    ", "if", "data_type", "==", "'test'", ":", "\n", "        ", "para_limit", ",", "ques_limit", "=", "0", ",", "0", "\n", "for", "example", "in", "tqdm", "(", "examples", ")", ":", "\n", "            ", "para_limit", "=", "max", "(", "para_limit", ",", "len", "(", "example", "[", "'context_tokens'", "]", ")", ")", "\n", "ques_limit", "=", "max", "(", "ques_limit", ",", "len", "(", "example", "[", "'ques_tokens'", "]", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "para_limit", "=", "config", ".", "para_limit", "\n", "ques_limit", "=", "config", ".", "ques_limit", "\n", "\n", "", "char_limit", "=", "config", ".", "char_limit", "\n", "num_relations", "=", "config", ".", "num_relations", "\n", "# ", "\n", "\n", "def", "filter_func", "(", "example", ")", ":", "\n", "        ", "return", "len", "(", "example", "[", "\"context_tokens\"", "]", ")", ">", "para_limit", "or", "len", "(", "example", "[", "\"ques_tokens\"", "]", ")", ">", "ques_limit", "\n", "\n", "", "print", "(", "\"Processing {} examples...\"", ".", "format", "(", "data_type", ")", ")", "\n", "datapoints", "=", "[", "]", "\n", "total", "=", "0", "\n", "total_", "=", "0", "\n", "for", "example", "in", "tqdm", "(", "examples", ")", ":", "\n", "        ", "total_", "+=", "1", "\n", "\n", "if", "filter_func", "(", "example", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "total", "+=", "1", "\n", "\n", "context_idxs", "=", "np", ".", "zeros", "(", "para_limit", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "context_char_idxs", "=", "np", ".", "zeros", "(", "(", "para_limit", ",", "char_limit", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "ques_idxs", "=", "np", ".", "zeros", "(", "ques_limit", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "ques_char_idxs", "=", "np", ".", "zeros", "(", "(", "ques_limit", ",", "char_limit", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "#", "\n", "relation_idxs", "=", "np", ".", "zeros", "(", "(", "num_relations", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "subject_y1", "=", "np", ".", "zeros", "(", "(", "num_relations", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "subject_y2", "=", "np", ".", "zeros", "(", "(", "num_relations", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "object_y1", "=", "np", ".", "zeros", "(", "(", "num_relations", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "object_y2", "=", "np", ".", "zeros", "(", "(", "num_relations", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "\n", "def", "_get_word", "(", "word", ")", ":", "\n", "            ", "for", "each", "in", "(", "word", ",", "word", ".", "lower", "(", ")", ",", "word", ".", "capitalize", "(", ")", ",", "word", ".", "upper", "(", ")", ")", ":", "\n", "                ", "if", "each", "in", "word2idx_dict", ":", "\n", "                    ", "return", "word2idx_dict", "[", "each", "]", "\n", "", "", "return", "1", "\n", "\n", "", "def", "_get_char", "(", "char", ")", ":", "\n", "            ", "if", "char", "in", "char2idx_dict", ":", "\n", "                ", "return", "char2idx_dict", "[", "char", "]", "\n", "", "return", "1", "\n", "\n", "", "def", "_get_relation", "(", "relation", ")", ":", "\n", "            ", "for", "each", "in", "(", "relation", ",", "relation", ".", "lower", "(", ")", ",", "relation", ".", "capitalize", "(", ")", ",", "relation", ".", "upper", "(", ")", ")", ":", "\n", "                ", "if", "each", "in", "relation2idx_dict", ":", "\n", "                    ", "return", "relation2idx_dict", "[", "each", "]", "\n", "", "", "return", "1", "\n", "\n", "", "context_idxs", "[", ":", "len", "(", "example", "[", "'context_tokens'", "]", ")", "]", "=", "[", "_get_word", "(", "token", ")", "for", "token", "in", "example", "[", "'context_tokens'", "]", "]", "\n", "ques_idxs", "[", ":", "len", "(", "example", "[", "'ques_tokens'", "]", ")", "]", "=", "[", "_get_word", "(", "token", ")", "for", "token", "in", "example", "[", "'ques_tokens'", "]", "]", "\n", "\n", "for", "i", ",", "token", "in", "enumerate", "(", "example", "[", "\"context_chars\"", "]", ")", ":", "\n", "            ", "l", "=", "min", "(", "len", "(", "token", ")", ",", "char_limit", ")", "\n", "context_char_idxs", "[", "i", ",", ":", "l", "]", "=", "[", "_get_char", "(", "char", ")", "for", "char", "in", "token", "[", ":", "l", "]", "]", "\n", "\n", "", "for", "i", ",", "token", "in", "enumerate", "(", "example", "[", "\"ques_chars\"", "]", ")", ":", "\n", "            ", "l", "=", "min", "(", "len", "(", "token", ")", ",", "char_limit", ")", "\n", "ques_char_idxs", "[", "i", ",", ":", "l", "]", "=", "[", "_get_char", "(", "char", ")", "for", "char", "in", "token", "[", ":", "l", "]", "]", "\n", "\n", "# Relation information", "\n", "# for idx, rela in enumerate(example['relations']): # ['producer' 'date of birth']", "\n", "#     relation_idx = _get_relation(rela)", "\n", "#     relation_idxs[idx] = relation_idx", "\n", "\n", "", "for", "idx", ",", "rela", "in", "enumerate", "(", "example", "[", "'relations'", "]", ")", ":", "# ['producer' 'date of birth']", "\n", "            ", "relation_idx", "=", "_get_relation", "(", "rela", ")", "\n", "relation_idxs", "[", "relation_idx", "]", "=", "1", "\n", "#", "\n", "subject_y1", "[", "relation_idx", "]", "=", "example", "[", "'subject_y1'", "]", "[", "idx", "]", "\n", "subject_y2", "[", "relation_idx", "]", "=", "example", "[", "'subject_y2'", "]", "[", "idx", "]", "\n", "object_y1", "[", "relation_idx", "]", "=", "example", "[", "'object_y1'", "]", "[", "idx", "]", "\n", "object_y2", "[", "relation_idx", "]", "=", "example", "[", "'object_y2'", "]", "[", "idx", "]", "\n", "#", "\n", "", "start", ",", "end", "=", "example", "[", "\"y1s\"", "]", "[", "-", "1", "]", ",", "example", "[", "\"y2s\"", "]", "[", "-", "1", "]", "\n", "y1", ",", "y2", "=", "start", ",", "end", "\n", "\n", "datapoints", ".", "append", "(", "{", "'context_idxs'", ":", "torch", ".", "from_numpy", "(", "context_idxs", ")", ",", "\n", "'context_char_idxs'", ":", "torch", ".", "from_numpy", "(", "context_char_idxs", ")", ",", "\n", "'ques_idxs'", ":", "torch", ".", "from_numpy", "(", "ques_idxs", ")", ",", "\n", "'ques_char_idxs'", ":", "torch", ".", "from_numpy", "(", "ques_char_idxs", ")", ",", "\n", "'subject_y1'", ":", "subject_y1", ",", "\n", "'subject_y2'", ":", "subject_y2", ",", "\n", "'object_y1'", ":", "object_y1", ",", "\n", "'object_y2'", ":", "object_y2", ",", "\n", "'relation_idxs'", ":", "relation_idxs", ",", "\n", "'y1'", ":", "y1", ",", "\n", "'y2'", ":", "y2", ",", "\n", "'id'", ":", "example", "[", "'id'", "]", ",", "\n", "'start_end_facts'", ":", "example", "[", "'start_end_facts'", "]", "}", ")", "\n", "", "print", "(", "\"Build {} / {} instances of features in total\"", ".", "format", "(", "total", ",", "total_", ")", ")", "\n", "# pickle.dump(datapoints, open(out_file, 'wb'), protocol=-1)", "\n", "torch", ".", "save", "(", "datapoints", ",", "out_file", ")", "# train_record.pkl", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save": [[394, 399], ["print", "open", "ujson.dump"], "function", ["None"], ["", "def", "save", "(", "filename", ",", "obj", ",", "message", "=", "None", ")", ":", "\n", "    ", "if", "message", "is", "not", "None", ":", "\n", "        ", "print", "(", "\"Saving {}...\"", ".", "format", "(", "message", ")", ")", "\n", "", "with", "open", "(", "filename", ",", "\"w\"", ")", "as", "fh", ":", "\n", "        ", "json", ".", "dump", "(", "obj", ",", "fh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.prepro": [[401, 459], ["random.seed", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "prepro.build_features", "prepro.save", "prepro.process_file", "prepro.process_file", "prepro.get_embedding", "prepro.get_embedding", "prepro.get_embedding", "os.path.isfile", "os.path.isfile", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "prepro.save", "collections.Counter", "collections.Counter", "collections.Counter", "open", "ujson.load", "open", "ujson.load", "open", "ujson.load"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.build_features", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.process_file", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.process_file", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.get_embedding", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.get_embedding", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.get_embedding", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.prepro.save"], ["", "", "def", "prepro", "(", "config", ")", ":", "\n", "    ", "random", ".", "seed", "(", "13", ")", "\n", "# ", "\n", "if", "config", ".", "data_split", "==", "'train'", ":", "\n", "        ", "word_counter", ",", "char_counter", ",", "relation_counter", "=", "Counter", "(", ")", ",", "Counter", "(", ")", ",", "Counter", "(", ")", "\n", "examples", ",", "eval_examples", "=", "process_file", "(", "config", ".", "data_file", ",", "config", ",", "word_counter", ",", "char_counter", ",", "relation_counter", ")", "\n", "", "else", ":", "\n", "        ", "examples", ",", "eval_examples", "=", "process_file", "(", "config", ".", "data_file", ",", "config", ")", "\n", "\n", "", "word2idx_dict", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "config", ".", "word2idx_file", ")", ":", "\n", "        ", "with", "open", "(", "config", ".", "word2idx_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "            ", "word2idx_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "", "else", ":", "\n", "        ", "word_emb_mat", ",", "word2idx_dict", ",", "idx2word_dict", "=", "get_embedding", "(", "word_counter", ",", "\"word\"", ",", "emb_file", "=", "config", ".", "glove_word_file", ",", "\n", "size", "=", "config", ".", "glove_word_size", ",", "vec_size", "=", "config", ".", "glove_dim", ",", "token2idx_dict", "=", "word2idx_dict", ")", "\n", "\n", "", "char2idx_dict", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "config", ".", "char2idx_file", ")", ":", "\n", "        ", "with", "open", "(", "config", ".", "char2idx_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "            ", "char2idx_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "", "else", ":", "\n", "        ", "char_emb_mat", ",", "char2idx_dict", ",", "idx2char_dict", "=", "get_embedding", "(", "\n", "char_counter", ",", "\"char\"", ",", "emb_file", "=", "None", ",", "size", "=", "None", ",", "vec_size", "=", "config", ".", "char_dim", ",", "token2idx_dict", "=", "char2idx_dict", ")", "\n", "\n", "", "relation2idx_dict", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "config", ".", "relation2idx_file", ")", ":", "\n", "        ", "with", "open", "(", "config", ".", "relation2idx_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "            ", "relation2idx_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "", "else", ":", "\n", "        ", "relation_emb_mat", ",", "relation2idx_dict", ",", "idx2relation_dict", "=", "get_embedding", "(", "\n", "relation_counter", ",", "\"relation\"", ",", "emb_file", "=", "None", ",", "size", "=", "None", ",", "vec_size", "=", "config", ".", "relation_dim", ",", "token2idx_dict", "=", "relation2idx_dict", ")", "\n", "\n", "", "if", "config", ".", "data_split", "==", "'train'", ":", "\n", "        ", "record_file", "=", "config", ".", "train_record_file", "\n", "eval_file", "=", "config", ".", "train_eval_file", "\n", "", "elif", "config", ".", "data_split", "==", "'dev'", ":", "\n", "        ", "record_file", "=", "config", ".", "dev_record_file", "\n", "eval_file", "=", "config", ".", "dev_eval_file", "\n", "", "elif", "config", ".", "data_split", "==", "'test'", ":", "\n", "        ", "record_file", "=", "config", ".", "test_record_file", "\n", "eval_file", "=", "config", ".", "test_eval_file", "\n", "\n", "", "build_features", "(", "config", ",", "examples", ",", "config", ".", "data_split", ",", "record_file", ",", "word2idx_dict", ",", "char2idx_dict", ",", "relation2idx_dict", ")", "\n", "save", "(", "eval_file", ",", "eval_examples", ",", "message", "=", "'{} eval'", ".", "format", "(", "config", ".", "data_split", ")", ")", "# train_eval.json", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "config", ".", "word2idx_file", ")", ":", "\n", "        ", "save", "(", "config", ".", "word_emb_file", ",", "word_emb_mat", ",", "message", "=", "\"word embedding\"", ")", "\n", "save", "(", "config", ".", "char_emb_file", ",", "char_emb_mat", ",", "message", "=", "\"char embedding\"", ")", "\n", "save", "(", "config", ".", "relation_emb_file", ",", "relation_emb_mat", ",", "message", "=", "\"relation embedding\"", ")", "\n", "# ", "\n", "save", "(", "config", ".", "word2idx_file", ",", "word2idx_dict", ",", "message", "=", "\"word2idx\"", ")", "\n", "save", "(", "config", ".", "char2idx_file", ",", "char2idx_dict", ",", "message", "=", "\"char2idx\"", ")", "\n", "save", "(", "config", ".", "relation2idx_file", ",", "relation2idx_dict", ",", "message", "=", "'relation2idx'", ")", "\n", "#", "\n", "save", "(", "config", ".", "idx2word_file", ",", "idx2word_dict", ",", "message", "=", "'idx2word'", ")", "\n", "save", "(", "config", ".", "idx2char_file", ",", "idx2char_dict", ",", "message", "=", "'idx2char'", ")", "\n", "save", "(", "config", ".", "idx2relation_file", ",", "idx2relation_dict", ",", "message", "=", "'idx2relation'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.__init__": [[16, 93], ["torch.nn.Module.__init__", "torch.nn.Embedding", "model.Model.word_emb.weight.data.copy_", "torch.nn.Embedding", "model.Model.relation_emb.weight.data.copy_", "torch.nn.Embedding", "model.Model.char_emb.weight.data.copy_", "torch.nn.Conv1d", "model.EncoderRNN", "model.BiAttention", "torch.nn.Sequential", "model.EncoderRNN", "model.BiAttention", "torch.nn.Sequential", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "model.BiAttention", "torch.nn.Sequential", "model.EncoderRNN", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "model.EncoderRNN", "torch.nn.Linear", "len", "len", "torch.from_numpy", "len", "len", "torch.from_numpy", "len", "len", "torch.from_numpy", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "word_mat", ",", "char_mat", ",", "relation_mat", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "word_dim", "=", "config", ".", "glove_dim", "\n", "self", ".", "word_emb", "=", "nn", ".", "Embedding", "(", "len", "(", "word_mat", ")", ",", "len", "(", "word_mat", "[", "0", "]", ")", ",", "padding_idx", "=", "0", ")", "\n", "self", ".", "word_emb", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "word_mat", ")", ")", "\n", "self", ".", "word_emb", ".", "weight", ".", "requires_grad", "=", "False", "\n", "#", "\n", "self", ".", "relation_dim", "=", "config", ".", "relation_dim", "\n", "self", ".", "relation_emb", "=", "nn", ".", "Embedding", "(", "len", "(", "relation_mat", ")", ",", "len", "(", "relation_mat", "[", "0", "]", ")", ",", "padding_idx", "=", "0", ")", "\n", "self", ".", "relation_emb", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "relation_mat", ")", ")", "\n", "#", "\n", "self", ".", "char_emb", "=", "nn", ".", "Embedding", "(", "len", "(", "char_mat", ")", ",", "len", "(", "char_mat", "[", "0", "]", ")", ",", "padding_idx", "=", "0", ")", "\n", "self", ".", "char_emb", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "char_mat", ")", ")", "\n", "\n", "self", ".", "char_cnn", "=", "nn", ".", "Conv1d", "(", "config", ".", "char_dim", ",", "config", ".", "char_hidden", ",", "5", ")", "\n", "self", ".", "char_hidden", "=", "config", ".", "char_hidden", "\n", "self", ".", "hidden", "=", "config", ".", "hidden", "\n", "\n", "self", ".", "num_relations", "=", "config", ".", "num_relations", "\n", "\n", "self", ".", "rnn", "=", "EncoderRNN", "(", "config", ".", "char_hidden", "+", "self", ".", "word_dim", ",", "config", ".", "hidden", ",", "1", ",", "True", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "\n", "self", ".", "qc_att", "=", "BiAttention", "(", "config", ".", "hidden", "*", "2", ",", "1", "-", "config", ".", "keep_prob", ")", "\n", "self", ".", "linear_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "8", ",", "config", ".", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "rnn_2", "=", "EncoderRNN", "(", "config", ".", "hidden", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "self_att", "=", "BiAttention", "(", "config", ".", "hidden", "*", "2", ",", "1", "-", "config", ".", "keep_prob", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "8", ",", "config", ".", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "rnn_sp", "=", "EncoderRNN", "(", "config", ".", "hidden", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_sp", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "1", ")", "\n", "\n", "# Evidence information ------------", "\n", "self", ".", "rnn_relation", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "2", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "True", ")", "\n", "self", ".", "linear_relation", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "self", ".", "num_relations", ")", "\n", "#", "\n", "self", ".", "rnn_relation_2", "=", "EncoderRNN", "(", "config", ".", "relation_dim", ",", "config", ".", "hidden", ",", "1", ",", "True", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "\n", "self", ".", "rs_att", "=", "BiAttention", "(", "config", ".", "hidden", "*", "2", ",", "1", "-", "config", ".", "keep_prob", ")", "\n", "self", ".", "linear_rs_att", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "8", ",", "config", ".", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "rnn_relation_3", "=", "EncoderRNN", "(", "config", ".", "hidden", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "\n", "\n", "self", ".", "rnn_subject_start", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "2", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_subject_start", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "self", ".", "num_relations", ")", "\n", "\n", "self", ".", "rnn_subject_end", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "2", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_subject_end", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "self", ".", "num_relations", ")", "\n", "\n", "self", ".", "rnn_object_start", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "2", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_object_start", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "self", ".", "num_relations", ")", "\n", "\n", "self", ".", "rnn_object_end", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "2", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_object_end", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "self", ".", "num_relations", ")", "\n", "# End ------------", "\n", "\n", "self", ".", "rnn_start", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "3", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_start", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "1", ")", "\n", "\n", "self", ".", "rnn_end", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "3", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_end", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "1", ")", "\n", "\n", "self", ".", "rnn_type", "=", "EncoderRNN", "(", "config", ".", "hidden", "*", "3", ",", "config", ".", "hidden", ",", "1", ",", "False", ",", "True", ",", "1", "-", "config", ".", "keep_prob", ",", "False", ")", "\n", "self", ".", "linear_type", "=", "nn", ".", "Linear", "(", "config", ".", "hidden", "*", "2", ",", "3", ")", "\n", "\n", "self", ".", "cache_S", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.get_output_mask": [[95, 103], ["outer.size", "numpy.tril", "outer.data.new().copy_", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.triu", "torch.from_numpy", "numpy.ones", "outer.data.new"], "methods", ["None"], ["", "def", "get_output_mask", "(", "self", ",", "outer", ")", ":", "\n", "        ", "S", "=", "outer", ".", "size", "(", "1", ")", "\n", "if", "S", "<=", "self", ".", "cache_S", ":", "\n", "            ", "return", "Variable", "(", "self", ".", "cache_mask", "[", ":", "S", ",", ":", "S", "]", ",", "requires_grad", "=", "False", ")", "\n", "", "self", ".", "cache_S", "=", "S", "\n", "np_mask", "=", "np", ".", "tril", "(", "np", ".", "triu", "(", "np", ".", "ones", "(", "(", "S", ",", "S", ")", ")", ",", "0", ")", ",", "15", ")", "\n", "self", ".", "cache_mask", "=", "outer", ".", "data", ".", "new", "(", "S", ",", "S", ")", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "np_mask", ")", ")", "\n", "return", "Variable", "(", "self", ".", "cache_mask", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.handle_outer": [[105, 112], ["model.Model.get_output_mask", "logit1.unsqueeze", "logit2.unsqueeze", "[].max", "[].max", "model.Model.unsqueeze", "outer.max", "outer.max"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.get_output_mask"], ["", "def", "handle_outer", "(", "self", ",", "logit1", ",", "logit2", ")", ":", "\n", "        ", "outer", "=", "logit1", ".", "unsqueeze", "(", "2", ")", "+", "logit2", ".", "unsqueeze", "(", "1", ")", "\n", "outer_mask", "=", "self", ".", "get_output_mask", "(", "outer", ")", "\n", "outer", "=", "outer", "-", "1e30", "*", "(", "1", "-", "outer_mask", ".", "unsqueeze", "(", "0", ")", ")", "\n", "yp1", "=", "outer", ".", "max", "(", "dim", "=", "2", ")", "[", "0", "]", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "yp2", "=", "outer", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "return", "yp1", ",", "yp2", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.forward": [[114, 227], ["model.Model.char_emb().view", "model.Model.char_emb().view", "[].view", "[].view", "model.Model.word_emb", "model.Model.word_emb", "torch.cat", "torch.cat", "model.Model.rnn", "model.Model.rnn", "model.Model.rnn_relation", "model.Model.linear_relation", "k_relations.float", "model.Model.qc_att", "model.Model.linear_1", "model.Model.rnn_2", "model.Model.self_att", "model.Model.linear_2", "model.Model.rnn_sp", "torch.matmul", "torch.matmul", "torch.cat", "model.Model.linear_sp", "torch.autograd.Variable", "torch.cat().contiguous", "torch.matmul", "model.Model.rnn_relation_2", "model.Model.rs_att", "model.Model.linear_rs_att", "model.Model.rnn_relation_3", "model.Model.rnn_subject_start", "model.Model.rnn_subject_end", "model.Model.rnn_object_start", "model.Model.rnn_object_end", "torch.cat", "model.Model.rnn_start", "torch.cat", "model.Model.rnn_end", "torch.cat", "model.Model.linear_type", "model.Model.handle_outer", "range", "range", "context_idxs.size", "ques_idxs.size", "context_char_idxs.size", "context_idxs.size", "torch.nn.Sigmoid", "model.Model.relation_emb.weight.view", "k_relations.view().float", "start_mapping.permute().contiguous", "end_mapping.permute().contiguous", "model.Model.data.new().zero_", "model.Model.linear_subject_start", "model.Model.linear_subject_end", "model.Model.linear_object_start", "model.Model.linear_object_end", "model.Model.linear_start().squeeze", "model.Model.linear_end().squeeze", "torch.max", "model.Model.handle_outer", "sy1.append", "sy2.append", "model.Model.handle_outer", "oy1.append", "oy2.append", "model.Model.char_emb", "model.Model.char_emb", "torch.cat", "model.Model.rnn_type", "context_char_idxs.contiguous().view", "ques_char_idxs.contiguous().view", "model.Model.char_cnn().max", "model.Model.char_cnn().max", "k_relations.view", "start_mapping.permute", "end_mapping.permute", "model.Model.data.new", "model.Model.linear_start", "model.Model.linear_end", "model.Model.size", "model.Model.size", "context_char_idxs.contiguous", "ques_char_idxs.contiguous", "model.Model.char_cnn", "model.Model.char_cnn", "torch.nn.BCELoss", "relations.float", "[].view.permute().contiguous", "[].view.permute().contiguous", "[].view.permute", "[].view.permute"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.handle_outer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.handle_outer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.Model.handle_outer"], ["", "def", "forward", "(", "self", ",", "context_idxs", ",", "ques_idxs", ",", "context_char_idxs", ",", "ques_char_idxs", ",", "relations", ",", "context_lens", ",", "start_mapping", ",", "end_mapping", ",", "all_mapping", ",", "return_yp", "=", "False", ")", ":", "\n", "        ", "para_size", ",", "ques_size", ",", "char_size", ",", "bsz", "=", "context_idxs", ".", "size", "(", "1", ")", ",", "ques_idxs", ".", "size", "(", "1", ")", ",", "context_char_idxs", ".", "size", "(", "2", ")", ",", "context_idxs", ".", "size", "(", "0", ")", "\n", "\n", "context_mask", "=", "(", "context_idxs", ">", "0", ")", ".", "float", "(", ")", "\n", "ques_mask", "=", "(", "ques_idxs", ">", "0", ")", ".", "float", "(", ")", "\n", "question_lens", "=", "(", "ques_idxs", ">", "0", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "context_ch", "=", "self", ".", "char_emb", "(", "context_char_idxs", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "char_size", ")", ")", ".", "view", "(", "bsz", "*", "para_size", ",", "char_size", ",", "-", "1", ")", "\n", "ques_ch", "=", "self", ".", "char_emb", "(", "ques_char_idxs", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "char_size", ")", ")", ".", "view", "(", "bsz", "*", "ques_size", ",", "char_size", ",", "-", "1", ")", "\n", "\n", "context_ch", "=", "self", ".", "char_cnn", "(", "context_ch", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", ".", "max", "(", "dim", "=", "-", "1", ")", "[", "0", "]", ".", "view", "(", "bsz", ",", "para_size", ",", "-", "1", ")", "\n", "ques_ch", "=", "self", ".", "char_cnn", "(", "ques_ch", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", ".", "max", "(", "dim", "=", "-", "1", ")", "[", "0", "]", ".", "view", "(", "bsz", ",", "ques_size", ",", "-", "1", ")", "\n", "\n", "context_word", "=", "self", ".", "word_emb", "(", "context_idxs", ")", "\n", "ques_word", "=", "self", ".", "word_emb", "(", "ques_idxs", ")", "\n", "\n", "context_output", "=", "torch", ".", "cat", "(", "[", "context_word", ",", "context_ch", "]", ",", "dim", "=", "2", ")", "\n", "ques_output", "=", "torch", ".", "cat", "(", "[", "ques_word", ",", "ques_ch", "]", ",", "dim", "=", "2", ")", "\n", "\n", "context_output", "=", "self", ".", "rnn", "(", "context_output", ",", "context_lens", ")", "\n", "ques_output", "=", "self", ".", "rnn", "(", "ques_output", ",", "question_lens", ")", "\n", "\n", "# Evidence information ------------", "\n", "relation_output", "=", "self", ".", "rnn_relation", "(", "ques_output", ",", "question_lens", ")", "\n", "logit_relation", "=", "self", ".", "linear_relation", "(", "relation_output", ")", "\n", "\n", "outputs", "=", "nn", ".", "Sigmoid", "(", ")", "(", "logit_relation", ")", "\n", "\n", "loss_relation", "=", "nn", ".", "BCELoss", "(", "reduction", "=", "'none'", ")", "(", "outputs", ",", "relations", ".", "float", "(", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "k_relations", "=", "(", "outputs", ">=", "0.5", ")", "\n", "\n", "context_relations", "=", "self", ".", "relation_emb", ".", "weight", ".", "view", "(", "1", ",", "self", ".", "num_relations", ",", "-", "1", ")", "*", "k_relations", ".", "view", "(", "-", "1", ",", "self", ".", "num_relations", ",", "1", ")", ".", "float", "(", ")", "\n", "relations_mask", "=", "k_relations", ".", "float", "(", ")", "\n", "# End ------------", "\n", "\n", "output", "=", "self", ".", "qc_att", "(", "context_output", ",", "ques_output", ",", "ques_mask", ")", "\n", "output", "=", "self", ".", "linear_1", "(", "output", ")", "\n", "\n", "output_t", "=", "self", ".", "rnn_2", "(", "output", ",", "context_lens", ")", "\n", "output_t", "=", "self", ".", "self_att", "(", "output_t", ",", "output_t", ",", "context_mask", ")", "\n", "output_t", "=", "self", ".", "linear_2", "(", "output_t", ")", "\n", "\n", "output", "=", "output", "+", "output_t", "\n", "# ", "\n", "sp_output", "=", "self", ".", "rnn_sp", "(", "output", ",", "context_lens", ")", "\n", "\n", "start_output", "=", "torch", ".", "matmul", "(", "start_mapping", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "sp_output", "[", ":", ",", ":", ",", "self", ".", "hidden", ":", "]", ")", "\n", "end_output", "=", "torch", ".", "matmul", "(", "end_mapping", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "sp_output", "[", ":", ",", ":", ",", ":", "self", ".", "hidden", "]", ")", "\n", "sp_output", "=", "torch", ".", "cat", "(", "[", "start_output", ",", "end_output", "]", ",", "dim", "=", "-", "1", ")", "\n", "sp_output_t", "=", "self", ".", "linear_sp", "(", "sp_output", ")", "\n", "sp_output_aux", "=", "Variable", "(", "sp_output_t", ".", "data", ".", "new", "(", "sp_output_t", ".", "size", "(", "0", ")", ",", "sp_output_t", ".", "size", "(", "1", ")", ",", "1", ")", ".", "zero_", "(", ")", ")", "\n", "predict_support", "=", "torch", ".", "cat", "(", "[", "sp_output_aux", ",", "sp_output_t", "]", ",", "dim", "=", "-", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "sp_output", "=", "torch", ".", "matmul", "(", "all_mapping", ",", "sp_output", ")", "\n", "\n", "# Evidence information ------------", "\n", "context_relations", "=", "self", ".", "rnn_relation_2", "(", "context_relations", ")", "\n", "\n", "output_evi", "=", "self", ".", "rs_att", "(", "sp_output", ",", "context_relations", ",", "relations_mask", ")", "\n", "output_evi", "=", "self", ".", "linear_rs_att", "(", "output_evi", ")", "\n", "\n", "output_evi", "=", "self", ".", "rnn_relation_3", "(", "output_evi", ",", "context_lens", ")", "\n", "\n", "# subject", "\n", "output_subject_start", "=", "self", ".", "rnn_subject_start", "(", "output_evi", ",", "context_lens", ")", "\n", "logit_subject_start", "=", "self", ".", "linear_subject_start", "(", "output_subject_start", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "output_subject_end", "=", "self", ".", "rnn_subject_end", "(", "output_subject_start", ",", "context_lens", ")", "\n", "logit_subject_end", "=", "self", ".", "linear_subject_end", "(", "output_subject_end", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "# object", "\n", "output_object_start", "=", "self", ".", "rnn_object_start", "(", "output_subject_end", ",", "context_lens", ")", "\n", "logit_object_start", "=", "self", ".", "linear_object_start", "(", "output_object_start", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "output_object_end", "=", "self", ".", "rnn_object_end", "(", "output_object_start", ",", "context_lens", ")", "\n", "logit_object_end", "=", "self", ".", "linear_object_end", "(", "output_object_end", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", ".", "unsqueeze", "(", "2", ")", "\n", "# End ------------", "\n", "\n", "# Start token", "\n", "output_start", "=", "torch", ".", "cat", "(", "[", "output", ",", "output_object_end", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "output_start", "=", "self", ".", "rnn_start", "(", "output_start", ",", "context_lens", ")", "\n", "logit1", "=", "self", ".", "linear_start", "(", "output_start", ")", ".", "squeeze", "(", "2", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", "\n", "\n", "# End token", "\n", "output_end", "=", "torch", ".", "cat", "(", "[", "output", ",", "output_start", "]", ",", "dim", "=", "2", ")", "\n", "\n", "output_end", "=", "self", ".", "rnn_end", "(", "output_end", ",", "context_lens", ")", "\n", "logit2", "=", "self", ".", "linear_end", "(", "output_end", ")", ".", "squeeze", "(", "2", ")", "-", "1e30", "*", "(", "1", "-", "context_mask", ")", "\n", "\n", "output_type", "=", "torch", ".", "cat", "(", "[", "output", ",", "output_end", "]", ",", "dim", "=", "2", ")", "\n", "output_type", "=", "torch", ".", "max", "(", "self", ".", "rnn_type", "(", "output_type", ",", "context_lens", ")", ",", "1", ")", "[", "0", "]", "\n", "predict_type", "=", "self", ".", "linear_type", "(", "output_type", ")", "\n", "\n", "if", "not", "return_yp", ":", "return", "logit1", ",", "logit2", ",", "predict_type", ",", "predict_support", ",", "logit_subject_start", ",", "logit_subject_end", ",", "logit_object_start", ",", "logit_object_end", ",", "k_relations", ",", "loss_relation", "\n", "\n", "#", "\n", "yp1", ",", "yp2", "=", "self", ".", "handle_outer", "(", "logit1", ",", "logit2", ")", "\n", "# Evidence information ------------", "\n", "sy1", "=", "[", "]", "# sy* is a list of pos of each relation", "\n", "sy2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_relations", ")", ":", "\n", "            ", "p1", ",", "p2", "=", "self", ".", "handle_outer", "(", "logit_subject_start", "[", ":", ",", ":", ",", "i", "]", ",", "logit_subject_end", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "sy1", ".", "append", "(", "p1", ")", "\n", "sy2", ".", "append", "(", "p2", ")", "\n", "", "oy1", "=", "[", "]", "# oy* is a list of pos of each relation", "\n", "oy2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_relations", ")", ":", "\n", "           ", "p1", ",", "p2", "=", "self", ".", "handle_outer", "(", "logit_object_start", "[", ":", ",", ":", ",", "i", "]", ",", "logit_object_end", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "oy1", ".", "append", "(", "p1", ")", "\n", "oy2", ".", "append", "(", "p2", ")", "\n", "\n", "", "return", "logit1", ",", "logit2", ",", "predict_type", ",", "predict_support", ",", "logit_subject_start", ",", "logit_subject_end", ",", "logit_object_start", ",", "logit_object_end", ",", "k_relations", ",", "loss_relation", ",", "yp1", ",", "yp2", ",", "sy1", ",", "sy2", ",", "oy1", ",", "oy2", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.LockedDropout.__init__": [[230, 233], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.LockedDropout.forward": [[234, 242], ["x.data.new().bernoulli_", "torch.autograd.Variable", "mask.expand_as.expand_as.expand_as", "x.data.new().bernoulli_.div_", "x.data.new", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "dropout", "=", "self", ".", "dropout", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "return", "x", "\n", "", "m", "=", "x", ".", "data", ".", "new", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ")", ".", "bernoulli_", "(", "1", "-", "dropout", ")", "\n", "mask", "=", "Variable", "(", "m", ".", "div_", "(", "1", "-", "dropout", ")", ",", "requires_grad", "=", "False", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "x", ")", "\n", "return", "mask", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.EncoderRNN.__init__": [[245, 262], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ParameterList", "model.LockedDropout", "model.EncoderRNN.rnns.append", "torch.nn.GRU", "torch.nn.Parameter", "torch.Tensor().zero_", "range", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "num_units", ",", "nlayers", ",", "concat", ",", "bidir", ",", "dropout", ",", "return_last", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rnns", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nlayers", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "input_size_", "=", "input_size", "\n", "output_size_", "=", "num_units", "\n", "", "else", ":", "\n", "                ", "input_size_", "=", "num_units", "if", "not", "bidir", "else", "num_units", "*", "2", "\n", "output_size_", "=", "num_units", "\n", "", "self", ".", "rnns", ".", "append", "(", "nn", ".", "GRU", "(", "input_size_", ",", "output_size_", ",", "1", ",", "bidirectional", "=", "bidir", ",", "batch_first", "=", "True", ")", ")", "\n", "", "self", ".", "rnns", "=", "nn", ".", "ModuleList", "(", "self", ".", "rnns", ")", "\n", "self", ".", "init_hidden", "=", "nn", ".", "ParameterList", "(", "[", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "2", "if", "bidir", "else", "1", ",", "1", ",", "num_units", ")", ".", "zero_", "(", ")", ")", "for", "_", "in", "range", "(", "nlayers", ")", "]", ")", "\n", "self", ".", "dropout", "=", "LockedDropout", "(", "dropout", ")", "\n", "self", ".", "concat", "=", "concat", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "self", ".", "return_last", "=", "return_last", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.EncoderRNN.reset_parameters": [[265, 272], ["torch.nn.utils.rnn.named_parameters", "p.data.normal_", "p.data.zero_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "rnn", "in", "self", ".", "rnns", ":", "\n", "            ", "for", "name", ",", "p", "in", "rnn", ".", "named_parameters", "(", ")", ":", "\n", "                ", "if", "'weight'", "in", "name", ":", "\n", "                    ", "p", ".", "data", ".", "normal_", "(", "std", "=", "0.1", ")", "\n", "", "else", ":", "\n", "                    ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.EncoderRNN.get_init": [[273, 275], ["model.EncoderRNN.init_hidden[].expand().contiguous", "model.EncoderRNN.init_hidden[].expand"], "methods", ["None"], ["", "", "", "", "def", "get_init", "(", "self", ",", "bsz", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "init_hidden", "[", "i", "]", ".", "expand", "(", "-", "1", ",", "bsz", ",", "-", "1", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.EncoderRNN.forward": [[276, 301], ["range", "input.size", "input.size", "input_lengths.data.cpu().numpy", "model.EncoderRNN.get_init", "model.EncoderRNN.dropout", "torch.cat", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "outputs.append", "outputs.append", "input_lengths.data.cpu", "torch.cat.size", "torch.autograd.Variable", "torch.cat", "model.EncoderRNN.permute().contiguous().view", "torch.cat.data.new().zero_", "torch.autograd.Variable.expand", "model.EncoderRNN.permute().contiguous", "torch.cat.data.new", "torch.cat.size", "torch.cat.size", "torch.cat.size", "model.EncoderRNN.permute"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.EncoderRNN.get_init"], ["", "def", "forward", "(", "self", ",", "input", ",", "input_lengths", "=", "None", ")", ":", "\n", "        ", "bsz", ",", "slen", "=", "input", ".", "size", "(", "0", ")", ",", "input", ".", "size", "(", "1", ")", "\n", "output", "=", "input", "\n", "outputs", "=", "[", "]", "\n", "if", "input_lengths", "is", "not", "None", ":", "\n", "            ", "lens", "=", "input_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "for", "i", "in", "range", "(", "self", ".", "nlayers", ")", ":", "\n", "            ", "hidden", "=", "self", ".", "get_init", "(", "bsz", ",", "i", ")", "\n", "output", "=", "self", ".", "dropout", "(", "output", ")", "\n", "if", "input_lengths", "is", "not", "None", ":", "\n", "# output = rnn.pack_padded_sequence(output, lens, batch_first=True)", "\n", "                ", "output", "=", "rnn", ".", "pack_padded_sequence", "(", "output", ",", "lens", ",", "batch_first", "=", "True", ",", "enforce_sorted", "=", "False", ")", "\n", "", "output", ",", "hidden", "=", "self", ".", "rnns", "[", "i", "]", "(", "output", ",", "hidden", ")", "\n", "if", "input_lengths", "is", "not", "None", ":", "\n", "                ", "output", ",", "_", "=", "rnn", ".", "pad_packed_sequence", "(", "output", ",", "batch_first", "=", "True", ")", "\n", "if", "output", ".", "size", "(", "1", ")", "<", "slen", ":", "# used for parallel", "\n", "                    ", "padding", "=", "Variable", "(", "output", ".", "data", ".", "new", "(", "1", ",", "1", ",", "1", ")", ".", "zero_", "(", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "output", ",", "padding", ".", "expand", "(", "output", ".", "size", "(", "0", ")", ",", "slen", "-", "output", ".", "size", "(", "1", ")", ",", "output", ".", "size", "(", "2", ")", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "", "if", "self", ".", "return_last", ":", "\n", "                ", "outputs", ".", "append", "(", "hidden", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "bsz", ",", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "outputs", ".", "append", "(", "output", ")", "\n", "", "", "if", "self", ".", "concat", ":", "\n", "            ", "return", "torch", ".", "cat", "(", "outputs", ",", "dim", "=", "2", ")", "\n", "", "return", "outputs", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.BiAttention.__init__": [[304, 311], ["torch.nn.Module.__init__", "model.LockedDropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Parameter", "torch.Tensor().uniform_", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "LockedDropout", "(", "dropout", ")", "\n", "self", ".", "input_linear", "=", "nn", ".", "Linear", "(", "input_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "memory_linear", "=", "nn", ".", "Linear", "(", "input_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dot_scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "input_size", ")", ".", "uniform_", "(", "1.0", "/", "(", "input_size", "**", "0.5", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.BiAttention.forward": [[312, 330], ["model.BiAttention.dropout", "model.BiAttention.dropout", "model.BiAttention.input_linear", "model.BiAttention.memory_linear().view", "torch.bmm", "torch.nn.functional.softmax", "torch.bmm", "torch.nn.functional.softmax().view", "torch.bmm", "torch.cat", "model.BiAttention.size", "model.BiAttention.size", "model.BiAttention.size", "model.BiAttention.permute().contiguous", "model.BiAttention.memory_linear", "torch.nn.functional.softmax", "model.BiAttention.permute", "att.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "memory", ",", "mask", ")", ":", "\n", "        ", "bsz", ",", "input_len", ",", "memory_len", "=", "input", ".", "size", "(", "0", ")", ",", "input", ".", "size", "(", "1", ")", ",", "memory", ".", "size", "(", "1", ")", "\n", "\n", "input", "=", "self", ".", "dropout", "(", "input", ")", "\n", "memory", "=", "self", ".", "dropout", "(", "memory", ")", "\n", "\n", "input_dot", "=", "self", ".", "input_linear", "(", "input", ")", "\n", "memory_dot", "=", "self", ".", "memory_linear", "(", "memory", ")", ".", "view", "(", "bsz", ",", "1", ",", "memory_len", ")", "\n", "cross_dot", "=", "torch", ".", "bmm", "(", "input", "*", "self", ".", "dot_scale", ",", "memory", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "att", "=", "input_dot", "+", "memory_dot", "+", "cross_dot", "\n", "att", "=", "att", "-", "1e30", "*", "(", "1", "-", "mask", "[", ":", ",", "None", "]", ")", "\n", "\n", "weight_one", "=", "F", ".", "softmax", "(", "att", ",", "dim", "=", "-", "1", ")", "\n", "output_one", "=", "torch", ".", "bmm", "(", "weight_one", ",", "memory", ")", "\n", "weight_two", "=", "F", ".", "softmax", "(", "att", ".", "max", "(", "dim", "=", "-", "1", ")", "[", "0", "]", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "bsz", ",", "1", ",", "input_len", ")", "\n", "output_two", "=", "torch", ".", "bmm", "(", "weight_two", ",", "input", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "input", ",", "output_one", ",", "input", "*", "output_one", ",", "output_two", "*", "output_one", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.GateLayer.__init__": [[333, 338], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_input", ",", "d_output", ")", ":", "\n", "        ", "super", "(", "GateLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "d_input", ",", "d_output", ")", "\n", "self", ".", "gate", "=", "nn", ".", "Linear", "(", "d_input", ",", "d_output", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.model.GateLayer.forward": [[339, 341], ["model.GateLayer.linear", "model.GateLayer.sigmoid", "model.GateLayer.gate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "linear", "(", "input", ")", "*", "self", ".", "sigmoid", "(", "self", ".", "gate", "(", "input", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.create_exp_dir": [[22, 33], ["print", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.join", "shutil.copyfile", "os.path.join", "os.path.join", "os.path.basename"], "function", ["None"], ["def", "create_exp_dir", "(", "path", ",", "scripts_to_save", "=", "None", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "#", "\n", "", "print", "(", "'Experiment dir : {}'", ".", "format", "(", "path", ")", ")", "\n", "if", "scripts_to_save", "is", "not", "None", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'scripts'", ")", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'scripts'", ")", ")", "\n", "", "for", "script", "in", "scripts_to_save", ":", "\n", "            ", "dst_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'scripts'", ",", "os", ".", "path", ".", "basename", "(", "script", ")", ")", "\n", "shutil", ".", "copyfile", "(", "script", ",", "dst_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.train": [[40, 178], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "run.create_exp_dir", "run.train.logging"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.create_exp_dir"], ["def", "train", "(", "config", ")", ":", "\n", "    ", "with", "open", "(", "config", ".", "word_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "word_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "with", "open", "(", "config", ".", "char_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "char_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "with", "open", "(", "config", ".", "relation_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "relation_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "with", "open", "(", "config", ".", "dev_eval_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "dev_eval_file", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "with", "open", "(", "config", ".", "idx2word_file", ",", "'r'", ")", "as", "fh", ":", "\n", "        ", "idx2word_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "\n", "", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "config", ".", "seed", ")", "\n", "\n", "config", ".", "save", "=", "'{}-{}'", ".", "format", "(", "config", ".", "save", ",", "time", ".", "strftime", "(", "\"%Y%m%d-%H%M%S\"", ")", ")", "\n", "create_exp_dir", "(", "config", ".", "save", ",", "scripts_to_save", "=", "[", "'run.py'", ",", "'model.py'", ",", "'util.py'", "]", ")", "\n", "def", "logging", "(", "s", ",", "print_", "=", "True", ",", "log_", "=", "True", ")", ":", "\n", "        ", "if", "print_", ":", "\n", "            ", "print", "(", "s", ")", "\n", "", "if", "log_", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "config", ".", "save", ",", "'log.txt'", ")", ",", "'a+'", ")", "as", "f_log", ":", "\n", "                ", "f_log", ".", "write", "(", "s", "+", "'\\n'", ")", "\n", "\n", "", "", "", "logging", "(", "'Config'", ")", "\n", "for", "k", ",", "v", "in", "config", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "        ", "logging", "(", "'    - {} : {}'", ".", "format", "(", "k", ",", "v", ")", ")", "\n", "\n", "", "logging", "(", "\"Building model...\"", ")", "\n", "train_buckets", "=", "get_buckets", "(", "config", ".", "train_record_file", ")", "\n", "dev_buckets", "=", "get_buckets", "(", "config", ".", "dev_record_file", ")", "\n", "\n", "def", "build_train_iterator", "(", ")", ":", "\n", "        ", "return", "DataIterator", "(", "train_buckets", ",", "config", ".", "batch_size", ",", "config", ".", "para_limit", ",", "config", ".", "ques_limit", ",", "config", ".", "char_limit", ",", "True", ",", "config", ".", "sent_limit", ",", "config", ".", "num_relations", ")", "\n", "\n", "", "def", "build_dev_iterator", "(", ")", ":", "\n", "        ", "return", "DataIterator", "(", "dev_buckets", ",", "config", ".", "batch_size", ",", "config", ".", "para_limit", ",", "config", ".", "ques_limit", ",", "config", ".", "char_limit", ",", "False", ",", "config", ".", "sent_limit", ",", "config", ".", "num_relations", ")", "\n", "\n", "", "model", "=", "Model", "(", "config", ",", "word_mat", ",", "char_mat", ",", "relation_mat", ")", "\n", "\n", "logging", "(", "'nparams {}'", ".", "format", "(", "sum", "(", "[", "p", ".", "nelement", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", ")", ")", ")", "\n", "ori_model", "=", "model", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "ori_model", ")", "\n", "\n", "lr", "=", "config", ".", "init_lr", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", ",", "lr", "=", "config", ".", "init_lr", ")", "\n", "cur_patience", "=", "0", "\n", "total_loss", "=", "0", "\n", "global_step", "=", "0", "\n", "best_dev_F1", "=", "None", "\n", "stop_train", "=", "False", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "eval_start_time", "=", "time", ".", "time", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "10000", ")", ":", "\n", "        ", "for", "data", "in", "build_train_iterator", "(", ")", ":", "\n", "            ", "context_idxs", "=", "Variable", "(", "data", "[", "'context_idxs'", "]", ")", "\n", "ques_idxs", "=", "Variable", "(", "data", "[", "'ques_idxs'", "]", ")", "\n", "context_char_idxs", "=", "Variable", "(", "data", "[", "'context_char_idxs'", "]", ")", "\n", "ques_char_idxs", "=", "Variable", "(", "data", "[", "'ques_char_idxs'", "]", ")", "\n", "#", "\n", "context_lens", "=", "Variable", "(", "data", "[", "'context_lens'", "]", ")", "\n", "y1", "=", "Variable", "(", "data", "[", "'y1'", "]", ")", "\n", "y2", "=", "Variable", "(", "data", "[", "'y2'", "]", ")", "\n", "q_type", "=", "Variable", "(", "data", "[", "'q_type'", "]", ")", "\n", "is_support", "=", "Variable", "(", "data", "[", "'is_support'", "]", ")", "\n", "start_mapping", "=", "Variable", "(", "data", "[", "'start_mapping'", "]", ")", "\n", "end_mapping", "=", "Variable", "(", "data", "[", "'end_mapping'", "]", ")", "\n", "all_mapping", "=", "Variable", "(", "data", "[", "'all_mapping'", "]", ")", "\n", "#", "\n", "subject_y1", "=", "Variable", "(", "data", "[", "'subject_y1'", "]", ")", "\n", "subject_y2", "=", "Variable", "(", "data", "[", "'subject_y2'", "]", ")", "\n", "object_y1", "=", "Variable", "(", "data", "[", "'object_y1'", "]", ")", "\n", "object_y2", "=", "Variable", "(", "data", "[", "'object_y2'", "]", ")", "\n", "relations", "=", "Variable", "(", "data", "[", "'relations'", "]", ")", "\n", "# ", "\n", "#", "\n", "model_results", "=", "model", "(", "context_idxs", ",", "ques_idxs", ",", "context_char_idxs", ",", "ques_char_idxs", ",", "relations", ",", "context_lens", ",", "start_mapping", ",", "end_mapping", ",", "all_mapping", ",", "return_yp", "=", "False", ")", "\n", "# ", "\n", "(", "logit1", ",", "logit2", ",", "predict_type", ",", "predict_support", ",", "logit_subject_start", ",", "logit_subject_end", ",", "logit_object_start", ",", "logit_object_end", ",", "k_relations", ",", "loss_relation", ")", "=", "model_results", "\n", "loss_1", "=", "(", "nll_sum", "(", "predict_type", ",", "q_type", ")", "+", "nll_sum", "(", "logit1", ",", "y1", ")", "+", "nll_sum", "(", "logit2", ",", "y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "loss_2", "=", "nll_average", "(", "predict_support", ".", "view", "(", "-", "1", ",", "2", ")", ",", "is_support", ".", "view", "(", "-", "1", ")", ")", "\n", "loss_3_r", "=", "torch", ".", "sum", "(", "loss_relation", ")", "\n", "loss_3_s", "=", "(", "nll_sum", "(", "logit_subject_start", ",", "subject_y1", ")", "+", "nll_sum", "(", "logit_subject_end", ",", "subject_y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "loss_3_o", "=", "(", "nll_sum", "(", "logit_object_start", ",", "object_y1", ")", "+", "nll_sum", "(", "logit_object_end", ",", "object_y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "# ", "\n", "loss", "=", "loss_1", "+", "config", ".", "sp_lambda", "*", "loss_2", "+", "config", ".", "evi_lambda", "*", "(", "loss_3_s", "+", "loss_3_r", "+", "loss_3_o", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "# total_loss += loss.data[0]", "\n", "global_step", "+=", "1", "\n", "\n", "if", "global_step", "%", "config", ".", "period", "==", "0", ":", "\n", "                ", "cur_loss", "=", "total_loss", "/", "config", ".", "period", "\n", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "logging", "(", "'| epoch {:3d} | step {:6d} | lr {:05.5f} | ms/batch {:5.2f} | train loss {:8.3f}'", ".", "format", "(", "epoch", ",", "global_step", ",", "lr", ",", "elapsed", "*", "1000", "/", "config", ".", "period", ",", "cur_loss", ")", ")", "\n", "total_loss", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "if", "global_step", "%", "config", ".", "checkpoint", "==", "0", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "metrics", "=", "evaluate_batch", "(", "build_dev_iterator", "(", ")", ",", "model", ",", "0", ",", "dev_eval_file", ",", "config", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "logging", "(", "'-'", "*", "89", ")", "\n", "logging", "(", "'| eval {:6d} in epoch {:3d} | time: {:5.2f}s | dev loss {:8.3f} | EM {:.4f} | F1 {:.4f}'", ".", "format", "(", "global_step", "//", "config", ".", "checkpoint", ",", "\n", "epoch", ",", "time", ".", "time", "(", ")", "-", "eval_start_time", ",", "metrics", "[", "'loss'", "]", ",", "metrics", "[", "'exact_match'", "]", ",", "metrics", "[", "'f1'", "]", ")", ")", "\n", "logging", "(", "'-'", "*", "89", ")", "\n", "\n", "eval_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "dev_F1", "=", "metrics", "[", "'f1'", "]", "\n", "if", "best_dev_F1", "is", "None", "or", "dev_F1", ">", "best_dev_F1", ":", "\n", "                    ", "best_dev_F1", "=", "dev_F1", "\n", "torch", ".", "save", "(", "ori_model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "config", ".", "save", ",", "'model.pt'", ")", ")", "\n", "cur_patience", "=", "0", "\n", "", "else", ":", "\n", "                    ", "cur_patience", "+=", "1", "\n", "if", "cur_patience", ">=", "config", ".", "patience", ":", "\n", "                        ", "lr", "/=", "2.0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "if", "lr", "<", "config", ".", "init_lr", "*", "1e-2", ":", "\n", "                            ", "stop_train", "=", "True", "\n", "break", "\n", "", "cur_patience", "=", "0", "\n", "", "", "", "", "if", "stop_train", ":", "break", "\n", "", "logging", "(", "'best_dev_F1 {}'", ".", "format", "(", "best_dev_F1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.evaluate_batch": [[180, 232], ["enumerate", "util.evaluate", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model", "nll_average", "torch.sum", "util.convert_tokens", "answer_dict.update", "loss.item", "torch.autograd.Variable.size", "predict_support.view", "torch.autograd.Variable.view", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "yp1.data.cpu().numpy().tolist", "yp2.data.cpu().numpy().tolist", "numpy.argmax", "nll_sum", "nll_sum", "nll_sum", "nll_sum", "nll_sum", "predict_type.data.cpu().numpy", "nll_sum", "nll_sum", "yp1.data.cpu().numpy", "yp2.data.cpu().numpy", "predict_type.data.cpu", "yp1.data.cpu", "yp2.data.cpu"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.evaluate", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.convert_tokens"], ["", "def", "evaluate_batch", "(", "data_source", ",", "model", ",", "max_batches", ",", "eval_file", ",", "config", ")", ":", "\n", "    ", "answer_dict", "=", "{", "}", "\n", "sp_dict", "=", "{", "}", "\n", "total_loss", ",", "step_cnt", "=", "0", ",", "0", "\n", "iter", "=", "data_source", "\n", "for", "step", ",", "data", "in", "enumerate", "(", "iter", ")", ":", "\n", "        ", "if", "step", ">=", "max_batches", "and", "max_batches", ">", "0", ":", "break", "\n", "\n", "context_idxs", "=", "Variable", "(", "data", "[", "'context_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "ques_idxs", "=", "Variable", "(", "data", "[", "'ques_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "context_char_idxs", "=", "Variable", "(", "data", "[", "'context_char_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "ques_char_idxs", "=", "Variable", "(", "data", "[", "'ques_char_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "context_lens", "=", "Variable", "(", "data", "[", "'context_lens'", "]", ",", "volatile", "=", "True", ")", "\n", "y1", "=", "Variable", "(", "data", "[", "'y1'", "]", ",", "volatile", "=", "True", ")", "\n", "y2", "=", "Variable", "(", "data", "[", "'y2'", "]", ",", "volatile", "=", "True", ")", "\n", "q_type", "=", "Variable", "(", "data", "[", "'q_type'", "]", ",", "volatile", "=", "True", ")", "\n", "is_support", "=", "Variable", "(", "data", "[", "'is_support'", "]", ",", "volatile", "=", "True", ")", "\n", "start_mapping", "=", "Variable", "(", "data", "[", "'start_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "end_mapping", "=", "Variable", "(", "data", "[", "'end_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "all_mapping", "=", "Variable", "(", "data", "[", "'all_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "#", "\n", "subject_y1", "=", "Variable", "(", "data", "[", "'subject_y1'", "]", ")", "\n", "subject_y2", "=", "Variable", "(", "data", "[", "'subject_y2'", "]", ")", "\n", "object_y1", "=", "Variable", "(", "data", "[", "'object_y1'", "]", ")", "\n", "object_y2", "=", "Variable", "(", "data", "[", "'object_y2'", "]", ")", "\n", "relations", "=", "Variable", "(", "data", "[", "'relations'", "]", ")", "\n", "# ", "\n", "# ", "\n", "model_results", "=", "model", "(", "context_idxs", ",", "ques_idxs", ",", "context_char_idxs", ",", "ques_char_idxs", ",", "relations", ",", "context_lens", ",", "start_mapping", ",", "end_mapping", ",", "all_mapping", ",", "return_yp", "=", "True", ")", "\n", "\n", "(", "logit1", ",", "logit2", ",", "predict_type", ",", "predict_support", ",", "logit_subject_start", ",", "logit_subject_end", ",", "logit_object_start", ",", "logit_object_end", ",", "k_relations", ",", "loss_relation", ",", "yp1", ",", "yp2", ",", "sy1", ",", "sy2", ",", "oy1", ",", "oy2", ")", "=", "model_results", "\n", "loss_1", "=", "(", "nll_sum", "(", "predict_type", ",", "q_type", ")", "+", "nll_sum", "(", "logit1", ",", "y1", ")", "+", "nll_sum", "(", "logit2", ",", "y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "loss_2", "=", "nll_average", "(", "predict_support", ".", "view", "(", "-", "1", ",", "2", ")", ",", "is_support", ".", "view", "(", "-", "1", ")", ")", "\n", "loss_3_r", "=", "torch", ".", "sum", "(", "loss_relation", ")", "\n", "loss_3_s", "=", "(", "nll_sum", "(", "logit_subject_start", ",", "subject_y1", ")", "+", "nll_sum", "(", "logit_subject_end", ",", "subject_y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "loss_3_o", "=", "(", "nll_sum", "(", "logit_object_start", ",", "object_y1", ")", "+", "nll_sum", "(", "logit_object_end", ",", "object_y2", ")", ")", "/", "context_idxs", ".", "size", "(", "0", ")", "\n", "\n", "loss", "=", "loss_1", "+", "config", ".", "sp_lambda", "*", "loss_2", "+", "config", ".", "evi_lambda", "*", "(", "loss_3_s", "+", "loss_3_r", "+", "loss_3_o", ")", "\n", "\n", "\n", "answer_dict_", "=", "convert_tokens", "(", "eval_file", ",", "data", "[", "'ids'", "]", ",", "yp1", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "yp2", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "np", ".", "argmax", "(", "predict_type", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "1", ")", ")", "\n", "answer_dict", ".", "update", "(", "answer_dict_", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "# total_loss += loss.data[0]", "\n", "step_cnt", "+=", "1", "\n", "", "loss", "=", "total_loss", "/", "step_cnt", "\n", "metrics", "=", "evaluate", "(", "eval_file", ",", "answer_dict", ")", "\n", "metrics", "[", "'loss'", "]", "=", "loss", "\n", "\n", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.predict": [[234, 305], ["enumerate", "tqdm.tqdm", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model", "util.convert_tokens", "answer_dict.update", "torch.sigmoid().data.cpu().numpy", "range", "range", "open", "ujson.dump", "yp1.data.cpu().numpy().tolist", "yp2.data.cpu().numpy().tolist", "numpy.argmax", "range", "sp_dict.update", "_.data.cpu().numpy", "_.data.cpu().numpy", "_.data.cpu().numpy", "_.data.cpu().numpy", "range", "evidence_dict.update", "predict_type.data.cpu().numpy", "torch.sigmoid().data.cpu", "yp1.data.cpu().numpy", "yp2.data.cpu().numpy", "len", "cur_sp_pred.append", "_.data.cpu", "_.data.cpu", "_.data.cpu", "_.data.cpu", "tuples.append", "predict_type.data.cpu", "yp1.data.cpu", "yp2.data.cpu", "torch.sigmoid", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.convert_tokens"], ["", "def", "predict", "(", "data_source", ",", "model", ",", "eval_file", ",", "config", ",", "prediction_file", ",", "idx2relation_dict", ")", ":", "\n", "    ", "answer_dict", "=", "{", "}", "\n", "sp_dict", "=", "{", "}", "\n", "evidence_dict", "=", "{", "}", "\n", "sp_th", "=", "config", ".", "sp_threshold", "\n", "for", "step", ",", "data", "in", "enumerate", "(", "tqdm", "(", "data_source", ")", ")", ":", "\n", "        ", "context_idxs", "=", "Variable", "(", "data", "[", "'context_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "ques_idxs", "=", "Variable", "(", "data", "[", "'ques_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "context_char_idxs", "=", "Variable", "(", "data", "[", "'context_char_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "ques_char_idxs", "=", "Variable", "(", "data", "[", "'ques_char_idxs'", "]", ",", "volatile", "=", "True", ")", "\n", "context_lens", "=", "Variable", "(", "data", "[", "'context_lens'", "]", ",", "volatile", "=", "True", ")", "\n", "start_mapping", "=", "Variable", "(", "data", "[", "'start_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "end_mapping", "=", "Variable", "(", "data", "[", "'end_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "all_mapping", "=", "Variable", "(", "data", "[", "'all_mapping'", "]", ",", "volatile", "=", "True", ")", "\n", "#", "\n", "subject_y1", "=", "Variable", "(", "data", "[", "'subject_y1'", "]", ")", "# Size([24, 8])", "\n", "subject_y2", "=", "Variable", "(", "data", "[", "'subject_y2'", "]", ")", "\n", "object_y1", "=", "Variable", "(", "data", "[", "'object_y1'", "]", ")", "\n", "object_y2", "=", "Variable", "(", "data", "[", "'object_y2'", "]", ")", "\n", "relations", "=", "Variable", "(", "data", "[", "'relations'", "]", ")", "\n", "# ", "\n", "model_results", "=", "model", "(", "context_idxs", ",", "ques_idxs", ",", "context_char_idxs", ",", "ques_char_idxs", ",", "relations", ",", "context_lens", ",", "start_mapping", ",", "end_mapping", ",", "all_mapping", ",", "return_yp", "=", "True", ")", "\n", "\n", "(", "logit1", ",", "logit2", ",", "predict_type", ",", "predict_support", ",", "logit_subject_start", ",", "logit_subject_end", ",", "logit_object_start", ",", "logit_object_end", ",", "k_relations", ",", "loss_relation", ",", "yp1", ",", "yp2", ",", "sy1", ",", "sy2", ",", "oy1", ",", "oy2", ")", "=", "model_results", "\n", "\n", "answer_dict_", "=", "convert_tokens", "(", "eval_file", ",", "data", "[", "'ids'", "]", ",", "yp1", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "yp2", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "np", ".", "argmax", "(", "predict_type", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "1", ")", ")", "\n", "answer_dict", ".", "update", "(", "answer_dict_", ")", "\n", "# Sentence-level SPs", "\n", "predict_support_np", "=", "torch", ".", "sigmoid", "(", "predict_support", "[", ":", ",", ":", ",", "1", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (24, 81)", "\n", "for", "i", "in", "range", "(", "predict_support_np", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cur_sp_pred", "=", "[", "]", "\n", "cur_id", "=", "data", "[", "'ids'", "]", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "predict_support_np", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "j", ">=", "len", "(", "eval_file", "[", "cur_id", "]", "[", "'sent2title_ids'", "]", ")", ":", "break", "\n", "if", "predict_support_np", "[", "i", ",", "j", "]", ">", "sp_th", ":", "\n", "                    ", "cur_sp_pred", ".", "append", "(", "eval_file", "[", "cur_id", "]", "[", "'sent2title_ids'", "]", "[", "j", "]", ")", "\n", "", "", "sp_dict", ".", "update", "(", "{", "cur_id", ":", "cur_sp_pred", "}", ")", "\n", "# Evidence", "\n", "", "sy1", "=", "[", "_", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "_", "in", "sy1", "]", "# int matrix ", "\n", "sy2", "=", "[", "_", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "_", "in", "sy2", "]", "# int matrix ", "\n", "oy1", "=", "[", "_", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "_", "in", "oy1", "]", "# int matrix ", "\n", "oy2", "=", "[", "_", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "_", "in", "oy2", "]", "# int matrix ", "\n", "\n", "for", "i", "in", "range", "(", "k_relations", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cur_evi_pred", "=", "[", "]", "\n", "cur_id", "=", "data", "[", "'ids'", "]", "[", "i", "]", "\n", "tuples", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "k_relations", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "k_relations", "[", "i", ",", "j", "]", "==", "1", ":", "\n", "                    ", "relation", "=", "idx2relation_dict", "[", "str", "(", "j", ")", "]", "\n", "# get subject", "\n", "context", "=", "eval_file", "[", "str", "(", "cur_id", ")", "]", "[", "\"context\"", "]", "\n", "spans", "=", "eval_file", "[", "str", "(", "cur_id", ")", "]", "[", "\"spans\"", "]", "\n", "# ", "\n", "s_start", "=", "sy1", "[", "j", "]", "[", "i", "]", "\n", "s_end", "=", "sy2", "[", "j", "]", "[", "i", "]", "\n", "#", "\n", "start_idx", "=", "spans", "[", "s_start", "]", "[", "0", "]", "\n", "end_idx", "=", "spans", "[", "s_end", "]", "[", "1", "]", "\n", "subject", "=", "context", "[", "start_idx", ":", "end_idx", "]", "\n", "# get object", "\n", "object_start_idx", "=", "spans", "[", "oy1", "[", "j", "]", "[", "i", "]", "]", "[", "0", "]", "\n", "object_end_idx", "=", "spans", "[", "oy2", "[", "j", "]", "[", "i", "]", "]", "[", "1", "]", "\n", "# ", "\n", "object_", "=", "context", "[", "object_start_idx", ":", "object_end_idx", "]", "\n", "tuples", ".", "append", "(", "(", "subject", ",", "relation", ",", "object_", ")", ")", "\n", "", "", "evidence_dict", ".", "update", "(", "{", "cur_id", ":", "tuples", "}", ")", "\n", "\n", "", "", "prediction", "=", "{", "'answer'", ":", "answer_dict", ",", "'sp'", ":", "sp_dict", ",", "'evidence'", ":", "evidence_dict", "}", "\n", "with", "open", "(", "prediction_file", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "prediction", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.test": [[307, 359], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "model.Model", "nn.DataParallel.cuda", "model.cuda.load_state_dict", "torch.nn.DataParallel", "nn.DataParallel.eval", "run.predict", "open", "numpy.array", "open", "numpy.array", "open", "ujson.load", "open", "numpy.array", "open", "ujson.load", "util.get_buckets", "util.DataIterator", "torch.load", "run.train.build_dev_iterator"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.None.2wikimultihop_evaluate.eval", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.run.predict", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.get_buckets"], ["", "", "def", "test", "(", "config", ")", ":", "\n", "    ", "with", "open", "(", "config", ".", "word_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "word_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "with", "open", "(", "config", ".", "char_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "char_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "if", "config", ".", "data_split", "==", "'dev'", ":", "\n", "        ", "with", "open", "(", "config", ".", "dev_eval_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "            ", "dev_eval_file", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "", "else", ":", "\n", "        ", "with", "open", "(", "config", ".", "test_eval_file", ",", "'r'", ")", "as", "fh", ":", "\n", "            ", "dev_eval_file", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "", "with", "open", "(", "config", ".", "idx2word_file", ",", "'r'", ")", "as", "fh", ":", "\n", "        ", "idx2word_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "", "with", "open", "(", "config", ".", "relation_emb_file", ",", "\"r\"", ")", "as", "fh", ":", "\n", "        ", "relation_mat", "=", "np", ".", "array", "(", "json", ".", "load", "(", "fh", ")", ",", "dtype", "=", "np", ".", "float32", ")", "# (20, 100)", "\n", "", "with", "open", "(", "config", ".", "idx2relation_file", ",", "'r'", ")", "as", "fh", ":", "\n", "        ", "idx2relation_dict", "=", "json", ".", "load", "(", "fh", ")", "\n", "\n", "", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "config", ".", "seed", ")", "\n", "\n", "def", "logging", "(", "s", ",", "print_", "=", "True", ",", "log_", "=", "True", ")", ":", "\n", "        ", "if", "print_", ":", "\n", "            ", "print", "(", "s", ")", "\n", "", "if", "log_", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "config", ".", "save", ",", "'log.txt'", ")", ",", "'a+'", ")", "as", "f_log", ":", "\n", "                ", "f_log", ".", "write", "(", "s", "+", "'\\n'", ")", "\n", "\n", "", "", "", "if", "config", ".", "data_split", "==", "'dev'", ":", "\n", "        ", "dev_buckets", "=", "get_buckets", "(", "config", ".", "dev_record_file", ")", "\n", "para_limit", "=", "config", ".", "para_limit", "\n", "ques_limit", "=", "config", ".", "ques_limit", "\n", "", "elif", "config", ".", "data_split", "==", "'test'", ":", "\n", "        ", "para_limit", "=", "None", "\n", "ques_limit", "=", "None", "\n", "dev_buckets", "=", "get_buckets", "(", "config", ".", "test_record_file", ")", "\n", "\n", "", "def", "build_dev_iterator", "(", ")", ":", "\n", "        ", "return", "DataIterator", "(", "dev_buckets", ",", "config", ".", "batch_size", ",", "para_limit", ",", "\n", "ques_limit", ",", "config", ".", "char_limit", ",", "False", ",", "config", ".", "sent_limit", ",", "\n", "config", ".", "num_relations", ")", "\n", "\n", "", "model", "=", "Model", "(", "config", ",", "word_mat", ",", "char_mat", ",", "relation_mat", ")", "\n", "\n", "ori_model", "=", "model", ".", "cuda", "(", ")", "\n", "ori_model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "config", ".", "save", ",", "'model.pt'", ")", ")", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "ori_model", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "predict", "(", "build_dev_iterator", "(", ")", ",", "model", ",", "dev_eval_file", ",", "config", ",", "config", ".", "prediction_file", ",", "idx2relation_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__init__": [[31, 56], ["len", "range", "range", "random.shuffle", "range", "max", "max", "len", "dp[].size", "dp[].size"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "buckets", ",", "bsz", ",", "para_limit", ",", "ques_limit", ",", "char_limit", ",", "shuffle", ",", "sent_limit", ",", "num_relations", ")", ":", "\n", "        ", "self", ".", "buckets", "=", "buckets", "\n", "self", ".", "bsz", "=", "bsz", "\n", "if", "para_limit", "is", "not", "None", "and", "ques_limit", "is", "not", "None", ":", "\n", "            ", "self", ".", "para_limit", "=", "para_limit", "\n", "self", ".", "ques_limit", "=", "ques_limit", "\n", "", "else", ":", "\n", "            ", "para_limit", ",", "ques_limit", "=", "0", ",", "0", "\n", "for", "bucket", "in", "buckets", ":", "\n", "                ", "for", "dp", "in", "bucket", ":", "\n", "                    ", "para_limit", "=", "max", "(", "para_limit", ",", "dp", "[", "'context_idxs'", "]", ".", "size", "(", "0", ")", ")", "\n", "ques_limit", "=", "max", "(", "ques_limit", ",", "dp", "[", "'ques_idxs'", "]", ".", "size", "(", "0", ")", ")", "\n", "", "", "self", ".", "para_limit", ",", "self", ".", "ques_limit", "=", "para_limit", ",", "ques_limit", "\n", "", "self", ".", "char_limit", "=", "char_limit", "\n", "self", ".", "sent_limit", "=", "sent_limit", "\n", "#", "\n", "self", ".", "num_relations", "=", "num_relations", "\n", "#", "\n", "self", ".", "num_buckets", "=", "len", "(", "self", ".", "buckets", ")", "\n", "self", ".", "bkt_pool", "=", "[", "i", "for", "i", "in", "range", "(", "self", ".", "num_buckets", ")", "if", "len", "(", "self", ".", "buckets", "[", "i", "]", ")", ">", "0", "]", "\n", "if", "shuffle", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "num_buckets", ")", ":", "\n", "                ", "random", ".", "shuffle", "(", "self", ".", "buckets", "[", "i", "]", ")", "\n", "", "", "self", ".", "bkt_ptrs", "=", "[", "0", "for", "i", "in", "range", "(", "self", ".", "num_buckets", ")", "]", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.DataIterator.__iter__": [[57, 169], ["torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "min", "cur_batch.sort", "torch.LongTensor().cuda.fill_", "range", "int", "int", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "len", "random.choice", "mapping.zero_", "len", "context_idxs[].copy_", "ques_idxs[].copy_", "context_char_idxs[].copy_", "ques_char_idxs[].copy_", "subject_y1[].copy_", "subject_y2[].copy_", "object_y1[].copy_", "object_y2[].copy_", "relations[].copy_", "ids.append", "enumerate", "max", "input_lengths.max", "len", "util.DataIterator.bkt_pool.remove", "len", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "len", "context_idxs[].contiguous", "ques_idxs[].contiguous", "context_char_idxs[].contiguous", "ques_char_idxs[].contiguous", "is_support[].contiguous", "len", "tuple", "tuple", "int"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "context_idxs", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "para_limit", ")", ".", "cuda", "(", ")", "\n", "ques_idxs", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "ques_limit", ")", ".", "cuda", "(", ")", "\n", "context_char_idxs", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "para_limit", ",", "self", ".", "char_limit", ")", ".", "cuda", "(", ")", "\n", "ques_char_idxs", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "ques_limit", ",", "self", ".", "char_limit", ")", ".", "cuda", "(", ")", "\n", "#", "\n", "#", "\n", "y1", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ")", ".", "cuda", "(", ")", "\n", "y2", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ")", ".", "cuda", "(", ")", "\n", "q_type", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ")", ".", "cuda", "(", ")", "\n", "start_mapping", "=", "torch", ".", "Tensor", "(", "self", ".", "bsz", ",", "self", ".", "para_limit", ",", "self", ".", "sent_limit", ")", ".", "cuda", "(", ")", "\n", "end_mapping", "=", "torch", ".", "Tensor", "(", "self", ".", "bsz", ",", "self", ".", "para_limit", ",", "self", ".", "sent_limit", ")", ".", "cuda", "(", ")", "\n", "all_mapping", "=", "torch", ".", "Tensor", "(", "self", ".", "bsz", ",", "self", ".", "para_limit", ",", "self", ".", "sent_limit", ")", ".", "cuda", "(", ")", "\n", "is_support", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "sent_limit", ")", ".", "cuda", "(", ")", "\n", "#", "\n", "subject_y1", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "num_relations", ")", ".", "cuda", "(", ")", "\n", "subject_y2", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "num_relations", ")", ".", "cuda", "(", ")", "\n", "object_y1", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "num_relations", ")", ".", "cuda", "(", ")", "\n", "object_y2", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "num_relations", ")", ".", "cuda", "(", ")", "\n", "relations", "=", "torch", ".", "LongTensor", "(", "self", ".", "bsz", ",", "self", ".", "num_relations", ")", ".", "cuda", "(", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "if", "len", "(", "self", ".", "bkt_pool", ")", "==", "0", ":", "break", "\n", "bkt_id", "=", "random", ".", "choice", "(", "self", ".", "bkt_pool", ")", "if", "self", ".", "shuffle", "else", "self", ".", "bkt_pool", "[", "0", "]", "\n", "start_id", "=", "self", ".", "bkt_ptrs", "[", "bkt_id", "]", "\n", "cur_bucket", "=", "self", ".", "buckets", "[", "bkt_id", "]", "\n", "cur_bsz", "=", "min", "(", "self", ".", "bsz", ",", "len", "(", "cur_bucket", ")", "-", "start_id", ")", "\n", "\n", "ids", "=", "[", "]", "\n", "\n", "cur_batch", "=", "cur_bucket", "[", "start_id", ":", "start_id", "+", "cur_bsz", "]", "\n", "cur_batch", ".", "sort", "(", "key", "=", "lambda", "x", ":", "(", "x", "[", "'context_idxs'", "]", ">", "0", ")", ".", "long", "(", ")", ".", "sum", "(", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "max_sent_cnt", "=", "0", "\n", "for", "mapping", "in", "[", "start_mapping", ",", "end_mapping", ",", "all_mapping", "]", ":", "\n", "                ", "mapping", ".", "zero_", "(", ")", "\n", "", "is_support", ".", "fill_", "(", "IGNORE_INDEX", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "cur_batch", ")", ")", ":", "\n", "                ", "context_idxs", "[", "i", "]", ".", "copy_", "(", "cur_batch", "[", "i", "]", "[", "'context_idxs'", "]", ")", "\n", "ques_idxs", "[", "i", "]", ".", "copy_", "(", "cur_batch", "[", "i", "]", "[", "'ques_idxs'", "]", ")", "\n", "context_char_idxs", "[", "i", "]", ".", "copy_", "(", "cur_batch", "[", "i", "]", "[", "'context_char_idxs'", "]", ")", "\n", "ques_char_idxs", "[", "i", "]", ".", "copy_", "(", "cur_batch", "[", "i", "]", "[", "'ques_char_idxs'", "]", ")", "\n", "#", "\n", "subject_y1", "[", "i", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "cur_batch", "[", "i", "]", "[", "'subject_y1'", "]", ")", ")", "\n", "subject_y2", "[", "i", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "cur_batch", "[", "i", "]", "[", "'subject_y2'", "]", ")", ")", "\n", "object_y1", "[", "i", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "cur_batch", "[", "i", "]", "[", "'object_y1'", "]", ")", ")", "\n", "object_y2", "[", "i", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "cur_batch", "[", "i", "]", "[", "'object_y2'", "]", ")", ")", "\n", "relations", "[", "i", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "cur_batch", "[", "i", "]", "[", "'relation_idxs'", "]", ")", ")", "\n", "#", "\n", "if", "cur_batch", "[", "i", "]", "[", "'y1'", "]", ">=", "0", ":", "\n", "                    ", "y1", "[", "i", "]", "=", "cur_batch", "[", "i", "]", "[", "'y1'", "]", "\n", "y2", "[", "i", "]", "=", "cur_batch", "[", "i", "]", "[", "'y2'", "]", "\n", "q_type", "[", "i", "]", "=", "0", "\n", "", "elif", "cur_batch", "[", "i", "]", "[", "'y1'", "]", "==", "-", "1", ":", "\n", "                    ", "y1", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "y2", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "q_type", "[", "i", "]", "=", "1", "\n", "", "elif", "cur_batch", "[", "i", "]", "[", "'y1'", "]", "==", "-", "2", ":", "\n", "                    ", "y1", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "y2", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "q_type", "[", "i", "]", "=", "2", "\n", "", "elif", "cur_batch", "[", "i", "]", "[", "'y1'", "]", "==", "-", "3", ":", "\n", "                    ", "y1", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "y2", "[", "i", "]", "=", "IGNORE_INDEX", "\n", "q_type", "[", "i", "]", "=", "3", "\n", "", "else", ":", "\n", "                    ", "assert", "False", "\n", "", "ids", ".", "append", "(", "cur_batch", "[", "i", "]", "[", "'id'", "]", ")", "\n", "\n", "for", "j", ",", "cur_sp_dp", "in", "enumerate", "(", "cur_batch", "[", "i", "]", "[", "'start_end_facts'", "]", ")", ":", "\n", "                    ", "if", "j", ">=", "self", ".", "sent_limit", ":", "break", "\n", "if", "len", "(", "cur_sp_dp", ")", "==", "3", ":", "\n", "                        ", "start", ",", "end", ",", "is_sp_flag", "=", "tuple", "(", "cur_sp_dp", ")", "\n", "", "else", ":", "\n", "                        ", "start", ",", "end", ",", "is_sp_flag", ",", "is_gold", "=", "tuple", "(", "cur_sp_dp", ")", "\n", "", "if", "start", "<", "end", ":", "\n", "                        ", "start_mapping", "[", "i", ",", "start", ",", "j", "]", "=", "1", "\n", "end_mapping", "[", "i", ",", "end", "-", "1", ",", "j", "]", "=", "1", "\n", "all_mapping", "[", "i", ",", "start", ":", "end", ",", "j", "]", "=", "1", "\n", "is_support", "[", "i", ",", "j", "]", "=", "int", "(", "is_sp_flag", ")", "\n", "\n", "", "", "max_sent_cnt", "=", "max", "(", "max_sent_cnt", ",", "len", "(", "cur_batch", "[", "i", "]", "[", "'start_end_facts'", "]", ")", ")", "\n", "\n", "", "input_lengths", "=", "(", "context_idxs", "[", ":", "cur_bsz", "]", ">", "0", ")", ".", "long", "(", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "max_c_len", "=", "int", "(", "input_lengths", ".", "max", "(", ")", ")", "\n", "max_q_len", "=", "int", "(", "(", "ques_idxs", "[", ":", "cur_bsz", "]", ">", "0", ")", ".", "long", "(", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "max", "(", ")", ")", "\n", "\n", "self", ".", "bkt_ptrs", "[", "bkt_id", "]", "+=", "cur_bsz", "\n", "if", "self", ".", "bkt_ptrs", "[", "bkt_id", "]", ">=", "len", "(", "cur_bucket", ")", ":", "\n", "                ", "self", ".", "bkt_pool", ".", "remove", "(", "bkt_id", ")", "\n", "\n", "", "yield", "{", "'context_idxs'", ":", "context_idxs", "[", ":", "cur_bsz", ",", ":", "max_c_len", "]", ".", "contiguous", "(", ")", ",", "\n", "'ques_idxs'", ":", "ques_idxs", "[", ":", "cur_bsz", ",", ":", "max_q_len", "]", ".", "contiguous", "(", ")", ",", "\n", "'context_char_idxs'", ":", "context_char_idxs", "[", ":", "cur_bsz", ",", ":", "max_c_len", "]", ".", "contiguous", "(", ")", ",", "\n", "'ques_char_idxs'", ":", "ques_char_idxs", "[", ":", "cur_bsz", ",", ":", "max_q_len", "]", ".", "contiguous", "(", ")", ",", "\n", "#", "\n", "'subject_y1'", ":", "subject_y1", "[", ":", "cur_bsz", "]", ",", "\n", "'subject_y2'", ":", "subject_y2", "[", ":", "cur_bsz", "]", ",", "\n", "'object_y1'", ":", "object_y1", "[", ":", "cur_bsz", "]", ",", "\n", "'object_y2'", ":", "object_y2", "[", ":", "cur_bsz", "]", ",", "\n", "'relations'", ":", "relations", "[", ":", "cur_bsz", "]", ",", "\n", "# ", "\n", "'context_lens'", ":", "input_lengths", ",", "\n", "'y1'", ":", "y1", "[", ":", "cur_bsz", "]", ",", "\n", "'y2'", ":", "y2", "[", ":", "cur_bsz", "]", ",", "\n", "'ids'", ":", "ids", ",", "\n", "'q_type'", ":", "q_type", "[", ":", "cur_bsz", "]", ",", "\n", "'is_support'", ":", "is_support", "[", ":", "cur_bsz", ",", ":", "max_sent_cnt", "]", ".", "contiguous", "(", ")", ",", "\n", "'start_mapping'", ":", "start_mapping", "[", ":", "cur_bsz", ",", ":", "max_c_len", ",", ":", "max_sent_cnt", "]", ",", "\n", "'end_mapping'", ":", "end_mapping", "[", ":", "cur_bsz", ",", ":", "max_c_len", ",", ":", "max_sent_cnt", "]", ",", "\n", "'all_mapping'", ":", "all_mapping", "[", ":", "cur_bsz", ",", ":", "max_c_len", ",", ":", "max_sent_cnt", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.has_digit": [[22, 24], ["RE_D.search"], "function", ["None"], ["def", "has_digit", "(", "string", ")", ":", "\n", "    ", "return", "RE_D", ".", "search", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.prepro": [[26, 28], ["util.has_digit"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.has_digit"], ["", "def", "prepro", "(", "token", ")", ":", "\n", "    ", "return", "token", "if", "not", "has_digit", "(", "token", ")", "else", "'N'", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.get_buckets": [[171, 175], ["torch.load"], "function", ["None"], ["", "", "", "def", "get_buckets", "(", "record_file", ")", ":", "\n", "# datapoints = pickle.load(open(record_file, 'rb'))", "\n", "    ", "datapoints", "=", "torch", ".", "load", "(", "record_file", ")", "\n", "return", "[", "datapoints", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.convert_tokens": [[177, 195], ["zip", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "convert_tokens", "(", "eval_file", ",", "qa_id", ",", "pp1", ",", "pp2", ",", "p_type", ")", ":", "\n", "    ", "answer_dict", "=", "{", "}", "\n", "for", "qid", ",", "p1", ",", "p2", ",", "type", "in", "zip", "(", "qa_id", ",", "pp1", ",", "pp2", ",", "p_type", ")", ":", "\n", "        ", "if", "type", "==", "0", ":", "\n", "            ", "context", "=", "eval_file", "[", "str", "(", "qid", ")", "]", "[", "\"context\"", "]", "\n", "spans", "=", "eval_file", "[", "str", "(", "qid", ")", "]", "[", "\"spans\"", "]", "\n", "start_idx", "=", "spans", "[", "p1", "]", "[", "0", "]", "\n", "end_idx", "=", "spans", "[", "p2", "]", "[", "1", "]", "\n", "answer_dict", "[", "str", "(", "qid", ")", "]", "=", "context", "[", "start_idx", ":", "end_idx", "]", "\n", "", "elif", "type", "==", "1", ":", "\n", "            ", "answer_dict", "[", "str", "(", "qid", ")", "]", "=", "'yes'", "\n", "", "elif", "type", "==", "2", ":", "\n", "            ", "answer_dict", "[", "str", "(", "qid", ")", "]", "=", "'no'", "\n", "", "elif", "type", "==", "3", ":", "\n", "            ", "answer_dict", "[", "str", "(", "qid", ")", "]", "=", "'noanswer'", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "", "", "return", "answer_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.evaluate": [[197, 213], ["answer_dict.items", "util.exact_match_score", "util.f1_score", "len"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.exact_match_score", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.f1_score"], ["", "def", "evaluate", "(", "eval_file", ",", "answer_dict", ")", ":", "\n", "    ", "f1", "=", "exact_match", "=", "total", "=", "0", "\n", "for", "key", ",", "value", "in", "answer_dict", ".", "items", "(", ")", ":", "\n", "        ", "total", "+=", "1", "\n", "ground_truths", "=", "eval_file", "[", "key", "]", "[", "\"answer\"", "]", "\n", "prediction", "=", "value", "\n", "assert", "len", "(", "ground_truths", ")", "==", "1", "\n", "cur_EM", "=", "exact_match_score", "(", "prediction", ",", "ground_truths", "[", "0", "]", ")", "\n", "cur_f1", ",", "_", ",", "_", "=", "f1_score", "(", "prediction", ",", "ground_truths", "[", "0", "]", ")", "\n", "exact_match", "+=", "cur_EM", "\n", "f1", "+=", "cur_f1", "\n", "\n", "", "exact_match", "=", "100.0", "*", "exact_match", "/", "total", "\n", "f1", "=", "100.0", "*", "f1", "/", "total", "\n", "\n", "return", "{", "'exact_match'", ":", "exact_match", ",", "'f1'", ":", "f1", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer": [[215, 231], ["util.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_answer", "(", "s", ")", ":", "\n", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.f1_score": [[233, 254], ["util.normalize_answer", "util.normalize_answer", "normalize_answer.split", "normalize_answer.split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"], ["", "def", "f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "normalized_prediction", "=", "normalize_answer", "(", "prediction", ")", "\n", "normalized_ground_truth", "=", "normalize_answer", "(", "ground_truth", ")", "\n", "\n", "ZERO_METRIC", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "\n", "if", "normalized_prediction", "in", "[", "'yes'", ",", "'no'", ",", "'noanswer'", "]", "and", "normalized_prediction", "!=", "normalized_ground_truth", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "", "if", "normalized_ground_truth", "in", "[", "'yes'", ",", "'no'", ",", "'noanswer'", "]", "and", "normalized_prediction", "!=", "normalized_ground_truth", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "\n", "", "prediction_tokens", "=", "normalized_prediction", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalized_ground_truth", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "ZERO_METRIC", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", ",", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.exact_match_score": [[256, 258], ["util.normalize_answer", "util.normalize_answer"], "function", ["home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer", "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.normalize_answer"], ["", "def", "exact_match_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "return", "(", "normalize_answer", "(", "prediction", ")", "==", "normalize_answer", "(", "ground_truth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alab-NII_2wikimultihop.baseline_model.util.metric_max_over_ground_truths": [[260, 266], ["max", "metric_fn", "scores_for_ground_truths.append"], "function", ["None"], ["", "def", "metric_max_over_ground_truths", "(", "metric_fn", ",", "prediction", ",", "ground_truths", ")", ":", "\n", "    ", "scores_for_ground_truths", "=", "[", "]", "\n", "for", "ground_truth", "in", "ground_truths", ":", "\n", "        ", "score", "=", "metric_fn", "(", "prediction", ",", "ground_truth", ")", "\n", "scores_for_ground_truths", ".", "append", "(", "score", ")", "\n", "", "return", "max", "(", "scores_for_ground_truths", ")", "\n", "\n"]]}