{"home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.models.tafenet_default": [[5, 11], ["tafenet.TAFENet"], "function", ["None"], ["def", "tafenet_default", "(", "emb_dim", ",", "feat_dim", ",", "feature_in_dim", ",", "hidden_dim", ",", "**", "kwargs", ")", ":", "\n", "    ", "config", "=", "[", "2048", ",", "2048", ",", "2048", "]", "\n", "model", "=", "TAFENet", "(", "MetaLearner", ",", "config", ",", "feature_in_dim", "=", "feature_in_dim", ",", "\n", "input_dim", "=", "emb_dim", ",", "feat_dim", "=", "feat_dim", ",", "hidden_dim", "=", "hidden_dim", ",", "\n", "nhidden", "=", "3", ",", "return_emb", "=", "True", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.launch.parse_args": [[8, 16], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'name'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'configuration name defined in the checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'--path'", ",", "type", "=", "str", ",", "default", "=", "'configs.json'", ",", "\n", "help", "=", "'path to the configuration file'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.launch.execute": [[18, 27], ["launch.parse_args", "os.path.exists", "os.system", "open", "json.load", "cfg.items"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args"], ["", "def", "execute", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "assert", "exists", "(", "args", ".", "path", ")", ",", "'configuration file does not exist'", "\n", "with", "open", "(", "args", ".", "path", ",", "'r'", ")", "as", "fp", ":", "\n", "        ", "config", "=", "json", ".", "load", "(", "fp", ")", "\n", "assert", "args", ".", "name", "in", "config", ",", "'config name does not exist'", "\n", "cfg", "=", "config", "[", "args", ".", "name", "]", "\n", "cmd", "=", "' '", ".", "join", "(", "[", "' '", ".", "join", "(", "[", "k", ",", "v", "]", ")", "for", "k", ",", "v", "in", "cfg", ".", "items", "(", ")", "]", ")", "\n", "", "os", ".", "system", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.TAFENet.__init__": [[8, 33], ["torch.Module.__init__", "enumerate", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "tafenet.TAFENet._initialize_weights", "meta_learner", "setattr", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__init__", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.MetaLearner._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "meta_learner", ",", "config", ",", "feature_in_dim", ",", "feat_dim", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "TAFENet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "cin", "=", "feat_dim", "\n", "self", ".", "num_classes", "=", "1", "# use Sigmod logit", "\n", "in_dim", "=", "feature_in_dim", "\n", "\n", "# set up feature layers", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "config", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'linear_{}'", ".", "format", "(", "i", ")", ",", "\n", "nn", ".", "Linear", "(", "in_dim", ",", "config", "[", "i", "]", ",", "bias", "=", "True", ")", ")", "\n", "in_dim", "=", "config", "[", "i", "]", "\n", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.5", ",", "inplace", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# binary classifier (num_classes=1 with Sigmoid outputs)", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_dim", ",", "in_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "in_dim", ",", "self", ".", "num_classes", ")", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n", "# the meta-learner is initialized in a separate function.", "\n", "self", ".", "meta_learner", "=", "meta_learner", "(", "config", ",", "feat_dim", "=", "feat_dim", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.TAFENet._initialize_weights": [[34, 43], ["tafenet.TAFENet.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.001", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.TAFENet.forward": [[44, 67], ["tafenet.TAFENet.meta_learner", "range", "tafenet.TAFENet.relu", "tafenet.TAFENet.append", "tafenet.TAFENet.dropout", "tafenet.TAFENet.classifier", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "len", "len", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "getattr", "tafenet.TAFENet.relu", "len", "tafenet.TAFENet.clone", "len"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ",", "task_emb", ")", ":", "\n", "        ", "weights", "=", "self", ".", "meta_learner", "(", "task_emb", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "config", ")", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "'linear_{}'", ".", "format", "(", "i", ")", ")", "(", "x", ")", "\n", "weight", "=", "weights", "[", "i", "]", "\n", "\n", "# the weight factorization shown in equation (5)", "\n", "# the meta_learner only outputs task-specific weights", "\n", "x", "*=", "weight", "\n", "if", "i", "!=", "len", "(", "self", ".", "config", ")", "-", "1", ":", "\n", "                ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "", "", "assert", "len", "(", "weights", ")", "==", "len", "(", "self", ".", "config", ")", "+", "1", "\n", "# calculate the cosine_similarity between the task embedding", "\n", "# (putted it as the last element in weights) and TAFE", "\n", "dist", "=", "self", ".", "relu", "(", "F", ".", "cosine_similarity", "(", "weights", "[", "-", "1", "]", ",", "x", ".", "clone", "(", ")", ")", ")", "\n", "weights", ".", "append", "(", "dist", ")", "\n", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "out", "=", "self", ".", "classifier", "(", "x", ")", "\n", "\n", "out", "=", "torch", ".", "sigmoid", "(", "out", ")", "\n", "return", "out", ",", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.MetaLearner.__init__": [[70, 105], ["torch.Module.__init__", "range", "module_list.extend", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "enumerate", "tafenet.MetaLearner._initialize_weights", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "module_list.extend", "setattr", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__init__", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.MetaLearner._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "input_dim", ",", "hidden_dim", ",", "feat_dim", ",", "nhidden", "=", "3", ",", "\n", "return_emb", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MetaLearner", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "nhidden", "=", "nhidden", "\n", "self", ".", "return_emb", "=", "return_emb", "\n", "self", ".", "config", "=", "config", "# channel config of the primary network", "\n", "\n", "# task embedding network", "\n", "module_list", "=", "[", "nn", ".", "Linear", "(", "self", ".", "input_dim", ",", "self", ".", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "nhidden", "-", "2", ")", ":", "\n", "            ", "module_list", ".", "extend", "(", "[", "\n", "nn", ".", "Linear", "(", "self", ".", "hidden_dim", ",", "self", ".", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", ")", "\n", "\n", "", "module_list", ".", "extend", "(", "[", "\n", "nn", ".", "Linear", "(", "self", ".", "hidden_dim", ",", "self", ".", "feat_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", ")", "\n", "self", ".", "emb", "=", "nn", ".", "Sequential", "(", "*", "module_list", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", ")", "\n", "\n", "# gate output dim matches the feature layer size", "\n", "for", "i", ",", "cf", "in", "enumerate", "(", "config", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'generator_{}'", ".", "format", "(", "i", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "feat_dim", ",", "cf", ")", ")", "\n", "", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.MetaLearner._initialize_weights": [[106, 115], ["tafenet.MetaLearner.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.tafenet.MetaLearner.forward": [[116, 128], ["tafenet.MetaLearner.emb", "range", "len", "outputs.append", "outputs.append", "getattr"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "emb", "(", "x", ")", "\n", "outputs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "config", ")", ")", ":", "\n", "            ", "out", "=", "getattr", "(", "self", ",", "'generator_{}'", ".", "format", "(", "i", ")", ")", "(", "x", ")", "\n", "outputs", ".", "append", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "return_emb", ":", "\n", "# add the task embedding as the last output in order to calculate", "\n", "# the embedding loss more conveniently", "\n", "            ", "outputs", ".", "append", "(", "x", ")", "\n", "", "return", "outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.UnNormalizer.__init__": [[14, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.UnNormalizer.__call__": [[18, 23], ["range", "tensor.size", "zip", "t.mul_().add_", "t.mul_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "for", "b", "in", "range", "(", "tensor", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "tensor", "[", "b", "]", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ":", "\n", "                ", "t", ".", "mul_", "(", "s", ")", ".", "add_", "(", "m", ")", "\n", "", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.__init__": [[132, 134], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.reset": [[135, 140], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update": [[141, 146], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.chunks": [[25, 29], ["range", "len"], "function", ["None"], ["", "", "def", "chunks", "(", "l", ",", "n", ")", ":", "\n", "    ", "\"\"\"Yield successive n-sized chunks from l.\"\"\"", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "l", ")", ",", "n", ")", ":", "\n", "        ", "yield", "l", "[", "i", ":", "i", "+", "n", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.flatten": [[31, 33], ["list", "itertools.chain.from_iterable"], "function", ["None"], ["", "", "def", "flatten", "(", "l", ")", ":", "\n", "    ", "return", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "l", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.adjust_learning_rate_epoch": [[35, 62], ["print"], "function", ["None"], ["", "def", "adjust_learning_rate_epoch", "(", "args", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "if", "args", ".", "low", "<=", "epoch", "<=", "args", ".", "high", ":", "\n", "        ", "lr_new", "=", "args", ".", "lr", "*", "(", "args", ".", "step_ratio", "**", "1", ")", "\n", "lr_base", "=", "args", ".", "blr", "*", "(", "args", ".", "step_ratio", "**", "1", ")", "\n", "lr_emb", "=", "args", ".", "elr", "*", "(", "args", ".", "step_ratio", "**", "1", ")", "\n", "", "elif", "epoch", ">", "args", ".", "high", ":", "\n", "        ", "lr_new", "=", "args", ".", "lr", "*", "(", "args", ".", "step_ratio", "**", "2", ")", "\n", "lr_base", "=", "args", ".", "blr", "*", "(", "args", ".", "step_ratio", "**", "2", ")", "\n", "lr_emb", "=", "args", ".", "elr", "*", "(", "args", ".", "step_ratio", "**", "2", ")", "\n", "", "else", ":", "\n", "        ", "lr_new", "=", "args", ".", "lr", "\n", "lr_base", "=", "args", ".", "blr", "\n", "lr_emb", "=", "args", ".", "elr", "\n", "\n", "", "print", "(", "'Epoch [{}] new param learning rate is {}, '", "\n", "'base learning rate is {}, '", "\n", "'emb learning rate is {}'", ".", "format", "(", "epoch", ",", "lr_new", ",", "lr_base", ",", "lr_emb", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "if", "'name'", "in", "param_group", ":", "\n", "            ", "if", "param_group", "[", "'name'", "]", "==", "'embedding'", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr_emb", "\n", "", "elif", "param_group", "[", "'name'", "]", "==", "'feature'", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr_base", "\n", "", "else", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr_new", "\n", "", "", "else", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr_new", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_checkpoint": [[64, 71], ["torch.save", "os.path.dirname", "shutil.copyfile", "os.path.join"], "function", ["None"], ["", "", "", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "filename", "=", "'checkpoint.pth.tar'", ",", "\n", "prefix", "=", "'model'", ")", ":", "\n", "    ", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "save_path", "=", "os", ".", "path", ".", "dirname", "(", "filename", ")", "\n", "shutil", ".", "copyfile", "(", "\n", "filename", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "prefix", "+", "'_best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_args": [[73, 77], ["args._get_kwargs", "open", "json.dump", "os.path.join"], "function", ["None"], ["", "", "def", "save_args", "(", "args", ")", ":", "\n", "    ", "_dict", "=", "args", ".", "_get_kwargs", "(", ")", "\n", "with", "open", "(", "join", "(", "args", ".", "save_path", ",", "'arguments.json'", ")", ",", "'w'", ")", "as", "fp", ":", "\n", "        ", "json", ".", "dump", "(", "_dict", ",", "fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_code": [[79, 87], ["os.makedirs", "os.path.join", "glob.glob", "os.path.join", "shutil.copy", "glob.glob", "os.path.isfile", "os.path.basename", "glob.glob", "glob.glob"], "function", ["None"], ["", "", "def", "save_code", "(", "args", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "join", "(", "args", ".", "save_path", ",", "'code'", ")", ",", "exist_ok", "=", "True", ")", "\n", "for", "f", "in", "glob", ".", "glob", "(", "'./models/*.py'", ")", "+", "glob", ".", "glob", "(", "'./*'", ")", "+", "glob", ".", "glob", "(", "'./data/*.py'", ")", "+", "glob", ".", "glob", "(", "'./utils/*.py'", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "f", ")", ":", "\n", "            ", "continue", "\n", "", "tar", "=", "join", "(", "args", ".", "save_path", ",", "'code'", ",", "os", ".", "path", ".", "basename", "(", "f", ")", ")", "\n", "shutil", ".", "copy", "(", "f", ",", "tar", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.accuracy": [[89, 102], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.per_class_avg_accuracy": [[104, 127], ["max", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float", "range", "numpy.mean", "res.append", "target.view", "correct[].view", "correct_k[].sum().float", "pos_c.sum().float", "np.mean.append", "pdb.set_trace", "correct_k[].sum", "pos_c.sum"], "function", ["None"], ["", "def", "per_class_avg_accuracy", "(", "output", ",", "target", ",", "classes", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the averaged per-class accuracy for the prediction\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", "\n", "res_c", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "classes", ")", ":", "\n", "            ", "pos_c", "=", "target", "==", "c", "\n", "try", ":", "\n", "                ", "correct_k_c", "=", "correct_k", "[", "pos_c", "]", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "total_c", "=", "pos_c", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "", "except", ":", "\n", "                ", "pdb", ".", "set_trace", "(", ")", "\n", "", "if", "total_c", ">", "0", ":", "\n", "                ", "res_c", ".", "append", "(", "(", "correct_k_c", "/", "total_c", ")", ".", "item", "(", ")", ")", "\n", "", "", "res_c", "=", "np", ".", "mean", "(", "res_c", ")", "\n", "res", ".", "append", "(", "res_c", "*", "100", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.parse_args": [[16, 89], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "join", "os.makedirs", "join", "os.makedirs", "os.path.join", "save_args", "len", "os.listdir"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "'-a'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--config-name'", ",", "'-cfg'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'configuration name'", ")", "\n", "parser", ".", "add_argument", "(", "'--cmd'", ",", "choices", "=", "[", "'train'", ",", "'test'", "]", ",", "\n", "type", "=", "str", ",", "default", "=", "'train'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "help", "=", "'path to the checkpoint to begin with'", ")", "\n", "parser", ".", "add_argument", "(", "'--save-folder'", ",", "default", "=", "'compositional-zs/checkpoints'", ",", "\n", "type", "=", "str", ",", "help", "=", "'folder to save everything'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'mit-states'", ",", "\n", "choices", "=", "[", "'mit-states'", ",", "'stanfordvrd'", ",", "'ut-zap50k'", "]", ",", "\n", "help", "=", "'dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--data-root'", ",", "default", "=", "'data/compositional-zs'", ",", "\n", "type", "=", "str", ",", "help", "=", "'path to the data and split info'", ")", "\n", "parser", ".", "add_argument", "(", "'--feat-name'", ",", "type", "=", "str", ",", "default", "=", "'resnet101'", ",", "\n", "choices", "=", "[", "'resnet101'", ",", "'resnet50'", ",", "\n", "'dla34'", ",", "'dla102'", "]", ",", "\n", "help", "=", "'base feature architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--emb-dim'", ",", "type", "=", "int", ",", "default", "=", "600", ",", "\n", "help", "=", "'input dim of the embedding network, '", "\n", "'For MIT-States and UT-Zappos, '", "\n", "'the embedding dim is 600; for StanfordVRD,'", "\n", "'emb-dim is 900'", ")", "\n", "parser", ".", "add_argument", "(", "'--input-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'input image feature dimension'", ")", "\n", "parser", ".", "add_argument", "(", "'--feat-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'feature dimension.'", ")", "\n", "parser", ".", "add_argument", "(", "'--hidden-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'hidden unit size of the meta learner'", ")", "\n", "parser", ".", "add_argument", "(", "'--num-workers'", ",", "default", "=", "8", ",", "type", "=", "int", ",", "\n", "help", "=", "'number of workers'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval-every'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'evaluate every k epochs'", ")", "\n", "\n", "# training hyper-parameters", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "1e-4", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for new parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--elr'", ",", "default", "=", "1e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for embed parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--blr'", ",", "default", "=", "1e-4", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for base parameters '", ")", "\n", "parser", ".", "add_argument", "(", "'--low'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "\n", "help", "=", "'lower threshold'", ")", "\n", "parser", ".", "add_argument", "(", "'--high'", ",", "type", "=", "int", ",", "default", "=", "45", ",", "\n", "help", "=", "'high thresholds'", ")", "\n", "parser", ".", "add_argument", "(", "'--beta'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "\n", "help", "=", "'beta parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "'-b'", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "help", "=", "'starting epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "60", ",", "type", "=", "int", ",", "\n", "help", "=", "'total number of training epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--step-ratio'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "'step ratio'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "args", ".", "triple", "=", "True", "if", "args", ".", "dataset", "==", "'stanfordvrd'", "else", "False", "\n", "# save directory", "\n", "args", ".", "save_path", "=", "join", "(", "\n", "args", ".", "save_folder", ",", "args", ".", "dataset", ",", "args", ".", "arch", ",", "args", ".", "config_name", ")", "\n", "os", ".", "makedirs", "(", "args", ".", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "args", ".", "run_id", "=", "len", "(", "os", ".", "listdir", "(", "args", ".", "save_path", ")", ")", "+", "1", "\n", "args", ".", "save_path", "=", "join", "(", "args", ".", "save_path", ",", "'run_{}'", ".", "format", "(", "args", ".", "run_id", ")", ")", "\n", "\n", "os", ".", "makedirs", "(", "args", ".", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "args", ".", "logger_file", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_path", ",", "'log_{}.txt'", ".", "format", "(", "args", ".", "cmd", ")", ")", "\n", "save_args", "(", "args", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.main": [[91, 112], ["train_compose.parse_args", "logging.basicConfig", "logging.info", "logging.FileHandler", "logging.StreamHandler", "logging.info", "train_compose.run_training", "logging.info", "train_compose.test"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.run_training", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "args", ".", "logger_file", ",", "mode", "=", "'w'", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", "\n", "FORMAT", "=", "\"[%(asctime)-15s %(filename)s:%(lineno)d \"", "\"%(funcName)s] %(message)s\"", "\n", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "\n", "datefmt", "=", "'%m-%d-%y %H:%M'", ",", "\n", "format", "=", "FORMAT", ",", "\n", "handlers", "=", "handlers", ")", "\n", "\n", "logging", ".", "info", "(", "'Results will be saved to {}'", ".", "format", "(", "args", ".", "save_path", ")", ")", "\n", "if", "args", ".", "cmd", "==", "'train'", ":", "\n", "        ", "logging", ".", "info", "(", "'start training model {}'", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "run_training", "(", "args", ")", "\n", "", "elif", "args", ".", "cmd", "==", "'test'", ":", "\n", "        ", "logging", ".", "info", "(", "'start testing model {}'", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "test", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.run_training": [[114, 211], ["torch.nn.DataParallel.to", "torch.nn.DataParallel.named_parameters", "logging.info", "join", "compose_data.CompositionDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "compose_data.CompositionDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.BCELoss().to", "torch.MSELoss().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "logging.info", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "logging.info", "adjust_learning_rate_epoch", "train_compose.train", "emb_params.append", "torch.BCELoss", "torch.MSELoss", "train_compose.validate", "logging.info", "max", "os.path.join", "save_checkpoint", "gate_params.append", "logging.info", "classifier_params.append", "feat_params.append", "torch.nn.DataParallel.state_dict"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.adjust_learning_rate_epoch", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.train", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_checkpoint"], ["", "", "def", "run_training", "(", "args", ")", ":", "\n", "    ", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "args", ".", "emb_dim", ",", "args", ".", "feat_dim", ",", "\n", "args", ".", "input_dim", ",", "args", ".", "hidden_dim", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "device", "==", "'cuda'", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "", "feat_params", ",", "classifier_params", ",", "gate_params", ",", "emb_params", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "'emb'", "in", "n", ":", "\n", "            ", "emb_params", ".", "append", "(", "p", ")", "\n", "", "elif", "'gate'", "in", "n", ":", "\n", "            ", "gate_params", ".", "append", "(", "p", ")", "\n", "", "elif", "'classifier'", "in", "n", ":", "\n", "            ", "classifier_params", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "            ", "feat_params", ".", "append", "(", "p", ")", "\n", "\n", "", "", "param_group", "=", "[", "\n", "{", "'params'", ":", "emb_params", ",", "'name'", ":", "'embedding'", "}", ",", "\n", "{", "'params'", ":", "gate_params", ",", "'name'", ":", "'gate'", "}", ",", "\n", "{", "'params'", ":", "classifier_params", ",", "'name'", ":", "'classifier'", "}", ",", "\n", "{", "'params'", ":", "feat_params", ",", "'name'", ":", "'feature'", "}", "\n", "]", "\n", "\n", "best_prec1", ",", "best_prec2", ",", "best_prec3", "=", "0", ",", "0", ",", "0", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "logging", ".", "info", "(", "'=> loading checkpoint `{}`'", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "best_prec1", "=", "checkpoint", "[", "'best_prec1'", "]", "\n", "best_prec2", "=", "checkpoint", "[", "'best_prec2'", "]", "\n", "best_prec3", "=", "checkpoint", "[", "'best_prec3'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "'=> loaded checkpoint `{}` (epoch: {})'", ".", "format", "(", "\n", "args", ".", "resume", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "logging", ".", "info", "(", "'loading the {} dataset'", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "args", ".", "data_path", "=", "join", "(", "args", ".", "data_root", ",", "args", ".", "dataset", ")", "\n", "trainset", "=", "CompositionDataset", "(", "\n", "root", "=", "args", ".", "data_path", ",", "phase", "=", "'train'", ",", "triple", "=", "args", ".", "triple", ",", "\n", "feat", "=", "args", ".", "feat_name", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "# using the validation set", "\n", "testset", "=", "CompositionDataset", "(", "\n", "root", "=", "args", ".", "data_path", ",", "phase", "=", "'test'", ",", "triple", "=", "args", ".", "triple", ",", "\n", "feat", "=", "args", ".", "feat_name", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "32", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "criterion", "=", "nn", ".", "BCELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "args", ".", "criterion_dist", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "param_group", ",", "args", ".", "lr", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "adjust_learning_rate_epoch", "(", "args", ",", "optimizer", ",", "epoch", ")", "\n", "train", "(", "args", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_every", "==", "0", ":", "\n", "            ", "avg_ap", ",", "avg_prec1", ",", "avg_prec2", ",", "avg_prec3", "=", "validate", "(", "args", ",", "test_loader", ",", "model", ")", "\n", "logging", ".", "info", "(", "'Val: Epoch [{}] | ap = {:.4f} | prec@1 = {:.4f} | '", "\n", "'prec@2 = {:.4f} | prec@3 = {:.4f}'", ".", "format", "(", "\n", "epoch", ",", "avg_ap", ",", "avg_prec1", ",", "avg_prec2", ",", "avg_prec3", ")", ")", "\n", "\n", "# remember best prec@1 and save checkpoint", "\n", "is_best", "=", "avg_ap", ">", "best_prec1", "\n", "best_prec1", "=", "max", "(", "avg_ap", ",", "best_prec1", ")", "\n", "if", "is_best", ":", "\n", "                ", "logging", ".", "info", "(", "'Best so far at Epoch [{}], '", "\n", "'ap = {:.4f}\\t'", "\n", "'prec@1 = {:.4f}\\t'", "\n", "'prec@2 = {:.4f}\\t'", "\n", "'prec@3 = {:.4f}'", ".", "format", "(", "\n", "epoch", ",", "avg_ap", ",", "avg_prec1", ",", "avg_prec2", ",", "avg_prec3", ")", ")", "\n", "\n", "", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_path", ",", "'checkpoint_latest.pth.tar'", ")", "\n", "\n", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "arch", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "\"best_ap\"", ":", "best_prec1", ",", "\n", "'best_prec1'", ":", "avg_prec1", ",", "\n", "'best_prec2'", ":", "avg_prec2", ",", "\n", "'best_prec3'", ":", "avg_prec3", ",", "\n", "}", ",", "is_best", ",", "filename", "=", "checkpoint_path", ")", "\n", "\n", "", "", "logging", ".", "info", "(", "'*** Best ap = {:.3f}%'", ".", "format", "(", "best_prec1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.weighted_mse_loss": [[213, 215], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "weight.sum"], "function", ["None"], ["", "def", "weighted_mse_loss", "(", "input", ",", "target", ",", "weight", ")", ":", "\n", "    ", "return", "(", "torch", ".", "sum", "(", "weight", "*", "(", "input", "-", "target", ")", "**", "2", ",", "1", ")", "/", "weight", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.train": [[217, 291], ["AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "model.train", "time.time", "train_loader.dataset.embeddings.float().to", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "tqdm.tqdm", "enumerate", "train_loader.dataset.embeddings.float", "AverageMeter.update", "input.float().to.float().to", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "len", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "input.float().to.size", "input.float().to.unsqueeze().repeat().transpose", "input_rep.contiguous().view.contiguous().view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "task_emb.repeat.repeat", "model", "out.view.view", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "criterion", "decisions[].view", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "train_compose.weighted_mse_loss", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "AverageMeter.update", "time.time", "AverageMeter.update", "AverageMeter.update", "t.set_postfix", "t.update", "len", "torch.cat().to.append", "torch.cat().to.long().view", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "criterion.item", "weighted_mse_loss.item", "time.time", "input.float().to.float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "input.float().to.unsqueeze().repeat", "input_rep.contiguous().view.contiguous", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "time.time", "prec1.item", "prec2.item", "prec3.item", "logging.info", "torch.cat().to.long", "torch.zeros().to().scatter_.size", "input.float().to.unsqueeze", "j.item", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.train", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.weighted_mse_loss", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.accuracy", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update"], ["", "def", "train", "(", "args", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top2", "=", "AverageMeter", "(", ")", "\n", "top3", "=", "AverageMeter", "(", ")", "\n", "losses_dist", "=", "AverageMeter", "(", ")", "\n", "\n", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", ".", "train", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "all_embds", "=", "train_loader", ".", "dataset", ".", "embeddings", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "train_loader", ")", ",", "ascii", "=", "True", ",", "desc", "=", "'train'", ")", "as", "t", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "mtarget", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# re-batch every epoch, sort of the episode way of training", "\n", "input", "=", "input", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "unique_lab_batch", "=", "torch", ".", "unique", "(", "mtarget", ")", "\n", "nclass", "=", "len", "(", "unique_lab_batch", ")", "\n", "rebatch_target", "=", "[", "]", "\n", "for", "m", "in", "mtarget", ":", "\n", "                ", "rebatch_target", ".", "append", "(", "(", "m", "==", "unique_lab_batch", ")", ".", "nonzero", "(", ")", "[", "0", "]", ")", "\n", "", "rebatch_target", "=", "torch", ".", "cat", "(", "rebatch_target", ")", ".", "to", "(", "device", ")", "\n", "\n", "size", "=", "input", ".", "size", "(", ")", "\n", "input_rep", "=", "input", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "nclass", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "input_rep", "=", "input_rep", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "size", "[", "1", "]", ")", "\n", "\n", "# select all the embeddings used in the current batch", "\n", "task_emb", "=", "torch", ".", "stack", "(", "[", "all_embds", "[", "j", ".", "item", "(", ")", "]", "\n", "for", "j", "in", "unique_lab_batch", "]", ",", "0", ")", "\n", "# repeat the task embedding for the batch size", "\n", "task_emb", "=", "task_emb", ".", "repeat", "(", "size", "[", "0", "]", ",", "1", ")", "\n", "\n", "out", ",", "decisions", "=", "model", "(", "input_rep", ",", "task_emb", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "nclass", ")", "\n", "\n", "label_onehot", "=", "torch", ".", "zeros", "(", "size", "[", "0", "]", ",", "nclass", ")", ".", "to", "(", "device", ")", ".", "scatter_", "(", "\n", "1", ",", "rebatch_target", ".", "long", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "out", ",", "label_onehot", ")", "\n", "\n", "dist", "=", "decisions", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "nclass", ")", "\n", "weight", "=", "torch", ".", "ones", "(", "label_onehot", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "weight", "[", "label_onehot", "==", "1", "]", "=", "nclass", "-", "1", "\n", "loss_dist", "=", "weighted_mse_loss", "(", "dist", ",", "label_onehot", ",", "weight", ")", "\n", "loss", "+=", "args", ".", "beta", "*", "loss_dist", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "try", ":", "\n", "                ", "prec1", ",", "prec2", ",", "prec3", "=", "accuracy", "(", "out", ",", "rebatch_target", ",", "\n", "topk", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "top2", ".", "update", "(", "prec2", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "top3", ".", "update", "(", "prec3", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "", "except", ":", "\n", "                ", "logging", ".", "info", "(", "'not enough classes'", ")", "\n", "\n", "", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "losses_dist", ".", "update", "(", "loss_dist", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "\n", "t", ".", "set_postfix", "(", "loss", "=", "losses", ".", "avg", ",", "emb_loss", "=", "losses_dist", ".", "avg", ",", "\n", "top1", "=", "top1", ".", "avg", ",", "top2", "=", "top2", ".", "avg", ",", "top3", "=", "top3", ".", "avg", ")", "\n", "t", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.validate": [[293, 345], ["AverageMeter", "model.eval", "time.time", "len", "logging.info", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "test_loader.dataset.embeddings.float().to", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "test_loader.dataset.embeddings.float", "tqdm.tqdm", "enumerate", "input.size", "input.unsqueeze().repeat().transpose", "input_rep.contiguous().view.contiguous().view", "task_emb.repeat.repeat", "model", "out.view.view", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "per_class_avg_accuracy", "AverageMeter.update", "AverageMeter.update", "time.time", "t.set_postfix", "t.update", "len", "input.float().to", "mtarget.to", "prec1.item", "prec2.item", "prec3.item", "ap1.item", "input.unsqueeze().repeat", "input_rep.contiguous().view.contiguous", "time.time", "prec1.item", "prec2.item", "prec3.item", "input.float", "input.unsqueeze"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.accuracy", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.per_class_avg_accuracy", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update"], ["", "", "", "def", "validate", "(", "args", ",", "test_loader", ",", "model", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "\n", "ntasks", "=", "len", "(", "test_loader", ".", "dataset", ".", "test_pairs", ")", "\n", "logging", ".", "info", "(", "'Evaluation: {} novel tasks'", ".", "format", "(", "ntasks", ")", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top2", "=", "AverageMeter", "(", ")", "\n", "top3", "=", "AverageMeter", "(", ")", "\n", "AP1", "=", "AverageMeter", "(", ")", "\n", "\n", "# In CZSL, we only return embeddings of the unseen compositions", "\n", "all_embds", "=", "test_loader", ".", "dataset", ".", "embeddings", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "with", "tqdm", "(", "total", "=", "len", "(", "test_loader", ")", ",", "ascii", "=", "True", ",", "desc", "=", "'test'", ")", "as", "t", ":", "\n", "            ", "for", "i", ",", "(", "input", ",", "mtarget", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "                ", "input", ",", "mtarget", "=", "input", ".", "float", "(", ")", ".", "to", "(", "device", ")", ",", "mtarget", ".", "to", "(", "device", ")", "\n", "# concatenate the input and output", "\n", "task_emb", "=", "all_embds", "\n", "size", "=", "input", ".", "size", "(", ")", "\n", "\n", "input_rep", "=", "input", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "\n", "1", ",", "1", ",", "ntasks", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "input_rep", "=", "input_rep", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "size", "[", "1", "]", ")", "\n", "task_emb", "=", "task_emb", ".", "repeat", "(", "size", "[", "0", "]", ",", "1", ")", "\n", "out", ",", "decisions", "=", "model", "(", "input_rep", ",", "task_emb", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "ntasks", ")", "\n", "\n", "prec1", ",", "prec2", ",", "prec3", "=", "accuracy", "(", "out", ",", "mtarget", ",", "topk", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "top2", ".", "update", "(", "prec2", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "top3", ".", "update", "(", "prec3", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "\n", "ap1", ",", "=", "per_class_avg_accuracy", "(", "out", ",", "mtarget", ",", "ntasks", ",", "topk", "=", "(", "1", ",", ")", ")", "\n", "AP1", ".", "update", "(", "ap1", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "t", ".", "set_postfix", "(", "ap", "=", "ap1", ",", "prec1", "=", "prec1", ".", "item", "(", ")", ",", "prec2", "=", "prec2", ".", "item", "(", ")", ",", "\n", "prec3", "=", "prec3", ".", "item", "(", ")", ")", "\n", "t", ".", "update", "(", ")", "\n", "\n", "", "", "", "avg_prec1", "=", "top1", ".", "avg", "\n", "avg_prec2", "=", "top2", ".", "avg", "\n", "avg_prec3", "=", "top3", ".", "avg", "\n", "avg_ap", "=", "AP1", ".", "avg", "\n", "\n", "return", "avg_ap", ",", "avg_prec1", ",", "avg_prec2", ",", "avg_prec3", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.train_compose.test": [[347, 376], ["torch.nn.DataParallel().to.to", "join", "join", "compose_data.CompositionDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_compose.validate", "logging.info", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel().to.load_state_dict", "logging.info", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate"], ["", "def", "test", "(", "args", ")", ":", "\n", "# create model", "\n", "    ", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "args", ".", "emb_dim", ",", "args", ".", "feat_dim", ",", "\n", "args", ".", "input_dim", ",", "args", ".", "hidden_dim", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "device", "==", "'cuda'", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "if", "args", ".", "resume", ":", "\n", "        ", "logging", ".", "info", "(", "'=> loading checkpoint `{}`'", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "'=> loaded checkpoint `{}` (epoch: {})'", ".", "format", "(", "\n", "args", ".", "resume", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "args", ".", "data_path", "=", "join", "(", "args", ".", "data_root", ",", "args", ".", "dataset", ")", "\n", "args", ".", "im_path", "=", "join", "(", "args", ".", "data_root", ",", "args", ".", "dataset", ",", "'raw'", ")", "\n", "testset", "=", "CompositionDataset", "(", "\n", "root", "=", "args", ".", "data_path", ",", "phase", "=", "'test'", ",", "triple", "=", "args", ".", "triple", ",", "\n", "feat", "=", "args", ".", "feat_name", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "32", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "avg_ap", ",", "avg_prec1", ",", "avg_prec2", ",", "avg_prec3", "=", "validate", "(", "args", ",", "test_loader", ",", "model", ")", "\n", "logging", ".", "info", "(", "'*** summary: ap = {:.4f} | prec@1 = {:.4f}'", ".", "format", "(", "\n", "avg_ap", ",", "avg_prec1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.__init__": [[29, 90], ["os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "dict", "activation_data[].size", "compose_data.CompositionDataset.parse_split", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "compose_data.CompositionDataset.get_split_info", "zip", "len", "os.path.join", "os.path.exists", "os.path.join", "os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "compose_data.load_word_embeddings", "torch.save", "torch.save", "torch.save", "torch.save", "torch.load", "torch.load", "torch.load", "torch.load", "compose_data.load_word_embeddings", "torch.save", "torch.save", "torch.save", "torch.save", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "set", "set", "compose_data.CompositionDataset.objs.index", "compose_data.CompositionDataset.attrs.index", "compose_data.CompositionDataset.objs.index", "compose_data.CompositionDataset.attrs.index", "compose_data.CompositionDataset.objs.index"], "methods", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.parse_split", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.get_split_info", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.load_word_embeddings", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.load_word_embeddings"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "phase", ",", "split", "=", "'compositional-split'", ",", "\n", "emb_file", "=", "'glove/glove.6B.300d.txt'", ",", "triple", "=", "False", ",", "\n", "feat", "=", "'resnet18'", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "# default is `data/compositional-zs`", "\n", "self", ".", "phase", "=", "phase", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "emb_file", "=", "join", "(", "root", ",", "emb_file", ")", "\n", "self", ".", "triple", "=", "triple", "# SPO triplet is used in StanfordVRD", "\n", "self", ".", "feat", "=", "feat", "\n", "feat_file", "=", "'{}/{}_features.t7'", ".", "format", "(", "root", ",", "feat", ")", "\n", "activation_data", "=", "torch", ".", "load", "(", "feat_file", ")", "\n", "self", ".", "activations", "=", "dict", "(", "\n", "zip", "(", "activation_data", "[", "'files'", "]", ",", "activation_data", "[", "'features'", "]", ")", ")", "\n", "self", ".", "feat_dim", "=", "activation_data", "[", "'features'", "]", ".", "size", "(", "1", ")", "\n", "\n", "# load splits", "\n", "self", ".", "attrs", ",", "self", ".", "objs", ",", "self", ".", "pairs", ",", "self", ".", "train_pairs", ",", "self", ".", "test_pairs", "=", "self", ".", "parse_split", "(", ")", "\n", "assert", "len", "(", "set", "(", "self", ".", "train_pairs", ")", "&", "set", "(", "self", ".", "test_pairs", ")", ")", "==", "0", ",", "'train and test are not mutually exclusive'", "\n", "\n", "# load pretrained word2vec embeddings", "\n", "if", "self", ".", "emb_file", "is", "not", "None", ":", "\n", "            ", "att_emb_file", "=", "join", "(", "root", ",", "'attrs_embs.t7'", ")", "\n", "if", "exists", "(", "att_emb_file", ")", ":", "\n", "                ", "self", ".", "attrs_embds", "=", "torch", ".", "load", "(", "att_emb_file", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "attrs_embds", "=", "load_word_embeddings", "(", "\n", "self", ".", "emb_file", ",", "self", ".", "attrs", ")", "\n", "torch", ".", "save", "(", "self", ".", "attrs_embds", ",", "att_emb_file", ")", "\n", "\n", "", "obj_emb_file", "=", "join", "(", "root", ",", "'objs_embs.t7'", ")", "\n", "if", "exists", "(", "obj_emb_file", ")", ":", "\n", "                ", "self", ".", "objs_embds", "=", "torch", ".", "load", "(", "obj_emb_file", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "objs_embds", "=", "load_word_embeddings", "(", "\n", "self", ".", "emb_file", ",", "self", ".", "objs", ")", "\n", "torch", ".", "save", "(", "self", ".", "objs_embds", ",", "obj_emb_file", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "self", ".", "curr_pairs", "=", "self", ".", "train_pairs", "if", "self", ".", "phase", "==", "'train'", "else", "self", ".", "test_pairs", "\n", "\n", "self", ".", "pair2idx", "=", "{", "pair", ":", "idx", "for", "idx", ",", "pair", "in", "enumerate", "(", "self", ".", "curr_pairs", ")", "}", "\n", "\n", "if", "self", ".", "triple", ":", "\n", "            ", "self", ".", "embeddings", "=", "[", "torch", ".", "cat", "(", "[", "\n", "self", ".", "objs_embds", "[", "self", ".", "objs", ".", "index", "(", "sub", ")", "]", ",", "\n", "self", ".", "attrs_embds", "[", "self", ".", "attrs", ".", "index", "(", "verb", ")", "]", ",", "\n", "self", ".", "objs_embds", "[", "self", ".", "objs", ".", "index", "(", "obj", ")", "]", "]", ")", "\n", "for", "(", "sub", ",", "verb", ",", "obj", ")", "in", "self", ".", "curr_pairs", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "embeddings", "=", "[", "torch", ".", "cat", "(", "[", "\n", "self", ".", "attrs_embds", "[", "self", ".", "attrs", ".", "index", "(", "attr", ")", "]", ",", "\n", "self", ".", "objs_embds", "[", "self", ".", "objs", ".", "index", "(", "obj", ")", "]", "]", ")", "\n", "for", "(", "attr", ",", "obj", ")", "in", "self", ".", "curr_pairs", "]", "\n", "\n", "", "self", ".", "embeddings", "=", "torch", ".", "stack", "(", "self", ".", "embeddings", ")", "\n", "\n", "self", ".", "data", ",", "self", ".", "labels", "=", "self", ".", "get_split_info", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.get_split_info": [[91, 111], ["torch.load", "torch.load", "torch.load", "torch.load", "images.append", "targets.append", "compose_data.CompositionDataset.curr_pairs.index"], "methods", ["None"], ["", "def", "get_split_info", "(", "self", ")", ":", "\n", "        ", "data", "=", "torch", ".", "load", "(", "self", ".", "root", "+", "'/metadata.t7'", ")", "\n", "images", ",", "targets", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "instance", "in", "data", ":", "\n", "            ", "if", "self", ".", "triple", ":", "\n", "                ", "image", ",", "sub", ",", "verb", ",", "obj", "=", "instance", "[", "'image'", "]", ",", "instance", "[", "'sub'", "]", ",", "instance", "[", "'pred'", "]", ",", "instance", "[", "'obj'", "]", "\n", "\n", "key", "=", "(", "sub", ",", "verb", ",", "obj", ")", "\n", "", "else", ":", "\n", "                ", "image", ",", "attr", ",", "obj", "=", "instance", "[", "'image'", "]", ",", "instance", "[", "'attr'", "]", ",", "instance", "[", "'obj'", "]", "\n", "key", "=", "(", "attr", ",", "obj", ")", "\n", "\n", "", "if", "key", "in", "self", ".", "curr_pairs", ":", "\n", "                ", "images", ".", "append", "(", "image", ")", "\n", "targets", ".", "append", "(", "self", ".", "curr_pairs", ".", "index", "(", "key", ")", ")", "\n", "\n", "", "", "return", "images", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.parse_split": [[112, 148], ["sorted", "compose_data.CompositionDataset.parse_split.parse_pairs"], "methods", ["None"], ["", "def", "parse_split", "(", "self", ")", ":", "\n", "        ", "def", "parse_pairs", "(", "pair_list", ")", ":", "\n", "            ", "with", "open", "(", "pair_list", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "pairs", "=", "f", ".", "read", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "pairs", "=", "[", "t", ".", "split", "(", ")", "for", "t", "in", "pairs", "]", "\n", "pairs", "=", "list", "(", "map", "(", "tuple", ",", "pairs", ")", ")", "\n", "\n", "", "if", "self", ".", "triple", ":", "\n", "                ", "subs", ",", "verbs", ",", "objs", "=", "zip", "(", "*", "pairs", ")", "\n", "return", "subs", ",", "verbs", ",", "objs", ",", "pairs", "\n", "", "else", ":", "\n", "                ", "attrs", ",", "objs", "=", "zip", "(", "*", "pairs", ")", "\n", "return", "attrs", ",", "objs", ",", "pairs", "\n", "\n", "", "", "if", "self", ".", "triple", ":", "\n", "            ", "tr_subs", ",", "tr_verbs", ",", "tr_objs", ",", "tr_pairs", "=", "parse_pairs", "(", "\n", "'{}/{}/train_pairs.txt'", ".", "format", "(", "self", ".", "root", ",", "self", ".", "split", ")", ")", "\n", "ts_subs", ",", "ts_verbs", ",", "ts_objs", ",", "ts_pairs", "=", "parse_pairs", "(", "\n", "'{}/{}/test_pairs.txt'", ".", "format", "(", "self", ".", "root", ",", "self", ".", "split", ")", ")", "\n", "\n", "# The attributes are now the `verbs` and the subjects and objects", "\n", "# share the same label space", "\n", "all_attrs", ",", "all_objs", "=", "sorted", "(", "list", "(", "set", "(", "tr_verbs", "+", "ts_verbs", ")", ")", ")", ",", "sorted", "(", "list", "(", "set", "(", "tr_objs", "+", "ts_objs", "+", "\n", "tr_subs", "+", "ts_subs", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "tr_attrs", ",", "tr_objs", ",", "tr_pairs", "=", "parse_pairs", "(", "\n", "'{}/{}/train_pairs.txt'", ".", "format", "(", "self", ".", "root", ",", "self", ".", "split", ")", ")", "\n", "ts_attrs", ",", "ts_objs", ",", "ts_pairs", "=", "parse_pairs", "(", "\n", "'{}/{}/test_pairs.txt'", ".", "format", "(", "self", ".", "root", ",", "self", ".", "split", ")", ")", "\n", "\n", "all_attrs", ",", "all_objs", "=", "sorted", "(", "list", "(", "set", "(", "tr_attrs", "+", "ts_attrs", ")", ")", ")", ",", "sorted", "(", "list", "(", "set", "(", "tr_objs", "+", "ts_objs", ")", ")", ")", "\n", "", "all_pairs", "=", "sorted", "(", "list", "(", "set", "(", "tr_pairs", "+", "ts_pairs", ")", ")", ")", "\n", "\n", "return", "all_attrs", ",", "all_objs", ",", "all_pairs", ",", "tr_pairs", ",", "ts_pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.__getitem__": [[149, 153], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", ",", "label", "=", "self", ".", "data", "[", "index", "]", ",", "self", ".", "labels", "[", "index", "]", "\n", "feat", "=", "self", ".", "activations", "[", "image", "]", "\n", "return", "feat", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.CompositionDataset.__len__": [[154, 156], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.compositional-zs.compose_data.load_word_embeddings": [[6, 26], ["open", "torch.stack", "torch.stack", "v.lower", "line.strip().split.strip().split", "torch.FloatTensor", "torch.FloatTensor", "new_embs.append", "list", "k.split", "torch.stack().mean", "torch.stack().mean", "line.strip().split.strip", "map", "torch.stack", "torch.stack"], "function", ["None"], ["def", "load_word_embeddings", "(", "emb_file", ",", "vocab", ")", ":", "\n", "    ", "vocab", "=", "[", "v", ".", "lower", "(", ")", "for", "v", "in", "vocab", "]", "\n", "\n", "embeds", "=", "{", "}", "\n", "for", "line", "in", "open", "(", "emb_file", ",", "'r'", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "wvec", "=", "torch", ".", "FloatTensor", "(", "list", "(", "map", "(", "float", ",", "line", "[", "1", ":", "]", ")", ")", ")", "\n", "embeds", "[", "line", "[", "0", "]", "]", "=", "wvec", "\n", "\n", "", "new_embs", "=", "[", "]", "\n", "for", "k", "in", "vocab", ":", "\n", "        ", "if", "'-'", "in", "k", ":", "\n", "            ", "ks", "=", "k", ".", "split", "(", "'-'", ")", "\n", "emb", "=", "torch", ".", "stack", "(", "[", "embeds", "[", "it", "]", "for", "it", "in", "ks", "]", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "emb", "=", "embeds", "[", "k", "]", "\n", "", "new_embs", ".", "append", "(", "emb", ")", "\n", "\n", "", "embeds", "=", "torch", ".", "stack", "(", "new_embs", ")", "\n", "return", "embeds", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args": [[15, 81], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "join", "os.makedirs", "join", "os.makedirs", "os.path.join", "save_args", "len", "os.listdir"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "'-a'", ",", "default", "=", "'d3r_vgg11_awa2'", ")", "\n", "parser", ".", "add_argument", "(", "'--config-name'", ",", "'-cfg'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'configuration name'", ")", "\n", "parser", ".", "add_argument", "(", "'--cmd'", ",", "choices", "=", "[", "'train'", ",", "'test'", "]", ",", "\n", "type", "=", "str", ",", "default", "=", "'train'", ")", "\n", "parser", ".", "add_argument", "(", "'--gzsl'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'generalized zero-shot learning'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "help", "=", "'path to the checkpoint to begin with'", ")", "\n", "parser", ".", "add_argument", "(", "'--save-folder'", ",", "default", "=", "'zero-shot/checkpoints'", ",", "\n", "type", "=", "str", ",", "help", "=", "'folder to save everything'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'awa2'", ",", "\n", "choices", "=", "[", "'awa2'", ",", "'cub'", ",", "'sun'", ",", "'awa1'", ",", "'apy'", "]", ",", "\n", "help", "=", "'dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--data-root'", ",", "default", "=", "'data/zero-shot'", ",", "\n", "type", "=", "str", ",", "help", "=", "'path to the data and split info'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "'-b'", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--num-workers'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "\n", "help", "=", "'number of workers'", ")", "\n", "parser", ".", "add_argument", "(", "'--emb-dim'", ",", "type", "=", "int", ",", "default", "=", "85", ",", "\n", "help", "=", "'input dim of the embedding network'", ")", "\n", "parser", ".", "add_argument", "(", "'--input-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'input image feature dimension'", ")", "\n", "parser", ".", "add_argument", "(", "'--feat-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'feature dimension.'", ")", "\n", "parser", ".", "add_argument", "(", "'--hidden-dim'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'hidden unit size of the meta learner'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "1e-4", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for new parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--elr'", ",", "default", "=", "1e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for embed parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--blr'", ",", "default", "=", "1e-4", ",", "type", "=", "float", ",", "\n", "help", "=", "'initial learning rate for base parameters '", ")", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "help", "=", "'starting epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "60", ",", "type", "=", "int", ",", "\n", "help", "=", "'total number of training epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--step-ratio'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "'step ratio'", ")", "\n", "parser", ".", "add_argument", "(", "'--low'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "\n", "help", "=", "'lower threshold'", ")", "\n", "parser", ".", "add_argument", "(", "'--high'", ",", "type", "=", "int", ",", "default", "=", "60", ",", "\n", "help", "=", "'high thresholds'", ")", "\n", "parser", ".", "add_argument", "(", "'--beta'", ",", "type", "=", "float", ",", "default", "=", "1", ",", "\n", "help", "=", "'coefficient for the embedding loss'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# save directory", "\n", "args", ".", "save_path", "=", "join", "(", "\n", "args", ".", "save_folder", ",", "args", ".", "dataset", ",", "args", ".", "arch", ",", "args", ".", "config_name", ")", "\n", "os", ".", "makedirs", "(", "args", ".", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "args", ".", "run_id", "=", "len", "(", "os", ".", "listdir", "(", "args", ".", "save_path", ")", ")", "+", "1", "\n", "args", ".", "save_path", "=", "join", "(", "args", ".", "save_path", ",", "'run_{}'", ".", "format", "(", "args", ".", "run_id", ")", ")", "\n", "os", ".", "makedirs", "(", "args", ".", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "args", ".", "logger_file", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_path", ",", "'log_{}.txt'", ".", "format", "(", "args", ".", "cmd", ")", ")", "\n", "\n", "save_args", "(", "args", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.main": [[83, 104], ["train_zsl.parse_args", "logging.basicConfig", "logging.info", "logging.FileHandler", "logging.StreamHandler", "logging.info", "train_zsl.run_training", "logging.info", "train_zsl.test"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.parse_args", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.run_training", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "args", ".", "logger_file", ",", "mode", "=", "'w'", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", "\n", "FORMAT", "=", "\"[%(asctime)-15s %(filename)s:%(lineno)d \"", "\"%(funcName)s] %(message)s\"", "\n", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "\n", "datefmt", "=", "'%m-%d-%y %H:%M'", ",", "\n", "format", "=", "FORMAT", ",", "\n", "handlers", "=", "handlers", ")", "\n", "\n", "logging", ".", "info", "(", "'Results will be saved to {}'", ".", "format", "(", "args", ".", "save_path", ")", ")", "\n", "if", "args", ".", "cmd", "==", "'train'", ":", "\n", "        ", "logging", ".", "info", "(", "'start training model {}'", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "run_training", "(", "args", ")", "\n", "", "elif", "args", ".", "cmd", "==", "'test'", ":", "\n", "        ", "logging", ".", "info", "(", "'start testing model {}'", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "test", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.run_training": [[106, 231], ["torch.nn.DataParallel.to", "torch.nn.DataParallel.named_parameters", "logging.info", "join", "logging.info", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "logging.info", "torch.BCEWithLogitsLoss().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "logging.info", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "adjust_learning_rate_epoch", "train_zsl.train", "max", "os.path.join", "save_checkpoint", "logging.info", "logging.info", "emb_params.append", "torch.BCEWithLogitsLoss", "train_zsl.validate", "train_zsl.validate", "logging.info", "train_zsl.validate", "logging.info", "gate_params.append", "logging.info", "logging.info", "torch.nn.DataParallel.state_dict", "classifier_params.append", "feat_params.append"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.adjust_learning_rate_epoch", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.train", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.save_checkpoint", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate"], ["", "", "def", "run_training", "(", "args", ")", ":", "\n", "    ", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "args", ".", "emb_dim", ",", "args", ".", "feat_dim", ",", "\n", "args", ".", "input_dim", ",", "args", ".", "hidden_dim", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "device", "==", "'cuda'", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "", "feat_params", ",", "classifier_params", ",", "gate_params", ",", "emb_params", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "'emb'", "in", "n", ":", "\n", "            ", "emb_params", ".", "append", "(", "p", ")", "\n", "", "elif", "'gate'", "in", "n", ":", "\n", "            ", "gate_params", ".", "append", "(", "p", ")", "\n", "", "elif", "'classifier'", "in", "n", ":", "\n", "            ", "classifier_params", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "            ", "feat_params", ".", "append", "(", "p", ")", "\n", "\n", "", "", "param_group", "=", "[", "\n", "{", "'params'", ":", "emb_params", ",", "'name'", ":", "'embedding'", "}", ",", "\n", "{", "'params'", ":", "gate_params", ",", "'name'", ":", "'gate'", "}", ",", "\n", "{", "'params'", ":", "classifier_params", ",", "'name'", ":", "'classifier'", "}", ",", "\n", "{", "'params'", ":", "feat_params", ",", "'name'", ":", "'feature'", "}", "\n", "]", "\n", "\n", "best_prec1", "=", "0", "\n", "best_prec1_u", ",", "best_prec1_s", "=", "0", ",", "0", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "logging", ".", "info", "(", "'=> loading checkpoint `{}`'", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "best_prec1", "=", "checkpoint", "[", "'best_prec1'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "'=> loaded checkpoint `{}` (epoch: {})'", ".", "format", "(", "\n", "args", ".", "resume", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "logging", ".", "info", "(", "'loading the {} dataset'", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "args", ".", "data_path", "=", "join", "(", "args", ".", "data_root", ",", "args", ".", "dataset", ")", "\n", "logging", ".", "info", "(", "'start creating train loader ...'", ")", "\n", "trainset", "=", "ZSData", "(", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'train'", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# using the validation set", "\n", "logging", ".", "info", "(", "'start creating test loader ...'", ")", "\n", "if", "args", ".", "gzsl", ":", "\n", "        ", "testset_unseen", "=", "ZSData", "(", "\n", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "gzsl", "=", "True", ",", "seen", "=", "False", ")", "\n", "test_loader_unseen", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset_unseen", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "testset_seen", "=", "ZSData", "(", "\n", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "gzsl", "=", "True", ",", "seen", "=", "True", ")", "\n", "\n", "test_loader_seen", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset_seen", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "testset", "=", "ZSData", "(", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "\n", "gzsl", "=", "False", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "param_group", ",", "args", ".", "lr", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "adjust_learning_rate_epoch", "(", "args", ",", "optimizer", ",", "epoch", ")", "\n", "train", "(", "args", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", "\n", "\n", "if", "args", ".", "gzsl", ":", "\n", "            ", "avg_prec1_u", "=", "validate", "(", "args", ",", "test_loader_unseen", ",", "model", ")", "\n", "\n", "avg_prec1_s", "=", "validate", "(", "args", ",", "test_loader_seen", ",", "model", ")", "\n", "\n", "avg_prec1_h", "=", "(", "2", "*", "avg_prec1_s", "*", "avg_prec1_u", ")", "/", "(", "\n", "avg_prec1_s", "+", "avg_prec1_u", ")", "\n", "avg_prec1", "=", "avg_prec1_h", "\n", "logging", ".", "info", "(", "'Epoch [{}] Val: * Summary: \\n'", "\n", "'* GZSL @Unseen: {:.4f} \\t '", "\n", "'@Seen: {:.4f} \\t @mean_h: {:.4f}'", "\n", "'\\n'", ".", "format", "(", "epoch", ",", "avg_prec1_u", ",", "avg_prec1_s", ",", "\n", "avg_prec1_h", ")", ")", "\n", "", "else", ":", "\n", "            ", "avg_prec1", "=", "validate", "(", "args", ",", "test_loader", ",", "model", ")", "\n", "logging", ".", "info", "(", "'Epoch [{}] Val: * Summary: \\n'", "\n", "'* ZSL @top1: {:.4f}\\n'", ".", "format", "(", "epoch", ",", "avg_prec1", ")", ")", "\n", "\n", "# remember best prec@1 and save checkpoint", "\n", "", "is_best", "=", "avg_prec1", ">", "best_prec1", "\n", "best_prec1", "=", "max", "(", "avg_prec1", ",", "best_prec1", ")", "\n", "if", "is_best", ":", "\n", "            ", "if", "args", ".", "gzsl", ":", "\n", "                ", "best_prec1_u", "=", "avg_prec1_u", "\n", "best_prec1_s", "=", "avg_prec1_s", "\n", "logging", ".", "info", "(", "'* best so far is '", "\n", "'* GZSL @Unseen: {:.4f} \\t '", "\n", "'@Seen: {:.4f} \\t @mean_h: {:.4f}\\n'", ".", "format", "(", "\n", "avg_prec1_u", ",", "avg_prec1_s", ",", "avg_prec1", ")", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "'* best so far is '", "\n", "'* ZSL @top1: {:.4f}\\n'", ".", "format", "(", "avg_prec1", ")", ")", "\n", "\n", "", "", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_path", ",", "'checkpoint_latest.pth.tar'", ")", "\n", "\n", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "arch", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'best_prec1'", ":", "best_prec1", ",", "\n", "}", ",", "is_best", ",", "filename", "=", "checkpoint_path", ")", "\n", "\n", "", "if", "args", ".", "gzsl", ":", "\n", "        ", "logging", ".", "info", "(", "\"** Best GZSL: mean_h = {:.4f}\\t\"", "\n", "\"@Unseen = {:.4f}\\t@Seen = {:.4f}\"", ".", "format", "(", "\n", "best_prec1", ",", "best_prec1_u", ",", "best_prec1_s", ")", ")", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "\"** Best ZSL accuracy = {:.4f}\"", ".", "format", "(", "best_prec1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.weighted_mse_loss": [[233, 235], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "weight.sum"], "function", ["None"], ["", "", "def", "weighted_mse_loss", "(", "input", ",", "target", ",", "weight", ")", ":", "\n", "    ", "return", "(", "torch", ".", "sum", "(", "weight", "*", "(", "input", "-", "target", ")", "**", "2", ",", "1", ")", "/", "weight", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.train": [[237, 302], ["AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "model.train", "time.time", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "tqdm.tqdm", "enumerate", "AverageMeter.update", "input.float().to.float().to", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "len", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "input.float().to.size", "input.float().to.unsqueeze().repeat().transpose", "input_rep.contiguous().view.contiguous().view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "task_emb.repeat.repeat", "model", "out.view.view", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "torch.zeros().to().scatter_", "criterion", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "dist.view", "train_zsl.weighted_mse_loss", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "AverageMeter.update", "time.time", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "t.set_postfix", "t.update", "len", "torch.cat().to.append", "torch.cat().to.long().view", "criterion.item", "prec1.item", "weighted_mse_loss.item", "time.time", "input.float().to.float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "input.float().to.unsqueeze().repeat", "input_rep.contiguous().view.contiguous", "[].float().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "time.time", "torch.cat().to.long", "torch.zeros().to().scatter_.size", "input.float().to.unsqueeze", "[].float", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "j.item"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.train", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.weighted_mse_loss", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.accuracy", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update"], ["", "def", "train", "(", "args", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "losses_dist", "=", "AverageMeter", "(", ")", "\n", "\n", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", ".", "train", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "train_loader", ")", ",", "ascii", "=", "True", ",", "desc", "=", "'train'", ")", "as", "t", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "targets", ",", "task_embs", ",", "mtarget", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# re-batch every epoch, sort of the episode way of training", "\n", "input", "=", "input", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "unique_lab_batch", "=", "torch", ".", "unique", "(", "mtarget", ")", "\n", "nclass", "=", "len", "(", "unique_lab_batch", ")", "\n", "rebatch_target", "=", "[", "]", "\n", "for", "m", "in", "mtarget", ":", "\n", "                ", "rebatch_target", ".", "append", "(", "(", "m", "==", "unique_lab_batch", ")", ".", "nonzero", "(", ")", "[", "0", "]", ")", "\n", "", "rebatch_target", "=", "torch", ".", "cat", "(", "rebatch_target", ")", ".", "to", "(", "device", ")", "\n", "\n", "# concatenate the input and output", "\n", "size", "=", "input", ".", "size", "(", ")", "\n", "input_rep", "=", "input", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "nclass", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "input_rep", "=", "input_rep", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "size", "[", "1", "]", ")", "\n", "\n", "# select all the embeddings used in the current batch", "\n", "task_emb", "=", "torch", ".", "stack", "(", "[", "task_embs", "[", "j", ".", "item", "(", ")", "]", "[", "0", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "for", "j", "in", "unique_lab_batch", "]", ",", "0", ")", "\n", "task_emb", "=", "task_emb", ".", "repeat", "(", "size", "[", "0", "]", ",", "1", ")", "\n", "\n", "out", ",", "decisions", "=", "model", "(", "input_rep", ",", "task_emb", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "nclass", ")", "\n", "\n", "label_onehot", "=", "torch", ".", "zeros", "(", "size", "[", "0", "]", ",", "nclass", ")", ".", "to", "(", "device", ")", ".", "scatter_", "(", "\n", "1", ",", "rebatch_target", ".", "long", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "out", ",", "label_onehot", ")", "\n", "\n", "# add embedding loss", "\n", "dist", "=", "decisions", "[", "-", "1", "]", "\n", "weight", "=", "torch", ".", "ones", "(", "label_onehot", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "weight", "[", "label_onehot", "==", "1", "]", "=", "nclass", "-", "1", "\n", "dist_reshape", "=", "dist", ".", "view", "(", "-", "1", ",", "nclass", ")", "\n", "loss_dist", "=", "weighted_mse_loss", "(", "dist_reshape", ",", "label_onehot", ",", "weight", ")", "\n", "loss", "+=", "args", ".", "beta", "*", "loss_dist", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "prec1", ",", "=", "accuracy", "(", "out", ",", "rebatch_target", ",", "topk", "=", "(", "1", ",", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "losses_dist", ".", "update", "(", "loss_dist", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "t", ".", "set_postfix", "(", "loss", "=", "losses", ".", "avg", ",", "emb_loss", "=", "losses_dist", ".", "avg", ",", "\n", "top1", "=", "top1", ".", "avg", ")", "\n", "t", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate": [[304, 342], ["AverageMeter", "model.eval", "time.time", "len", "logging.info", "AverageMeter", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "enumerate", "input.size", "input.unsqueeze().repeat().transpose", "input_rep.contiguous().view.contiguous().view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "task_emb.repeat.repeat", "model", "out.view.view", "per_class_avg_accuracy", "AverageMeter.update", "AverageMeter.update", "time.time", "t.set_postfix", "t.update", "len", "input.float().to", "mtarget.to", "prec1.item", "input.unsqueeze().repeat", "input_rep.contiguous().view.contiguous", "[].float().to", "time.time", "prec1.item", "input.float", "range", "input.unsqueeze", "[].float"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.per_class_avg_accuracy", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.None.utils.AverageMeter.update"], ["", "", "", "def", "validate", "(", "args", ",", "test_loader", ",", "model", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "\n", "ntasks", "=", "len", "(", "test_loader", ".", "dataset", ".", "task_list", ")", "\n", "logging", ".", "info", "(", "'Evaluation: {} novel tasks'", ".", "format", "(", "ntasks", ")", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "with", "tqdm", "(", "total", "=", "len", "(", "test_loader", ")", ",", "ascii", "=", "True", ",", "desc", "=", "'test'", ")", "as", "t", ":", "\n", "            ", "for", "i", ",", "(", "input", ",", "targets", ",", "task_onehots", ",", "mtarget", ")", "in", "enumerate", "(", "\n", "test_loader", ")", ":", "\n", "                ", "input", ",", "mtarget", "=", "input", ".", "float", "(", ")", ".", "to", "(", "device", ")", ",", "mtarget", ".", "to", "(", "device", ")", "\n", "# concatenate the input and output", "\n", "size", "=", "input", ".", "size", "(", ")", "\n", "input_rep", "=", "input", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "\n", "1", ",", "1", ",", "ntasks", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "input_rep", "=", "input_rep", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "size", "[", "1", "]", ")", "\n", "\n", "task_emb", "=", "torch", ".", "stack", "(", "[", "task_onehots", "[", "j", "]", "[", "0", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "for", "j", "in", "range", "(", "ntasks", ")", "]", ",", "0", ")", "\n", "task_emb", "=", "task_emb", ".", "repeat", "(", "size", "[", "0", "]", ",", "1", ")", "\n", "\n", "out", ",", "decisions", "=", "model", "(", "input_rep", ",", "task_emb", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "ntasks", ")", "\n", "\n", "prec1", ",", "=", "per_class_avg_accuracy", "(", "out", ",", "mtarget", ",", "ntasks", ",", "topk", "=", "(", "1", ",", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "size", "[", "0", "]", ")", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "t", ".", "set_postfix", "(", "prec1", "=", "prec1", ".", "item", "(", ")", ")", "\n", "t", ".", "update", "(", ")", "\n", "\n", "", "", "", "avg_prec1", "=", "top1", ".", "avg", "\n", "return", "avg_prec1", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.test": [[344, 400], ["torch.nn.DataParallel().to.to", "join", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "torch.nn.DataParallel().to", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel().to.load_state_dict", "logging.info", "logging.info", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_zsl.validate", "logging.info", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_zsl.validate", "logging.info", "logging.info", "zsl_data.ZSData", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_zsl.validate", "logging.info", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate", "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.train_zsl.validate"], ["", "def", "test", "(", "args", ")", ":", "\n", "# create model", "\n", "    ", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "args", ".", "emb_dim", ",", "args", ".", "feat_dim", ",", "\n", "args", ".", "input_dim", ",", "args", ".", "hidden_dim", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "device", "==", "'cuda'", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "if", "args", ".", "resume", ":", "\n", "        ", "logging", ".", "info", "(", "'=> loading checkpoint `{}`'", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "best_prec1", "=", "checkpoint", "[", "'best_prec1'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "'=> loaded checkpoint `{}` (epoch: {})'", ".", "format", "(", "\n", "args", ".", "resume", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "args", ".", "data_path", "=", "join", "(", "args", ".", "data_root", ",", "args", ".", "dataset", ")", "\n", "if", "args", ".", "gzsl", ":", "\n", "        ", "logging", ".", "info", "(", "'Evaluating generalized zsl setting .. '", ")", "\n", "testset", "=", "ZSData", "(", "\n", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "gzsl", "=", "True", ",", "seen", "=", "False", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "avg_prec1_u", "=", "validate", "(", "args", ",", "test_loader", ",", "model", ")", "\n", "\n", "logging", ".", "info", "(", "'evaluating seen category ...'", ")", "\n", "testset", "=", "ZSData", "(", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "\n", "gzsl", "=", "True", ",", "seen", "=", "True", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "avg_prec1_s", "=", "validate", "(", "args", ",", "test_loader", ",", "model", ")", "\n", "\n", "avg_prec1_h", "=", "(", "2", "*", "avg_prec1_s", "*", "avg_prec1_u", ")", "/", "(", "\n", "avg_prec1_s", "+", "avg_prec1_u", ")", "\n", "\n", "logging", ".", "info", "(", "'* Summary: GZSL @Unseen: {:.4f}\\t@Seen: {:.4f}\\t'", "\n", "'@mean_h: {:.4f}'", ".", "format", "(", "\n", "avg_prec1_u", ",", "avg_prec1_s", ",", "avg_prec1_h", ")", ")", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "'Evaluating classic zero-shot learning setting ...'", ")", "\n", "testset", "=", "ZSData", "(", "\n", "root", "=", "args", ".", "data_path", ",", "subset", "=", "'test'", ",", "\n", "gzsl", "=", "False", ",", "seen", "=", "False", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ")", "\n", "avg_prec1_zsl", ",", "probs", ",", "decisions", "=", "validate", "(", "\n", "args", ",", "test_loader", ",", "model", ")", "\n", "logging", ".", "info", "(", "'* Summary: Classic ZSL '", "\n", "'@top1 = {:.4f}%'", ".", "format", "(", "avg_prec1_zsl", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__init__": [[15, 58], ["torch.Dataset.__init__", "os.path.expanduser", "scipy.io.loadmat", "scipy.io.loadmat", "os.path.join", "print", "os.path.join", "zsl_data.ZSData.feats_labels[].astype().squeeze", "numpy.unique", "numpy.unique", "zsl_data.ZSData.att_splits[].squeeze", "zsl_data.ZSData.feats_labels[].astype", "zsl_data.ZSData.att_splits[].squeeze", "zsl_data.ZSData.att_splits[].squeeze", "zsl_data.ZSData.att_splits[].squeeze", "zsl_data.ZSData.att_splits[].squeeze"], "methods", ["home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "subset", "=", "'train'", ",", "gzsl", "=", "False", ",", "seen", "=", "False", ",", "\n", "target_transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "ZSData", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "subset", "=", "subset", "\n", "self", ".", "gzsl", "=", "gzsl", "\n", "self", ".", "seen", "=", "seen", "\n", "\n", "# load mat", "\n", "self", ".", "att_splits", "=", "loadmat", "(", "join", "(", "root", ",", "'att_splits.mat'", ")", ")", "\n", "\n", "if", "'original_att'", "in", "self", ".", "att_splits", ":", "\n", "            ", "self", ".", "att", "=", "self", ".", "att_splits", "[", "'original_att'", "]", ".", "T", "\n", "", "else", ":", "\n", "            ", "print", "(", "'using att instead of original_att'", ")", "\n", "self", ".", "att", "=", "self", ".", "att_splits", "[", "'att'", "]", ".", "T", "\n", "\n", "# load features, label or raw images", "\n", "", "self", ".", "feats_labels", "=", "loadmat", "(", "join", "(", "root", ",", "'res101.mat'", ")", ")", "\n", "self", ".", "feats", "=", "self", ".", "feats_labels", "[", "'features'", "]", ".", "T", "\n", "self", ".", "labels", "=", "self", ".", "feats_labels", "[", "'labels'", "]", ".", "astype", "(", "int", ")", ".", "squeeze", "(", ")", "-", "1", "\n", "\n", "if", "self", ".", "subset", "==", "'train'", ":", "\n", "            ", "self", ".", "loc", "=", "self", ".", "att_splits", "[", "'trainval_loc'", "]", ".", "squeeze", "(", ")", "-", "1", "\n", "", "elif", "self", ".", "subset", "==", "'val'", ":", "\n", "            ", "self", ".", "loc", "=", "self", ".", "att_splits", "[", "'test_unseen_loc'", "]", ".", "squeeze", "(", ")", "-", "1", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "gzsl", ":", "\n", "                ", "if", "self", ".", "seen", ":", "\n", "                    ", "self", ".", "loc", "=", "self", ".", "att_splits", "[", "'test_seen_loc'", "]", ".", "squeeze", "(", ")", "-", "1", "\n", "", "else", ":", "\n", "                    ", "self", ".", "loc", "=", "self", ".", "att_splits", "[", "'test_unseen_loc'", "]", ".", "squeeze", "(", ")", "-", "1", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "loc", "=", "self", ".", "att_splits", "[", "'test_unseen_loc'", "]", ".", "squeeze", "(", ")", "-", "1", "\n", "\n", "", "", "self", ".", "subset_labels", "=", "self", ".", "labels", "[", "self", ".", "loc", "]", "\n", "if", "self", ".", "gzsl", ":", "\n", "            ", "self", ".", "task_list", "=", "np", ".", "unique", "(", "self", ".", "labels", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "task_list", "=", "np", ".", "unique", "(", "self", ".", "subset_labels", ")", "\n", "\n", "", "self", ".", "subset_feats", "=", "self", ".", "feats", "[", "self", ".", "loc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__getitem__": [[59, 73], ["zsl_data.ZSData.task_list.tolist().index", "zsl_data.ZSData.target_transform", "int", "labels.append", "att_embs.append", "zsl_data.ZSData.task_list.tolist"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "subset_feats", "[", "index", "]", ",", "self", ".", "subset_labels", "[", "index", "]", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "# provide a list of task", "\n", "", "labels", ",", "att_embs", "=", "[", "]", ",", "[", "]", "\n", "for", "t", "in", "self", ".", "task_list", ":", "\n", "            ", "label", "=", "int", "(", "target", "==", "t", ")", "\n", "att_emb", "=", "self", ".", "att", "[", "t", "]", "\n", "labels", ".", "append", "(", "label", ")", "\n", "att_embs", ".", "append", "(", "att_emb", ")", "\n", "", "new_target", "=", "self", ".", "task_list", ".", "tolist", "(", ")", ".", "index", "(", "target", ")", "\n", "return", "img", ",", "labels", ",", "att_embs", ",", "new_target", "\n", "\n"]], "home.repos.pwc.inspect_result.ucbdrive_tafe-net.zero-shot.zsl_data.ZSData.__len__": [[74, 76], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "subset_labels", ")", "\n", "", "", ""]]}