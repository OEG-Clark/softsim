{"home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.2_bpod_param.poisson_fst": [[24, 49], ["numpy.zeros", "numpy.copy", "numpy.zeros", "scipy.fftpack.dst", "scipy.fftpack.dst", "numpy.linspace().reshape", "numpy.linspace().reshape", "scipy.fftpack.idst", "scipy.fftpack.idst", "numpy.zeros", "numpy.linspace", "numpy.linspace", "numpy.cos", "numpy.cos"], "function", ["None"], ["def", "poisson_fst", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", ":", "\n", "\n", "    ", "f", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "f", "=", "np", ".", "copy", "(", "-", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", ")", "\n", "\n", "#DST: forward transform", "\n", "ff", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "ff", "=", "dst", "(", "f", ",", "axis", "=", "1", ",", "type", "=", "1", ")", "\n", "ff", "=", "dst", "(", "ff", ",", "axis", "=", "0", ",", "type", "=", "1", ")", "\n", "\n", "m", "=", "np", ".", "linspace", "(", "1", ",", "nx", "-", "1", ",", "nx", "-", "1", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "n", "=", "np", ".", "linspace", "(", "1", ",", "ny", "-", "1", ",", "ny", "-", "1", ")", ".", "reshape", "(", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "alpha", "=", "(", "2.0", "/", "(", "dx", "*", "dx", ")", ")", "*", "(", "np", ".", "cos", "(", "np", ".", "pi", "*", "m", "/", "nx", ")", "-", "1.0", ")", "+", "(", "2.0", "/", "(", "dy", "*", "dy", ")", ")", "*", "(", "np", ".", "cos", "(", "np", ".", "pi", "*", "n", "/", "ny", ")", "-", "1.0", ")", "\n", "u1", "=", "ff", "/", "alpha", "\n", "\n", "#IDST: inverse transform", "\n", "u", "=", "idst", "(", "u1", ",", "axis", "=", "1", ",", "type", "=", "1", ")", "\n", "u", "=", "idst", "(", "u", ",", "axis", "=", "0", ",", "type", "=", "1", ")", "\n", "u", "=", "u", "/", "(", "(", "2.0", "*", "nx", ")", "*", "(", "2.0", "*", "ny", ")", ")", "\n", "\n", "ue", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "ue", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "u", "\n", "\n", "return", "ue", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.2_bpod_param.import_fom_data": [[50, 59], ["numpy.load", "str", "str", "str", "int", "str", "int"], "function", ["None"], ["", "def", "import_fom_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "\n", "data", "=", "np", ".", "load", "(", "filename", ")", "\n", "w", "=", "data", "[", "'w'", "]", "\n", "s", "=", "data", "[", "'s'", "]", "\n", "t", "=", "data", "[", "'t'", "]", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.2_bpod_param.POD_svd": [[60, 92], ["numpy.zeros", "numpy.zeros", "range", "numpy.mean", "numpy.mean", "numpy.linalg.svd", "numpy.linalg.svd", "np.mean.reshape", "np.mean.reshape", "numpy.cumsum", "numpy.sum", "numpy.cumsum", "numpy.sum"], "function", ["None"], ["", "def", "POD_svd", "(", "wdata", ",", "tdata", ",", "nr", ")", ":", "\n", "\n", "    ", "ne", ",", "nd", ",", "ns", "=", "wdata", ".", "shape", "\n", "Aw", "=", "np", ".", "zeros", "(", "[", "nd", ",", "ns", "*", "ne", "]", ")", "\n", "At", "=", "np", ".", "zeros", "(", "[", "nd", ",", "ns", "*", "ne", "]", ")", "\n", "#stack data along first axis", "\n", "for", "p", "in", "range", "(", "ne", ")", ":", "\n", "        ", "Aw", "[", ":", ",", "p", "*", "ns", ":", "(", "p", "+", "1", ")", "*", "ns", "]", "=", "wdata", "[", "p", ",", ":", ",", ":", "]", "\n", "At", "[", ":", ",", "p", "*", "ns", ":", "(", "p", "+", "1", ")", "*", "ns", "]", "=", "tdata", "[", "p", ",", ":", ",", ":", "]", "\n", "\n", "#mean subtraction", "\n", "", "wm", "=", "np", ".", "mean", "(", "Aw", ",", "axis", "=", "1", ")", "\n", "tm", "=", "np", ".", "mean", "(", "At", ",", "axis", "=", "1", ")", "\n", "\n", "Aw", "=", "Aw", "-", "wm", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "At", "=", "At", "-", "tm", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "\n", "#singular value decomposition", "\n", "Uw", ",", "Sw", ",", "Vhw", "=", "LA", ".", "svd", "(", "Aw", ",", "full_matrices", "=", "False", ")", "\n", "Ut", ",", "St", ",", "Vht", "=", "LA", ".", "svd", "(", "At", ",", "full_matrices", "=", "False", ")", "\n", "\n", "Phiw", "=", "Uw", "[", ":", ",", ":", "nr", "]", "\n", "Lw", "=", "Sw", "**", "2", "\n", "#compute RIC (relative importance index)", "\n", "RICw", "=", "np", ".", "cumsum", "(", "Lw", ")", "/", "np", ".", "sum", "(", "Lw", ")", "*", "100", "\n", "\n", "Phit", "=", "Ut", "[", ":", ",", ":", "nr", "]", "\n", "Lt", "=", "St", "**", "2", "\n", "#compute RIC (relative importance index)", "\n", "RICt", "=", "np", ".", "cumsum", "(", "Lt", ")", "/", "np", ".", "sum", "(", "Lt", ")", "*", "100", "\n", "\n", "return", "wm", ",", "Phiw", ",", "Lw", ",", "RICw", ",", "tm", ",", "Phit", ",", "Lt", ",", "RICt", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.2_bpod_param.PODproj_svd": [[93, 96], ["numpy.dot"], "function", ["None"], ["", "def", "PODproj_svd", "(", "u", ",", "Phi", ")", ":", "#Projection", "\n", "    ", "a", "=", "np", ".", "dot", "(", "Phi", ".", "T", ",", "u", ")", "# u = Phi * a if shape of a is [nr,ns]", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.2_bpod_param.PODrec_svd": [[97, 100], ["numpy.dot"], "function", ["None"], ["", "def", "PODrec_svd", "(", "a", ",", "Phi", ")", ":", "#Reconstruction    ", "\n", "    ", "u", "=", "np", ".", "dot", "(", "Phi", ",", "a", ")", "\n", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.jacobian": [[22, 40], ["None"], "function", ["None"], ["def", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "q", ",", "s", ")", ":", "\n", "    ", "gg", "=", "1.0", "/", "(", "4.0", "*", "dx", "*", "dy", ")", "\n", "hh", "=", "1.0", "/", "3.0", "\n", "#Arakawa 1:nx,1:ny   ", "\n", "j1", "=", "gg", "*", "(", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "(", "q", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "q", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", ")", "\n", "\n", "j2", "=", "gg", "*", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", "*", "(", "s", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", ")", "+", "q", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", ")", ")", "\n", "\n", "j3", "=", "gg", "*", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "+", "q", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", ")", "\n", "jac", "=", "(", "j1", "+", "j2", "+", "j3", ")", "*", "hh", "\n", "return", "jac", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.laplacian": [[41, 47], ["None"], "function", ["None"], ["", "def", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", ":", "\n", "    ", "aa", "=", "1.0", "/", "(", "dx", "*", "dx", ")", "\n", "bb", "=", "1.0", "/", "(", "dy", "*", "dy", ")", "\n", "lap", "=", "aa", "*", "(", "w", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "2.0", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "w", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "+", "bb", "*", "(", "w", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "2.0", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "w", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "\n", "return", "lap", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.const_term": [[49, 97], ["wm.reshape", "sm.reshape", "wm.reshape", "tm.reshape", "numpy.zeros", "range", "tm.reshape", "sm.reshape", "tm.reshape", "numpy.zeros", "range", "cterm.append", "3_bgp_param.jacobian", "3_bgp_param.laplacian", "numpy.zeros", "tmp.reshape.reshape", "3_bgp_param.jacobian", "3_bgp_param.laplacian", "numpy.zeros", "tmp.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian"], ["", "def", "const_term", "(", "nr", ",", "wm", ",", "sm", ",", "tm", ",", "Phiw", ",", "Phit", ",", "Re", ",", "Ri", ",", "Pr", ")", ":", "\n", "\n", "#vorticity equation", "\n", "#jacobian", "\n", "    ", "w", "=", "wm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "s", "=", "sm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "\n", "tmp1", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ",", "s", ")", "\n", "\n", "#laplacian", "\n", "w", "=", "wm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp2", "=", "(", "1", "/", "Re", ")", "*", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", "\n", "\n", "#conduction", "\n", "dd", "=", "1.0", "/", "(", "2.0", "*", "dx", ")", "\n", "t", "=", "tm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp3", "=", "Ri", "*", "dd", "*", "(", "t", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "t", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "\n", "\n", "#compute constant term", "\n", "b_c", "=", "np", ".", "zeros", "(", "nr", ")", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "        ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "(", "tmp1", "+", "tmp2", "+", "tmp3", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_c", "[", "k", "]", "=", "tmp", ".", "T", "@", "Phiw", "[", ":", ",", "k", "]", "\n", "\n", "", "cterm", "=", "[", "b_c", "]", "\n", "\n", "# temperature equation", "\n", "#jacobian", "\n", "t", "=", "tm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "s", "=", "sm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp1", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ",", "s", ")", "\n", "\n", "#laplacian", "\n", "t", "=", "tm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp2", "=", "1", "/", "(", "Re", "*", "Pr", ")", "*", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ")", "\n", "\n", "#compute constant term", "\n", "b_c", "=", "np", ".", "zeros", "(", "nr", ")", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "        ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "(", "tmp1", "+", "tmp2", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_c", "[", "k", "]", "=", "tmp", ".", "T", "@", "Phit", "[", ":", ",", "k", "]", "\n", "\n", "", "cterm", ".", "append", "(", "b_c", ")", "\n", "return", "cterm", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.lin_term": [[99, 145], ["numpy.zeros", "range", "numpy.zeros", "range", "lterm.append", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.copy", "range", "numpy.copy", "numpy.copy", "numpy.copy", "range", "Phiw[].reshape", "3_bgp_param.laplacian", "Phiw[].reshape", "sm.reshape", "3_bgp_param.jacobian", "wm.reshape", "Phis[].reshape", "3_bgp_param.jacobian", "numpy.zeros", "numpy.copy", "tmp.reshape.reshape", "Phit[].reshape", "3_bgp_param.laplacian", "Phit[].reshape", "sm.reshape", "3_bgp_param.jacobian", "numpy.zeros", "numpy.copy", "tmp.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian"], ["", "def", "lin_term", "(", "nr", ",", "wm", ",", "sm", ",", "tm", ",", "Phiw", ",", "Phis", ",", "Phit", ",", "Re", ",", "Ri", ",", "Pr", ")", ":", "\n", "\n", "#vorticity equation", "\n", "    ", "b_l", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "#L1", "\n", "        ", "w", "=", "np", ".", "copy", "(", "Phiw", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "(", "1", "/", "Re", ")", "*", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", "\n", "\n", "w", "=", "np", ".", "copy", "(", "Phiw", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "s", "=", "np", ".", "copy", "(", "sm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp2", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ",", "s", ")", "\n", "\n", "w", "=", "np", ".", "copy", "(", "wm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "s", "=", "np", ".", "copy", "(", "Phis", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp3", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ",", "s", ")", "\n", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", "+", "tmp2", "+", "tmp3", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_l", "[", "i", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phiw", "[", ":", ",", "k", "]", "\n", "\n", "", "", "lterm", "=", "[", "b_l", "]", "\n", "\n", "#temperature equation", "\n", "b_l", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", "]", ")", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "#L1", "\n", "        ", "t", "=", "np", ".", "copy", "(", "Phit", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "1", "/", "(", "Re", "*", "Pr", ")", "*", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ")", "\n", "\n", "t", "=", "np", ".", "copy", "(", "Phit", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "s", "=", "np", ".", "copy", "(", "sm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp2", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ",", "s", ")", "\n", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", "+", "tmp2", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_l", "[", "i", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phit", "[", ":", ",", "k", "]", "\n", "\n", "", "", "lterm", ".", "append", "(", "b_l", ")", "\n", "\n", "return", "lterm", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.crosslin_term": [[147, 182], ["numpy.zeros", "range", "numpy.zeros", "range", "clterm.append", "numpy.copy", "range", "numpy.copy", "numpy.copy", "range", "Phit[].reshape", "numpy.zeros", "numpy.copy", "tmp.reshape.reshape", "tm.reshape", "Phis[].reshape", "3_bgp_param.jacobian", "numpy.zeros", "numpy.copy", "tmp.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian"], ["", "def", "crosslin_term", "(", "nr", ",", "wm", ",", "sm", ",", "tm", ",", "Phiw", ",", "Phis", ",", "Phit", ",", "Re", ",", "Ri", ",", "Pr", ")", ":", "\n", "\n", "#vorticity equation", "\n", "    ", "b_cl", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "#L2", "\n", "        ", "dd", "=", "1.0", "/", "(", "2.0", "*", "dx", ")", "\n", "t", "=", "np", ".", "copy", "(", "Phit", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "Ri", "*", "dd", "*", "(", "t", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "t", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "\n", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_cl", "[", "i", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phiw", "[", ":", ",", "k", "]", "\n", "\n", "", "", "clterm", "=", "[", "b_cl", "]", "\n", "\n", "#temperature equation", "\n", "b_cl", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", "]", ")", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "#L1", "\n", "        ", "t", "=", "np", ".", "copy", "(", "tm", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "s", "=", "np", ".", "copy", "(", "Phis", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ",", "s", ")", "\n", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", ")", "\n", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_cl", "[", "i", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phit", "[", ":", ",", "k", "]", "\n", "\n", "", "", "clterm", ".", "append", "(", "b_cl", ")", "\n", "return", "clterm", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.nonlin_term": [[184, 216], ["numpy.zeros", "range", "numpy.zeros", "range", "nlterm.append", "numpy.copy", "range", "numpy.copy", "range", "Phiw[].reshape", "numpy.copy", "numpy.zeros", "numpy.copy", "range", "Phit[].reshape", "numpy.copy", "numpy.zeros", "numpy.copy", "range", "Phis[].reshape", "3_bgp_param.jacobian", "tmp.reshape.reshape", "Phis[].reshape", "3_bgp_param.jacobian", "tmp.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian"], ["", "def", "nonlin_term", "(", "nr", ",", "Phiw", ",", "Phis", ",", "Phit", ",", "nx", ",", "ny", ")", ":", "\n", "\n", "#vorticity equation", "\n", "    ", "b_nl", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", ",", "nr", "]", ")", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "        ", "w", "=", "np", ".", "copy", "(", "Phiw", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "for", "j", "in", "range", "(", "nr", ")", ":", "\n", "            ", "s", "=", "np", ".", "copy", "(", "Phis", "[", ":", ",", "j", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ",", "s", ")", "\n", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", ")", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "                ", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_nl", "[", "i", ",", "j", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phiw", "[", ":", ",", "k", "]", "\n", "\n", "", "", "", "nlterm", "=", "[", "b_nl", "]", "\n", "\n", "#temperature equation            ", "\n", "b_nl", "=", "np", ".", "zeros", "(", "[", "nr", ",", "nr", ",", "nr", "]", ")", "\n", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "        ", "t", "=", "np", ".", "copy", "(", "Phit", "[", ":", ",", "i", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "for", "j", "in", "range", "(", "nr", ")", ":", "\n", "            ", "s", "=", "np", ".", "copy", "(", "Phis", "[", ":", ",", "j", "]", ".", "reshape", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", ")", "\n", "tmp1", "=", "-", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ",", "s", ")", "\n", "tmp", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tmp", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "np", ".", "copy", "(", "tmp1", ")", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "                ", "tmp", "=", "tmp", ".", "reshape", "(", "[", "(", "nx", "+", "1", ")", "*", "(", "ny", "+", "1", ")", ",", "]", ")", "\n", "b_nl", "[", "i", ",", "j", ",", "k", "]", "=", "tmp", ".", "T", "@", "Phit", "[", ":", ",", "k", "]", "\n", "\n", "", "", "", "nlterm", ".", "append", "(", "b_nl", ")", "\n", "return", "nlterm", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.GROMrhs": [[219, 247], ["a.ravel.ravel", "b.ravel.ravel", "range", "range", "numpy.zeros", "numpy.zeros", "range", "range", "range", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "range"], "function", ["None"], ["", "def", "GROMrhs", "(", "nr", ",", "cterm", ",", "lterm", ",", "clterm", ",", "nlterm", ",", "a", ",", "b", ")", ":", "\n", "\n", "#vorticity equation", "\n", "    ", "r1w", ",", "r2w", ",", "r3w", "=", "[", "np", ".", "zeros", "(", "nr", ")", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "r1t", ",", "r2t", ",", "r3t", "=", "[", "np", ".", "zeros", "(", "nr", ")", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "\n", "r1w", "=", "cterm", "[", "0", "]", "\n", "r1t", "=", "cterm", "[", "1", "]", "\n", "\n", "a", "=", "a", ".", "ravel", "(", ")", "\n", "b", "=", "b", ".", "ravel", "(", ")", "\n", "\n", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "        ", "r2w", "[", "k", "]", "=", "np", ".", "sum", "(", "lterm", "[", "0", "]", "[", ":", ",", "k", "]", "*", "a", ")", "+", "np", ".", "sum", "(", "clterm", "[", "0", "]", "[", ":", ",", "k", "]", "*", "b", ")", "\n", "r2t", "[", "k", "]", "=", "np", ".", "sum", "(", "lterm", "[", "1", "]", "[", ":", ",", "k", "]", "*", "b", ")", "+", "np", ".", "sum", "(", "clterm", "[", "1", "]", "[", ":", ",", "k", "]", "*", "a", ")", "\n", "\n", "", "for", "k", "in", "range", "(", "nr", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "nr", ")", ":", "\n", "#r3w[k] = r3w[k] + np.sum(nlterm[0][i,:,k]*a)*a[i]", "\n", "#r3t[k] = r3t[k] + np.sum(nlterm[1][i,:,k]*b)*a[i]", "\n", "            ", "for", "j", "in", "range", "(", "nr", ")", ":", "\n", "                ", "r3w", "[", "k", "]", "=", "r3w", "[", "k", "]", "+", "nlterm", "[", "0", "]", "[", "i", ",", "j", ",", "k", "]", "*", "a", "[", "i", "]", "*", "a", "[", "j", "]", "\n", "r3t", "[", "k", "]", "=", "r3t", "[", "k", "]", "+", "nlterm", "[", "1", "]", "[", "i", ",", "j", ",", "k", "]", "*", "a", "[", "j", "]", "*", "b", "[", "i", "]", "\n", "\n", "", "", "", "rw", "=", "r1w", "+", "r2w", "+", "r3w", "\n", "rt", "=", "r1t", "+", "r2t", "+", "r3t", "\n", "\n", "return", "rw", ",", "rt", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.RK3": [[250, 270], ["rhs", "rhs", "rhs"], "function", ["None"], ["", "def", "RK3", "(", "nr", ",", "rhs", ",", "cterm", ",", "lterm", ",", "clterm", ",", "nlterm", ",", "a", ",", "b", ",", "dt", ")", ":", "\n", "    ", "c1", "=", "1.0", "/", "3.0", "\n", "c2", "=", "2.0", "/", "3.0", "\n", "\n", "#stage-1", "\n", "rw", ",", "rt", "=", "rhs", "(", "nr", ",", "cterm", ",", "lterm", ",", "clterm", ",", "nlterm", ",", "a", ",", "b", ")", "\n", "a0", "=", "a", "+", "dt", "*", "rw", "\n", "b0", "=", "b", "+", "dt", "*", "rt", "\n", "\n", "#stage-2", "\n", "rw", ",", "rt", "=", "rhs", "(", "nr", ",", "cterm", ",", "lterm", ",", "clterm", ",", "nlterm", ",", "a0", ",", "b0", ")", "\n", "a0", "=", "0.75", "*", "a", "+", "0.25", "*", "a0", "+", "0.25", "*", "dt", "*", "rw", "\n", "b0", "=", "0.75", "*", "b", "+", "0.25", "*", "b0", "+", "0.25", "*", "dt", "*", "rt", "\n", "\n", "#stage-3", "\n", "rw", ",", "rt", "=", "rhs", "(", "nr", ",", "cterm", ",", "lterm", ",", "clterm", ",", "nlterm", ",", "a0", ",", "b0", ")", "\n", "a", "=", "c1", "*", "a", "+", "c2", "*", "a0", "+", "c2", "*", "dt", "*", "rw", "\n", "b", "=", "c1", "*", "b", "+", "c2", "*", "b0", "+", "c2", "*", "dt", "*", "rt", "\n", "\n", "return", "a", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.PODproj_svd": [[271, 274], ["numpy.dot"], "function", ["None"], ["", "def", "PODproj_svd", "(", "u", ",", "Phi", ")", ":", "#Projection", "\n", "    ", "a", "=", "np", ".", "dot", "(", "Phi", ".", "T", ",", "u", ")", "# u = Phi * a if shape of a is [nr,ns]", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.PODrec_svd": [[275, 278], ["numpy.dot"], "function", ["None"], ["", "def", "PODrec_svd", "(", "a", ",", "Phi", ")", ":", "#Reconstruction    ", "\n", "    ", "u", "=", "np", ".", "dot", "(", "Phi", ",", "a", ")", "\n", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.3_bgp_param.import_fom_data": [[280, 289], ["numpy.load", "str", "str", "str", "int", "str", "int"], "function", ["None"], ["", "def", "import_fom_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "\n", "data", "=", "np", ".", "load", "(", "filename", ")", "\n", "w", "=", "data", "[", "'w'", "]", "\n", "s", "=", "data", "[", "'s'", "]", "\n", "t", "=", "data", "[", "'t'", "]", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian": [[21, 39], ["None"], "function", ["None"], ["def", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "q", ",", "s", ")", ":", "\n", "    ", "gg", "=", "1.0", "/", "(", "4.0", "*", "dx", "*", "dy", ")", "\n", "hh", "=", "1.0", "/", "3.0", "\n", "#Arakawa 1:nx,1:ny   ", "\n", "j1", "=", "gg", "*", "(", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "(", "q", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "q", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", ")", "\n", "\n", "j2", "=", "gg", "*", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", "*", "(", "s", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", ")", "+", "q", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", ")", ")", "\n", "\n", "j3", "=", "gg", "*", "(", "q", "[", "2", ":", "nx", "+", "1", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "-", "q", "[", "0", ":", "nx", "-", "1", ",", "2", ":", "ny", "+", "1", "]", "*", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "+", "q", "[", "2", ":", "nx", "+", "1", ",", "0", ":", "ny", "-", "1", "]", "*", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", ")", "\n", "jac", "=", "(", "j1", "+", "j2", "+", "j3", ")", "*", "hh", "\n", "return", "jac", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian": [[40, 46], ["None"], "function", ["None"], ["", "def", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", ":", "\n", "    ", "aa", "=", "1.0", "/", "(", "dx", "*", "dx", ")", "\n", "bb", "=", "1.0", "/", "(", "dy", "*", "dy", ")", "\n", "lap", "=", "aa", "*", "(", "w", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "2.0", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "w", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "+", "bb", "*", "(", "w", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "2.0", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "w", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "\n", "return", "lap", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.initial": [[48, 58], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "int", "int"], "function", ["None"], ["", "def", "initial", "(", "nx", ",", "ny", ")", ":", "\n", "#resting flow", "\n", "    ", "w", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "s", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "#masrigli flow [for temperature IC]", "\n", "t", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "t", "[", ":", "int", "(", "nx", "/", "2", ")", "+", "1", ",", ":", "]", "=", "1.5", "\n", "t", "[", "int", "(", "nx", "/", "2", ")", "+", "1", ":", ",", ":", "]", "=", "1", "\n", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.RK3": [[60, 92], ["numpy.zeros", "numpy.zeros", "numpy.copy", "numpy.copy", "rhs", "1_bsolver_param.poisson_fst", "1_bsolver_param.tbc", "rhs", "1_bsolver_param.poisson_fst", "1_bsolver_param.tbc", "rhs", "1_bsolver_param.poisson_fst", "1_bsolver_param.tbc"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.poisson_fst", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.tbc", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.poisson_fst", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.tbc", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.poisson_fst", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.tbc"], ["", "def", "RK3", "(", "rhs", ",", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "Re", ",", "Pr", ",", "Ri", ",", "w", ",", "s", ",", "t", ",", "dt", ")", ":", "\n", "    ", "aa", "=", "1.0", "/", "3.0", "\n", "bb", "=", "2.0", "/", "3.0", "\n", "\n", "ww", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "tt", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "\n", "ww", "=", "np", ".", "copy", "(", "w", ")", "\n", "tt", "=", "np", ".", "copy", "(", "t", ")", "\n", "\n", "#stage-1", "\n", "rw", ",", "rt", "=", "rhs", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "Re", ",", "Pr", ",", "Ri", ",", "w", ",", "s", ",", "t", ")", "\n", "ww", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "dt", "*", "rw", "\n", "tt", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "t", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "dt", "*", "rt", "\n", "s", "=", "poisson_fst", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "ww", ")", "\n", "tt", "=", "tbc", "(", "tt", ")", "\n", "\n", "#stage-2", "\n", "rw", ",", "rt", "=", "rhs", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "Re", ",", "Pr", ",", "Ri", ",", "ww", ",", "s", ",", "tt", ")", "\n", "ww", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "0.75", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "0.25", "*", "ww", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "0.25", "*", "dt", "*", "rw", "\n", "tt", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "0.75", "*", "t", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "0.25", "*", "tt", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "0.25", "*", "dt", "*", "rt", "\n", "s", "=", "poisson_fst", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "ww", ")", "\n", "tt", "=", "tbc", "(", "tt", ")", "\n", "\n", "#stage-3", "\n", "rw", ",", "rt", "=", "rhs", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "Re", ",", "Pr", ",", "Ri", ",", "ww", ",", "s", ",", "tt", ")", "\n", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "aa", "*", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "bb", "*", "ww", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "bb", "*", "dt", "*", "rw", "\n", "t", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "aa", "*", "t", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "bb", "*", "tt", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "+", "bb", "*", "dt", "*", "rt", "\n", "s", "=", "poisson_fst", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", "\n", "t", "=", "tbc", "(", "t", ")", "\n", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.tbc": [[93, 100], ["None"], "function", ["None"], ["", "def", "tbc", "(", "t", ")", ":", "\n", "    ", "t", "[", "0", ",", ":", "]", "=", "t", "[", "1", ",", ":", "]", "\n", "t", "[", "-", "1", ",", ":", "]", "=", "t", "[", "-", "2", ",", ":", "]", "\n", "t", "[", ":", ",", "0", "]", "=", "t", "[", ":", ",", "1", "]", "\n", "t", "[", ":", ",", "-", "1", "]", "=", "t", "[", ":", ",", "-", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.poisson_fst": [[102, 127], ["numpy.zeros", "numpy.copy", "numpy.zeros", "scipy.fftpack.dst", "scipy.fftpack.dst", "numpy.linspace().reshape", "numpy.linspace().reshape", "scipy.fftpack.idst", "scipy.fftpack.idst", "numpy.zeros", "numpy.linspace", "numpy.linspace", "numpy.cos", "numpy.cos"], "function", ["None"], ["", "def", "poisson_fst", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", ":", "\n", "\n", "    ", "f", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "f", "=", "np", ".", "copy", "(", "-", "w", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", ")", "\n", "\n", "#DST: forward transform", "\n", "ff", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "ff", "=", "dst", "(", "f", ",", "axis", "=", "1", ",", "type", "=", "1", ")", "\n", "ff", "=", "dst", "(", "ff", ",", "axis", "=", "0", ",", "type", "=", "1", ")", "\n", "\n", "m", "=", "np", ".", "linspace", "(", "1", ",", "nx", "-", "1", ",", "nx", "-", "1", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "n", "=", "np", ".", "linspace", "(", "1", ",", "ny", "-", "1", ",", "ny", "-", "1", ")", ".", "reshape", "(", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "alpha", "=", "(", "2.0", "/", "(", "dx", "*", "dx", ")", ")", "*", "(", "np", ".", "cos", "(", "np", ".", "pi", "*", "m", "/", "nx", ")", "-", "1.0", ")", "+", "(", "2.0", "/", "(", "dy", "*", "dy", ")", ")", "*", "(", "np", ".", "cos", "(", "np", ".", "pi", "*", "n", "/", "ny", ")", "-", "1.0", ")", "\n", "u1", "=", "ff", "/", "alpha", "\n", "\n", "#IDST: inverse transform", "\n", "u", "=", "idst", "(", "u1", ",", "axis", "=", "1", ",", "type", "=", "1", ")", "\n", "u", "=", "idst", "(", "u", ",", "axis", "=", "0", ",", "type", "=", "1", ")", "\n", "u", "=", "u", "/", "(", "(", "2.0", "*", "nx", ")", "*", "(", "2.0", "*", "ny", ")", ")", "\n", "\n", "ue", "=", "np", ".", "zeros", "(", "[", "nx", "+", "1", ",", "ny", "+", "1", "]", ")", "\n", "ue", "[", "1", ":", "nx", ",", "1", ":", "ny", "]", "=", "u", "\n", "\n", "return", "ue", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.BoussRHS": [[129, 151], ["numpy.zeros", "numpy.zeros", "1_bsolver_param.laplacian", "1_bsolver_param.laplacian", "1_bsolver_param.jacobian", "1_bsolver_param.jacobian"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.laplacian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian", "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.jacobian"], ["", "def", "BoussRHS", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "Re", ",", "Pr", ",", "Ri", ",", "w", ",", "s", ",", "t", ")", ":", "\n", "\n", "# w-equation", "\n", "    ", "rw", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "rt", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "\n", "#laplacian terms", "\n", "Lw", "=", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ")", "\n", "Lt", "=", "laplacian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ")", "\n", "\n", "#conduction term", "\n", "dd", "=", "1.0", "/", "(", "2.0", "*", "dx", ")", "\n", "Cw", "=", "dd", "*", "(", "t", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "t", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "\n", "\n", "#Jacobian terms", "\n", "Jw", "=", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "w", ",", "s", ")", "\n", "Jt", "=", "jacobian", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "t", ",", "s", ")", "\n", "\n", "rw", "=", "-", "Jw", "+", "(", "1", "/", "Re", ")", "*", "Lw", "+", "Ri", "*", "Cw", "\n", "rt", "=", "-", "Jt", "+", "(", "1", "/", "(", "Re", "*", "Pr", ")", ")", "*", "Lt", "\n", "\n", "return", "rw", ",", "rt", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.velocity": [[153, 161], ["numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "def", "velocity", "(", "nx", ",", "ny", ",", "dx", ",", "dy", ",", "s", ")", ":", "\n", "    ", "u", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "v", "=", "np", ".", "zeros", "(", "[", "nx", "-", "1", ",", "ny", "-", "1", "]", ")", "\n", "# u = ds/dy", "\n", "u", "=", "(", "s", "[", "1", ":", "nx", ",", "2", ":", "ny", "+", "1", "]", "-", "s", "[", "1", ":", "nx", ",", "0", ":", "ny", "-", "1", "]", ")", "/", "(", "2", "*", "dy", ")", "\n", "# v = -ds/dx", "\n", "u", "=", "-", "(", "s", "[", "2", ":", "nx", "+", "1", ",", "1", ":", "ny", "]", "-", "s", "[", "0", ":", "nx", "-", "1", ",", "1", ":", "ny", "]", ")", "/", "(", "2", "*", "dx", ")", "\n", "return", "u", ",", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.1_bsolver_param.export_data": [[162, 168], ["numpy.savez", "str", "os.path.exists", "os.makedirs", "str", "str", "int", "str", "str", "int", "int", "str", "int"], "function", ["None"], ["", "def", "export_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ",", "w", ",", "s", ",", "t", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", ")", "\n", "", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "np", ".", "savez", "(", "filename", ",", "w", "=", "w", ",", "s", "=", "s", ",", "t", "=", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.coeff_determination": [[38, 42], ["tensorflow.keras.backend.sum", "tensorflow.keras.backend.sum", "tensorflow.keras.backend.square", "tensorflow.keras.backend.square", "tensorflow.keras.backend.mean", "tensorflow.keras.backend.epsilon"], "function", ["None"], ["def", "coeff_determination", "(", "y_pred", ",", "y_true", ")", ":", "#Order of function inputs is important here        ", "\n", "    ", "SS_res", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "y_pred", ")", ")", "\n", "SS_tot", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "K", ".", "mean", "(", "y_true", ")", ")", ")", "\n", "return", "(", "1", "-", "SS_res", "/", "(", "SS_tot", "+", "K", ".", "epsilon", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.make_keras_picklable": [[46, 57], ["tensorflow.python.keras.saving.saving_utils.model_metadata", "saving_utils.model_metadata.get", "tensorflow.python.keras.layers.serialize", "4_baepod_param..get_weights"], "function", ["None"], ["def", "make_keras_picklable", "(", ")", ":", "\n", "\n", "    ", "def", "__reduce__", "(", "self", ")", ":", "\n", "        ", "model_metadata", "=", "saving_utils", ".", "model_metadata", "(", "self", ")", "\n", "training_config", "=", "model_metadata", ".", "get", "(", "\"training_config\"", ",", "None", ")", "\n", "model", "=", "serialize", "(", "self", ")", "\n", "weights", "=", "self", ".", "get_weights", "(", ")", "\n", "return", "(", "unpack", ",", "(", "model", ",", "training_config", ",", "weights", ")", ")", "\n", "\n", "", "cls", "=", "Model", "\n", "cls", ".", "__reduce__", "=", "__reduce__", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.unpack": [[59, 69], ["tensorflow.python.keras.layers.deserialize", "tensorflow.python.keras.layers.deserialize.set_weights", "tensorflow.python.keras.layers.deserialize.compile", "tensorflow.python.keras.saving.saving_utils.compile_args_from_training_config"], "function", ["None"], ["", "def", "unpack", "(", "model", ",", "training_config", ",", "weights", ")", ":", "\n", "    ", "restored_model", "=", "deserialize", "(", "model", ")", "\n", "if", "training_config", "is", "not", "None", ":", "\n", "        ", "restored_model", ".", "compile", "(", "\n", "**", "saving_utils", ".", "compile_args_from_training_config", "(", "\n", "training_config", "\n", ")", "\n", ")", "\n", "", "restored_model", ".", "set_weights", "(", "weights", ")", "\n", "return", "restored_model", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.import_fom_data": [[71, 79], ["numpy.load", "str", "str", "str", "int", "str", "int"], "function", ["None"], ["", "def", "import_fom_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "data", "=", "np", ".", "load", "(", "filename", ")", "\n", "w", "=", "data", "[", "'w'", "]", "\n", "s", "=", "data", "[", "'s'", "]", "\n", "t", "=", "data", "[", "'t'", "]", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.PODproj_svd": [[81, 84], ["numpy.dot"], "function", ["None"], ["", "def", "PODproj_svd", "(", "u", ",", "Phi", ")", ":", "#Projection", "\n", "    ", "a", "=", "np", ".", "dot", "(", "Phi", ".", "T", ",", "u", ")", "# u = Phi * a if shape of a is [nr,ns]", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.PODrec_svd": [[85, 88], ["numpy.dot"], "function", ["None"], ["", "def", "PODrec_svd", "(", "a", ",", "Phi", ")", ":", "#Reconstruction    ", "\n", "    ", "u", "=", "np", ".", "dot", "(", "Phi", ",", "a", ")", "\n", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.AE_trainDNN": [[90, 160], ["dict", "tensorflow.keras.layers.Input", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.concatenate", "tensorflow.keras.models.Model", "tensorflow.keras.models.Model", "time.time", "tensorflow.keras.models.Model.compile", "tensorflow.keras.models.Model.fit", "tensorflow.keras.models.Model.evaluate", "print", "random.seed", "numpy.random.seed", "tensorflow.random.set_seed", "print", "print", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "time.time", "tensorflow.keras.models.Model.", "tensorflow.keras.models.Model."], "function", ["None"], ["", "def", "AE_trainDNN", "(", "input_dim", ",", "latent_dim", ",", "xtrain", ",", "xptrain", ",", "ytrain", ",", "xvalid", ",", "xpvalid", ",", "yvalid", ",", "configs", "=", "dict", "(", ")", ")", ":", "\n", "\n", "    ", "seed", "=", "configs", "[", "'seed'", "]", "\n", "epochs", "=", "configs", "[", "'epochs'", "]", "\n", "batch_size", "=", "configs", "[", "'batch_size'", "]", "\n", "activation", "=", "configs", "[", "'activation'", "]", "\n", "verbose", "=", "configs", "[", "'verbose'", "]", "\n", "initializer", "=", "None", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", "+", "1234", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "seed", "+", "2345", ")", "\n", "\n", "#n_samples = xtrain.shape[0]", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "0", "]", "==", "ytrain", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xtrain and ytrain! \\\n              The passed xtrain has {0} samples while ytrain have {1} samples.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "0", "]", ",", "ytrain", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xvalid", ".", "shape", "[", "0", "]", "==", "yvalid", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xvalid and yvalid! \\\n              The passed xvalid has {0} samples while yvalid have {1} samples.\"", ".", "format", "(", "xvalid", ".", "shape", "[", "0", "]", ",", "yvalid", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "#% Encoder", "\n", "", "input_data", "=", "Input", "(", "shape", "=", "(", "input_dim", ",", ")", ")", "# define the input to the encoder", "\n", "x", "=", "input_data", "\n", "x", "=", "Dense", "(", "128", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "64", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "32", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "8", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "encoded", "=", "Dense", "(", "latent_dim", ",", "activation", "=", "'linear'", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "encoder", "=", "Model", "(", "input_data", ",", "encoded", ",", "name", "=", "\"encoder\"", ")", "\n", "\n", "#% Decoder", "\n", "# start building the decoder model which will accept the output of the encoder", "\n", "latent_input", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ")", "\n", "pg_input", "=", "Input", "(", "shape", "=", "(", "1", ",", ")", ")", "\n", "x", "=", "concatenate", "(", "inputs", "=", "[", "latent_input", ",", "pg_input", "]", ")", "\n", "x", "=", "Dense", "(", "8", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "32", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "64", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "128", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "decoded", "=", "Dense", "(", "input_dim", ",", "activation", "=", "'linear'", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "decoder", "=", "Model", "(", "inputs", "=", "[", "latent_input", ",", "pg_input", "]", ",", "outputs", "=", "decoded", ",", "name", "=", "\"decoder\"", ")", "\n", "\n", "#% Autoencoder", "\n", "# autoencoder is the encoder + decoder", "\n", "autoencoder", "=", "Model", "(", "inputs", "=", "[", "input_data", ",", "pg_input", "]", ",", "outputs", "=", "decoder", "(", "inputs", "=", "[", "encoder", "(", "input_data", ")", ",", "pg_input", "]", ")", ",", "name", "=", "\"autoencoder\"", ")", "\n", "\n", "training_time_init", "=", "timer", ".", "time", "(", ")", "\n", "\n", "# compile model", "\n", "autoencoder", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'mean_squared_error'", ",", "metrics", "=", "[", "coeff_determination", "]", ")", "\n", "\n", "# fit the model (optimize weights and biases)", "\n", "history", "=", "autoencoder", ".", "fit", "(", "x", "=", "[", "xtrain", ",", "xptrain", "]", ",", "y", "=", "ytrain", ",", "epochs", "=", "epochs", ",", "batch_size", "=", "batch_size", ",", "\n", "validation_data", "=", "(", "[", "xvalid", ",", "xpvalid", "]", ",", "yvalid", ")", ",", "verbose", "=", "verbose", ")", "\n", "\n", "training_time", "=", "timer", ".", "time", "(", ")", "-", "training_time_init", "\n", "\n", "# evaluate the model", "\n", "scores", "=", "autoencoder", ".", "evaluate", "(", "x", "=", "[", "xtrain", ",", "xptrain", "]", ",", "y", "=", "ytrain", ",", "verbose", "=", "1", ")", "\n", "print", "(", "\"%s: %.2f%%\"", "%", "(", "autoencoder", ".", "metrics_names", "[", "1", "]", ",", "scores", "[", "1", "]", "*", "100", ")", ")", "\n", "\n", "train_loss", "=", "history", ".", "history", "[", "'loss'", "]", "\n", "valid_loss", "=", "history", ".", "history", "[", "'val_loss'", "]", "\n", "\n", "return", "encoder", ",", "decoder", ",", "autoencoder", ",", "train_loss", ",", "valid_loss", ",", "training_time", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.lstm_scaling": [[163, 197], ["xtrain.reshape", "sklearn.preprocessing.MinMaxScaler", "xscaler.fit.fit", "xscaler.fit.transform", "xscaler.transform.reshape", "sklearn.preprocessing.MinMaxScaler", "yscaler.fit.fit", "yscaler.fit.transform", "print", "numpy.arange", "sklearn.model_selection.train_test_split", "numpy.arange"], "function", ["None"], ["", "def", "lstm_scaling", "(", "lookback", ",", "xtrain", ",", "ytrain", ",", "low", "=", "-", "1", ",", "high", "=", "1", ",", "split", "=", "True", ",", "split_size", "=", "0.2", ",", "shuffle", "=", "True", ",", "scaling", "=", "True", ")", ":", "\n", "\n", "# Scaling xtrain", "\n", "    ", "p", ",", "q", ",", "r", "=", "xtrain", ".", "shape", "\n", "if", "not", "q", "==", "lookback", ":", "\n", "        ", "print", "(", "\"Size mismatch for xtrain! \\\n              The passed features has a lookback of {0} while expected {1}.\"", ".", "format", "(", "q", ",", "lookback", ")", ")", "\n", "raise", "AssertionError", "\n", "", "xtrain2d", "=", "xtrain", ".", "reshape", "(", "p", "*", "q", ",", "r", ")", "\n", "\n", "xscaler", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "low", ",", "high", ")", ")", "\n", "xscaler", "=", "xscaler", ".", "fit", "(", "xtrain2d", ")", "\n", "xtrain2d", "=", "xscaler", ".", "transform", "(", "xtrain2d", ")", "\n", "xtrain_sc", "=", "xtrain2d", ".", "reshape", "(", "p", ",", "q", ",", "r", ")", "\n", "\n", "yscaler", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "low", ",", "high", ")", ")", "\n", "yscaler", "=", "yscaler", ".", "fit", "(", "ytrain", ")", "\n", "ytrain_sc", "=", "yscaler", ".", "transform", "(", "ytrain", ")", "\n", "\n", "#split into training and testing", "\n", "if", "split", ":", "\n", "#split to train and test", "\n", "        ", "slice_list", "=", "np", ".", "arange", "(", "0", ",", "p", ",", "1", ")", "\n", "slice_train", ",", "slice_valid", "=", "train_test_split", "(", "slice_list", ",", "test_size", "=", "split_size", ",", "shuffle", "=", "shuffle", ")", "\n", "", "else", ":", "\n", "        ", "slice_train", "=", "np", ".", "arange", "(", "0", ",", "p", ",", "1", ")", "\n", "slice_valid", "=", "[", "]", "\n", "\n", "", "if", "not", "scaling", ":", "\n", "        ", "xtrain_sc", "=", "xtrain", "\n", "ytrain_sc", "=", "ytrain", "\n", "\n", "", "return", "xtrain_sc", "[", "slice_train", "]", ",", "xtrain_sc", "[", "slice_valid", "]", ",", "xscaler", ",", "ytrain_sc", "[", "slice_train", "]", ",", "ytrain_sc", "[", "slice_valid", "]", ",", "yscaler", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.lstm_train": [[199, 261], ["dict", "tensorflow.keras.layers.Input", "range", "tensorflow.keras.models.Model", "time.time", "tensorflow.keras.models.Model.compile", "tensorflow.keras.models.Model.fit", "tensorflow.keras.models.Model.evaluate", "print", "random.seed", "numpy.random.seed", "tensorflow.random.set_seed", "print", "print", "print", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dense", "time.time", "tensorflow.keras.layers.LSTM"], "function", ["None"], ["", "def", "lstm_train", "(", "xtrain", ",", "ytrain", ",", "xvalid", ",", "yvalid", ",", "configs", "=", "dict", "(", ")", ")", ":", "\n", "\n", "    ", "seed", "=", "configs", "[", "'seed'", "]", "\n", "nlayer", "=", "configs", "[", "'nlayer'", "]", "\n", "nhidden", "=", "configs", "[", "'nhidden'", "]", "\n", "epochs", "=", "configs", "[", "'epochs'", "]", "\n", "batch_size", "=", "configs", "[", "'batch_size'", "]", "\n", "activation", "=", "configs", "[", "'activation'", "]", "\n", "verbose", "=", "configs", "[", "'verbose'", "]", "\n", "lookback", "=", "configs", "[", "'lookback'", "]", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", "+", "1234", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "seed", "+", "2345", ")", "\n", "\n", "#n_samples = xtrain.shape[0]", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "0", "]", "==", "ytrain", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xtrain and ytrain! \\\n              The passed xtrain has {0} samples while ytrain have {1} samples.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "0", "]", ",", "ytrain", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xvalid", ".", "shape", "[", "0", "]", "==", "yvalid", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xvalid and yvalid! \\\n              The passed xvalid has {0} samples while yvalid have {1} samples.\"", ".", "format", "(", "xvalid", ".", "shape", "[", "0", "]", ",", "yvalid", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "1", "]", "==", "lookback", ":", "\n", "        ", "print", "(", "\"Size mismatch for xtrain! \\\n              The passed features has a lookback of {0} while expected {1}.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "1", "]", ",", "lookback", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "nd_in", "=", "xtrain", ".", "shape", "[", "2", "]", "\n", "nd_out", "=", "ytrain", ".", "shape", "[", "1", "]", "\n", "\n", "# functional API", "\n", "input_layer", "=", "Input", "(", "shape", "=", "(", "lookback", ",", "nd_in", ")", ")", "\n", "xl", "=", "input_layer", "\n", "for", "l", "in", "range", "(", "nlayer", "-", "1", ")", ":", "\n", "        ", "xl", "=", "LSTM", "(", "nhidden", ",", "return_sequences", "=", "True", ",", "activation", "=", "activation", ")", "(", "xl", ")", "\n", "", "xl", "=", "LSTM", "(", "nhidden", ",", "activation", "=", "activation", ")", "(", "xl", ")", "\n", "output_layer", "=", "Dense", "(", "nd_out", ")", "(", "xl", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "input_layer", ",", "outputs", "=", "output_layer", ")", "\n", "\n", "training_time_init", "=", "timer", ".", "time", "(", ")", "\n", "# compile model", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "'adam'", ",", "metrics", "=", "[", "'mean_squared_error'", "]", ")", "\n", "\n", "# fit the model (optimize weights and biases)", "\n", "history", "=", "model", ".", "fit", "(", "x", "=", "xtrain", ",", "y", "=", "ytrain", ",", "epochs", "=", "epochs", ",", "batch_size", "=", "batch_size", ",", "\n", "validation_data", "=", "(", "xvalid", ",", "yvalid", ")", ",", "verbose", "=", "verbose", ")", "\n", "\n", "training_time", "=", "timer", ".", "time", "(", ")", "-", "training_time_init", "\n", "\n", "# evaluate the model", "\n", "scores", "=", "model", ".", "evaluate", "(", "x", "=", "xtrain", ",", "y", "=", "ytrain", ",", "verbose", "=", "1", ")", "\n", "print", "(", "\"%s: %.2f%%\"", "%", "(", "model", ".", "metrics_names", "[", "1", "]", ",", "scores", "[", "1", "]", "*", "100", ")", ")", "\n", "\n", "train_loss", "=", "history", ".", "history", "[", "'loss'", "]", "\n", "valid_loss", "=", "history", ".", "history", "[", "'val_loss'", "]", "\n", "\n", "return", "model", ",", "train_loss", ",", "valid_loss", ",", "training_time", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.lstm_predict": [[263, 280], ["xscaler.transform", "xpred_sc.reshape.reshape", "model.predict", "yscaler.inverse_transform"], "function", ["None"], ["", "def", "lstm_predict", "(", "model", ",", "xscaler", ",", "yscaler", ",", "xpred", ",", "lookback", ",", "scaling", ")", ":", "\n", "\n", "    ", "nd_in", "=", "xpred", ".", "shape", "[", "1", "]", "\n", "xpred_sc", "=", "xscaler", ".", "transform", "(", "xpred", ")", "\n", "\n", "if", "not", "scaling", ":", "\n", "        ", "xpred_sc", "=", "xpred", "\n", "\n", "", "xpred_sc", "=", "xpred_sc", ".", "reshape", "(", "1", ",", "lookback", ",", "nd_in", ")", "\n", "\n", "ytest_sc", "=", "model", ".", "predict", "(", "xpred_sc", ")", "\n", "ytest", "=", "yscaler", ".", "inverse_transform", "(", "ytest_sc", ")", "\n", "\n", "if", "not", "scaling", ":", "\n", "        ", "ytest", "=", "ytest_sc", "\n", "\n", "", "return", "ytest", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.create_training_data_lstm": [[281, 319], ["numpy.array", "numpy.empty", "range", "print", "print", "range", "range"], "function", ["None"], ["", "def", "create_training_data_lstm", "(", "lookback", ",", "features", ",", "labels", ")", ":", "\n", "    ", "\"\"\"\n    create valid training data sets for the LSTM\n\n    Parameters\n    ----------\n    features: 2D numpy array with the shape of (num_of_samples x dimension_of_input)\n    labels: 2D numpy array with the shape of (num_of_samples x dimension_of_output)\n\n    Returns\n    -------\n    xtrain : 3D numpy array with the shape of (num_of_samples_lstm x lookback x dimension_of_input)\n    ytrain : 2D numpy array with the shape of (num_of_samples_lstm x dimension_of_output)\n    remark: note that num_of_samples_lstm can be different than num_of_samples as a result of embedding lookback\n\n    \"\"\"", "\n", "\n", "if", "not", "features", ".", "shape", "[", "0", "]", "==", "labels", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between features and labels! \\\n              The passed features has {0} samples while labels have {1} samples.\"", ".", "format", "(", "features", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "n_samples", "=", "features", ".", "shape", "[", "0", "]", "\n", "nd_in", "=", "features", ".", "shape", "[", "1", "]", "\n", "nd_out", "=", "labels", ".", "shape", "[", "1", "]", "\n", "\n", "ytrain", "=", "[", "(", "labels", "[", "i", ",", ":", "]", "-", "labels", "[", "i", "-", "1", ",", ":", "]", ")", "/", "dtrom", "for", "i", "in", "range", "(", "lookback", ",", "n_samples", ")", "]", "\n", "ytrain", "=", "np", ".", "array", "(", "ytrain", ")", "\n", "if", "not", "(", "ytrain", ".", "shape", "[", "0", "]", "==", "n_samples", "-", "lookback", ")", "and", "(", "ytrain", ".", "shape", "[", "1", "]", "==", "nd_out", ")", ":", "\n", "        ", "print", "(", "\"Inconsistent size for ytrain. This should never happen, please check here!\"", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "xtrain", "=", "np", ".", "empty", "(", "[", "n_samples", "-", "lookback", ",", "lookback", ",", "nd_in", "]", ",", "dtype", "=", "np", ".", "double", ")", "\n", "for", "i", "in", "range", "(", "n_samples", "-", "lookback", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "lookback", ")", ":", "\n", "            ", "xtrain", "[", "i", ",", "j", ",", ":", "]", "=", "features", "[", "i", "+", "j", ",", ":", "]", "\n", "\n", "", "", "return", "xtrain", ",", "ytrain", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.create_parametric_training_data_lstm": [[321, 357], ["range", "print", "4_baepod_param.create_training_data_lstm", "numpy.ones", "numpy.concatenate", "numpy.vstack", "numpy.vstack", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.create_training_data_lstm"], ["", "def", "create_parametric_training_data_lstm", "(", "lookback", ",", "parameters", ",", "features", ",", "labels", ")", ":", "\n", "    ", "\"\"\"\n    create valid training data sets for the LSTM from different sets of data corresponding to different parameters\n\n    Parameters\n    ----------\n    features: 2D numpy array with the shape of (num_of_parameters x num_of_samples x dimension_of_input)\n    labels: 2D numpy array with the shape of (num_of_parameters x num_of_samples x dimension_of_output)\n    same_time: bool, indicating wheter output and input are at the same time \n\n    Returns\n    -------\n    xtrain : 3D numpy array with the shape of (num_of_samples_lstm x lookback x dimension_of_input)\n    ytrain : 2D numpy array with the shape of (num_of_samples_lstm x dimension_of_output)\n    remark: note that num_of_samples_lstm can be different than num_of_samples as a result of embedding lookback\n\n    \"\"\"", "\n", "\n", "if", "not", "features", ".", "shape", "[", "0", "]", "==", "labels", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between features and labels! \\\n              The passed features has {0} parameter values while labels have {1} values.\"", ".", "format", "(", "features", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "n_param", "=", "features", ".", "shape", "[", "0", "]", "\n", "for", "p", "in", "range", "(", "n_param", ")", ":", "\n", "        ", "xt", ",", "yt", "=", "create_training_data_lstm", "(", "lookback", ",", "features", "[", "p", ",", "...", "]", ",", "labels", "[", "p", ",", "...", "]", ")", "\n", "xpt", "=", "np", ".", "ones", "(", "[", "xt", ".", "shape", "[", "0", "]", ",", "xt", ".", "shape", "[", "1", "]", ",", "1", "]", ")", "*", "parameters", "[", "p", "]", "\n", "\n", "if", "p", "==", "0", ":", "\n", "            ", "xtrain", "=", "np", ".", "concatenate", "(", "[", "xpt", ",", "xt", "]", ",", "axis", "=", "2", ")", "\n", "ytrain", "=", "yt", "\n", "", "else", ":", "\n", "            ", "xtrain", "=", "np", ".", "vstack", "(", "(", "xtrain", ",", "np", ".", "concatenate", "(", "[", "xpt", ",", "xt", "]", ",", "axis", "=", "2", ")", ")", ")", "\n", "ytrain", "=", "np", ".", "vstack", "(", "(", "ytrain", ",", "yt", ")", ")", "\n", "\n", "", "", "return", "xtrain", ",", "ytrain", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.4_baepod_param.plot_loss": [[358, 368], ["matplotlib.figure", "range", "matplotlib.semilogy", "matplotlib.semilogy", "matplotlib.title", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "train_loss", ",", "valid_loss", ")", ":", "\n", "    ", "plt", ".", "figure", "(", ")", "\n", "epochs", "=", "range", "(", "1", ",", "len", "(", "train_loss", ")", "+", "1", ")", "\n", "plt", ".", "semilogy", "(", "epochs", ",", "train_loss", ",", "'b'", ",", "label", "=", "'Training loss'", ")", "\n", "plt", ".", "semilogy", "(", "epochs", ",", "valid_loss", ",", "'r'", ",", "label", "=", "'Validation loss'", ")", "\n", "plt", ".", "title", "(", "'Training and validation loss'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.PODproj_svd": [[30, 33], ["numpy.dot"], "function", ["None"], ["def", "PODproj_svd", "(", "u", ",", "Phi", ")", ":", "#Projection", "\n", "    ", "a", "=", "np", ".", "dot", "(", "Phi", ".", "T", ",", "u", ")", "# u = Phi * a if shape of a is [nr,ns]", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.PODrec_svd": [[34, 37], ["numpy.dot"], "function", ["None"], ["", "def", "PODrec_svd", "(", "a", ",", "Phi", ")", ":", "#Reconstruction    ", "\n", "    ", "u", "=", "np", ".", "dot", "(", "Phi", ",", "a", ")", "\n", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.import_fom_data": [[38, 48], ["numpy.load", "str", "str", "str", "int", "str", "int"], "function", ["None"], ["", "def", "import_fom_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "#filename = './Results/'+folder+'/data_' + str(int(n))+'.npz'", "\n", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "\n", "data", "=", "np", ".", "load", "(", "filename", ")", "\n", "w", "=", "data", "[", "'w'", "]", "\n", "s", "=", "data", "[", "'s'", "]", "\n", "t", "=", "data", "[", "'t'", "]", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.tbc": [[49, 53], ["None"], "function", ["None"], ["", "def", "tbc", "(", "t", ")", ":", "\n", "    ", "t", "[", "-", "1", ",", ":", "]", "=", "t", "[", "-", "2", ",", ":", "]", "\n", "t", "[", ":", ",", "-", "1", "]", "=", "t", "[", ":", ",", "-", "2", "]", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.coeff_determination": [[56, 60], ["tensorflow.keras.backend.sum", "tensorflow.keras.backend.sum", "tensorflow.keras.backend.square", "tensorflow.keras.backend.square", "tensorflow.keras.backend.mean", "tensorflow.keras.backend.epsilon"], "function", ["None"], ["", "def", "coeff_determination", "(", "y_pred", ",", "y_true", ")", ":", "#Order of function inputs is important here        ", "\n", "    ", "SS_res", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "y_pred", ")", ")", "\n", "SS_tot", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "K", ".", "mean", "(", "y_true", ")", ")", ")", "\n", "return", "(", "1", "-", "SS_res", "/", "(", "SS_tot", "+", "K", ".", "epsilon", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.make_keras_picklable": [[64, 75], ["tensorflow.python.keras.saving.saving_utils.model_metadata", "saving_utils.model_metadata.get", "tensorflow.python.keras.layers.serialize", "6_bplots_param..get_weights"], "function", ["None"], ["def", "make_keras_picklable", "(", ")", ":", "\n", "\n", "    ", "def", "__reduce__", "(", "self", ")", ":", "\n", "        ", "model_metadata", "=", "saving_utils", ".", "model_metadata", "(", "self", ")", "\n", "training_config", "=", "model_metadata", ".", "get", "(", "\"training_config\"", ",", "None", ")", "\n", "model", "=", "serialize", "(", "self", ")", "\n", "weights", "=", "self", ".", "get_weights", "(", ")", "\n", "return", "(", "unpack", ",", "(", "model", ",", "training_config", ",", "weights", ")", ")", "\n", "\n", "", "cls", "=", "Model", "\n", "cls", ".", "__reduce__", "=", "__reduce__", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.6_bplots_param.unpack": [[77, 87], ["tensorflow.python.keras.layers.deserialize", "tensorflow.python.keras.layers.deserialize.set_weights", "tensorflow.python.keras.layers.deserialize.compile", "tensorflow.python.keras.saving.saving_utils.compile_args_from_training_config"], "function", ["None"], ["", "def", "unpack", "(", "model", ",", "training_config", ",", "weights", ")", ":", "\n", "    ", "restored_model", "=", "deserialize", "(", "model", ")", "\n", "if", "training_config", "is", "not", "None", ":", "\n", "        ", "restored_model", ".", "compile", "(", "\n", "**", "saving_utils", ".", "compile_args_from_training_config", "(", "\n", "training_config", "\n", ")", "\n", ")", "\n", "", "restored_model", ".", "set_weights", "(", "weights", ")", "\n", "return", "restored_model", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.coeff_determination": [[39, 43], ["tensorflow.keras.backend.sum", "tensorflow.keras.backend.sum", "tensorflow.keras.backend.square", "tensorflow.keras.backend.square", "tensorflow.keras.backend.mean", "tensorflow.keras.backend.epsilon"], "function", ["None"], ["def", "coeff_determination", "(", "y_pred", ",", "y_true", ")", ":", "#Order of function inputs is important here        ", "\n", "    ", "SS_res", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "y_pred", ")", ")", "\n", "SS_tot", "=", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", "-", "K", ".", "mean", "(", "y_true", ")", ")", ")", "\n", "return", "(", "1", "-", "SS_res", "/", "(", "SS_tot", "+", "K", ".", "epsilon", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.make_keras_picklable": [[47, 58], ["tensorflow.python.keras.saving.saving_utils.model_metadata", "saving_utils.model_metadata.get", "tensorflow.python.keras.layers.serialize", "5_bae_param..get_weights"], "function", ["None"], ["def", "make_keras_picklable", "(", ")", ":", "\n", "\n", "    ", "def", "__reduce__", "(", "self", ")", ":", "\n", "        ", "model_metadata", "=", "saving_utils", ".", "model_metadata", "(", "self", ")", "\n", "training_config", "=", "model_metadata", ".", "get", "(", "\"training_config\"", ",", "None", ")", "\n", "model", "=", "serialize", "(", "self", ")", "\n", "weights", "=", "self", ".", "get_weights", "(", ")", "\n", "return", "(", "unpack", ",", "(", "model", ",", "training_config", ",", "weights", ")", ")", "\n", "\n", "", "cls", "=", "Model", "\n", "cls", ".", "__reduce__", "=", "__reduce__", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.unpack": [[60, 70], ["tensorflow.python.keras.layers.deserialize", "tensorflow.python.keras.layers.deserialize.set_weights", "tensorflow.python.keras.layers.deserialize.compile", "tensorflow.python.keras.saving.saving_utils.compile_args_from_training_config"], "function", ["None"], ["", "def", "unpack", "(", "model", ",", "training_config", ",", "weights", ")", ":", "\n", "    ", "restored_model", "=", "deserialize", "(", "model", ")", "\n", "if", "training_config", "is", "not", "None", ":", "\n", "        ", "restored_model", ".", "compile", "(", "\n", "**", "saving_utils", ".", "compile_args_from_training_config", "(", "\n", "training_config", "\n", ")", "\n", ")", "\n", "", "restored_model", ".", "set_weights", "(", "weights", ")", "\n", "return", "restored_model", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.import_fom_data": [[72, 81], ["numpy.load", "str", "str", "str", "int", "str", "int"], "function", ["None"], ["", "def", "import_fom_data", "(", "Re", ",", "nx", ",", "ny", ",", "n", ")", ":", "\n", "    ", "folder", "=", "'/data_'", "+", "str", "(", "nx", ")", "+", "'_'", "+", "str", "(", "ny", ")", "\n", "filename", "=", "'./Results/Re_'", "+", "str", "(", "int", "(", "Re", ")", ")", "+", "folder", "+", "'/data_'", "+", "str", "(", "int", "(", "n", ")", ")", "+", "'.npz'", "\n", "\n", "data", "=", "np", ".", "load", "(", "filename", ")", "\n", "w", "=", "data", "[", "'w'", "]", "\n", "s", "=", "data", "[", "'s'", "]", "\n", "t", "=", "data", "[", "'t'", "]", "\n", "return", "w", ",", "s", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.AE_trainCNN": [[83, 165], ["dict", "tensorflow.keras.layers.Input", "tensorflow.keras.backend.int_shape", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.concatenate", "tensorflow.keras.models.Model", "tensorflow.keras.models.Model", "time.time", "tensorflow.keras.models.Model.compile", "tensorflow.keras.models.Model.fit", "tensorflow.keras.models.Model.evaluate", "print", "random.seed", "numpy.random.seed", "tensorflow.random.set_seed", "print", "print", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.Conv2DTranspose", "tensorflow.keras.layers.Conv2DTranspose", "tensorflow.keras.layers.Conv2DTranspose", "tensorflow.keras.layers.Conv2DTranspose", "tensorflow.keras.layers.Conv2DTranspose", "time.time", "numpy.prod", "tensorflow.keras.models.Model.", "tensorflow.keras.models.Model."], "function", ["None"], ["", "def", "AE_trainCNN", "(", "input_shape", ",", "latent_dim", ",", "xtrain", ",", "xptrain", ",", "ytrain", ",", "xvalid", ",", "xpvalid", ",", "yvalid", ",", "configs", "=", "dict", "(", ")", ")", ":", "\n", "\n", "    ", "seed", "=", "configs", "[", "'seed'", "]", "\n", "epochs", "=", "configs", "[", "'epochs'", "]", "\n", "batch_size", "=", "configs", "[", "'batch_size'", "]", "\n", "activation", "=", "configs", "[", "'activation'", "]", "\n", "verbose", "=", "configs", "[", "'verbose'", "]", "\n", "initializer", "=", "None", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "seed", ")", "\n", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "0", "]", "==", "ytrain", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xtrain and ytrain! \\\n              The passed xtrain has {0} samples while ytrain have {1} samples.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "0", "]", ",", "ytrain", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xvalid", ".", "shape", "[", "0", "]", "==", "yvalid", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xvalid and yvalid! \\\n              The passed xvalid has {0} samples while yvalid have {1} samples.\"", ".", "format", "(", "xvalid", ".", "shape", "[", "0", "]", ",", "yvalid", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "\n", "#% Encoder", "\n", "", "input_img", "=", "Input", "(", "shape", "=", "input_shape", ")", "# define the input to the encoder", "\n", "x", "=", "Conv2D", "(", "4", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "input_img", ")", "\n", "x", "=", "Conv2D", "(", "8", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "16", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "32", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "volumeSize", "=", "K", ".", "int_shape", "(", "x", ")", "\n", "x", "=", "Flatten", "(", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "256", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "64", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "encoded", "=", "Dense", "(", "latent_dim", ",", "activation", "=", "'linear'", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "encoder", "=", "Model", "(", "input_img", ",", "encoded", ",", "name", "=", "\"encoder\"", ")", "\n", "\n", "#% Decoder", "\n", "# start building the decoder model which will accept the output of the encoder    ", "\n", "latent_input", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ")", "\n", "pg_input", "=", "Input", "(", "shape", "=", "(", "1", ",", ")", ")", "\n", "x", "=", "concatenate", "(", "inputs", "=", "[", "latent_input", ",", "pg_input", "]", ")", "\n", "x", "=", "Dense", "(", "64", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "256", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "np", ".", "prod", "(", "volumeSize", "[", "1", ":", "]", ")", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ")", "(", "x", ")", "\n", "x", "=", "Reshape", "(", "(", "volumeSize", "[", "1", "]", ",", "volumeSize", "[", "2", "]", ",", "volumeSize", "[", "3", "]", ")", ")", "(", "x", ")", "\n", "x", "=", "Conv2DTranspose", "(", "32", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Conv2DTranspose", "(", "16", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Conv2DTranspose", "(", "8", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Conv2DTranspose", "(", "4", ",", "(", "5", ",", "5", ")", ",", "strides", "=", "2", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "initializer", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "# apply a single CONV_TRANSPOSE layer to recover the original depth of the image", "\n", "decoded", "=", "Conv2DTranspose", "(", "depth", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'linear'", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "decoder", "=", "Model", "(", "inputs", "=", "[", "latent_input", ",", "pg_input", "]", ",", "outputs", "=", "decoded", ",", "name", "=", "\"decoder\"", ")", "\n", "\n", "#% Autoencoder", "\n", "# autoencoder is the encoder + decoder", "\n", "autoencoder", "=", "Model", "(", "inputs", "=", "[", "input_img", ",", "pg_input", "]", ",", "outputs", "=", "decoder", "(", "inputs", "=", "[", "encoder", "(", "input_img", ")", ",", "pg_input", "]", ")", ",", "name", "=", "\"autoencoder\"", ")", "\n", "\n", "training_time_init", "=", "timer", ".", "time", "(", ")", "\n", "\n", "# compile model", "\n", "autoencoder", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'mse'", ")", "#,metrics=['mse'])        ", "\n", "\n", "# fit the model (optimize weights and biases)", "\n", "history", "=", "autoencoder", ".", "fit", "(", "x", "=", "[", "xtrain", ",", "xptrain", "]", ",", "y", "=", "ytrain", ",", "epochs", "=", "epochs", ",", "batch_size", "=", "batch_size", ",", "\n", "validation_data", "=", "(", "[", "xvalid", ",", "xpvalid", "]", ",", "yvalid", ")", ",", "verbose", "=", "verbose", ")", "\n", "\n", "training_time", "=", "timer", ".", "time", "(", ")", "-", "training_time_init", "\n", "\n", "# evaluate the model", "\n", "scores", "=", "autoencoder", ".", "evaluate", "(", "x", "=", "[", "xtrain", ",", "xptrain", "]", ",", "y", "=", "ytrain", ",", "verbose", "=", "1", ")", "\n", "print", "(", "\"%s: %.2f%%\"", "%", "(", "autoencoder", ".", "metrics_names", "[", "1", "]", ",", "scores", "[", "1", "]", "*", "100", ")", ")", "\n", "\n", "train_loss", "=", "history", ".", "history", "[", "'loss'", "]", "\n", "valid_loss", "=", "history", ".", "history", "[", "'val_loss'", "]", "\n", "\n", "return", "encoder", ",", "decoder", ",", "autoencoder", ",", "train_loss", ",", "valid_loss", ",", "training_time", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.lstm_scaling": [[168, 202], ["xtrain.reshape", "sklearn.preprocessing.MinMaxScaler", "xscaler.fit.fit", "xscaler.fit.transform", "xscaler.transform.reshape", "sklearn.preprocessing.MinMaxScaler", "yscaler.fit.fit", "yscaler.fit.transform", "print", "numpy.arange", "sklearn.model_selection.train_test_split", "numpy.arange"], "function", ["None"], ["", "def", "lstm_scaling", "(", "lookback", ",", "xtrain", ",", "ytrain", ",", "low", "=", "-", "1", ",", "high", "=", "1", ",", "split", "=", "True", ",", "split_size", "=", "0.2", ",", "shuffle", "=", "True", ",", "scaling", "=", "True", ")", ":", "\n", "\n", "# Scaling xtrain", "\n", "    ", "p", ",", "q", ",", "r", "=", "xtrain", ".", "shape", "\n", "if", "not", "q", "==", "lookback", ":", "\n", "        ", "print", "(", "\"Size mismatch for xtrain! \\\n              The passed features has a lookback of {0} while expected {1}.\"", ".", "format", "(", "q", ",", "lookback", ")", ")", "\n", "raise", "AssertionError", "\n", "", "xtrain2d", "=", "xtrain", ".", "reshape", "(", "p", "*", "q", ",", "r", ")", "\n", "\n", "xscaler", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "low", ",", "high", ")", ")", "\n", "xscaler", "=", "xscaler", ".", "fit", "(", "xtrain2d", ")", "\n", "xtrain2d", "=", "xscaler", ".", "transform", "(", "xtrain2d", ")", "\n", "xtrain_sc", "=", "xtrain2d", ".", "reshape", "(", "p", ",", "q", ",", "r", ")", "\n", "\n", "yscaler", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "low", ",", "high", ")", ")", "\n", "yscaler", "=", "yscaler", ".", "fit", "(", "ytrain", ")", "\n", "ytrain_sc", "=", "yscaler", ".", "transform", "(", "ytrain", ")", "\n", "\n", "#split into training and testing", "\n", "if", "split", ":", "\n", "#split to train and test", "\n", "        ", "slice_list", "=", "np", ".", "arange", "(", "0", ",", "p", ",", "1", ")", "\n", "slice_train", ",", "slice_valid", "=", "train_test_split", "(", "slice_list", ",", "test_size", "=", "split_size", ",", "shuffle", "=", "shuffle", ")", "\n", "", "else", ":", "\n", "        ", "slice_train", "=", "np", ".", "arange", "(", "0", ",", "p", ",", "1", ")", "\n", "slice_valid", "=", "[", "]", "\n", "\n", "", "if", "not", "scaling", ":", "\n", "        ", "xtrain_sc", "=", "xtrain", "\n", "ytrain_sc", "=", "ytrain", "\n", "\n", "", "return", "xtrain_sc", "[", "slice_train", "]", ",", "xtrain_sc", "[", "slice_valid", "]", ",", "xscaler", ",", "ytrain_sc", "[", "slice_train", "]", ",", "ytrain_sc", "[", "slice_valid", "]", ",", "yscaler", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.lstm_train": [[204, 268], ["dict", "tensorflow.keras.layers.Input", "range", "tensorflow.keras.models.Model", "time.time", "tensorflow.keras.models.Model.compile", "tensorflow.keras.models.Model.fit", "tensorflow.keras.models.Model.evaluate", "print", "random.seed", "numpy.random.seed", "tensorflow.random.set_seed", "print", "print", "print", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dense", "time.time", "tensorflow.keras.layers.LSTM"], "function", ["None"], ["", "def", "lstm_train", "(", "xtrain", ",", "ytrain", ",", "xvalid", ",", "yvalid", ",", "configs", "=", "dict", "(", ")", ")", ":", "\n", "\n", "    ", "seed", "=", "configs", "[", "'seed'", "]", "\n", "nlayer", "=", "configs", "[", "'nlayer'", "]", "\n", "nhidden", "=", "configs", "[", "'nhidden'", "]", "\n", "epochs", "=", "configs", "[", "'epochs'", "]", "\n", "batch_size", "=", "configs", "[", "'batch_size'", "]", "\n", "activation", "=", "configs", "[", "'activation'", "]", "\n", "verbose", "=", "configs", "[", "'verbose'", "]", "\n", "lookback", "=", "configs", "[", "'lookback'", "]", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "seed", ")", "\n", "\n", "#n_samples = xtrain.shape[0]", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "0", "]", "==", "ytrain", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xtrain and ytrain! \\\n              The passed xtrain has {0} samples while ytrain have {1} samples.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "0", "]", ",", "ytrain", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xvalid", ".", "shape", "[", "0", "]", "==", "yvalid", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between xvalid and yvalid! \\\n              The passed xvalid has {0} samples while yvalid have {1} samples.\"", ".", "format", "(", "xvalid", ".", "shape", "[", "0", "]", ",", "yvalid", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "if", "not", "xtrain", ".", "shape", "[", "1", "]", "==", "lookback", ":", "\n", "        ", "print", "(", "\"Size mismatch for xtrain! \\\n              The passed features has a lookback of {0} while expected {1}.\"", ".", "format", "(", "xtrain", ".", "shape", "[", "1", "]", ",", "lookback", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "nd_in", "=", "xtrain", ".", "shape", "[", "2", "]", "\n", "nd_out", "=", "ytrain", ".", "shape", "[", "1", "]", "\n", "\n", "# functional API", "\n", "input_layer", "=", "Input", "(", "shape", "=", "(", "lookback", ",", "nd_in", ")", ")", "\n", "xl", "=", "input_layer", "\n", "for", "l", "in", "range", "(", "nlayer", "-", "1", ")", ":", "\n", "        ", "xl", "=", "LSTM", "(", "nhidden", ",", "return_sequences", "=", "True", ",", "activation", "=", "activation", ")", "(", "xl", ")", "\n", "", "xl", "=", "LSTM", "(", "nhidden", ",", "activation", "=", "activation", ")", "(", "xl", ")", "\n", "output_layer", "=", "Dense", "(", "nd_out", ")", "(", "xl", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "input_layer", ",", "outputs", "=", "output_layer", ")", "\n", "\n", "training_time_init", "=", "timer", ".", "time", "(", ")", "\n", "\n", "# compile model", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "'adam'", ",", "metrics", "=", "[", "'mean_squared_error'", "]", ")", "\n", "\n", "# fit the model (optimize weights and biases)", "\n", "history", "=", "model", ".", "fit", "(", "x", "=", "xtrain", ",", "y", "=", "ytrain", ",", "epochs", "=", "epochs", ",", "batch_size", "=", "batch_size", ",", "\n", "validation_data", "=", "(", "xvalid", ",", "yvalid", ")", ",", "verbose", "=", "verbose", ")", "\n", "\n", "training_time", "=", "timer", ".", "time", "(", ")", "-", "training_time_init", "\n", "\n", "# evaluate the model", "\n", "scores", "=", "model", ".", "evaluate", "(", "x", "=", "xtrain", ",", "y", "=", "ytrain", ",", "verbose", "=", "1", ")", "\n", "print", "(", "\"%s: %.2f%%\"", "%", "(", "model", ".", "metrics_names", "[", "1", "]", ",", "scores", "[", "1", "]", "*", "100", ")", ")", "\n", "\n", "train_loss", "=", "history", ".", "history", "[", "'loss'", "]", "\n", "valid_loss", "=", "history", ".", "history", "[", "'val_loss'", "]", "\n", "\n", "return", "model", ",", "train_loss", ",", "valid_loss", ",", "training_time", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.lstm_predict": [[270, 287], ["xscaler.transform", "xpred_sc.reshape.reshape", "model.predict", "yscaler.inverse_transform"], "function", ["None"], ["", "def", "lstm_predict", "(", "model", ",", "xscaler", ",", "yscaler", ",", "xpred", ",", "lookback", ",", "scaling", ")", ":", "\n", "\n", "    ", "nd_in", "=", "xpred", ".", "shape", "[", "1", "]", "\n", "xpred_sc", "=", "xscaler", ".", "transform", "(", "xpred", ")", "\n", "\n", "if", "not", "scaling", ":", "\n", "        ", "xpred_sc", "=", "xpred", "\n", "\n", "", "xpred_sc", "=", "xpred_sc", ".", "reshape", "(", "1", ",", "lookback", ",", "nd_in", ")", "\n", "\n", "ytest_sc", "=", "model", ".", "predict", "(", "xpred_sc", ")", "\n", "ytest", "=", "yscaler", ".", "inverse_transform", "(", "ytest_sc", ")", "\n", "\n", "if", "not", "scaling", ":", "\n", "        ", "ytest", "=", "ytest_sc", "\n", "\n", "", "return", "ytest", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.create_training_data_lstm": [[288, 330], ["numpy.array", "numpy.empty", "range", "print", "print", "range", "range", "range"], "function", ["None"], ["", "def", "create_training_data_lstm", "(", "lookback", ",", "features", ",", "labels", ",", "euler", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    create valid training data sets for the LSTM\n\n    Parameters\n    ----------\n    features: 2D numpy array with the shape of (num_of_samples x dimension_of_input)\n    labels: 2D numpy array with the shape of (num_of_samples x dimension_of_output)\n\n    Returns\n    -------\n    xtrain : 3D numpy array with the shape of (num_of_samples_lstm x lookback x dimension_of_input)\n    ytrain : 2D numpy array with the shape of (num_of_samples_lstm x dimension_of_output)\n    remark: note that num_of_samples_lstm can be different than num_of_samples as a result of embedding lookback\n\n    \"\"\"", "\n", "\n", "if", "not", "features", ".", "shape", "[", "0", "]", "==", "labels", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between features and labels! \\\n              The passed features has {0} samples while labels have {1} samples.\"", ".", "format", "(", "features", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "n_samples", "=", "features", ".", "shape", "[", "0", "]", "\n", "nd_in", "=", "features", ".", "shape", "[", "1", "]", "\n", "nd_out", "=", "labels", ".", "shape", "[", "1", "]", "\n", "\n", "if", "euler", ":", "\n", "        ", "ytrain", "=", "[", "(", "labels", "[", "i", ",", ":", "]", "-", "labels", "[", "i", "-", "1", ",", ":", "]", ")", "/", "dtrom", "for", "i", "in", "range", "(", "lookback", ",", "n_samples", ")", "]", "\n", "", "else", ":", "\n", "        ", "ytrain", "=", "[", "labels", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "lookback", ",", "n_samples", ")", "]", "\n", "\n", "", "ytrain", "=", "np", ".", "array", "(", "ytrain", ")", "\n", "if", "not", "(", "ytrain", ".", "shape", "[", "0", "]", "==", "n_samples", "-", "lookback", ")", "and", "(", "ytrain", ".", "shape", "[", "1", "]", "==", "nd_out", ")", ":", "\n", "        ", "print", "(", "\"Inconsistent size for ytrain. This should never happen, please check here!\"", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "xtrain", "=", "np", ".", "empty", "(", "[", "n_samples", "-", "lookback", ",", "lookback", ",", "nd_in", "]", ",", "dtype", "=", "np", ".", "double", ")", "\n", "for", "i", "in", "range", "(", "n_samples", "-", "lookback", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "lookback", ")", ":", "\n", "            ", "xtrain", "[", "i", ",", "j", ",", ":", "]", "=", "features", "[", "i", "+", "j", ",", ":", "]", "\n", "\n", "", "", "return", "xtrain", ",", "ytrain", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.create_parametric_training_data_lstm": [[331, 367], ["range", "print", "5_bae_param.create_training_data_lstm", "numpy.ones", "numpy.concatenate", "numpy.vstack", "numpy.vstack", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.create_training_data_lstm"], ["", "def", "create_parametric_training_data_lstm", "(", "lookback", ",", "parameters", ",", "features", ",", "labels", ")", ":", "\n", "    ", "\"\"\"\n    create valid training data sets for the LSTM from different sets of data corresponding to different parameters\n\n    Parameters\n    ----------\n    features: 2D numpy array with the shape of (num_of_parameters x num_of_samples x dimension_of_input)\n    labels: 2D numpy array with the shape of (num_of_parameters x num_of_samples x dimension_of_output)\n    same_time: bool, indicating wheter output and input are at the same time \n\n    Returns\n    -------\n    xtrain : 3D numpy array with the shape of (num_of_samples_lstm x lookback x dimension_of_input)\n    ytrain : 2D numpy array with the shape of (num_of_samples_lstm x dimension_of_output)\n    remark: note that num_of_samples_lstm can be different than num_of_samples as a result of embedding lookback\n\n    \"\"\"", "\n", "\n", "if", "not", "features", ".", "shape", "[", "0", "]", "==", "labels", ".", "shape", "[", "0", "]", ":", "\n", "        ", "print", "(", "\"Size mismatch between features and labels! \\\n              The passed features has {0} parameter values while labels have {1} values.\"", ".", "format", "(", "features", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ")", "\n", "raise", "AssertionError", "\n", "\n", "", "n_param", "=", "features", ".", "shape", "[", "0", "]", "\n", "for", "p", "in", "range", "(", "n_param", ")", ":", "\n", "        ", "xt", ",", "yt", "=", "create_training_data_lstm", "(", "lookback", ",", "features", "[", "p", ",", "...", "]", ",", "labels", "[", "p", ",", "...", "]", ")", "\n", "xpt", "=", "np", ".", "ones", "(", "[", "xt", ".", "shape", "[", "0", "]", ",", "xt", ".", "shape", "[", "1", "]", ",", "1", "]", ")", "*", "parameters", "[", "p", "]", "\n", "\n", "if", "p", "==", "0", ":", "\n", "            ", "xtrain", "=", "np", ".", "concatenate", "(", "[", "xpt", ",", "xt", "]", ",", "axis", "=", "2", ")", "\n", "ytrain", "=", "yt", "\n", "", "else", ":", "\n", "            ", "xtrain", "=", "np", ".", "vstack", "(", "(", "xtrain", ",", "np", ".", "concatenate", "(", "[", "xpt", ",", "xt", "]", ",", "axis", "=", "2", ")", ")", ")", "\n", "ytrain", "=", "np", ".", "vstack", "(", "(", "ytrain", ",", "yt", ")", ")", "\n", "\n", "", "", "return", "xtrain", ",", "ytrain", "\n", "\n"]], "home.repos.pwc.inspect_result.shady-ahmed_nlpod.None.5_bae_param.plot_loss": [[368, 378], ["matplotlib.figure", "range", "matplotlib.semilogy", "matplotlib.semilogy", "matplotlib.title", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "train_loss", ",", "valid_loss", ")", ":", "\n", "    ", "plt", ".", "figure", "(", ")", "\n", "epochs", "=", "range", "(", "1", ",", "len", "(", "train_loss", ")", "+", "1", ")", "\n", "plt", ".", "semilogy", "(", "epochs", ",", "train_loss", ",", "'b'", ",", "label", "=", "'Training loss'", ")", "\n", "plt", ".", "semilogy", "(", "epochs", ",", "valid_loss", ",", "'r'", ",", "label", "=", "'Validation loss'", ")", "\n", "plt", ".", "title", "(", "'Training and validation loss'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "return", "\n", "\n"]]}