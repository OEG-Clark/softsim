{"home.repos.pwc.inspect_result.openai_robosumo.None.setup.read": [[4, 6], ["open().read", "open", "os.path.join", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.openai_robosumo.None.setup.read"], ["def", "read", "(", "fname", ")", ":", "\n", "    ", "return", "open", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "fname", ")", ")", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.None.setup.package_files": [[7, 13], ["os.walk", "paths.append", "os.path.join"], "function", ["None"], ["", "def", "package_files", "(", "directory", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "for", "(", "path", ",", "directories", ",", "filenames", ")", "in", "os", ".", "walk", "(", "directory", ")", ":", "\n", "        ", "for", "filename", "in", "filenames", ":", "\n", "            ", "paths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "'..'", ",", "path", ",", "filename", ")", ")", "\n", "", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.demos.play.main": [[21, 113], ["click.command", "click.option", "click.option", "click.option", "click.option", "os.path.dirname", "os.path.join", "zip", "gym.make", "tensorflow.ConfigProto", "tensorflow.Session", "tf.Session.__enter__", "enumerate", "tf.Session.run", "range", "gym.make.reset", "print", "os.path.realpath", "[].lower", "[].lower", "param_paths.append", "policy.append", "tensorflow.variables_initializer", "robosumo.policy_zoo.utils.load_params", "len", "robosumo.policy_zoo.utils.set_from_flat", "gym.make.render", "tuple", "gym.make.step", "range", "click.Choice", "os.path.join", "str", "tensorflow.global_variables", "policy[].get_variables", "range", "range", "len", "range", "gym.make.reset", "range", "len", "len", "len", "print", "len", "policy[].reset", "print", "gym.make.split", "gym.make.split", "pi.act", "enumerate", "print", "range", "len"], "function", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.reset", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.load_params", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.set_from_flat", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.get_variables", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.reset", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.reset", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.act"], ["@", "click", ".", "command", "(", ")", "\n", "@", "click", ".", "option", "(", "\"--env\"", ",", "type", "=", "str", ",", "\n", "default", "=", "\"RoboSumo-Ant-vs-Ant-v0\"", ",", "show_default", "=", "True", ",", "\n", "help", "=", "\"Name of the environment.\"", ")", "\n", "@", "click", ".", "option", "(", "\"--policy-names\"", ",", "nargs", "=", "2", ",", "type", "=", "click", ".", "Choice", "(", "[", "\"mlp\"", ",", "\"lstm\"", "]", ")", ",", "\n", "default", "=", "(", "\"mlp\"", ",", "\"mlp\"", ")", ",", "show_default", "=", "True", ",", "\n", "help", "=", "\"Policy names.\"", ")", "\n", "@", "click", ".", "option", "(", "\"--param-versions\"", ",", "nargs", "=", "2", ",", "type", "=", "int", ",", "\n", "default", "=", "(", "1", ",", "1", ")", ",", "show_default", "=", "True", ",", "\n", "help", "=", "\"Policy parameter versions.\"", ")", "\n", "@", "click", ".", "option", "(", "\"--max_episodes\"", ",", "type", "=", "int", ",", "\n", "default", "=", "20", ",", "show_default", "=", "True", ",", "\n", "help", "=", "\"Number of episodes.\"", ")", "\n", "\n", "def", "main", "(", "env", ",", "policy_names", ",", "param_versions", ",", "max_episodes", ")", ":", "\n", "# Construct paths to parameters", "\n", "    ", "curr_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "params_dir", "=", "os", ".", "path", ".", "join", "(", "curr_dir", ",", "\"../robosumo/policy_zoo/assets\"", ")", "\n", "agent_names", "=", "[", "env", ".", "split", "(", "'-'", ")", "[", "1", "]", ".", "lower", "(", ")", ",", "env", ".", "split", "(", "'-'", ")", "[", "3", "]", ".", "lower", "(", ")", "]", "\n", "param_paths", "=", "[", "]", "\n", "for", "a", ",", "p", ",", "v", "in", "zip", "(", "agent_names", ",", "policy_names", ",", "param_versions", ")", ":", "\n", "        ", "param_paths", ".", "append", "(", "\n", "os", ".", "path", ".", "join", "(", "params_dir", ",", "a", ",", "p", ",", "\"agent-params-v%d.npy\"", "%", "v", ")", "\n", ")", "\n", "\n", "# Create environment", "\n", "", "env", "=", "gym", ".", "make", "(", "env", ")", "\n", "\n", "for", "agent", "in", "env", ".", "agents", ":", "\n", "        ", "agent", ".", "_adjust_z", "=", "-", "0.5", "\n", "\n", "", "tf_config", "=", "tf", ".", "ConfigProto", "(", "\n", "inter_op_parallelism_threads", "=", "1", ",", "\n", "intra_op_parallelism_threads", "=", "1", ")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "tf_config", ")", "\n", "sess", ".", "__enter__", "(", ")", "\n", "\n", "# Initialize policies", "\n", "policy", "=", "[", "]", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "policy_names", ")", ":", "\n", "        ", "scope", "=", "\"policy\"", "+", "str", "(", "i", ")", "\n", "policy", ".", "append", "(", "\n", "POLICY_FUNC", "[", "name", "]", "(", "scope", "=", "scope", ",", "reuse", "=", "False", ",", "\n", "ob_space", "=", "env", ".", "observation_space", ".", "spaces", "[", "i", "]", ",", "\n", "ac_space", "=", "env", ".", "action_space", ".", "spaces", "[", "i", "]", ",", "\n", "hiddens", "=", "[", "64", ",", "64", "]", ",", "normalize", "=", "True", ")", "\n", ")", "\n", "", "sess", ".", "run", "(", "tf", ".", "variables_initializer", "(", "tf", ".", "global_variables", "(", ")", ")", ")", "\n", "\n", "# Load policy parameters", "\n", "params", "=", "[", "load_params", "(", "path", ")", "for", "path", "in", "param_paths", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "policy", ")", ")", ":", "\n", "        ", "set_from_flat", "(", "policy", "[", "i", "]", ".", "get_variables", "(", ")", ",", "params", "[", "i", "]", ")", "\n", "\n", "# Play matches between the agents", "\n", "", "num_episodes", ",", "nstep", "=", "0", ",", "0", "\n", "total_reward", "=", "[", "0.0", "for", "_", "in", "range", "(", "len", "(", "policy", ")", ")", "]", "\n", "total_scores", "=", "[", "0", "for", "_", "in", "range", "(", "len", "(", "policy", ")", ")", "]", "\n", "observation", "=", "env", ".", "reset", "(", ")", "\n", "print", "(", "\"-\"", "*", "5", "+", "\"Episode %d \"", "%", "(", "num_episodes", "+", "1", ")", "+", "\"-\"", "*", "5", ")", "\n", "while", "num_episodes", "<", "max_episodes", ":", "\n", "        ", "env", ".", "render", "(", ")", "\n", "action", "=", "tuple", "(", "[", "\n", "pi", ".", "act", "(", "stochastic", "=", "True", ",", "observation", "=", "observation", "[", "i", "]", ")", "[", "0", "]", "\n", "for", "i", ",", "pi", "in", "enumerate", "(", "policy", ")", "\n", "]", ")", "\n", "observation", ",", "reward", ",", "done", ",", "infos", "=", "env", ".", "step", "(", "action", ")", "\n", "\n", "nstep", "+=", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "policy", ")", ")", ":", "\n", "            ", "total_reward", "[", "i", "]", "+=", "reward", "[", "i", "]", "\n", "", "if", "done", "[", "0", "]", ":", "\n", "            ", "num_episodes", "+=", "1", "\n", "draw", "=", "True", "\n", "for", "i", "in", "range", "(", "len", "(", "policy", ")", ")", ":", "\n", "                ", "if", "'winner'", "in", "infos", "[", "i", "]", ":", "\n", "                    ", "draw", "=", "False", "\n", "total_scores", "[", "i", "]", "+=", "1", "\n", "print", "(", "\"Winner: Agent {}, Scores: {}, Total Episodes: {}\"", "\n", ".", "format", "(", "i", ",", "total_scores", ",", "num_episodes", ")", ")", "\n", "", "", "if", "draw", ":", "\n", "                ", "print", "(", "\"Match tied: Agent {}, Scores: {}, Total Episodes: {}\"", "\n", ".", "format", "(", "i", ",", "total_scores", ",", "num_episodes", ")", ")", "\n", "", "observation", "=", "env", ".", "reset", "(", ")", "\n", "nstep", "=", "0", "\n", "total_reward", "=", "[", "0.0", "for", "_", "in", "range", "(", "len", "(", "policy", ")", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "policy", ")", ")", ":", "\n", "                ", "policy", "[", "i", "]", ".", "reset", "(", ")", "\n", "\n", "", "if", "num_episodes", "<", "max_episodes", ":", "\n", "                ", "print", "(", "\"-\"", "*", "5", "+", "\"Episode %d \"", "%", "(", "num_episodes", "+", "1", ")", "+", "\"-\"", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.Policy.reset": [[16, 18], ["None"], "methods", ["None"], ["    ", "def", "reset", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.Policy.act": [[19, 21], ["None"], "methods", ["None"], ["", "def", "act", "(", "self", ",", "observation", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.MLPPolicy.__init__": [[24, 75], ["tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "enumerate", "enumerate", "utils.dense", "tensorflow.get_variable", "utils.DiagonalGaussian", "utils.switch", "tensorflow.get_variable_scope", "utils.RunningMeanStd", "tensorflow.clip_by_value", "tensorflow.nn.tanh", "utils.dense", "tensorflow.nn.tanh", "policy.MLPPolicy.pd.sample", "policy.MLPPolicy.pd.mode", "list", "utils.RunningMeanStd", "utils.dense", "utils.dense", "tensorflow.zeros_initializer"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.dense", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.switch", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.dense", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.sample", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.mode", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.dense", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.dense"], ["    ", "def", "__init__", "(", "self", ",", "scope", ",", "*", ",", "ob_space", ",", "ac_space", ",", "hiddens", ",", "\n", "normalize", "=", "False", ",", "\n", "reuse", "=", "False", ")", ":", "\n", "        ", "self", ".", "recurrent", "=", "False", "\n", "self", ".", "normalized", "=", "normalize", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "self", ".", "scope", "=", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "\n", "self", ".", "observation_ph", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "[", "None", "]", "+", "list", "(", "ob_space", ".", "shape", ")", ",", "name", "=", "\"observation\"", ")", "\n", "self", ".", "taken_action_ph", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "[", "None", ",", "ac_space", ".", "shape", "[", "0", "]", "]", ",", "name", "=", "\"taken_action\"", ")", "\n", "self", ".", "stochastic_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "(", ")", ",", "name", "=", "\"stochastic\"", ")", "\n", "\n", "if", "self", ".", "normalized", ":", "\n", "                ", "if", "self", ".", "normalized", "!=", "'ob'", ":", "\n", "                    ", "self", ".", "ret_rms", "=", "RunningMeanStd", "(", "scope", "=", "\"retfilter\"", ")", "\n", "", "self", ".", "ob_rms", "=", "RunningMeanStd", "(", "\n", "scope", "=", "\"obsfilter\"", ",", "shape", "=", "ob_space", ".", "shape", ")", "\n", "\n", "# Observation filtering", "\n", "", "obz", "=", "self", ".", "observation_ph", "\n", "if", "self", ".", "normalized", ":", "\n", "                ", "obz", "=", "tf", ".", "clip_by_value", "(", "(", "self", ".", "observation_ph", "-", "self", ".", "ob_rms", ".", "mean", ")", "/", "self", ".", "ob_rms", ".", "std", ",", "-", "5.0", ",", "5.0", ")", "\n", "\n", "# Value", "\n", "", "last_out", "=", "obz", "\n", "for", "i", ",", "hid_size", "in", "enumerate", "(", "hiddens", ")", ":", "\n", "                ", "last_out", "=", "tf", ".", "nn", ".", "tanh", "(", "\n", "dense", "(", "last_out", ",", "hid_size", ",", "\"vffc%i\"", "%", "(", "i", "+", "1", ")", ")", ")", "\n", "", "self", ".", "vpredz", "=", "dense", "(", "last_out", ",", "1", ",", "\"vffinal\"", ")", "[", ":", ",", "0", "]", "\n", "\n", "self", ".", "vpred", "=", "self", ".", "vpredz", "\n", "if", "self", ".", "normalized", "and", "self", ".", "normalized", "!=", "'ob'", ":", "\n", "                ", "self", ".", "vpred", "=", "self", ".", "vpredz", "*", "self", ".", "ret_rms", ".", "std", "+", "self", ".", "ret_rms", ".", "mean", "\n", "\n", "# Policy", "\n", "", "last_out", "=", "obz", "\n", "for", "i", ",", "hid_size", "in", "enumerate", "(", "hiddens", ")", ":", "\n", "                ", "last_out", "=", "tf", ".", "nn", ".", "tanh", "(", "\n", "dense", "(", "last_out", ",", "hid_size", ",", "\"polfc%i\"", "%", "(", "i", "+", "1", ")", ")", ")", "\n", "", "mean", "=", "dense", "(", "last_out", ",", "ac_space", ".", "shape", "[", "0", "]", ",", "\"polfinal\"", ")", "\n", "logstd", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "\"logstd\"", ",", "\n", "shape", "=", "[", "1", ",", "ac_space", ".", "shape", "[", "0", "]", "]", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "\n", "self", ".", "pd", "=", "DiagonalGaussian", "(", "mean", ",", "logstd", ")", "\n", "self", ".", "sampled_action", "=", "switch", "(", "\n", "self", ".", "stochastic_ph", ",", "self", ".", "pd", ".", "sample", "(", ")", ",", "self", ".", "pd", ".", "mode", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.MLPPolicy.act": [[76, 84], ["tensorflow.get_default_session().run", "tensorflow.get_default_session"], "methods", ["None"], ["", "", "def", "act", "(", "self", ",", "observation", ",", "stochastic", "=", "True", ")", ":", "\n", "        ", "outputs", "=", "[", "self", ".", "sampled_action", ",", "self", ".", "vpred", "]", "\n", "feed_dict", "=", "{", "\n", "self", ".", "observation_ph", ":", "observation", "[", "None", "]", ",", "\n", "self", ".", "stochastic_ph", ":", "stochastic", ",", "\n", "}", "\n", "a", ",", "v", "=", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "outputs", ",", "feed_dict", ")", "\n", "return", "a", "[", "0", "]", ",", "{", "'vpred'", ":", "v", "[", "0", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.MLPPolicy.get_variables": [[85, 87], ["tensorflow.get_collection"], "methods", ["None"], ["", "def", "get_variables", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ",", "self", ".", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.__init__": [[90, 179], ["tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "policy.LSTMPolicy.zero_state.append", "policy.LSTMPolicy.zero_state.append", "policy.LSTMPolicy.state_in_ph.append", "policy.LSTMPolicy.state_in_ph.append", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.nn.dynamic_rnn", "policy.LSTMPolicy.state_out.append", "tensorflow.contrib.rnn.BasicLSTMCell", "policy.LSTMPolicy.zero_state.append", "policy.LSTMPolicy.zero_state.append", "policy.LSTMPolicy.state_in_ph.append", "policy.LSTMPolicy.state_in_ph.append", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.nn.dynamic_rnn", "policy.LSTMPolicy.state_out.append", "tensorflow.contrib.layers.fully_connected", "tensorflow.get_variable", "utils.DiagonalGaussian", "utils.switch", "numpy.array", "tuple", "tensorflow.get_variable_scope", "utils.RunningMeanStd", "tensorflow.clip_by_value", "tensorflow.contrib.layers.fully_connected", "numpy.zeros", "numpy.zeros", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.layers.fully_connected", "numpy.zeros", "numpy.zeros", "tensorflow.placeholder", "tensorflow.placeholder", "policy.LSTMPolicy.pd.sample", "policy.LSTMPolicy.pd.mode", "list", "utils.RunningMeanStd", "tensorflow.zeros_initializer"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.switch", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.sample", "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.mode"], ["    ", "def", "__init__", "(", "self", ",", "scope", ",", "*", ",", "ob_space", ",", "ac_space", ",", "hiddens", ",", "\n", "reuse", "=", "False", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "self", ".", "recurrent", "=", "True", "\n", "self", ".", "normalized", "=", "normalize", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "self", ".", "scope", "=", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "\n", "self", ".", "observation_ph", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", "+", "list", "(", "ob_space", ".", "shape", ")", ",", "\n", "name", "=", "\"observation\"", ")", "\n", "self", ".", "taken_action_ph", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "ac_space", ".", "shape", "[", "0", "]", "]", ",", "\n", "name", "=", "\"taken_action\"", ")", "\n", "self", ".", "stochastic_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "(", ")", ",", "name", "=", "\"stochastic\"", ")", "\n", "\n", "if", "self", ".", "normalized", ":", "\n", "                ", "if", "self", ".", "normalized", "!=", "'ob'", ":", "\n", "                    ", "self", ".", "ret_rms", "=", "RunningMeanStd", "(", "scope", "=", "\"retfilter\"", ")", "\n", "", "self", ".", "ob_rms", "=", "RunningMeanStd", "(", "\n", "scope", "=", "\"obsfilter\"", ",", "\n", "shape", "=", "ob_space", ".", "shape", ")", "\n", "\n", "# Observation filtering", "\n", "", "obz", "=", "self", ".", "observation_ph", "\n", "if", "self", ".", "normalized", ":", "\n", "                ", "obz", "=", "tf", ".", "clip_by_value", "(", "(", "self", ".", "observation_ph", "-", "self", ".", "ob_rms", ".", "mean", ")", "/", "self", ".", "ob_rms", ".", "std", ",", "-", "5.0", ",", "5.0", ")", "\n", "\n", "# Embedding", "\n", "", "last_out", "=", "obz", "\n", "for", "hidden", "in", "hiddens", "[", ":", "-", "1", "]", ":", "\n", "                ", "last_out", "=", "tf", ".", "contrib", ".", "layers", ".", "fully_connected", "(", "last_out", ",", "hidden", ")", "\n", "\n", "", "self", ".", "zero_state", "=", "[", "]", "\n", "self", ".", "state_in_ph", "=", "[", "]", "\n", "self", ".", "state_out", "=", "[", "]", "\n", "\n", "# Value", "\n", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "hiddens", "[", "-", "1", "]", ",", "reuse", "=", "reuse", ")", "\n", "size", "=", "cell", ".", "state_size", "\n", "self", ".", "zero_state", ".", "append", "(", "np", ".", "zeros", "(", "size", ".", "c", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "self", ".", "zero_state", ".", "append", "(", "np", ".", "zeros", "(", "size", ".", "h", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "self", ".", "state_in_ph", ".", "append", "(", "\n", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "size", ".", "c", "]", ",", "name", "=", "\"lstmv_c\"", ")", ")", "\n", "self", ".", "state_in_ph", ".", "append", "(", "\n", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "size", ".", "h", "]", ",", "name", "=", "\"lstmv_h\"", ")", ")", "\n", "initial_state", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMStateTuple", "(", "\n", "self", ".", "state_in_ph", "[", "-", "2", "]", ",", "self", ".", "state_in_ph", "[", "-", "1", "]", ")", "\n", "last_out", ",", "state_out", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "\n", "cell", ",", "last_out", ",", "initial_state", "=", "initial_state", ",", "scope", "=", "\"lstmv\"", ")", "\n", "self", ".", "state_out", ".", "append", "(", "state_out", ")", "\n", "\n", "self", ".", "vpredz", "=", "tf", ".", "contrib", ".", "layers", ".", "fully_connected", "(", "last_out", ",", "1", ",", "activation_fn", "=", "None", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "self", ".", "vpred", "=", "self", ".", "vpredz", "\n", "if", "self", ".", "normalized", "and", "self", ".", "normalized", "!=", "'ob'", ":", "\n", "                ", "self", ".", "vpred", "=", "self", ".", "vpredz", "*", "self", ".", "ret_rms", ".", "std", "+", "self", ".", "ret_rms", ".", "mean", "\n", "\n", "# Policy", "\n", "", "last_out", "=", "obz", "\n", "for", "hidden", "in", "hiddens", "[", ":", "-", "1", "]", ":", "\n", "                ", "last_out", "=", "tf", ".", "contrib", ".", "layers", ".", "fully_connected", "(", "last_out", ",", "hidden", ")", "\n", "", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "hiddens", "[", "-", "1", "]", ",", "reuse", "=", "reuse", ")", "\n", "size", "=", "cell", ".", "state_size", "\n", "self", ".", "zero_state", ".", "append", "(", "np", ".", "zeros", "(", "size", ".", "c", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "self", ".", "zero_state", ".", "append", "(", "np", ".", "zeros", "(", "size", ".", "h", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "self", ".", "state_in_ph", ".", "append", "(", "\n", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "size", ".", "c", "]", ",", "name", "=", "\"lstmp_c\"", ")", ")", "\n", "self", ".", "state_in_ph", ".", "append", "(", "\n", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "size", ".", "h", "]", ",", "name", "=", "\"lstmp_h\"", ")", ")", "\n", "initial_state", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMStateTuple", "(", "\n", "self", ".", "state_in_ph", "[", "-", "2", "]", ",", "self", ".", "state_in_ph", "[", "-", "1", "]", ")", "\n", "last_out", ",", "state_out", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "\n", "cell", ",", "last_out", ",", "initial_state", "=", "initial_state", ",", "scope", "=", "\"lstmp\"", ")", "\n", "self", ".", "state_out", ".", "append", "(", "state_out", ")", "\n", "\n", "mean", "=", "tf", ".", "contrib", ".", "layers", ".", "fully_connected", "(", "\n", "last_out", ",", "ac_space", ".", "shape", "[", "0", "]", ",", "activation_fn", "=", "None", ")", "\n", "logstd", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "\"logstd\"", ",", "\n", "shape", "=", "[", "1", ",", "ac_space", ".", "shape", "[", "0", "]", "]", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "\n", "self", ".", "pd", "=", "DiagonalGaussian", "(", "mean", ",", "logstd", ")", "\n", "self", ".", "sampled_action", "=", "switch", "(", "\n", "self", ".", "stochastic_ph", ",", "self", ".", "pd", ".", "sample", "(", ")", ",", "self", ".", "pd", ".", "mode", "(", ")", ")", "\n", "\n", "self", ".", "zero_state", "=", "np", ".", "array", "(", "self", ".", "zero_state", ")", "\n", "self", ".", "state_in_ph", "=", "tuple", "(", "self", ".", "state_in_ph", ")", "\n", "self", ".", "state", "=", "self", ".", "zero_state", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.act": [[180, 194], ["tensorflow.get_default_session().run", "numpy.array", "list", "policy.LSTMPolicy.state.append", "policy.LSTMPolicy.state.append", "tensorflow.get_default_session"], "methods", ["None"], ["", "", "def", "act", "(", "self", ",", "observation", ",", "stochastic", "=", "True", ")", ":", "\n", "        ", "outputs", "=", "[", "self", ".", "sampled_action", ",", "self", ".", "vpred", ",", "self", ".", "state_out", "]", "\n", "feed_dict", "=", "{", "\n", "self", ".", "observation_ph", ":", "observation", "[", "None", ",", "None", "]", ",", "\n", "self", ".", "state_in_ph", ":", "list", "(", "self", ".", "state", "[", ":", ",", "None", ",", ":", "]", ")", ",", "\n", "self", ".", "stochastic_ph", ":", "stochastic", ",", "\n", "}", "\n", "a", ",", "v", ",", "s", "=", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "outputs", ",", "feed_dict", ")", "\n", "self", ".", "state", "=", "[", "]", "\n", "for", "x", "in", "s", ":", "\n", "            ", "self", ".", "state", ".", "append", "(", "x", ".", "c", "[", "0", "]", ")", "\n", "self", ".", "state", ".", "append", "(", "x", ".", "h", "[", "0", "]", ")", "\n", "", "self", ".", "state", "=", "np", ".", "array", "(", "self", ".", "state", ")", "\n", "return", "a", "[", "0", ",", "0", "]", ",", "{", "'vpred'", ":", "v", "[", "0", ",", "0", "]", ",", "'state'", ":", "self", ".", "state", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.get_variables": [[195, 197], ["tensorflow.get_collection"], "methods", ["None"], ["", "def", "get_variables", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ",", "self", ".", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.policy.LSTMPolicy.reset": [[198, 200], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "self", ".", "zero_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.RunningMeanStd.__init__": [[10, 32], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.to_float", "tensorflow.sqrt", "tensorflow.to_float", "tensorflow.square", "tensorflow.maximum", "tensorflow.constant_initializer", "tensorflow.constant_initializer", "tensorflow.constant_initializer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scope", "=", "\"running\"", ",", "reuse", "=", "False", ",", "epsilon", "=", "1e-2", ",", "shape", "=", "(", ")", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "self", ".", "_sum", "=", "tf", ".", "get_variable", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "shape", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "name", "=", "\"sum\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "_sumsq", "=", "tf", ".", "get_variable", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "shape", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "epsilon", ")", ",", "\n", "name", "=", "\"sumsq\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "_count", "=", "tf", ".", "get_variable", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "epsilon", ")", ",", "\n", "name", "=", "\"count\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "shape", "=", "shape", "\n", "\n", "self", ".", "mean", "=", "tf", ".", "to_float", "(", "self", ".", "_sum", "/", "self", ".", "_count", ")", "\n", "var_est", "=", "tf", ".", "to_float", "(", "self", ".", "_sumsq", "/", "self", ".", "_count", ")", "-", "tf", ".", "square", "(", "self", ".", "mean", ")", "\n", "self", ".", "std", "=", "tf", ".", "sqrt", "(", "tf", ".", "maximum", "(", "var_est", ",", "1e-2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.__init__": [[35, 39], ["tensorflow.exp"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "logstd", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "logstd", "=", "logstd", "\n", "self", ".", "std", "=", "tf", ".", "exp", "(", "logstd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.sample": [[40, 42], ["tensorflow.random_normal", "tensorflow.shape"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mean", "+", "self", ".", "std", "*", "tf", ".", "random_normal", "(", "tf", ".", "shape", "(", "self", ".", "mean", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.DiagonalGaussian.mode": [[43, 45], ["None"], "methods", ["None"], ["", "def", "mode", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.dense": [[47, 56], ["tensorflow.get_variable", "tensorflow.matmul", "tensorflow.get_variable", "x.get_shape", "tensorflow.zeros_initializer"], "function", ["None"], ["", "", "def", "dense", "(", "x", ",", "size", ",", "name", ",", "weight_init", "=", "None", ",", "bias", "=", "True", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "name", "+", "\"/w\"", ",", "[", "x", ".", "get_shape", "(", ")", "[", "1", "]", ",", "size", "]", ",", "\n", "initializer", "=", "weight_init", ")", "\n", "ret", "=", "tf", ".", "matmul", "(", "x", ",", "w", ")", "\n", "if", "bias", ":", "\n", "        ", "b", "=", "tf", ".", "get_variable", "(", "name", "+", "\"/b\"", ",", "[", "size", "]", ",", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "return", "ret", "+", "b", "\n", "", "else", ":", "\n", "        ", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.switch": [[58, 65], ["copy.copy", "tensorflow.cond", "tf.cond.set_shape", "if_exp.get_shape", "tensorflow.cast"], "function", ["None"], ["", "", "def", "switch", "(", "condition", ",", "if_exp", ",", "else_exp", ")", ":", "\n", "    ", "x_shape", "=", "copy", ".", "copy", "(", "if_exp", ".", "get_shape", "(", ")", ")", "\n", "x", "=", "tf", ".", "cond", "(", "tf", ".", "cast", "(", "condition", ",", "'bool'", ")", ",", "\n", "lambda", ":", "if_exp", ",", "\n", "lambda", ":", "else_exp", ")", "\n", "x", ".", "set_shape", "(", "x_shape", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.load_params": [[67, 69], ["numpy.load"], "function", ["None"], ["", "def", "load_params", "(", "path", ")", ":", "\n", "    ", "return", "np", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.policy_zoo.utils.set_from_flat": [[71, 84], ["list", "numpy.sum", "tensorflow.placeholder", "zip", "tensorflow.group", "tensorflow.get_default_session().run", "map", "int", "tensorflow.assign", "assigns.append", "int", "numpy.prod", "tensorflow.reshape", "tensorflow.get_default_session", "x.get_shape().as_list", "numpy.prod", "x.get_shape"], "function", ["None"], ["", "def", "set_from_flat", "(", "var_list", ",", "flat_params", ")", ":", "\n", "    ", "shapes", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ",", "var_list", ")", ")", "\n", "total_size", "=", "np", ".", "sum", "(", "[", "int", "(", "np", ".", "prod", "(", "shape", ")", ")", "for", "shape", "in", "shapes", "]", ")", "\n", "theta", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "total_size", "]", ")", "\n", "start", "=", "0", "\n", "assigns", "=", "[", "]", "\n", "for", "(", "shape", ",", "v", ")", "in", "zip", "(", "shapes", ",", "var_list", ")", ":", "\n", "        ", "size", "=", "int", "(", "np", ".", "prod", "(", "shape", ")", ")", "\n", "assign", "=", "tf", ".", "assign", "(", "v", ",", "tf", ".", "reshape", "(", "theta", "[", "start", ":", "start", "+", "size", "]", ",", "shape", ")", ")", "\n", "assigns", ".", "append", "(", "assign", ")", "\n", "start", "+=", "size", "\n", "", "op", "=", "tf", ".", "group", "(", "*", "assigns", ")", "\n", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "op", ",", "{", "theta", ":", "flat_params", "}", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv.__init__": [[45, 114], ["gym.utils.EzPickle.__init__", "len", "os.path.join", "utils.construct_scene", "enumerate", "enumerate", "gym.spaces.Tuple", "gym.spaces.Tuple", "os.path.dirname", "robosumo.envs.MujocoEnv.__init__", "agents.get", "agent.set_opponents", "agent.setup_spaces", "enumerate", "tempfile.TemporaryDirectory", "os.path.join", "utils.construct_scene.write", "robosumo.envs.MujocoEnv.__init__", "open", "utils.construct_scene.write", "enumerate", "enumerate"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils.construct_scene", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.set_opponents", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.setup_spaces", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__"], ["def", "__init__", "(", "self", ",", "agent_names", ",", "\n", "xml_path", "=", "None", ",", "\n", "init_pos_noise", "=", ".1", ",", "\n", "init_vel_noise", "=", ".1", ",", "\n", "agent_kwargs", "=", "None", ",", "\n", "frame_skip", "=", "5", ",", "\n", "tatami_size", "=", "2.0", ",", "\n", "timestep_limit", "=", "500", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "EzPickle", ".", "__init__", "(", "self", ")", "\n", "self", ".", "_tatami_size", "=", "tatami_size", "+", "0.1", "\n", "self", ".", "_timestep_limit", "=", "timestep_limit", "\n", "self", ".", "_init_pos_noise", "=", "init_pos_noise", "\n", "self", ".", "_init_vel_noise", "=", "init_vel_noise", "\n", "self", ".", "_n_agents", "=", "len", "(", "agent_names", ")", "\n", "self", ".", "_mujoco_init", "=", "False", "\n", "self", ".", "_num_steps", "=", "None", "\n", "self", ".", "_spec", "=", "None", "\n", "\n", "# Resolve agent scopes", "\n", "agent_scopes", "=", "[", "\n", "\"%s%d\"", "%", "(", "name", ",", "i", ")", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "agent_names", ")", "\n", "]", "\n", "\n", "# Consturct scene XML", "\n", "scene_xml_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "\"assets\"", ",", "\"tatami.xml\"", ")", "\n", "agent_xml_paths", "=", "[", "_AGENTS", "[", "name", "]", "for", "name", "in", "agent_names", "]", "\n", "scene", "=", "construct_scene", "(", "scene_xml_path", ",", "agent_xml_paths", ",", "\n", "agent_scopes", "=", "agent_scopes", ",", "\n", "tatami_size", "=", "tatami_size", ",", "\n", "**", "kwargs", ")", "\n", "\n", "# Init MuJoCo", "\n", "if", "xml_path", "is", "None", ":", "\n", "            ", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmpdir_name", ":", "\n", "                ", "scene_filepath", "=", "os", ".", "path", ".", "join", "(", "tmpdir_name", ",", "\"scene.xml\"", ")", "\n", "scene", ".", "write", "(", "scene_filepath", ")", "\n", "MujocoEnv", ".", "__init__", "(", "self", ",", "scene_filepath", ",", "frame_skip", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "open", "(", "xml_path", ",", "'w'", ")", "as", "fp", ":", "\n", "                ", "scene", ".", "write", "(", "fp", ".", "name", ")", "\n", "", "MujocoEnv", ".", "__init__", "(", "self", ",", "fp", ".", "name", ",", "frame_skip", ")", "\n", "", "self", ".", "_mujoco_init", "=", "True", "\n", "\n", "# Construct agents", "\n", "agent_kwargs", "=", "agent_kwargs", "or", "{", "}", "\n", "self", ".", "agents", "=", "[", "\n", "agents", ".", "get", "(", "name", ",", "env", "=", "self", ",", "scope", "=", "agent_scopes", "[", "i", "]", ",", "**", "agent_kwargs", ")", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "agent_names", ")", "\n", "]", "\n", "\n", "# Set opponents", "\n", "for", "i", ",", "agent", "in", "enumerate", "(", "self", ".", "agents", ")", ":", "\n", "            ", "agent", ".", "set_opponents", "(", "[", "\n", "agent", "for", "j", ",", "agent", "in", "enumerate", "(", "self", ".", "agents", ")", "if", "j", "!=", "i", "\n", "]", ")", "\n", "\n", "# Setup agents", "\n", "", "for", "i", ",", "agent", "in", "enumerate", "(", "self", ".", "agents", ")", ":", "\n", "            ", "agent", ".", "setup_spaces", "(", ")", "\n", "\n", "# Set observation and action spaces", "\n", "", "self", ".", "observation_space", "=", "Tuple", "(", "[", "\n", "agent", ".", "observation_space", "for", "agent", "in", "self", ".", "agents", "\n", "]", ")", "\n", "self", ".", "action_space", "=", "Tuple", "(", "[", "\n", "agent", ".", "action_space", "for", "agent", "in", "self", ".", "agents", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv.simulate": [[116, 119], ["numpy.concatenate", "sumo.SumoEnv.do_simulation"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.do_simulation"], ["", "def", "simulate", "(", "self", ",", "actions", ")", ":", "\n", "        ", "a", "=", "np", ".", "concatenate", "(", "actions", ",", "axis", "=", "0", ")", "\n", "self", ".", "do_simulation", "(", "a", ",", "self", ".", "frame_skip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._step": [[120, 193], ["range", "sumo.SumoEnv.simulate", "range", "sumo.SumoEnv._get_obs", "enumerate", "tuple", "tuple", "tuple", "sumo.SumoEnv.agents[].before_step", "sumo.SumoEnv.agents[].after_step", "sumo.SumoEnv._get_obs", "range", "range", "range", "agent.get_qpos", "sumo.SumoEnv._comp_move_reward", "sumo.SumoEnv._comp_push_reward", "numpy.max", "opp.get_qpos", "numpy.abs", "numpy.max", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv.simulate", "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._get_obs", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.before_step", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.after_step", "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._get_obs", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos", "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_move_reward", "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_push_reward", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos"], ["", "def", "_step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "if", "not", "self", ".", "_mujoco_init", ":", "\n", "            ", "return", "self", ".", "_get_obs", "(", ")", ",", "0", ",", "False", ",", "None", "\n", "\n", "", "dones", "=", "[", "False", "for", "_", "in", "range", "(", "self", ".", "_n_agents", ")", "]", "\n", "rewards", "=", "[", "0.", "for", "_", "in", "range", "(", "self", ".", "_n_agents", ")", "]", "\n", "infos", "=", "[", "{", "}", "for", "_", "in", "range", "(", "self", ".", "_n_agents", ")", "]", "\n", "\n", "# Call `before_step` on the agents", "\n", "for", "i", "in", "range", "(", "self", ".", "_n_agents", ")", ":", "\n", "            ", "self", ".", "agents", "[", "i", "]", ".", "before_step", "(", ")", "\n", "\n", "# Do simulation", "\n", "", "self", ".", "simulate", "(", "actions", ")", "\n", "\n", "# Call `after_step` on the agents", "\n", "for", "i", "in", "range", "(", "self", ".", "_n_agents", ")", ":", "\n", "            ", "infos", "[", "i", "]", "[", "'ctrl_reward'", "]", "=", "self", ".", "agents", "[", "i", "]", ".", "after_step", "(", "actions", "[", "i", "]", ")", "\n", "\n", "# Get obs", "\n", "", "obs", "=", "self", ".", "_get_obs", "(", ")", "\n", "\n", "self", ".", "_num_steps", "+=", "1", "\n", "\n", "# Compute rewards and dones", "\n", "for", "i", ",", "agent", "in", "enumerate", "(", "self", ".", "agents", ")", ":", "\n", "            ", "self_xyz", "=", "agent", ".", "get_qpos", "(", ")", "[", ":", "3", "]", "\n", "# Loose penalty", "\n", "infos", "[", "i", "]", "[", "'lose_penalty'", "]", "=", "0.", "\n", "if", "(", "self_xyz", "[", "2", "]", "<", "0.29", "or", "\n", "np", ".", "max", "(", "np", ".", "abs", "(", "self_xyz", "[", ":", "2", "]", ")", ")", ">=", "self", ".", "_tatami_size", ")", ":", "\n", "                ", "infos", "[", "i", "]", "[", "'lose_penalty'", "]", "=", "-", "self", ".", "WIN_REWARD", "\n", "dones", "[", "i", "]", "=", "True", "\n", "# Win reward", "\n", "", "infos", "[", "i", "]", "[", "'win_reward'", "]", "=", "0.", "\n", "for", "opp", "in", "agent", ".", "_opponents", ":", "\n", "                ", "opp_xyz", "=", "opp", ".", "get_qpos", "(", ")", "[", ":", "3", "]", "\n", "if", "(", "opp_xyz", "[", "2", "]", "<", "0.29", "or", "\n", "np", ".", "max", "(", "np", ".", "abs", "(", "opp_xyz", "[", ":", "2", "]", ")", ")", ">=", "self", ".", "_tatami_size", ")", ":", "\n", "                    ", "infos", "[", "i", "]", "[", "'win_reward'", "]", "+=", "self", ".", "WIN_REWARD", "\n", "infos", "[", "i", "]", "[", "'winner'", "]", "=", "True", "\n", "dones", "[", "i", "]", "=", "True", "\n", "", "", "infos", "[", "i", "]", "[", "'main_reward'", "]", "=", "infos", "[", "i", "]", "[", "'win_reward'", "]", "+", "infos", "[", "i", "]", "[", "'lose_penalty'", "]", "\n", "# Draw penalty", "\n", "if", "self", ".", "_num_steps", ">", "self", ".", "_timestep_limit", ":", "\n", "                ", "infos", "[", "i", "]", "[", "'main_reward'", "]", "+=", "self", ".", "DRAW_PENALTY", "\n", "dones", "[", "i", "]", "=", "True", "\n", "# Move to opponent(s) and push them out of center", "\n", "", "infos", "[", "i", "]", "[", "'move_to_opp_reward'", "]", "=", "0.", "\n", "infos", "[", "i", "]", "[", "'push_opp_reward'", "]", "=", "0.", "\n", "for", "opp", "in", "agent", ".", "_opponents", ":", "\n", "                ", "infos", "[", "i", "]", "[", "'move_to_opp_reward'", "]", "+=", "self", ".", "_comp_move_reward", "(", "agent", ",", "opp", ".", "posafter", ")", "\n", "infos", "[", "i", "]", "[", "'push_opp_reward'", "]", "+=", "self", ".", "_comp_push_reward", "(", "agent", ",", "opp", ".", "posafter", ")", "\n", "# Stay in center reward (unused)", "\n", "# infos[i]['stay_in_center'] = self._comp_stay_in_center_reward(agent)", "\n", "# Contact rewards and penalties (unused)", "\n", "# infos[i]['contact_reward'] = self._comp_contact_reward(agent)", "\n", "# Reward shaping", "\n", "", "infos", "[", "i", "]", "[", "'shaping_reward'", "]", "=", "infos", "[", "i", "]", "[", "'ctrl_reward'", "]", "+", "infos", "[", "i", "]", "[", "'push_opp_reward'", "]", "+", "infos", "[", "i", "]", "[", "'move_to_opp_reward'", "]", "\n", "# Add up rewards", "\n", "rewards", "[", "i", "]", "=", "infos", "[", "i", "]", "[", "'main_reward'", "]", "+", "infos", "[", "i", "]", "[", "'shaping_reward'", "]", "\n", "\n", "", "rewards", "=", "tuple", "(", "rewards", ")", "\n", "dones", "=", "tuple", "(", "dones", ")", "\n", "infos", "=", "tuple", "(", "infos", ")", "\n", "\n", "return", "obs", ",", "rewards", ",", "dones", ",", "infos", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_move_reward": [[194, 199], ["numpy.linalg.norm", "max", "numpy.sum"], "methods", ["None"], ["", "def", "_comp_move_reward", "(", "self", ",", "agent", ",", "target", ")", ":", "\n", "        ", "move_vec", "=", "(", "agent", ".", "posafter", "-", "agent", ".", "posbefore", ")", "/", "self", ".", "dt", "\n", "direction", "=", "target", "-", "agent", ".", "posbefore", "\n", "direction", "/=", "np", ".", "linalg", ".", "norm", "(", "direction", ")", "\n", "return", "max", "(", "np", ".", "sum", "(", "move_vec", "*", "direction", ")", ",", "0.", ")", "*", "self", ".", "MOVE_TO_OPP_COEF", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_push_reward": [[200, 203], ["numpy.linalg.norm", "numpy.exp"], "methods", ["None"], ["", "def", "_comp_push_reward", "(", "self", ",", "agent", ",", "target", ")", ":", "\n", "        ", "dist_to_center", "=", "np", ".", "linalg", ".", "norm", "(", "target", ")", "\n", "return", "-", "self", ".", "PUSH_OUT_COEF", "*", "np", ".", "exp", "(", "-", "dist_to_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_stay_in_center_reward": [[204, 207], ["numpy.linalg.norm", "numpy.exp"], "methods", ["None"], ["", "def", "_comp_stay_in_center_reward", "(", "self", ",", "agent", ")", ":", "\n", "        ", "dist_to_center", "=", "np", ".", "linalg", ".", "norm", "(", "agent", ".", "posafter", ")", "\n", "return", "self", ".", "STAY_IN_CENTER_COEF", "*", "np", ".", "exp", "(", "-", "dist_to_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._comp_contact_reward": [[208, 226], ["numpy.clip", "agent.get_cfrc_ext", "numpy.sum", "numpy.clip", "numpy.abs", "other.get_cfrc_ext", "numpy.sum", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cfrc_ext", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cfrc_ext"], ["", "def", "_comp_contact_reward", "(", "self", ",", "agent", ")", ":", "\n", "# Penalty for pain", "\n", "        ", "body_ids", "=", "[", "\n", "agent", ".", "body_name_idx", "[", "name", "]", "\n", "for", "name", "in", "[", "'head'", ",", "'torso'", "]", "if", "name", "in", "agent", ".", "body_name_idx", "\n", "]", "\n", "forces", "=", "np", ".", "clip", "(", "agent", ".", "get_cfrc_ext", "(", "body_ids", ")", ",", "-", "100.", ",", "100.", ")", "\n", "pain", "=", "agent", ".", "COST_COEFS", "[", "'pain'", "]", "*", "np", ".", "sum", "(", "np", ".", "abs", "(", "forces", ")", ")", "\n", "# Reward for attacking opponents", "\n", "attack", "=", "0.", "\n", "for", "other", "in", "agent", ".", "_opponents", ":", "\n", "            ", "body_ids", "=", "[", "\n", "other", ".", "body_name_idx", "[", "name", "]", "\n", "for", "name", "in", "[", "'head'", ",", "'torso'", "]", "if", "name", "in", "other", ".", "body_name_idx", "\n", "]", "\n", "forces", "=", "np", ".", "clip", "(", "other", ".", "get_cfrc_ext", "(", "body_ids", ")", ",", "-", "100.", ",", "100.", ")", "\n", "attack", "+=", "agent", ".", "COST_COEFS", "[", "'attack'", "]", "*", "np", ".", "sum", "(", "np", ".", "abs", "(", "forces", ")", ")", "\n", "", "return", "attack", "-", "pain", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._get_obs": [[227, 231], ["tuple", "numpy.concatenate", "agent.get_obs"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_obs"], ["", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_mujoco_init", ":", "\n", "            ", "return", "np", ".", "concatenate", "(", "[", "self", ".", "data", ".", "qpos", ".", "flat", ",", "self", ".", "data", ".", "qvel", ".", "flat", "]", ")", "\n", "", "return", "tuple", "(", "[", "agent", ".", "get_obs", "(", ")", "for", "agent", "in", "self", ".", "agents", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv.reset_model": [[232, 254], ["sumo.SumoEnv.np_random.uniform", "enumerate", "sumo.SumoEnv.np_random.uniform", "sumo.SumoEnv.set_state", "sumo.SumoEnv._get_obs", "agent.set_xyz", "sumo.SumoEnv.np_random.randn", "sumo.SumoEnv.data.qpos.ravel", "sumo.SumoEnv.data.qvel.ravel", "numpy.cos", "numpy.sin"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.set_state", "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._get_obs", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.set_xyz"], ["", "def", "reset_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "_num_steps", "=", "0", "\n", "# Randomize agent positions", "\n", "r", ",", "z", "=", "1.15", ",", "1.25", "\n", "delta", "=", "(", "2.", "*", "np", ".", "pi", ")", "/", "self", ".", "_n_agents", "\n", "phi", "=", "self", ".", "np_random", ".", "uniform", "(", "0.", ",", "2.", "*", "np", ".", "pi", ")", "\n", "for", "i", ",", "agent", "in", "enumerate", "(", "self", ".", "agents", ")", ":", "\n", "            ", "angle", "=", "phi", "+", "i", "*", "delta", "\n", "x", ",", "y", "=", "r", "*", "np", ".", "cos", "(", "angle", ")", ",", "r", "*", "np", ".", "sin", "(", "angle", ")", "\n", "agent", ".", "set_xyz", "(", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "# Add noise to all qpos and qvel elements", "\n", "", "pos_noise", "=", "self", ".", "np_random", ".", "uniform", "(", "\n", "size", "=", "self", ".", "model", ".", "nq", ",", "\n", "low", "=", "-", "self", ".", "_init_pos_noise", ",", "\n", "high", "=", "self", ".", "_init_pos_noise", ")", "\n", "vel_noise", "=", "self", ".", "_init_vel_noise", "*", "self", ".", "np_random", ".", "randn", "(", "self", ".", "model", ".", "nv", ")", "\n", "qpos", "=", "self", ".", "data", ".", "qpos", ".", "ravel", "(", ")", "+", "pos_noise", "\n", "qvel", "=", "self", ".", "data", ".", "qvel", ".", "ravel", "(", ")", "+", "vel_noise", "\n", "self", ".", "init_qpos", ",", "self", ".", "init_qvel", "=", "qpos", ",", "qvel", "\n", "self", ".", "set_state", "(", "qpos", ",", "qvel", ")", "\n", "return", "self", ".", "_get_obs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv.viewer_setup": [[255, 273], ["sumo.SumoEnv.sim.forward"], "methods", ["None"], ["", "def", "viewer_setup", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "viewer", "is", "not", "None", ":", "\n", "            ", "self", ".", "viewer", ".", "_run_speed", "=", "0.5", "\n", "self", ".", "viewer", ".", "cam", ".", "trackbodyid", "=", "0", "\n", "# self.viewer.cam.lookat[2] += .8", "\n", "self", ".", "viewer", ".", "cam", ".", "elevation", "=", "-", "25", "\n", "self", ".", "viewer", ".", "cam", ".", "type", "=", "1", "\n", "self", ".", "sim", ".", "forward", "(", ")", "\n", "self", ".", "viewer", ".", "cam", ".", "distance", "=", "self", ".", "model", ".", "stat", ".", "extent", "*", "1.0", "\n", "# Make sure that the offscreen context has the same camera setup", "\n", "", "if", "self", ".", "sim", ".", "_render_context_offscreen", "is", "not", "None", ":", "\n", "            ", "self", ".", "sim", ".", "_render_context_offscreen", ".", "cam", ".", "trackbodyid", "=", "0", "\n", "# self.sim._render_context_offscreen.cam.lookat[2] += .8", "\n", "self", ".", "sim", ".", "_render_context_offscreen", ".", "cam", ".", "elevation", "=", "-", "25", "\n", "self", ".", "sim", ".", "_render_context_offscreen", ".", "cam", ".", "type", "=", "1", "\n", "self", ".", "sim", ".", "_render_context_offscreen", ".", "cam", ".", "distance", "=", "self", ".", "model", ".", "stat", ".", "extent", "*", "1.0", "\n", "", "self", ".", "buffer_size", "=", "(", "1280", ",", "800", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.__init__": [[28, 37], ["xml.parse", "agents.Agent._set_body", "agents.Agent._set_joint"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_body", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_joint"], ["def", "__init__", "(", "self", ",", "env", ",", "scope", ",", "xml_path", ",", "adjust_z", "=", "0.", ")", ":", "\n", "        ", "self", ".", "_env", "=", "env", "\n", "self", ".", "_scope", "=", "scope", "\n", "self", ".", "_xml_path", "=", "xml_path", "\n", "self", ".", "_xml", "=", "ET", ".", "parse", "(", "xml_path", ")", "\n", "self", ".", "_adjust_z", "=", "adjust_z", "\n", "\n", "self", ".", "_set_body", "(", ")", "\n", "self", ".", "_set_joint", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.setup_spaces": [[38, 41], ["agents.Agent._set_observation_space", "agents.Agent._set_action_space"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_observation_space", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_action_space"], ["", "def", "setup_spaces", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_observation_space", "(", ")", "\n", "self", ".", "_set_action_space", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._in_scope": [[42, 44], ["name.startswith"], "methods", ["None"], ["", "def", "_in_scope", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "name", ".", "startswith", "(", "self", ".", "_scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_body": [[45, 67], ["list", "agents.Agent.body_dofnum.sum", "list", "int", "int", "filter", "agents.Agent._env.model.body_names.index", "filter", "name.split", "zip", "agents.Agent._in_scope"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._in_scope"], ["", "def", "_set_body", "(", "self", ")", ":", "\n", "        ", "self", ".", "body_names", "=", "list", "(", "filter", "(", "\n", "lambda", "x", ":", "self", ".", "_in_scope", "(", "x", ")", ",", "self", ".", "_env", ".", "model", ".", "body_names", "\n", ")", ")", "\n", "self", ".", "body_ids", "=", "[", "\n", "self", ".", "_env", ".", "model", ".", "body_names", ".", "index", "(", "name", ")", "for", "name", "in", "self", ".", "body_names", "\n", "]", "\n", "self", ".", "body_name_idx", "=", "{", "\n", "name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ":", "idx", "\n", "for", "name", ",", "idx", "in", "zip", "(", "self", ".", "body_names", ",", "self", ".", "body_ids", ")", "\n", "}", "\n", "# Determine body params", "\n", "self", ".", "body_dofnum", "=", "self", ".", "_env", ".", "model", ".", "body_dofnum", "[", "self", ".", "body_ids", "]", "\n", "self", ".", "body_dofadr", "=", "self", ".", "_env", ".", "model", ".", "body_dofadr", "[", "self", ".", "body_ids", "]", "\n", "self", ".", "nv", "=", "self", ".", "body_dofnum", ".", "sum", "(", ")", "\n", "# Determine qvel_start_idx and qvel_end_idx", "\n", "dof", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", ">=", "0", ",", "self", ".", "body_dofadr", ")", ")", "\n", "self", ".", "qvel_start_idx", "=", "int", "(", "dof", "[", "0", "]", ")", "\n", "last_dof_body_id", "=", "self", ".", "body_dofnum", ".", "shape", "[", "0", "]", "-", "1", "\n", "while", "self", ".", "body_dofnum", "[", "last_dof_body_id", "]", "==", "0", ":", "\n", "            ", "last_dof_body_id", "-=", "1", "\n", "", "self", ".", "qvel_end_idx", "=", "int", "(", "dof", "[", "-", "1", "]", "+", "self", ".", "body_dofnum", "[", "last_dof_body_id", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_joint": [[68, 84], ["list", "sum", "int", "int", "filter", "agents.Agent._env.model.joint_names.index", "agents.Agent._in_scope", "int"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._in_scope"], ["", "def", "_set_joint", "(", "self", ")", ":", "\n", "        ", "self", ".", "joint_names", "=", "list", "(", "filter", "(", "\n", "lambda", "x", ":", "self", ".", "_in_scope", "(", "x", ")", ",", "self", ".", "_env", ".", "model", ".", "joint_names", "\n", ")", ")", "\n", "self", ".", "joint_ids", "=", "[", "\n", "self", ".", "_env", ".", "model", ".", "joint_names", ".", "index", "(", "name", ")", "for", "name", "in", "self", ".", "joint_names", "\n", "]", "\n", "\n", "# Determine joint params", "\n", "self", ".", "jnt_qposadr", "=", "self", ".", "_env", ".", "model", ".", "jnt_qposadr", "[", "self", ".", "joint_ids", "]", "\n", "self", ".", "jnt_type", "=", "self", ".", "_env", ".", "model", ".", "jnt_type", "[", "self", ".", "joint_ids", "]", "\n", "self", ".", "jnt_nqpos", "=", "[", "self", ".", "JNT_NPOS", "[", "int", "(", "j", ")", "]", "for", "j", "in", "self", ".", "jnt_type", "]", "\n", "self", ".", "nq", "=", "sum", "(", "self", ".", "jnt_nqpos", ")", "\n", "# Determine qpos_start_idx and qpos_end_idx", "\n", "self", ".", "qpos_start_idx", "=", "int", "(", "self", ".", "jnt_qposadr", "[", "0", "]", ")", "\n", "self", ".", "qpos_end_idx", "=", "int", "(", "self", ".", "jnt_qposadr", "[", "-", "1", "]", "+", "self", ".", "jnt_nqpos", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_observation_space": [[85, 91], ["agents.Agent.get_obs", "gym.spaces.Box", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_obs"], ["", "def", "_set_observation_space", "(", "self", ")", ":", "\n", "        ", "obs", "=", "self", ".", "get_obs", "(", ")", "\n", "self", ".", "obs_dim", "=", "obs", ".", "size", "\n", "low", "=", "-", "np", ".", "inf", "*", "np", ".", "ones", "(", "self", ".", "obs_dim", ")", "\n", "high", "=", "np", ".", "inf", "*", "np", ".", "ones", "(", "self", ".", "obs_dim", ")", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", ",", "high", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent._set_action_space": [[92, 116], ["agents.Agent._xml.find", "len", "agents.Agent._xml.find", "enumerate", "gym.spaces.Box", "list", "agents.Agent.find", "numpy.ones", "list", "agents.Agent.find.get", "agents.Agent.find.get", "numpy.ones", "list", "list", "map", "map", "numpy.ones", "numpy.ones", "default.find.get.split", "default.find.get.split"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get"], ["", "def", "_set_action_space", "(", "self", ")", ":", "\n", "        ", "acts", "=", "self", ".", "_xml", ".", "find", "(", "'actuator'", ")", "\n", "self", ".", "action_dim", "=", "len", "(", "list", "(", "acts", ")", ")", "\n", "default", "=", "self", ".", "_xml", ".", "find", "(", "'default'", ")", "\n", "range_set", "=", "False", "\n", "if", "default", "is", "not", "None", ":", "\n", "            ", "motor", "=", "default", ".", "find", "(", "'motor'", ")", "\n", "if", "motor", "is", "not", "None", ":", "\n", "                ", "ctrl", "=", "motor", ".", "get", "(", "'ctrlrange'", ")", "\n", "if", "ctrl", ":", "\n", "                    ", "clow", ",", "chigh", "=", "list", "(", "map", "(", "float", ",", "ctrl", ".", "split", "(", ")", ")", ")", "\n", "high", "=", "chigh", "*", "np", ".", "ones", "(", "self", ".", "action_dim", ")", "\n", "low", "=", "clow", "*", "np", ".", "ones", "(", "self", ".", "action_dim", ")", "\n", "range_set", "=", "True", "\n", "", "", "", "if", "not", "range_set", ":", "\n", "            ", "high", "=", "np", ".", "ones", "(", "self", ".", "action_dim", ")", "\n", "low", "=", "-", "np", ".", "ones", "(", "self", ".", "action_dim", ")", "\n", "", "for", "i", ",", "motor", "in", "enumerate", "(", "list", "(", "acts", ")", ")", ":", "\n", "            ", "ctrl", "=", "motor", ".", "get", "(", "'ctrlrange'", ")", "\n", "if", "ctrl", ":", "\n", "                ", "clow", ",", "chigh", "=", "list", "(", "map", "(", "float", ",", "ctrl", ".", "split", "(", ")", ")", ")", "\n", "low", "[", "i", "]", ",", "high", "[", "i", "]", "=", "clow", ",", "chigh", "\n", "", "", "self", ".", "_low", ",", "self", ".", "_high", "=", "low", ",", "high", "\n", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", ",", "high", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.set_xyz": [[117, 126], ["agents.Agent._env.data.qpos.ravel().copy", "agents.Agent._env.data.qvel.ravel", "agents.Agent._env.set_state", "agents.Agent._env.data.qpos.ravel"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.set_state"], ["", "def", "set_xyz", "(", "self", ",", "xyz", ")", ":", "\n", "        ", "\"\"\"Set (x, y, z) position of the agent; any element can be None.\"\"\"", "\n", "qpos", "=", "self", ".", "_env", ".", "data", ".", "qpos", ".", "ravel", "(", ")", ".", "copy", "(", ")", "\n", "start", "=", "self", ".", "qpos_start_idx", "\n", "if", "xyz", "[", "0", "]", ":", "qpos", "[", "start", "]", "=", "xyz", "[", "0", "]", "\n", "if", "xyz", "[", "1", "]", ":", "qpos", "[", "start", "+", "1", "]", "=", "xyz", "[", "1", "]", "\n", "if", "xyz", "[", "2", "]", ":", "qpos", "[", "start", "+", "2", "]", "=", "xyz", "[", "2", "]", "\n", "qvel", "=", "self", ".", "_env", ".", "data", ".", "qvel", ".", "ravel", "(", ")", "\n", "self", ".", "_env", ".", "set_state", "(", "qpos", ",", "qvel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.set_euler": [[127, 136], ["agents.Agent._env.data.qpos.ravel().copy", "agents.Agent._env.data.qvel.ravel", "agents.Agent._env.set_state", "agents.Agent._env.data.qpos.ravel"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.set_state"], ["", "def", "set_euler", "(", "self", ",", "euler", ")", ":", "\n", "        ", "\"\"\"Set euler angles the agent; any element can be None.\"\"\"", "\n", "qpos", "=", "self", ".", "_env", ".", "data", ".", "qpos", ".", "ravel", "(", ")", ".", "copy", "(", ")", "\n", "start", "=", "self", ".", "qpos_start_idx", "\n", "if", "euler", "[", "0", "]", ":", "qpos", "[", "start", "+", "4", "]", "=", "euler", "[", "0", "]", "\n", "if", "euler", "[", "1", "]", ":", "qpos", "[", "start", "+", "5", "]", "=", "euler", "[", "1", "]", "\n", "if", "euler", "[", "2", "]", ":", "qpos", "[", "start", "+", "6", "]", "=", "euler", "[", "2", "]", "\n", "qvel", "=", "self", ".", "_env", ".", "data", ".", "qvel", ".", "ravel", "(", ")", "\n", "self", ".", "_env", ".", "set_state", "(", "qpos", ",", "qvel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.set_opponents": [[137, 139], ["None"], "methods", ["None"], ["", "def", "set_opponents", "(", "self", ",", "opponents", ")", ":", "\n", "        ", "self", ".", "_opponents", "=", "opponents", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.reset": [[140, 142], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_body_com": [[147, 150], ["agents.Agent.body_names.index"], "methods", ["None"], ["", "def", "get_body_com", "(", "self", ",", "body_name", ")", ":", "\n", "        ", "idx", "=", "self", ".", "body_names", ".", "index", "(", "self", ".", "_scope", "+", "'/'", "+", "body_name", ")", "\n", "return", "self", ".", "_env", ".", "data", ".", "subtree_com", "[", "self", ".", "body_ids", "[", "idx", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cfrc_ext": [[151, 155], ["None"], "methods", ["None"], ["", "def", "get_cfrc_ext", "(", "self", ",", "body_ids", "=", "None", ")", ":", "\n", "        ", "if", "body_ids", "is", "None", ":", "\n", "            ", "body_ids", "=", "self", ".", "body_ids", "\n", "", "return", "self", ".", "_env", ".", "data", ".", "cfrc_ext", "[", "body_ids", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos": [[156, 162], ["agents.Agent._env.data.qpos[].copy"], "methods", ["None"], ["", "def", "get_qpos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Note: relies on the qpos for one agent being contiguously located.\n        \"\"\"", "\n", "qpos", "=", "self", ".", "_env", ".", "data", ".", "qpos", "[", "self", ".", "qpos_start_idx", ":", "self", ".", "qpos_end_idx", "]", ".", "copy", "(", ")", "\n", "qpos", "[", "2", "]", "+=", "self", ".", "_adjust_z", "\n", "return", "qpos", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qvel": [[163, 168], ["None"], "methods", ["None"], ["", "def", "get_qvel", "(", "self", ")", ":", "\n", "        ", "\"\"\"Note: relies on the qvel for one agent being contiguously located.\n        \"\"\"", "\n", "qvel", "=", "self", ".", "_env", ".", "data", ".", "qvel", "[", "self", ".", "qvel_start_idx", ":", "self", ".", "qvel_end_idx", "]", "\n", "return", "qvel", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qfrc_actuator": [[169, 173], ["None"], "methods", ["None"], ["", "def", "get_qfrc_actuator", "(", "self", ")", ":", "\n", "        ", "start", ",", "end", "=", "self", ".", "qvel_start_idx", ",", "self", ".", "qvel_end_idx", "\n", "qfrc", "=", "self", ".", "_env", ".", "data", ".", "qfrc_actuator", "[", "start", ":", "end", "]", "\n", "return", "qfrc", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cvel": [[174, 177], ["None"], "methods", ["None"], ["", "def", "get_cvel", "(", "self", ")", ":", "\n", "        ", "cvel", "=", "self", ".", "_env", ".", "data", ".", "cvel", "[", "self", ".", "body_ids", "]", "\n", "return", "cvel", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_body_mass": [[178, 181], ["None"], "methods", ["None"], ["", "def", "get_body_mass", "(", "self", ")", ":", "\n", "        ", "body_mass", "=", "self", ".", "_env", ".", "model", ".", "body_mass", "[", "self", ".", "body_ids", "]", "\n", "return", "body_mass", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_xipos": [[182, 185], ["None"], "methods", ["None"], ["", "def", "get_xipos", "(", "self", ")", ":", "\n", "        ", "xipos", "=", "self", ".", "_env", ".", "data", ".", "xipos", "[", "self", ".", "body_ids", "]", "\n", "return", "xipos", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cinert": [[186, 189], ["None"], "methods", ["None"], ["", "def", "get_cinert", "(", "self", ")", ":", "\n", "        ", "cinert", "=", "self", ".", "_env", ".", "data", ".", "cinert", "[", "self", ".", "body_ids", "]", "\n", "return", "cinert", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_obs": [[190, 213], ["numpy.abs", "numpy.concatenate", "numpy.clip", "numpy.abs", "obs.extend", "agents.Agent.get_cfrc_ext", "agents.Agent.get_qpos", "agents.Agent.get_qvel", "numpy.clip", "opp.get_cfrc_ext", "opp.get_qpos"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cfrc_ext", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qvel", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_cfrc_ext", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos"], ["", "def", "get_obs", "(", "self", ")", ":", "\n", "# Observe self", "\n", "        ", "self_forces", "=", "np", ".", "abs", "(", "np", ".", "clip", "(", "\n", "self", ".", "get_cfrc_ext", "(", ")", ",", "-", "self", ".", "CFRC_CLIP", ",", "self", ".", "CFRC_CLIP", ")", ")", "\n", "obs", "=", "[", "\n", "self", ".", "get_qpos", "(", ")", ".", "flat", ",", "# self all positions", "\n", "self", ".", "get_qvel", "(", ")", ".", "flat", ",", "# self all velocities", "\n", "self_forces", ".", "flat", ",", "# self all forces", "\n", "]", "\n", "# Observe opponents", "\n", "for", "opp", "in", "self", ".", "_opponents", ":", "\n", "            ", "body_ids", "=", "[", "\n", "opp", ".", "body_name_idx", "[", "name", "]", "\n", "for", "name", "in", "[", "'torso'", "]", "\n", "if", "name", "in", "opp", ".", "body_name_idx", "\n", "]", "\n", "opp_forces", "=", "np", ".", "abs", "(", "np", ".", "clip", "(", "\n", "opp", ".", "get_cfrc_ext", "(", "body_ids", ")", ",", "-", "self", ".", "CFRC_CLIP", ",", "self", ".", "CFRC_CLIP", ")", ")", "\n", "obs", ".", "extend", "(", "[", "\n", "opp", ".", "get_qpos", "(", ")", "[", ":", "7", "]", ".", "flat", ",", "# opponent torso position", "\n", "opp_forces", ".", "flat", ",", "# opponent torso forces", "\n", "]", ")", "\n", "", "return", "np", ".", "concatenate", "(", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.before_step": [[214, 216], ["[].copy", "agents.Agent.get_qpos"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos"], ["", "def", "before_step", "(", "self", ")", ":", "\n", "        ", "self", ".", "posbefore", "=", "self", ".", "get_qpos", "(", ")", "[", ":", "2", "]", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.after_step": [[217, 222], ["[].copy", "numpy.square().sum", "agents.Agent.get_qpos", "numpy.square"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.get_qpos"], ["", "def", "after_step", "(", "self", ",", "action", ")", ":", "\n", "        ", "self", ".", "posafter", "=", "self", ".", "get_qpos", "(", ")", "[", ":", "2", "]", ".", "copy", "(", ")", "\n", "# Control cost", "\n", "reward", "=", "-", "self", ".", "COST_COEFS", "[", "'ctrl'", "]", "*", "np", ".", "square", "(", "action", ")", ".", "sum", "(", ")", "\n", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Ant.__init__": [[233, 237], ["os.path.join", "agents.Agent.__init__", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__"], ["def", "__init__", "(", "self", ",", "env", ",", "scope", "=", "\"ant\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "xml_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "\"assets\"", ",", "\"ant.xml\"", ")", "\n", "super", "(", "Ant", ",", "self", ")", ".", "__init__", "(", "env", ",", "scope", ",", "xml_path", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Bug.__init__": [[244, 248], ["os.path.join", "agents.Agent.__init__", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__"], ["def", "__init__", "(", "self", ",", "env", ",", "scope", "=", "\"bug\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "xml_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "\"assets\"", ",", "\"bug.xml\"", ")", "\n", "super", "(", "Bug", ",", "self", ")", ".", "__init__", "(", "env", ",", "scope", ",", "xml_path", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Spider.__init__": [[255, 259], ["os.path.join", "agents.Agent.__init__", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__"], ["def", "__init__", "(", "self", ",", "env", ",", "scope", "=", "\"spider\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "xml_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "\"assets\"", ",", "\"spider.xml\"", ")", "\n", "super", "(", "Spider", ",", "self", ")", ".", "__init__", "(", "env", ",", "scope", ",", "xml_path", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get": [[270, 274], ["ValueError"], "function", ["None"], ["def", "get", "(", "name", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "name", "not", "in", "_available_agents", ":", "\n", "        ", "raise", "ValueError", "(", "\"Class %s is not available.\"", "%", "name", ")", "\n", "", "return", "_available_agents", "[", "name", "]", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.__init__": [[47, 81], ["model_path.startswith", "load_model_from_path", "MjSim", "mujoco_env.MujocoEnv.data.qpos.ravel().copy", "mujoco_env.MujocoEnv.data.qvel.ravel().copy", "mujoco_env.MujocoEnv._step", "mujoco_env.MujocoEnv.model.actuator_ctrlrange.copy", "gym.spaces.Box", "gym.spaces.Box", "mujoco_env.MujocoEnv._seed", "os.path.join", "os.path.exists", "IOError", "numpy.zeros", "numpy.sum", "numpy.ones", "os.path.dirname", "mujoco_env.MujocoEnv.data.qpos.ravel", "mujoco_env.MujocoEnv.data.qvel.ravel", "type"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.sumo.SumoEnv._step", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._seed"], ["def", "__init__", "(", "self", ",", "model_path", ",", "frame_skip", ")", ":", "\n", "        ", "if", "model_path", ".", "startswith", "(", "\"/\"", ")", ":", "\n", "            ", "fullpath", "=", "model_path", "\n", "", "else", ":", "\n", "            ", "fullpath", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\"assets\"", ",", "model_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "fullpath", ")", ":", "\n", "            ", "raise", "IOError", "(", "\"File %s does not exist\"", "%", "fullpath", ")", "\n", "", "self", ".", "frame_skip", "=", "frame_skip", "\n", "self", ".", "model", "=", "load_model_from_path", "(", "fullpath", ")", "\n", "self", ".", "sim", "=", "MjSim", "(", "self", ".", "model", ")", "\n", "self", ".", "data", "=", "self", ".", "sim", ".", "data", "\n", "self", ".", "viewer", "=", "None", "\n", "self", ".", "buffer_size", "=", "(", "1600", ",", "1280", ")", "\n", "\n", "self", ".", "metadata", "=", "{", "\n", "'render.modes'", ":", "[", "'human'", ",", "'rgb_array'", "]", ",", "\n", "'video.frames_per_second'", ":", "60", ",", "\n", "}", "\n", "\n", "self", ".", "init_qpos", "=", "self", ".", "data", ".", "qpos", ".", "ravel", "(", ")", ".", "copy", "(", ")", "\n", "self", ".", "init_qvel", "=", "self", ".", "data", ".", "qvel", ".", "ravel", "(", ")", ".", "copy", "(", ")", "\n", "observation", ",", "_reward", ",", "done", ",", "_info", "=", "self", ".", "_step", "(", "np", ".", "zeros", "(", "self", ".", "model", ".", "nu", ")", ")", "\n", "assert", "not", "done", "\n", "self", ".", "obs_dim", "=", "np", ".", "sum", "(", "[", "o", ".", "size", "for", "o", "in", "observation", "]", ")", "if", "(", "\n", "type", "(", "observation", ")", "is", "tuple", ")", "else", "observation", ".", "size", "\n", "\n", "bounds", "=", "self", ".", "model", ".", "actuator_ctrlrange", ".", "copy", "(", ")", "\n", "low", ",", "high", "=", "bounds", "[", ":", ",", "0", "]", ",", "bounds", "[", ":", ",", "1", "]", "\n", "self", ".", "action_space", "=", "spaces", ".", "Box", "(", "low", ",", "high", ")", "\n", "\n", "high", "=", "np", ".", "inf", "*", "np", ".", "ones", "(", "self", ".", "obs_dim", ")", "\n", "self", ".", "observation_space", "=", "spaces", ".", "Box", "(", "-", "high", ",", "high", ")", "\n", "\n", "self", ".", "_seed", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._seed": [[82, 85], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "_seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.reset_model": [[89, 94], ["None"], "methods", ["None"], ["", "def", "reset_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"Reset the robot degrees of freedom (qpos and qvel).\n        Implement this in each subclass.\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.viewer_setup": [[95, 101], ["None"], "methods", ["None"], ["", "def", "viewer_setup", "(", "self", ")", ":", "\n", "        ", "\"\"\"Called when the viewer is initialized and after every reset.\n        Optionally implement this method, if you need to tinker with camera\n        position and so forth.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._reset": [[104, 109], ["mujoco_env.MujocoEnv.sim.reset", "mujoco_env.MujocoEnv.sim.forward", "mujoco_env.MujocoEnv.reset_model"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.Agent.reset", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.reset_model"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "sim", ".", "reset", "(", ")", "\n", "self", ".", "sim", ".", "forward", "(", ")", "\n", "ob", "=", "self", ".", "reset_model", "(", ")", "\n", "return", "ob", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.set_state": [[110, 120], ["mujoco_env.MujocoEnv.sim.get_state", "range", "range", "mujoco_env.MujocoEnv.sim.set_state", "mujoco_env.MujocoEnv.sim.forward"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.set_state"], ["", "def", "set_state", "(", "self", ",", "qpos", ",", "qvel", ")", ":", "\n", "        ", "assert", "qpos", ".", "shape", "==", "(", "self", ".", "model", ".", "nq", ",", ")", "\n", "assert", "qvel", ".", "shape", "==", "(", "self", ".", "model", ".", "nv", ",", ")", "\n", "state", "=", "self", ".", "sim", ".", "get_state", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "model", ".", "nq", ")", ":", "\n", "            ", "state", ".", "qpos", "[", "i", "]", "=", "qpos", "[", "i", "]", "\n", "", "for", "i", "in", "range", "(", "self", ".", "model", ".", "nv", ")", ":", "\n", "            ", "state", ".", "qvel", "[", "i", "]", "=", "qvel", "[", "i", "]", "\n", "", "self", ".", "sim", ".", "set_state", "(", "state", ")", "\n", "self", ".", "sim", ".", "forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.dt": [[121, 124], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dt", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "opt", ".", "timestep", "*", "self", ".", "frame_skip", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.do_simulation": [[125, 130], ["range", "range", "mujoco_env.MujocoEnv.sim.step"], "methods", ["None"], ["", "def", "do_simulation", "(", "self", ",", "ctrl", ",", "n_frames", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "model", ".", "nu", ")", ":", "\n", "            ", "self", ".", "sim", ".", "data", ".", "ctrl", "[", "i", "]", "=", "ctrl", "[", "i", "]", "\n", "", "for", "_", "in", "range", "(", "n_frames", ")", ":", "\n", "            ", "self", ".", "sim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._render": [[131, 142], ["mujoco_env.MujocoEnv.viewer_setup", "mujoco_env._read_pixels", "mujoco_env.MujocoEnv._get_viewer().render", "mujoco_env.MujocoEnv._get_viewer"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.viewer_setup", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env._read_pixels", "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._get_viewer"], ["", "", "def", "_render", "(", "self", ",", "mode", "=", "'human'", ",", "close", "=", "False", ")", ":", "\n", "        ", "if", "close", ":", "\n", "            ", "if", "self", ".", "viewer", "is", "not", "None", ":", "\n", "                ", "self", ".", "viewer", "=", "None", "\n", "", "return", "\n", "\n", "", "if", "mode", "==", "'rgb_array'", ":", "\n", "            ", "self", ".", "viewer_setup", "(", ")", "\n", "return", "_read_pixels", "(", "self", ".", "sim", ",", "*", "self", ".", "buffer_size", ")", "\n", "", "elif", "mode", "==", "'human'", ":", "\n", "            ", "self", ".", "_get_viewer", "(", ")", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv._get_viewer": [[143, 148], ["MjViewer", "mujoco_env.MujocoEnv.viewer_setup"], "methods", ["home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.viewer_setup"], ["", "", "def", "_get_viewer", "(", "self", ",", "mode", "=", "'human'", ")", ":", "\n", "        ", "if", "self", ".", "viewer", "is", "None", "and", "mode", "==", "'human'", ":", "\n", "            ", "self", ".", "viewer", "=", "MjViewer", "(", "self", ".", "sim", ")", "\n", "self", ".", "viewer_setup", "(", ")", "\n", "", "return", "self", ".", "viewer", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env.MujocoEnv.state_vector": [[149, 152], ["mujoco_env.MujocoEnv.sim.get_state", "numpy.concatenate"], "methods", ["None"], ["", "def", "state_vector", "(", "self", ")", ":", "\n", "        ", "state", "=", "self", ".", "sim", ".", "get_state", "(", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "state", ".", "qpos", ".", "flat", ",", "state", ".", "qvel", ".", "flat", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.openai_robosumo.envs.mujoco_env._read_pixels": [[28, 42], ["sim.render", "glfw.get_framebuffer_size", "numpy.array", "resolution.astype.astype", "min", "numpy.min"], "function", ["None"], ["", "def", "_read_pixels", "(", "sim", ",", "width", "=", "None", ",", "height", "=", "None", ",", "camera_name", "=", "None", ")", ":", "\n", "    ", "\"\"\"Reads pixels w/o markers and overlay from the same camera as screen.\"\"\"", "\n", "if", "width", "is", "None", "or", "height", "is", "None", ":", "\n", "        ", "resolution", "=", "glfw", ".", "get_framebuffer_size", "(", "\n", "sim", ".", "_render_context_window", ".", "window", ")", "\n", "resolution", "=", "np", ".", "array", "(", "resolution", ")", "\n", "resolution", "=", "resolution", "*", "min", "(", "1000", "/", "np", ".", "min", "(", "resolution", ")", ",", "1", ")", "\n", "resolution", "=", "resolution", ".", "astype", "(", "np", ".", "int32", ")", "\n", "resolution", "-=", "resolution", "%", "16", "\n", "width", ",", "height", "=", "resolution", "\n", "\n", "", "img", "=", "sim", ".", "render", "(", "width", ",", "height", ",", "camera_name", "=", "camera_name", ")", "\n", "img", "=", "img", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "# Rendered images are upside-down.", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils.cart2pol": [[7, 12], ["numpy.sqrt", "numpy.arctan2", "numpy.asarray"], "function", ["None"], ["\n", "\n", "class", "RunningMeanStd", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "scope", "=", "\"running\"", ",", "reuse", "=", "False", ",", "epsilon", "=", "1e-2", ",", "shape", "=", "(", ")", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "self", ".", "_sum", "=", "tf", ".", "get_variable", "(", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils.get_distinct_colors": [[14, 19], ["map", "range", "colorsys.hsv_to_rgb"], "function", ["None"], ["shape", "=", "shape", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "name", "=", "\"sum\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "_sumsq", "=", "tf", ".", "get_variable", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "shape", ",", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._set_class": [[21, 28], ["list", "root.set", "utils._set_class"], "function", ["home.repos.pwc.inspect_result.openai_robosumo.envs.utils._set_class"], ["name", "=", "\"sumsq\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "_count", "=", "tf", ".", "get_variable", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "epsilon", ")", ",", "\n", "name", "=", "\"count\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "shape", "=", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix": [[30, 40], ["root.get", "list", "root.set", "utils._add_prefix", "root.set", "str", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix"], ["var_est", "=", "tf", ".", "to_float", "(", "self", ".", "_sumsq", "/", "self", ".", "_count", ")", "-", "tf", ".", "square", "(", "self", ".", "mean", ")", "\n", "self", ".", "std", "=", "tf", ".", "sqrt", "(", "tf", ".", "maximum", "(", "var_est", ",", "1e-2", ")", ")", "\n", "\n", "\n", "", "", "", "class", "DiagonalGaussian", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "mean", ",", "logstd", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "logstd", "=", "logstd", "\n", "self", ".", "std", "=", "tf", ".", "exp", "(", "logstd", ")", "\n", "\n", "", "def", "sample", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._tuple_to_str": [[42, 44], ["map"], "function", ["None"], ["\n", "", "def", "mode", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mean", "\n"]], "home.repos.pwc.inspect_result.openai_robosumo.envs.utils.construct_scene": [[46, 184], ["len", "xml.parse", "ET.parse.getroot", "scene.getroot.find", "scene.getroot.find", "list", "range", "scene_root.find.findall", "utils.get_distinct_colors", "map", "range", "xml.parse", "xml.SubElement", "str", "list", "ET.parse.find", "agent_xml.find.set", "utils._set_class", "utils._add_prefix", "scene_root.find.append", "ET.parse.find", "utils._add_prefix", "utils._add_prefix", "utils._set_class", "ET.parse.find", "utils._add_prefix", "utils._add_prefix", "len", "len", "init_poses.append", "ET.parse.find", "ET.SubElement.append", "xml.SubElement", "utils._tuple_to_str", "scene.getroot.append", "scene.getroot.find", "list", "scene.getroot.append", "scene.getroot.find", "list", "geom.get", "geom.set", "geom.get", "geom.set", "geom.get", "geom.set", "geom.get", "geom.set", "geom.get", "geom.set", "utils._tuple_to_str", "str", "range", "child.set", "child.set", "scene_root.find.append", "scene_root.find.append", "numpy.cos", "numpy.sin"], "function", ["home.repos.pwc.inspect_result.openai_robosumo.envs.utils.get_distinct_colors", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._set_class", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._set_class", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._add_prefix", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._tuple_to_str", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.agents.get", "home.repos.pwc.inspect_result.openai_robosumo.envs.utils._tuple_to_str"], ["\n", "", "", "def", "dense", "(", "x", ",", "size", ",", "name", ",", "weight_init", "=", "None", ",", "bias", "=", "True", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "name", "+", "\"/w\"", ",", "[", "x", ".", "get_shape", "(", ")", "[", "1", "]", ",", "size", "]", ",", "\n", "initializer", "=", "weight_init", ")", "\n", "ret", "=", "tf", ".", "matmul", "(", "x", ",", "w", ")", "\n", "if", "bias", ":", "\n", "        ", "b", "=", "tf", ".", "get_variable", "(", "name", "+", "\"/b\"", ",", "[", "size", "]", ",", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "return", "ret", "+", "b", "\n", "", "else", ":", "\n", "        ", "return", "ret", "\n", "\n", "\n", "", "", "def", "switch", "(", "condition", ",", "if_exp", ",", "else_exp", ")", ":", "\n", "    ", "x_shape", "=", "copy", ".", "copy", "(", "if_exp", ".", "get_shape", "(", ")", ")", "\n", "x", "=", "tf", ".", "cond", "(", "tf", ".", "cast", "(", "condition", ",", "'bool'", ")", ",", "\n", "lambda", ":", "if_exp", ",", "\n", "lambda", ":", "else_exp", ")", "\n", "x", ".", "set_shape", "(", "x_shape", ")", "\n", "return", "x", "\n", "\n", "\n", "", "def", "load_params", "(", "path", ")", ":", "\n", "    ", "return", "np", ".", "load", "(", "path", ")", "\n", "\n", "\n", "", "def", "set_from_flat", "(", "var_list", ",", "flat_params", ")", ":", "\n", "    ", "shapes", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ",", "var_list", ")", ")", "\n", "total_size", "=", "np", ".", "sum", "(", "[", "int", "(", "np", ".", "prod", "(", "shape", ")", ")", "for", "shape", "in", "shapes", "]", ")", "\n", "theta", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "total_size", "]", ")", "\n", "start", "=", "0", "\n", "assigns", "=", "[", "]", "\n", "for", "(", "shape", ",", "v", ")", "in", "zip", "(", "shapes", ",", "var_list", ")", ":", "\n", "        ", "size", "=", "int", "(", "np", ".", "prod", "(", "shape", ")", ")", "\n", "assign", "=", "tf", ".", "assign", "(", "v", ",", "tf", ".", "reshape", "(", "theta", "[", "start", ":", "start", "+", "size", "]", ",", "shape", ")", ")", "\n", "assigns", ".", "append", "(", "assign", ")", "\n", "start", "+=", "size", "\n", "", "op", "=", "tf", ".", "group", "(", "*", "assigns", ")", "\n", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "op", ",", "{", "theta", ":", "flat_params", "}", ")", "\n", "", ""]]}