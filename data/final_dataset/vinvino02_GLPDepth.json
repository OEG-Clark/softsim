{"home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.convert_arg_line_to_args": [[29, 34], ["arg_line.split", "arg.strip"], "function", ["None"], ["def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n", "            ", "continue", "\n", "", "yield", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.compute_errors": [[52, 74], ["numpy.maximum", "numpy.sqrt", "numpy.sqrt", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.mean", "np.sqrt.mean", "np.sqrt.mean", "numpy.log", "numpy.log", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.abs", "numpy.log10", "numpy.log10", "numpy.mean", "numpy.mean"], "function", ["None"], ["def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "np", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "np", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "err", "=", "np", ".", "log", "(", "pred", ")", "-", "np", ".", "log", "(", "gt", ")", "\n", "silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.test": [[76, 155], ["set", "len", "print", "tqdm.trange", "print", "print", "print", "print", "print", "eval_with_pngs.eval", "print", "os.path.join", "numpy.array", "pred_depths.append", "range", "os.listdir", "PIL.Image.open", "print", "set.add", "len", "file_dir.replace", "cv2.imread", "gt_depths.append", "range", "len", "np.array.astype", "np.array.astype", "pred_filenames[].split", "file_dir.split", "os.path.join", "os.path.join", "print", "set.add", "cv2.imread.astype", "file_dir.replace", "os.path.join", "cv2.imread", "gt_depths.append", "i.split", "os.path.isfile", "gt_depth_path.replace.replace", "pred_filenames[].split", "file_dir.split", "print", "set.add", "cv2.imread.astype", "file_dir.split", "file_dir.split"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.eval"], ["", "def", "test", "(", ")", ":", "\n", "    ", "global", "gt_depths", ",", "missing_ids", ",", "pred_filenames", "\n", "gt_depths", "=", "[", "]", "\n", "missing_ids", "=", "set", "(", ")", "\n", "pred_filenames", "=", "[", "i", "for", "i", "in", "os", ".", "listdir", "(", "args", ".", "pred_path", ")", "if", "i", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "in", "[", "'jpg'", ",", "'png'", "]", "]", "\n", "num_test_samples", "=", "len", "(", "pred_filenames", ")", "\n", "pred_depths", "=", "[", "]", "\n", "\n", "print", "(", "\"Read pred images\"", ")", "\n", "\n", "for", "i", "in", "trange", "(", "num_test_samples", ")", ":", "\n", "        ", "pred_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "pred_path", ",", "pred_filenames", "[", "i", "]", ")", "\n", "pred_depth", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "pred_depth_path", ")", ")", "\n", "\n", "if", "pred_depth", "is", "None", ":", "\n", "            ", "print", "(", "'Missing: %s '", "%", "pred_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "i", ")", "\n", "continue", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "            ", "pred_depth", "=", "pred_depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "", "else", ":", "\n", "            ", "pred_depth", "=", "pred_depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "\n", "", "pred_depths", ".", "append", "(", "pred_depth", ")", "\n", "\n", "", "print", "(", "'Raw png files reading done'", ")", "\n", "print", "(", "'Evaluating {} files'", ".", "format", "(", "len", "(", "pred_depths", ")", ")", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "            ", "file_dir", "=", "pred_filenames", "[", "t_id", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "filename", "=", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "directory", "=", "file_dir", ".", "replace", "(", "'_'", "+", "filename", ",", "''", ")", "\n", "\n", "if", "args", ".", "split", "==", "'eigen_benchmark'", ":", "\n", "                ", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "'data_depth_annotated'", ",", "'train'", ",", "directory", ",", "\n", "'proj_depth/groundtruth/image_02'", ",", "filename", "+", "'.png'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "gt_depth_path", ")", ":", "\n", "                    ", "gt_depth_path", "=", "gt_depth_path", ".", "replace", "(", "\"train\"", ",", "\"val\"", ")", "\n", "", "", "else", ":", "\n", "                ", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "'_'", ".", "join", "(", "file_dir", ".", "split", "(", "'_'", ")", "[", "0", ":", "3", "]", ")", ",", "directory", ",", "\n", "'velodyne_points/data'", ",", "filename", "+", "'.png'", ")", "\n", "\n", "", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "elif", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "        ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "            ", "file_dir", "=", "pred_filenames", "[", "t_id", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "filename", "=", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "directory", "=", "file_dir", ".", "replace", "(", "'_rgb_'", "+", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ",", "''", ")", "\n", "\n", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "'official_splits/test'", ",", "directory", ",", "\n", "'sync_depth_'", "+", "filename", "+", "'.png'", ")", "\n", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "print", "(", "'GT files reading done'", ")", "\n", "print", "(", "'{} GT files missing'", ".", "format", "(", "len", "(", "missing_ids", ")", ")", ")", "\n", "\n", "print", "(", "'Computing errors'", ")", "\n", "eval", "(", "pred_depths", ")", "\n", "\n", "print", "(", "'Done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.eval": [[156, 226], ["len", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tqdm.trange", "print", "print", "pred_depths_valid.append", "len", "numpy.logical_and", "eval_with_pngs.compute_errors", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.logical_and", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "numpy.isinf", "numpy.isnan", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.compute_errors"], ["", "def", "eval", "(", "pred_depths", ")", ":", "\n", "    ", "num_samples", "=", "len", "(", "pred_depths", ")", "\n", "pred_depths_valid", "=", "[", "]", "\n", "\n", "i", "=", "0", "\n", "for", "t_id", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "if", "t_id", "in", "missing_ids", ":", "\n", "            ", "continue", "\n", "\n", "", "pred_depths_valid", ".", "append", "(", "pred_depths", "[", "t_id", "]", ")", "\n", "\n", "", "num_samples", "=", "num_samples", "-", "len", "(", "missing_ids", ")", "\n", "\n", "silog", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log10", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log_rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "abs_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "sq_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d1", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d2", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d3", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "trange", "(", "num_samples", ")", ":", "\n", "\n", "        ", "gt_depth", "=", "gt_depths", "[", "i", "]", "\n", "pred_depth", "=", "pred_depths_valid", "[", "i", "]", "\n", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isnan", "(", "pred_depth", ")", "]", "=", "args", ".", "min_depth_eval", "\n", "\n", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "gt_cropped", "=", "gt_depth", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "\n", "gt_depth", "=", "gt_cropped", "\n", "\n", "", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "eval_mask", "=", "None", "\n", "\n", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "\n", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "\n", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "", "if", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "            ", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "if", "eval_mask", "is", "not", "None", ":", "\n", "            ", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "silog", "[", "i", "]", ",", "log10", "[", "i", "]", ",", "abs_rel", "[", "i", "]", ",", "sq_rel", "[", "i", "]", ",", "rms", "[", "i", "]", ",", "log_rms", "[", "i", "]", ",", "d1", "[", "i", "]", ",", "d2", "[", "i", "]", ",", "d3", "[", "i", "]", "=", "compute_errors", "(", "\n", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "\n", "'d1'", ",", "'d2'", ",", "'d3'", ",", "'AbsRel'", ",", "'SqRel'", ",", "'RMSE'", ",", "'RMSElog'", ",", "'SILog'", ",", "'log10'", ")", ")", "\n", "print", "(", "\"{:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}\"", ".", "format", "(", "\n", "d1", ".", "mean", "(", ")", ",", "d2", ".", "mean", "(", ")", ",", "d3", ".", "mean", "(", ")", ",", "\n", "abs_rel", ".", "mean", "(", ")", ",", "sq_rel", ".", "mean", "(", ")", ",", "rms", ".", "mean", "(", ")", ",", "log_rms", ".", "mean", "(", ")", ",", "silog", ".", "mean", "(", ")", ",", "log10", ".", "mean", "(", ")", ")", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.main": [[228, 233], ["eval_with_pngs.test"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "args", ".", "do_kb_crop", "=", "True", "\n", "\n", "", "test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.main": [[23, 101], ["configs.train_options.TrainOptions", "configs.train_options.TrainOptions.initialize().parse_args", "print", "os.path.join", "utils.check_and_make_dirs", "tensorboardX.SummaryWriter", "os.path.join", "utils.log_args_to_txt", "os.path.join", "models.model.GLPDepth", "torch.nn.DataParallel.to", "dataset.base_dataset.get_dataset", "dataset.base_dataset.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "utils.criterion.SiLogLoss", "torch.Adam", "range", "os.path.exists", "os.makedirs", "torch.device", "torch.device", "torch.device", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.device", "torch.device", "torch.device", "torch.nn.DataParallel.parameters", "print", "train.train", "tensorboardX.SummaryWriter.add_scalar", "configs.train_options.TrainOptions.initialize", "datetime.datetime.now().strftime", "train.validate", "tensorboardX.SummaryWriter.add_scalar", "utils.display_result", "print", "results_dict.items", "print", "open", "txtfile.write", "txtfile.write", "tensorboardX.SummaryWriter.add_scalar", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.check_and_make_dirs", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.log_args_to_txt", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.get_dataset", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.get_dataset", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.train", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.validate", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.display_result"], ["def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "TrainOptions", "(", ")", "\n", "args", "=", "opt", ".", "initialize", "(", ")", ".", "parse_args", "(", ")", "\n", "print", "(", "args", ")", "\n", "\n", "# Logging", "\n", "exp_name", "=", "'%s_%s'", "%", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m%d'", ")", ",", "args", ".", "exp_name", ")", "\n", "log_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "log_dir", ",", "args", ".", "dataset", ",", "exp_name", ")", "\n", "logging", ".", "check_and_make_dirs", "(", "log_dir", ")", "\n", "writer", "=", "SummaryWriter", "(", "logdir", "=", "log_dir", ")", "\n", "log_txt", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'logs.txt'", ")", "\n", "logging", ".", "log_args_to_txt", "(", "log_txt", ",", "args", ")", "\n", "\n", "global", "result_dir", "\n", "result_dir", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'results'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "result_dir", ")", "\n", "\n", "", "model", "=", "GLPDepth", "(", "max_depth", "=", "args", ".", "max_depth", ",", "is_train", "=", "True", ")", "\n", "\n", "# CPU-GPU agnostic settings", "\n", "if", "args", ".", "gpu_or_cpu", "==", "'gpu'", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "model", ".", "to", "(", "device", ")", "\n", "\n", "# Dataset setting", "\n", "dataset_kwargs", "=", "{", "'dataset_name'", ":", "args", ".", "dataset", ",", "'data_path'", ":", "args", ".", "data_path", "}", "\n", "if", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "        ", "dataset_kwargs", "[", "'crop_size'", "]", "=", "(", "448", ",", "576", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "dataset_kwargs", "[", "'crop_size'", "]", "=", "(", "352", ",", "704", ")", "\n", "", "else", ":", "\n", "        ", "dataset_kwargs", "[", "'crop_size'", "]", "=", "(", "args", ".", "crop_h", ",", "args", ".", "crop_w", ")", "\n", "\n", "", "train_dataset", "=", "get_dataset", "(", "**", "dataset_kwargs", ")", "\n", "val_dataset", "=", "get_dataset", "(", "**", "dataset_kwargs", ",", "is_train", "=", "False", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "# Training settings", "\n", "criterion_d", "=", "SiLogLoss", "(", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "lr", ")", "\n", "\n", "global", "global_step", "\n", "global_step", "=", "0", "\n", "\n", "# Perform experiment", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "        ", "print", "(", "'\\nEpoch: %03d - %03d'", "%", "(", "epoch", ",", "args", ".", "epochs", ")", ")", "\n", "loss_train", "=", "train", "(", "train_loader", ",", "model", ",", "criterion_d", ",", "optimizer", "=", "optimizer", ",", "\n", "device", "=", "device", ",", "epoch", "=", "epoch", ",", "args", "=", "args", ")", "\n", "writer", ".", "add_scalar", "(", "'Training loss'", ",", "loss_train", ",", "epoch", ")", "\n", "\n", "if", "epoch", "%", "args", ".", "val_freq", "==", "0", ":", "\n", "            ", "results_dict", ",", "loss_val", "=", "validate", "(", "val_loader", ",", "model", ",", "criterion_d", ",", "\n", "device", "=", "device", ",", "epoch", "=", "epoch", ",", "args", "=", "args", ",", "\n", "log_dir", "=", "log_dir", ")", "\n", "writer", ".", "add_scalar", "(", "'Val loss'", ",", "loss_val", ",", "epoch", ")", "\n", "\n", "result_lines", "=", "logging", ".", "display_result", "(", "results_dict", ")", "\n", "if", "args", ".", "kitti_crop", ":", "\n", "                ", "print", "(", "\"\\nCrop Method: \"", ",", "args", ".", "kitti_crop", ")", "\n", "", "print", "(", "result_lines", ")", "\n", "\n", "with", "open", "(", "log_txt", ",", "'a'", ")", "as", "txtfile", ":", "\n", "                ", "txtfile", ".", "write", "(", "'\\nEpoch: %03d - %03d'", "%", "(", "epoch", ",", "args", ".", "epochs", ")", ")", "\n", "txtfile", ".", "write", "(", "result_lines", ")", "\n", "\n", "", "for", "each_metric", ",", "each_results", "in", "results_dict", ".", "items", "(", ")", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "each_metric", ",", "each_results", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.train": [[103, 137], ["model.train", "utils.AverageMeter", "enumerate", "batch[].to", "batch[].to", "model", "optimizer.zero_grad", "criterion_d", "logging.AverageMeter.update", "criterion_d.backward", "utils.progress_bar", "optimizer.step", "preds[].squeeze", "criterion_d.item", "batch[].to.size", "len"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.train", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.update", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.progress_bar"], ["", "", "", "", "def", "train", "(", "train_loader", ",", "model", ",", "criterion_d", ",", "optimizer", ",", "device", ",", "epoch", ",", "args", ")", ":", "\n", "    ", "global", "global_step", "\n", "model", ".", "train", "(", ")", "\n", "depth_loss", "=", "logging", ".", "AverageMeter", "(", ")", "\n", "half_epoch", "=", "args", ".", "epochs", "//", "2", "\n", "\n", "for", "batch_idx", ",", "batch", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "global_step", "+=", "1", "\n", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "if", "global_step", "<", "2019", "*", "half_epoch", ":", "\n", "                ", "current_lr", "=", "(", "1e-4", "-", "3e-5", ")", "*", "(", "global_step", "/", "\n", "2019", "/", "half_epoch", ")", "**", "0.9", "+", "3e-5", "\n", "", "else", ":", "\n", "                ", "current_lr", "=", "(", "3e-5", "-", "1e-4", ")", "*", "(", "global_step", "/", "\n", "2019", "/", "half_epoch", "-", "1", ")", "**", "0.9", "+", "1e-4", "\n", "", "param_group", "[", "'lr'", "]", "=", "current_lr", "\n", "\n", "", "input_RGB", "=", "batch", "[", "'image'", "]", ".", "to", "(", "device", ")", "\n", "depth_gt", "=", "batch", "[", "'depth'", "]", ".", "to", "(", "device", ")", "\n", "\n", "preds", "=", "model", "(", "input_RGB", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_d", "=", "criterion_d", "(", "preds", "[", "'pred_d'", "]", ".", "squeeze", "(", ")", ",", "depth_gt", ")", "\n", "depth_loss", ".", "update", "(", "loss_d", ".", "item", "(", ")", ",", "input_RGB", ".", "size", "(", "0", ")", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "\n", "logging", ".", "progress_bar", "(", "batch_idx", ",", "len", "(", "train_loader", ")", ",", "args", ".", "epochs", ",", "epoch", ",", "\n", "(", "'Depth Loss: %.4f (%.4f)'", "%", "\n", "(", "depth_loss", ".", "val", ",", "depth_loss", ".", "avg", ")", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "return", "loss_d", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.train.validate": [[139, 193], ["utils.AverageMeter", "model.eval", "enumerate", "result_metrics.keys", "torch.save", "torch.save", "torch.save", "batch[].to", "batch[].to", "preds[].squeeze", "depth_gt.squeeze.squeeze", "criterion_d", "logging.AverageMeter.update", "utils.cropping_img", "utils.eval_depth", "os.path.join", "utils.progress_bar", "result_metrics.keys", "model.state_dict", "os.path.join", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "preds[].squeeze", "criterion_d.item", "batch[].to.size", "save_path.replace.replace", "len", "save_path.replace.split", "cv2.imwrite", "cv2.imwrite", "preds[].squeeze.cpu().numpy", "pred_d_numpy.astype", "preds[].squeeze.cpu().numpy", "pred_d_numpy.astype", "preds[].squeeze.cpu", "preds[].squeeze.cpu"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.eval", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.update", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.cropping_img", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.eval_depth", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.progress_bar"], ["", "def", "validate", "(", "val_loader", ",", "model", ",", "criterion_d", ",", "device", ",", "epoch", ",", "args", ",", "log_dir", ")", ":", "\n", "    ", "depth_loss", "=", "logging", ".", "AverageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "save_model", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "\n", "log_dir", ",", "'epoch_%02d_model.ckpt'", "%", "epoch", ")", ")", "\n", "\n", "", "result_metrics", "=", "{", "}", "\n", "for", "metric", "in", "metric_name", ":", "\n", "        ", "result_metrics", "[", "metric", "]", "=", "0.0", "\n", "\n", "", "for", "batch_idx", ",", "batch", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "        ", "input_RGB", "=", "batch", "[", "'image'", "]", ".", "to", "(", "device", ")", "\n", "depth_gt", "=", "batch", "[", "'depth'", "]", ".", "to", "(", "device", ")", "\n", "filename", "=", "batch", "[", "'filename'", "]", "[", "0", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "preds", "=", "model", "(", "input_RGB", ")", "\n", "\n", "", "pred_d", "=", "preds", "[", "'pred_d'", "]", ".", "squeeze", "(", ")", "\n", "depth_gt", "=", "depth_gt", ".", "squeeze", "(", ")", "\n", "\n", "loss_d", "=", "criterion_d", "(", "preds", "[", "'pred_d'", "]", ".", "squeeze", "(", ")", ",", "depth_gt", ")", "\n", "\n", "depth_loss", ".", "update", "(", "loss_d", ".", "item", "(", ")", ",", "input_RGB", ".", "size", "(", "0", ")", ")", "\n", "\n", "pred_crop", ",", "gt_crop", "=", "metrics", ".", "cropping_img", "(", "args", ",", "pred_d", ",", "depth_gt", ")", "\n", "computed_result", "=", "metrics", ".", "eval_depth", "(", "pred_crop", ",", "gt_crop", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "filename", ")", "\n", "\n", "if", "save_path", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "==", "'jpg'", ":", "\n", "            ", "save_path", "=", "save_path", ".", "replace", "(", "'jpg'", ",", "'png'", ")", "\n", "\n", "", "if", "args", ".", "save_result", ":", "\n", "            ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                ", "pred_d_numpy", "=", "pred_d", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "*", "256.0", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "pred_d_numpy", ".", "astype", "(", "np", ".", "uint16", ")", ",", "\n", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "pred_d_numpy", "=", "pred_d", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "*", "1000.0", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "pred_d_numpy", ".", "astype", "(", "np", ".", "uint16", ")", ",", "\n", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "\n", "", "", "loss_d", "=", "depth_loss", ".", "avg", "\n", "logging", ".", "progress_bar", "(", "batch_idx", ",", "len", "(", "val_loader", ")", ",", "args", ".", "epochs", ",", "epoch", ")", "\n", "\n", "for", "key", "in", "result_metrics", ".", "keys", "(", ")", ":", "\n", "            ", "result_metrics", "[", "key", "]", "+=", "computed_result", "[", "key", "]", "\n", "\n", "", "", "for", "key", "in", "result_metrics", ".", "keys", "(", ")", ":", "\n", "        ", "result_metrics", "[", "key", "]", "=", "result_metrics", "[", "key", "]", "/", "(", "batch_idx", "+", "1", ")", "\n", "\n", "", "return", "result_metrics", ",", "loss_d", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.test.main": [[24, 114], ["configs.test_options.TestOptions", "configs.test_options.TestOptions.initialize().parse_args", "print", "print", "models.model.GLPDepth().to", "torch.load", "torch.load", "GLPDepth().to.load_state_dict", "GLPDepth().to.eval", "print", "dataset.base_dataset.get_dataset", "torch.utils.data.DataLoader", "print", "enumerate", "print", "torch.device", "torch.device", "torch.device", "torch.device", "os.path.join", "utils.check_and_make_dirs", "print", "collections.OrderedDict", "batch[].to", "utils.progress_bar", "result_metrics.keys", "utils.display_result", "print", "configs.test_options.TestOptions.initialize", "models.model.GLPDepth", "next", "torch.no_grad", "torch.no_grad", "GLPDepth().to.", "batch[].to", "utils.cropping_img", "utils.eval_depth", "os.path.join", "pred_d.squeeze.squeeze", "os.path.join", "pred_d.squeeze.squeeze().cpu().numpy", "pred_d_numpy.astype.astype", "cv2.applyColorMap", "cv2.imwrite", "len", "print", "iter", "pred_d.squeeze.squeeze", "batch[].to.squeeze", "save_path.replace.replace", "cv2.imwrite", "cv2.imwrite", "collections.OrderedDict.items", "collections.OrderedDict.items", "save_path.replace.split", "pred_d.squeeze.cpu().numpy", "pred_d.squeeze.astype", "pred_d.squeeze.cpu().numpy", "pred_d.squeeze.astype", "pred_d.squeeze.squeeze().cpu", "pred_d_numpy.astype.max", "pred_d.squeeze.cpu", "pred_d.squeeze.cpu", "pred_d.squeeze.squeeze"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.code.eval_with_pngs.eval", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.get_dataset", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.check_and_make_dirs", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.progress_bar", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.display_result", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.cropping_img", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.eval_depth"], ["def", "main", "(", ")", ":", "\n", "# experiments setting", "\n", "    ", "opt", "=", "TestOptions", "(", ")", "\n", "args", "=", "opt", ".", "initialize", "(", ")", ".", "parse_args", "(", ")", "\n", "print", "(", "args", ")", "\n", "\n", "if", "args", ".", "gpu_or_cpu", "==", "'gpu'", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n", "", "if", "args", ".", "save_eval_pngs", "or", "args", ".", "save_visualize", ":", "\n", "        ", "result_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "result_dir", ",", "args", ".", "exp_name", ")", "\n", "logging", ".", "check_and_make_dirs", "(", "result_path", ")", "\n", "print", "(", "\"Saving result images in to %s\"", "%", "result_path", ")", "\n", "\n", "", "if", "args", ".", "do_evaluate", ":", "\n", "        ", "result_metrics", "=", "{", "}", "\n", "for", "metric", "in", "metric_name", ":", "\n", "            ", "result_metrics", "[", "metric", "]", "=", "0.0", "\n", "\n", "", "", "print", "(", "\"\\n1. Define Model\"", ")", "\n", "model", "=", "GLPDepth", "(", "max_depth", "=", "args", ".", "max_depth", ",", "is_train", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "model_weight", "=", "torch", ".", "load", "(", "args", ".", "ckpt_dir", ")", "\n", "if", "'module'", "in", "next", "(", "iter", "(", "model_weight", ".", "items", "(", ")", ")", ")", "[", "0", "]", ":", "\n", "        ", "model_weight", "=", "OrderedDict", "(", "(", "k", "[", "7", ":", "]", ",", "v", ")", "for", "k", ",", "v", "in", "model_weight", ".", "items", "(", ")", ")", "\n", "", "model", ".", "load_state_dict", "(", "model_weight", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "print", "(", "\"\\n2. Define Dataloader\"", ")", "\n", "if", "args", ".", "dataset", "==", "'imagepath'", ":", "# not for do_evaluate in case of imagepath", "\n", "        ", "dataset_kwargs", "=", "{", "'dataset_name'", ":", "'ImagePath'", ",", "'data_path'", ":", "args", ".", "data_path", "}", "\n", "", "else", ":", "\n", "        ", "dataset_kwargs", "=", "{", "'data_path'", ":", "args", ".", "data_path", ",", "'dataset_name'", ":", "args", ".", "dataset", ",", "\n", "'is_train'", ":", "False", "}", "\n", "\n", "", "test_dataset", "=", "get_dataset", "(", "**", "dataset_kwargs", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "print", "(", "\"\\n3. Inference & Evaluate\"", ")", "\n", "for", "batch_idx", ",", "batch", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "        ", "input_RGB", "=", "batch", "[", "'image'", "]", ".", "to", "(", "device", ")", "\n", "filename", "=", "batch", "[", "'filename'", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "model", "(", "input_RGB", ")", "\n", "", "pred_d", "=", "pred", "[", "'pred_d'", "]", "\n", "\n", "if", "args", ".", "do_evaluate", ":", "\n", "            ", "depth_gt", "=", "batch", "[", "'depth'", "]", ".", "to", "(", "device", ")", "\n", "pred_d", ",", "depth_gt", "=", "pred_d", ".", "squeeze", "(", ")", ",", "depth_gt", ".", "squeeze", "(", ")", "\n", "pred_crop", ",", "gt_crop", "=", "metrics", ".", "cropping_img", "(", "args", ",", "pred_d", ",", "depth_gt", ")", "\n", "computed_result", "=", "metrics", ".", "eval_depth", "(", "pred_crop", ",", "gt_crop", ")", "\n", "for", "metric", "in", "metric_name", ":", "\n", "                ", "result_metrics", "[", "metric", "]", "+=", "computed_result", "[", "metric", "]", "\n", "\n", "", "", "if", "args", ".", "save_eval_pngs", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "filename", "[", "0", "]", ")", "\n", "if", "save_path", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "==", "'jpg'", ":", "\n", "                ", "save_path", "=", "save_path", ".", "replace", "(", "'jpg'", ",", "'png'", ")", "\n", "", "pred_d", "=", "pred_d", ".", "squeeze", "(", ")", "\n", "if", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "                ", "pred_d", "=", "pred_d", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "*", "1000.0", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "pred_d", ".", "astype", "(", "np", ".", "uint16", ")", ",", "\n", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "pred_d", "=", "pred_d", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "*", "256.0", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "pred_d", ".", "astype", "(", "np", ".", "uint16", ")", ",", "\n", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "\n", "", "", "if", "args", ".", "save_visualize", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "filename", "[", "0", "]", ")", "\n", "pred_d_numpy", "=", "pred_d", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_d_numpy", "=", "(", "pred_d_numpy", "/", "pred_d_numpy", ".", "max", "(", ")", ")", "*", "255", "\n", "pred_d_numpy", "=", "pred_d_numpy", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "pred_d_color", "=", "cv2", ".", "applyColorMap", "(", "pred_d_numpy", ",", "cv2", ".", "COLORMAP_RAINBOW", ")", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "pred_d_color", ")", "\n", "", "logging", ".", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_loader", ")", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "args", ".", "do_evaluate", ":", "\n", "        ", "for", "key", "in", "result_metrics", ".", "keys", "(", ")", ":", "\n", "            ", "result_metrics", "[", "key", "]", "=", "result_metrics", "[", "key", "]", "/", "(", "batch_idx", "+", "1", ")", "\n", "", "display_result", "=", "logging", ".", "display_result", "(", "result_metrics", ")", "\n", "if", "args", ".", "kitti_crop", ":", "\n", "            ", "print", "(", "\"\\nCrop Method: \"", ",", "args", ".", "kitti_crop", ")", "\n", "", "print", "(", "display_result", ")", "\n", "\n", "", "print", "(", "\"Done\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.__init__": [[67, 69], ["logging.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.reset": [[70, 75], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.AverageMeter.update": [[76, 81], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.progress_bar": [[17, 62], ["int", "sys.stdout.write", "range", "sys.stdout.write", "range", "sys.stdout.write", "time.time", "L.append", "L.append", "L.append", "sys.stdout.write", "range", "range", "sys.stdout.write", "sys.stdout.flush", "time.time", "int", "sys.stdout.write", "sys.stdout.write", "L.append", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "logging.format_time", "logging.format_time", "logging.format_time", "len", "int", "int"], "function", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.format_time", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.format_time", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.format_time"], ["def", "progress_bar", "(", "current", ",", "total", ",", "epochs", ",", "cur_epoch", ",", "msg", "=", "None", ")", ":", "\n", "    ", "global", "last_time", ",", "begin_time", "\n", "if", "current", "==", "0", ":", "\n", "        ", "begin_time", "=", "time", ".", "time", "(", ")", "# Reset for new bar.", "\n", "\n", "", "cur_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "*", "current", "/", "total", ")", "\n", "rest_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "-", "cur_len", ")", "-", "1", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "' ['", ")", "\n", "for", "i", "in", "range", "(", "cur_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'='", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "'>'", ")", "\n", "for", "i", "in", "range", "(", "rest_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'.'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "']'", ")", "\n", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "step_time", "=", "cur_time", "-", "last_time", "\n", "last_time", "=", "cur_time", "\n", "tot_time", "=", "cur_time", "-", "begin_time", "\n", "remain_time", "=", "step_time", "*", "(", "total", "-", "current", ")", "+", "(", "epochs", "-", "cur_epoch", ")", "*", "step_time", "*", "total", "\n", "\n", "L", "=", "[", "]", "\n", "L", ".", "append", "(", "'  Step: %s'", "%", "format_time", "(", "step_time", ")", ")", "\n", "L", ".", "append", "(", "' | Tot: %s'", "%", "format_time", "(", "tot_time", ")", ")", "\n", "L", ".", "append", "(", "' | Rem: %s'", "%", "format_time", "(", "remain_time", ")", ")", "\n", "if", "msg", ":", "\n", "        ", "L", ".", "append", "(", "' | '", "+", "msg", ")", "\n", "\n", "", "msg", "=", "''", ".", "join", "(", "L", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "msg", ")", "\n", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", ")", "-", "len", "(", "msg", ")", "-", "3", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "' '", ")", "\n", "\n", "# Go back to the center of the bar.", "\n", "", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", "/", "2", ")", "+", "2", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\b'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "' %d/%d '", "%", "(", "current", "+", "1", ",", "total", ")", ")", "\n", "\n", "if", "current", "<", "total", "-", "1", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\r'", ")", "\n", "", "else", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\n'", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.format_time": [[83, 114], ["int", "int", "int", "int", "int", "str", "str", "str().zfill", "str().zfill", "str().zfill", "str", "str", "str"], "function", ["None"], ["", "", "def", "format_time", "(", "seconds", ")", ":", "\n", "    ", "days", "=", "int", "(", "seconds", "/", "3600", "/", "24", ")", "\n", "seconds", "=", "seconds", "-", "days", "*", "3600", "*", "24", "\n", "hours", "=", "int", "(", "seconds", "/", "3600", ")", "\n", "seconds", "=", "seconds", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "seconds", "/", "60", ")", "\n", "seconds", "=", "seconds", "-", "minutes", "*", "60", "\n", "secondsf", "=", "int", "(", "seconds", ")", "\n", "seconds", "=", "seconds", "-", "secondsf", "\n", "millis", "=", "int", "(", "seconds", "*", "1000", ")", "\n", "\n", "f", "=", "''", "\n", "i", "=", "1", "\n", "if", "days", ">", "0", ":", "\n", "        ", "f", "+=", "str", "(", "days", ")", "+", "'D'", "\n", "i", "+=", "1", "\n", "", "if", "hours", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "hours", ")", "+", "'h'", "\n", "i", "+=", "1", "\n", "", "if", "minutes", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "minutes", ")", ".", "zfill", "(", "2", ")", "+", "'m'", "\n", "i", "+=", "1", "\n", "", "if", "secondsf", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "secondsf", ")", ".", "zfill", "(", "2", ")", "+", "'s'", "\n", "i", "+=", "1", "\n", "", "if", "millis", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "millis", ")", ".", "zfill", "(", "3", ")", "+", "'ms'", "\n", "i", "+=", "1", "\n", "", "if", "f", "==", "''", ":", "\n", "        ", "f", "=", "'0ms'", "\n", "", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.display_result": [[116, 128], ["result_dict.items", "result_dict.items"], "function", ["None"], ["", "def", "display_result", "(", "result_dict", ")", ":", "\n", "    ", "line", "=", "\"\\n\"", "\n", "line", "+=", "\"=\"", "*", "100", "+", "'\\n'", "\n", "for", "metric", ",", "value", "in", "result_dict", ".", "items", "(", ")", ":", "\n", "        ", "line", "+=", "\"{:>10} \"", ".", "format", "(", "metric", ")", "\n", "", "line", "+=", "\"\\n\"", "\n", "for", "metric", ",", "value", "in", "result_dict", ".", "items", "(", ")", ":", "\n", "        ", "line", "+=", "\"{:10.4f} \"", ".", "format", "(", "value", ")", "\n", "", "line", "+=", "\"\\n\"", "\n", "line", "+=", "\"=\"", "*", "100", "+", "'\\n'", "\n", "\n", "return", "line", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.save_images": [[130, 140], ["isinstance", "cv2.imwrite", "len", "np.transpose.squeeze", "np.transpose.cpu().numpy().astype", "numpy.transpose", "np.transpose.cpu().numpy", "np.transpose.cpu"], "function", ["None"], ["", "def", "save_images", "(", "pred", ",", "save_path", ")", ":", "\n", "    ", "if", "len", "(", "pred", ".", "shape", ")", ">", "3", ":", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "\n", "", "if", "isinstance", "(", "pred", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "pred", "=", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "if", "pred", ".", "shape", "[", "0", "]", "<", "4", ":", "\n", "        ", "pred", "=", "np", ".", "transpose", "(", "pred", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "cv2", ".", "imwrite", "(", "save_path", ",", "pred", ",", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.check_and_make_dirs": [[142, 148], ["isinstance", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "check_and_make_dirs", "(", "paths", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "paths", ",", "list", ")", ":", "\n", "        ", "paths", "=", "[", "paths", "]", "\n", "", "for", "path", "in", "paths", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.logging.log_args_to_txt": [[149, 157], ["os.path.exists", "open", "vars", "vars.items", "txtfile.write", "str", "str"], "function", ["None"], ["", "", "", "def", "log_args_to_txt", "(", "log_txt", ",", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_txt", ")", ":", "\n", "        ", "with", "open", "(", "log_txt", ",", "'w'", ")", "as", "txtfile", ":", "\n", "            ", "args_", "=", "vars", "(", "args", ")", "\n", "args_str", "=", "''", "\n", "for", "k", ",", "v", "in", "args_", ".", "items", "(", ")", ":", "\n", "                ", "args_str", "=", "args_str", "+", "str", "(", "k", ")", "+", "':'", "+", "str", "(", "v", ")", "+", "',\\t\\n'", "\n", "", "txtfile", ".", "write", "(", "args_str", "+", "'\\n'", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.eval_depth": [[4, 28], ["torch.max", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.sqrt", "torch.sum().float", "len", "torch.sum().float", "len", "torch.sum().float", "len", "torch.log", "torch.log", "torch.mean", "torch.mean", "torch.abs", "d1.item", "d2.item", "d3.item", "torch.mean.item", "torch.mean.item", "torch.sqrt.item", "torch.sqrt.item", "torch.mean.item", "torch.sqrt.item", "torch.abs", "torch.pow", "torch.pow", "torch.pow", "torch.pow().mean", "torch.sum", "torch.sum", "torch.sum", "torch.log10", "torch.log10", "torch.pow", "torch.pow", "diff_log.mean"], "function", ["None"], ["def", "eval_depth", "(", "pred", ",", "target", ")", ":", "\n", "    ", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "\n", "thresh", "=", "torch", ".", "max", "(", "(", "target", "/", "pred", ")", ",", "(", "pred", "/", "target", ")", ")", "\n", "\n", "d1", "=", "torch", ".", "sum", "(", "thresh", "<", "1.25", ")", ".", "float", "(", ")", "/", "len", "(", "thresh", ")", "\n", "d2", "=", "torch", ".", "sum", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "float", "(", ")", "/", "len", "(", "thresh", ")", "\n", "d3", "=", "torch", ".", "sum", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "float", "(", ")", "/", "len", "(", "thresh", ")", "\n", "\n", "diff", "=", "pred", "-", "target", "\n", "diff_log", "=", "torch", ".", "log", "(", "pred", ")", "-", "torch", ".", "log", "(", "target", ")", "\n", "\n", "abs_rel", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "diff", ")", "/", "target", ")", "\n", "sq_rel", "=", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "diff", ",", "2", ")", "/", "target", ")", "\n", "\n", "rmse", "=", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "diff", ",", "2", ")", ")", ")", "\n", "rmse_log", "=", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "diff_log", ",", "2", ")", ")", ")", "\n", "\n", "log10", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "torch", ".", "log10", "(", "pred", ")", "-", "torch", ".", "log10", "(", "target", ")", ")", ")", "\n", "silog", "=", "torch", ".", "sqrt", "(", "torch", ".", "pow", "(", "diff_log", ",", "2", ")", ".", "mean", "(", ")", "-", "0.5", "*", "torch", ".", "pow", "(", "diff_log", ".", "mean", "(", ")", ",", "2", ")", ")", "\n", "\n", "return", "{", "'d1'", ":", "d1", ".", "item", "(", ")", ",", "'d2'", ":", "d2", ".", "item", "(", ")", ",", "'d3'", ":", "d3", ".", "item", "(", ")", ",", "'abs_rel'", ":", "abs_rel", ".", "item", "(", ")", ",", "\n", "'sq_rel'", ":", "sq_rel", ".", "item", "(", ")", ",", "'rmse'", ":", "rmse", ".", "item", "(", ")", ",", "'rmse_log'", ":", "rmse_log", ".", "item", "(", ")", ",", "\n", "'log10'", ":", "log10", ".", "item", "(", ")", ",", "'silog'", ":", "silog", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.metrics.cropping_img": [[30, 73], ["torch.logical_and", "torch.logical_and", "torch.isinf", "torch.isnan", "int", "int", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "cropping_img", "(", "args", ",", "pred", ",", "gt_depth", ")", ":", "\n", "    ", "min_depth_eval", "=", "args", ".", "min_depth_eval", "\n", "\n", "max_depth_eval", "=", "args", ".", "max_depth_eval", "\n", "\n", "pred", "[", "torch", ".", "isinf", "(", "pred", ")", "]", "=", "max_depth_eval", "\n", "pred", "[", "torch", ".", "isnan", "(", "pred", ")", "]", "=", "min_depth_eval", "\n", "\n", "valid_mask", "=", "torch", ".", "logical_and", "(", "\n", "gt_depth", ">", "min_depth_eval", ",", "gt_depth", "<", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "gt_depth", "=", "gt_depth", "[", "top_margin", ":", "top_margin", "+", "\n", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "\n", "\n", "", "if", "args", ".", "kitti_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "torch", ".", "zeros", "(", "valid_mask", ".", "shape", ")", ".", "to", "(", "\n", "device", "=", "valid_mask", ".", "device", ")", "\n", "\n", "if", "args", ".", "kitti_crop", "==", "'garg_crop'", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "\n", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "kitti_crop", "==", "'eigen_crop'", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "\n", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "eval_mask", "=", "valid_mask", "\n", "\n", "", "", "", "elif", "args", ".", "dataset", "==", "'nyudepthv2'", ":", "\n", "        ", "eval_mask", "=", "torch", ".", "zeros", "(", "valid_mask", ".", "shape", ")", ".", "to", "(", "device", "=", "valid_mask", ".", "device", ")", "\n", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "", "else", ":", "\n", "        ", "eval_mask", "=", "valid_mask", "\n", "\n", "", "valid_mask", "=", "torch", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "return", "pred", "[", "valid_mask", "]", ",", "gt_depth", "[", "valid_mask", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.extract_official_train_test_set_from_mat.convert_image": [[44, 64], ["img_depth.astype", "cv2.imwrite", "numpy.zeros", "cv2.imwrite", "int", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "convert_image", "(", "i", ",", "scene", ",", "depth_raw", ",", "image", ")", ":", "\n", "\n", "    ", "idx", "=", "int", "(", "i", ")", "+", "1", "\n", "if", "idx", "in", "train_images", ":", "\n", "        ", "train_test", "=", "\"train\"", "\n", "", "else", ":", "\n", "        ", "assert", "idx", "in", "test_images", ",", "\"index %d neither found in training set nor in test set\"", "%", "idx", "\n", "train_test", "=", "\"test\"", "\n", "\n", "", "folder", "=", "\"%s/%s/%s\"", "%", "(", "out_folder", ",", "train_test", ",", "scene", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "folder", ")", "\n", "\n", "", "img_depth", "=", "depth_raw", "*", "1000.0", "\n", "img_depth_uint16", "=", "img_depth", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "cv2", ".", "imwrite", "(", "\"%s/sync_depth_%05d.png\"", "%", "(", "folder", ",", "i", ")", ",", "img_depth_uint16", ")", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "image_black_boundary", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image_black_boundary", "[", "7", ":", "474", ",", "7", ":", "632", ",", ":", "]", "=", "image", "[", "7", ":", "474", ",", "7", ":", "632", ",", ":", "]", "\n", "cv2", ".", "imwrite", "(", "\"%s/rgb_%05d.jpg\"", "%", "(", "folder", ",", "i", ")", ",", "image_black_boundary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.criterion.SiLogLoss.__init__": [[6, 9], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lambd", "=", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.utils.criterion.SiLogLoss.forward": [[10, 17], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.pow().mean", "torch.pow().mean", "torch.pow().mean", "torch.pow().mean", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "diff_log.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "valid_mask", "=", "(", "target", ">", "0", ")", ".", "detach", "(", ")", "\n", "diff_log", "=", "torch", ".", "log", "(", "target", "[", "valid_mask", "]", ")", "-", "torch", ".", "log", "(", "pred", "[", "valid_mask", "]", ")", "\n", "loss", "=", "torch", ".", "sqrt", "(", "torch", ".", "pow", "(", "diff_log", ",", "2", ")", ".", "mean", "(", ")", "-", "\n", "self", ".", "lambd", "*", "torch", ".", "pow", "(", "diff_log", ".", "mean", "(", ")", ",", "2", ")", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.__init__": [[8, 31], ["dataset.base_dataset.BaseDataset.__init__", "os.path.join", "os.path.join", "kitti.kitti.readTXT", "print", "print", "len"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.readTXT"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "filenames_path", "=", "'./code/dataset/filenames/'", ",", "\n", "is_train", "=", "True", ",", "dataset", "=", "'kitti'", ",", "crop_size", "=", "(", "352", ",", "704", ")", ",", "\n", "scale_size", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "crop_size", ")", "\n", "\n", "self", ".", "scale_size", "=", "scale_size", "\n", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'kitti'", ")", "\n", "\n", "self", ".", "image_path_list", "=", "[", "]", "\n", "self", ".", "depth_path_list", "=", "[", "]", "\n", "txt_path", "=", "os", ".", "path", ".", "join", "(", "filenames_path", ",", "'eigen_benchmark'", ")", "\n", "\n", "if", "is_train", ":", "\n", "            ", "txt_path", "+=", "'/train_list.txt'", "\n", "", "else", ":", "\n", "            ", "txt_path", "+=", "'/test_list.txt'", "\n", "\n", "", "self", ".", "filenames_list", "=", "self", ".", "readTXT", "(", "txt_path", ")", "\n", "phase", "=", "'train'", "if", "is_train", "else", "'test'", "\n", "print", "(", "\"Dataset :\"", ",", "dataset", ")", "\n", "print", "(", "\"# of %s images: %d\"", "%", "(", "phase", ",", "len", "(", "self", ".", "filenames_list", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.cropping": [[33, 43], ["int", "int"], "methods", ["None"], ["", "def", "cropping", "(", "self", ",", "img", ")", ":", "\n", "        ", "h_im", ",", "w_im", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "margin_top", "=", "int", "(", "h_im", "-", "352", ")", "\n", "margin_left", "=", "int", "(", "(", "w_im", "-", "1216", ")", "/", "2", ")", "\n", "\n", "img", "=", "img", "[", "margin_top", ":", "margin_top", "+", "352", ",", "\n", "margin_left", ":", "margin_left", "+", "1216", "]", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.__len__": [[44, 46], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filenames_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.__getitem__": [[47, 71], ["cv2.imread", "cv2.cvtColor", "cv2.imread().astype", "kitti.kitti.cropping", "kitti.kitti.cropping", "cv2.resize", "cv2.resize", "kitti.kitti.augment_training_data", "kitti.kitti.augment_test_data", "kitti.kitti.filenames_list[].split", "kitti.kitti.filenames_list[].split", "img_path.split", "cv2.imread", "img_path.split"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.cropping", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.kitti.kitti.cropping", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_training_data", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_test_data"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_path", "=", "self", ".", "data_path", "+", "self", ".", "filenames_list", "[", "idx", "]", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "gt_path", "=", "self", ".", "data_path", "+", "self", ".", "filenames_list", "[", "idx", "]", ".", "split", "(", "' '", ")", "[", "1", "]", "\n", "filename", "=", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "4", "]", "+", "'_'", "+", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "img_path", ")", "# [H x W x C] and C: BGR", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "image", "=", "self", ".", "cropping", "(", "image", ")", "\n", "depth", "=", "self", ".", "cropping", "(", "depth", ")", "\n", "\n", "if", "self", ".", "scale_size", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "self", ".", "scale_size", "[", "0", "]", ",", "self", ".", "scale_size", "[", "1", "]", ")", ")", "\n", "depth", "=", "cv2", ".", "resize", "(", "depth", ",", "(", "self", ".", "scale_size", "[", "0", "]", ",", "self", ".", "scale_size", "[", "1", "]", ")", ")", "\n", "\n", "", "if", "self", ".", "is_train", ":", "\n", "            ", "image", ",", "depth", "=", "self", ".", "augment_training_data", "(", "image", ",", "depth", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "depth", "=", "self", ".", "augment_test_data", "(", "image", ",", "depth", ")", "\n", "\n", "", "depth", "=", "depth", "/", "256.0", "# convert in meters", "\n", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", ",", "'filename'", ":", "filename", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.__init__": [[18, 31], ["torchvision.ToTensor", "albumentations.HorizontalFlip", "albumentations.RandomCrop", "albumentations.RandomBrightnessContrast", "albumentations.RandomGamma", "albumentations.HueSaturationValue"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ")", ":", "\n", "\n", "        ", "self", ".", "count", "=", "0", "\n", "\n", "basic_transform", "=", "[", "\n", "A", ".", "HorizontalFlip", "(", ")", ",", "\n", "A", ".", "RandomCrop", "(", "crop_size", "[", "0", "]", ",", "crop_size", "[", "1", "]", ")", ",", "\n", "A", ".", "RandomBrightnessContrast", "(", ")", ",", "\n", "A", ".", "RandomGamma", "(", ")", ",", "\n", "A", ".", "HueSaturationValue", "(", ")", "\n", "]", "\n", "self", ".", "basic_transform", "=", "basic_transform", "\n", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.readTXT": [[32, 37], ["open", "line.strip"], "methods", ["None"], ["", "def", "readTXT", "(", "self", ",", "txt_path", ")", ":", "\n", "        ", "with", "open", "(", "txt_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "listInTXT", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", "]", "\n", "\n", "", "return", "listInTXT", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_training_data": [[38, 66], ["albumentations.Compose", "albumentations.Compose.", "base_dataset.BaseDataset.to_tensor", "base_dataset.BaseDataset.to_tensor().squeeze", "random.random", "random.random", "int", "int", "max", "base_dataset.BaseDataset.to_tensor"], "methods", ["None"], ["", "def", "augment_training_data", "(", "self", ",", "image", ",", "depth", ")", ":", "\n", "        ", "H", ",", "W", ",", "C", "=", "image", ".", "shape", "\n", "\n", "if", "self", ".", "count", "%", "4", "==", "0", ":", "\n", "            ", "alpha", "=", "random", ".", "random", "(", ")", "\n", "beta", "=", "random", ".", "random", "(", ")", "\n", "p", "=", "0.75", "\n", "\n", "l", "=", "int", "(", "alpha", "*", "W", ")", "\n", "w", "=", "int", "(", "max", "(", "(", "W", "-", "alpha", "*", "W", ")", "*", "beta", "*", "p", ",", "1", ")", ")", "\n", "\n", "image", "[", ":", ",", "l", ":", "l", "+", "w", ",", "0", "]", "=", "depth", "[", ":", ",", "l", ":", "l", "+", "w", "]", "\n", "image", "[", ":", ",", "l", ":", "l", "+", "w", ",", "1", "]", "=", "depth", "[", ":", ",", "l", ":", "l", "+", "w", "]", "\n", "image", "[", ":", ",", "l", ":", "l", "+", "w", ",", "2", "]", "=", "depth", "[", ":", ",", "l", ":", "l", "+", "w", "]", "\n", "\n", "", "additional_targets", "=", "{", "'depth'", ":", "'mask'", "}", "\n", "aug", "=", "A", ".", "Compose", "(", "transforms", "=", "self", ".", "basic_transform", ",", "\n", "additional_targets", "=", "additional_targets", ")", "\n", "augmented", "=", "aug", "(", "image", "=", "image", ",", "depth", "=", "depth", ")", "\n", "image", "=", "augmented", "[", "'image'", "]", "\n", "depth", "=", "augmented", "[", "'depth'", "]", "\n", "\n", "image", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "depth", "=", "self", ".", "to_tensor", "(", "depth", ")", ".", "squeeze", "(", ")", "\n", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "image", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_test_data": [[67, 72], ["base_dataset.BaseDataset.to_tensor", "base_dataset.BaseDataset.to_tensor().squeeze", "base_dataset.BaseDataset.to_tensor"], "methods", ["None"], ["", "def", "augment_test_data", "(", "self", ",", "image", ",", "depth", ")", ":", "\n", "        ", "image", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "depth", "=", "self", ".", "to_tensor", "(", "depth", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "image", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.get_dataset": [[8, 15], ["dataset_name.lower.lower", "importlib.import_module", "getattr", "getattr."], "function", ["None"], ["def", "get_dataset", "(", "dataset_name", ",", "**", "kwargs", ")", ":", "\n", "    ", "dataset_name", "=", "dataset_name", ".", "lower", "(", ")", "\n", "dataset_lib", "=", "importlib", ".", "import_module", "(", "\n", "'.'", "+", "dataset_name", ",", "package", "=", "'dataset'", ")", "\n", "dataset_abs", "=", "getattr", "(", "dataset_lib", ",", "dataset_name", ")", "\n", "\n", "return", "dataset_abs", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.imagepath.imagepath.__init__": [[8, 19], ["torch.utils.data.Dataset.__init__", "torchvision.ToTensor", "print", "print", "os.path.join", "os.listdir", "len", "i.split"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n", "self", ".", "filenames_list", "=", "[", "os", ".", "path", ".", "join", "(", "data_path", ",", "i", ")", "for", "i", "in", "os", ".", "listdir", "(", "data_path", ")", "\n", "if", "i", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "in", "[", "'jpg'", ",", "'png'", "]", "]", "\n", "\n", "print", "(", "\"Dataset : Image Path\"", ")", "\n", "print", "(", "\"# of images: %d\"", "%", "(", "len", "(", "self", ".", "filenames_list", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.imagepath.imagepath.__len__": [[20, 22], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filenames_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.imagepath.imagepath.__getitem__": [[23, 41], ["cv2.imread", "cv2.cvtColor", "cv2.resize", "imagepath.imagepath.to_tensor", "file.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "batch", "=", "{", "}", "\n", "file", "=", "self", ".", "filenames_list", "[", "idx", "]", "\n", "filename", "=", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "file", ")", "# [H x W x C] and C: BGR", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "# input size should be multiple of 32", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "new_h", ",", "new_w", "=", "h", "//", "32", "*", "32", ",", "w", "//", "32", "*", "32", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "new_w", ",", "new_h", ")", ")", "\n", "image", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "\n", "batch", "[", "'image'", "]", "=", "image", "\n", "batch", "[", "'filename'", "]", "=", "filename", "\n", "\n", "return", "batch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.nyudepthv2.nyudepthv2.__init__": [[8, 31], ["dataset.base_dataset.BaseDataset.__init__", "os.path.join", "os.path.join", "nyudepthv2.nyudepthv2.readTXT", "print", "print", "len"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.readTXT"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "filenames_path", "=", "'./code/dataset/filenames/'", ",", "\n", "is_train", "=", "True", ",", "crop_size", "=", "(", "448", ",", "576", ")", ",", "scale_size", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "crop_size", ")", "\n", "\n", "self", ".", "scale_size", "=", "scale_size", "\n", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'nyu_depth_v2'", ")", "\n", "\n", "self", ".", "image_path_list", "=", "[", "]", "\n", "self", ".", "depth_path_list", "=", "[", "]", "\n", "\n", "txt_path", "=", "os", ".", "path", ".", "join", "(", "filenames_path", ",", "'nyudepthv2'", ")", "\n", "if", "is_train", ":", "\n", "            ", "txt_path", "+=", "'/train_list.txt'", "\n", "", "else", ":", "\n", "            ", "txt_path", "+=", "'/test_list.txt'", "\n", "self", ".", "data_path", "=", "self", ".", "data_path", "+", "'/official_splits/test/'", "\n", "\n", "", "self", ".", "filenames_list", "=", "self", ".", "readTXT", "(", "txt_path", ")", "\n", "phase", "=", "'train'", "if", "is_train", "else", "'test'", "\n", "print", "(", "\"Dataset: NYU Depth V2\"", ")", "\n", "print", "(", "\"# of %s images: %d\"", "%", "(", "phase", ",", "len", "(", "self", ".", "filenames_list", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.nyudepthv2.nyudepthv2.__len__": [[32, 34], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filenames_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.nyudepthv2.nyudepthv2.__getitem__": [[35, 56], ["cv2.imread", "cv2.cvtColor", "cv2.imread().astype", "cv2.resize", "cv2.resize", "nyudepthv2.nyudepthv2.augment_training_data", "nyudepthv2.nyudepthv2.augment_test_data", "nyudepthv2.nyudepthv2.filenames_list[].split", "nyudepthv2.nyudepthv2.filenames_list[].split", "img_path.split", "cv2.imread", "img_path.split"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_training_data", "home.repos.pwc.inspect_result.vinvino02_GLPDepth.dataset.base_dataset.BaseDataset.augment_test_data"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_path", "=", "self", ".", "data_path", "+", "self", ".", "filenames_list", "[", "idx", "]", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "gt_path", "=", "self", ".", "data_path", "+", "self", ".", "filenames_list", "[", "idx", "]", ".", "split", "(", "' '", ")", "[", "1", "]", "\n", "filename", "=", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "+", "'_'", "+", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "img_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "if", "self", ".", "scale_size", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "self", ".", "scale_size", "[", "0", "]", ",", "self", ".", "scale_size", "[", "1", "]", ")", ")", "\n", "depth", "=", "cv2", ".", "resize", "(", "image", ",", "(", "self", ".", "scale_size", "[", "0", "]", ",", "self", ".", "scale_size", "[", "1", "]", ")", ")", "\n", "\n", "", "if", "self", ".", "is_train", ":", "\n", "            ", "image", ",", "depth", "=", "self", ".", "augment_training_data", "(", "image", ",", "depth", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "depth", "=", "self", ".", "augment_test_data", "(", "image", ",", "depth", ")", "\n", "\n", "", "depth", "=", "depth", "/", "1000.0", "# convert in meters", "\n", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", ",", "'filename'", ":", "filename", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Mlp.__init__": [[21, 32], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "mit.DWConv", "act_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "mit.Mlp.apply"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "dwconv", "=", "DWConv", "(", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Mlp._init_weights": [[33, 47], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.weight.data.normal_", "math.sqrt", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "fan_out", "//=", "m", ".", "groups", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Mlp.forward": [[48, 56], ["mit.Mlp.fc1", "mit.Mlp.dwconv", "mit.Mlp.act", "mit.Mlp.drop", "mit.Mlp.fc2", "mit.Mlp.drop"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "dwconv", "(", "x", ",", "H", ",", "W", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Attention.__init__": [[59, 81], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "mit.Attention.apply", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ",", "sr_ratio", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "dim", "%", "num_heads", "==", "0", ",", "f\"dim {dim} should be divided by num_heads {num_heads}.\"", "\n", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "q", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "kv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "2", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "self", ".", "sr_ratio", "=", "sr_ratio", "\n", "if", "sr_ratio", ">", "1", ":", "\n", "            ", "self", ".", "sr", "=", "nn", ".", "Conv2d", "(", "\n", "dim", ",", "dim", ",", "kernel_size", "=", "sr_ratio", ",", "stride", "=", "sr_ratio", ")", "\n", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "dim", ")", "\n", "\n", "", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Attention._init_weights": [[82, 96], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.weight.data.normal_", "math.sqrt", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "fan_out", "//=", "m", ".", "groups", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Attention.forward": [[97, 122], ["mit.Attention.q().reshape().permute", "mit.Attention.softmax", "mit.Attention.attn_drop", "mit.Attention.proj", "mit.Attention.proj_drop", "mit.Attention.permute().reshape", "mit.Attention.sr().reshape().permute", "mit.Attention.norm", "mit.Attention.kv().reshape().permute", "mit.Attention.kv().reshape().permute", "mit.Attention.q().reshape", "k.transpose", "mit.Attention.permute", "mit.Attention.sr().reshape", "mit.Attention.kv().reshape", "mit.Attention.kv().reshape", "mit.Attention.q", "mit.Attention.sr", "mit.Attention.kv", "mit.Attention.kv"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "q", "=", "self", ".", "q", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "self", ".", "num_heads", ",", "C", "//", "\n", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "if", "self", ".", "sr_ratio", ">", "1", ":", "\n", "            ", "x_", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "reshape", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "x_", "=", "self", ".", "sr", "(", "x_", ")", ".", "reshape", "(", "B", ",", "C", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "x_", "=", "self", ".", "norm", "(", "x_", ")", "\n", "kv", "=", "self", ".", "kv", "(", "x_", ")", ".", "reshape", "(", "B", ",", "-", "1", ",", "2", ",", "self", ".", "num_heads", ",", "\n", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "", "else", ":", "\n", "            ", "kv", "=", "self", ".", "kv", "(", "x", ")", ".", "reshape", "(", "B", ",", "-", "1", ",", "2", ",", "self", ".", "num_heads", ",", "C", "//", "\n", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "", "k", ",", "v", "=", "kv", "[", "0", "]", ",", "kv", "[", "1", "]", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Block.__init__": [[126, 143], ["torch.Module.__init__", "norm_layer", "mit.Attention", "norm_layer", "int", "mit.Mlp", "mit.Block.apply", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "sr_ratio", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention", "(", "\n", "dim", ",", "\n", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ",", "sr_ratio", "=", "sr_ratio", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "\n", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "\n", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Block._init_weights": [[144, 158], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.weight.data.normal_", "math.sqrt", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "fan_out", "//=", "m", ".", "groups", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.Block.forward": [[159, 164], ["mit.Block.drop_path", "mit.Block.drop_path", "mit.Block.attn", "mit.Block.mlp", "mit.Block.norm1", "mit.Block.norm2"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ",", "H", ",", "W", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ",", "H", ",", "W", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.OverlapPatchEmbed.__init__": [[170, 184], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "timm.models.layers.to_2tuple", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "mit.OverlapPatchEmbed.apply"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "7", ",", "stride", "=", "4", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "H", ",", "self", ".", "W", "=", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", "\n", "self", ".", "num_patches", "=", "self", ".", "H", "*", "self", ".", "W", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "patch_size", "[", "0", "]", "//", "2", ",", "patch_size", "[", "1", "]", "//", "2", ")", ")", "\n", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "embed_dim", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.OverlapPatchEmbed._init_weights": [[185, 199], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.weight.data.normal_", "math.sqrt", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "fan_out", "//=", "m", ".", "groups", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.OverlapPatchEmbed.forward": [[200, 207], ["mit.OverlapPatchEmbed.proj", "mit.OverlapPatchEmbed.flatten().transpose", "mit.OverlapPatchEmbed.norm", "mit.OverlapPatchEmbed.flatten"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "_", ",", "_", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "\n", "return", "x", ",", "H", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.__init__": [[210, 271], ["torch.Module.__init__", "mit.OverlapPatchEmbed", "mit.OverlapPatchEmbed", "mit.OverlapPatchEmbed", "mit.OverlapPatchEmbed", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "mit.MixVisionTransformer.apply", "x.item", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "mit.Block", "mit.Block", "mit.Block", "mit.Block", "sum", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "4", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop_rate", "=", "0.", ",", "\n", "attn_drop_rate", "=", "0.", ",", "drop_path_rate", "=", "0.", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "depths", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "depths", "=", "depths", "\n", "\n", "# patch_embed", "\n", "self", ".", "patch_embed1", "=", "OverlapPatchEmbed", "(", "img_size", "=", "img_size", ",", "patch_size", "=", "7", ",", "stride", "=", "4", ",", "in_chans", "=", "in_chans", ",", "\n", "embed_dim", "=", "embed_dims", "[", "0", "]", ")", "\n", "self", ".", "patch_embed2", "=", "OverlapPatchEmbed", "(", "img_size", "=", "img_size", "//", "4", ",", "patch_size", "=", "3", ",", "stride", "=", "2", ",", "in_chans", "=", "embed_dims", "[", "0", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "1", "]", ")", "\n", "self", ".", "patch_embed3", "=", "OverlapPatchEmbed", "(", "img_size", "=", "img_size", "//", "8", ",", "patch_size", "=", "3", ",", "stride", "=", "2", ",", "in_chans", "=", "embed_dims", "[", "1", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "2", "]", ")", "\n", "self", ".", "patch_embed4", "=", "OverlapPatchEmbed", "(", "img_size", "=", "img_size", "//", "16", ",", "patch_size", "=", "3", ",", "stride", "=", "2", ",", "in_chans", "=", "embed_dims", "[", "2", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "3", "]", ")", "\n", "\n", "# transformer encoder", "\n", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "\n", "sum", "(", "depths", ")", ")", "]", "# stochastic depth decay rule", "\n", "cur", "=", "0", "\n", "self", ".", "block1", "=", "nn", ".", "ModuleList", "(", "[", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "0", "]", ",", "num_heads", "=", "num_heads", "[", "0", "]", ",", "mlp_ratio", "=", "mlp_ratios", "[", "0", "]", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "cur", "+", "\n", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "depths", "[", "0", "]", ")", "]", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "embed_dims", "[", "0", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "0", "]", "\n", "self", ".", "block2", "=", "nn", ".", "ModuleList", "(", "[", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "1", "]", ",", "num_heads", "=", "num_heads", "[", "1", "]", ",", "mlp_ratio", "=", "mlp_ratios", "[", "1", "]", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "cur", "+", "\n", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "depths", "[", "1", "]", ")", "]", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "embed_dims", "[", "1", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "1", "]", "\n", "self", ".", "block3", "=", "nn", ".", "ModuleList", "(", "[", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "2", "]", ",", "num_heads", "=", "num_heads", "[", "2", "]", ",", "mlp_ratio", "=", "mlp_ratios", "[", "2", "]", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "cur", "+", "\n", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "depths", "[", "2", "]", ")", "]", ")", "\n", "self", ".", "norm3", "=", "norm_layer", "(", "embed_dims", "[", "2", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "2", "]", "\n", "self", ".", "block4", "=", "nn", ".", "ModuleList", "(", "[", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "3", "]", ",", "num_heads", "=", "num_heads", "[", "3", "]", ",", "mlp_ratio", "=", "mlp_ratios", "[", "3", "]", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "cur", "+", "\n", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "3", "]", ")", "\n", "for", "i", "in", "range", "(", "depths", "[", "3", "]", ")", "]", ")", "\n", "self", ".", "norm4", "=", "norm_layer", "(", "embed_dims", "[", "3", "]", ")", "\n", "\n", "# classification head", "\n", "# self.head = nn.Linear(embed_dims[3], num_classes) if num_classes > 0 else nn.Identity()", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer._init_weights": [[272, 286], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.weight.data.normal_", "math.sqrt", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "fan_out", "//=", "m", ".", "groups", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.init_weights": [[287, 292], ["isinstance", "get_root_logger", "mmcv.runner.load_checkpoint"], "methods", ["None"], ["", "", "", "def", "init_weights", "(", "self", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "pretrained", ",", "str", ")", ":", "\n", "            ", "logger", "=", "get_root_logger", "(", ")", "\n", "load_checkpoint", "(", "self", ",", "pretrained", ",", "map_location", "=", "'cpu'", ",", "\n", "strict", "=", "False", ",", "logger", "=", "logger", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.reset_drop_path": [[293, 311], ["range", "range", "range", "range", "x.item", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "sum"], "methods", ["None"], ["", "", "def", "reset_drop_path", "(", "self", ",", "drop_path_rate", ")", ":", "\n", "        ", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "\n", "0", ",", "drop_path_rate", ",", "sum", "(", "self", ".", "depths", ")", ")", "]", "\n", "cur", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "0", "]", ")", ":", "\n", "            ", "self", ".", "block1", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "1", "]", ")", ":", "\n", "            ", "self", ".", "block2", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "block3", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "2", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "3", "]", ")", ":", "\n", "            ", "self", ".", "block4", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.freeze_patch_emb": [[312, 314], ["None"], "methods", ["None"], ["", "", "def", "freeze_patch_emb", "(", "self", ")", ":", "\n", "        ", "self", ".", "patch_embed1", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.no_weight_decay": [[315, 319], ["None"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "# has pos_embed may be better", "\n", "        ", "return", "{", "'pos_embed1'", ",", "'pos_embed2'", ",", "'pos_embed3'", ",", "'pos_embed4'", ",", "'cls_token'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.get_classifier": [[320, 322], ["None"], "methods", ["None"], ["", "def", "get_classifier", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "head", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.reset_classifier": [[323, 327], ["torch.Linear", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["None"], ["", "def", "reset_classifier", "(", "self", ",", "num_classes", ",", "global_pool", "=", "''", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "\n", "self", ".", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.forward_features": [[328, 365], ["mit.MixVisionTransformer.patch_embed1", "enumerate", "mit.MixVisionTransformer.norm1", "blk.reshape().permute().contiguous", "outs.append", "mit.MixVisionTransformer.patch_embed2", "enumerate", "mit.MixVisionTransformer.norm2", "blk.reshape().permute().contiguous", "outs.append", "mit.MixVisionTransformer.patch_embed3", "enumerate", "mit.MixVisionTransformer.norm3", "blk.reshape().permute().contiguous", "outs.append", "mit.MixVisionTransformer.patch_embed4", "enumerate", "mit.MixVisionTransformer.norm4", "blk.reshape().permute().contiguous", "outs.append", "blk", "blk", "blk", "blk", "blk.reshape().permute", "blk.reshape().permute", "blk.reshape().permute", "blk.reshape().permute", "blk.reshape", "blk.reshape", "blk.reshape", "blk.reshape"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "outs", "=", "[", "]", "\n", "\n", "# stage 1", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed1", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block1", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 2", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed2", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block2", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm2", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 3", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed3", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block3", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm3", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 4", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed4", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block4", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm4", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.forward": [[366, 371], ["mit.MixVisionTransformer.forward_features"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.MixVisionTransformer.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "# x = self.head(x)", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.DWConv.__init__": [[374, 377], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "768", ")", ":", "\n", "        ", "super", "(", "DWConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dwconv", "=", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ",", "groups", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.DWConv.forward": [[378, 385], ["x.flatten().transpose.flatten().transpose.transpose().view", "mit.DWConv.dwconv", "x.flatten().transpose.flatten().transpose.flatten().transpose", "x.flatten().transpose.flatten().transpose.transpose", "x.flatten().transpose.flatten().transpose.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "view", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "x", "=", "self", ".", "dwconv", "(", "x", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b0.__init__": [[388, 393], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b0", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "32", ",", "64", ",", "160", ",", "256", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b1.__init__": [[396, 401], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b1", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b2.__init__": [[404, 409], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b2", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b3.__init__": [[412, 417], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b3", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "3", ",", "4", ",", "18", ",", "3", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b4.__init__": [[420, 425], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b4", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "3", ",", "8", ",", "27", ",", "3", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.mit.mit_b5.__init__": [[428, 433], ["mit.MixVisionTransformer.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "mit_b5", ",", "self", ")", ".", "__init__", "(", "\n", "patch_size", "=", "4", ",", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "depths", "=", "[", "3", ",", "6", ",", "40", ",", "3", "]", ",", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "drop_path_rate", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.GLPDepth.__init__": [[8, 34], ["torch.Module.__init__", "models.mit.mit_b4", "model.Decoder", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "mmcv.runner.load_checkpoint", "print", "gdown.download"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_depth", "=", "10.0", ",", "is_train", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_depth", "=", "max_depth", "\n", "\n", "self", ".", "encoder", "=", "mit_b4", "(", ")", "\n", "if", "is_train", ":", "\n", "            ", "ckpt_path", "=", "'./code/models/weights/mit_b4.pth'", "\n", "try", ":", "\n", "                ", "load_checkpoint", "(", "self", ".", "encoder", ",", "ckpt_path", ",", "logger", "=", "None", ")", "\n", "", "except", ":", "\n", "                ", "import", "gdown", "\n", "print", "(", "\"Download pre-trained encoder weights...\"", ")", "\n", "id", "=", "'1BUtU42moYrOFbsMCE-LTTkUE-mrWnfG2'", "\n", "url", "=", "'https://drive.google.com/uc?id='", "+", "id", "\n", "output", "=", "'./code/models/weights/mit_b4.pth'", "\n", "gdown", ".", "download", "(", "url", ",", "output", ",", "quiet", "=", "False", ")", "\n", "\n", "", "", "channels_in", "=", "[", "512", ",", "320", ",", "128", "]", "\n", "channels_out", "=", "64", "\n", "\n", "self", ".", "decoder", "=", "Decoder", "(", "channels_in", ",", "channels_out", ")", "\n", "\n", "self", ".", "last_layer_depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels_out", ",", "channels_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels_out", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.GLPDepth.forward": [[35, 42], ["model.GLPDepth.encoder", "model.GLPDepth.decoder", "model.GLPDepth.last_layer_depth", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", ",", "conv2", ",", "conv3", ",", "conv4", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "self", ".", "decoder", "(", "conv1", ",", "conv2", ",", "conv3", ",", "conv4", ")", "\n", "out_depth", "=", "self", ".", "last_layer_depth", "(", "out", ")", "\n", "out_depth", "=", "torch", ".", "sigmoid", "(", "out_depth", ")", "*", "self", ".", "max_depth", "\n", "\n", "return", "{", "'pred_d'", ":", "out_depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.Decoder.__init__": [[45, 60], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Upsample", "torch.Upsample", "model.SelectiveFeatureFusion", "model.SelectiveFeatureFusion", "model.SelectiveFeatureFusion"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bot_conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "in_channels", "[", "0", "]", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "skip_conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "in_channels", "[", "1", "]", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "skip_conv2", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "in_channels", "[", "2", "]", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "self", ".", "fusion1", "=", "SelectiveFeatureFusion", "(", "out_channels", ")", "\n", "self", ".", "fusion2", "=", "SelectiveFeatureFusion", "(", "out_channels", ")", "\n", "self", ".", "fusion3", "=", "SelectiveFeatureFusion", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.Decoder.forward": [[61, 78], ["model.Decoder.bot_conv", "model.Decoder.up", "model.Decoder.skip_conv1", "model.Decoder.fusion1", "model.Decoder.up", "model.Decoder.skip_conv2", "model.Decoder.fusion2", "model.Decoder.up", "model.Decoder.fusion3", "model.Decoder.up", "model.Decoder.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_1", ",", "x_2", ",", "x_3", ",", "x_4", ")", ":", "\n", "        ", "x_4_", "=", "self", ".", "bot_conv", "(", "x_4", ")", "\n", "out", "=", "self", ".", "up", "(", "x_4_", ")", "\n", "\n", "x_3_", "=", "self", ".", "skip_conv1", "(", "x_3", ")", "\n", "out", "=", "self", ".", "fusion1", "(", "x_3_", ",", "out", ")", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "\n", "x_2_", "=", "self", ".", "skip_conv2", "(", "x_2", ")", "\n", "out", "=", "self", ".", "fusion2", "(", "x_2_", ",", "out", ")", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "fusion3", "(", "x_1", ",", "out", ")", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.SelectiveFeatureFusion.__init__": [[81, 100], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "int", "(", "in_channel", "*", "2", ")", ",", "\n", "out_channels", "=", "in_channel", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channel", ",", "\n", "out_channels", "=", "int", "(", "in_channel", "/", "2", ")", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "int", "(", "in_channel", "/", "2", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "int", "(", "in_channel", "/", "2", ")", ",", "\n", "out_channels", "=", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.models.model.SelectiveFeatureFusion.forward": [[101, 112], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SelectiveFeatureFusion.conv1", "model.SelectiveFeatureFusion.conv2", "model.SelectiveFeatureFusion.conv3", "model.SelectiveFeatureFusion.sigmoid", "attn[].unsqueeze", "attn[].unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_local", ",", "x_global", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_local", ",", "x_global", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "attn", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n", "out", "=", "x_local", "*", "attn", "[", ":", ",", "0", ",", ":", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "+", "x_global", "*", "attn", "[", ":", ",", "1", ",", ":", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.test_options.TestOptions.initialize": [[4, 22], ["configs.base_options.BaseOptions.initialize", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "parser", "=", "BaseOptions", ".", "initialize", "(", "self", ")", "\n", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "type", "=", "str", ",", "default", "=", "'./results'", ",", "\n", "help", "=", "'save result images into result_dir/exp_name'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt_dir'", ",", "type", "=", "str", ",", "\n", "default", "=", "'./ckpt/best_model_nyu.ckpt'", ",", "\n", "help", "=", "'load ckpt path'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--save_eval_pngs'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'save result image into evaluation form'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_visualize'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'save result image into visulized form'", ")", "\n", "parser", ".", "add_argument", "(", "'--do_evaluate'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'evaluate with inferenced images'", ")", "\n", "\n", "\n", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.train_options.TrainOptions.initialize": [[4, 24], ["configs.base_options.BaseOptions.initialize", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument", "configs.base_options.BaseOptions.initialize.add_argument"], "methods", ["home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "parser", "=", "BaseOptions", ".", "initialize", "(", "self", ")", "\n", "\n", "# experiment configs", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "25", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--crop_h'", ",", "type", "=", "int", ",", "default", "=", "448", ")", "\n", "parser", ".", "add_argument", "(", "'--crop_w'", ",", "type", "=", "int", ",", "default", "=", "576", ")", "\n", "parser", ".", "add_argument", "(", "'--log_dir'", ",", "type", "=", "str", ",", "default", "=", "'./logs'", ")", "\n", "\n", "# logging options", "\n", "parser", ".", "add_argument", "(", "'--val_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--save_freq'", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "'--save_model'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_result'", ",", "action", "=", "'store_true'", ")", "\n", "\n", "\n", "\n", "return", "parser", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.__init__": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vinvino02_GLPDepth.configs.base_options.BaseOptions.initialize": [[8, 28], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "# base configs", "\n", "parser", ".", "add_argument", "(", "'--gpu_or_cpu'", ",", "type", "=", "str", ",", "default", "=", "'gpu'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'/data/ssd1/'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'nyudepthv2'", ",", "\n", "choices", "=", "[", "'nyudepthv2'", ",", "'kitti'", ",", "'imagepath'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--exp_name'", ",", "type", "=", "str", ",", "default", "=", "'test'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "12", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "default", "=", "8", ")", "\n", "\n", "# depth configs", "\n", "parser", ".", "add_argument", "(", "'--max_depth'", ",", "type", "=", "float", ",", "default", "=", "10.0", ")", "\n", "parser", ".", "add_argument", "(", "'--max_depth_eval'", ",", "type", "=", "float", ",", "default", "=", "10.0", ")", "\n", "parser", ".", "add_argument", "(", "'--min_depth_eval'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "'--do_kb_crop'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--kitti_crop'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "choices", "=", "[", "'garg_crop'", ",", "'eigen_crop'", "]", ")", "\n", "\n", "return", "parser", "\n", "", "", ""]]}