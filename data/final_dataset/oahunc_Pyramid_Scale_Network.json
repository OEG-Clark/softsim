{"home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.train.train": [[34, 216], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "dataset.CrowdCountingDataset", "torch.utils.data.DataLoader", "dataset.CrowdCountingDataset", "torch.utils.data.DataLoader", "model.PSNet().float", "model.to.to", "torch.Adam", "torch.MSELoss().to", "torch.CosineSimilarity().to", "range", "model.to.parameters", "print", "os.path.isdir", "torch.load", "torch.load", "torch.load", "model.to.load_state_dict", "optim.Adam.load_state_dict", "print", "utils.adjust_learning_rate", "print", "time.time", "model.to.train", "torch.save", "torch.save", "torch.save", "model.to.eval", "numpy.sqrt", "min", "print", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor", "model.PSNet", "torch.MSELoss", "torch.CosineSimilarity", "optim.Adam.zero_grad", "model.to.", "loss.backward", "optim.Adam.step", "loss.item", "attention_loss.item", "density_loss.item", "model.to.state_dict", "optim.Adam.state_dict", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.save", "torch.save", "torch.save", "image.float", "gt_density.cpu().detach().numpy.float", "image.to", "gt_density.cpu().detach().numpy.to", "range", "nn.MSELoss().to.", "image.size", "print", "model.to.", "pr_density.cpu().detach().numpy.cpu().detach().numpy", "gt_density.cpu().detach().numpy.cpu().detach().numpy", "numpy.sum", "numpy.sum", "numpy.abs", "model.to.state_dict", "optim.Adam.state_dict", "len", "image.float", "gt_density.cpu().detach().numpy.float", "image.to", "gt_density.cpu().detach().numpy.to", "numpy.abs", "torch.sum", "torch.sum", "torch.sum", "image.size", "pr_density.cpu().detach().numpy.cpu().detach", "gt_density.cpu().detach().numpy.cpu().detach", "nn.CosineSimilarity().to.", "len", "time.time", "attention_map[].contiguous().view", "pr_density.cpu().detach().numpy.cpu", "gt_density.cpu().detach().numpy.cpu", "image.size", "image.size", "attention_map[].contiguous"], "function", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.utils.adjust_learning_rate", "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.train.train"], ["", "def", "train", "(", ")", ":", "\n", "    ", "\"\"\"\n        train model\n    \"\"\"", "\n", "# set hyperparameter", "\n", "TRAIN_IMG_DIR", "=", "'datasets/ShanghaiTech_Dataset/part_A_final/train_data/images'", "# the directory path for storing training set images", "\n", "TEST_IMG_DIR", "=", "'datasets/ShanghaiTech_Dataset/part_A_final/test_data/images'", "# the directory path for storing test set images", "\n", "LR", "=", "1e-4", "# learning rate", "\n", "EPOCH", "=", "460", "# training epoch", "\n", "BATCH_SIZE", "=", "12", "# batch size", "\n", "start_epoch", "=", "0", "# start from epoch 0 or last checkpoint epoch", "\n", "resume", "=", "False", "# whether to breakpoint training", "\n", "workers", "=", "4", "# number of workers for dataloader", "\n", "hyper_param_D", "=", "1", "# the weight parameter of the loss function", "\n", "\n", "# best MAE, MSE", "\n", "# BEST_MAE = float(\"inf\")", "\n", "BEST_MAE", "=", "300", "\n", "# BEST_MSE = float(\"inf\")", "\n", "BEST_MSE", "=", "300", "\n", "\n", "# load data", "\n", "MEAN", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "# mean", "\n", "STD", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "# std", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "MEAN", ",", "\n", "std", "=", "STD", "\n", ")", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", ")", "\n", "val_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", ")", "\n", "# define trainloader", "\n", "train_dataset", "=", "CrowdCountingDataset", "(", "TRAIN_IMG_DIR", ",", "transforms", "=", "train_transform", ",", "scale", "=", "8", ",", "mode", "=", "'train'", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "BATCH_SIZE", ",", "shuffle", "=", "True", ",", "num_workers", "=", "workers", ")", "\n", "# define valloader", "\n", "val_dataset", "=", "CrowdCountingDataset", "(", "TEST_IMG_DIR", ",", "transforms", "=", "val_transform", ",", "scale", "=", "8", ",", "mode", "=", "'test'", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "1", ",", "num_workers", "=", "workers", ")", "\n", "\n", "# define model", "\n", "model", "=", "PSNet", "(", ")", ".", "float", "(", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "# define optimizer", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "LR", ")", "\n", "\n", "# breakpoint training, load model weights", "\n", "if", "resume", ":", "\n", "        ", "print", "(", "'==> Resuming from checkpoint..'", ")", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "'Checkpoint'", ")", ",", "'Error: no Checkpoint directory found!'", "\n", "state", "=", "torch", ".", "load", "(", "'Checkpoint/models/ckpt.pth'", ")", "\n", "model", ".", "load_state_dict", "(", "state", "[", "'net'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "state", "[", "'optim'", "]", ")", "\n", "start_epoch", "=", "state", "[", "'epoch'", "]", "\n", "BEST_MAE", "=", "state", "[", "'mae'", "]", "\n", "BEST_MSE", "=", "state", "[", "'mse'", "]", "\n", "\n", "# loss function", "\n", "", "mseloss", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", ".", "to", "(", "device", ")", "\n", "cosloss", "=", "nn", ".", "CosineSimilarity", "(", "dim", "=", "1", ",", "eps", "=", "1e-6", ")", ".", "to", "(", "device", ")", "\n", "\n", "# train model", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "EPOCH", ")", ":", "\n", "        ", "print", "(", "\"####################################################################################\"", ")", "\n", "# learning rate scheduling strategy", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", "\n", "print", "(", "'Learning rate is {}'", ".", "format", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "############################", "\n", "# train", "\n", "############################", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "# train mode", "\n", "model", ".", "train", "(", ")", "\n", "# loss", "\n", "sum_loss", "=", "0.0", "\n", "sum_att_loss", "=", "0.0", "\n", "sum_den_loss", "=", "0.0", "\n", "# number of iterations", "\n", "cnt", "=", "0", "\n", "for", "data", "in", "train_loader", ":", "\n", "            ", "cnt", "+=", "1", "\n", "\n", "# load data", "\n", "image", ",", "gt_density", "=", "data", "\n", "image", ",", "gt_density", "=", "image", ".", "float", "(", ")", ",", "gt_density", ".", "float", "(", ")", "\n", "image", ",", "gt_density", "=", "image", ".", "to", "(", "device", ")", ",", "gt_density", ".", "to", "(", "device", ")", "\n", "\n", "# gradient zero", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# forward and backward propagation", "\n", "pr_density", ",", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", "=", "model", "(", "image", ")", "\n", "attention_loss", "=", "0.", "\n", "for", "attention_map", "in", "(", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", ")", ":", "\n", "                ", "attention_map_sum", "=", "attention_map", "[", ":", ",", "0", ":", "1", "]", "+", "attention_map", "[", ":", ",", "1", ":", "2", "]", "+", "attention_map", "[", ":", ",", "2", ":", "3", "]", "+", "attention_map", "[", ":", ",", "3", ":", "4", "]", "\n", "attention_loss_temp", "=", "0.", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "                    ", "attention_loss_temp", "+=", "torch", ".", "sum", "(", "cosloss", "(", "attention_map", "[", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ".", "contiguous", "(", ")", ".", "view", "(", "image", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "\n", "(", "(", "attention_map_sum", "-", "attention_map", "[", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ")", "/", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "image", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "/", "image", ".", "size", "(", "0", ")", "\n", "", "attention_loss", "+=", "(", "attention_loss_temp", "/", "4", ")", "\n", "", "attention_loss", "/=", "3", "\n", "density_loss", "=", "mseloss", "(", "pr_density", ",", "gt_density", ")", "/", "image", ".", "size", "(", "0", ")", "\n", "loss", "=", "density_loss", "+", "hyper_param_D", "*", "attention_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# gradient update", "\n", "optimizer", ".", "step", "(", ")", "\n", "sum_loss", "+=", "loss", ".", "item", "(", ")", "\n", "sum_att_loss", "+=", "attention_loss", ".", "item", "(", ")", "\n", "sum_den_loss", "+=", "density_loss", ".", "item", "(", ")", "\n", "\n", "# print log", "\n", "if", "cnt", "%", "5", "==", "0", "or", "cnt", "==", "len", "(", "train_loader", ")", ":", "\n", "                ", "print", "(", "'[%d/%d]--[%d/%d]\\tLoss: %.4f\\tAtt_Loss: %.4f\\tDen_Loss: %.4f'", "\n", "%", "(", "epoch", "+", "1", ",", "EPOCH", ",", "cnt", ",", "len", "(", "train_loader", ")", ",", "sum_loss", "/", "cnt", ",", "\n", "sum_att_loss", "/", "cnt", ",", "sum_den_loss", "/", "cnt", ")", ")", "\n", "", "", "t_loss", "=", "sum_loss", "/", "cnt", "\n", "# save model", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optim'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'mae'", ":", "BEST_MAE", ",", "\n", "'mse'", ":", "BEST_MSE", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "'Checkpoint/models/ckpt.pth'", ")", "\n", "\n", "############################", "\n", "# test", "\n", "############################", "\n", "# test mode", "\n", "model", ".", "eval", "(", ")", "\n", "# loss", "\n", "mae", "=", "0.0", "\n", "mse", "=", "0.0", "\n", "# number of iterations", "\n", "cnt", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "data", "in", "val_loader", ":", "\n", "                ", "cnt", "+=", "1", "\n", "\n", "# load data", "\n", "image", ",", "gt", ",", "gt_density", "=", "data", "\n", "image", ",", "gt_density", "=", "image", ".", "float", "(", ")", ",", "gt_density", ".", "float", "(", ")", "\n", "image", ",", "gt_density", "=", "image", ".", "to", "(", "device", ")", ",", "gt_density", ".", "to", "(", "device", ")", "\n", "\n", "# forward and backward propagation", "\n", "pr_density", ",", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", "=", "model", "(", "image", ")", "\n", "\n", "# record real results and predicted results", "\n", "pr_density", "=", "pr_density", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "gt_density", "=", "gt_density", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "pr", "=", "np", ".", "sum", "(", "pr_density", ")", "\n", "gt", "=", "np", ".", "sum", "(", "gt_density", ")", "\n", "mae", "+=", "np", ".", "abs", "(", "gt", "-", "pr", ")", "\n", "mse", "+=", "np", ".", "abs", "(", "gt", "-", "pr", ")", "**", "2", "\n", "\n", "# calculate loss", "\n", "", "", "mae_loss", "=", "mae", "/", "cnt", "\n", "mse_loss", "=", "np", ".", "sqrt", "(", "mse", "/", "cnt", ")", "\n", "# update best mse, mae", "\n", "BEST_MSE", "=", "min", "(", "BEST_MSE", ",", "mse_loss", ")", "\n", "if", "BEST_MAE", ">", "mae_loss", ":", "\n", "          ", "BEST_MAE", "=", "mae_loss", "\n", "# save best model", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optim'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'mae'", ":", "BEST_MAE", ",", "\n", "'mse'", ":", "BEST_MSE", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "'Checkpoint/models/ckpt_best.pth'", ")", "\n", "\n", "# print log", "\n", "", "print", "(", "'[%d/%d]\\ttime: %.2f[minute]\\tLoss_T: %.4f\\tMAE: %.4f\\tMSE: %.4f\\tBEST_MAE: %.4f\\tBEST_MSE: %.4f'", "\n", "%", "(", "epoch", "+", "1", ",", "EPOCH", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "60", ",", "t_loss", ",", "mae_loss", ",", "mse_loss", ",", "BEST_MAE", ",", "BEST_MSE", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.val.val": [[16, 112], ["torch.device", "torch.device", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "dataset.CrowdCountingDataset", "torch.utils.data.DataLoader", "model.PSNet().float", "model.to.to", "print", "os.path.isdir", "torch.load", "torch.load", "model.to.load_state_dict", "torch.CosineSimilarity().to", "model.to.eval", "numpy.sqrt", "print", "torch.no_grad", "torch.no_grad", "torch.cuda.is_available", "torch.cuda.is_available", "torchvision.transforms.ToTensor", "model.PSNet", "torch.CosineSimilarity", "model.to.", "attention_loss.item", "pr_density.cpu().detach().numpy.cpu().detach().numpy", "numpy.sum", "numpy.abs", "image.float", "gt_density.float", "image.to", "gt_density.to", "range", "numpy.abs", "pr_density.cpu().detach().numpy.cpu().detach", "torch.sum", "torch.sum", "image.size", "nn.CosineSimilarity().to.", "pr_density.cpu().detach().numpy.cpu", "attention_map[].contiguous().view", "image.size", "image.size", "attention_map[].contiguous"], "function", ["None"], ["def", "val", "(", ")", ":", "\n", "    ", "\"\"\"\n        val model\n    \"\"\"", "\n", "# set hyperparameter", "\n", "TEST_IMG_DIR", "=", "'datasets/ShanghaiTech_Dataset/part_A_final/test_data/images'", "# the directory path for storing test set images", "\n", "workers", "=", "2", "# Number of workers for dataloader", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "# choose to run on cpu or cuda", "\n", "\n", "# bset MAE, MSE", "\n", "# BEST_MAE = float(\"inf\")", "\n", "BEST_MAE", "=", "300", "\n", "# BEST_MSE = float(\"inf\")", "\n", "BEST_MSE", "=", "300", "\n", "\n", "# load data", "\n", "MEAN", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "# mean", "\n", "STD", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "# std", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "MEAN", ",", "\n", "std", "=", "STD", "\n", ")", "\n", "val_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", ")", "\n", "# define valloader", "\n", "val_dataset", "=", "CrowdCountingDataset", "(", "TEST_IMG_DIR", ",", "transforms", "=", "val_transform", ",", "scale", "=", "8", ",", "mode", "=", "'test'", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "1", ",", "num_workers", "=", "workers", ")", "\n", "\n", "# define model", "\n", "model", "=", "PSNet", "(", ")", ".", "float", "(", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "# load model weights", "\n", "print", "(", "'==> Resuming from checkpoint..'", ")", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "'Checkpoint'", ")", ",", "'Error: no Checkpoint directory found!'", "\n", "state", "=", "torch", ".", "load", "(", "'Checkpoint/models/ckpt_best.pth'", ")", "\n", "model", ".", "load_state_dict", "(", "state", "[", "'net'", "]", ")", "\n", "BEST_MAE", "=", "state", "[", "'mae'", "]", "\n", "BEST_MSE", "=", "state", "[", "'mse'", "]", "\n", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "\n", "# loss function", "\n", "cosloss", "=", "nn", ".", "CosineSimilarity", "(", "dim", "=", "1", ",", "eps", "=", "1e-6", ")", ".", "to", "(", "device", ")", "\n", "\n", "############################", "\n", "# test", "\n", "############################", "\n", "# test mode", "\n", "model", ".", "eval", "(", ")", "\n", "# loss", "\n", "mae", "=", "0.0", "\n", "mse", "=", "0.0", "\n", "sum_att_loss", "=", "0.0", "\n", "# number of iterations", "\n", "cnt", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", "in", "val_loader", ":", "\n", "            ", "cnt", "+=", "1", "\n", "\n", "# load data", "\n", "image", ",", "gt", ",", "gt_density", "=", "data", "\n", "image", ",", "gt_density", "=", "image", ".", "float", "(", ")", ",", "gt_density", ".", "float", "(", ")", "\n", "image", ",", "gt_density", "=", "image", ".", "to", "(", "device", ")", ",", "gt_density", ".", "to", "(", "device", ")", "\n", "\n", "# forward and backward propagation", "\n", "pr_density", ",", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", "=", "model", "(", "image", ")", "\n", "\n", "attention_loss", "=", "0.", "\n", "for", "attention_map", "in", "(", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", ")", ":", "\n", "                ", "attention_map_sum", "=", "attention_map", "[", ":", ",", "0", ":", "1", "]", "+", "attention_map", "[", ":", ",", "1", ":", "2", "]", "+", "attention_map", "[", ":", ",", "2", ":", "3", "]", "+", "attention_map", "[", ":", ",", "3", ":", "4", "]", "\n", "attention_loss_temp", "=", "0.", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "                    ", "attention_loss_temp", "+=", "torch", ".", "sum", "(", "\n", "cosloss", "(", "attention_map", "[", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ".", "contiguous", "(", ")", ".", "view", "(", "image", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "\n", "(", "(", "attention_map_sum", "-", "attention_map", "[", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ")", "/", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "image", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "/", "image", ".", "size", "(", "0", ")", "\n", "", "attention_loss", "+=", "(", "attention_loss_temp", "/", "4", ")", "\n", "", "attention_loss", "/=", "3", "\n", "sum_att_loss", "+=", "attention_loss", ".", "item", "(", ")", "\n", "\n", "# record real results and predicted results", "\n", "pr_density", "=", "pr_density", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "pr", "=", "np", ".", "sum", "(", "pr_density", ")", "\n", "mae", "+=", "np", ".", "abs", "(", "gt", "-", "pr", ")", "\n", "mse", "+=", "np", ".", "abs", "(", "gt", "-", "pr", ")", "**", "2", "\n", "\n", "# calculate loss", "\n", "", "", "mae_loss", "=", "mae", "/", "cnt", "\n", "mse_loss", "=", "np", ".", "sqrt", "(", "mse", "/", "cnt", ")", "\n", "att_loss", "=", "sum_att_loss", "/", "cnt", "\n", "\n", "# print log", "\n", "print", "(", "'EPOCH: %d\\tMAE: %.4f\\tMSE: %.4f\\tBEST_MAE: %.4f\\tBEST_MSE: %.4f\\tATT_LOSS: %.4f'", "\n", "%", "(", "epoch", ",", "mae_loss", ",", "mse_loss", ",", "BEST_MAE", ",", "BEST_MSE", ",", "att_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.dataset.CrowdCountingDataset.__init__": [[20, 36], ["glob.glob", "os.path.join", "dataset.CrowdCountingDataset.img_paths.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dir_path", ",", "transforms", ",", "scale", "=", "8", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "\"\"\"\n        :param\n             dir_path(str) -- the path of the image directory\n             transforms --\n             scale(int) -- density map scale factor\n             mode(str) --\n        \"\"\"", "\n", "self", ".", "transforms", "=", "transforms", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "# acquire image path", "\n", "self", ".", "img_paths", "=", "[", "]", "\n", "for", "img_path", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'*.jpg'", ")", ")", ":", "\n", "            ", "self", ".", "img_paths", ".", "append", "(", "img_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.dataset.CrowdCountingDataset.__getitem__": [[37, 104], ["PIL.Image.open().convert", "img_path.replace().replace", "min", "random.uniform", "round", "round", "torchvision.transforms.functional.to_grayscale.resize", "random.randint", "random.randint", "torchvision.transforms.functional.to_grayscale.crop", "dataset.CrowdCountingDataset.transforms", "h5py.File", "numpy.asarray", "dataset.CrowdCountingDataset.transforms", "numpy.sum", "round", "round", "torchvision.transforms.functional.to_grayscale.resize", "random.random", "torchvision.transforms.functional.to_grayscale.transpose", "random.random", "random.uniform", "torchvision.transforms.functional.adjust_gamma", "random.random", "torchvision.transforms.functional.to_grayscale", "PIL.Image.open", "img_path.replace", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "##--load image--##", "\n", "        ", "img_path", "=", "self", ".", "img_paths", "[", "index", "]", "\n", "# read image", "\n", "img", "=", "Image", ".", "open", "(", "img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "# image size", "\n", "img_width", ",", "img_height", "=", "img", ".", "size", "\n", "\n", "##--load density map--##", "\n", "density_path", "=", "img_path", ".", "replace", "(", "'.jpg'", ",", "'.h5'", ")", ".", "replace", "(", "'images'", ",", "'density'", ")", "\n", "# read density map", "\n", "with", "h5py", ".", "File", "(", "density_path", ",", "'r'", ")", "as", "hf", ":", "\n", "            ", "density", "=", "np", ".", "asarray", "(", "hf", "[", "'density'", "]", ")", "\n", "\n", "", "if", "self", ".", "mode", "!=", "'train'", ":", "\n", "# image", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "# density map", "\n", "gt", "=", "np", ".", "sum", "(", "density", ")", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ",", "\n", "(", "density", ".", "shape", "[", "1", "]", "//", "self", ".", "scale", ",", "density", ".", "shape", "[", "0", "]", "//", "self", ".", "scale", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "*", "(", "self", ".", "scale", "**", "2", ")", "\n", "density", "=", "density", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "\n", "return", "img", ",", "gt", ",", "density", "\n", "\n", "# random resize", "\n", "", "short", "=", "min", "(", "img_width", ",", "img_height", ")", "\n", "if", "short", "<", "512", ":", "\n", "            ", "scale", "=", "512", "/", "short", "\n", "img_width", "=", "round", "(", "img_width", "*", "scale", ")", "\n", "img_height", "=", "round", "(", "img_height", "*", "scale", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "img_width", ",", "img_height", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ",", "(", "img_width", ",", "img_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "/", "scale", "/", "scale", "\n", "", "scale", "=", "random", ".", "uniform", "(", "0.8", ",", "1.2", ")", "\n", "img_width", "=", "round", "(", "img_width", "*", "scale", ")", "\n", "img_height", "=", "round", "(", "img_height", "*", "scale", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "img_width", ",", "img_height", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ",", "(", "img_width", ",", "img_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "/", "scale", "/", "scale", "\n", "\n", "# random crop", "\n", "h", ",", "w", "=", "400", ",", "400", "\n", "dh", "=", "random", ".", "randint", "(", "0", ",", "img_height", "-", "h", ")", "\n", "dw", "=", "random", ".", "randint", "(", "0", ",", "img_width", "-", "w", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "dw", ",", "dh", ",", "dw", "+", "w", ",", "dh", "+", "h", ")", ")", "\n", "density", "=", "density", "[", "dh", ":", "dh", "+", "h", ",", "dw", ":", "dw", "+", "w", "]", "\n", "\n", "# random flip", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "density", "=", "density", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "# random gamma", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.3", ":", "\n", "            ", "gamma", "=", "random", ".", "uniform", "(", "0.5", ",", "1.5", ")", "\n", "img", "=", "functional", ".", "adjust_gamma", "(", "img", ",", "gamma", ")", "\n", "\n", "# random to gray", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.1", ":", "\n", "            ", "img", "=", "functional", ".", "to_grayscale", "(", "img", ",", "num_output_channels", "=", "3", ")", "\n", "\n", "", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ",", "(", "density", ".", "shape", "[", "1", "]", "//", "self", ".", "scale", ",", "density", ".", "shape", "[", "0", "]", "//", "self", ".", "scale", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "*", "self", ".", "scale", "*", "self", ".", "scale", "\n", "density", "=", "density", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "\n", "return", "img", ",", "density", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.dataset.CrowdCountingDataset.__len__": [[105, 107], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_paths", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.make_dataset.generate_density": [[23, 63], ["os.path.join", "os.path.join", "print", "os.path.split", "os.path.join", "glob.glob", "print", "scipy.loadmat", "matplotlib.pyplot.imread", "numpy.zeros", "range", "make_dataset.gaussian_filter_density", "os.path.exists", "os.makedirs", "os.path.join", "img_paths.append", "img_path.replace().replace().replace", "len", "h5py.File", "img_path.replace().replace", "img_path.replace().replace", "int", "int", "img_path.replace", "img_path.replace", "int", "int"], "function", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.make_dataset.gaussian_filter_density"], ["def", "generate_density", "(", ")", ":", "\n", "# root directory", "\n", "    ", "root", "=", "'datasets/ShanghaiTech_Dataset'", "\n", "# PartA train and test set directory", "\n", "part_A_train", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'part_A_final/train_data'", ",", "'images'", ")", "\n", "part_A_test", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'part_A_final/test_data'", ",", "'images'", ")", "\n", "# # PartB train and test set directory", "\n", "# part_B_train = os.path.join(root, 'part_B_final/train_data', 'images')", "\n", "# part_B_test = os.path.join(root, 'part_B_final/test_data', 'images')", "\n", "\n", "path_sets", "=", "[", "part_A_train", ",", "part_A_test", "]", "\n", "\n", "# density map storage directory", "\n", "for", "path", "in", "path_sets", ":", "\n", "        ", "dir_path", ",", "_", "=", "os", ".", "path", ".", "split", "(", "path", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'density'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "# acquire image path", "\n", "", "", "img_paths", "=", "[", "]", "\n", "for", "path", "in", "path_sets", ":", "\n", "        ", "for", "img_path", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'*.jpg'", ")", ")", ":", "\n", "            ", "img_paths", ".", "append", "(", "img_path", ")", "\n", "\n", "# generate density map", "\n", "", "", "for", "img_path", "in", "img_paths", ":", "\n", "        ", "print", "(", "img_path", ")", "\n", "mat", "=", "io", ".", "loadmat", "(", "img_path", ".", "replace", "(", "'.jpg'", ",", "'.mat'", ")", ".", "replace", "(", "'images'", ",", "'ground_truth'", ")", ".", "replace", "(", "'IMG_'", ",", "'GT_IMG_'", ")", ")", "\n", "img", "=", "plt", ".", "imread", "(", "img_path", ")", "\n", "k", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ")", ")", "\n", "gt", "=", "mat", "[", "\"image_info\"", "]", "[", "0", ",", "0", "]", "[", "0", ",", "0", "]", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "gt", ")", ")", ":", "\n", "            ", "if", "int", "(", "gt", "[", "i", "]", "[", "1", "]", ")", "<", "img", ".", "shape", "[", "0", "]", "and", "int", "(", "gt", "[", "i", "]", "[", "0", "]", ")", "<", "img", ".", "shape", "[", "1", "]", ":", "\n", "                ", "k", "[", "int", "(", "gt", "[", "i", "]", "[", "1", "]", ")", ",", "int", "(", "gt", "[", "i", "]", "[", "0", "]", ")", "]", "=", "1", "\n", "", "", "k", "=", "gaussian_filter_density", "(", "k", ")", "\n", "with", "h5py", ".", "File", "(", "img_path", ".", "replace", "(", "'.jpg'", ",", "'.h5'", ")", ".", "replace", "(", "'images'", ",", "'density'", ")", ",", "'w'", ")", "as", "hf", ":", "\n", "            ", "hf", "[", "'density'", "]", "=", "k", "\n", "\n", "", "", "print", "(", "\"Over!!!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.make_dataset.gaussian_filter_density": [[68, 93], ["print", "numpy.zeros", "numpy.count_nonzero", "numpy.array", "scipy.spatial.KDTree", "scipy.spatial.KDTree", "scipy.spatial.KDTree", "scipy.spatial.KDTree.query", "print", "enumerate", "print", "list", "np.array.copy", "numpy.zeros", "scipy.ndimage.filters.gaussian_filter", "scipy.ndimage.filters.gaussian_filter", "scipy.ndimage.filters.gaussian_filter", "zip", "numpy.nonzero", "numpy.nonzero", "numpy.average", "numpy.array"], "function", ["None"], ["", "def", "gaussian_filter_density", "(", "gt", ")", ":", "\n", "    ", "print", "(", "gt", ".", "shape", ")", "\n", "density", "=", "np", ".", "zeros", "(", "gt", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt_count", "=", "np", ".", "count_nonzero", "(", "gt", ")", "\n", "if", "gt_count", "==", "0", ":", "\n", "        ", "return", "density", "\n", "\n", "", "pts", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "np", ".", "nonzero", "(", "gt", ")", "[", "1", "]", ",", "np", ".", "nonzero", "(", "gt", ")", "[", "0", "]", ")", ")", ")", "\n", "leafsize", "=", "2048", "\n", "# build kdtree", "\n", "tree", "=", "scipy", ".", "spatial", ".", "KDTree", "(", "pts", ".", "copy", "(", ")", ",", "leafsize", "=", "leafsize", ")", "\n", "# query kdtree", "\n", "distances", ",", "locations", "=", "tree", ".", "query", "(", "pts", ",", "k", "=", "4", ")", "\n", "\n", "print", "(", "'generate density...'", ")", "\n", "for", "i", ",", "pt", "in", "enumerate", "(", "pts", ")", ":", "\n", "        ", "pt2d", "=", "np", ".", "zeros", "(", "gt", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pt2d", "[", "pt", "[", "1", "]", ",", "pt", "[", "0", "]", "]", "=", "1.", "\n", "if", "gt_count", ">", "1", ":", "\n", "            ", "sigma", "=", "(", "distances", "[", "i", "]", "[", "1", "]", "+", "distances", "[", "i", "]", "[", "2", "]", "+", "distances", "[", "i", "]", "[", "3", "]", ")", "*", "0.1", "\n", "", "else", ":", "\n", "            ", "sigma", "=", "np", ".", "average", "(", "np", ".", "array", "(", "gt", ".", "shape", ")", ")", "/", "2.", "/", "2.", "#case: 1 point", "\n", "", "density", "+=", "scipy", ".", "ndimage", ".", "filters", ".", "gaussian_filter", "(", "pt2d", ",", "sigma", ",", "mode", "=", "'constant'", ")", "\n", "", "print", "(", "'done.'", ")", "\n", "return", "density", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.PSNet.__init__": [[17, 23], ["torch.Module.__init__", "model.VGG", "model.BackEnd", "model.PSNet._load_vgg"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__", "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.PSNet._load_vgg"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg", "=", "VGG", "(", ")", "\n", "self", ".", "dmp", "=", "BackEnd", "(", ")", "\n", "\n", "self", ".", "_load_vgg", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.PSNet.forward": [[24, 29], ["model.PSNet.vgg", "model.PSNet.dmp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "vgg", "(", "input", ")", "\n", "dmp_out", "=", "self", ".", "dmp", "(", "*", "input", ")", "\n", "\n", "return", "dmp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.PSNet._load_vgg": [[30, 50], ["torch.utils.model_zoo.load_url", "torch.utils.model_zoo.load_url", "torch.utils.model_zoo.load_url", "range", "model.PSNet.vgg.load_state_dict", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "_load_vgg", "(", "self", ")", ":", "\n", "        ", "state_dict", "=", "model_zoo", ".", "load_url", "(", "'https://download.pytorch.org/models/vgg16_bn-6c64b313.pth'", ")", "\n", "old_name", "=", "[", "0", ",", "1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "10", ",", "11", ",", "14", ",", "15", ",", "17", ",", "18", ",", "20", ",", "21", ",", "24", ",", "25", ",", "27", ",", "28", ",", "30", ",", "31", ",", "34", ",", "35", ",", "37", ",", "38", ",", "40", ",", "41", "]", "\n", "new_name", "=", "[", "'1_1'", ",", "'1_2'", ",", "'2_1'", ",", "'2_2'", ",", "'3_1'", ",", "'3_2'", ",", "'3_3'", ",", "'4_1'", ",", "'4_2'", ",", "'4_3'", ",", "'5_1'", ",", "'5_2'", ",", "'5_3'", "]", "\n", "new_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.conv.weight'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "]", ")", "+", "'.weight'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.conv.bias'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "]", ")", "+", "'.bias'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.weight'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.weight'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.bias'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.bias'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.running_mean'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.running_mean'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.running_var'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.running_var'", "]", "\n", "\n", "", "self", ".", "vgg", ".", "load_state_dict", "(", "new_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.VGG.__init__": [[53, 66], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "conv1_1", "=", "BaseConv", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv1_2", "=", "BaseConv", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2_1", "=", "BaseConv", "(", "64", ",", "128", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2_2", "=", "BaseConv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_1", "=", "BaseConv", "(", "128", ",", "256", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_2", "=", "BaseConv", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_3", "=", "BaseConv", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_1", "=", "BaseConv", "(", "256", ",", "512", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_2", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_3", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.VGG.forward": [[67, 86], ["model.VGG.conv1_1", "model.VGG.conv1_2", "model.VGG.pool", "model.VGG.conv2_1", "model.VGG.conv2_2", "model.VGG.pool", "model.VGG.conv3_1", "model.VGG.conv3_2", "model.VGG.conv3_3", "model.VGG.pool", "model.VGG.conv4_1", "model.VGG.conv4_2", "model.VGG.conv4_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "conv1_1", "(", "input", ")", "\n", "conv1_2", "=", "self", ".", "conv1_2", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv1_2", ")", "\n", "input", "=", "self", ".", "conv2_1", "(", "input", ")", "\n", "conv2_2", "=", "self", ".", "conv2_2", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv2_2", ")", "\n", "input", "=", "self", ".", "conv3_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv3_2", "(", "input", ")", "\n", "conv3_3", "=", "self", ".", "conv3_3", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv3_3", ")", "\n", "input", "=", "self", ".", "conv4_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv4_2", "(", "input", ")", "\n", "conv4_3", "=", "self", ".", "conv4_3", "(", "input", ")", "\n", "\n", "return", "conv1_2", ",", "conv2_2", ",", "conv3_3", ",", "conv4_3", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BackEnd.__init__": [[89, 100], ["torch.Module.__init__", "model.DenseModule", "model.DenseModule", "model.DenseModule", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BackEnd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dense1", "=", "DenseModule", "(", "512", ")", "\n", "self", ".", "dense2", "=", "DenseModule", "(", "512", ")", "\n", "self", ".", "dense3", "=", "DenseModule", "(", "512", ")", "\n", "\n", "self", ".", "conv1", "=", "BaseConv", "(", "512", ",", "256", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BaseConv", "(", "256", ",", "128", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3", "=", "BaseConv", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4", "=", "BaseConv", "(", "64", ",", "1", ",", "1", ",", "1", ",", "activation", "=", "None", ",", "use_bn", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BackEnd.forward": [[101, 114], ["model.BackEnd.dense1", "model.BackEnd.dense2", "model.BackEnd.dense3", "model.BackEnd.conv1", "model.BackEnd.conv2", "model.BackEnd.conv3", "model.BackEnd.conv4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "input", ")", ":", "\n", "        ", "conv1_2", ",", "conv2_2", ",", "conv3_3", ",", "conv4_3", "=", "input", "\n", "\n", "input", ",", "attention_map_1", "=", "self", ".", "dense1", "(", "conv4_3", ")", "\n", "input", ",", "attention_map_2", "=", "self", ".", "dense2", "(", "input", ")", "\n", "input", ",", "attention_map_3", "=", "self", ".", "dense3", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "conv1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv2", "(", "input", ")", "\n", "input", "=", "self", ".", "conv3", "(", "input", ")", "\n", "input", "=", "self", ".", "conv4", "(", "input", ")", "\n", "\n", "return", "input", ",", "attention_map_1", ",", "attention_map_2", ",", "attention_map_3", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.ChannelAttention.__init__": [[117, 122], ["torch.Module.__init__", "model.BaseConv", "model.BaseConv", "round", "round", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "ratio", "=", "16", ")", ":", "\n", "        ", "super", "(", "ChannelAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "BaseConv", "(", "in_planes", ",", "round", "(", "in_planes", "//", "ratio", ")", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "False", ")", "\n", "self", ".", "conv2", "=", "BaseConv", "(", "round", "(", "in_planes", "//", "ratio", ")", ",", "in_planes", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "Sigmoid", "(", ")", ",", "use_bn", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.ChannelAttention.forward": [[123, 128], ["model.ChannelAttention.conv1", "model.ChannelAttention.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "input", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.DenseModule.__init__": [[131, 154], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.ChannelAttention", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "DenseModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv3x3", "=", "nn", ".", "Sequential", "(", "\n", "BaseConv", "(", "in_channels", ",", "in_channels", "//", "4", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ",", "\n", "BaseConv", "(", "in_channels", "//", "4", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ")", "\n", "self", ".", "conv5x5", "=", "nn", ".", "Sequential", "(", "\n", "BaseConv", "(", "in_channels", ",", "in_channels", "//", "4", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ",", "\n", "BaseConv", "(", "in_channels", "//", "4", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "2", ",", "2", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ")", "\n", "self", ".", "conv7x7", "=", "nn", ".", "Sequential", "(", "\n", "BaseConv", "(", "in_channels", ",", "in_channels", "//", "4", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ",", "\n", "BaseConv", "(", "in_channels", "//", "4", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "3", ",", "3", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ")", "\n", "self", ".", "conv9x9", "=", "nn", ".", "Sequential", "(", "\n", "BaseConv", "(", "in_channels", ",", "in_channels", "//", "4", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ",", "\n", "BaseConv", "(", "in_channels", "//", "4", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "4", ",", "4", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv1", "=", "BaseConv", "(", "in_channels", "//", "2", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BaseConv", "(", "in_channels", "//", "2", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3", "=", "BaseConv", "(", "in_channels", "//", "2", ",", "in_channels", "//", "4", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n", "self", ".", "att", "=", "ChannelAttention", "(", "in_channels", ")", "\n", "\n", "self", ".", "conv", "=", "BaseConv", "(", "in_channels", ",", "in_channels", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.DenseModule.forward": [[155, 175], ["model.DenseModule.conv3x3", "model.DenseModule.conv5x5", "model.DenseModule.conv7x7", "model.DenseModule.conv9x9", "model.DenseModule.conv1", "model.DenseModule.conv2", "model.DenseModule.conv3", "model.DenseModule.att", "model.DenseModule.conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "conv3x3", "=", "self", ".", "conv3x3", "(", "input", ")", "\n", "conv5x5", "=", "self", ".", "conv5x5", "(", "input", ")", "\n", "conv7x7", "=", "self", ".", "conv7x7", "(", "input", ")", "\n", "conv9x9", "=", "self", ".", "conv9x9", "(", "input", ")", "\n", "\n", "conv5x5", "=", "self", ".", "conv1", "(", "torch", ".", "cat", "(", "(", "conv3x3", ",", "conv5x5", ")", ",", "dim", "=", "1", ")", ")", "\n", "conv7x7", "=", "self", ".", "conv2", "(", "torch", ".", "cat", "(", "(", "conv5x5", ",", "conv7x7", ")", ",", "dim", "=", "1", ")", ")", "\n", "conv9x9", "=", "self", ".", "conv3", "(", "torch", ".", "cat", "(", "(", "conv7x7", ",", "conv9x9", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "att", "=", "self", ".", "att", "(", "input", ")", "\n", "\n", "out", "=", "self", ".", "conv", "(", "torch", ".", "cat", "(", "(", "conv3x3", ",", "conv5x5", ",", "conv7x7", ",", "conv9x9", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "attention_map", "=", "torch", ".", "cat", "(", "(", "torch", ".", "mean", "(", "conv3x3", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "\n", "torch", ".", "mean", "(", "conv5x5", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "\n", "torch", ".", "mean", "(", "conv7x7", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "\n", "torch", ".", "mean", "(", "conv9x9", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "out", "*", "att", ",", "attention_map", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__": [[178, 189], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.BaseConv.conv.weight.data.normal_", "model.BaseConv.conv.bias.data.zero_", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model.BaseConv.bn.weight.data.fill_", "model.BaseConv.bn.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "activation", "=", "None", ",", "\n", "use_bn", "=", "False", ")", ":", "\n", "        ", "super", "(", "BaseConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel", ",", "stride", ",", "padding", ",", "dilation", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "conv", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "self", ".", "bn", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "self", ".", "bn", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.model.BaseConv.forward": [[190, 198], ["model.BaseConv.conv", "model.BaseConv.bn", "model.BaseConv.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "conv", "(", "input", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "input", "=", "self", ".", "bn", "(", "input", ")", "\n", "", "if", "self", ".", "activation", ":", "\n", "            ", "input", "=", "self", ".", "activation", "(", "input", ")", "\n", "\n", "", "return", "input", "", "", "", ""]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.utils.adjust_learning_rate": [[34, 38], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "if", "(", "epoch", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "        ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "param_group", "[", "'lr'", "]", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.oahunc_Pyramid_Scale_Network.None.utils.setup_seed": [[43, 49], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "", "", "def", "setup_seed", "(", "seed", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "", "", ""]]}