{"home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.__init__": [[6, 17], ["os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "out_dir", ",", "model_type", ")", ":", "\n", "        ", "self", ".", "metrics", "=", "{", "\n", "'test_mae'", ":", "[", "]", ",", "\n", "'test_accuracy'", ":", "[", "]", ",", "\n", "'test_oneoff_accuracy'", ":", "[", "]", ",", "\n", "'test_unimodality'", ":", "[", "]", ",", "\n", "'test_entropy_ratio'", ":", "[", "]", ",", "\n", "'test_kappa'", ":", "[", "]", ",", "\n", "'test_spearman'", ":", "[", "]", ",", "\n", "}", "\n", "self", ".", "out_file", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "model_type", ",", "'test_results.txt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.update": [[18, 21], ["result.items", "logger.MetricsLogger.metrics[].append", "v.item"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "result", ":", "dict", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "result", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "metrics", "[", "k", "]", ".", "append", "(", "v", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write_intermediate": [[22, 26], ["open", "result.items", "w.write"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write"], ["", "", "def", "write_intermediate", "(", "self", ",", "workdir", ",", "result", ")", ":", "\n", "        ", "with", "open", "(", "f'{workdir}/RESULTS.txt'", ",", "mode", "=", "'w'", ")", "as", "w", ":", "\n", "            ", "for", "k", ",", "v", "in", "result", ".", "items", "(", ")", ":", "\n", "                ", "w", ".", "write", "(", "f'{k} {v:.4f}\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write": [[27, 32], ["open", "logger.MetricsLogger.metrics.items", "w.write", "w.write", "numpy.mean().item", "numpy.std().item", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write", "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write"], ["", "", "", "def", "write", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "out_file", ",", "mode", "=", "'a'", ")", "as", "w", ":", "\n", "            ", "for", "k", ",", "v", "in", "self", ".", "metrics", ".", "items", "(", ")", ":", "\n", "                ", "w", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "k", ",", "[", "'{:.4f}'", ".", "format", "(", "val", ")", "for", "val", "in", "v", "]", ")", ")", "\n", "w", ".", "write", "(", "'{}: mean = {:.4f}, std = {:.4f}\\n'", ".", "format", "(", "k", ",", "np", ".", "mean", "(", "v", ")", ".", "item", "(", ")", ",", "np", ".", "std", "(", "v", ")", ".", "item", "(", ")", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.None.run.Config.__init__": [[18, 20], ["run.Config.__dict__.update"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.update"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.run.init_class": [[22, 26], ["type"], "function", ["None"], ["", "", "def", "init_class", "(", "dataset", ",", "method", ")", ":", "\n", "    ", "method_class", "=", "catalog", "[", "method", "]", "\n", "data_module", "=", "data_modules", "[", "dataset", "]", "\n", "return", "type", "(", "method", "+", "dataset", ",", "(", "method_class", ",", "data_module", ")", ",", "{", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.run.parse_args": [[28, 33], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.jsvir_uniord.None.run.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--config\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.None.run.run_with_config": [[35, 67], ["run.Config", "run.init_class", "logger.MetricsLogger", "range", "logger.MetricsLogger.write", "range", "pytorch_lightning.seed_everything", "pytorch_lightning.loggers.TensorBoardLogger", "pytorch_lightning.Trainer.from_argparse_args", "pytorch_lightning.callbacks.LearningRateMonitor", "pytorch_lightning.callbacks.ModelCheckpoint", "Trainer.from_argparse_args.callbacks.append", "Trainer.from_argparse_args.callbacks.append", "init_class.", "Trainer.from_argparse_args.test", "logger.MetricsLogger.update", "logger.MetricsLogger.write_intermediate", "os.path.exists", "os.makedirs", "torch.utils.tensorboard.SummaryWriter", "Trainer.from_argparse_args.fit"], "function", ["home.repos.pwc.inspect_result.jsvir_uniord.None.run.init_class", "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.update", "home.repos.pwc.inspect_result.jsvir_uniord.None.logger.MetricsLogger.write_intermediate"], ["", "def", "run_with_config", "(", "config", ",", "task", "=", "'train'", ")", ":", "\n", "    ", "config", "=", "Config", "(", "config", ")", "\n", "model_class", "=", "init_class", "(", "config", ".", "dataset", ",", "config", ".", "method", ")", "\n", "metrics_logger", "=", "MetricsLogger", "(", "config", ".", "output_dir", ",", "model_class", ".", "__name__", ")", "\n", "for", "split", "in", "range", "(", "config", ".", "data_splits", ")", ":", "\n", "        ", "for", "fold", "in", "range", "(", "config", ".", "data_folds", ")", ":", "\n", "            ", "config", ".", "fold", "=", "fold", "\n", "config", ".", "split", "=", "split", "\n", "seed_everything", "(", "split", ")", "# move to here for random initialization", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "output_dir", ")", ":", "os", ".", "makedirs", "(", "config", ".", "output_dir", ")", "\n", "config", ".", "logger", "=", "TensorBoardLogger", "(", "config", ".", "output_dir", ",", "name", "=", "model_class", ".", "__name__", ",", "log_graph", "=", "False", ")", "\n", "trainer", "=", "Trainer", ".", "from_argparse_args", "(", "config", ")", "\n", "lr_log_callback", "=", "LearningRateMonitor", "(", "logging_interval", "=", "'epoch'", ")", "\n", "checkpoint_callback", "=", "ModelCheckpoint", "(", "\n", "monitor", "=", "config", ".", "checkpoint_on", ",", "\n", "save_top_k", "=", "1", ",", "\n", "mode", "=", "\"min\"", ",", "\n", "save_weights_only", "=", "True", ",", "\n", "verbose", "=", "True", ",", "\n", ")", "\n", "trainer", ".", "callbacks", ".", "append", "(", "lr_log_callback", ")", "\n", "trainer", ".", "callbacks", ".", "append", "(", "checkpoint_callback", ")", "\n", "model", "=", "model_class", "(", "config", ")", "\n", "if", "config", ".", "error_analysis", ":", "\n", "                ", "model", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "f'{config.logger.save_dir}/{config.logger.name}/version_{config.logger.version}'", ")", "\n", "", "if", "task", "==", "'train'", ":", "\n", "                ", "trainer", ".", "fit", "(", "model", ")", "\n", "", "trainer", ".", "test", "(", "model", ")", "\n", "metrics_logger", ".", "update", "(", "model", ".", "test_metrics", ")", "\n", "metrics_logger", ".", "write_intermediate", "(", "f'{config.logger.save_dir}/{config.logger.name}/version_{config.logger.version}'", ",", "model", ".", "test_metrics", ")", "\n", "\n", "", "", "metrics_logger", ".", "write", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.OrdinalDataset.__init__": [[21, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "task", "=", "task", "\n", "self", ".", "data_splits", "=", "data_splits", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.OrdinalDataset.get_labels": [[27, 30], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.FGNETDataset.__init__": [[33, 36], ["dataset.OrdinalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "self", ".", "X", ",", "self", ".", "Y", "=", "data_splits", "[", "task", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.FGNETDataset.get_labels": [[37, 39], ["numpy.array"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "self", ".", "Y", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.FGNETDataset.__len__": [[40, 42], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.FGNETDataset.split_dataset": [[43, 65], ["glob.glob", "print", "sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "print", "print", "print", "Y.append", "numpy.max", "[].split", "int", "math.floor", "len", "len", "len", "int", "os.path.basename().split", "os.path.basename"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_dataset", "(", "root_dir", ",", "seed", "=", "0", ")", ":", "\n", "        ", "imgs", "=", "glob", ".", "glob", "(", "f\"{root_dir}/images/*.JPG\"", ")", "\n", "X", "=", "imgs", "\n", "Y", "=", "[", "]", "\n", "for", "f", "in", "imgs", ":", "\n", "            ", "age", "=", "os", ".", "path", ".", "basename", "(", "f", ")", ".", "split", "(", "'A'", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "try", ":", "\n", "                ", "age", "=", "int", "(", "age", ")", "\n", "", "except", ":", "\n", "                ", "age", "=", "int", "(", "''", ".", "join", "(", "age", "[", ":", "-", "1", "]", ")", ")", "\n", "", "Y", ".", "append", "(", "math", ".", "floor", "(", "age", "/", "10", ")", ")", "\n", "", "print", "(", "np", ".", "max", "(", "Y", ")", ")", "\n", "X_train", ",", "X_test", ",", "Y_train", ",", "Y_test", "=", "train_test_split", "(", "X", ",", "Y", ",", "test_size", "=", "100", ",", "random_state", "=", "seed", ")", "\n", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_test_split", "(", "X_train", ",", "Y_train", ",", "test_size", "=", "100", ",", "random_state", "=", "seed", ")", "\n", "print", "(", "'size(X_train)={}'", ".", "format", "(", "len", "(", "X_train", ")", ")", ")", "\n", "print", "(", "'size(X_test)={}'", ".", "format", "(", "len", "(", "X_test", ")", ")", ")", "\n", "print", "(", "'size(X_val)={}'", ".", "format", "(", "len", "(", "X_val", ")", ")", ")", "\n", "return", "{", "\n", "'train'", ":", "(", "X_train", ",", "Y_train", ")", ",", "\n", "'test'", ":", "(", "X_test", ",", "Y_test", ")", ",", "\n", "'val'", ":", "(", "X_val", ",", "Y_val", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.FGNETDataset.__getitem__": [[67, 78], ["PIL.Image.open", "dataset.FGNETDataset.convert", "dataset.FGNETDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "imgpath", "=", "self", ".", "X", "[", "idx", "]", "\n", "label", "=", "self", ".", "Y", "[", "idx", "]", "\n", "image", "=", "Image", ".", "open", "(", "imgpath", ")", "\n", "image", "=", "image", ".", "convert", "(", "'RGB'", ")", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "return", "{", "\n", "'image'", ":", "image", ",", "\n", "'label'", ":", "label", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.__init__": [[82, 88], ["dataset.OrdinalDataset.__init__", "dataset.AdienceDataset.read_from_txt_file"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.read_from_txt_file"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "self", ".", "root_dir", "=", "config", ".", "root_dir", "\n", "self", ".", "images_dir", "=", "config", ".", "data_images", "\n", "self", ".", "fold", "=", "config", ".", "fold", "\n", "self", ".", "XY", "=", "self", ".", "read_from_txt_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.get_labels": [[89, 91], ["numpy.array"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "t", "[", "1", "]", "for", "t", "in", "self", ".", "XY", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.__len__": [[92, 94], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "XY", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.read_from_txt_file": [[95, 104], ["open", "open.readlines", "line.split", "int", "data.append"], "methods", ["None"], ["", "def", "read_from_txt_file", "(", "self", ")", ":", "\n", "        ", "txt_file", "=", "f'{self.root_dir}/train_val_txt_files_per_fold/test_fold_is_{self.fold}/age_{self.task}.txt'", "\n", "data", "=", "[", "]", "\n", "f", "=", "open", "(", "txt_file", ")", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "image_file", ",", "label", "=", "line", ".", "split", "(", ")", "\n", "label", "=", "int", "(", "label", ")", "\n", "data", ".", "append", "(", "(", "image_file", ",", "label", ")", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AdienceDataset.__getitem__": [[105, 114], ["PIL.Image.open", "dataset.AdienceDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_name", ",", "label", "=", "self", ".", "XY", "[", "idx", "]", "\n", "image", "=", "Image", ".", "open", "(", "self", ".", "images_dir", "+", "'/'", "+", "img_name", ")", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "return", "{", "\n", "'image'", ":", "image", ",", "\n", "'label'", ":", "label", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.HCIDataset.__init__": [[118, 121], ["dataset.OrdinalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "self", ".", "X", ",", "self", ".", "Y", "=", "data_splits", "[", "task", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.HCIDataset.split_dataset": [[122, 152], ["numpy.random.seed", "random.seed", "classes.keys", "print", "print", "print", "glob.glob", "sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "len", "len", "len", "range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_dataset", "(", "root_dir", ",", "seed", "=", "0", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "classes", "=", "{", "'1930s'", ":", "0", ",", "'1940s'", ":", "1", ",", "'1950s'", ":", "2", ",", "'1960s'", ":", "3", ",", "'1970s'", ":", "4", "}", "\n", "X_train", "=", "[", "]", "\n", "Y_train", "=", "[", "]", "\n", "X_test", "=", "[", "]", "\n", "Y_test", "=", "[", "]", "\n", "X_val", "=", "[", "]", "\n", "Y_val", "=", "[", "]", "\n", "for", "c", "in", "classes", ".", "keys", "(", ")", ":", "\n", "            ", "x", "=", "glob", ".", "glob", "(", "'{}/{}/*.jpg'", ".", "format", "(", "root_dir", ",", "c", ")", ")", "\n", "y", "=", "[", "classes", "[", "c", "]", "for", "_", "in", "range", "(", "len", "(", "x", ")", ")", "]", "\n", "x_train", ",", "x_test", ",", "y_train", ",", "y_test", "=", "train_test_split", "(", "x", ",", "y", ",", "test_size", "=", "50", ",", "random_state", "=", "seed", ")", "\n", "x_train", ",", "x_val", ",", "y_train", ",", "y_val", "=", "train_test_split", "(", "x_train", ",", "y_train", ",", "test_size", "=", "22", ",", "random_state", "=", "seed", ")", "\n", "X_train", "+=", "x_train", "\n", "Y_train", "+=", "y_train", "\n", "X_test", "+=", "x_test", "\n", "Y_test", "+=", "y_test", "\n", "X_val", "+=", "x_val", "\n", "Y_val", "+=", "y_val", "\n", "", "print", "(", "'size(X_train)={}'", ".", "format", "(", "len", "(", "X_train", ")", ")", ")", "\n", "print", "(", "'size(X_test)={}'", ".", "format", "(", "len", "(", "X_test", ")", ")", ")", "\n", "print", "(", "'size(X_val)={}'", ".", "format", "(", "len", "(", "X_val", ")", ")", ")", "\n", "\n", "return", "{", "\n", "'train'", ":", "(", "X_train", ",", "Y_train", ")", ",", "\n", "'test'", ":", "(", "X_test", ",", "Y_test", ")", ",", "\n", "'val'", ":", "(", "X_val", ",", "Y_val", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.HCIDataset.get_labels": [[154, 156], ["numpy.array"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "self", ".", "Y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.HCIDataset.__len__": [[157, 159], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.HCIDataset.__getitem__": [[160, 170], ["PIL.Image.open", "dataset.HCIDataset.convert", "dataset.HCIDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "X", "[", "idx", "]", ")", "\n", "image", "=", "image", ".", "convert", "(", "'RGB'", ")", "\n", "label", "=", "self", ".", "Y", "[", "idx", "]", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "return", "{", "\n", "'image'", ":", "image", ",", "\n", "'label'", ":", "label", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.__init__": [[174, 182], ["dataset.OrdinalDataset.__init__", "h5py.File", "dataset.DRDataset.config.h5f_dataset_path.format"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "if", "self", ".", "config", ".", "use_h5f_dataset", ":", "\n", "            ", "h5f", "=", "h5py", ".", "File", "(", "self", ".", "config", ".", "h5f_dataset_path", ".", "format", "(", "task", ",", "config", ".", "split", ")", ",", "'r'", ")", "\n", "self", ".", "X", "=", "h5f", "[", "'x'", "]", "\n", "self", ".", "Y", "=", "h5f", "[", "'y'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "X", ",", "self", ".", "Y", "=", "self", ".", "data_splits", "[", "task", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.__getitem__": [[183, 195], ["PIL.Image.fromarray", "PIL.Image.open().resize().convert", "dataset.DRDataset.transform", "numpy.uint8().reshape", "PIL.Image.open().resize", "numpy.uint8", "PIL.Image.open"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "config", ".", "use_h5f_dataset", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "X", "[", "idx", "]", ",", "self", ".", "Y", "[", "idx", "]", "\n", "image", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", ")", ".", "reshape", "(", "(", "256", ",", "256", ",", "3", ")", ")", ",", "mode", "=", "'RGB'", ")", "\n", "", "else", ":", "\n", "            ", "image", "=", "Image", ".", "open", "(", "self", ".", "X", "[", "idx", "]", ")", ".", "resize", "(", "(", "256", ",", "256", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "label", "=", "self", ".", "Y", "[", "idx", "]", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "", "return", "{", "\n", "'image'", ":", "image", ",", "\n", "'label'", ":", "label", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.__len__": [[197, 199], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.get_labels": [[200, 202], ["numpy.array"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "self", ".", "Y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.convert_image": [[203, 228], ["cv2.imread", "dataset.DRDataset.convert_image.scale_radius"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "convert_image", "(", "config", ",", "image_path", ")", ":", "\n", "        ", "\"\"\"\n        Kaggle winner data preprocessing: https://kaggle-forum-message-attachments.storage.googleapis.com/88655/2795/competitionreport.pdf\n        The scale is the same as in https://github.com/christopher-beckham/msc/blob/master/experiments/diabetic_retinopathy/ben_opencv_resize.py\n        \"\"\"", "\n", "try", ":", "\n", "            ", "def", "scale_radius", "(", "img", ",", "scale", ")", ":", "\n", "                ", "x", "=", "img", "[", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "2", ")", ",", ":", ",", ":", "]", ".", "sum", "(", "1", ")", "\n", "r", "=", "(", "x", ">", "x", ".", "mean", "(", ")", "/", "10", ")", ".", "sum", "(", ")", "/", "2", "\n", "s", "=", "scale", "*", "1.0", "/", "r", "\n", "return", "cv2", ".", "resize", "(", "img", ",", "(", "0", ",", "0", ")", ",", "fx", "=", "s", ",", "fy", "=", "s", ")", "\n", "\n", "", "a", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "# scale img to a given radius", "\n", "a", "=", "scale_radius", "(", "a", ",", "config", ".", "radius_scale", ")", "\n", "# subtract local mean color", "\n", "a", "=", "cv2", ".", "addWeighted", "(", "a", ",", "4", ",", "cv2", ".", "GaussianBlur", "(", "a", ",", "(", "0", ",", "0", ")", ",", "config", ".", "radius_scale", "/", "30", ")", ",", "-", "4", ",", "128", ")", "\n", "# remove out er 10%", "\n", "b", "=", "np", ".", "zeros", "(", "a", ".", "shape", ")", "\n", "cv2", ".", "circle", "(", "b", ",", "(", "int", "(", "a", ".", "shape", "[", "1", "]", "/", "2", ")", ",", "int", "(", "a", ".", "shape", "[", "0", "]", "/", "2", ")", ")", ",", "int", "(", "config", ".", "radius_scale", "*", "0.9", ")", ",", "(", "1", ",", "1", ",", "1", ")", ",", "-", "1", ",", "8", ",", "0", ")", "\n", "a", "=", "a", "*", "b", "+", "128", "*", "(", "1", "-", "b", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "config", ".", "preprocessed_images_dir", ",", "os", ".", "path", ".", "basename", "(", "image_path", ")", ")", ",", "a", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Failed to convert'", ",", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.preprocess_images": [[229, 245], ["os.makedirs", "dataset.DRDataset.preprocess_images.chunks"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "preprocess_images", "(", "config", ")", ":", "\n", "        ", "def", "chunks", "(", "l", ",", "n", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "0", ",", "len", "(", "l", ")", ",", "n", ")", ":", "yield", "l", "[", "i", ":", "i", "+", "n", "]", "\n", "\n", "", "assert", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "preprocessed_images_dir", ")", ",", "'preprocessed_images_dir already exists! Are you sure?'", "\n", "os", ".", "makedirs", "(", "config", ".", "preprocessed_images_dir", ")", "\n", "batch", "=", "16", "\n", "count", "=", "0", "\n", "for", "chunk", "in", "chunks", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "config", ".", "raw_images_dir", ",", "'*.jpeg'", ")", ")", ",", "batch", ")", ":", "\n", "            ", "count", "+=", "1", "\n", "jobs", "=", "[", "]", "\n", "for", "image_path", "in", "chunk", ":", "jobs", ".", "append", "(", "mp", ".", "Process", "(", "target", "=", "DRDataset", ".", "convert_image", ",", "args", "=", "(", "config", ",", "image_path", ")", ")", ")", "\n", "for", "j", "in", "jobs", ":", "j", ".", "start", "(", ")", "\n", "for", "j", "in", "jobs", ":", "j", ".", "join", "(", ")", "\n", "if", "(", "count", "+", "1", ")", "%", "100", "==", "0", ":", "print", "(", "'Processed {} chunks of {} images...'", ".", "format", "(", "count", ",", "batch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.create_h5f_dataset": [[246, 259], ["data.keys", "hdf_path.format", "h5py.File", "h5py.File.create_dataset", "h5py.File.create_dataset", "range", "h5py.File.close", "PIL.Image.open().resize().convert", "numpy.array().reshape", "len", "len", "PIL.Image.open().resize", "numpy.array", "PIL.Image.open"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "create_h5f_dataset", "(", "data", ":", "dict", ",", "hdf_path", ",", "split", ")", ":", "\n", "        ", "for", "task", "in", "data", ".", "keys", "(", ")", ":", "\n", "            ", "X", ",", "Y", "=", "data", "[", "task", "]", "\n", "task_hdf_path", "=", "hdf_path", ".", "format", "(", "task", ",", "split", ")", "\n", "h5f", "=", "h5py", ".", "File", "(", "task_hdf_path", ",", "'w'", ")", "\n", "h5f", ".", "create_dataset", "(", "'x'", ",", "shape", "=", "(", "len", "(", "X", ")", ",", "3", ",", "256", ",", "256", ")", ",", "dtype", "=", "\"float32\"", ")", "\n", "h5f", ".", "create_dataset", "(", "'y'", ",", "shape", "=", "(", "len", "(", "X", ")", ",", ")", ",", "dtype", "=", "\"int32\"", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "X", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "img", "=", "Image", ".", "open", "(", "X", "[", "i", "]", ")", ".", "resize", "(", "(", "256", ",", "256", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "h5f", "[", "'x'", "]", "[", "i", "]", "=", "np", ".", "array", "(", "img", ")", ".", "reshape", "(", "(", "3", ",", "256", ",", "256", ")", ")", "\n", "h5f", "[", "'y'", "]", "[", "i", "]", "=", "Y", "[", "i", "]", "\n", "", "h5f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.split_dataset": [[260, 321], ["numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.RandomState", "numpy.random.RandomState.shuffle", "int", "int", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "print", "print", "print", "open", "pickle.load", "os.path.exists", "os.path.exists", "range", "range", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "split_dataset", "(", "root_dir", ",", "pickle_meta", ",", "seed", "=", "0", ")", ":", "\n", "        ", "with", "open", "(", "pickle_meta", ",", "mode", "=", "'rb'", ")", "as", "f", ":", "\n", "            ", "X_left", ",", "X_right", ",", "y_left", ",", "y_right", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "X_left", "=", "[", "(", "\"%s/%s.jpeg\"", "%", "(", "root_dir", ",", "elem", ")", ")", "for", "elem", "in", "X_left", "]", "\n", "X_right", "=", "[", "(", "\"%s/%s.jpeg\"", "%", "(", "root_dir", ",", "elem", ")", ")", "for", "elem", "in", "X_right", "]", "\n", "\n", "X_left", "=", "np", ".", "asarray", "(", "X_left", ")", "\n", "X_right", "=", "np", ".", "asarray", "(", "X_right", ")", "\n", "y_left", "=", "np", ".", "asarray", "(", "y_left", ",", "dtype", "=", "\"int32\"", ")", "\n", "y_right", "=", "np", ".", "asarray", "(", "y_right", ",", "dtype", "=", "\"int32\"", ")", "\n", "\n", "existing_idxs", "=", "[", "os", ".", "path", ".", "exists", "(", "X_left", "[", "i", "]", ")", "and", "os", ".", "path", ".", "exists", "(", "X_right", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "X_left", ")", ")", "]", "\n", "X_left", "=", "X_left", "[", "existing_idxs", "]", "\n", "X_right", "=", "X_right", "[", "existing_idxs", "]", "\n", "y_left", "=", "y_left", "[", "existing_idxs", "]", "\n", "y_right", "=", "y_right", "[", "existing_idxs", "]", "\n", "\n", "rnd", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "idxs", "=", "[", "x", "for", "x", "in", "range", "(", "len", "(", "X_left", ")", ")", "]", "\n", "rnd", ".", "shuffle", "(", "idxs", ")", "\n", "\n", "test_start", "=", "int", "(", "0.8", "*", "X_left", ".", "shape", "[", "0", "]", ")", "\n", "valid_start", "=", "int", "(", "0.9", "*", "X_left", ".", "shape", "[", "0", "]", ")", "\n", "\n", "X_train_left", "=", "X_left", "[", "idxs", "]", "[", "0", ":", "test_start", "]", "\n", "X_train_right", "=", "X_right", "[", "idxs", "]", "[", "0", ":", "test_start", "]", "\n", "\n", "y_train_left", "=", "y_left", "[", "idxs", "]", "[", "0", ":", "test_start", "]", "\n", "y_train_right", "=", "y_right", "[", "idxs", "]", "[", "0", ":", "test_start", "]", "\n", "\n", "X_valid_left", "=", "X_left", "[", "idxs", "]", "[", "valid_start", ":", "]", "\n", "X_valid_right", "=", "X_right", "[", "idxs", "]", "[", "valid_start", ":", "]", "\n", "\n", "y_valid_left", "=", "y_left", "[", "idxs", "]", "[", "valid_start", ":", "]", "\n", "y_valid_right", "=", "y_right", "[", "idxs", "]", "[", "valid_start", ":", "]", "\n", "\n", "X_test_left", "=", "X_left", "[", "idxs", "]", "[", "test_start", ":", "valid_start", "]", "\n", "X_test_right", "=", "X_right", "[", "idxs", "]", "[", "test_start", ":", "valid_start", "]", "\n", "\n", "y_test_left", "=", "y_left", "[", "idxs", "]", "[", "test_start", ":", "valid_start", "]", "\n", "y_test_right", "=", "y_right", "[", "idxs", "]", "[", "test_start", ":", "valid_start", "]", "\n", "\n", "# ok, fix now", "\n", "X_train", "=", "np", ".", "hstack", "(", "(", "X_train_left", ",", "X_train_right", ")", ")", "\n", "X_valid", "=", "np", ".", "hstack", "(", "(", "X_valid_left", ",", "X_valid_right", ")", ")", "\n", "X_test", "=", "np", ".", "hstack", "(", "(", "X_test_left", ",", "X_test_right", ")", ")", "\n", "\n", "y_train", "=", "np", ".", "hstack", "(", "(", "y_train_left", ",", "y_train_right", ")", ")", "\n", "y_valid", "=", "np", ".", "hstack", "(", "(", "y_valid_left", ",", "y_valid_right", ")", ")", "\n", "y_test", "=", "np", ".", "hstack", "(", "(", "y_test_left", ",", "y_test_right", ")", ")", "\n", "\n", "print", "(", "'size(X_train)={}'", ".", "format", "(", "len", "(", "X_train", ")", ")", ")", "\n", "print", "(", "'size(X_test)={}'", ".", "format", "(", "len", "(", "X_test", ")", ")", ")", "\n", "print", "(", "'size(X_val)={}'", ".", "format", "(", "len", "(", "X_valid", ")", ")", ")", "\n", "\n", "return", "{", "\n", "'train'", ":", "(", "X_train", ",", "y_train", ")", ",", "\n", "'test'", ":", "(", "X_test", ",", "y_test", ")", ",", "\n", "'val'", ":", "(", "X_valid", ",", "y_valid", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.__init__": [[325, 328], ["dataset.OrdinalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "self", ".", "X", ",", "self", ".", "Y", "=", "data_splits", "[", "task", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.split_dataset": [[329, 348], ["numpy.genfromtxt", "numpy.expand_dims", "Y.astype.astype.astype", "int", "Y.astype.astype.astype", "X.astype.astype.astype", "sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "print", "print", "print", "print", "numpy.max", "len", "len", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_dataset", "(", "csv_path", ",", "seed", "=", "0", ")", ":", "\n", "        ", "data", "=", "np", ".", "genfromtxt", "(", "csv_path", ",", "delimiter", "=", "','", ",", "skip_header", "=", "1", ")", "\n", "X", "=", "data", "[", ":", ",", ":", "10", "]", "\n", "Y", "=", "np", ".", "expand_dims", "(", "data", "[", ":", ",", "10", "]", ",", "axis", "=", "1", ")", "\n", "Y", "=", "Y", ".", "astype", "(", "'int'", ")", "\n", "num_classes", "=", "int", "(", "np", ".", "max", "(", "Y", "[", ":", ",", "0", "]", ")", "+", "1", ")", "\n", "Y", "=", "Y", ".", "astype", "(", "'float32'", ")", "\n", "X", "=", "X", ".", "astype", "(", "'float32'", ")", "\n", "X_train", ",", "X_test", ",", "Y_train", ",", "Y_test", "=", "train_test_split", "(", "X", ",", "Y", ",", "test_size", "=", "0.2", ",", "random_state", "=", "seed", ")", "\n", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_test_split", "(", "X_train", ",", "Y_train", ",", "test_size", "=", "0.15", ",", "random_state", "=", "seed", ")", "\n", "print", "(", "'size(X_train)={}'", ".", "format", "(", "len", "(", "X_train", ")", ")", ")", "\n", "print", "(", "'size(X_test)={}'", ".", "format", "(", "len", "(", "X_test", ")", ")", ")", "\n", "print", "(", "'size(X_val)={}'", ".", "format", "(", "len", "(", "X_val", ")", ")", ")", "\n", "print", "(", "'num of classes: '", ",", "num_classes", ")", "\n", "return", "{", "\n", "'train'", ":", "(", "X_train", ",", "Y_train", ")", ",", "\n", "'test'", ":", "(", "X_test", ",", "Y_test", ")", ",", "\n", "'val'", ":", "(", "X_val", ",", "Y_val", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.__len__": [[350, 352], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.__getitem__": [[353, 357], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "{", "\n", "'image'", ":", "self", ".", "X", "[", "idx", "]", ",", "\n", "'label'", ":", "self", ".", "Y", "[", "idx", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.__init__": [[361, 364], ["dataset.OrdinalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "transform", ",", "task", ",", "data_splits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "transform", ",", "task", ",", "data_splits", ")", "\n", "self", ".", "dataset", "=", "data_splits", "[", "task", "]", "\n", "# self.dataset.montage(length=3, save_folder='.')", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.get_labels": [[366, 368], ["None"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dataset", ".", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.__getitem__": [[369, 374], ["dataset.MedMNISTOrdinal.dataset.__getitem__", "y.squeeze"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x", ",", "y", "=", "self", ".", "dataset", ".", "__getitem__", "(", "idx", ")", "\n", "return", "{", "\n", "'image'", ":", "x", ",", "\n", "'label'", ":", "y", ".", "squeeze", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.__len__": [[376, 378], ["dataset.MedMNISTOrdinal.dataset.__len__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.__len__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dataset", ".", "__len__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.DRModule.__init__": [[10, 37], ["modules.BaseModule.__init__", "torchvision.models.resnet18", "dataset_based_modules.DRModule.save_hyperparameters", "range", "DRDataset.split_dataset", "torchvision.RandomHorizontalFlip", "torchvision.RandomVerticalFlip", "torchvision.RandomAffine", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.CenterCrop", "torchvision.ToTensor", "DRDataset.split_dataset", "DRDataset.create_h5f_dataset"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.split_dataset", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.split_dataset", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.DRDataset.create_h5f_dataset"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "backbone_model", "=", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "transforms_list", "=", "{", "\n", "'train'", ":", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomVerticalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "359.", ",", "translate", "=", "(", "0.05", ",", "0.05", ")", ",", "scale", "=", "(", "0.98", ",", "1.02", ")", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'val'", ":", "[", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'test'", ":", "[", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "}", "\n", "self", ".", "dataset_class", "=", "DRDataset", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "\n", "if", "self", ".", "config", ".", "create_h5f_dataset", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "config", ".", "data_splits", ")", ":", "\n", "                ", "dr_splits", "=", "DRDataset", ".", "split_dataset", "(", "self", ".", "config", ".", "preprocessed_images_dir", ",", "self", ".", "config", ".", "meta_data_pickle", ",", "seed", "=", "i", ")", "\n", "if", "self", ".", "config", ".", "use_h5f_dataset", ":", "DRDataset", ".", "create_h5f_dataset", "(", "dr_splits", ",", "self", ".", "config", ".", "h5f_dataset_path", ",", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "data_splits", "=", "DRDataset", ".", "split_dataset", "(", "self", ".", "config", ".", "preprocessed_images_dir", ",", "self", ".", "config", ".", "meta_data_pickle", ",", "seed", "=", "self", ".", "config", ".", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.HCIModule.__init__": [[40, 63], ["modules.BaseModule.__init__", "torchvision.models.resnet18", "dataset_based_modules.HCIModule.save_hyperparameters", "HCIDataset.split_dataset", "torchvision.RandomAffine", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomVerticalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.split_dataset"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "backbone_model", "=", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "transforms_list", "=", "{", "\n", "'train'", ":", "[", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "180.", ",", "translate", "=", "(", "0.2", ",", "0.2", ")", ",", "scale", "=", "(", "0.75", ",", "1.2", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "256", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomVerticalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", ",", "\n", "'val'", ":", "[", "\n", "transforms", ".", "RandomCrop", "(", "256", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", ",", "\n", "'test'", ":", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", "\n", "}", "\n", "self", ".", "dataset_class", "=", "HCIDataset", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "self", ".", "data_splits", "=", "HCIDataset", ".", "split_dataset", "(", "self", ".", "config", ".", "data_images", ",", "self", ".", "config", ".", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.AdienceModule.__init__": [[66, 87], ["modules.BaseModule.__init__", "torchvision.models.resnet101", "dataset_based_modules.AdienceModule.save_hyperparameters", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "backbone_model", "=", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "transforms_list", "=", "{", "\n", "'train'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'val'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'test'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "}", "\n", "self", ".", "dataset_class", "=", "AdienceDataset", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.FGNETModule.__init__": [[90, 112], ["modules.BaseModule.__init__", "torchvision.models.resnet18", "dataset_based_modules.FGNETModule.save_hyperparameters", "FGNETDataset.split_dataset", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__", "home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.AbaloneDataset.split_dataset"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "backbone_model", "=", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "transforms_list", "=", "{", "\n", "'train'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'val'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ",", "\n", "'test'", ":", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "}", "\n", "self", ".", "dataset_class", "=", "FGNETDataset", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "self", ".", "data_splits", "=", "FGNETDataset", ".", "split_dataset", "(", "self", ".", "config", ".", "root_dir", ",", "self", ".", "config", ".", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.TwoLayerNet.__init__": [[115, 121], ["super().__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", "=", "3", "*", "784", ",", "out_dim", "=", "128", ",", "hidden_dim", "=", "32", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "out_dim", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.TwoLayerNet.forward": [[123, 125], ["dataset_based_modules.TwoLayerNet.layers", "x.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layers", "(", "x", ".", "reshape", "(", "-", "1", ",", "3", "*", "28", "*", "28", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.dataset_based_modules.MedMNISTModule.__init__": [[128, 172], ["modules.BaseModule.__init__", "torchvision.models.resnet18", "dataset_based_modules.MedMNISTModule.save_hyperparameters", "torchvision.RandomHorizontalFlip", "torchvision.RandomVerticalFlip", "torchvision.RandomAffine", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "getattr", "getattr", "getattr", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "# self.backbone_model = TwoLayerNet()", "\n", "self", ".", "backbone_model", "=", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "transforms_list", "=", "{", "\n", "'train'", ":", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomVerticalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "180", ",", "translate", "=", "(", "0.05", ",", "0.05", ")", ",", "scale", "=", "(", "0.98", ",", "1.02", ")", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", "]", ",", "std", "=", "[", "0.5", "]", ")", "\n", "]", ",", "\n", "'val'", ":", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", "]", ",", "std", "=", "[", "0.5", "]", ")", "\n", "]", ",", "\n", "'test'", ":", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", "]", ",", "std", "=", "[", "0.5", "]", ")", "\n", "]", "\n", "}", "\n", "self", ".", "dataset_class", "=", "MedMNISTOrdinal", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "self", ".", "data_splits", "=", "{", "\n", "'train'", ":", "getattr", "(", "dataset", ",", "config", ".", "medmnist_type", ")", "(", "\n", "split", "=", "'train'", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "transforms_list", "[", "'train'", "]", ")", ",", "\n", "download", "=", "True", ",", "\n", "as_rgb", "=", "True", ",", "\n", "root", "=", "config", ".", "root_dir", ")", ",", "\n", "\n", "'val'", ":", "getattr", "(", "dataset", ",", "config", ".", "medmnist_type", ")", "(", "\n", "split", "=", "'val'", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "transforms_list", "[", "'val'", "]", ")", ",", "\n", "download", "=", "True", ",", "\n", "as_rgb", "=", "True", ",", "\n", "root", "=", "config", ".", "root_dir", ")", ",", "\n", "'test'", ":", "getattr", "(", "dataset", ",", "config", ".", "medmnist_type", ")", "(", "\n", "split", "=", "'test'", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "transforms_list", "[", "'test'", "]", ")", ",", "\n", "download", "=", "True", ",", "\n", "as_rgb", "=", "True", ",", "\n", "root", "=", "config", ".", "root_dir", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.UNIORD.__init__": [[11, 16], ["modules.BaseModule.__init__", "torch.ReLU", "modules.UnimodalNormal", "modules.OTLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "UnimodalNormal", "(", "config", ".", "num_classes", ",", "config", ".", "ordinal_input_dim", ",", "config", ".", "dist_func", ",", "config", ".", "min_sigma", ",", "config", ".", "bins_limit", ")", "\n", "self", ".", "loss_func", "=", "OTLoss", "(", "self", ".", "hparams", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.UNIORDBinomial.__init__": [[23, 28], ["modules.BaseModule.__init__", "torch.ReLU", "modules.UnimodalBinomial", "modules.OTLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ",", "ordinal_input_dim", "=", "1000", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "UnimodalBinomial", "(", "self", ".", "hparams", ".", "num_classes", ",", "ordinal_input_dim", ")", "\n", "self", ".", "loss_func", "=", "OTLoss", "(", "self", ".", "hparams", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.UNIORDSoft.__init__": [[31, 34], ["models_zoo.UNIORD.__init__", "modules.OTLossSoft"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "ordinal_input_dim", "=", "1000", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ",", "ordinal_input_dim", ")", "\n", "self", ".", "loss_func", "=", "OTLossSoft", "(", "self", ".", "hparams", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.UNIORDBetaSoft.__init__": [[37, 41], ["models_zoo.UNIORD.__init__", "modules.UnimodalBeta", "modules.OTLossSoft"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "output_layers", "=", "UnimodalBeta", "(", "self", ".", "hparams", ".", "num_classes", ",", "1000", ")", "\n", "self", ".", "loss_func", "=", "OTLossSoft", "(", "self", ".", "hparams", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.SORD.__init__": [[48, 54], ["modules.BaseModule.__init__", "torch.ReLU", "torch.Linear", "modules.SORDLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "config", ".", "output_logits", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "nn", ".", "Linear", "(", "1000", ",", "config", ".", "num_classes", ")", "\n", "self", ".", "loss_func", "=", "SORDLoss", "(", "config", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.Liu.__init__": [[61, 67], ["modules.BaseModule.__init__", "torch.ReLU", "torch.Linear", "modules.UnimodalUniformOTLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "config", ".", "output_logits", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "nn", ".", "Linear", "(", "1000", ",", "config", ".", "num_classes", ")", "\n", "self", ".", "loss_func", "=", "UnimodalUniformOTLoss", "(", "config", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.DLDL.__init__": [[74, 80], ["modules.BaseModule.__init__", "torch.ReLU", "torch.Linear", "modules.DLDLLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "config", ".", "output_logits", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "nn", ".", "Linear", "(", "1000", ",", "config", ".", "num_classes", ")", "\n", "self", ".", "loss_func", "=", "DLDLLoss", "(", "config", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.models_zoo.BeckhamBinomial.__init__": [[88, 93], ["modules.BaseModule.__init__", "torch.ReLU", "modules.UnimodalBinomial", "modules.OTLoss"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "config", ",", "ordinal_input_dim", "=", "1000", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "transition_layer", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "output_layers", "=", "UnimodalBinomial", "(", "self", ".", "hparams", ".", "num_classes", ",", "ordinal_input_dim", ")", "\n", "self", ".", "loss_func", "=", "OTLoss", "(", "self", ".", "hparams", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.ExactAccuracy.__init__": [[8, 13], ["torchmetrics.Metric.__init__", "metrics.ExactAccuracy.add_state", "metrics.ExactAccuracy.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compute_on_step", "=", "True", ",", "dist_sync_on_step", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "compute_on_step", ",", "dist_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"correct\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.ExactAccuracy._input_format": [[14, 16], ["torch.argmax", "torch.softmax"], "methods", ["None"], ["", "def", "_input_format", "(", "self", ",", "preds", ")", ":", "\n", "        ", "return", "torch", ".", "argmax", "(", "torch", ".", "softmax", "(", "preds", ",", "dim", "=", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.ExactAccuracy.update": [[17, 22], ["metrics.ExactAccuracy.to", "metrics.ExactAccuracy._input_format", "torch.sum", "target.numel"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE._input_format"], ["", "def", "update", "(", "self", ",", "preds", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "to", "(", "preds", ".", "device", ")", "\n", "preds", "=", "self", ".", "_input_format", "(", "preds", ")", "\n", "self", ".", "correct", "+=", "torch", ".", "sum", "(", "preds", "==", "target", ")", "\n", "self", ".", "total", "+=", "target", ".", "numel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.ExactAccuracy.compute": [[23, 25], ["metrics.ExactAccuracy.correct.float"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "correct", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.OneOffAccuracy.__init__": [[28, 33], ["torchmetrics.Metric.__init__", "metrics.OneOffAccuracy.add_state", "metrics.OneOffAccuracy.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compute_on_step", "=", "True", ",", "dist_sync_on_step", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "compute_on_step", ",", "dist_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"correct\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.OneOffAccuracy._input_format": [[34, 36], ["torch.argmax", "torch.softmax"], "methods", ["None"], ["", "def", "_input_format", "(", "self", ",", "preds", ")", ":", "\n", "        ", "return", "torch", ".", "argmax", "(", "torch", ".", "softmax", "(", "preds", ",", "dim", "=", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.OneOffAccuracy.update": [[37, 42], ["metrics.OneOffAccuracy.to", "metrics.OneOffAccuracy._input_format", "target.numel", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE._input_format"], ["", "def", "update", "(", "self", ",", "preds", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "to", "(", "preds", ".", "device", ")", "\n", "preds", "=", "self", ".", "_input_format", "(", "preds", ")", "\n", "self", ".", "correct", "+=", "torch", ".", "sum", "(", "preds", "==", "target", ")", "+", "torch", ".", "sum", "(", "preds", "==", "target", "-", "1", ")", "+", "torch", ".", "sum", "(", "preds", "==", "target", "+", "1", ")", "\n", "self", ".", "total", "+=", "target", ".", "numel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.OneOffAccuracy.compute": [[43, 45], ["metrics.OneOffAccuracy.correct.float"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "correct", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE.__init__": [[48, 52], ["torchmetrics.Metric.__init__", "metrics.MAE.add_state", "metrics.MAE.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compute_on_step", "=", "True", ",", "dist_sync_on_step", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "compute_on_step", ",", "dist_sync_on_step", ")", "\n", "self", ".", "add_state", "(", "\"loss_sum\"", ",", "default", "=", "torch", ".", "tensor", "(", "0.", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE._input_format": [[53, 55], ["torch.argmax", "torch.softmax"], "methods", ["None"], ["", "def", "_input_format", "(", "self", ",", "preds", ")", ":", "\n", "        ", "return", "torch", ".", "argmax", "(", "torch", ".", "softmax", "(", "preds", ",", "dim", "=", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE.update": [[56, 61], ["metrics.MAE.to", "metrics.MAE._input_format", "torch.nn.functional.l1_loss", "target.numel", "metrics.MAE.float", "target.float"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE._input_format"], ["", "def", "update", "(", "self", ",", "preds", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "to", "(", "preds", ".", "device", ")", "\n", "preds", "=", "self", ".", "_input_format", "(", "preds", ")", "\n", "self", ".", "loss_sum", "+=", "torch", ".", "nn", ".", "functional", ".", "l1_loss", "(", "preds", ".", "float", "(", ")", ",", "target", ".", "float", "(", ")", ",", "reduction", "=", "'sum'", ")", "\n", "self", ".", "total", "+=", "target", ".", "numel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.MAE.compute": [[62, 64], ["metrics.MAE.loss_sum.float"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "loss_sum", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio.__init__": [[67, 74], ["torchmetrics.Metric.__init__", "metrics.EntropyRatio.add_state", "metrics.EntropyRatio.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compute_on_step", "=", "False", ",", "dist_sync_on_step", "=", "False", ",", "output_logits", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "compute_on_step", ",", "dist_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"entropy_correct\"", ",", "default", "=", "torch", ".", "tensor", "(", "0.", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"entropy_incorrect\"", ",", "default", "=", "torch", ".", "tensor", "(", "0.", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n", "self", ".", "output_logits", "=", "output_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio._entropy": [[75, 78], ["torch.distributions.Categorical().entropy().mean", "pred.nelement", "torch.tensor", "torch.distributions.Categorical().entropy", "torch.distributions.Categorical"], "methods", ["None"], ["", "def", "_entropy", "(", "self", ",", "pred", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "pred", ".", "nelement", "(", ")", "==", "0", ":", "return", "torch", ".", "tensor", "(", "0", ",", "device", "=", "pred", ".", "device", ")", "\n", "return", "Categorical", "(", "probs", "=", "pred", ")", ".", "entropy", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio.update": [[79, 85], ["metrics.EntropyRatio.to", "torch.argmax", "metrics.EntropyRatio._entropy", "metrics.EntropyRatio._entropy", "torch.softmax"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio._entropy", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio._entropy"], ["", "def", "update", "(", "self", ",", "preds", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "to", "(", "preds", ".", "device", ")", "\n", "if", "self", ".", "output_logits", ":", "preds", "=", "torch", ".", "softmax", "(", "preds", ",", "-", "1", ")", "\n", "preds_classes", "=", "torch", ".", "argmax", "(", "preds", ",", "dim", "=", "-", "1", ")", "\n", "self", ".", "entropy_correct", "+=", "self", ".", "_entropy", "(", "preds", "[", "preds_classes", "==", "target", "]", ")", "\n", "self", ".", "entropy_incorrect", "+=", "self", ".", "_entropy", "(", "preds", "[", "preds_classes", "!=", "target", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.EntropyRatio.compute": [[86, 88], ["None"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "entropy_incorrect", "/", "self", ".", "entropy_correct", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.__init__": [[91, 98], ["torchmetrics.Metric.__init__", "metrics.Unimodality.add_state", "metrics.Unimodality.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compute_on_step", "=", "True", ",", "dist_sync_on_step", "=", "False", ",", "output_logits", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "compute_on_step", ",", "dist_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"unimodal\"", ",", "default", "=", "torch", ".", "tensor", "(", "0.", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n", "self", ".", "output_logits", "=", "output_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality._is_unimodal": [[99, 108], ["pred.cpu().numpy", "numpy.argmax", "range", "range", "pred.cpu", "len"], "methods", ["None"], ["", "def", "_is_unimodal", "(", "self", ",", "pred", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "prob", "=", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "res", "=", "True", "\n", "argmax", "=", "np", ".", "argmax", "(", "prob", ")", "\n", "for", "i", "in", "range", "(", "argmax", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "res", "=", "res", "&", "(", "prob", "[", "i", "]", ">=", "prob", "[", "i", "-", "1", "]", ")", "\n", "", "for", "i", "in", "range", "(", "argmax", ",", "len", "(", "prob", ")", "-", "1", ")", ":", "\n", "            ", "res", "=", "res", "&", "(", "prob", "[", "i", "]", ">=", "prob", "[", "i", "+", "1", "]", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.update": [[109, 115], ["metrics.Unimodality.to", "range", "torch.softmax.size", "torch.softmax", "torch.softmax.size", "torch.tensor", "metrics.Unimodality._is_unimodal"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality._is_unimodal"], ["", "def", "update", "(", "self", ",", "preds", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "to", "(", "preds", ".", "device", ")", "\n", "if", "self", ".", "output_logits", ":", "preds", "=", "torch", ".", "softmax", "(", "preds", ",", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "self", ".", "unimodal", "+=", "torch", ".", "tensor", "(", "self", ".", "_is_unimodal", "(", "preds", "[", "i", "]", ")", ",", "device", "=", "preds", ".", "device", ")", "\n", "", "self", ".", "total", "+=", "preds", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute": [[116, 118], ["metrics.Unimodality.unimodal.float"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "unimodal", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.__init__": [[11, 37], ["pytorch_lightning.LightningModule.__init__", "vars().items", "modules.metrics.EntropyRatio", "modules.metrics.MAE", "modules.metrics.ExactAccuracy", "modules.metrics.OneOffAccuracy", "modules.metrics.EntropyRatio", "modules.metrics.Unimodality", "torchmetrics.CohenKappa", "torchmetrics.SpearmanCorrcoef", "vars", "k.startswith", "base_ptl_module.BaseModule.hparams.__setattr__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "transforms", "=", "None", "\n", "self", ".", "backbone_model", "=", "None", "\n", "self", ".", "transition_layer", "=", "None", "\n", "self", ".", "weights", "=", "None", "\n", "self", ".", "output_layers", "=", "None", "\n", "self", ".", "loss_func", "=", "None", "\n", "self", ".", "data_splits", "=", "None", "\n", "\n", "for", "k", ",", "v", "in", "vars", "(", "config", ")", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "k", ".", "startswith", "(", "'_'", ")", ":", "self", ".", "hparams", ".", "__setattr__", "(", "k", ",", "v", ")", "\n", "\n", "", "self", ".", "val_entropy_ratio", "=", "EntropyRatio", "(", "output_logits", "=", "config", ".", "output_logits", ")", "\n", "\n", "self", ".", "test_mae", "=", "MAE", "(", ")", "\n", "self", ".", "test_accuracy", "=", "ExactAccuracy", "(", "config", ".", "num_classes", ")", "\n", "self", ".", "test_one_off_accuracy", "=", "OneOffAccuracy", "(", ")", "\n", "self", ".", "test_entropy_ratio", "=", "EntropyRatio", "(", "output_logits", "=", "config", ".", "output_logits", ")", "\n", "self", ".", "test_unimodality", "=", "Unimodality", "(", "output_logits", "=", "config", ".", "output_logits", ")", "\n", "\n", "self", ".", "test_kappa", "=", "CohenKappa", "(", "num_classes", "=", "config", ".", "num_classes", ",", "weights", "=", "'quadratic'", ")", "\n", "self", ".", "test_spearman", "=", "SpearmanCorrcoef", "(", ")", "\n", "\n", "self", ".", "test_metrics", "=", "{", "}", "\n", "self", ".", "summary_writer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.forward": [[38, 43], ["base_ptl_module.BaseModule.backbone_model", "base_ptl_module.BaseModule.transition_layer", "base_ptl_module.BaseModule.output_layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "backbone_model", "(", "x", ")", "\n", "x", "=", "self", ".", "transition_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layers", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.build_data_loader": [[44, 72], ["base_ptl_module.BaseModule.dataset_class", "torch.utils.data.DataLoader", "torchvision.Compose", "base_ptl_module.BaseModule.get_labels", "numpy.sum", "torch.tensor().float", "torch.ones().float", "torch.utils.data.DataLoader", "numpy.array", "len", "torch.tensor", "torch.ones", "numpy.sum", "range"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.dataset.dataset.MedMNISTOrdinal.get_labels"], ["", "def", "build_data_loader", "(", "self", ",", "task", ")", ":", "\n", "        ", "if", "task", "==", "'train'", ":", "\n", "            ", "shuffle", "=", "True", "\n", "batch_size", "=", "self", ".", "config", ".", "train_batch_size", "\n", "workers", "=", "self", ".", "config", ".", "train_workers", "\n", "", "elif", "task", "==", "'test'", ":", "\n", "            ", "shuffle", "=", "False", "\n", "batch_size", "=", "self", ".", "config", ".", "test_batch_size", "\n", "workers", "=", "self", ".", "config", ".", "test_workers", "\n", "", "elif", "task", "==", "'val'", ":", "\n", "            ", "shuffle", "=", "False", "\n", "batch_size", "=", "self", ".", "config", ".", "val_batch_size", "\n", "workers", "=", "self", ".", "config", ".", "val_workers", "\n", "", "transformed_dataset", "=", "self", ".", "dataset_class", "(", "self", ".", "config", ",", "transforms", ".", "Compose", "(", "self", ".", "transforms_list", "[", "task", "]", ")", ",", "task", ",", "self", ".", "data_splits", ")", "\n", "sampler", "=", "None", "\n", "if", "task", "==", "'train'", ":", "\n", "            ", "if", "not", "self", ".", "config", ".", "not_weigted", ":", "\n", "                ", "labels", "=", "transformed_dataset", ".", "get_labels", "(", ")", "\n", "class_props", "=", "np", ".", "array", "(", "[", "np", ".", "sum", "(", "labels", "==", "i", ")", "for", "i", "in", "range", "(", "self", ".", "config", ".", "num_classes", ")", "]", ")", "/", "len", "(", "labels", ")", "\n", "class_weights", "=", "1", "/", "class_props", "\n", "class_weights", "/=", "np", ".", "sum", "(", "class_weights", ")", "\n", "class_weights", "=", "torch", ".", "tensor", "(", "class_weights", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "                ", "class_weights", "=", "torch", ".", "ones", "(", "self", ".", "config", ".", "num_classes", ")", ".", "float", "(", ")", "\n", "# sampler = torch.utils.data.sampler.WeightedRandomSampler(class_weights, len(class_weights))", "\n", "", "return", "DataLoader", "(", "transformed_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "num_workers", "=", "workers", ",", "drop_last", "=", "True", ")", ",", "class_weights", "\n", "\n", "", "return", "DataLoader", "(", "transformed_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "sampler", "=", "sampler", ",", "num_workers", "=", "workers", ",", "drop_last", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.train_dataloader": [[73, 76], ["base_ptl_module.BaseModule.build_data_loader"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.build_data_loader"], ["", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "loader", ",", "self", ".", "weights", "=", "self", ".", "build_data_loader", "(", "'train'", ")", "\n", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.val_dataloader": [[77, 79], ["base_ptl_module.BaseModule.build_data_loader"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.build_data_loader"], ["", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "build_data_loader", "(", "'val'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.test_dataloader": [[80, 82], ["base_ptl_module.BaseModule.build_data_loader"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.build_data_loader"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "build_data_loader", "(", "'test'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.training_step": [[83, 89], ["base_ptl_module.BaseModule.", "base_ptl_module.BaseModule.loss_func", "base_ptl_module.BaseModule.log_dict", "batch[].float"], "methods", ["None"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "x", ",", "y", "=", "batch", "[", "'image'", "]", ",", "batch", "[", "'label'", "]", ".", "float", "(", ")", "\n", "y_hat", "=", "self", "(", "x", ")", "\n", "loss", "=", "self", ".", "loss_func", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "log_dict", "(", "{", "'train_loss'", ":", "loss", "}", ",", "on_step", "=", "True", ",", "on_epoch", "=", "True", ",", "prog_bar", "=", "True", ",", "logger", "=", "True", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.log_image_to_tb": [[90, 98], ["enumerate", "base_ptl_module.BaseModule.summary_writer.flush", "base_ptl_module.BaseModule.summary_writer.add_image"], "methods", ["None"], ["", "def", "log_image_to_tb", "(", "self", ",", "images", ",", "true_labels", ",", "pred_labels", ")", ":", "\n", "# grid = torchvision.utils.make_grid(images)", "\n", "        ", "for", "i", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "            ", "true_label", "=", "true_labels", "[", "i", "]", "\n", "pred_label", "=", "pred_labels", "[", "i", "]", "\n", "self", ".", "summary_writer", ".", "add_image", "(", "f'pred: {pred_label} label: {true_label}'", ",", "image", ",", "self", ".", "current_epoch", ")", "\n", "# writer.close()", "\n", "", "self", ".", "summary_writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.validation_step": [[99, 123], ["base_ptl_module.BaseModule.", "base_ptl_module.BaseModule.val_entropy_ratio", "base_ptl_module.BaseModule.log_dict", "batch[].float", "range", "int", "torch.cat", "torch.cat", "base_ptl_module.BaseModule.loss_func", "modules.metrics.MAE", "modules.metrics.ExactAccuracy", "modules.metrics.OneOffAccuracy", "modules.metrics.Unimodality", "torchmetrics.CohenKappa().to", "y.int", "torchmetrics.SpearmanCorrcoef().to", "base_ptl_module.BaseModule.argmax().float", "y.float", "torchmetrics.CohenKappa", "torchmetrics.SpearmanCorrcoef", "base_ptl_module.BaseModule.argmax"], "methods", ["None"], ["", "def", "validation_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "\n", "        ", "x", ",", "y", "=", "batch", "[", "'image'", "]", ",", "batch", "[", "'label'", "]", ".", "float", "(", ")", "\n", "\n", "if", "self", ".", "hparams", ".", "val_boost", "is", "not", "None", ":", "\n", "            ", "x_boosted", "=", "x", "\n", "y_boosted", "=", "y", "\n", "for", "i", "in", "range", "(", "int", "(", "self", ".", "hparams", ".", "val_boost", ")", ")", ":", "\n", "                ", "x_boosted", "=", "torch", ".", "cat", "(", "[", "x_boosted", ",", "x", "]", ",", "dim", "=", "0", ")", "\n", "y_boosted", "=", "torch", ".", "cat", "(", "[", "y_boosted", ",", "y", "]", ",", "dim", "=", "0", ")", "\n", "", "x", ",", "y", "=", "x_boosted", ",", "y_boosted", "\n", "\n", "", "y_hat", "=", "self", "(", "x", ")", "\n", "self", ".", "val_entropy_ratio", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "log_dict", "(", "{", "\n", "'val_loss'", ":", "self", ".", "loss_func", "(", "y_hat", ",", "y", ")", ",", "\n", "'val_mae'", ":", "MAE", "(", ")", "(", "y_hat", ",", "y", ")", ",", "\n", "'val_accuracy'", ":", "ExactAccuracy", "(", "self", ".", "config", ".", "num_classes", ")", "(", "y_hat", ",", "y", ")", ",", "\n", "'val_oneoff_accuracy'", ":", "OneOffAccuracy", "(", ")", "(", "y_hat", ",", "y", ")", ",", "\n", "'val_unimodality'", ":", "Unimodality", "(", "output_logits", "=", "self", ".", "config", ".", "output_logits", ")", "(", "y_hat", ")", ",", "\n", "'val_kappa'", ":", "CohenKappa", "(", "num_classes", "=", "self", ".", "config", ".", "num_classes", ",", "weights", "=", "'quadratic'", ")", ".", "to", "(", "y_hat", ".", "device", ")", "(", "y_hat", ",", "y", ".", "int", "(", ")", ")", ",", "\n", "'val_spearman'", ":", "SpearmanCorrcoef", "(", ")", ".", "to", "(", "y_hat", ".", "device", ")", "(", "y_hat", ".", "argmax", "(", "dim", "=", "1", ")", ".", "float", "(", ")", ",", "y", ".", "float", "(", ")", ")", ",", "\n", "\n", "}", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.validation_epoch_end": [[124, 128], ["base_ptl_module.BaseModule.log_dict", "base_ptl_module.BaseModule.val_entropy_ratio.compute"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute"], ["", "def", "validation_epoch_end", "(", "self", ",", "results", ")", ":", "\n", "        ", "self", ".", "log_dict", "(", "{", "\n", "'val_entropy_ratio'", ":", "self", ".", "val_entropy_ratio", ".", "compute", "(", ")", ",", "\n", "}", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.test_step": [[129, 147], ["base_ptl_module.BaseModule.", "base_ptl_module.BaseModule.test_entropy_ratio", "base_ptl_module.BaseModule.test_mae", "base_ptl_module.BaseModule.test_accuracy", "base_ptl_module.BaseModule.test_one_off_accuracy", "base_ptl_module.BaseModule.test_unimodality", "batch[].float", "torch.argmax", "base_ptl_module.BaseModule.log_image_to_tb", "base_ptl_module.BaseModule.test_kappa.to", "y.int", "base_ptl_module.BaseModule.test_spearman.to", "base_ptl_module.BaseModule.argmax().float", "y.float", "base_ptl_module.BaseModule.argmax"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.log_image_to_tb"], ["", "def", "test_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "x", ",", "y", "=", "batch", "[", "'image'", "]", ",", "batch", "[", "'label'", "]", ".", "float", "(", ")", "\n", "y_hat", "=", "self", "(", "x", ")", "\n", "\n", "if", "self", ".", "hparams", ".", "error_analysis", ":", "\n", "            ", "preds_classes", "=", "torch", ".", "argmax", "(", "y_hat", ",", "dim", "=", "-", "1", ")", "\n", "wrong_preds", "=", "x", "[", "preds_classes", "!=", "y", "]", "\n", "true_labels", "=", "y", "[", "preds_classes", "!=", "y", "]", "\n", "pred_labels", "=", "preds_classes", "[", "preds_classes", "!=", "y", "]", "\n", "self", ".", "log_image_to_tb", "(", "wrong_preds", ",", "true_labels", ",", "pred_labels", ")", "\n", "\n", "", "self", ".", "test_entropy_ratio", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "test_mae", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "test_accuracy", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "test_one_off_accuracy", "(", "y_hat", ",", "y", ")", "\n", "self", ".", "test_unimodality", "(", "y_hat", ")", "\n", "self", ".", "test_kappa", ".", "to", "(", "y_hat", ".", "device", ")", "(", "y_hat", ",", "y", ".", "int", "(", ")", ")", "\n", "self", ".", "test_spearman", ".", "to", "(", "y_hat", ".", "device", ")", "(", "y_hat", ".", "argmax", "(", "dim", "=", "1", ")", ".", "float", "(", ")", ",", "y", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.test_epoch_end": [[148, 159], ["base_ptl_module.BaseModule.log_dict", "base_ptl_module.BaseModule.test_mae.compute", "base_ptl_module.BaseModule.test_accuracy.compute", "base_ptl_module.BaseModule.test_one_off_accuracy.compute", "base_ptl_module.BaseModule.test_unimodality.compute", "base_ptl_module.BaseModule.test_entropy_ratio.compute", "base_ptl_module.BaseModule.test_kappa.compute", "base_ptl_module.BaseModule.test_spearman.compute"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute", "home.repos.pwc.inspect_result.jsvir_uniord.modules.metrics.Unimodality.compute"], ["", "def", "test_epoch_end", "(", "self", ",", "results", ")", ":", "\n", "        ", "self", ".", "test_metrics", "=", "{", "\n", "'test_mae'", ":", "self", ".", "test_mae", ".", "compute", "(", ")", ",", "\n", "'test_accuracy'", ":", "self", ".", "test_accuracy", ".", "compute", "(", ")", ",", "\n", "'test_oneoff_accuracy'", ":", "self", ".", "test_one_off_accuracy", ".", "compute", "(", ")", ",", "\n", "'test_unimodality'", ":", "self", ".", "test_unimodality", ".", "compute", "(", ")", ",", "\n", "'test_entropy_ratio'", ":", "self", ".", "test_entropy_ratio", ".", "compute", "(", ")", ",", "\n", "'test_kappa'", ":", "self", ".", "test_kappa", ".", "compute", "(", ")", ",", "\n", "'test_spearman'", ":", "self", ".", "test_spearman", ".", "compute", "(", ")", ",", "\n", "}", "\n", "self", ".", "log_dict", "(", "self", ".", "test_metrics", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.on_train_end": [[160, 163], ["base_ptl_module.BaseModule.summary_writer.close"], "methods", ["None"], ["", "def", "on_train_end", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "hparams", ".", "error_analysis", ":", "\n", "            ", "self", ".", "summary_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.base_ptl_module.BaseModule.configure_optimizers": [[164, 171], ["torch.optim.Adam", "base_ptl_module.BaseModule.parameters", "torch.optim.lr_scheduler.MultiStepLR", "int", "base_ptl_module.BaseModule.config.lr_sched.split"], "methods", ["None"], ["", "", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "lr", ",", "weight_decay", "=", "self", ".", "config", ".", "wd", ")", "\n", "scheduler", "=", "{", "\n", "'scheduler'", ":", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "gamma", "=", "self", ".", "config", ".", "gamma", ",", "milestones", "=", "[", "int", "(", "v", ")", "for", "v", "in", "self", ".", "config", ".", "lr_sched", ".", "split", "(", "','", ")", "]", ")", ",", "\n", "'interval'", ":", "'epoch'", ",", "\n", "'frequency'", ":", "1", "}", "\n", "return", "[", "optimizer", "]", ",", "[", "scheduler", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.distributions.Logistic": [[4, 8], ["Uniform", "TransformedDistribution", "torch.tensor", "torch.tensor", "AffineTransform", "SigmoidTransform"], "function", ["None"], ["def", "Logistic", "(", "a", ",", "b", ")", ":", "\n", "    ", "base_distribution", "=", "Uniform", "(", "torch", ".", "tensor", "(", "0", ",", "device", "=", "a", ".", "device", ")", ",", "torch", ".", "tensor", "(", "1", ",", "device", "=", "a", ".", "device", ")", ")", "\n", "transforms", "=", "[", "SigmoidTransform", "(", ")", ".", "inv", ",", "AffineTransform", "(", "loc", "=", "a", ",", "scale", "=", "b", ")", "]", "\n", "return", "TransformedDistribution", "(", "base_distribution", ",", "transforms", ")", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.__init__": [[10, 27], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter().requires_grad_", "torch.Parameter().requires_grad_", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Softplus", "torch.Softplus", "torch.Parameter", "torch.Parameter", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "input_dim", ",", "dist_func", ",", "min_sigma", ",", "bins_limit", ",", "learn_bin_limit", "=", "False", ")", ":", "\n", "        ", "super", "(", "UnimodalNormal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "dist_func", "=", "dist_func", "\n", "self", ".", "min_sigma", "=", "min_sigma", "\n", "self", ".", "learn_bin_limit", "=", "learn_bin_limit", "\n", "if", "learn_bin_limit", ":", "\n", "            ", "self", ".", "bins_limit", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ")", ")", ".", "requires_grad_", "(", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bins_limit", "=", "bins_limit", "\n", "", "self", ".", "mu_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_dim", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n", "self", ".", "sigma", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_dim", ",", "1", ")", ",", "\n", "nn", ".", "Softplus", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.calc_normal_output_probs": [[29, 41], ["torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "range", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sigmoid().clamp_min", "torch.sigmoid().clamp_min", "torch.sigmoid().clamp_min", "torch.sigmoid().clamp_min", "getattr", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "mu.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "dist_func_instance.cdf", "dist_func_instance.cdf"], "methods", ["None"], ["", "def", "calc_normal_output_probs", "(", "self", ",", "mu", ",", "sig", ")", ":", "\n", "        ", "if", "self", ".", "learn_bin_limit", ":", "\n", "            ", "bins_limit", "=", "torch", ".", "sigmoid", "(", "self", ".", "bins_limit", ")", ".", "clamp_min", "(", "0.5", ")", "\n", "thresholds", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", "+", "1", ",", "device", "=", "mu", ".", "device", ")", "/", "self", ".", "num_classes", "*", "(", "2", "*", "bins_limit", ")", "-", "bins_limit", "\n", "", "else", ":", "\n", "            ", "thresholds", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", "+", "1", ",", "device", "=", "mu", ".", "device", ")", "/", "self", ".", "num_classes", "*", "(", "2", "*", "self", ".", "bins_limit", ")", "-", "self", ".", "bins_limit", "\n", "", "dist_func_instance", "=", "getattr", "(", "distributions", ",", "self", ".", "dist_func", ")", "(", "mu", ",", "sig", ")", "\n", "probs", "=", "torch", ".", "zeros", "(", "mu", ".", "size", "(", "0", ")", ",", "self", ".", "num_classes", ",", "device", "=", "mu", ".", "device", ")", ".", "float", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "            ", "probs", "[", ":", ",", "i", "]", "=", "(", "dist_func_instance", ".", "cdf", "(", "thresholds", "[", "i", "+", "1", "]", ")", "-", "dist_func_instance", ".", "cdf", "(", "thresholds", "[", "i", "]", ")", ")", ".", "squeeze", "(", ")", "\n", "", "norm_matrix", "=", "torch", ".", "diag", "(", "1.", "/", "torch", ".", "sum", "(", "probs", ",", "dim", "=", "1", ")", ")", "\n", "return", "torch", ".", "matmul", "(", "norm_matrix", ",", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.calc_output_probs": [[42, 47], ["unimodal_layers.UnimodalNormal.mu_output", "unimodal_layers.UnimodalNormal.sigma().clamp", "unimodal_layers.UnimodalNormal.calc_normal_output_probs", "unimodal_layers.UnimodalNormal.sigma"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.calc_normal_output_probs"], ["", "def", "calc_output_probs", "(", "self", ",", "x", ")", ":", "\n", "        ", "mu", "=", "self", ".", "mu_output", "(", "x", ")", "\n", "sig", "=", "self", ".", "sigma", "(", "x", ")", ".", "clamp", "(", "min", "=", "self", ".", "min_sigma", ",", "max", "=", "1e2", ")", "\n", "output_probs", "=", "self", ".", "calc_normal_output_probs", "(", "mu", "=", "mu", ",", "sig", "=", "sig", ")", "\n", "return", "output_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.forward": [[48, 50], ["unimodal_layers.UnimodalNormal.calc_output_probs"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalNormal.calc_output_probs"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "calc_output_probs", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBinomial.__init__": [[53, 61], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", "UnimodalBinomial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "input_channels", "=", "input_channels", "\n", "self", ".", "tau", "=", "1.0", "\n", "self", ".", "prob_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_channels", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBinomial.forward": [[63, 69], ["torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "unimodal_layers.UnimodalBinomial.prob_output().repeat", "torch.distributions.binomial.Binomial().log_prob", "torch.distributions.binomial.Binomial().log_prob", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "x.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "unimodal_layers.UnimodalBinomial.prob_output", "torch.distributions.binomial.Binomial", "torch.distributions.binomial.Binomial"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "success_values", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ",", "requires_grad", "=", "False", ")", ".", "repeat", "(", "x", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "succes_prob", "=", "self", ".", "prob_output", "(", "x", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", "\n", "scores", "=", "Binomial", "(", "total_count", "=", "self", ".", "num_classes", "-", "1", ",", "probs", "=", "succes_prob", ")", ".", "log_prob", "(", "success_values", ")", "\n", "scores", "=", "torch", ".", "softmax", "(", "scores", "/", "self", ".", "tau", ",", "dim", "=", "-", "1", ")", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.__init__": [[72, 85], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Softplus", "torch.Softplus", "torch.Linear", "torch.Linear", "torch.Softplus", "torch.Softplus"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "alpha_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_channels", ",", "1", ")", ",", "\n", "nn", ".", "Softplus", "(", ")", "\n", ")", "\n", "self", ".", "beta_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_channels", ",", "1", ")", ",", "\n", "nn", ".", "Softplus", "(", ")", "\n", ")", "\n", "self", ".", "device", "=", "None", "\n", "self", ".", "epsilon", "=", "1e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.calc_unnormalized_beta_cdf": [[86, 93], ["torch.distributions.beta.Beta", "torch.distributions.beta.Beta", "torch.linspace().float", "torch.linspace().float", "torch.linspace().float", "torch.linspace().float", "torch.distributions.beta.Beta.log_prob().exp", "torch.distributions.beta.Beta.log_prob().exp", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "alpha.float", "beta.float", "torch.distributions.beta.Beta.log_prob().exp.sum", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.distributions.beta.Beta.log_prob", "torch.distributions.beta.Beta.log_prob", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int", "b.cpu().numpy", "b.cpu"], "methods", ["None"], ["", "def", "calc_unnormalized_beta_cdf", "(", "self", ",", "b", ",", "alpha", ",", "beta", ",", "npts", "=", "100", ")", ":", "\n", "        ", "bt", "=", "Beta", "(", "alpha", ".", "float", "(", ")", ",", "beta", ".", "float", "(", ")", ")", "\n", "x", "=", "torch", ".", "linspace", "(", "0", "+", "self", ".", "epsilon", ",", "b", "-", "self", ".", "epsilon", ",", "int", "(", "npts", "*", "b", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "pdf", "=", "bt", ".", "log_prob", "(", "x", ")", ".", "exp", "(", ")", "\n", "dx", "=", "torch", ".", "tensor", "(", "[", "1.", "/", "(", "npts", "*", "self", ".", "num_classes", ")", "]", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "P", "=", "pdf", ".", "sum", "(", "dim", "=", "1", ")", "*", "dx", "\n", "return", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.calc_beta_output_probs": [[94, 105], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "range", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "unimodal_layers.UnimodalBeta.calc_unnormalized_beta_cdf", "unimodal_layers.UnimodalBeta.calc_unnormalized_beta_cdf", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "unimodal_layers.UnimodalBeta.alpha_output", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "unimodal_layers.UnimodalBeta.beta_output", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros().float.sum", "torch.zeros().float.sum", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.clamp.size", "torch.clamp.size"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.calc_unnormalized_beta_cdf", "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.calc_unnormalized_beta_cdf"], ["", "def", "calc_beta_output_probs", "(", "self", ",", "x", ")", ":", "\n", "        ", "thresholds", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", "+", "1", ",", "device", "=", "self", ".", "device", ")", "/", "self", ".", "num_classes", "*", "2", "-", "1", "\n", "alpha", "=", "torch", ".", "clamp", "(", "torch", ".", "tensor", "(", "1.", ",", "device", "=", "self", ".", "device", ")", "+", "self", ".", "alpha_output", "(", "x", ")", ",", "min", "=", "1", ",", "max", "=", "100", ")", "\n", "beta", "=", "torch", ".", "clamp", "(", "torch", ".", "tensor", "(", "1.", ",", "device", "=", "self", ".", "device", ")", "+", "self", ".", "beta_output", "(", "x", ")", ",", "min", "=", "1", ",", "max", "=", "100", ")", "\n", "probs", "=", "torch", ".", "zeros", "(", "alpha", ".", "size", "(", "0", ")", ",", "self", ".", "num_classes", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_classes", ")", ":", "\n", "            ", "cdf_next", "=", "self", ".", "calc_unnormalized_beta_cdf", "(", "thresholds", "[", "i", "+", "1", "]", ",", "alpha", ",", "beta", ")", "\n", "cdf_current", "=", "self", ".", "calc_unnormalized_beta_cdf", "(", "thresholds", "[", "i", "]", ",", "alpha", ",", "beta", ")", "\n", "probs", "[", ":", ",", "i", "]", "=", "cdf_next", "-", "cdf_current", "\n", "", "norm_matrix", "=", "torch", ".", "diag", "(", "1.", "/", "probs", ".", "sum", "(", "dim", "=", "1", ")", ")", "# normalize probs", "\n", "return", "torch", ".", "matmul", "(", "norm_matrix", ",", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.forward": [[106, 109], ["unimodal_layers.UnimodalBeta.calc_beta_output_probs"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.unimodal_layers.UnimodalBeta.calc_beta_output_probs"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "device", "=", "x", ".", "device", "\n", "return", "self", ".", "calc_beta_output_probs", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.RegressionLoss.forward": [[9, 11], ["torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "output.squeeze"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "return", "nn", ".", "MSELoss", "(", ")", "(", "output", ".", "squeeze", "(", ")", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.ClassificationLoss.forward": [[14, 16], ["torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss", "target.long"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "output", ",", "target", ",", "weights", ")", ":", "\n", "        ", "return", "nn", ".", "NLLLoss", "(", "weights", ")", "(", "output", ",", "target", ".", "long", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.UnimodalUniformOTLoss.__init__": [[23, 29], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "n_classes", "\n", "self", ".", "csi", "=", "0.15", "\n", "self", ".", "e", "=", "0.05", "\n", "self", ".", "tau", "=", "1.", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.UnimodalUniformOTLoss.forward": [[30, 40], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "target.unsqueeze().repeat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.one_hot().squeeze", "torch.one_hot().squeeze", "torch.one_hot().squeeze", "torch.softmax.size", "torch.softmax.size", "torch.softmax.size", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "target.unsqueeze", "torch.one_hot", "torch.one_hot", "torch.one_hot", "target.unsqueeze().long", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "target.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "output", "=", "torch", ".", "softmax", "(", "output", ",", "-", "1", ")", "\n", "ranks", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", ",", "dtype", "=", "output", ".", "dtype", ",", "device", "=", "output", ".", "device", ")", ".", "repeat", "(", "output", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "target_repeated", "=", "target", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", "\n", "p", "=", "torch", ".", "softmax", "(", "torch", ".", "exp", "(", "-", "torch", ".", "abs", "(", "ranks", "-", "target_repeated", ")", "/", "self", ".", "tau", ")", ",", "dim", "=", "-", "1", ")", "\n", "target_onehot", "=", "F", ".", "one_hot", "(", "target", ".", "unsqueeze", "(", "0", ")", ".", "long", "(", ")", ",", "self", ".", "num_classes", ")", ".", "squeeze", "(", ")", "\n", "uniform_term", "=", "1.", "/", "self", ".", "num_classes", "\n", "soft_target", "=", "(", "1", "-", "self", ".", "csi", "-", "self", ".", "e", ")", "*", "target_onehot", "+", "self", ".", "csi", "*", "p", "+", "self", ".", "e", "*", "uniform_term", "\n", "loss", "=", "nn", ".", "L1Loss", "(", ")", "(", "torch", ".", "cumsum", "(", "output", ",", "dim", "=", "1", ")", ",", "torch", ".", "cumsum", "(", "soft_target", ",", "dim", "=", "1", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.DLDLLoss.__init__": [[47, 50], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "n_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.DLDLLoss.forward": [[51, 56], ["torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.distributions.normal.Normal.log_prob().exp", "torch.distributions.normal.Normal.log_prob().exp", "torch.distributions.normal.Normal.log_prob().exp", "torch.KLDivLoss", "torch.KLDivLoss", "torch.KLDivLoss", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "target.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "output", "=", "torch", ".", "nn", ".", "LogSoftmax", "(", "dim", "=", "-", "1", ")", "(", "output", ")", "\n", "normal_dist", "=", "Normal", "(", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", ",", "device", "=", "output", ".", "device", ")", ",", "torch", ".", "ones", "(", "self", ".", "num_classes", ",", "device", "=", "output", ".", "device", ")", ")", "\n", "soft_target", "=", "torch", ".", "softmax", "(", "normal_dist", ".", "log_prob", "(", "target", ".", "unsqueeze", "(", "1", ")", ")", ".", "exp", "(", ")", ",", "-", "1", ")", "\n", "return", "nn", ".", "KLDivLoss", "(", ")", "(", "output", ",", "soft_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.SORDLoss.__init__": [[63, 66], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "n_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.SORDLoss.forward": [[67, 74], ["torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "target.unsqueeze().repeat.unsqueeze().repeat.unsqueeze().repeat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "output.size", "torch.KLDivLoss", "torch.KLDivLoss", "torch.KLDivLoss", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "target.unsqueeze().repeat.unsqueeze().repeat.unsqueeze", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "output", "=", "torch", ".", "nn", ".", "LogSoftmax", "(", ")", "(", "output", ")", "\n", "ranks", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", ",", "dtype", "=", "output", ".", "dtype", ",", "device", "=", "output", ".", "device", ",", "requires_grad", "=", "False", ")", ".", "repeat", "(", "output", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "target", "=", "target", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", "\n", "soft_target", "=", "-", "nn", ".", "L1Loss", "(", "reduction", "=", "'none'", ")", "(", "target", ",", "ranks", ")", "# should be of size N x num_classes", "\n", "soft_target", "=", "torch", ".", "softmax", "(", "soft_target", ",", "dim", "=", "-", "1", ")", "\n", "return", "nn", ".", "KLDivLoss", "(", "reduction", "=", "'mean'", ")", "(", "output", ",", "soft_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLossSoft.__init__": [[78, 81], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "n_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLossSoft.forward": [[82, 89], ["torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "target.unsqueeze().repeat.unsqueeze().repeat.unsqueeze().repeat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "output.size", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "target.unsqueeze().repeat.unsqueeze().repeat.unsqueeze", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "ranks", "=", "torch", ".", "arange", "(", "0", ",", "self", ".", "num_classes", ",", "dtype", "=", "output", ".", "dtype", ",", "device", "=", "output", ".", "device", ",", "requires_grad", "=", "False", ")", ".", "repeat", "(", "output", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "target", "=", "target", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", "\n", "soft_target", "=", "-", "nn", ".", "L1Loss", "(", "reduction", "=", "'none'", ")", "(", "target", ",", "ranks", ")", "# should be of size N x num_classes", "\n", "soft_target", "=", "torch", ".", "softmax", "(", "soft_target", ",", "dim", "=", "-", "1", ")", "# like in SORD", "\n", "loss", "=", "nn", ".", "L1Loss", "(", ")", "(", "torch", ".", "cumsum", "(", "output", ",", "dim", "=", "1", ")", ",", "torch", ".", "cumsum", "(", "soft_target", ",", "dim", "=", "1", ")", ")", "# like in Liu 2019", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__": [[93, 104], ["torch.Module.__init__", "numpy.abs", "numpy.expand_dims().repeat", "numpy.expand_dims().repeat", "numpy.expand_dims", "numpy.expand_dims", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ",", "cost", "=", "'linear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "n_classes", "\n", "C0", "=", "np", ".", "expand_dims", "(", "np", ".", "arange", "(", "n_classes", ")", ",", "0", ")", ".", "repeat", "(", "n_classes", ",", "axis", "=", "0", ")", "/", "self", ".", "num_classes", "\n", "C1", "=", "np", ".", "expand_dims", "(", "np", ".", "arange", "(", "n_classes", ")", ",", "1", ")", ".", "repeat", "(", "n_classes", ",", "axis", "=", "1", ")", "/", "self", ".", "num_classes", "\n", "\n", "self", ".", "C", "=", "np", ".", "abs", "(", "C0", "-", "C1", ")", "\n", "if", "cost", "==", "'quadratic'", ":", "\n", "            ", "self", ".", "C", "=", "self", ".", "C", "**", "2", "\n", "", "elif", "cost", "==", "'linear'", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jsvir_uniord.modules.losses.OTLoss.forward": [[105, 111], ["torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "target_class.long"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "output_probs", ",", "target_class", ")", ":", "\n", "        ", "C", "=", "torch", ".", "tensor", "(", "self", ".", "C", ",", "device", "=", "output_probs", ".", "device", ")", ".", "float", "(", ")", "\n", "costs", "=", "C", "[", "target_class", ".", "long", "(", ")", "]", "\n", "transport_costs", "=", "torch", ".", "sum", "(", "costs", "*", "output_probs", ",", "dim", "=", "1", ")", "\n", "result", "=", "torch", ".", "mean", "(", "transport_costs", ")", "\n", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jsvir_uniord.scripts.preprocess_dr.convert_image": [[9, 26], ["cv2.imread", "preprocess_dr.convert_image.scale_radius"], "function", ["None"], ["def", "convert_image", "(", "image_path", ",", "output_dir", ")", ":", "\n", "    ", "def", "scale_radius", "(", "img", ",", "scale", ")", ":", "\n", "        ", "x", "=", "img", "[", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "2", ")", ",", ":", ",", ":", "]", ".", "sum", "(", "1", ")", "\n", "r", "=", "(", "x", ">", "x", ".", "mean", "(", ")", "/", "10", ")", ".", "sum", "(", ")", "/", "2", "\n", "s", "=", "scale", "*", "1.0", "/", "r", "\n", "return", "cv2", ".", "resize", "(", "img", ",", "(", "0", ",", "0", ")", ",", "fx", "=", "s", ",", "fy", "=", "s", ")", "\n", "\n", "", "a", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "# scale img to a given radius", "\n", "a", "=", "scale_radius", "(", "a", ",", "scale", ")", "\n", "# subtract local mean color", "\n", "a", "=", "cv2", ".", "addWeighted", "(", "a", ",", "4", ",", "cv2", ".", "GaussianBlur", "(", "a", ",", "(", "0", ",", "0", ")", ",", "scale", "/", "30", ")", ",", "-", "4", ",", "128", ")", "\n", "# remove out er 10%", "\n", "b", "=", "numpy", ".", "zeros", "(", "a", ".", "shape", ")", "\n", "cv2", ".", "circle", "(", "b", ",", "(", "int", "(", "a", ".", "shape", "[", "1", "]", "/", "2", ")", ",", "int", "(", "a", ".", "shape", "[", "0", "]", "/", "2", ")", ")", ",", "int", "(", "scale", "*", "0.9", ")", ",", "(", "1", ",", "1", ",", "1", ")", ",", "-", "1", ",", "8", ",", "0", ")", "\n", "a", "=", "a", "*", "b", "+", "128", "*", "(", "1", "-", "b", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "os", ".", "path", ".", "basename", "(", "image_path", ")", ")", ",", "a", ")", "\n", "\n"]]}