{"home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.__init__": [[22, 29], ["torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "eval.PretrainedModel.model.eval", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "torch.Tensor().float().view().cuda", "model_pt.cuda", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float().view", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor().float", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "modelname", ")", ":", "\n", "        ", "model_pt", "=", "model_class_dict", "[", "modelname", "]", "(", "pretrained", "=", "True", ")", "\n", "#model.eval()", "\n", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "model_pt", ".", "cuda", "(", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "mu", "=", "torch", ".", "Tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "float", "(", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "self", ".", "sigma", "=", "torch", ".", "Tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "float", "(", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict": [[30, 33], ["eval.PretrainedModel.model"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "(", "x", "-", "self", ".", "mu", ")", "/", "self", ".", "sigma", "\n", "return", "self", ".", "model", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.forward": [[34, 37], ["eval.PretrainedModel.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "(", "x", "-", "self", ".", "mu", ")", "/", "self", ".", "sigma", "\n", "return", "self", ".", "model", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.__call__": [[38, 40], ["eval.PretrainedModel.predict"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "predict", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.random_target_classes": [[41, 50], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.long", "list", "list.remove", "torch.randint", "torch.randint", "torch.randint", "range", "len"], "function", ["None"], ["", "", "def", "random_target_classes", "(", "y_pred", ",", "n_classes", ")", ":", "\n", "    ", "y", "=", "torch", ".", "zeros_like", "(", "y_pred", ")", "\n", "for", "counter", "in", "range", "(", "y_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "l", "=", "list", "(", "range", "(", "n_classes", ")", ")", "\n", "l", ".", "remove", "(", "y_pred", "[", "counter", "]", ")", "\n", "t", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "l", ")", ",", "size", "=", "[", "1", "]", ")", "\n", "y", "[", "counter", "]", "=", "l", "[", "t", "]", "+", "0", "\n", "\n", "", "return", "y", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.__init__": [[50, 92], ["utils.Logger"], "methods", ["None"], ["def", "__init__", "(", "\n", "self", ",", "\n", "predict", ",", "\n", "norm", "=", "'L0'", ",", "\n", "n_queries", "=", "5000", ",", "\n", "eps", "=", "None", ",", "\n", "p_init", "=", ".8", ",", "\n", "n_restarts", "=", "1", ",", "\n", "seed", "=", "0", ",", "\n", "verbose", "=", "True", ",", "\n", "targeted", "=", "False", ",", "\n", "loss", "=", "'margin'", ",", "\n", "resc_schedule", "=", "True", ",", "\n", "device", "=", "None", ",", "\n", "log_path", "=", "None", ",", "\n", "constant_schedule", "=", "False", ",", "\n", "init_patches", "=", "'random_squares'", ",", "\n", "resample_loc", "=", "None", ",", "\n", "data_loader", "=", "None", ",", "\n", "update_loc_period", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Sparse-RS implementation in PyTorch\n        \"\"\"", "\n", "\n", "self", ".", "predict", "=", "predict", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "n_queries", "=", "n_queries", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "p_init", "=", "p_init", "\n", "self", ".", "n_restarts", "=", "n_restarts", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "targeted", "=", "targeted", "\n", "self", ".", "loss", "=", "loss", "\n", "self", ".", "rescale_schedule", "=", "resc_schedule", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "logger", "=", "Logger", "(", "log_path", ")", "\n", "self", ".", "constant_schedule", "=", "constant_schedule", "\n", "self", ".", "init_patches", "=", "init_patches", "\n", "self", ".", "resample_loc", "=", "n_queries", "//", "10", "if", "resample_loc", "is", "None", "else", "resample_loc", "\n", "self", ".", "data_loader", "=", "data_loader", "\n", "self", ".", "update_loc_period", "=", "update_loc_period", "if", "not", "update_loc_period", "is", "None", "else", "4", "if", "not", "targeted", "else", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss": [[94, 113], ["rs_attacks.RSAttack.predict", "torch.cross_entropy", "torch.cross_entropy", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "logits[].clone", "float", "rs_attacks.RSAttack.max"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict"], ["", "def", "margin_and_loss", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        :param y:        correct labels if untargeted else target labels\n        \"\"\"", "\n", "\n", "logits", "=", "self", ".", "predict", "(", "x", ")", "\n", "xent", "=", "F", ".", "cross_entropy", "(", "logits", ",", "y", ",", "reduction", "=", "'none'", ")", "\n", "u", "=", "torch", ".", "arange", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "y_corr", "=", "logits", "[", "u", ",", "y", "]", ".", "clone", "(", ")", "\n", "logits", "[", "u", ",", "y", "]", "=", "-", "float", "(", "'inf'", ")", "\n", "y_others", "=", "logits", ".", "max", "(", "dim", "=", "-", "1", ")", "[", "0", "]", "\n", "\n", "if", "not", "self", ".", "targeted", ":", "\n", "            ", "if", "self", ".", "loss", "==", "'ce'", ":", "\n", "                ", "return", "y_corr", "-", "y_others", ",", "-", "1.", "*", "xent", "\n", "", "elif", "self", ".", "loss", "==", "'margin'", ":", "\n", "                ", "return", "y_corr", "-", "y_others", ",", "y_corr", "-", "y_others", "\n", "", "", "else", ":", "\n", "            ", "return", "y_others", "-", "y_corr", ",", "xent", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.init_hyperparam": [[114, 128], ["list", "len", "time.time"], "methods", ["None"], ["", "", "def", "init_hyperparam", "(", "self", ",", "x", ")", ":", "\n", "        ", "assert", "self", ".", "norm", "in", "[", "'L0'", ",", "'patches'", ",", "'frames'", ",", "\n", "'patches_universal'", ",", "'frames_universal'", "]", "\n", "assert", "not", "self", ".", "eps", "is", "None", "\n", "assert", "self", ".", "loss", "in", "[", "'ce'", ",", "'margin'", "]", "\n", "\n", "if", "self", ".", "device", "is", "None", ":", "\n", "            ", "self", ".", "device", "=", "x", ".", "device", "\n", "", "self", ".", "orig_dim", "=", "list", "(", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "self", ".", "ndims", "=", "len", "(", "self", ".", "orig_dim", ")", "\n", "if", "self", ".", "seed", "is", "None", ":", "\n", "            ", "self", ".", "seed", "=", "time", ".", "time", "(", ")", "\n", "", "if", "self", ".", "targeted", ":", "\n", "            ", "self", ".", "loss", "=", "'ce'", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_target_classes": [[129, 138], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.long().to", "torch.zeros_like.long().to", "list", "list.remove", "rs_attacks.RSAttack.random_int", "range", "len", "torch.zeros_like.long", "torch.zeros_like.long"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int"], ["", "", "def", "random_target_classes", "(", "self", ",", "y_pred", ",", "n_classes", ")", ":", "\n", "        ", "y", "=", "torch", ".", "zeros_like", "(", "y_pred", ")", "\n", "for", "counter", "in", "range", "(", "y_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "l", "=", "list", "(", "range", "(", "n_classes", ")", ")", "\n", "l", ".", "remove", "(", "y_pred", "[", "counter", "]", ")", "\n", "t", "=", "self", ".", "random_int", "(", "0", ",", "len", "(", "l", ")", ")", "\n", "y", "[", "counter", "]", "=", "l", "[", "t", "]", "\n", "\n", "", "return", "y", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape": [[139, 141], ["x.unsqueeze", "len"], "methods", ["None"], ["", "def", "check_shape", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "if", "len", "(", "x", ".", "shape", ")", "==", "(", "self", ".", "ndims", "+", "1", ")", "else", "x", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice": [[142, 145], ["torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.rand().to", "torch.rand().to", "torch.rand().to", "torch.rand().to", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["None"], ["", "def", "random_choice", "(", "self", ",", "shape", ")", ":", "\n", "        ", "t", "=", "2", "*", "torch", ".", "rand", "(", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "-", "1", "\n", "return", "torch", ".", "sign", "(", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int": [[146, 149], ["t.long", "torch.rand().to", "torch.rand().to", "torch.rand().to", "torch.rand().to", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["None"], ["", "def", "random_int", "(", "self", ",", "low", "=", "0", ",", "high", "=", "1", ",", "shape", "=", "[", "1", "]", ")", ":", "\n", "        ", "t", "=", "low", "+", "(", "high", "-", "low", ")", "*", "torch", ".", "rand", "(", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "t", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.normalize": [[150, 158], ["x.abs().view().max", "t.view", "x.abs().view", "t.view", "x.abs"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "==", "'Linf'", ":", "\n", "            ", "t", "=", "x", ".", "abs", "(", ")", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "max", "(", "1", ")", "[", "0", "]", "\n", "return", "x", "/", "(", "t", ".", "view", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "self", ".", "ndims", ")", ")", "+", "1e-12", ")", "\n", "\n", "", "elif", "self", ".", "norm", "==", "'L2'", ":", "\n", "            ", "t", "=", "(", "x", "**", "2", ")", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "sqrt", "(", ")", "\n", "return", "x", "/", "(", "t", ".", "view", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "self", ".", "ndims", ")", ")", "+", "1e-12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.lp_norm": [[159, 163], ["t.view"], "methods", ["None"], ["", "", "def", "lp_norm", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "==", "'L2'", ":", "\n", "            ", "t", "=", "(", "x", "**", "2", ")", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "sqrt", "(", ")", "\n", "return", "t", ".", "view", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "self", ".", "ndims", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection": [[164, 233], ["int", "max", "math.ceil", "float"], "methods", ["None"], ["", "", "def", "p_selection", "(", "self", ",", "it", ")", ":", "\n", "        ", "\"\"\" schedule to decrease the parameter p \"\"\"", "\n", "\n", "if", "self", ".", "rescale_schedule", ":", "\n", "            ", "it", "=", "int", "(", "it", "/", "self", ".", "n_queries", "*", "10000", ")", "\n", "\n", "", "if", "'patches'", "in", "self", ".", "norm", ":", "\n", "            ", "if", "10", "<", "it", "<=", "50", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "2", "\n", "", "elif", "50", "<", "it", "<=", "200", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "4", "\n", "", "elif", "200", "<", "it", "<=", "500", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "8", "\n", "", "elif", "500", "<", "it", "<=", "1000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "16", "\n", "", "elif", "1000", "<", "it", "<=", "2000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "32", "\n", "", "elif", "2000", "<", "it", "<=", "4000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "64", "\n", "", "elif", "4000", "<", "it", "<=", "6000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "128", "\n", "", "elif", "6000", "<", "it", "<=", "8000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "256", "\n", "", "elif", "8000", "<", "it", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "512", "\n", "", "else", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "\n", "\n", "", "", "elif", "'frames'", "in", "self", ".", "norm", ":", "\n", "            ", "if", "not", "'universal'", "in", "self", ".", "norm", ":", "\n", "                ", "tot_qr", "=", "10000", "if", "self", ".", "rescale_schedule", "else", "self", ".", "n_queries", "\n", "p", "=", "max", "(", "(", "float", "(", "tot_qr", "-", "it", ")", "/", "tot_qr", "-", ".5", ")", "*", "self", ".", "p_init", "*", "self", ".", "eps", "**", "2", ",", "0.", ")", "\n", "return", "3.", "*", "math", ".", "ceil", "(", "p", ")", "\n", "\n", "", "else", ":", "\n", "                ", "assert", "self", ".", "rescale_schedule", "\n", "its", "=", "[", "200", ",", "600", ",", "1200", ",", "1800", ",", "2500", ",", "10000", ",", "100000", "]", "\n", "resc_factors", "=", "[", "1.", ",", ".8", ",", ".6", ",", ".4", ",", ".2", ",", ".1", ",", "0.", "]", "\n", "c", "=", "0", "\n", "while", "it", ">=", "its", "[", "c", "]", ":", "\n", "                    ", "c", "+=", "1", "\n", "", "return", "resc_factors", "[", "c", "]", "*", "self", ".", "p_init", "\n", "\n", "", "", "elif", "'L0'", "in", "self", ".", "norm", ":", "\n", "            ", "if", "0", "<", "it", "<=", "50", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "2", "\n", "", "elif", "50", "<", "it", "<=", "200", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "4", "\n", "", "elif", "200", "<", "it", "<=", "500", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "5", "\n", "", "elif", "500", "<", "it", "<=", "1000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "6", "\n", "", "elif", "1000", "<", "it", "<=", "2000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "8", "\n", "", "elif", "2000", "<", "it", "<=", "4000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "10", "\n", "", "elif", "4000", "<", "it", "<=", "6000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "12", "\n", "", "elif", "6000", "<", "it", "<=", "8000", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "15", "\n", "", "elif", "8000", "<", "it", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "20", "\n", "", "else", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "\n", "\n", "", "if", "self", ".", "constant_schedule", ":", "\n", "                ", "p", "=", "self", ".", "p_init", "/", "2", "\n", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.sh_selection": [[234, 240], ["max", "float"], "methods", ["None"], ["", "def", "sh_selection", "(", "self", ",", "it", ")", ":", "\n", "        ", "\"\"\" schedule to decrease the parameter p \"\"\"", "\n", "\n", "t", "=", "max", "(", "(", "float", "(", "self", ".", "n_queries", "-", "it", ")", "/", "self", ".", "n_queries", "-", ".0", ")", "**", "1.", ",", "0", ")", "*", ".75", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.get_init_patch": [[241, 262], ["torch.ones().to.clamp", "torch.ones().to.clamp", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "rs_attacks.RSAttack.random_choice().clamp", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "rs_attacks.RSAttack.random_choice().clamp", "rs_attacks.RSAttack.random_choice().clamp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "rs_attacks.RSAttack.random_choice", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "rs_attacks.RSAttack.random_choice().clamp", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "rs_attacks.RSAttack.random_choice", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "math.ceil"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice"], ["", "def", "get_init_patch", "(", "self", ",", "c", ",", "s", ",", "n_iter", "=", "1000", ")", ":", "\n", "        ", "if", "self", ".", "init_patches", "==", "'stripes'", ":", "\n", "            ", "patch_univ", "=", "torch", ".", "zeros", "(", "[", "1", ",", "c", ",", "s", ",", "s", "]", ")", ".", "to", "(", "self", ".", "device", ")", "+", "self", ".", "random_choice", "(", "\n", "[", "1", ",", "c", ",", "1", ",", "s", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "elif", "self", ".", "init_patches", "==", "'uniform'", ":", "\n", "            ", "patch_univ", "=", "torch", ".", "zeros", "(", "[", "1", ",", "c", ",", "s", ",", "s", "]", ")", ".", "to", "(", "self", ".", "device", ")", "+", "self", ".", "random_choice", "(", "\n", "[", "1", ",", "c", ",", "1", ",", "1", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "elif", "self", ".", "init_patches", "==", "'random'", ":", "\n", "            ", "patch_univ", "=", "self", ".", "random_choice", "(", "[", "1", ",", "c", ",", "s", ",", "s", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "elif", "self", ".", "init_patches", "==", "'random_squares'", ":", "\n", "            ", "patch_univ", "=", "torch", ".", "zeros", "(", "[", "1", ",", "c", ",", "s", ",", "s", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "_", "in", "range", "(", "n_iter", ")", ":", "\n", "                ", "size_init", "=", "torch", ".", "randint", "(", "low", "=", "1", ",", "high", "=", "math", ".", "ceil", "(", "s", "**", ".5", ")", ",", "size", "=", "[", "1", "]", ")", ".", "item", "(", ")", "\n", "loc_init", "=", "torch", ".", "randint", "(", "s", "-", "size_init", "+", "1", ",", "size", "=", "[", "2", "]", ")", "\n", "patch_univ", "[", "0", ",", ":", ",", "loc_init", "[", "0", "]", ":", "loc_init", "[", "0", "]", "+", "size_init", ",", "loc_init", "[", "1", "]", ":", "loc_init", "[", "1", "]", "+", "size_init", "]", "=", "0.", "\n", "patch_univ", "[", "0", ",", ":", ",", "loc_init", "[", "0", "]", ":", "loc_init", "[", "0", "]", "+", "size_init", ",", "loc_init", "[", "1", "]", ":", "loc_init", "[", "1", "]", "+", "size_init", "\n", "]", "+=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "", "elif", "self", ".", "init_patches", "==", "'sh'", ":", "\n", "            ", "patch_univ", "=", "torch", ".", "ones", "(", "[", "1", ",", "c", ",", "s", ",", "s", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "return", "patch_univ", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.attack_single_run": [[263, 886], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "range", "rs_attacks.RSAttack.margin_and_loss", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "range", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "rs_attacks.RSAttack.random_choice().clamp", "ind_p.clone", "ind_np.clone", "rs_attacks.RSAttack.check_shape", "rs_attacks.RSAttack.check_shape", "rs_attacks.RSAttack.clone", "max", "range", "rs_attacks.RSAttack.margin_and_loss", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max.sum().item", "torch.max.sum().item", "int", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "abs", "range", "range", "rs_attacks.RSAttack.margin_and_loss", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "range", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "len", "y_curr.unsqueeze_", "margin_min_curr.unsqueeze_", "loss_min_curr.unsqueeze_", "b_curr.unsqueeze_", "be_curr.unsqueeze_", "idx_to_fool.unsqueeze_", "int", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "x_curr[].clone", "margin[].clone", "x_new[].clone", "b_curr[].clone", "be_curr[].clone", "b_curr[].clone.clone", "be_curr[].clone.clone", "rs_attacks.RSAttack.logger.log", "ind_succ.numel", "math.ceil", "abs", "int", "rs_attacks.RSAttack.logger.log", "rs_attacks.RSAttack.logger.log", "rs_attacks.RSAttack.get_init_patch().squeeze().clamp", "patches_coll[].clone", "rs_attacks.RSAttack.check_shape", "rs_attacks.RSAttack.check_shape", "int", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "int", "rs_attacks.RSAttack.clone", "rs_attacks.RSAttack.clone", "loc_curr.clone", "int", "range", "rs_attacks.RSAttack.margin_and_loss", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max.sum().item", "torch.max.sum().item", "patches_coll[].clone", "int", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "range", "rs_attacks.RSAttack.get_init_patch", "float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice().clamp", "x_new[].clone", "print", "mask_frame[].clone.clone", "rs_attacks.RSAttack.clone", "torch.max.sum", "torch.max.sum", "ind_succ.numel", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "max", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "len", "y_curr.unsqueeze_", "margin_min_curr.unsqueeze_", "loss_min_curr.unsqueeze_", "loc_curr.unsqueeze_", "idx_to_fool.unsqueeze_", "max", "max", "patches_new[].clone", "margin[].clone", "patches_new[].clone", "loc_new[].clone", "rs_attacks.RSAttack.logger.log", "ind_succ.numel", "math.ceil", "int", "rs_attacks.RSAttack.logger.log", "rs_attacks.RSAttack.logger.log", "math.ceil", "rs_attacks.RSAttack.logger.log", "min", "next", "new_train_imgs.append", "int", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "patch_univ.clone.clone.clone", "patch_new.clone.clone.clamp_", "torch.cat.clone", "torch.cat.clone", "range", "rs_attacks.RSAttack.margin_and_loss", "loss_run.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "mask.view().to.view().to.view().to", "range", "rs_attacks.RSAttack.random_choice().clamp", "rs_attacks.RSAttack.margin_and_loss", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "range", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.random_choice().clone().clamp", "rs_attacks.RSAttack.get_init_patch().squeeze", "patches_new[].clamp_", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "loc_new[].clamp_", "torch.max.sum", "torch.max.sum", "ind_succ.numel", "max", "max", "rs_attacks.RSAttack.random_choice", "patch_new[].clone", "mask_frame[].clone.clone", "rs_attacks.RSAttack.clone", "patch_new.clone.clone.clone", "newimgstoadd[].clone().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "rs_attacks.RSAttack.logger.log", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "int", "rs_attacks.RSAttack.logger.log", "rs_attacks.RSAttack.check_shape", "rs_attacks.RSAttack.check_shape", "max", "rs_attacks.RSAttack.clone", "range", "torch.cat.clone.clamp_", "rs_attacks.RSAttack.margin_and_loss", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max.sum().item", "torch.max.sum().item", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "mask.view().to.view().to.view().to", "rs_attacks.RSAttack.random_choice().clamp", "range", "float", "torch.ones_like().float", "torch.ones_like().float", "torch.ones_like().float", "torch.ones_like().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.sh_selection", "rs_attacks.RSAttack.random_int", "rs_attacks.RSAttack.random_int", "x[].clone", "newimgstoadd[].clone().cuda.clone", "mask.view().to.view().to.view", "max", "rs_attacks.RSAttack.random_choice", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "len", "y_curr.unsqueeze_", "margin_min_curr.unsqueeze_", "loss_min_curr.unsqueeze_", "idx_to_fool.unsqueeze_", "int", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "rs_attacks.RSAttack.random_choice().long().cpu", "rs_attacks.RSAttack.random_choice().long().cpu", "rs_attacks.RSAttack.random_choice().clamp", "margin[].clone", "x_new[].clone", "rs_attacks.RSAttack.logger.log", "ind_succ.numel", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "int", "rs_attacks.RSAttack.logger.log", "math.ceil", "rs_attacks.RSAttack.logger.log", "min", "next", "new_train_imgs.append", "max", "mask_frame[].clone", "mask_frame[].clone.clamp_", "rs_attacks.RSAttack.margin_and_loss", "loss_run.sum", "rs_attacks.RSAttack.random_choice().clone", "ind_succ.numel", "n_queries[].mean().item", "n_queries[].median().item", "loss_min.mean", "[].view().sum().max", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.get_init_patch", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.random_choice", "patches_new[].clone", "mask_frame[].clone.clone", "rs_attacks.RSAttack.clone", "rs_attacks.RSAttack.random_choice().clone().clamp", "newimgstoadd[].clone", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.p_selection", "range", "ind[].clone", "x_new[].clone", "mask_frame[].clone.clone", "rs_attacks.RSAttack.clone", "torch.max.sum", "torch.max.sum", "ind_succ.numel", "mask.view().to.view().to.view", "rs_attacks.RSAttack.random_choice", "max", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "int", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "rs_attacks.RSAttack.random_choice().long().cpu", "rs_attacks.RSAttack.random_choice().long().cpu", "rs_attacks.RSAttack.random_choice().clamp", "range", "mask_frame[].clone", "mask_frame[].clone.clone", "rs_attacks.RSAttack.clone", "len", "mask_frame[].clone.unsqueeze_", "mask_frame[].clone.clone", "newimgstoadd[].clone().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat.clone", "rs_attacks.RSAttack.logger.log", "torch.max.view", "torch.max.view", "float", "rs_attacks.RSAttack.random_choice().clone().clamp", "ind_succ.numel", "n_queries[].mean().item", "n_queries[].median().item", "loss_min.mean", "[].view().sum().max", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.random_choice().long", "rs_attacks.RSAttack.random_choice().long", "rs_attacks.RSAttack.random_choice", "range", "rs_attacks.RSAttack.random_int", "range", "rs_attacks.RSAttack.random_int", "x[].clone", "newimgstoadd[].clone().cuda.clone", "rs_attacks.RSAttack.random_choice", "ind_succ.numel", "n_queries[].mean", "n_queries[].median", "[].view().sum", "torch.max.view", "torch.max.view", "float", "rs_attacks.RSAttack.random_choice().clone", "[].view().sum().max", "rs_attacks.RSAttack.clone", "rs_attacks.RSAttack.random_choice().clone().clamp", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.p_selection", "rs_attacks.RSAttack.random_choice().long", "rs_attacks.RSAttack.random_choice().long", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.clone", "rs_attacks.RSAttack.random_choice().clone().clamp", "newimgstoadd[].clone", "rs_attacks.RSAttack.random_choice().clone", "ind_succ.numel", "n_queries[].mean", "n_queries[].median", "[].view().sum", "float", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice", "ind_succ.numel", "n_queries[].mean().item", "n_queries[].median().item", "loss_min.mean", "[].view().sum().max", "[].view", "rs_attacks.RSAttack.random_choice", "[].view().sum", "rs_attacks.RSAttack.random_choice().clone", "torch.max.view", "torch.max.view", "float", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice().clone", "[].view().sum().max", "rs_attacks.RSAttack.random_choice", "[].view", "ind_succ.numel", "n_queries[].mean", "n_queries[].median", "[].view().sum", "float", "[].view", "rs_attacks.RSAttack.random_choice", "rs_attacks.RSAttack.random_choice", "[].view().sum", "[].view", "[].view"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.get_init_patch", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.check_shape", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.sh_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.margin_and_loss", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.get_init_patch", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_int", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.p_selection", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_choice"], ["", "def", "attack_single_run", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adv", "=", "x", ".", "clone", "(", ")", "\n", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "1", ":", "]", "\n", "n_features", "=", "c", "*", "h", "*", "w", "\n", "n_ex_total", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "if", "self", ".", "norm", "==", "'L0'", ":", "\n", "                ", "eps", "=", "self", ".", "eps", "\n", "\n", "x_best", "=", "x", ".", "clone", "(", ")", "\n", "n_pixels", "=", "h", "*", "w", "\n", "b_all", ",", "be_all", "=", "torch", ".", "zeros", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "eps", "]", ")", ".", "long", "(", ")", ",", "torch", ".", "zeros", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "n_pixels", "-", "eps", "]", ")", ".", "long", "(", ")", "\n", "for", "img", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "ind_all", "=", "torch", ".", "randperm", "(", "n_pixels", ")", "\n", "ind_p", "=", "ind_all", "[", ":", "eps", "]", "\n", "ind_np", "=", "ind_all", "[", "eps", ":", "]", "\n", "x_best", "[", "img", ",", ":", ",", "ind_p", "//", "w", ",", "ind_p", "%", "w", "]", "=", "self", ".", "random_choice", "(", "[", "c", ",", "eps", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "b_all", "[", "img", "]", "=", "ind_p", ".", "clone", "(", ")", "\n", "be_all", "[", "img", "]", "=", "ind_np", ".", "clone", "(", ")", "\n", "\n", "", "margin_min", ",", "loss_min", "=", "self", ".", "margin_and_loss", "(", "x_best", ",", "y", ")", "\n", "n_queries", "=", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "for", "it", "in", "range", "(", "1", ",", "self", ".", "n_queries", ")", ":", "\n", "# check points still to fool", "\n", "                    ", "idx_to_fool", "=", "(", "margin_min", ">", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "x_curr", "=", "self", ".", "check_shape", "(", "x", "[", "idx_to_fool", "]", ")", "\n", "x_best_curr", "=", "self", ".", "check_shape", "(", "x_best", "[", "idx_to_fool", "]", ")", "\n", "y_curr", "=", "y", "[", "idx_to_fool", "]", "\n", "margin_min_curr", "=", "margin_min", "[", "idx_to_fool", "]", "\n", "loss_min_curr", "=", "loss_min", "[", "idx_to_fool", "]", "\n", "b_curr", ",", "be_curr", "=", "b_all", "[", "idx_to_fool", "]", ",", "be_all", "[", "idx_to_fool", "]", "\n", "if", "len", "(", "y_curr", ".", "shape", ")", "==", "0", ":", "\n", "                        ", "y_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "margin_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "loss_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "b_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "be_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "idx_to_fool", ".", "unsqueeze_", "(", "0", ")", "\n", "\n", "# build new candidate", "\n", "", "x_new", "=", "x_best_curr", ".", "clone", "(", ")", "\n", "eps_it", "=", "max", "(", "int", "(", "self", ".", "p_selection", "(", "it", ")", "*", "eps", ")", ",", "1", ")", "\n", "ind_p", "=", "torch", ".", "randperm", "(", "eps", ")", "[", ":", "eps_it", "]", "\n", "ind_np", "=", "torch", ".", "randperm", "(", "n_pixels", "-", "eps", ")", "[", ":", "eps_it", "]", "\n", "\n", "for", "img", "in", "range", "(", "x_new", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "p_set", "=", "b_curr", "[", "img", ",", "ind_p", "]", "\n", "np_set", "=", "be_curr", "[", "img", ",", "ind_np", "]", "\n", "x_new", "[", "img", ",", ":", ",", "p_set", "//", "w", ",", "p_set", "%", "w", "]", "=", "x_curr", "[", "img", ",", ":", ",", "p_set", "//", "w", ",", "p_set", "%", "w", "]", ".", "clone", "(", ")", "\n", "if", "eps_it", ">", "1", ":", "\n", "                            ", "x_new", "[", "img", ",", ":", ",", "np_set", "//", "w", ",", "np_set", "%", "w", "]", "=", "self", ".", "random_choice", "(", "[", "c", ",", "eps_it", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "else", ":", "\n", "# if update is 1x1 make sure the sampled color is different from the current one", "\n", "                            ", "old_clr", "=", "x_new", "[", "img", ",", ":", ",", "np_set", "//", "w", ",", "np_set", "%", "w", "]", ".", "clone", "(", ")", "\n", "assert", "old_clr", ".", "shape", "==", "(", "c", ",", "1", ")", ",", "print", "(", "old_clr", ")", "\n", "new_clr", "=", "old_clr", ".", "clone", "(", ")", "\n", "while", "(", "new_clr", "==", "old_clr", ")", ".", "all", "(", ")", ".", "item", "(", ")", ":", "\n", "                                ", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", "]", ")", ".", "clone", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "x_new", "[", "img", ",", ":", ",", "np_set", "//", "w", ",", "np_set", "%", "w", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "\n", "# compute loss of the new candidates", "\n", "", "", "margin", ",", "loss", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y_curr", ")", "\n", "n_queries", "[", "idx_to_fool", "]", "+=", "1", "\n", "\n", "# update best solution", "\n", "idx_improved", "=", "(", "loss", "<", "loss_min_curr", ")", ".", "float", "(", ")", "\n", "idx_to_update", "=", "(", "idx_improved", ">", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "loss_min", "[", "idx_to_fool", "[", "idx_to_update", "]", "]", "=", "loss", "[", "idx_to_update", "]", "\n", "\n", "idx_miscl", "=", "(", "margin", "<", "-", "1e-6", ")", ".", "float", "(", ")", "\n", "idx_improved", "=", "torch", ".", "max", "(", "idx_improved", ",", "idx_miscl", ")", "\n", "nimpr", "=", "idx_improved", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "if", "nimpr", ">", "0.", ":", "\n", "                        ", "idx_improved", "=", "(", "idx_improved", ".", "view", "(", "-", "1", ")", ">", "0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "margin_min", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "margin", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "x_best", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "x_new", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "t", "=", "b_curr", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "te", "=", "be_curr", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "\n", "if", "nimpr", ">", "1", ":", "\n", "                            ", "t", "[", ":", ",", "ind_p", "]", "=", "be_curr", "[", "idx_improved", "]", "[", ":", ",", "ind_np", "]", "+", "0", "\n", "te", "[", ":", ",", "ind_np", "]", "=", "b_curr", "[", "idx_improved", "]", "[", ":", ",", "ind_p", "]", "+", "0", "\n", "", "else", ":", "\n", "                            ", "t", "[", "ind_p", "]", "=", "be_curr", "[", "idx_improved", "]", "[", "ind_np", "]", "+", "0", "\n", "te", "[", "ind_np", "]", "=", "b_curr", "[", "idx_improved", "]", "[", "ind_p", "]", "+", "0", "\n", "\n", "", "b_all", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "t", ".", "clone", "(", ")", "\n", "be_all", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "te", ".", "clone", "(", ")", "\n", "\n", "# log results current iteration", "\n", "", "ind_succ", "=", "(", "margin_min", "<=", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "self", ".", "verbose", "and", "ind_succ", ".", "numel", "(", ")", "!=", "0", ":", "\n", "                        ", "self", ".", "logger", ".", "log", "(", "' '", ".", "join", "(", "[", "'{}'", ".", "format", "(", "it", "+", "1", ")", ",", "\n", "'- success rate={}/{} ({:.2%})'", ".", "format", "(", "\n", "ind_succ", ".", "numel", "(", ")", ",", "n_ex_total", ",", "\n", "float", "(", "ind_succ", ".", "numel", "(", ")", ")", "/", "n_ex_total", ")", ",", "\n", "'- avg # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- med # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "median", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- loss={:.3f}'", ".", "format", "(", "loss_min", ".", "mean", "(", ")", ")", ",", "\n", "'- max pert={:.0f}'", ".", "format", "(", "(", "(", "x_new", "-", "x_curr", ")", ".", "abs", "(", ")", ">", "0", "\n", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "view", "(", "x_new", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ")", ",", "\n", "'- epsit={:.0f}'", ".", "format", "(", "eps_it", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "if", "ind_succ", ".", "numel", "(", ")", "==", "n_ex_total", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "elif", "self", ".", "norm", "==", "'patches'", ":", "\n", "                ", "''' assumes square images and patches '''", "\n", "\n", "s", "=", "int", "(", "math", ".", "ceil", "(", "self", ".", "eps", "**", ".5", ")", ")", "\n", "x_best", "=", "x", ".", "clone", "(", ")", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "loc", "=", "torch", ".", "randint", "(", "h", "-", "s", ",", "size", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "2", "]", ")", "\n", "patches_coll", "=", "torch", ".", "zeros", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "c", ",", "s", ",", "s", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "assert", "abs", "(", "self", ".", "update_loc_period", ")", ">", "1", "\n", "loc_t", "=", "abs", "(", "self", ".", "update_loc_period", ")", "\n", "\n", "# set when to start single channel updates", "\n", "it_start_cu", "=", "None", "\n", "for", "it", "in", "range", "(", "0", ",", "self", ".", "n_queries", ")", ":", "\n", "                    ", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", "**", ".5", "*", "s", ",", "1", ")", ")", "\n", "if", "s_it", "==", "1", ":", "\n", "                        ", "break", "\n", "", "", "it_start_cu", "=", "it", "+", "(", "self", ".", "n_queries", "-", "it", ")", "//", "2", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'starting single channel updates at query {}'", ".", "format", "(", "\n", "it_start_cu", ")", ")", "\n", "\n", "# initialize patches", "\n", "", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'using {} initialization'", ".", "format", "(", "self", ".", "init_patches", ")", ")", "\n", "", "for", "counter", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "patches_coll", "[", "counter", "]", "+=", "self", ".", "get_init_patch", "(", "c", ",", "s", ")", ".", "squeeze", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "x_new", "[", "counter", ",", ":", ",", "loc", "[", "counter", ",", "0", "]", ":", "loc", "[", "counter", ",", "0", "]", "+", "s", ",", "\n", "loc", "[", "counter", ",", "1", "]", ":", "loc", "[", "counter", ",", "1", "]", "+", "s", "]", "=", "patches_coll", "[", "counter", "]", ".", "clone", "(", ")", "\n", "\n", "", "margin_min", ",", "loss_min", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y", ")", "\n", "n_queries", "=", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "for", "it", "in", "range", "(", "1", ",", "self", ".", "n_queries", ")", ":", "\n", "# check points still to fool", "\n", "                    ", "idx_to_fool", "=", "(", "margin_min", ">", "-", "1e-6", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "x_curr", "=", "self", ".", "check_shape", "(", "x", "[", "idx_to_fool", "]", ")", "\n", "patches_curr", "=", "self", ".", "check_shape", "(", "patches_coll", "[", "idx_to_fool", "]", ")", "\n", "y_curr", "=", "y", "[", "idx_to_fool", "]", "\n", "margin_min_curr", "=", "margin_min", "[", "idx_to_fool", "]", "\n", "loss_min_curr", "=", "loss_min", "[", "idx_to_fool", "]", "\n", "loc_curr", "=", "loc", "[", "idx_to_fool", "]", "\n", "if", "len", "(", "y_curr", ".", "shape", ")", "==", "0", ":", "\n", "                        ", "y_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "margin_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "loss_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "\n", "loc_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "idx_to_fool", ".", "unsqueeze_", "(", "0", ")", "\n", "\n", "# sample update", "\n", "", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", "**", ".5", "*", "s", ",", "1", ")", ")", "\n", "p_it", "=", "torch", ".", "randint", "(", "s", "-", "s_it", "+", "1", ",", "size", "=", "[", "2", "]", ")", "\n", "sh_it", "=", "int", "(", "max", "(", "self", ".", "sh_selection", "(", "it", ")", "*", "h", ",", "0", ")", ")", "\n", "patches_new", "=", "patches_curr", ".", "clone", "(", ")", "\n", "x_new", "=", "x_curr", ".", "clone", "(", ")", "\n", "loc_new", "=", "loc_curr", ".", "clone", "(", ")", "\n", "update_loc", "=", "int", "(", "(", "it", "%", "loc_t", "==", "0", ")", "and", "(", "sh_it", ">", "0", ")", ")", "\n", "update_patch", "=", "1.", "-", "update_loc", "\n", "if", "self", ".", "update_loc_period", "<", "0", "and", "sh_it", ">", "0", ":", "\n", "                        ", "update_loc", "=", "1.", "-", "update_loc", "\n", "update_patch", "=", "1.", "-", "update_patch", "\n", "", "for", "counter", "in", "range", "(", "x_curr", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "if", "update_patch", "==", "1.", ":", "\n", "# update patch", "\n", "                            ", "if", "it", "<", "it_start_cu", ":", "\n", "                                ", "if", "s_it", ">", "1", ":", "\n", "                                    ", "patches_new", "[", "counter", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "+=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "# make sure to sample a different color", "\n", "                                    ", "old_clr", "=", "patches_new", "[", "counter", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", ".", "clone", "(", ")", "\n", "new_clr", "=", "old_clr", ".", "clone", "(", ")", "\n", "while", "(", "new_clr", "==", "old_clr", ")", ".", "all", "(", ")", ".", "item", "(", ")", ":", "\n", "                                        ", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", ".", "clone", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "patches_new", "[", "counter", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "", "", "else", ":", "\n", "                                ", "assert", "s_it", "==", "1", "\n", "assert", "it", ">=", "it_start_cu", "\n", "# single channel updates", "\n", "new_ch", "=", "self", ".", "random_int", "(", "low", "=", "0", ",", "high", "=", "3", ",", "shape", "=", "[", "1", "]", ")", "\n", "patches_new", "[", "counter", ",", "new_ch", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "=", "1.", "-", "patches_new", "[", "\n", "counter", ",", "new_ch", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "\n", "\n", "", "patches_new", "[", "counter", "]", ".", "clamp_", "(", "0.", ",", "1.", ")", "\n", "", "if", "update_loc", "==", "1", ":", "\n", "# update location", "\n", "                            ", "loc_new", "[", "counter", "]", "+=", "(", "torch", ".", "randint", "(", "low", "=", "-", "sh_it", ",", "high", "=", "sh_it", "+", "1", ",", "size", "=", "[", "2", "]", ")", ")", "\n", "loc_new", "[", "counter", "]", ".", "clamp_", "(", "0", ",", "h", "-", "s", ")", "\n", "\n", "", "x_new", "[", "counter", ",", ":", ",", "loc_new", "[", "counter", ",", "0", "]", ":", "loc_new", "[", "counter", ",", "0", "]", "+", "s", ",", "\n", "loc_new", "[", "counter", ",", "1", "]", ":", "loc_new", "[", "counter", ",", "1", "]", "+", "s", "]", "=", "patches_new", "[", "counter", "]", ".", "clone", "(", ")", "\n", "\n", "# check loss of new candidate", "\n", "", "margin", ",", "loss", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y_curr", ")", "\n", "n_queries", "[", "idx_to_fool", "]", "+=", "1", "\n", "\n", "# update best solution", "\n", "idx_improved", "=", "(", "loss", "<", "loss_min_curr", ")", ".", "float", "(", ")", "\n", "idx_to_update", "=", "(", "idx_improved", ">", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "loss_min", "[", "idx_to_fool", "[", "idx_to_update", "]", "]", "=", "loss", "[", "idx_to_update", "]", "\n", "\n", "idx_miscl", "=", "(", "margin", "<", "-", "1e-6", ")", ".", "float", "(", ")", "\n", "idx_improved", "=", "torch", ".", "max", "(", "idx_improved", ",", "idx_miscl", ")", "\n", "nimpr", "=", "idx_improved", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "if", "nimpr", ">", "0.", ":", "\n", "                        ", "idx_improved", "=", "(", "idx_improved", ".", "view", "(", "-", "1", ")", ">", "0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "margin_min", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "margin", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "patches_coll", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "patches_new", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "loc", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "loc_new", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "\n", "# log results current iteration", "\n", "", "ind_succ", "=", "(", "margin_min", "<=", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "self", ".", "verbose", "and", "ind_succ", ".", "numel", "(", ")", "!=", "0", ":", "\n", "                        ", "self", ".", "logger", ".", "log", "(", "' '", ".", "join", "(", "[", "'{}'", ".", "format", "(", "it", "+", "1", ")", ",", "\n", "'- success rate={}/{} ({:.2%})'", ".", "format", "(", "\n", "ind_succ", ".", "numel", "(", ")", ",", "n_ex_total", ",", "\n", "float", "(", "ind_succ", ".", "numel", "(", ")", ")", "/", "n_ex_total", ")", ",", "\n", "'- avg # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- med # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "median", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- loss={:.3f}'", ".", "format", "(", "loss_min", ".", "mean", "(", ")", ")", ",", "\n", "'- max pert={:.0f}'", ".", "format", "(", "(", "(", "x_new", "-", "x_curr", ")", ".", "abs", "(", ")", ">", "0", "\n", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "view", "(", "x_new", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ")", ",", "\n", "#'- sit={:.0f} - sh={:.0f}'.format(s_it, sh_it),", "\n", "'{}'", ".", "format", "(", "' - loc'", "if", "update_loc", "==", "1.", "else", "''", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "if", "ind_succ", ".", "numel", "(", ")", "==", "n_ex_total", ":", "\n", "                        ", "break", "\n", "\n", "# apply patches", "\n", "", "", "for", "counter", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "x_best", "[", "counter", ",", ":", ",", "loc", "[", "counter", ",", "0", "]", ":", "loc", "[", "counter", ",", "0", "]", "+", "s", ",", "\n", "loc", "[", "counter", ",", "1", "]", ":", "loc", "[", "counter", ",", "1", "]", "+", "s", "]", "=", "patches_coll", "[", "counter", "]", ".", "clone", "(", ")", "\n", "\n", "", "", "elif", "self", ".", "norm", "==", "'patches_universal'", ":", "\n", "                ", "''' assumes square images and patches '''", "\n", "\n", "s", "=", "int", "(", "math", ".", "ceil", "(", "self", ".", "eps", "**", ".5", ")", ")", "\n", "x_best", "=", "x", ".", "clone", "(", ")", "\n", "self", ".", "n_imgs", "=", "x", ".", "shape", "[", "0", "]", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "loc", "=", "torch", ".", "randint", "(", "h", "-", "s", "+", "1", ",", "size", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "2", "]", ")", "\n", "\n", "# set when to start single channel updates", "\n", "it_start_cu", "=", "None", "\n", "for", "it", "in", "range", "(", "0", ",", "self", ".", "n_queries", ")", ":", "\n", "                    ", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", "**", ".5", "*", "s", ",", "1", ")", ")", "\n", "if", "s_it", "==", "1", ":", "\n", "                        ", "break", "\n", "", "", "it_start_cu", "=", "it", "+", "(", "self", ".", "n_queries", "-", "it", ")", "//", "2", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'starting single channel updates at query {}'", ".", "format", "(", "\n", "it_start_cu", ")", ")", "\n", "\n", "# initialize patch", "\n", "", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'using {} initialization'", ".", "format", "(", "self", ".", "init_patches", ")", ")", "\n", "", "patch_univ", "=", "self", ".", "get_init_patch", "(", "c", ",", "s", ")", "\n", "it_init", "=", "0", "\n", "\n", "loss_batch", "=", "float", "(", "1e10", ")", "\n", "n_succs", "=", "0", "\n", "n_iter", "=", "self", ".", "n_queries", "\n", "\n", "# init update batch", "\n", "assert", "not", "self", ".", "data_loader", "is", "None", "\n", "assert", "not", "self", ".", "resample_loc", "is", "None", "\n", "assert", "self", ".", "targeted", "\n", "new_train_imgs", "=", "[", "]", "\n", "n_newimgs", "=", "self", ".", "n_imgs", "+", "0", "\n", "n_imgsneeded", "=", "math", ".", "ceil", "(", "self", ".", "n_queries", "/", "self", ".", "resample_loc", ")", "*", "n_newimgs", "\n", "tot_imgs", "=", "0", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'imgs updated={}, imgs needed={}'", ".", "format", "(", "\n", "n_newimgs", ",", "n_imgsneeded", ")", ")", "\n", "", "while", "tot_imgs", "<", "min", "(", "100000", ",", "n_imgsneeded", ")", ":", "\n", "                    ", "x_toupdatetrain", ",", "_", "=", "next", "(", "self", ".", "data_loader", ")", "\n", "new_train_imgs", ".", "append", "(", "x_toupdatetrain", ")", "\n", "tot_imgs", "+=", "x_toupdatetrain", ".", "shape", "[", "0", "]", "\n", "", "newimgstoadd", "=", "torch", ".", "cat", "(", "new_train_imgs", ",", "axis", "=", "0", ")", "\n", "counter_resamplingimgs", "=", "0", "\n", "\n", "for", "it", "in", "range", "(", "it_init", ",", "n_iter", ")", ":", "\n", "# sample size and location of the update", "\n", "                    ", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", "**", ".5", "*", "s", ",", "1", ")", ")", "\n", "p_it", "=", "torch", ".", "randint", "(", "s", "-", "s_it", "+", "1", ",", "size", "=", "[", "2", "]", ")", "\n", "\n", "patch_new", "=", "patch_univ", ".", "clone", "(", ")", "\n", "\n", "if", "s_it", ">", "1", ":", "\n", "                        ", "patch_new", "[", "0", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "+=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "                        ", "old_clr", "=", "patch_new", "[", "0", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", ".", "clone", "(", ")", "\n", "new_clr", "=", "old_clr", ".", "clone", "(", ")", "\n", "if", "it", "<", "it_start_cu", ":", "\n", "                            ", "while", "(", "new_clr", "==", "old_clr", ")", ".", "all", "(", ")", ".", "item", "(", ")", ":", "\n", "                                ", "new_clr", "=", "self", ".", "random_choice", "(", "new_clr", ")", ".", "clone", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "", "else", ":", "\n", "# single channel update", "\n", "                            ", "new_ch", "=", "self", ".", "random_int", "(", "low", "=", "0", ",", "high", "=", "3", ",", "shape", "=", "[", "1", "]", ")", "\n", "new_clr", "[", "new_ch", "]", "=", "1.", "-", "new_clr", "[", "new_ch", "]", "\n", "\n", "", "patch_new", "[", "0", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "\n", "", "patch_new", ".", "clamp_", "(", "0.", ",", "1.", ")", "\n", "\n", "# compute loss for new candidate", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "\n", "for", "counter", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "loc_new", "=", "loc", "[", "counter", "]", "\n", "x_new", "[", "counter", ",", ":", ",", "loc_new", "[", "0", "]", ":", "loc_new", "[", "0", "]", "+", "s", ",", "loc_new", "[", "1", "]", ":", "loc_new", "[", "1", "]", "+", "s", "]", "=", "0.", "\n", "x_new", "[", "counter", ",", ":", ",", "loc_new", "[", "0", "]", ":", "loc_new", "[", "0", "]", "+", "s", ",", "loc_new", "[", "1", "]", ":", "loc_new", "[", "1", "]", "+", "s", "]", "+=", "patch_new", "[", "0", "]", "\n", "\n", "", "margin_run", ",", "loss_run", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y", ")", "\n", "if", "self", ".", "loss", "==", "'ce'", ":", "\n", "                        ", "loss_run", "+=", "x_new", ".", "shape", "[", "0", "]", "\n", "", "loss_new", "=", "loss_run", ".", "sum", "(", ")", "\n", "n_succs_new", "=", "(", "margin_run", "<", "-", "1e-6", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "# accept candidate if loss improves", "\n", "if", "loss_new", "<", "loss_batch", ":", "\n", "                        ", "is_accepted", "=", "True", "\n", "loss_batch", "=", "loss_new", "+", "0.", "\n", "patch_univ", "=", "patch_new", ".", "clone", "(", ")", "\n", "n_succs", "=", "n_succs_new", "+", "0", "\n", "", "else", ":", "\n", "                        ", "is_accepted", "=", "False", "\n", "\n", "# sample new locations and images", "\n", "", "if", "(", "it", "+", "1", ")", "%", "self", ".", "resample_loc", "==", "0", ":", "\n", "                        ", "newimgstoadd_it", "=", "newimgstoadd", "[", "counter_resamplingimgs", "*", "n_newimgs", ":", "(", "\n", "counter_resamplingimgs", "+", "1", ")", "*", "n_newimgs", "]", ".", "clone", "(", ")", ".", "cuda", "(", ")", "\n", "new_batch", "=", "[", "x", "[", "n_newimgs", ":", "]", ".", "clone", "(", ")", ",", "newimgstoadd_it", ".", "clone", "(", ")", "]", "\n", "x", "=", "torch", ".", "cat", "(", "new_batch", ",", "dim", "=", "0", ")", "\n", "assert", "x", ".", "shape", "[", "0", "]", "==", "self", ".", "n_imgs", "\n", "\n", "loc", "=", "torch", ".", "randint", "(", "h", "-", "s", "+", "1", ",", "size", "=", "[", "self", ".", "n_imgs", ",", "2", "]", ")", "\n", "assert", "loc", ".", "shape", "==", "(", "self", ".", "n_imgs", ",", "2", ")", "\n", "\n", "loss_batch", "=", "loss_batch", "*", "0.", "+", "1e6", "\n", "counter_resamplingimgs", "+=", "1", "\n", "\n", "# logging current iteration", "\n", "", "if", "self", ".", "verbose", ":", "\n", "                        ", "self", ".", "logger", ".", "log", "(", "' '", ".", "join", "(", "[", "'{}'", ".", "format", "(", "it", "+", "1", ")", ",", "\n", "'- success rate={}/{} ({:.2%})'", ".", "format", "(", "\n", "n_succs", ",", "n_ex_total", ",", "\n", "float", "(", "n_succs", ")", "/", "n_ex_total", ")", ",", "\n", "'- loss={:.3f}'", ".", "format", "(", "loss_batch", ")", ",", "\n", "'- max pert={:.0f}'", ".", "format", "(", "(", "(", "x_new", "-", "x", ")", ".", "abs", "(", ")", ">", "0", "\n", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "view", "(", "x_new", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "# apply patches on the initial images", "\n", "", "", "for", "counter", "in", "range", "(", "x_best", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "loc_new", "=", "loc", "[", "counter", "]", "\n", "x_best", "[", "counter", ",", ":", ",", "loc_new", "[", "0", "]", ":", "loc_new", "[", "0", "]", "+", "s", ",", "loc_new", "[", "1", "]", ":", "loc_new", "[", "1", "]", "+", "s", "]", "=", "0.", "\n", "x_best", "[", "counter", ",", ":", ",", "loc_new", "[", "0", "]", ":", "loc_new", "[", "0", "]", "+", "s", ",", "loc_new", "[", "1", "]", ":", "loc_new", "[", "1", "]", "+", "s", "]", "+=", "patch_univ", "[", "0", "]", "\n", "\n", "", "", "elif", "self", ".", "norm", "==", "'frames'", ":", "\n", "# set width and indices of frames", "\n", "                ", "mask", "=", "torch", ".", "zeros", "(", "x", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "s", "=", "self", ".", "eps", "+", "0", "\n", "mask", "[", ":", "s", "]", "=", "1.", "\n", "mask", "[", "-", "s", ":", "]", "=", "1.", "\n", "mask", "[", ":", ",", ":", "s", "]", "=", "1.", "\n", "mask", "[", ":", ",", "-", "s", ":", "]", "=", "1.", "\n", "ind", "=", "(", "mask", "==", "1.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "eps", "=", "ind", ".", "shape", "[", "0", "]", "\n", "x_best", "=", "x", ".", "clone", "(", ")", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "mask", "=", "mask", ".", "view", "(", "1", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "mask_frame", "=", "torch", ".", "ones", "(", "[", "1", ",", "c", ",", "h", ",", "w", "]", ",", "device", "=", "x", ".", "device", ")", "*", "mask", "\n", "#", "\n", "\n", "# set when starting single channel updates", "\n", "it_start_cu", "=", "None", "\n", "for", "it", "in", "range", "(", "0", ",", "self", ".", "n_queries", ")", ":", "\n", "                    ", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", ",", "1", ")", ")", "\n", "if", "s_it", "==", "1", ":", "\n", "                        ", "break", "\n", "", "", "it_start_cu", "=", "it", "+", "(", "self", ".", "n_queries", "-", "it", ")", "//", "2", "\n", "#it_start_cu = 10000", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'starting single channel updates at query {}'", ".", "format", "(", "\n", "it_start_cu", ")", ")", "\n", "\n", "# initialize frames", "\n", "", "x_best", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "=", "self", ".", "random_choice", "(", "\n", "[", "x", ".", "shape", "[", "0", "]", ",", "c", ",", "eps", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "\n", "margin_min", ",", "loss_min", "=", "self", ".", "margin_and_loss", "(", "x_best", ",", "y", ")", "\n", "n_queries", "=", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "for", "it", "in", "range", "(", "1", ",", "self", ".", "n_queries", ")", ":", "\n", "# check points still to fool", "\n", "                    ", "idx_to_fool", "=", "(", "margin_min", ">", "-", "1e-6", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "x_curr", "=", "self", ".", "check_shape", "(", "x", "[", "idx_to_fool", "]", ")", "\n", "x_best_curr", "=", "self", ".", "check_shape", "(", "x_best", "[", "idx_to_fool", "]", ")", "\n", "y_curr", "=", "y", "[", "idx_to_fool", "]", "\n", "margin_min_curr", "=", "margin_min", "[", "idx_to_fool", "]", "\n", "loss_min_curr", "=", "loss_min", "[", "idx_to_fool", "]", "\n", "\n", "if", "len", "(", "y_curr", ".", "shape", ")", "==", "0", ":", "\n", "                        ", "y_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "margin_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "loss_min_curr", ".", "unsqueeze_", "(", "0", ")", "\n", "idx_to_fool", ".", "unsqueeze_", "(", "0", ")", "\n", "\n", "# sample update", "\n", "", "s_it", "=", "max", "(", "int", "(", "self", ".", "p_selection", "(", "it", ")", ")", ",", "1", ")", "\n", "ind_it", "=", "torch", ".", "randperm", "(", "eps", ")", "[", "0", "]", "\n", "\n", "x_new", "=", "x_best_curr", ".", "clone", "(", ")", "\n", "if", "s_it", ">", "1", ":", "\n", "                        ", "dir_h", "=", "self", ".", "random_choice", "(", "[", "1", "]", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", "\n", "dir_w", "=", "self", ".", "random_choice", "(", "[", "1", "]", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", "\n", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "\n", "", "for", "counter", "in", "range", "(", "x_curr", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "if", "s_it", ">", "1", ":", "\n", "                            ", "for", "counter_h", "in", "range", "(", "s_it", ")", ":", "\n", "                                ", "for", "counter_w", "in", "range", "(", "s_it", ")", ":", "\n", "                                    ", "x_new", "[", "counter", ",", ":", ",", "(", "ind", "[", "ind_it", ",", "0", "]", "+", "dir_h", "*", "counter_h", ")", ".", "clamp", "(", "0", ",", "h", "-", "1", ")", ",", "\n", "(", "ind", "[", "ind_it", ",", "1", "]", "+", "dir_w", "*", "counter_w", ")", ".", "clamp", "(", "0", ",", "w", "-", "1", ")", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "", "", "", "else", ":", "\n", "                            ", "p_it", "=", "ind", "[", "ind_it", "]", ".", "clone", "(", ")", "\n", "old_clr", "=", "x_new", "[", "counter", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", ".", "clone", "(", ")", "\n", "new_clr", "=", "old_clr", ".", "clone", "(", ")", "\n", "if", "it", "<", "it_start_cu", ":", "\n", "                                ", "while", "(", "new_clr", "==", "old_clr", ")", ".", "all", "(", ")", ".", "item", "(", ")", ":", "\n", "                                    ", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", ".", "clone", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "", "else", ":", "\n", "# single channel update", "\n", "                                ", "new_ch", "=", "self", ".", "random_int", "(", "low", "=", "0", ",", "high", "=", "3", ",", "shape", "=", "[", "1", "]", ")", "\n", "new_clr", "[", "new_ch", "]", "=", "1.", "-", "new_clr", "[", "new_ch", "]", "\n", "", "x_new", "[", "counter", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "\n", "", "", "x_new", ".", "clamp_", "(", "0.", ",", "1.", ")", "\n", "x_new", "=", "(", "x_new", "-", "x_curr", ")", "*", "mask_frame", "+", "x_curr", "\n", "\n", "# check loss of new candidate", "\n", "margin", ",", "loss", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y_curr", ")", "\n", "n_queries", "[", "idx_to_fool", "]", "+=", "1", "\n", "\n", "# update best solution", "\n", "idx_improved", "=", "(", "loss", "<", "loss_min_curr", ")", ".", "float", "(", ")", "\n", "idx_to_update", "=", "(", "idx_improved", ">", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "loss_min", "[", "idx_to_fool", "[", "idx_to_update", "]", "]", "=", "loss", "[", "idx_to_update", "]", "\n", "\n", "idx_miscl", "=", "(", "margin", "<", "-", "1e-6", ")", ".", "float", "(", ")", "\n", "idx_improved", "=", "torch", ".", "max", "(", "idx_improved", ",", "idx_miscl", ")", "\n", "nimpr", "=", "idx_improved", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "if", "nimpr", ">", "0.", ":", "\n", "                        ", "idx_improved", "=", "(", "idx_improved", ".", "view", "(", "-", "1", ")", ">", "0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "margin_min", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "margin", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "x_best", "[", "idx_to_fool", "[", "idx_improved", "]", "]", "=", "x_new", "[", "idx_improved", "]", ".", "clone", "(", ")", "\n", "\n", "# log results current iteration", "\n", "", "ind_succ", "=", "(", "margin_min", "<=", "0.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "self", ".", "verbose", "and", "ind_succ", ".", "numel", "(", ")", "!=", "0", ":", "\n", "                        ", "self", ".", "logger", ".", "log", "(", "' '", ".", "join", "(", "[", "'{}'", ".", "format", "(", "it", "+", "1", ")", ",", "\n", "'- success rate={}/{} ({:.2%})'", ".", "format", "(", "\n", "ind_succ", ".", "numel", "(", ")", ",", "n_ex_total", ",", "\n", "float", "(", "ind_succ", ".", "numel", "(", ")", ")", "/", "n_ex_total", ")", ",", "\n", "'- avg # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- med # queries={:.1f}'", ".", "format", "(", "\n", "n_queries", "[", "ind_succ", "]", ".", "median", "(", ")", ".", "item", "(", ")", ")", ",", "\n", "'- loss={:.3f}'", ".", "format", "(", "loss_min", ".", "mean", "(", ")", ")", ",", "\n", "'- max pert={:.0f}'", ".", "format", "(", "(", "(", "x_new", "-", "x_curr", ")", ".", "abs", "(", ")", ">", "0", "\n", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "view", "(", "x_new", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ")", ",", "\n", "#'- min pert={:.0f}'.format(((x_new - x_curr).abs() > 0", "\n", "#).max(1)[0].view(x_new.shape[0], -1).sum(-1).min()),", "\n", "#'- sit={:.0f} - indit={}'.format(s_it, ind_it.item()),", "\n", "]", ")", ")", "\n", "\n", "", "if", "ind_succ", ".", "numel", "(", ")", "==", "n_ex_total", ":", "\n", "                        ", "break", "\n", "\n", "\n", "", "", "", "elif", "self", ".", "norm", "==", "'frames_universal'", ":", "\n", "# set width and indices of frames", "\n", "                ", "mask", "=", "torch", ".", "zeros", "(", "x", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "s", "=", "self", ".", "eps", "+", "0", "\n", "mask", "[", ":", "s", "]", "=", "1.", "\n", "mask", "[", "-", "s", ":", "]", "=", "1.", "\n", "mask", "[", ":", ",", ":", "s", "]", "=", "1.", "\n", "mask", "[", ":", ",", "-", "s", ":", "]", "=", "1.", "\n", "ind", "=", "(", "mask", "==", "1.", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "eps", "=", "ind", ".", "shape", "[", "0", "]", "\n", "x_best", "=", "x", ".", "clone", "(", ")", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "mask", "=", "mask", ".", "view", "(", "1", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "mask_frame", "=", "torch", ".", "ones", "(", "[", "1", ",", "c", ",", "h", ",", "w", "]", ",", "device", "=", "x", ".", "device", ")", "*", "mask", "\n", "frame_univ", "=", "self", ".", "random_choice", "(", "[", "1", ",", "c", ",", "eps", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "\n", "# set when to start single channel updates", "\n", "it_start_cu", "=", "None", "\n", "for", "it", "in", "range", "(", "0", ",", "self", ".", "n_queries", ")", ":", "\n", "                    ", "s_it", "=", "int", "(", "max", "(", "self", ".", "p_selection", "(", "it", ")", "*", "s", ",", "1", ")", ")", "\n", "if", "s_it", "==", "1", ":", "\n", "                        ", "break", "\n", "", "", "it_start_cu", "=", "it", "+", "(", "self", ".", "n_queries", "-", "it", ")", "//", "2", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'starting single channel updates at query {}'", ".", "format", "(", "\n", "it_start_cu", ")", ")", "\n", "\n", "", "self", ".", "n_imgs", "=", "x", ".", "shape", "[", "0", "]", "\n", "loss_batch", "=", "float", "(", "1e10", ")", "\n", "n_queries", "=", "torch", ".", "ones_like", "(", "y", ")", ".", "float", "(", ")", "\n", "\n", "# init update batch", "\n", "assert", "not", "self", ".", "data_loader", "is", "None", "\n", "assert", "not", "self", ".", "resample_loc", "is", "None", "\n", "assert", "self", ".", "targeted", "\n", "new_train_imgs", "=", "[", "]", "\n", "n_newimgs", "=", "self", ".", "n_imgs", "+", "0", "\n", "n_imgsneeded", "=", "math", ".", "ceil", "(", "self", ".", "n_queries", "/", "self", ".", "resample_loc", ")", "*", "n_newimgs", "\n", "tot_imgs", "=", "0", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "'imgs updated={}, imgs needed={}'", ".", "format", "(", "\n", "n_newimgs", ",", "n_imgsneeded", ")", ")", "\n", "", "while", "tot_imgs", "<", "min", "(", "100000", ",", "n_imgsneeded", ")", ":", "\n", "                    ", "x_toupdatetrain", ",", "_", "=", "next", "(", "self", ".", "data_loader", ")", "\n", "new_train_imgs", ".", "append", "(", "x_toupdatetrain", ")", "\n", "tot_imgs", "+=", "x_toupdatetrain", ".", "shape", "[", "0", "]", "\n", "", "newimgstoadd", "=", "torch", ".", "cat", "(", "new_train_imgs", ",", "axis", "=", "0", ")", "\n", "counter_resamplingimgs", "=", "0", "\n", "\n", "for", "it", "in", "range", "(", "self", ".", "n_queries", ")", ":", "\n", "# sample update", "\n", "                    ", "s_it", "=", "max", "(", "int", "(", "self", ".", "p_selection", "(", "it", ")", "*", "self", ".", "eps", ")", ",", "1", ")", "\n", "ind_it", "=", "torch", ".", "randperm", "(", "eps", ")", "[", "0", "]", "\n", "\n", "mask_frame", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "=", "0", "\n", "mask_frame", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "+=", "frame_univ", "\n", "\n", "if", "s_it", ">", "1", ":", "\n", "                        ", "dir_h", "=", "self", ".", "random_choice", "(", "[", "1", "]", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", "\n", "dir_w", "=", "self", ".", "random_choice", "(", "[", "1", "]", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", "\n", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", "]", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "\n", "for", "counter_h", "in", "range", "(", "s_it", ")", ":", "\n", "                            ", "for", "counter_w", "in", "range", "(", "s_it", ")", ":", "\n", "                                ", "mask_frame", "[", "0", ",", ":", ",", "(", "ind", "[", "ind_it", ",", "0", "]", "+", "dir_h", "*", "counter_h", ")", ".", "clamp", "(", "0", ",", "h", "-", "1", ")", ",", "\n", "(", "ind", "[", "ind_it", ",", "1", "]", "+", "dir_w", "*", "counter_w", ")", ".", "clamp", "(", "0", ",", "w", "-", "1", ")", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "", "", "", "else", ":", "\n", "                        ", "p_it", "=", "ind", "[", "ind_it", "]", "\n", "old_clr", "=", "mask_frame", "[", "0", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", ".", "clone", "(", ")", "\n", "new_clr", "=", "old_clr", ".", "clone", "(", ")", "\n", "if", "it", "<", "it_start_cu", ":", "\n", "                            ", "while", "(", "new_clr", "==", "old_clr", ")", ".", "all", "(", ")", ".", "item", "(", ")", ":", "\n", "                                ", "new_clr", "=", "self", ".", "random_choice", "(", "[", "c", ",", "1", ",", "1", "]", ")", ".", "clone", "(", ")", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "", "", "else", ":", "\n", "# single channel update", "\n", "                            ", "new_ch", "=", "self", ".", "random_int", "(", "low", "=", "0", ",", "high", "=", "3", ",", "shape", "=", "[", "1", "]", ")", "\n", "new_clr", "[", "new_ch", "]", "=", "1.", "-", "new_clr", "[", "new_ch", "]", "\n", "", "mask_frame", "[", "0", ",", ":", ",", "p_it", "[", "0", "]", ":", "p_it", "[", "0", "]", "+", "s_it", ",", "p_it", "[", "1", "]", ":", "p_it", "[", "1", "]", "+", "s_it", "]", "=", "new_clr", ".", "clone", "(", ")", "\n", "\n", "", "frame_new", "=", "mask_frame", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", ".", "clone", "(", ")", "\n", "frame_new", ".", "clamp_", "(", "0.", ",", "1.", ")", "\n", "if", "len", "(", "frame_new", ".", "shape", ")", "==", "2", ":", "\n", "                        ", "frame_new", ".", "unsqueeze_", "(", "0", ")", "\n", "\n", "", "x_new", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "=", "0.", "\n", "x_new", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "+=", "frame_new", "\n", "\n", "margin_run", ",", "loss_run", "=", "self", ".", "margin_and_loss", "(", "x_new", ",", "y", ")", "\n", "if", "self", ".", "loss", "==", "'ce'", ":", "\n", "                        ", "loss_run", "+=", "x_new", ".", "shape", "[", "0", "]", "\n", "", "loss_new", "=", "loss_run", ".", "sum", "(", ")", "\n", "n_succs_new", "=", "(", "margin_run", "<", "-", "1e-6", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "# accept candidate if loss improves", "\n", "if", "loss_new", "<", "loss_batch", ":", "\n", "#is_accepted = True", "\n", "                        ", "loss_batch", "=", "loss_new", "+", "0.", "\n", "frame_univ", "=", "frame_new", ".", "clone", "(", ")", "\n", "n_succs", "=", "n_succs_new", "+", "0", "\n", "\n", "# sample new images", "\n", "", "if", "(", "it", "+", "1", ")", "%", "self", ".", "resample_loc", "==", "0", ":", "\n", "                        ", "newimgstoadd_it", "=", "newimgstoadd", "[", "counter_resamplingimgs", "*", "n_newimgs", ":", "(", "\n", "counter_resamplingimgs", "+", "1", ")", "*", "n_newimgs", "]", ".", "clone", "(", ")", ".", "cuda", "(", ")", "\n", "new_batch", "=", "[", "x", "[", "n_newimgs", ":", "]", ".", "clone", "(", ")", ",", "newimgstoadd_it", ".", "clone", "(", ")", "]", "\n", "x", "=", "torch", ".", "cat", "(", "new_batch", ",", "dim", "=", "0", ")", "\n", "assert", "x", ".", "shape", "[", "0", "]", "==", "self", ".", "n_imgs", "\n", "\n", "loss_batch", "=", "loss_batch", "*", "0.", "+", "1e6", "\n", "x_new", "=", "x", ".", "clone", "(", ")", "\n", "counter_resamplingimgs", "+=", "1", "\n", "\n", "# loggin current iteration", "\n", "", "if", "self", ".", "verbose", ":", "\n", "                        ", "self", ".", "logger", ".", "log", "(", "' '", ".", "join", "(", "[", "'{}'", ".", "format", "(", "it", "+", "1", ")", ",", "\n", "'- success rate={}/{} ({:.2%})'", ".", "format", "(", "\n", "n_succs", ",", "n_ex_total", ",", "\n", "float", "(", "n_succs", ")", "/", "n_ex_total", ")", ",", "\n", "'- loss={:.3f}'", ".", "format", "(", "loss_batch", ")", ",", "\n", "'- max pert={:.0f}'", ".", "format", "(", "(", "(", "x_new", "-", "x", ")", ".", "abs", "(", ")", ">", "0", "\n", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "view", "(", "x_new", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "# apply frame on initial images", "\n", "", "", "x_best", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "=", "0.", "\n", "x_best", "[", ":", ",", ":", ",", "ind", "[", ":", ",", "0", "]", ",", "ind", "[", ":", ",", "1", "]", "]", "+=", "frame_univ", "\n", "\n", "", "", "return", "n_queries", ",", "x_best", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.perturb": [[887, 953], ["rs_attacks.RSAttack.init_hyperparam", "x.clone", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "time.time", "torch.random.manual_seed", "torch.random.manual_seed", "torch.random.manual_seed", "torch.random.manual_seed", "torch.cuda.random.manual_seed", "torch.cuda.random.manual_seed", "torch.cuda.random.manual_seed", "torch.cuda.random.manual_seed", "numpy.random.seed", "range", "rs_attacks.RSAttack.detach().clone().long().to", "acc.nonzero().squeeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "ind_to_fool.unsqueeze.unsqueeze.unsqueeze", "ind_to_fool.unsqueeze.unsqueeze.numel", "x[].clone", "y[].clone", "rs_attacks.RSAttack.attack_single_run", "rs_attacks.RSAttack.predict", "adv_curr[].clone", "qr_curr[].clone", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "rs_attacks.RSAttack.predict", "y_pred.detach().clone().long().to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "rs_attacks.RSAttack.predict", "rs_attacks.RSAttack.random_target_classes", "rs_attacks.RSAttack.detach().clone().long", "rs_attacks.RSAttack.predict().max", "rs_attacks.RSAttack.predict().max", "acc.nonzero", "print", "rs_attacks.RSAttack.max", "rs_attacks.RSAttack.max", "y_pred.detach().clone().long", "rs_attacks.RSAttack.detach().clone", "rs_attacks.RSAttack.predict", "rs_attacks.RSAttack.predict", "rs_attacks.RSAttack.max", "rs_attacks.RSAttack.max", "acc.float().mean", "time.time", "y_pred.detach().clone", "rs_attacks.RSAttack.detach", "acc.float", "y_pred.detach"], "methods", ["home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.init_hyperparam", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.attack_single_run", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.rs_attacks.RSAttack.random_target_classes", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict", "home.repos.pwc.inspect_result.fra31_sparse-rs.None.eval.PretrainedModel.predict"], ["", "def", "perturb", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param x:           clean images\n        :param y:           untargeted attack -> clean labels,\n                            if None we use the predicted labels\n                            targeted attack -> target labels, if None random classes,\n                            different from the predicted ones, are sampled\n        \"\"\"", "\n", "\n", "self", ".", "init_hyperparam", "(", "x", ")", "\n", "\n", "adv", "=", "x", ".", "clone", "(", ")", "\n", "qr", "=", "torch", ".", "zeros", "(", "[", "x", ".", "shape", "[", "0", "]", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "y", "is", "None", ":", "\n", "            ", "if", "not", "self", ".", "targeted", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "output", "=", "self", ".", "predict", "(", "x", ")", "\n", "y_pred", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "y", "=", "y_pred", ".", "detach", "(", ")", ".", "clone", "(", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "", "else", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "output", "=", "self", ".", "predict", "(", "x", ")", "\n", "n_classes", "=", "output", ".", "shape", "[", "-", "1", "]", "\n", "y_pred", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "y", "=", "self", ".", "random_target_classes", "(", "y_pred", ",", "n_classes", ")", "\n", "", "", "", "else", ":", "\n", "            ", "y", "=", "y", ".", "detach", "(", ")", ".", "clone", "(", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "if", "not", "self", ".", "targeted", ":", "\n", "            ", "acc", "=", "self", ".", "predict", "(", "x", ")", ".", "max", "(", "1", ")", "[", "1", "]", "==", "y", "\n", "", "else", ":", "\n", "            ", "acc", "=", "self", ".", "predict", "(", "x", ")", ".", "max", "(", "1", ")", "[", "1", "]", "!=", "y", "\n", "\n", "", "startt", "=", "time", ".", "time", "(", ")", "\n", "\n", "torch", ".", "random", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "random", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "\n", "for", "counter", "in", "range", "(", "self", ".", "n_restarts", ")", ":", "\n", "            ", "ind_to_fool", "=", "acc", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "len", "(", "ind_to_fool", ".", "shape", ")", "==", "0", ":", "\n", "                ", "ind_to_fool", "=", "ind_to_fool", ".", "unsqueeze", "(", "0", ")", "\n", "", "if", "ind_to_fool", ".", "numel", "(", ")", "!=", "0", ":", "\n", "                ", "x_to_fool", "=", "x", "[", "ind_to_fool", "]", ".", "clone", "(", ")", "\n", "y_to_fool", "=", "y", "[", "ind_to_fool", "]", ".", "clone", "(", ")", "\n", "\n", "qr_curr", ",", "adv_curr", "=", "self", ".", "attack_single_run", "(", "x_to_fool", ",", "y_to_fool", ")", "\n", "\n", "output_curr", "=", "self", ".", "predict", "(", "adv_curr", ")", "\n", "if", "not", "self", ".", "targeted", ":", "\n", "                    ", "acc_curr", "=", "output_curr", ".", "max", "(", "1", ")", "[", "1", "]", "==", "y_to_fool", "\n", "", "else", ":", "\n", "                    ", "acc_curr", "=", "output_curr", ".", "max", "(", "1", ")", "[", "1", "]", "!=", "y_to_fool", "\n", "", "ind_curr", "=", "(", "acc_curr", "==", "0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "acc", "[", "ind_to_fool", "[", "ind_curr", "]", "]", "=", "0", "\n", "adv", "[", "ind_to_fool", "[", "ind_curr", "]", "]", "=", "adv_curr", "[", "ind_curr", "]", ".", "clone", "(", ")", "\n", "qr", "[", "ind_to_fool", "[", "ind_curr", "]", "]", "=", "qr_curr", "[", "ind_curr", "]", ".", "clone", "(", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "print", "(", "'restart {} - robust accuracy: {:.2%}'", ".", "format", "(", "\n", "counter", ",", "acc", ".", "float", "(", ")", ".", "mean", "(", ")", ")", ",", "\n", "'- cum. time: {:.1f} s'", ".", "format", "(", "\n", "time", ".", "time", "(", ")", "-", "startt", ")", ")", "\n", "\n", "", "", "", "return", "qr", ",", "adv", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.__init__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_path", ")", ":", "\n", "        ", "self", ".", "log_path", "=", "log_path", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.Logger.log": [[9, 15], ["print", "open", "f.write", "f.flush"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "str_to_log", ")", ":", "\n", "        ", "print", "(", "str_to_log", ")", "\n", "if", "not", "self", ".", "log_path", "is", "None", ":", "\n", "            ", "with", "open", "(", "self", ".", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "str_to_log", "+", "'\\n'", ")", "\n", "f", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.SingleChannelModel.__init__": [[21, 25], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "if", "isinstance", "(", "model", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "assert", "not", "model", ".", "training", "\n", "", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fra31_sparse-rs.None.utils.SingleChannelModel.__call__": [[26, 28], ["utils.SingleChannelModel.model", "x.view"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", "//", "3", ")", ")", "\n", "\n"]]}