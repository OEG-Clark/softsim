{"home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.GatedRGCN.__init__": [[31, 44], ["torch.nn.Module.__init__", "torch_geometric.nn.RGCNConv", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Tanh", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "num_relations", ")", ":", "\n", "        ", "super", "(", "GatedRGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "num_relations", "=", "num_relations", "\n", "self", ".", "RGCN1", "=", "RGCNConv", "(", "\n", "in_channels", "=", "out_channels", ",", "out_channels", "=", "out_channels", ",", "num_relations", "=", "num_relations", ")", "\n", "self", ".", "attention_layer", "=", "nn", ".", "Linear", "(", "2", "*", "out_channels", ",", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "\n", "self", ".", "attention_layer", ".", "weight", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'sigmoid'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.GatedRGCN.forward": [[45, 53], ["Tools.GatedRGCN.RGCN1", "Tools.GatedRGCN.sigmoid", "Tools.GatedRGCN.attention_layer", "torch.cat", "Tools.GatedRGCN.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "node_features", ",", "edge_index", ",", "edge_type", ")", ":", "\n", "\n", "        ", "u_0", "=", "self", ".", "RGCN1", "(", "node_features", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "sigmoid", "(", "self", ".", "attention_layer", "(", "\n", "torch", ".", "cat", "(", "(", "u_0", ",", "node_features", ")", ",", "dim", "=", "1", ")", ")", ")", "\n", "h_1", "=", "self", ".", "tanh", "(", "u_0", ")", "*", "a_1", "+", "node_features", "*", "(", "1", "-", "a_1", ")", "\n", "\n", "return", "h_1", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.attention.__init__": [[55, 61], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "input_dim", ",", "output_dim", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "linear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.attention.forward": [[62, 73], ["Tools.attention.linear().squeeze", "len", "range", "Tools.attention.softmax", "range", "Tools.attention.append", "torch.stack", "Tools.attention.linear", "torch.dot"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "att_val", ",", "input", ")", ":", "\n", "        ", "att_val", "=", "self", ".", "linear", "(", "att_val", ")", ".", "squeeze", "(", "0", ")", "\n", "att_a", "=", "[", "]", "\n", "input_num", "=", "len", "(", "input", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "input_num", ")", ":", "\n", "            ", "att_a", ".", "append", "(", "torch", ".", "dot", "(", "att_val", ",", "input", "[", "i", "]", ")", ")", "\n", "", "att_a", "=", "self", ".", "softmax", "(", "torch", ".", "stack", "(", "att_a", ")", ")", "\n", "output", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "input_num", ")", ":", "\n", "            ", "output", "=", "output", "+", "att_a", "[", "i", "]", "*", "input", "[", "i", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb": [[7, 13], ["len", "output.append"], "function", ["None"], ["def", "load_emb", "(", "idx", ",", "emb", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "if", "len", "(", "idx", ")", ">", "0", ":", "\n", "        ", "for", "i", "in", "idx", ":", "\n", "            ", "output", ".", "append", "(", "emb", "[", "i", "]", ")", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link": [[14, 18], ["torch.stack", "torch.cat"], "function", ["None"], ["", "def", "connect_link", "(", "link_a", ",", "link_b", ",", "bias", ")", ":", "\n", "    ", "link_b", "=", "torch", ".", "stack", "(", "[", "link_b", "[", "0", "]", ",", "link_b", "[", "1", "]", "+", "bias", "]", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "link_a", ",", "link_b", "]", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link": [[20, 29], ["link_input.tolist.tolist", "range", "torch.tensor", "len", "range", "random.randint", "new_link[].append"], "function", ["None"], ["", "def", "rand_del_link", "(", "link_input", ",", "rate", ")", ":", "\n", "    ", "new_link", "=", "[", "[", "]", ",", "[", "]", "]", "\n", "link_input", "=", "link_input", ".", "tolist", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "link_input", "[", "0", "]", ")", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "0", ",", "100", ")", "<", "rate", ":", "\n", "            ", "continue", "\n", "", "for", "j", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "            ", "new_link", "[", "j", "]", ".", "append", "(", "link_input", "[", "j", "]", "[", "i", "]", ")", "\n", "", "", "return", "torch", ".", "tensor", "(", "new_link", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.get_metrics": [[74, 81], ["torch.argmax", "range", "len", "len"], "function", ["None"], ["", "", "def", "get_metrics", "(", "probs", ",", "labels", ")", ":", "\n", "    ", "probs", "=", "torch", ".", "argmax", "(", "probs", ",", "dim", "=", "1", ")", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "probs", ")", ")", ":", "\n", "        ", "if", "probs", "[", "i", "]", "==", "labels", "[", "i", "]", ":", "\n", "            ", "correct", "+=", "1", "\n", "", "", "return", "correct", "/", "len", "(", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.pad_collate": [[83, 85], ["None"], "function", ["None"], ["", "def", "pad_collate", "(", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.f1_score": [[87, 92], ["labels.tolist", "torch.argmax().tolist", "sklearn.metrics.f1_score", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score"], ["", "def", "f1_score", "(", "probs", ",", "labels", ")", ":", "\n", "    ", "y_true", "=", "labels", ".", "tolist", "(", ")", "\n", "y_pred", "=", "(", "torch", ".", "argmax", "(", "probs", ",", "dim", "=", "1", ")", ")", ".", "tolist", "(", ")", "\n", "F1_result", "=", "f1", "(", "y_true", ",", "y_pred", ",", "average", "=", "'binary'", ")", "\n", "return", "F1_result", "\n", "", ""]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_Dataset.KSDDataset.__init__": [[10, 140], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "len", "print", "range", "range", "len", "int", "len", "Tools.load_emb", "Tools.load_emb", "Tools.load_emb", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "torch.tensor", "torch.stack", "torch.cat", "KSD_Dataset.KSDDataset.graph.append", "len", "len", "Tools.load_emb", "Tools.load_emb", "Tools.load_emb", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "Tools.connect_link", "torch.tensor", "torch.stack", "torch.cat", "KSD_Dataset.KSDDataset.graph.append", "graph_ent2id.tolist", "[].tolist", "graph_ent2id.tolist", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "graph_ent2id.tolist", "[].tolist", "graph_ent2id.tolist", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "Tools.rand_del_link", "len", "len", "torch.cat", "torch.cat", "len", "len", "torch.cat", "torch.cat", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.load_emb", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.connect_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.Tools.rand_del_link"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "foldid", ",", "path", ",", "del_type", "=", "-", "1", ",", "del_rate", "=", "0", ")", ":", "\n", "####################################", "\n", "        ", "count", "=", "0", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "graph", "=", "[", "]", "\n", "# input article id of each fold, fold[i][0] is train; fold[i][1] is dev", "\n", "foldidx", "=", "torch", ".", "load", "(", "path", "+", "'foldindex.pt'", ")", "# list", "\n", "###", "\n", "sen2sen", "=", "torch", ".", "load", "(", "path", "+", "'sen2sen.pt'", ")", "# list", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2ent", "=", "torch", ".", "load", "(", "path", "+", "'sen2ent.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2top", "=", "torch", ".", "load", "(", "path", "+", "'sen2top.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2sent", "=", "torch", ".", "load", "(", "path", "+", "'sen2sent.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2quo", "=", "torch", ".", "load", "(", "path", "+", "'sen2quo.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2ten", "=", "torch", ".", "load", "(", "path", "+", "'sen2ten.pt'", ")", "\n", "###", "\n", "# input embedding, dict, key is id", "\n", "art_emb", "=", "torch", ".", "load", "(", "path", "+", "'ArticleEmbedding.pt'", ")", "# dict key=0~645", "\n", "ent_emb", "=", "torch", ".", "load", "(", "path", "+", "'EntityEmbedding.pt'", ")", "# dict key= entityid", "\n", "top_emb", "=", "torch", ".", "load", "(", "path", "+", "'TopicEmbedding.pt'", ")", "\n", "kgp_emb", "=", "torch", ".", "load", "(", "path", "+", "'KGPEmbedding.pt'", ")", "\n", "# input label", "\n", "label", "=", "torch", ".", "load", "(", "path", "+", "'Label.pt'", ")", "\n", "\n", "if", "self", ".", "name", "==", "\"train\"", ":", "\n", "            ", "train_idx", "=", "foldidx", "[", "foldid", "]", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "train_idx", ")", ")", ":", "\n", "                ", "gid", "=", "int", "(", "train_idx", "[", "i", "]", ")", "\n", "graph", "=", "{", "}", "\n", "graph", "[", "'art_emb'", "]", "=", "art_emb", "[", "gid", "]", "\n", "art_num", "=", "len", "(", "art_emb", "[", "gid", "]", ")", "\n", "graph_sen2sen", "=", "sen2sen", "[", "gid", "]", "\n", "graph_sen2ent", "=", "sen2ent", "[", "gid", "]", "[", "'sen2ent'", "]", "\n", "graph_ent2id", "=", "sen2ent", "[", "gid", "]", "[", "'ent2id'", "]", "\n", "graph", "[", "'ent_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "ent_emb", ")", "\n", "graph", "[", "'top_emb'", "]", "=", "load_emb", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ".", "tolist", "(", ")", ",", "top_emb", ")", "\n", "graph", "[", "'kgp_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "kgp_emb", ")", "\n", "graph", "[", "'sen2ent'", "]", "=", "graph_sen2ent", "\n", "# ent", "\n", "if", "del_type", "==", "1", ":", "\n", "                    ", "graph_sen2ent", "=", "rand_del_link", "(", "graph_sen2ent", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_sen2sen", ",", "graph_sen2ent", ",", "art_num", ")", "\n", "# top", "\n", "if", "del_type", "==", "2", ":", "\n", "                    ", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "=", "rand_del_link", "(", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", ")", "\n", "# sent", "\n", "if", "del_type", "==", "3", ":", "\n", "                    ", "sen2sent", "[", "gid", "]", "=", "rand_del_link", "(", "sen2sent", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2sent", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", ")", "\n", "# quo", "\n", "if", "del_type", "==", "4", ":", "\n", "                    ", "sen2quo", "[", "gid", "]", "=", "rand_del_link", "(", "sen2quo", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2quo", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "2", ")", "\n", "# tense", "\n", "if", "del_type", "==", "5", ":", "\n", "                    ", "sen2ten", "[", "gid", "]", "=", "rand_del_link", "(", "sen2ten", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2ten", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "4", ")", "\n", "\n", "graph_type", "=", "torch", ".", "tensor", "(", "[", "0", "]", "*", "len", "(", "graph_sen2sen", "[", "0", "]", ")", "+", "[", "1", "]", "*", "len", "(", "graph_sen2ent", "[", "0", "]", ")", "+", "[", "2", "]", "*", "len", "(", "\n", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "[", "0", "]", ")", "+", "[", "3", "]", "*", "len", "(", "sen2sent", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "4", "]", "*", "len", "(", "sen2quo", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "5", "]", "*", "len", "(", "sen2ten", "[", "gid", "]", "[", "0", "]", ")", ")", "\n", "\n", "graph", "[", "'edge_index'", "]", "=", "torch", ".", "stack", "(", "[", "torch", ".", "cat", "(", "\n", "[", "graph_index", "[", "0", "]", ",", "graph_index", "[", "1", "]", "]", ")", ",", "torch", ".", "cat", "(", "[", "graph_index", "[", "1", "]", ",", "graph_index", "[", "0", "]", "]", ")", "]", ")", "\n", "graph", "[", "'edge_type'", "]", "=", "torch", ".", "cat", "(", "[", "graph_type", ",", "graph_type", "]", ")", "\n", "graph", "[", "'label'", "]", "=", "label", "[", "gid", "]", "\n", "\n", "self", ".", "graph", ".", "append", "(", "graph", ")", "\n", "\n", "", "", "if", "self", ".", "name", "==", "\"dev\"", ":", "\n", "            ", "val_idx", "=", "foldidx", "[", "foldid", "]", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "val_idx", ")", ")", ":", "\n", "                ", "gid", "=", "val_idx", "[", "i", "]", "\n", "graph", "=", "{", "}", "\n", "graph", "[", "'art_emb'", "]", "=", "art_emb", "[", "gid", "]", "\n", "art_num", "=", "len", "(", "art_emb", "[", "gid", "]", ")", "\n", "graph_sen2sen", "=", "sen2sen", "[", "gid", "]", "\n", "graph_sen2ent", "=", "sen2ent", "[", "gid", "]", "[", "'sen2ent'", "]", "\n", "graph_ent2id", "=", "sen2ent", "[", "gid", "]", "[", "'ent2id'", "]", "\n", "graph", "[", "'ent_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "ent_emb", ")", "\n", "graph", "[", "'top_emb'", "]", "=", "load_emb", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ".", "tolist", "(", ")", ",", "top_emb", ")", "\n", "graph", "[", "'kgp_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "kgp_emb", ")", "\n", "graph", "[", "'sen2ent'", "]", "=", "graph_sen2ent", "\n", "# ent", "\n", "if", "del_type", "==", "1", ":", "\n", "                    ", "graph_sen2ent", "=", "rand_del_link", "(", "graph_sen2ent", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_sen2sen", ",", "graph_sen2ent", ",", "art_num", ")", "\n", "# top", "\n", "if", "del_type", "==", "2", ":", "\n", "                    ", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "=", "rand_del_link", "(", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", ")", "\n", "# sent", "\n", "if", "del_type", "==", "3", ":", "\n", "                    ", "sen2sent", "[", "gid", "]", "=", "rand_del_link", "(", "sen2sent", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2sent", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", ")", "\n", "# quo", "\n", "if", "del_type", "==", "4", ":", "\n", "                    ", "sen2quo", "[", "gid", "]", "=", "rand_del_link", "(", "sen2quo", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2quo", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "2", ")", "\n", "# tense", "\n", "if", "del_type", "==", "5", ":", "\n", "                    ", "sen2ten", "[", "gid", "]", "=", "rand_del_link", "(", "sen2ten", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2ten", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "4", ")", "\n", "\n", "graph_type", "=", "torch", ".", "tensor", "(", "[", "0", "]", "*", "len", "(", "graph_sen2sen", "[", "0", "]", ")", "+", "[", "1", "]", "*", "len", "(", "graph_sen2ent", "[", "0", "]", ")", "+", "[", "2", "]", "*", "len", "(", "\n", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "[", "0", "]", ")", "+", "[", "3", "]", "*", "len", "(", "sen2sent", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "4", "]", "*", "len", "(", "sen2quo", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "5", "]", "*", "len", "(", "sen2ten", "[", "gid", "]", "[", "0", "]", ")", ")", "\n", "\n", "graph", "[", "'edge_index'", "]", "=", "torch", ".", "stack", "(", "[", "torch", ".", "cat", "(", "\n", "[", "graph_index", "[", "0", "]", ",", "graph_index", "[", "1", "]", "]", ")", ",", "torch", ".", "cat", "(", "[", "graph_index", "[", "1", "]", ",", "graph_index", "[", "0", "]", "]", ")", "]", ")", "\n", "graph", "[", "'edge_type'", "]", "=", "torch", ".", "cat", "(", "[", "graph_type", ",", "graph_type", "]", ")", "\n", "graph", "[", "'label'", "]", "=", "label", "[", "gid", "]", "\n", "\n", "self", ".", "graph", ".", "append", "(", "graph", ")", "\n", "\n", "", "", "self", ".", "length", "=", "len", "(", "self", ".", "graph", ")", "\n", "print", "(", "self", ".", "name", ",", "self", ".", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_Dataset.KSDDataset.__len__": [[141, 143], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_Dataset.KSDDataset.__getitem__": [[144, 147], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "return", "self", ".", "graph", "[", "index", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_GatedRGCN.KSD.__init__": [[12, 52], ["pytorch_lightning.LightningModule.__init__", "Tools.GatedRGCN", "Tools.GatedRGCN", "Tools.attention", "torch.nn.MultiheadAttention", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Dropout", "torch.nn.CrossEntropyLoss", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dropout", ",", "num_heads", ",", "Weight_decay", ",", "lr", ",", "lr_s", ",", "ent_dim", ",", "top_dim", ",", "outtype", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "###", "\n", "self", ".", "globalACC", "=", "0", "\n", "self", ".", "globalF1", "=", "0", "\n", "###", "\n", "self", ".", "outtype", "=", "outtype", "\n", "###", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "lr_s", "=", "lr_s", "#lr scheduler", "\n", "self", ".", "weight_decay", "=", "Weight_decay", "\n", "###", "\n", "self", ".", "in_channel", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "###graph convelotion", "\n", "self", ".", "RGCN1", "=", "GatedRGCN", "(", "out_channels", ",", "out_channels", ",", "6", ")", "\n", "self", ".", "RGCN2", "=", "GatedRGCN", "(", "out_channels", ",", "out_channels", ",", "6", ")", "\n", "###graph convelotion", "\n", "### kgp", "\n", "self", ".", "SenAttention", "=", "attention", "(", "in_channels", ",", "in_channels", ")", "\n", "self", ".", "multihead_attn", "=", "nn", ".", "MultiheadAttention", "(", "in_channels", ",", "num_heads", ")", "\n", "###sentence, entity, topic mlp", "\n", "self", ".", "senLinear", "=", "nn", ".", "Linear", "(", "in_channels", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "senLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "entLinear", "=", "nn", ".", "Linear", "(", "ent_dim", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "entLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "topLinear", "=", "nn", ".", "Linear", "(", "top_dim", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "topLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "###sentiment, quotation, tense parameters", "\n", "self", ".", "emoWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "2", ",", "out_channels", ")", ")", "\n", "self", ".", "quoWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "2", ",", "out_channels", ")", ")", "\n", "self", ".", "tenWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "17", ",", "out_channels", ")", ")", "\n", "###", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "CELoss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "self", ".", "output", "=", "nn", ".", "Linear", "(", "out_channels", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_GatedRGCN.KSD.configure_optimizers": [[53, 66], ["torch.optim.Adam", "KSD_GatedRGCN.KSD.parameters", "torch.optim.lr_scheduler.ReduceLROnPlateau"], "methods", ["None"], ["", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "self", ".", "parameters", "(", ")", ",", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "if", "self", ".", "lr_s", ">", "0", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "\n", "mode", "=", "'min'", ",", "\n", "factor", "=", "0.1", ",", "\n", "patience", "=", "self", ".", "lr_s", ",", "\n", "min_lr", "=", "1e-6", ",", "\n", "verbose", "=", "True", ")", "\n", "return", "{", "\"optimizer\"", ":", "optimizer", ",", "\"lr_scheduler\"", ":", "scheduler", ",", "\"monitor\"", ":", "\"val_loss\"", "}", "\n", "", "else", ":", "\n", "            ", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_GatedRGCN.KSD.training_step": [[67, 158], ["range", "torch.stack", "torch.LongTensor", "Tools.get_metrics", "Tools.f1_score", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "len", "torch.stack", "len", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.dropout", "newsentence[].squeeze", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN1", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN2", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.output", "int", "torch.tensor().long().cuda", "torch.LongTensor.append", "torch.stack.append", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.activation", "range", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.cat", "torch.cat", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.mean", "KSD_GatedRGCN.KSD.CELoss", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.topLinear", "range", "KSD_GatedRGCN.KSD.senLinear", "torch.tensor().long", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.entLinear", "len", "len", "kgp_att_emb.append", "len", "torch.cat().unsqueeze", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.multihead_attn", "KSD_GatedRGCN.KSD.SenAttention", "torch.tensor", "torch.cat", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.get_metrics", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score"], ["", "", "def", "training_step", "(", "self", ",", "train_batch", ",", "batch_index", ")", ":", "\n", "# Initialize matric", "\n", "        ", "loss", "=", "0", "\n", "totalpred", "=", "[", "]", "\n", "totallabel", "=", "[", "]", "\n", "# Learning loop", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "train_batch", ")", ")", ":", "\n", "# edge", "\n", "            ", "edge_index", "=", "train_batch", "[", "i", "]", "[", "'edge_index'", "]", "#torch.long", "\n", "edge_type", "=", "train_batch", "[", "i", "]", "[", "'edge_type'", "]", "#torch.long", "\n", "# embedding", "\n", "art_emb", "=", "torch", ".", "stack", "(", "train_batch", "[", "i", "]", "[", "'art_emb'", "]", ")", "\n", "sen_num", "=", "len", "(", "art_emb", ")", "\n", "ent_emb", "=", "train_batch", "[", "i", "]", "[", "'ent_emb'", "]", "\n", "ent_num", "=", "len", "(", "ent_emb", ")", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "# if entity exist", "\n", "                ", "ent_emb", "=", "torch", ".", "stack", "(", "ent_emb", ")", "\n", "# learnable", "\n", "ent_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "entLinear", "(", "ent_emb", ")", ")", ")", "\n", "", "top_emb", "=", "torch", ".", "stack", "(", "train_batch", "[", "i", "]", "[", "'top_emb'", "]", ")", "\n", "top_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "topLinear", "(", "top_emb", ")", ")", ")", "\n", "# Initialize sentiment, quotation and tense", "\n", "emo_Emb", "=", "self", ".", "emoWeight", "\n", "quo_Emb", "=", "self", ".", "quoWeight", "\n", "ten_Emb", "=", "self", ".", "tenWeight", "\n", "\n", "# knowledge path", "\n", "if", "ent_num", ">", "0", ":", "\n", "                ", "kgp_emb", "=", "train_batch", "[", "i", "]", "[", "'kgp_emb'", "]", "\n", "sen2ent", "=", "train_batch", "[", "i", "]", "[", "'sen2ent'", "]", "\n", "kgp_att_emb", "=", "[", "]", "# attention kgp", "\n", "for", "s_i", "in", "range", "(", "sen_num", ")", ":", "\n", "                    ", "sen_kgp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "sen2ent", "[", "0", "]", ")", ")", ":", "\n", "                        ", "if", "sen2ent", "[", "0", "]", "[", "j", "]", "==", "s_i", ":", "\n", "                            ", "sen_kgp", "=", "sen_kgp", "+", "kgp_emb", "[", "sen2ent", "[", "1", "]", "[", "j", "]", "]", "\n", "", "", "if", "len", "(", "sen_kgp", ")", ">", "0", ":", "\n", "                        ", "kgp_att_emb", ".", "append", "(", "self", ".", "SenAttention", "(", "art_emb", "[", "s_i", "]", ",", "sen_kgp", ")", ")", "\n", "", "if", "len", "(", "kgp_att_emb", ")", ">", "0", ":", "\n", "                        ", "mutiheadinput", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "torch", ".", "stack", "(", "kgp_att_emb", ")", ")", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                        ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "", "", "else", ":", "\n", "                ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "newsentence", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "(", "self", ".", "multihead_attn", "(", "\n", "mutiheadinput", ",", "mutiheadinput", ",", "mutiheadinput", ")", "[", "0", "]", ")", ")", ")", "# fsb: ACTIVATION, DROPOUT ADDED", "\n", "\n", "art_emb", "=", "newsentence", "[", "0", ":", "sen_num", "]", ".", "squeeze", "(", "1", ")", "\n", "art_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "senLinear", "(", "art_emb", ")", ")", ")", "# fsb: DROPOUT ADDED", "\n", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "ent_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# gragh", "\n", "", "n_1", "=", "self", ".", "RGCN1", "(", "newnodeembedding", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_1", ")", ")", "\n", "n_2", "=", "self", ".", "RGCN2", "(", "a_1", ",", "edge_index", ",", "edge_type", ")", "\n", "a_2", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_2", ")", ")", "\n", "if", "self", ".", "outtype", "==", "0", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "0", ":", "sen_num", "]", "\n", "", "elif", "self", ".", "outtype", "==", "1", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "sen_num", ":", "]", "\n", "", "elif", "self", ".", "outtype", "==", "2", ":", "\n", "                ", "output_vec", "=", "a_2", "\n", "# matric", "\n", "", "pred", "=", "self", ".", "output", "(", "torch", ".", "mean", "(", "output_vec", ",", "dim", "=", "0", ")", ")", "\n", "label", "=", "int", "(", "train_batch", "[", "i", "]", "[", "'label'", "]", ")", "\n", "label", "=", "torch", ".", "tensor", "(", "[", "label", "]", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "# Calculate matric", "\n", "totallabel", ".", "append", "(", "label", ")", "\n", "totalpred", ".", "append", "(", "pred", ")", "\n", "loss", "=", "loss", "+", "self", ".", "CELoss", "(", "pred", ".", "unsqueeze", "(", "0", ")", ",", "label", ")", "\n", "\n", "", "totalpred", "=", "torch", ".", "stack", "(", "totalpred", ")", "\n", "totallabel", "=", "torch", ".", "LongTensor", "(", "totallabel", ")", "\n", "loss", "=", "loss", "/", "len", "(", "train_batch", ")", "\n", "accuracy", "=", "get_metrics", "(", "totalpred", ",", "totallabel", ")", "\n", "F1", "=", "f1_score", "(", "totalpred", ",", "totallabel", ")", "\n", "self", ".", "log", "(", "'train_loss'", ",", "loss", ")", "\n", "self", ".", "log", "(", "'train_ACC'", ",", "accuracy", ")", "\n", "self", ".", "log", "(", "'train_F1'", ",", "F1", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.semmain.KSD_GatedRGCN.KSD.validation_step": [[159, 253], ["range", "torch.stack", "torch.LongTensor", "Tools.get_metrics", "Tools.f1_score", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "len", "torch.stack", "len", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.dropout", "newsentence[].squeeze", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN1", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN2", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.output", "int", "torch.tensor().long().cuda", "torch.LongTensor.append", "torch.stack.append", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.activation", "range", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.cat", "torch.cat", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.mean", "KSD_GatedRGCN.KSD.CELoss", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.topLinear", "range", "KSD_GatedRGCN.KSD.senLinear", "torch.tensor().long", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.entLinear", "len", "len", "kgp_att_emb.append", "len", "torch.cat().unsqueeze", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.multihead_attn", "KSD_GatedRGCN.KSD.SenAttention", "torch.tensor", "torch.cat", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.get_metrics", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score"], ["", "def", "validation_step", "(", "self", ",", "val_batch", ",", "batch_index", ")", ":", "\n", "# Initialize matric", "\n", "        ", "loss", "=", "0", "\n", "totalpred", "=", "[", "]", "\n", "totallabel", "=", "[", "]", "\n", "# Learning loop", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "val_batch", ")", ")", ":", "\n", "\n", "            ", "edge_index", "=", "val_batch", "[", "i", "]", "[", "'edge_index'", "]", "\n", "edge_type", "=", "val_batch", "[", "i", "]", "[", "'edge_type'", "]", "\n", "\n", "art_emb", "=", "torch", ".", "stack", "(", "val_batch", "[", "i", "]", "[", "'art_emb'", "]", ")", "\n", "sen_num", "=", "len", "(", "art_emb", ")", "\n", "ent_emb", "=", "val_batch", "[", "i", "]", "[", "'ent_emb'", "]", "\n", "ent_num", "=", "len", "(", "ent_emb", ")", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "\n", "                ", "ent_emb", "=", "torch", ".", "stack", "(", "ent_emb", ")", "\n", "# learnable", "\n", "ent_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "entLinear", "(", "ent_emb", ")", ")", ")", "\n", "", "top_emb", "=", "torch", ".", "stack", "(", "val_batch", "[", "i", "]", "[", "'top_emb'", "]", ")", "\n", "top_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "topLinear", "(", "top_emb", ")", ")", ")", "\n", "# Initialize sentiment, quotation and tense", "\n", "emo_Emb", "=", "self", ".", "emoWeight", "\n", "quo_Emb", "=", "self", ".", "quoWeight", "\n", "ten_Emb", "=", "self", ".", "tenWeight", "\n", "\n", "\n", "if", "ent_num", ">", "0", ":", "\n", "                ", "kgp_emb", "=", "val_batch", "[", "i", "]", "[", "'kgp_emb'", "]", "\n", "sen2ent", "=", "val_batch", "[", "i", "]", "[", "'sen2ent'", "]", "\n", "kgp_att_emb", "=", "[", "]", "\n", "for", "s_i", "in", "range", "(", "sen_num", ")", ":", "\n", "                    ", "sen_kgp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "sen2ent", "[", "0", "]", ")", ")", ":", "\n", "                        ", "if", "sen2ent", "[", "0", "]", "[", "j", "]", "==", "s_i", ":", "\n", "                            ", "sen_kgp", "=", "sen_kgp", "+", "kgp_emb", "[", "sen2ent", "[", "1", "]", "[", "j", "]", "]", "\n", "", "", "if", "len", "(", "sen_kgp", ")", ">", "0", ":", "\n", "                        ", "kgp_att_emb", ".", "append", "(", "self", ".", "SenAttention", "(", "art_emb", "[", "s_i", "]", ",", "sen_kgp", ")", ")", "\n", "", "if", "len", "(", "kgp_att_emb", ")", ">", "0", ":", "\n", "                        ", "mutiheadinput", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "torch", ".", "stack", "(", "kgp_att_emb", ")", ")", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                        ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "", "", "else", ":", "\n", "                ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "newsentence", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "(", "self", ".", "multihead_attn", "(", "\n", "mutiheadinput", ",", "mutiheadinput", ",", "mutiheadinput", ")", "[", "0", "]", ")", ")", ")", "# fsb: ACTIVATION, DROPOUT ADDED", "\n", "\n", "\n", "art_emb", "=", "newsentence", "[", "0", ":", "sen_num", "]", ".", "squeeze", "(", "1", ")", "\n", "art_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "senLinear", "(", "art_emb", ")", ")", ")", "# fsb: DROPOUT ADDED", "\n", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "ent_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "n_1", "=", "self", ".", "RGCN1", "(", "newnodeembedding", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_1", ")", ")", "\n", "n_2", "=", "self", ".", "RGCN2", "(", "a_1", ",", "edge_index", ",", "edge_type", ")", "\n", "a_2", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_2", ")", ")", "\n", "if", "self", ".", "outtype", "==", "0", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "0", ":", "sen_num", "]", "\n", "", "elif", "self", ".", "outtype", "==", "1", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "sen_num", ":", "]", "\n", "", "elif", "self", ".", "outtype", "==", "2", ":", "\n", "                ", "output_vec", "=", "a_2", "\n", "# matric", "\n", "", "pred", "=", "self", ".", "output", "(", "torch", ".", "mean", "(", "output_vec", ",", "dim", "=", "0", ")", ")", "\n", "label", "=", "int", "(", "val_batch", "[", "i", "]", "[", "'label'", "]", ")", "\n", "label", "=", "torch", ".", "tensor", "(", "[", "label", "]", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "# Calculate matric", "\n", "totallabel", ".", "append", "(", "label", ")", "\n", "totalpred", ".", "append", "(", "pred", ")", "\n", "loss", "=", "loss", "+", "self", ".", "CELoss", "(", "pred", ".", "unsqueeze", "(", "0", ")", ",", "label", ")", "\n", "\n", "", "totalpred", "=", "torch", ".", "stack", "(", "totalpred", ")", "\n", "totallabel", "=", "torch", ".", "LongTensor", "(", "totallabel", ")", "\n", "loss", "=", "loss", "/", "len", "(", "val_batch", ")", "\n", "accuracy", "=", "get_metrics", "(", "totalpred", ",", "totallabel", ")", "\n", "F1", "=", "f1_score", "(", "totalpred", ",", "totallabel", ")", "\n", "if", "(", "accuracy", ">", "self", ".", "globalACC", ")", ":", "\n", "            ", "self", ".", "globalACC", "=", "accuracy", "\n", "self", ".", "globalF1", "=", "F1", "\n", "\n", "", "self", ".", "log", "(", "'val_loss'", ",", "loss", ")", "\n", "self", ".", "log", "(", "'val_ACC'", ",", "accuracy", ")", "\n", "self", ".", "log", "(", "'val_F1'", ",", "F1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.GatedRGCN.__init__": [[6, 19], ["torch.nn.Module.__init__", "torch_geometric.nn.RGCNConv", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Tanh", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["\n", "def", "load_emb", "(", "idx", ",", "emb", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "if", "len", "(", "idx", ")", ">", "0", ":", "\n", "        ", "for", "i", "in", "idx", ":", "\n", "            ", "output", ".", "append", "(", "emb", "[", "i", "]", ")", "\n", "", "", "return", "output", "\n", "\n", "", "def", "connect_link", "(", "link_a", ",", "link_b", ",", "bias", ")", ":", "\n", "    ", "link_b", "=", "torch", ".", "stack", "(", "[", "link_b", "[", "0", "]", ",", "link_b", "[", "1", "]", "+", "bias", "]", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "link_a", ",", "link_b", "]", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.GatedRGCN.forward": [[20, 28], ["Tools.GatedRGCN.RGCN1", "Tools.GatedRGCN.sigmoid", "Tools.GatedRGCN.attention_layer", "torch.cat", "Tools.GatedRGCN.tanh"], "methods", ["None"], ["", "def", "rand_del_link", "(", "link_input", ",", "rate", ")", ":", "\n", "    ", "new_link", "=", "[", "[", "]", ",", "[", "]", "]", "\n", "link_input", "=", "link_input", ".", "tolist", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "link_input", "[", "0", "]", ")", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "0", ",", "100", ")", "<", "rate", ":", "\n", "            ", "continue", "\n", "", "for", "j", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "            ", "new_link", "[", "j", "]", ".", "append", "(", "link_input", "[", "j", "]", "[", "i", "]", ")", "\n", "", "", "return", "torch", ".", "tensor", "(", "new_link", ",", "dtype", "=", "torch", ".", "long", ")", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.attention.__init__": [[30, 36], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["", "class", "GatedRGCN", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "num_relations", ")", ":", "\n", "        ", "super", "(", "GatedRGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "num_relations", "=", "num_relations", "\n", "self", ".", "RGCN1", "=", "RGCNConv", "(", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.attention.forward": [[37, 48], ["Tools.attention.linear().squeeze", "len", "range", "Tools.attention.softmax", "range", "Tools.attention.append", "torch.stack", "Tools.attention.linear", "torch.dot"], "methods", ["None"], ["in_channels", "=", "out_channels", ",", "out_channels", "=", "out_channels", ",", "num_relations", "=", "num_relations", ")", "\n", "self", ".", "attention_layer", "=", "nn", ".", "Linear", "(", "2", "*", "out_channels", ",", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "\n", "self", ".", "attention_layer", ".", "weight", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'sigmoid'", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "node_features", ",", "edge_index", ",", "edge_type", ")", ":", "\n", "\n", "        ", "u_0", "=", "self", ".", "RGCN1", "(", "node_features", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "sigmoid", "(", "self", ".", "attention_layer", "(", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.get_metrics": [[49, 56], ["torch.argmax", "range", "len", "len"], "function", ["None"], ["torch", ".", "cat", "(", "(", "u_0", ",", "node_features", ")", ",", "dim", "=", "1", ")", ")", ")", "\n", "h_1", "=", "self", ".", "tanh", "(", "u_0", ")", "*", "a_1", "+", "node_features", "*", "(", "1", "-", "a_1", ")", "\n", "\n", "return", "h_1", "\n", "\n", "", "", "class", "attention", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.pad_collate": [[58, 60], ["None"], "function", ["None"], ["torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "linear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", ")", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score": [[62, 117], ["range", "len", "sum", "torch.argmax", "range", "range", "max", "range", "max", "range", "max", "range", "torch.argmax", "torch.argmax"], "function", ["None"], ["", "def", "forward", "(", "self", ",", "att_val", ",", "input", ")", ":", "\n", "        ", "att_val", "=", "self", ".", "linear", "(", "att_val", ")", ".", "squeeze", "(", "0", ")", "\n", "att_a", "=", "[", "]", "\n", "input_num", "=", "len", "(", "input", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "input_num", ")", ":", "\n", "            ", "att_a", ".", "append", "(", "torch", ".", "dot", "(", "att_val", ",", "input", "[", "i", "]", ")", ")", "\n", "", "att_a", "=", "self", ".", "softmax", "(", "torch", ".", "stack", "(", "att_a", ")", ")", "\n", "output", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "input_num", ")", ":", "\n", "            ", "output", "=", "output", "+", "att_a", "[", "i", "]", "*", "input", "[", "i", "]", "\n", "", "return", "output", "\n", "\n", "", "", "def", "get_metrics", "(", "probs", ",", "labels", ")", ":", "\n", "    ", "probs", "=", "torch", ".", "argmax", "(", "probs", ",", "dim", "=", "1", ")", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "probs", ")", ")", ":", "\n", "        ", "if", "probs", "[", "i", "]", "==", "labels", "[", "i", "]", ":", "\n", "            ", "correct", "+=", "1", "\n", "", "", "return", "correct", "/", "len", "(", "probs", ")", "\n", "\n", "\n", "", "def", "pad_collate", "(", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n", "\n", "", "def", "f1_score", "(", "probs", ",", "labels", ")", ":", "\n", "    ", "y_true", "=", "labels", ".", "tolist", "(", ")", "\n", "y_pred", "=", "(", "torch", ".", "argmax", "(", "probs", ",", "dim", "=", "1", ")", ")", ".", "tolist", "(", ")", "\n", "F1_result", "=", "f1", "(", "y_true", ",", "y_pred", ",", "average", "=", "'binary'", ")", "\n", "return", "F1_result", "\n", "", ""]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_Dataset.KSDDataset.__init__": [[12, 100], ["open", "pickle.load", "torch.load", "torch.load", "numpy.load().item", "len", "print", "info[].tolist", "range", "info[].tolist", "range", "numpy.load", "len", "len", "str", "numpy.load().item", "KSD_Dataset.KSDDataset.graph.append", "numpy.load().item", "KSD_Dataset.KSDDataset.graph.append", "len", "sen_top_emb.append", "sen_kgp_emb.append", "len", "sen_top_emb.append", "numpy.load", "sen_ent_emb.append", "len", "list", "numpy.load", "sen_ent_emb.append", "sen_kgp_emb.append", "set", "len", "list", "set", "str", "int", "str", "int"], "methods", ["None"], ["        ", "count", "=", "0", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "graph", "=", "[", "]", "\n", "# input article id of each fold, fold[i][0] is train; fold[i][1] is dev", "\n", "foldidx", "=", "torch", ".", "load", "(", "path", "+", "'foldindex.pt'", ")", "# list", "\n", "###", "\n", "sen2sen", "=", "torch", ".", "load", "(", "path", "+", "'sen2sen.pt'", ")", "# list", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2ent", "=", "torch", ".", "load", "(", "path", "+", "'sen2ent.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2top", "=", "torch", ".", "load", "(", "path", "+", "'sen2top.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2sent", "=", "torch", ".", "load", "(", "path", "+", "'sen2sent.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2quo", "=", "torch", ".", "load", "(", "path", "+", "'sen2quo.pt'", ")", "\n", "# list [dict : ent-para link; entity index]", "\n", "sen2ten", "=", "torch", ".", "load", "(", "path", "+", "'sen2ten.pt'", ")", "\n", "###", "\n", "# input embedding, dict, key is id", "\n", "art_emb", "=", "torch", ".", "load", "(", "path", "+", "'ArticleEmbedding.pt'", ")", "# dict key=0~645", "\n", "ent_emb", "=", "torch", ".", "load", "(", "path", "+", "'EntityEmbedding.pt'", ")", "# dict key= entityid", "\n", "top_emb", "=", "torch", ".", "load", "(", "path", "+", "'TopicEmbedding.pt'", ")", "\n", "kgp_emb", "=", "torch", ".", "load", "(", "path", "+", "'KGPEmbedding.pt'", ")", "\n", "# input label", "\n", "label", "=", "torch", ".", "load", "(", "path", "+", "'Label.pt'", ")", "\n", "\n", "if", "self", ".", "name", "==", "\"train\"", ":", "\n", "            ", "train_idx", "=", "foldidx", "[", "foldid", "]", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "train_idx", ")", ")", ":", "\n", "                ", "gid", "=", "int", "(", "train_idx", "[", "i", "]", ")", "\n", "graph", "=", "{", "}", "\n", "graph", "[", "'art_emb'", "]", "=", "art_emb", "[", "gid", "]", "\n", "art_num", "=", "len", "(", "art_emb", "[", "gid", "]", ")", "\n", "graph_sen2sen", "=", "sen2sen", "[", "gid", "]", "\n", "graph_sen2ent", "=", "sen2ent", "[", "gid", "]", "[", "'sen2ent'", "]", "\n", "graph_ent2id", "=", "sen2ent", "[", "gid", "]", "[", "'ent2id'", "]", "\n", "graph", "[", "'ent_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "ent_emb", ")", "\n", "graph", "[", "'top_emb'", "]", "=", "load_emb", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ".", "tolist", "(", ")", ",", "top_emb", ")", "\n", "graph", "[", "'kgp_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "kgp_emb", ")", "\n", "graph", "[", "'sen2ent'", "]", "=", "graph_sen2ent", "\n", "# ent", "\n", "if", "del_type", "==", "1", ":", "\n", "                    ", "graph_sen2ent", "=", "rand_del_link", "(", "graph_sen2ent", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_sen2sen", ",", "graph_sen2ent", ",", "art_num", ")", "\n", "# top", "\n", "if", "del_type", "==", "2", ":", "\n", "                    ", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "=", "rand_del_link", "(", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", ")", "\n", "# sent", "\n", "if", "del_type", "==", "3", ":", "\n", "                    ", "sen2sent", "[", "gid", "]", "=", "rand_del_link", "(", "sen2sent", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2sent", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", ")", "\n", "# quo", "\n", "if", "del_type", "==", "4", ":", "\n", "                    ", "sen2quo", "[", "gid", "]", "=", "rand_del_link", "(", "sen2quo", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2quo", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "2", ")", "\n", "# tense", "\n", "if", "del_type", "==", "5", ":", "\n", "                    ", "sen2ten", "[", "gid", "]", "=", "rand_del_link", "(", "sen2ten", "[", "gid", "]", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_index", ",", "sen2ten", "[", "gid", "]", ",", "art_num", "+", "len", "(", "graph_ent2id", ")", "+", "len", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ")", "+", "4", ")", "\n", "\n", "graph_type", "=", "torch", ".", "tensor", "(", "[", "0", "]", "*", "len", "(", "graph_sen2sen", "[", "0", "]", ")", "+", "[", "1", "]", "*", "len", "(", "graph_sen2ent", "[", "0", "]", ")", "+", "[", "2", "]", "*", "len", "(", "\n", "sen2top", "[", "gid", "]", "[", "'sen2top'", "]", "[", "0", "]", ")", "+", "[", "3", "]", "*", "len", "(", "sen2sent", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "4", "]", "*", "len", "(", "sen2quo", "[", "gid", "]", "[", "0", "]", ")", "+", "[", "5", "]", "*", "len", "(", "sen2ten", "[", "gid", "]", "[", "0", "]", ")", ")", "\n", "\n", "graph", "[", "'edge_index'", "]", "=", "torch", ".", "stack", "(", "[", "torch", ".", "cat", "(", "\n", "[", "graph_index", "[", "0", "]", ",", "graph_index", "[", "1", "]", "]", ")", ",", "torch", ".", "cat", "(", "[", "graph_index", "[", "1", "]", ",", "graph_index", "[", "0", "]", "]", ")", "]", ")", "\n", "graph", "[", "'edge_type'", "]", "=", "torch", ".", "cat", "(", "[", "graph_type", ",", "graph_type", "]", ")", "\n", "graph", "[", "'label'", "]", "=", "label", "[", "gid", "]", "\n", "\n", "self", ".", "graph", ".", "append", "(", "graph", ")", "\n", "\n", "", "", "if", "self", ".", "name", "==", "\"dev\"", ":", "\n", "            ", "val_idx", "=", "foldidx", "[", "foldid", "]", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "val_idx", ")", ")", ":", "\n", "                ", "gid", "=", "val_idx", "[", "i", "]", "\n", "graph", "=", "{", "}", "\n", "graph", "[", "'art_emb'", "]", "=", "art_emb", "[", "gid", "]", "\n", "art_num", "=", "len", "(", "art_emb", "[", "gid", "]", ")", "\n", "graph_sen2sen", "=", "sen2sen", "[", "gid", "]", "\n", "graph_sen2ent", "=", "sen2ent", "[", "gid", "]", "[", "'sen2ent'", "]", "\n", "graph_ent2id", "=", "sen2ent", "[", "gid", "]", "[", "'ent2id'", "]", "\n", "graph", "[", "'ent_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "ent_emb", ")", "\n", "graph", "[", "'top_emb'", "]", "=", "load_emb", "(", "sen2top", "[", "gid", "]", "[", "'top2id'", "]", ".", "tolist", "(", ")", ",", "top_emb", ")", "\n", "graph", "[", "'kgp_emb'", "]", "=", "load_emb", "(", "graph_ent2id", ".", "tolist", "(", ")", ",", "kgp_emb", ")", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_Dataset.KSDDataset.__len__": [[101, 103], ["None"], "methods", ["None"], ["graph", "[", "'sen2ent'", "]", "=", "graph_sen2ent", "\n", "# ent", "\n", "if", "del_type", "==", "1", ":", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_Dataset.KSDDataset.__getitem__": [[104, 107], ["None"], "methods", ["None"], ["                    ", "graph_sen2ent", "=", "rand_del_link", "(", "graph_sen2ent", ",", "del_rate", ")", "\n", "", "graph_index", "=", "connect_link", "(", "\n", "graph_sen2sen", ",", "graph_sen2ent", ",", "art_num", ")", "\n", "# top", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__": [[12, 54], ["pytorch_lightning.LightningModule.__init__", "Tools.GatedRGCN", "Tools.GatedRGCN", "torch.nn.Dropout", "torch.nn.CrossEntropyLoss", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Linear", "torch.nn.init.kaiming_uniform", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "Tools.attention", "torch.nn.MultiheadAttention", "torch.nn.MultiheadAttention", "torch.randn", "torch.randn", "torch.randn", "torch.nn.MultiheadAttention"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dropout", ",", "num_heads", ",", "Weight_decay", ",", "lr", ",", "lr_s", ",", "ent_dim", ",", "top_dim", ",", "outtype", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "###", "\n", "self", ".", "globalACC", "=", "0", "\n", "self", ".", "globalF1", "=", "0", "\n", "###", "\n", "self", ".", "outtype", "=", "outtype", "\n", "###", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "lr_s", "=", "lr_s", "#lr scheduler", "\n", "self", ".", "weight_decay", "=", "Weight_decay", "\n", "###", "\n", "self", ".", "in_channel", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "###graph convelotion", "\n", "self", ".", "RGCN1", "=", "GatedRGCN", "(", "out_channels", ",", "out_channels", ",", "6", ")", "\n", "self", ".", "RGCN2", "=", "GatedRGCN", "(", "out_channels", ",", "out_channels", ",", "6", ")", "\n", "###graph convelotion", "\n", "### kgp", "\n", "self", ".", "SenAttention", "=", "attention", "(", "in_channels", ",", "in_channels", ")", "\n", "self", ".", "multihead_attn", "=", "nn", ".", "MultiheadAttention", "(", "in_channels", ",", "num_heads", ")", "\n", "###sentence, entity, topic mlp", "\n", "self", ".", "senLinear", "=", "nn", ".", "Linear", "(", "in_channels", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "senLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "entLinear", "=", "nn", ".", "Linear", "(", "ent_dim", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "entLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "self", ".", "topLinear", "=", "nn", ".", "Linear", "(", "top_dim", ",", "out_channels", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_uniform", "(", "\n", "self", ".", "topLinear", ".", "weight", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "###sentiment, quotation, tense parameters", "\n", "self", ".", "emoWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "2", ",", "out_channels", ")", ")", "\n", "self", ".", "quoWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "2", ",", "out_channels", ")", ")", "\n", "self", ".", "tenWeight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "17", ",", "out_channels", ")", ")", "\n", "###", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "CELoss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "self", ".", "output", "=", "nn", ".", "Linear", "(", "out_channels", ",", "2", ")", "\n", "\n", "", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.configure_optimizers": [[55, 71], ["torch.optim.Adam", "KSD_GatedRGCN.KSD.parameters", "torch.optim.lr_scheduler.ReduceLROnPlateau"], "methods", ["None"], ["self", ".", "parameters", "(", ")", ",", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "if", "self", ".", "lr_s", ">", "0", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "\n", "mode", "=", "'min'", ",", "\n", "factor", "=", "0.1", ",", "\n", "patience", "=", "self", ".", "lr_s", ",", "\n", "min_lr", "=", "1e-6", ",", "\n", "verbose", "=", "True", ")", "\n", "return", "{", "\"optimizer\"", ":", "optimizer", ",", "\"lr_scheduler\"", ":", "scheduler", ",", "\"monitor\"", ":", "\"val_loss\"", "}", "\n", "", "else", ":", "\n", "            ", "return", "optimizer", "\n", "\n", "", "", "def", "training_step", "(", "self", ",", "train_batch", ",", "batch_index", ")", ":", "\n", "# Initialize matric", "\n", "        ", "loss", "=", "0", "\n", "totalpred", "=", "[", "]", "\n", "totallabel", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.training_step": [[72, 184], ["range", "torch.stack", "torch.LongTensor", "Tools.get_metrics", "Tools.f1_score", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "len", "len", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN1", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN2", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.output", "int", "torch.tensor().long().cuda", "torch.LongTensor.append", "torch.stack.append", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.activation", "range", "newsentence[].squeeze.unsqueeze", "KSD_GatedRGCN.KSD.dropout", "newsentence[].squeeze", "KSD_GatedRGCN.KSD.activation", "torch.cat", "torch.cat", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.mean", "KSD_GatedRGCN.KSD.CELoss", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.topLinear", "len", "torch.stack().half", "torch.cat().unsqueeze", "newsentence[].squeeze.unsqueeze", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.senLinear", "torch.tensor().long", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.entLinear", "len", "len", "len", "range", "torch.stack().half.append", "torch.stack", "torch.cat", "KSD_GatedRGCN.KSD.multihead_attn", "len", "range", "torch.tensor", "KSD_GatedRGCN.KSD.SenAttention", "torch.stack().unsqueeze", "KSD_GatedRGCN.KSD.dropout", "multihead_output.squeeze.squeeze.squeeze", "torch.stack().half.append", "torch.max", "torch.mean", "KSD_GatedRGCN.KSD.activation", "torch.mean", "torch.stack", "torch.stack().half.append", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack().half.append", "KSD_GatedRGCN.KSD.SenAttention", "torch.max", "torch.mean", "art_emb[].unsqueeze", "art_emb[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.get_metrics", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score"], ["# Learning loop", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "train_batch", ")", ")", ":", "\n", "# edge", "\n", "            ", "edge_index", "=", "train_batch", "[", "i", "]", "[", "'edge_index'", "]", "#torch.long", "\n", "edge_type", "=", "train_batch", "[", "i", "]", "[", "'edge_type'", "]", "#torch.long", "\n", "# embedding", "\n", "art_emb", "=", "torch", ".", "stack", "(", "train_batch", "[", "i", "]", "[", "'art_emb'", "]", ")", "\n", "sen_num", "=", "len", "(", "art_emb", ")", "\n", "ent_emb", "=", "train_batch", "[", "i", "]", "[", "'ent_emb'", "]", "\n", "ent_num", "=", "len", "(", "ent_emb", ")", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "# if entity exist", "\n", "                ", "ent_emb", "=", "torch", ".", "stack", "(", "ent_emb", ")", "\n", "# learnable", "\n", "ent_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "entLinear", "(", "ent_emb", ")", ")", ")", "\n", "", "top_emb", "=", "torch", ".", "stack", "(", "train_batch", "[", "i", "]", "[", "'top_emb'", "]", ")", "\n", "top_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "topLinear", "(", "top_emb", ")", ")", ")", "\n", "# Initialize sentiment, quotation and tense", "\n", "emo_Emb", "=", "self", ".", "emoWeight", "\n", "quo_Emb", "=", "self", ".", "quoWeight", "\n", "ten_Emb", "=", "self", ".", "tenWeight", "\n", "\n", "# knowledge path", "\n", "if", "ent_num", ">", "0", ":", "\n", "                ", "kgp_emb", "=", "train_batch", "[", "i", "]", "[", "'kgp_emb'", "]", "\n", "sen2ent", "=", "train_batch", "[", "i", "]", "[", "'sen2ent'", "]", "\n", "kgp_att_emb", "=", "[", "]", "# attention kgp", "\n", "for", "s_i", "in", "range", "(", "sen_num", ")", ":", "\n", "                    ", "sen_kgp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "sen2ent", "[", "0", "]", ")", ")", ":", "\n", "                        ", "if", "sen2ent", "[", "0", "]", "[", "j", "]", "==", "s_i", ":", "\n", "                            ", "sen_kgp", "=", "sen_kgp", "+", "kgp_emb", "[", "sen2ent", "[", "1", "]", "[", "j", "]", "]", "\n", "", "", "if", "len", "(", "sen_kgp", ")", ">", "0", ":", "\n", "                        ", "kgp_att_emb", ".", "append", "(", "self", ".", "SenAttention", "(", "art_emb", "[", "s_i", "]", ",", "sen_kgp", ")", ")", "\n", "", "if", "len", "(", "kgp_att_emb", ")", ">", "0", ":", "\n", "                        ", "mutiheadinput", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "torch", ".", "stack", "(", "kgp_att_emb", ")", ")", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                        ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "", "", "else", ":", "\n", "                ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "newsentence", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "(", "self", ".", "multihead_attn", "(", "\n", "mutiheadinput", ",", "mutiheadinput", ",", "mutiheadinput", ")", "[", "0", "]", ")", ")", ")", "# fsb: ACTIVATION, DROPOUT ADDED", "\n", "\n", "art_emb", "=", "newsentence", "[", "0", ":", "sen_num", "]", ".", "squeeze", "(", "1", ")", "\n", "art_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "senLinear", "(", "art_emb", ")", ")", ")", "# fsb: DROPOUT ADDED", "\n", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "ent_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# gragh", "\n", "", "n_1", "=", "self", ".", "RGCN1", "(", "newnodeembedding", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_1", ")", ")", "\n", "n_2", "=", "self", ".", "RGCN2", "(", "a_1", ",", "edge_index", ",", "edge_type", ")", "\n", "a_2", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_2", ")", ")", "\n", "if", "self", ".", "outtype", "==", "0", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "0", ":", "sen_num", "]", "\n", "", "elif", "self", ".", "outtype", "==", "1", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "sen_num", ":", "]", "\n", "", "elif", "self", ".", "outtype", "==", "2", ":", "\n", "                ", "output_vec", "=", "a_2", "\n", "# matric", "\n", "", "pred", "=", "self", ".", "output", "(", "torch", ".", "mean", "(", "output_vec", ",", "dim", "=", "0", ")", ")", "\n", "label", "=", "int", "(", "train_batch", "[", "i", "]", "[", "'label'", "]", ")", "\n", "label", "=", "torch", ".", "tensor", "(", "[", "label", "]", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "# Calculate matric", "\n", "totallabel", ".", "append", "(", "label", ")", "\n", "totalpred", ".", "append", "(", "pred", ")", "\n", "loss", "=", "loss", "+", "self", ".", "CELoss", "(", "pred", ".", "unsqueeze", "(", "0", ")", ",", "label", ")", "\n", "\n", "", "totalpred", "=", "torch", ".", "stack", "(", "totalpred", ")", "\n", "totallabel", "=", "torch", ".", "LongTensor", "(", "totallabel", ")", "\n", "loss", "=", "loss", "/", "len", "(", "train_batch", ")", "\n", "accuracy", "=", "get_metrics", "(", "totalpred", ",", "totallabel", ")", "\n", "F1", "=", "f1_score", "(", "totalpred", ",", "totallabel", ")", "\n", "self", ".", "log", "(", "'train_loss'", ",", "loss", ")", "\n", "self", ".", "log", "(", "'train_ACC'", ",", "accuracy", ")", "\n", "self", ".", "log", "(", "'train_F1'", ",", "F1", ")", "\n", "return", "loss", "\n", "\n", "", "def", "validation_step", "(", "self", ",", "val_batch", ",", "batch_index", ")", ":", "\n", "# Initialize matric", "\n", "        ", "loss", "=", "0", "\n", "totalpred", "=", "[", "]", "\n", "totallabel", "=", "[", "]", "\n", "# Learning loop", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "val_batch", ")", ")", ":", "\n", "\n", "            ", "edge_index", "=", "val_batch", "[", "i", "]", "[", "'edge_index'", "]", "\n", "edge_type", "=", "val_batch", "[", "i", "]", "[", "'edge_type'", "]", "\n", "\n", "art_emb", "=", "torch", ".", "stack", "(", "val_batch", "[", "i", "]", "[", "'art_emb'", "]", ")", "\n", "sen_num", "=", "len", "(", "art_emb", ")", "\n", "ent_emb", "=", "val_batch", "[", "i", "]", "[", "'ent_emb'", "]", "\n", "ent_num", "=", "len", "(", "ent_emb", ")", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "\n", "                ", "ent_emb", "=", "torch", ".", "stack", "(", "ent_emb", ")", "\n", "# learnable", "\n", "ent_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "entLinear", "(", "ent_emb", ")", ")", ")", "\n", "", "top_emb", "=", "torch", ".", "stack", "(", "val_batch", "[", "i", "]", "[", "'top_emb'", "]", ")", "\n", "top_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "topLinear", "(", "top_emb", ")", ")", ")", "\n", "# Initialize sentiment, quotation and tense", "\n", "emo_Emb", "=", "self", ".", "emoWeight", "\n"]], "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.KSD_GatedRGCN.KSD.validation_step": [[185, 301], ["range", "torch.stack", "torch.LongTensor", "Tools.get_metrics", "Tools.f1_score", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "KSD_GatedRGCN.KSD.log", "len", "len", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN1", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.RGCN2", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.output", "int", "torch.tensor().long().cuda", "torch.LongTensor.append", "torch.stack.append", "len", "torch.stack", "KSD_GatedRGCN.KSD.dropout", "KSD_GatedRGCN.KSD.activation", "range", "newsentence[].squeeze.unsqueeze", "KSD_GatedRGCN.KSD.dropout", "newsentence[].squeeze", "KSD_GatedRGCN.KSD.activation", "torch.cat", "torch.cat", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.activation", "torch.mean", "KSD_GatedRGCN.KSD.CELoss", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.topLinear", "len", "torch.stack().half", "torch.cat().unsqueeze", "newsentence[].squeeze.unsqueeze", "KSD_GatedRGCN.KSD.activation", "KSD_GatedRGCN.KSD.senLinear", "torch.tensor().long", "KSD_GatedRGCN.KSD.unsqueeze", "KSD_GatedRGCN.KSD.entLinear", "len", "len", "len", "range", "torch.stack().half.append", "torch.stack", "torch.cat", "KSD_GatedRGCN.KSD.multihead_attn", "len", "range", "torch.tensor", "KSD_GatedRGCN.KSD.SenAttention", "torch.stack().unsqueeze", "KSD_GatedRGCN.KSD.dropout", "multihead_output.squeeze.squeeze.squeeze", "torch.stack().half.append", "torch.max", "torch.mean", "KSD_GatedRGCN.KSD.activation", "torch.mean", "torch.stack", "torch.stack().half.append", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack().half.append", "KSD_GatedRGCN.KSD.SenAttention", "torch.max", "torch.mean", "art_emb[].unsqueeze", "art_emb[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.get_metrics", "home.repos.pwc.inspect_result.wenqian-zhang_kcd.allmain.Tools.f1_score"], ["quo_Emb", "=", "self", ".", "quoWeight", "\n", "ten_Emb", "=", "self", ".", "tenWeight", "\n", "\n", "\n", "if", "ent_num", ">", "0", ":", "\n", "                ", "kgp_emb", "=", "val_batch", "[", "i", "]", "[", "'kgp_emb'", "]", "\n", "sen2ent", "=", "val_batch", "[", "i", "]", "[", "'sen2ent'", "]", "\n", "kgp_att_emb", "=", "[", "]", "\n", "for", "s_i", "in", "range", "(", "sen_num", ")", ":", "\n", "                    ", "sen_kgp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "sen2ent", "[", "0", "]", ")", ")", ":", "\n", "                        ", "if", "sen2ent", "[", "0", "]", "[", "j", "]", "==", "s_i", ":", "\n", "                            ", "sen_kgp", "=", "sen_kgp", "+", "kgp_emb", "[", "sen2ent", "[", "1", "]", "[", "j", "]", "]", "\n", "", "", "if", "len", "(", "sen_kgp", ")", ">", "0", ":", "\n", "                        ", "kgp_att_emb", ".", "append", "(", "self", ".", "SenAttention", "(", "art_emb", "[", "s_i", "]", ",", "sen_kgp", ")", ")", "\n", "", "if", "len", "(", "kgp_att_emb", ")", ">", "0", ":", "\n", "                        ", "mutiheadinput", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "torch", ".", "stack", "(", "kgp_att_emb", ")", ")", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                        ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "", "", "else", ":", "\n", "                ", "mutiheadinput", "=", "art_emb", ".", "unsqueeze", "(", "1", ")", "\n", "", "newsentence", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "(", "self", ".", "multihead_attn", "(", "\n", "mutiheadinput", ",", "mutiheadinput", ",", "mutiheadinput", ")", "[", "0", "]", ")", ")", ")", "# fsb: ACTIVATION, DROPOUT ADDED", "\n", "\n", "\n", "art_emb", "=", "newsentence", "[", "0", ":", "sen_num", "]", ".", "squeeze", "(", "1", ")", "\n", "art_emb", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "\n", "self", ".", "senLinear", "(", "art_emb", ")", ")", ")", "# fsb: DROPOUT ADDED", "\n", "\n", "if", "(", "ent_num", ">", "0", ")", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "ent_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "newnodeembedding", "=", "torch", ".", "cat", "(", "\n", "(", "art_emb", ",", "top_emb", ",", "emo_Emb", ",", "quo_Emb", ",", "ten_Emb", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "n_1", "=", "self", ".", "RGCN1", "(", "newnodeembedding", ",", "edge_index", ",", "edge_type", ")", "\n", "a_1", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_1", ")", ")", "\n", "n_2", "=", "self", ".", "RGCN2", "(", "a_1", ",", "edge_index", ",", "edge_type", ")", "\n", "a_2", "=", "self", ".", "dropout", "(", "self", ".", "activation", "(", "n_2", ")", ")", "\n", "if", "self", ".", "outtype", "==", "0", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "0", ":", "sen_num", "]", "\n", "", "elif", "self", ".", "outtype", "==", "1", ":", "\n", "                ", "output_vec", "=", "a_2", "[", "sen_num", ":", "]", "\n", "", "elif", "self", ".", "outtype", "==", "2", ":", "\n", "                ", "output_vec", "=", "a_2", "\n", "# matric", "\n", "", "pred", "=", "self", ".", "output", "(", "torch", ".", "mean", "(", "output_vec", ",", "dim", "=", "0", ")", ")", "\n", "label", "=", "int", "(", "val_batch", "[", "i", "]", "[", "'label'", "]", ")", "\n", "label", "=", "torch", ".", "tensor", "(", "[", "label", "]", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "# Calculate matric", "\n", "totallabel", ".", "append", "(", "label", ")", "\n", "totalpred", ".", "append", "(", "pred", ")", "\n", "loss", "=", "loss", "+", "self", ".", "CELoss", "(", "pred", ".", "unsqueeze", "(", "0", ")", ",", "label", ")", "\n", "\n", "", "totalpred", "=", "torch", ".", "stack", "(", "totalpred", ")", "\n", "totallabel", "=", "torch", ".", "LongTensor", "(", "totallabel", ")", "\n", "loss", "=", "loss", "/", "len", "(", "val_batch", ")", "\n", "accuracy", "=", "get_metrics", "(", "totalpred", ",", "totallabel", ")", "\n", "F1", "=", "f1_score", "(", "totalpred", ",", "totallabel", ")", "\n", "if", "(", "accuracy", ">", "self", ".", "globalACC", ")", ":", "\n", "            ", "self", ".", "globalACC", "=", "accuracy", "\n", "self", ".", "globalF1", "=", "F1", "\n", "\n", "", "self", ".", "log", "(", "'val_loss'", ",", "loss", ")", "\n", "self", ".", "log", "(", "'val_ACC'", ",", "accuracy", ")", "\n", "self", ".", "log", "(", "'val_F1'", ",", "F1", ")", "\n", "", "", ""]]}