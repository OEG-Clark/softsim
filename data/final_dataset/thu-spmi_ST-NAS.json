{"home.repos.pwc.inspect_result.thu-spmi_ST-NAS.scripts.ArchSearch.nas": [[23, 116], ["toolkit.utils.highlight_msg", "list", "torch.IntTensor", "ctc_crf_base.init_env", "print", "toolkit.NASTop.build_model", "print", "print", "toolkit.NASTop.build_manager", "print", "print", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ctc_crf_base.release_env", "range", "os.makedirs", "draw", "print", "print", "ArchSearch.show_path", "print", "toolkit.dataset_pickle.SpeechDataset", "toolkit.dataset_pickle.SpeechDataset", "SpeechDatasetMem", "SpeechDatasetMem", "print", "torch.utils.data.random_split", "torch.utils.data.ConcatDataset", "toolkit.NASTop.build_manager.warmUp", "toolkit.NASTop.build_manager.archSearch", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "toolkit.NASTop.build_manager.retrain", "len", "toolkit.NASTop.build_manager.net.module.printGraph", "len", "len", "int", "len", "toolkit.dataset_pickle.PadCollate", "toolkit.dataset_pickle.PadCollate", "torch.IntTensor.split", "toolkit.utils.count_parameters", "len", "len", "toolkit.dataset_pickle.PadCollate", "toolkit.dataset_pickle.PadCollate", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.highlight_msg", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.build_model", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.build_manager", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.visualize.draw", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.scripts.ArchSearch.show_path", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.warmUp", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.archSearch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.retrain", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.count_parameters"], ["def", "nas", "(", "args", ")", ":", "\n", "    ", "highlight_msg", "(", "\"Running {}\"", ".", "format", "(", "args", ".", "MODE", ")", ")", "\n", "\n", "# init ctc-crf", "\n", "gpus", "=", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "\n", "gpus", "=", "list", "(", "range", "(", "len", "(", "gpus", ".", "split", "(", "','", ")", ")", ")", ")", "\n", "gpus", "=", "torch", ".", "IntTensor", "(", "gpus", ")", "\n", "dataLoc", "=", "args", ".", "dataLoc", "\n", "ctc_crf_base", ".", "init_env", "(", "\n", "\"{}/data/den_meta/den_lm.fst\"", ".", "format", "(", "dataLoc", ")", ",", "gpus", ")", "\n", "\n", "args", ".", "batchsize", "=", "args", ".", "batchsize", "if", "not", "args", ".", "debug", "else", "32", "\n", "\n", "print", "(", "\"> Build model\"", ")", "\n", "model", "=", "build_model", "(", "args", ")", "\n", "print", "(", "\"model built. Size:{:.2f}M\"", ".", "format", "(", "count_parameters", "(", "model", ")", "/", "1e6", ")", ")", "\n", "\n", "print", "(", "\"> Build NAS manager\"", ")", "\n", "manager", "=", "build_manager", "(", "model", ",", "args", ")", "\n", "print", "(", "\"manager and optimizer built.\"", ")", "\n", "\n", "if", "args", ".", "visualize", ":", "\n", "        ", "from", "toolkit", ".", "visualize", "import", "draw", "\n", "os", ".", "makedirs", "(", "'figs'", ",", "exist_ok", "=", "True", ")", "\n", "draw", "(", "manager", ".", "net", ".", "module", ".", "printGraph", "(", ")", ",", "\"figs/visual\"", ")", "\n", "print", "(", "\"> Visualized architecture saved to figs/visual.png\"", ")", "\n", "return", "\n", "\n", "", "if", "args", ".", "show", ":", "\n", "        ", "print", "(", "\"> Show graph\"", ")", "\n", "show_path", "(", "manager", ",", "args", ")", "\n", "return", "\n", "\n", "", "print", "(", "\"> Data prepare\"", ")", "\n", "if", "args", ".", "MFR", ":", "\n", "        ", "dir_dataset", "=", "\"{}/data/nosub_\"", ".", "format", "(", "dataLoc", ")", "\n", "print", "(", "\"Read data from no subsampling dir.\"", ")", "\n", "", "else", ":", "\n", "        ", "dir_dataset", "=", "\"{}/data/\"", ".", "format", "(", "dataLoc", ")", "\n", "\n", "", "if", "args", ".", "Pickle", ":", "\n", "        ", "data_format", "=", "\"pickle\"", "\n", "tr_originset", "=", "SpeechDataset", "(", "\n", "\"{}{}/tr.{}\"", ".", "format", "(", "dir_dataset", ",", "data_format", ",", "data_format", ")", ")", "\n", "test_originset", "=", "SpeechDataset", "(", "\n", "\"{}{}/cv.{}\"", ".", "format", "(", "dir_dataset", ",", "data_format", ",", "data_format", ")", ")", "\n", "", "else", ":", "\n", "        ", "data_format", "=", "\"hdf5\"", "\n", "tr_originset", "=", "SpeechDatasetMem", "(", "\n", "\"{}{}/tr.{}\"", ".", "format", "(", "dir_dataset", ",", "data_format", ",", "data_format", ")", ",", "args", ".", "debug", ")", "\n", "test_originset", "=", "SpeechDatasetMem", "(", "\n", "\"{}{}/cv.{}\"", ".", "format", "(", "dir_dataset", ",", "data_format", ",", "data_format", ")", ",", "args", ".", "debug", ")", "\n", "", "print", "(", "\"Data prepared.\"", ")", "\n", "\n", "# Rearrange the size of trainset and devset. The trainset-shared length", "\n", "# is relative to size of original trainset.", "\n", "if", "not", "args", ".", "debug", "and", "args", ".", "ratioTestShared", ">", "0.", ":", "\n", "        ", "total_len", "=", "len", "(", "tr_originset", ")", "+", "len", "(", "test_originset", ")", "\n", "assert", "args", ".", "ratioTestShared", ">=", "len", "(", "\n", "test_originset", ")", "/", "total_len", ",", "\"{}\"", ".", "format", "(", "len", "(", "test_originset", ")", "/", "total_len", ")", "\n", "\n", "len_dev_shared", "=", "int", "(", "args", ".", "ratioTestShared", "*", "\n", "total_len", ")", "-", "len", "(", "test_originset", ")", "\n", "print", "(", "\"Split original dataset to [{},{}] for training and testing respectively.\"", ".", "format", "(", "\n", "total_len", "-", "len_dev_shared", "-", "len", "(", "test_originset", ")", ",", "len_dev_shared", "+", "len", "(", "test_originset", ")", ")", ")", "\n", "\n", "tr_set", ",", "test_set", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "tr_originset", ",", "[", "len", "(", "tr_originset", ")", "-", "len_dev_shared", ",", "len_dev_shared", "]", ")", "\n", "test_set", "=", "torch", ".", "utils", ".", "data", ".", "ConcatDataset", "(", "[", "test_set", ",", "test_originset", "]", ")", "\n", "", "else", ":", "\n", "        ", "tr_set", ",", "test_set", "=", "tr_originset", ",", "test_originset", "\n", "\n", "", "trainloader", "=", "DataLoader", "(", "tr_set", ",", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "collate_fn", "=", "PadCollate", "(", ")", ")", "\n", "testloader", "=", "DataLoader", "(", "test_set", ",", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "collate_fn", "=", "PadCollate", "(", ")", ")", "\n", "\n", "if", "args", ".", "MODE", "==", "\"warmup\"", ":", "\n", "        ", "manager", ".", "warmUp", "(", "trainloader", ",", "testloader", ",", "args", ")", "\n", "\n", "", "if", "args", ".", "MODE", "==", "\"archsearch\"", ":", "\n", "        ", "manager", ".", "archSearch", "(", "trainloader", ",", "testloader", ",", "args", ")", "\n", "\n", "", "if", "args", ".", "MODE", "==", "\"retrain\"", ":", "\n", "        ", "del", "trainloader", "\n", "del", "testloader", "\n", "trainloader", "=", "DataLoader", "(", "tr_originset", ",", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "collate_fn", "=", "PadCollate", "(", ")", ")", "\n", "testloader", "=", "DataLoader", "(", "test_originset", ",", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "4", ",", "collate_fn", "=", "PadCollate", "(", ")", ")", "\n", "manager", ".", "retrain", "(", "trainloader", ",", "testloader", ",", "args", ")", "\n", "\n", "", "ctc_crf_base", ".", "release_env", "(", "gpus", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.scripts.ArchSearch.show_path": [[118, 121], ["manager.displayArch", "print", "manager.net.module.printGraph"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.displayArch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph"], ["", "def", "show_path", "(", "manager", ",", "args", ")", ":", "\n", "    ", "manager", ".", "displayArch", "(", "showall", "=", "True", ",", "toFile", "=", "args", ".", "disptofile", ")", "\n", "print", "(", "manager", ".", "net", ".", "module", ".", "printGraph", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.scripts.ArchSearch.check_dirorfile": [[123, 128], ["os.path.exists"], "function", ["None"], ["", "def", "check_dirorfile", "(", "*", "items", ")", ":", "\n", "    ", "for", "item", "in", "items", ":", "\n", "        ", "if", "item", "is", "not", "None", ":", "\n", "            ", "assert", "item", "!=", "''", ",", "\"Receive an empty path!\"", "\n", "assert", "os", ".", "path", ".", "exists", "(", "item", ")", ",", "\"{} doesn't exist!\"", ".", "format", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.scripts.ArchSearch.nandetect": [[130, 132], ["torch.isnan", "torch.sum"], "function", ["None"], ["", "", "", "def", "nandetect", "(", "x", ":", "torch", ".", "Tensor", ")", "->", "bool", ":", "\n", "    ", "return", "torch", ".", "isnan", "(", "torch", ".", "sum", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.__init__": [[28, 61], ["object.__init__", "hasattr", "hasattr", "model.module.raiseNode", "isinstance", "log_arch.append", "utils.highlight_msg", "log_arch[].append", "struct.pack"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseNode", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.highlight_msg"], ["def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "DataParallel", ",", "DEBUG", "=", "False", ")", ":", "\n", "        ", "super", "(", "NasManager", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "hasattr", "(", "model", ".", "module", ",", "'raiseFixed'", ")", "\n", "assert", "hasattr", "(", "model", ".", "module", ",", "'raiseNode'", ")", "\n", "\n", "self", ".", "net", "=", "model", "\n", "self", ".", "supernet", "=", "self", ".", "net", ".", "module", ".", "infer", "\n", "self", ".", "DEBUG", "=", "DEBUG", "\n", "self", ".", "num_nodes", "=", "0", "\n", "self", ".", "nodes", "=", "model", ".", "module", ".", "raiseNode", "(", ")", "\n", "\n", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "self", ".", "num_nodes", "+=", "1", "\n", "assert", "isinstance", "(", "\n", "node", ",", "NODE", ")", ",", "\"Unexpected type in NodeList of NasManager.\"", "\n", "", "self", ".", "MODE", "=", "None", "\n", "\n", "log_arch", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "supernet", ".", "blocks", ":", "\n", "            ", "log_arch", ".", "append", "(", "[", "]", ")", "\n", "for", "_", "in", "block", ".", "nodes", ":", "\n", "                ", "log_arch", "[", "-", "1", "]", ".", "append", "(", "struct", ".", "pack", "(", "''", ")", ")", "\n", "\n", "", "", "self", ".", "log", "=", "{", "'trainset'", ":", "[", "]", ",", "'evalset'", ":", "[", "]", ",", "\n", "\"archweight\"", ":", "log_arch", "}", "\n", "self", ".", "net_optimizer", "=", "None", "\n", "self", ".", "arch_optimizer", "=", "None", "\n", "self", ".", "net_lr_scheduler", "=", "None", "\n", "self", ".", "arch_lr_scheduler", "=", "None", "\n", "\n", "if", "self", ".", "DEBUG", ":", "\n", "            ", "highlight_msg", "(", "\n", "\"NasManager is configured not to save the checkpoint.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.buildOptim": [[62, 93], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "NASTop.NasManager.net.module.infer.raiseFixed", "enumerate", "enumerate", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "archList.append", "OP.named_parameters", "netList.append", "layer.parameters", "netDict[].append"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseFixed"], ["", "", "def", "buildOptim", "(", "self", ",", "lrNet", ",", "lrArch", ")", ":", "\n", "        ", "r'To build optimizers for network parameters and architecture parameters.'", "\n", "\n", "archList", "=", "[", "]", "\n", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "for", "i", ",", "OP", "in", "enumerate", "(", "node", ".", "candidates", ")", ":", "\n", "                ", "archDict", "=", "{", "}", "\n", "archDict", "[", "'lr'", "]", "=", "lrArch", "\n", "archDict", "[", "'params'", "]", "=", "[", "OP", ".", "arch_weight", "]", "\n", "archList", ".", "append", "(", "archDict", ")", "\n", "\n", "", "", "self", ".", "arch_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "archList", ")", "\n", "\n", "netList", "=", "[", "]", "\n", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "for", "i", ",", "OP", "in", "enumerate", "(", "node", ".", "candidates", ")", ":", "\n", "                ", "netDict", "=", "{", "}", "\n", "netDict", "[", "'lr'", "]", "=", "lrNet", "\n", "netDict", "[", "'params'", "]", "=", "[", "]", "\n", "for", "name", ",", "params", "in", "OP", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "if", "\"arch_weight\"", "not", "in", "name", ":", "\n", "                        ", "netDict", "[", "'params'", "]", ".", "append", "(", "params", ")", "\n", "", "", "netList", ".", "append", "(", "netDict", ")", "\n", "\n", "", "", "fixed_part", "=", "self", ".", "net", ".", "module", ".", "infer", ".", "raiseFixed", "(", ")", "\n", "if", "fixed_part", "==", "[", "]", ":", "\n", "            ", "self", ".", "net_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "netList", ",", "lr", "=", "lrNet", ")", "\n", "", "else", ":", "\n", "            ", "fixed_list", "=", "[", "{", "'params'", ":", "layer", ".", "parameters", "(", ")", "}", "\n", "for", "layer", "in", "fixed_part", "]", "\n", "self", ".", "net_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "fixed_list", "+", "netList", ",", "lr", "=", "lrNet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.warmUp": [[94, 162], ["NASTop.NasManager.warmupSet", "setattr", "setattr", "setattr", "setattr", "timeit.default_timer", "enumerate", "NASTop.NasManager.eval", "NASTop.validate", "print", "NASTop.NasManager.net_lr_scheduler.step", "NASTop.NasManager.warmupSet", "NASTop.NasManager.logLoss", "NASTop.NasManager.logDump", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "NASTop.NasManager.net_optimizer.zero_grad", "NASTop.NasManager.setManager", "NASTop.NasManager.net", "NASTop.NasManager.backward", "NASTop.NasManager.net_optimizer.step", "NASTop.NasManager.net_optimizer.zero_grad", "NASTop.NasManager.saveModel", "logits.cuda", "labels_padded.cuda", "input_lengths.cuda", "label_lengths.cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "NASTop.NasManager.new_ones", "timeit.default_timer", "NASTop.NasManager.logLoss", "print", "NASTop.NasManager.saveModel", "NASTop.NasManager.saveModel", "NASTop.NasManager.cpu", "len"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.warmupSet", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.eval", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.validate", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.warmupSet", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logDump", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.setManager", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel"], ["", "", "def", "warmUp", "(", "self", ",", "trainloader", ",", "testloader", ",", "args", ")", ":", "\n", "        ", "r'Warmup step of NAS'", "\n", "\n", "assert", "self", ".", "net_optimizer", "is", "not", "None", "and", "self", ".", "net_lr_scheduler", "is", "not", "None", ",", "\"Please run build_manager() before calling warmup().\"", "\n", "\n", "if", "args", ".", "resume", "is", "None", ":", "\n", "            ", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"e_min\"", ",", "10", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"lr_stop\"", ",", "\n", "self", ".", "net_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"len_ahead\"", ",", "3", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\n", "\"min_loss_improve\"", ",", "args", ".", "minLossImprove", ")", "\n", "\n", "", "self", ".", "warmupSet", "(", ")", "\n", "\n", "# Look forward several steps, if loss doesn't decrease, stop warmup.", "\n", "e", "=", "self", ".", "net_lr_scheduler", ".", "e_now", "\n", "while", "True", ":", "\n", "            ", "prev_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "e", "+=", "1", "\n", "running_loss", "=", "0.", "\n", "for", "i", ",", "minibatch", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "                ", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "minibatch", "\n", "\n", "self", ".", "net_optimizer", ".", "zero_grad", "(", ")", "\n", "# resample a new structure", "\n", "self", ".", "setManager", "(", ")", "\n", "loss", "=", "self", ".", "net", "(", "logits", ".", "cuda", "(", ")", ",", "labels_padded", ".", "cuda", "(", "\n", ")", ",", "input_lengths", ".", "cuda", "(", ")", ",", "label_lengths", ".", "cuda", "(", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "weight", "=", "torch", ".", "mean", "(", "path_weights", ")", "\n", "running_loss", "+=", "partial_loss", "-", "weight", "\n", "\n", "", "loss", ".", "backward", "(", "loss", ".", "new_ones", "(", "len", "(", "loss", ")", ")", ")", "\n", "\n", "self", ".", "net_optimizer", ".", "step", "(", ")", "\n", "self", ".", "net_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "i", "%", "10", "==", "9", "or", "args", ".", "debug", ":", "\n", "                    ", "cur_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "self", ".", "logLoss", "(", "\"time: {}, loss: {}\"", ".", "format", "(", "\n", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ")", ")", "\n", "print", "(", "\"\\repoch: {} | step: {} | time: {:.2f} | loss: {:.2f}\"", ".", "format", "(", "\n", "e", ",", "i", "+", "1", ",", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ")", ",", "end", "=", "''", ")", "\n", "prev_t", "=", "cur_t", "\n", "\n", "", "", "self", ".", "eval", "(", ")", "\n", "test_loss", "=", "validate", "(", "self", ",", "testloader", ")", "\n", "print", "(", "\" | test loss: {:.2f}\"", ".", "format", "(", "test_loss", ")", ")", "\n", "state", "=", "self", ".", "net_lr_scheduler", ".", "step", "(", "e", ",", "test_loss", ")", "\n", "\n", "self", ".", "warmupSet", "(", ")", "\n", "\n", "self", ".", "logLoss", "(", "\"loss: {}\"", ".", "format", "(", "test_loss", ")", ",", "loc", "=", "\"evalset\"", ")", "\n", "self", ".", "logDump", "(", "args", ".", "warmupDir", ",", "\"warmup.epoch{:02d}\"", ".", "format", "(", "e", ")", ")", "\n", "\n", "if", "state", "==", "0", ":", "\n", "                ", "self", ".", "saveModel", "(", "\n", "\"model.warmup.epoch.{}\"", ".", "format", "(", "e", ")", ",", "args", ".", "warmupDir", ")", "\n", "", "elif", "state", "==", "1", ":", "\n", "                ", "self", ".", "saveModel", "(", "\n", "\"model.warmup.epoch.{}\"", ".", "format", "(", "e", ")", ",", "args", ".", "warmupDir", ")", "\n", "self", ".", "saveModel", "(", "\"model.bestforas\"", ",", "args", ".", "warmupDir", ")", "\n", "", "elif", "state", "==", "2", ":", "\n", "                ", "break", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.archSearch": [[163, 254], ["itertools.cycle", "NASTop.NasManager.archsearchSet", "print", "setattr", "setattr", "setattr", "setattr", "setattr", "NASTop.Lr_Scheduler", "print", "timeit.default_timer", "enumerate", "NASTop.NasManager.eval", "NASTop.validate", "print", "NASTop.NasManager.net_lr_scheduler.step", "NASTop.NasManager.displayArch", "NASTop.NasManager.archsearchSet", "NASTop.NasManager.logLoss", "NASTop.NasManager.logDump", "next", "NASTop.NasManager.arch_optimizer.zero_grad", "NASTop.NasManager.modeswitch", "NASTop.NasManager.setManager", "NASTop.NasManager.net", "NASTop.NasManager.backward", "NASTop.NasManager.arch_optimizer.step", "NASTop.NasManager.logLoss", "NASTop.NasManager.net_optimizer.zero_grad", "NASTop.NasManager.modeswitch", "NASTop.NasManager.setManager", "NASTop.NasManager.net", "NASTop.NasManager.backward", "NASTop.NasManager.net_optimizer.step", "NASTop.NasManager.saveModel", "NASTop.NasManager.displayArch", "NASTop.NasManager.new_ones", "logits.cuda", "labels_padded.cuda", "input_lengths.cuda", "label_lengths.cuda", "NASTop.NasManager.new_ones", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "timeit.default_timer", "NASTop.NasManager.logLoss", "print", "NASTop.NasManager.saveModel", "NASTop.NasManager.saveModel", "len", "len", "NASTop.NasManager.cpu", "print"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.archsearchSet", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.eval", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.validate", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.displayArch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.archsearchSet", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logDump", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.setManager", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.setManager", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.displayArch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel"], ["", "", "def", "archSearch", "(", "self", ",", "trainloader", ",", "testloader", ",", "args", ")", ":", "\n", "        ", "r'Arch search step of NAS.'", "\n", "\n", "assert", "self", ".", "net_optimizer", "is", "not", "None", "and", "self", ".", "net_lr_scheduler", "is", "not", "None", ",", "\"Please run build_manager() before calling archsearch().\"", "\n", "if", "args", ".", "resume", "is", "None", "or", "self", ".", "arch_lr_scheduler", "is", "None", ":", "\n", "            ", "print", "(", "\"Continue with warmup.\"", ")", "\n", "# directly call archsearch or resume from warmup, so there is no arch_lr_scheduler", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"e_min\"", ",", "0", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"e_now\"", ",", "0", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"lr_stop\"", ",", "\n", "self", ".", "net_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "*", "0.1", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"len_ahead\"", ",", "3", ")", "\n", "setattr", "(", "self", ".", "net_lr_scheduler", ",", "\"min_loss_improve\"", ",", "args", ".", "minLossImprove", ")", "\n", "self", ".", "arch_lr_scheduler", "=", "Lr_Scheduler", "(", "self", ".", "arch_optimizer", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Resumed from paused arch search.\"", ")", "\n", "\n", "# empty log", "\n", "", "self", ".", "log", "[", "'trainset'", "]", "=", "[", "]", "\n", "self", ".", "log", "[", "'evalset'", "]", "=", "[", "]", "\n", "\n", "netTrloader", "=", "trainloader", "\n", "archIter", "=", "cycle", "(", "testloader", ")", "\n", "# config NASManager in arch search mode", "\n", "self", ".", "archsearchSet", "(", ")", "\n", "e", "=", "self", ".", "net_lr_scheduler", ".", "e_now", "\n", "interVal", "=", "1000", "# interval for monitoring", "\n", "\n", "while", "True", ":", "\n", "            ", "e", "+=", "1", "\n", "running_loss", "=", "0.", "\n", "prev_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "for", "i", ",", "minibatch", "in", "enumerate", "(", "netTrloader", ")", ":", "\n", "                ", "if", "i", "%", "interVal", "==", "0", "and", "not", "self", ".", "DEBUG", "and", "i", ">", "0", ":", "\n", "                    ", "self", ".", "displayArch", "(", "toFile", "=", "args", ".", "disptofile", ")", "\n", "", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "next", "(", "\n", "archIter", ")", "\n", "\n", "self", ".", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "modeswitch", "(", "\"search\"", ")", "\n", "self", ".", "setManager", "(", "setforArch", "=", "True", ")", "\n", "arch_loss", "=", "self", ".", "net", "(", "logits", ",", "labels_padded", ",", "input_lengths", ",", "label_lengths", ")", "\n", "arch_loss", ".", "backward", "(", "arch_loss", ".", "new_ones", "(", "len", "(", "arch_loss", ")", ")", ")", "\n", "self", ".", "arch_optimizer", ".", "step", "(", ")", "\n", "self", ".", "logLoss", "(", "loc", "=", "\"archweight\"", ")", "\n", "\n", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "minibatch", "\n", "self", ".", "net_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "modeswitch", "(", "\"eval\"", ")", "\n", "self", ".", "setManager", "(", ")", "\n", "\n", "loss", "=", "self", ".", "net", "(", "logits", ".", "cuda", "(", ")", ",", "labels_padded", ".", "cuda", "(", ")", ",", "\n", "input_lengths", ".", "cuda", "(", ")", ",", "label_lengths", ".", "cuda", "(", ")", ")", "\n", "loss", ".", "backward", "(", "loss", ".", "new_ones", "(", "len", "(", "loss", ")", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "weight", "=", "torch", ".", "mean", "(", "path_weights", ")", "\n", "running_loss", "+=", "partial_loss", "-", "weight", "\n", "", "self", ".", "net_optimizer", ".", "step", "(", ")", "\n", "if", "i", "%", "10", "==", "9", "or", "args", ".", "debug", ":", "\n", "                    ", "cur_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "self", ".", "logLoss", "(", "\"time: {}, loss: {}\"", ".", "format", "(", "\n", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ")", ")", "\n", "print", "(", "\"\\repoch: {} | step: {} | time: {:.2f} | loss: {:.2f}\"", ".", "format", "(", "\n", "e", ",", "i", "+", "1", ",", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ")", ",", "end", "=", "''", ")", "\n", "prev_t", "=", "cur_t", "\n", "\n", "# eval", "\n", "", "", "self", ".", "eval", "(", ")", "\n", "test_loss", "=", "validate", "(", "self", ",", "testloader", ")", "\n", "print", "(", "\" | test loss: {:.2f}\"", ".", "format", "(", "test_loss", ")", ")", "\n", "state", "=", "self", ".", "net_lr_scheduler", ".", "step", "(", "e", ",", "test_loss", ")", "\n", "self", ".", "displayArch", "(", ")", "\n", "self", ".", "archsearchSet", "(", ")", "\n", "\n", "self", ".", "logLoss", "(", "\"loss: {}\"", ".", "format", "(", "test_loss", ")", ",", "loc", "=", "\"evalset\"", ")", "\n", "self", ".", "logDump", "(", "args", ".", "archsearchDir", ",", "\"as.epoch{:02d}\"", ".", "format", "(", "e", ")", ")", "\n", "\n", "if", "state", "==", "0", ":", "\n", "                ", "self", ".", "saveModel", "(", "\"model.as.epoch.{}\"", ".", "format", "(", "\n", "e", ")", ",", "args", ".", "archsearchDir", ")", "\n", "", "elif", "state", "==", "1", ":", "\n", "                ", "self", ".", "saveModel", "(", "\"model.as.epoch.{}\"", ".", "format", "(", "\n", "e", ")", ",", "args", ".", "archsearchDir", ")", "\n", "self", ".", "saveModel", "(", "\"model.bestforretrain\"", ",", "args", ".", "archsearchDir", ")", "\n", "", "elif", "state", "==", "2", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"Unknown state: {}\"", ".", "format", "(", "state", ")", ")", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.retrain": [[255, 293], ["NASTop.NasManager.supernet._fetch_best", "NASTop.build_model", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "NASTop.Lr_Scheduler_MileStone", "print", "print", "NASTop.train", "build_model.parameters", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "build_model.load_state_dict", "NASTop.Lr_Scheduler.load_state_dict", "build_model.module.printGraph", "utils.count_parameters"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet._fetch_best", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.build_model", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.count_parameters"], ["", "", "", "def", "retrain", "(", "self", ",", "trainloader", ",", "testloader", ",", "args", ")", ":", "\n", "        ", "r'Retrain procedure of NAS.`*config` refers \\\n        to those arguments used to build NasModel'", "\n", "\n", "assert", "self", ".", "arch_lr_scheduler", "is", "not", "None", ",", "\"retrain() MUST be called after arch search is done!\"", "\n", "\n", "# fetch the best op among candidates", "\n", "selected_op", "=", "self", ".", "supernet", ".", "_fetch_best", "(", ")", "\n", "\n", "# build the compact model", "\n", "model", "=", "build_model", "(", "args", ",", "candidates", "=", "selected_op", ")", "\n", "\n", "lr_stop", "=", "1e-5", "\n", "e_min", "=", "10", "\n", "del", "self", ".", "net", "\n", "self", ".", "net", "=", "None", "\n", "self", ".", "supernet", "=", "None", "\n", "self", ".", "nodes", "=", "None", "\n", "self", ".", "net_optimizer", "=", "None", "\n", "self", ".", "arch_optimizer", "=", "None", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lrRetrain", ")", "\n", "lr_scheduler", "=", "Lr_Scheduler_MileStone", "(", "\n", "optimizer", ",", "e_min", ",", "lr_stop", "=", "lr_stop", ",", "look_fw", "=", "1", ",", "gamma", "=", "0.1", ")", "\n", "\n", "if", "args", ".", "resumeRetrain", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"Resume model from {}\"", ".", "format", "(", "args", ".", "resumeRetrain", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resumeRetrain", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n", "del", "checkpoint", "\n", "\n", "", "print", "(", "model", ".", "module", ".", "printGraph", "(", ")", ")", "\n", "print", "(", "\"Model size:{:.2f}M\"", ".", "format", "(", "count_parameters", "(", "model", ")", "/", "1e6", ")", ")", "\n", "\n", "train", "(", "model", ",", "trainloader", ",", "testloader", ",", "optimizer", ",", "\n", "lr_scheduler", ",", "args", ".", "retrainDir", ",", "self", ".", "DEBUG", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.displayArch": [[294, 396], ["archname.append", "archweights.append", "range", "range", "range", "range", "range", "print", "node.raiseArchProbs().tolist", "archweights[].append", "archname[].append", "max", "range", "range", "range", "range", "range", "range", "range", "open", "file.write", "str", "opstr.append", "len", "max", "range", "len", "[].index", "node.raiseArchProbs", "str.split", "len", "len", "len", "len", "len", "len", "max", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs"], ["", "def", "displayArch", "(", "self", ",", "showall", "=", "True", ",", "toFile", "=", "None", ")", ":", "\n", "        ", "r'Show the candidates and corresponding probabilities.\\\n        `showall=True` shows all candidates\\\n        `showall=False` only shows the candidate with largest\\\n        probability in each node.'", "\n", "\n", "disp", "=", "\"\"", "\n", "len_name_max", "=", "0", "\n", "archname", "=", "[", "]", "\n", "archweights", "=", "[", "]", "\n", "max_node", "=", "0", "\n", "for", "block", "in", "self", ".", "supernet", ".", "blocks", ":", "\n", "            ", "archname", ".", "append", "(", "[", "]", ")", "\n", "archweights", ".", "append", "(", "[", "]", ")", "\n", "if", "block", ".", "num_node", ">", "max_node", ":", "\n", "                ", "max_node", "=", "block", ".", "num_node", "\n", "", "for", "node", "in", "block", ".", "nodes", ":", "\n", "                ", "opstr", "=", "[", "]", "\n", "w_innode", "=", "node", ".", "raiseArchProbs", "(", ")", ".", "tolist", "(", ")", "\n", "for", "OP", "in", "node", ".", "candidates", ":", "\n", "                    ", "thisop", "=", "str", "(", "OP", ")", "\n", "thisop", "=", "thisop", ".", "split", "(", "'('", ")", "[", "0", "]", "\n", "if", "len", "(", "thisop", ")", ">", "len_name_max", ":", "\n", "                        ", "len_name_max", "=", "len", "(", "thisop", ")", "\n", "", "opstr", ".", "append", "(", "thisop", ")", "\n", "", "archweights", "[", "-", "1", "]", ".", "append", "(", "w_innode", ")", "\n", "archname", "[", "-", "1", "]", ".", "append", "(", "opstr", ")", "\n", "\n", "", "", "if", "showall", ":", "\n", "# display first node for all blocks", "\n", "            ", "for", "o", "in", "range", "(", "max", "(", "[", "len", "(", "x", "[", "0", "]", ")", "for", "x", "in", "archweights", "]", ")", ")", ":", "\n", "                ", "for", "b", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                    ", "if", "o", "<", "len", "(", "archweights", "[", "b", "]", "[", "0", "]", ")", ":", "\n", "                        ", "name", "=", "(", "len_name_max", "-", "\n", "len", "(", "archname", "[", "b", "]", "[", "0", "]", "[", "o", "]", ")", ")", "*", "' '", "+", "archname", "[", "b", "]", "[", "0", "]", "[", "o", "]", "\n", "disp", "+=", "\"{}:{:6.2f}% \"", ".", "format", "(", "name", ",", "\n", "archweights", "[", "b", "]", "[", "0", "]", "[", "o", "]", "*", "100", ")", "\n", "", "else", ":", "\n", "                        ", "disp", "+=", "\" \"", "*", "(", "len_name_max", "+", "9", ")", "\n", "", "", "disp", "+=", "\"\\n\"", "\n", "\n", "# display other nodes", "\n", "", "for", "n", "in", "range", "(", "1", ",", "max_node", ")", ":", "\n", "                ", "for", "_", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                    ", "disp", "+=", "\"-\"", "*", "(", "len_name_max", "+", "8", ")", "+", "\" \"", "\n", "", "disp", "+=", "\"\\n\"", "\n", "\n", "len_ops", "=", "[", "0", "]", "*", "self", ".", "supernet", ".", "num_block", "\n", "for", "b", "in", "range", "(", "len", "(", "archweights", ")", ")", ":", "\n", "                    ", "if", "n", "<", "len", "(", "archweights", "[", "b", "]", ")", ":", "\n", "                        ", "len_ops", "[", "b", "]", "=", "len", "(", "archweights", "[", "b", "]", "[", "n", "]", ")", "\n", "\n", "", "", "for", "o", "in", "range", "(", "max", "(", "len_ops", ")", ")", ":", "\n", "                    ", "for", "b", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                        ", "if", "n", "<", "len", "(", "archweights", "[", "b", "]", ")", ":", "\n", "                            ", "if", "o", "<", "len", "(", "archweights", "[", "b", "]", "[", "n", "]", ")", ":", "\n", "                                ", "name", "=", "(", "\n", "len_name_max", "-", "len", "(", "archname", "[", "b", "]", "[", "n", "]", "[", "o", "]", ")", ")", "*", "' '", "+", "archname", "[", "b", "]", "[", "n", "]", "[", "o", "]", "\n", "disp", "+=", "\"{}:{:6.2f}% \"", ".", "format", "(", "\n", "name", ",", "archweights", "[", "b", "]", "[", "n", "]", "[", "o", "]", "*", "100", ")", "\n", "", "else", ":", "\n", "                                ", "disp", "+=", "\" \"", "*", "(", "len_name_max", "+", "9", ")", "\n", "", "", "else", ":", "\n", "                            ", "disp", "+=", "\" \"", "*", "(", "len_name_max", "+", "9", ")", "\n", "", "", "disp", "+=", "\"\\n\"", "\n", "\n", "", "", "", "else", ":", "\n", "# only show the best arch in each candidate", "\n", "            ", "len_name_max", "=", "0", "\n", "for", "b", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                ", "for", "n", "in", "range", "(", "len", "(", "archweights", "[", "b", "]", ")", ")", ":", "\n", "                    ", "idx_max", "=", "archweights", "[", "b", "]", "[", "n", "]", ".", "index", "(", "max", "(", "archweights", "[", "b", "]", "[", "n", "]", ")", ")", "\n", "archweights", "[", "b", "]", "[", "n", "]", "=", "archweights", "[", "b", "]", "[", "n", "]", "[", "idx_max", "]", "\n", "archname", "[", "b", "]", "[", "n", "]", "=", "archname", "[", "b", "]", "[", "n", "]", "[", "idx_max", "]", "\n", "if", "len", "(", "archname", "[", "b", "]", "[", "n", "]", ")", ">", "len_name_max", ":", "\n", "                        ", "len_name_max", "=", "len", "(", "archname", "[", "b", "]", "[", "n", "]", ")", "\n", "\n", "", "", "", "for", "b", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                ", "name", "=", "(", "len_name_max", "-", "len", "(", "archname", "[", "b", "]", "[", "0", "]", ")", ")", "*", "' '", "+", "archname", "[", "b", "]", "[", "0", "]", "\n", "disp", "+=", "\"{}:{:6.2f}% \"", ".", "format", "(", "name", ",", "archweights", "[", "b", "]", "[", "0", "]", "*", "100", ")", "\n", "", "disp", "+=", "\"\\n\"", "\n", "\n", "for", "n", "in", "range", "(", "1", ",", "max_node", ")", ":", "\n", "                ", "for", "_", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                    ", "disp", "+=", "\"-\"", "*", "(", "len_name_max", "+", "8", ")", "+", "\" \"", "\n", "", "disp", "+=", "\"\\n\"", "\n", "\n", "for", "b", "in", "range", "(", "self", ".", "supernet", ".", "num_block", ")", ":", "\n", "                    ", "if", "n", "<", "len", "(", "archweights", "[", "b", "]", ")", ":", "\n", "                        ", "name", "=", "(", "len_name_max", "-", "\n", "len", "(", "archname", "[", "b", "]", "[", "n", "]", ")", ")", "*", "' '", "+", "archname", "[", "b", "]", "[", "n", "]", "\n", "disp", "+=", "\"{}:{:6.2f}% \"", ".", "format", "(", "name", ",", "\n", "archweights", "[", "b", "]", "[", "n", "]", "*", "100", ")", "\n", "", "else", ":", "\n", "                        ", "disp", "+=", "\" \"", "*", "(", "len_name_max", "+", "9", ")", "\n", "", "", "disp", "+=", "\"\\n\"", "\n", "\n", "", "", "if", "toFile", "is", "None", ":", "\n", "            ", "print", "(", "\"\\n{}\\n\"", ".", "format", "(", "disp", ")", ")", "\n", "", "else", ":", "\n", "            ", "with", "open", "(", "toFile", ",", "'w'", ")", "as", "file", ":", "\n", "                ", "file", ".", "write", "(", "disp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.setManager": [[397, 462], ["NASTop.NasManager.apply_fn_node", "NASTop.NasManager.apply_fn_node", "NASTop.NasManager.apply_fn_node", "OP.parameters", "node.candidates[].named_parameters", "numpy.random.randint", "list", "node.raiseArchProbs", "range", "node.raiseArchProbs", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "torch.multinomial().tolist", "node.raiseArchProbs.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.apply_fn_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.apply_fn_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.apply_fn_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs"], ["", "", "", "def", "setManager", "(", "self", ",", "setforArch", "=", "False", ")", ":", "\n", "        ", "r'Set the architecture during forward stage.\\\n        `setforArch=True` when training arch parameters.\\\n        `setforArch=False` when training network parameters.'", "\n", "\n", "def", "_setEdge", "(", "node", ":", "NODE", ")", ":", "\n", "            ", "if", "node", ".", "MODE", "==", "\"warmup\"", ":", "\n", "                ", "\"\"\"\n                mode:warmup\n                sample one op uniformly\n                \"\"\"", "\n", "node", ".", "idx_activated", "=", "[", "\n", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "node", ".", "num_ops", ")", "]", "\n", "node", ".", "idx_involved", "=", "node", ".", "idx_activated", "\n", "\n", "", "elif", "node", ".", "MODE", "==", "\"search\"", ":", "\n", "                ", "\"\"\"\n                mode:search\n                \"\"\"", "\n", "\n", "node", ".", "idx_involved", "=", "list", "(", "range", "(", "node", ".", "num_ops", ")", ")", "\n", "probs", "=", "node", ".", "raiseArchProbs", "(", ")", "\n", "# sample according to probability", "\n", "node", ".", "idx_activated", "=", "[", "node", ".", "idx_involved", "[", "probs", ".", "multinomial", "(", "1", ")", "]", "]", "\n", "", "elif", "node", ".", "MODE", "==", "\"eval\"", ":", "\n", "                ", "\"\"\"\n                mode:eval\n                mode to do evaluation.\n                sample one OP from candidates in each NODE according to\n                their softmax-probability.\n                \"\"\"", "\n", "probs", "=", "node", ".", "raiseArchProbs", "(", ")", "\n", "node", ".", "idx_involved", "=", "torch", ".", "multinomial", "(", "probs", ",", "1", ")", ".", "tolist", "(", ")", "\n", "node", ".", "idx_activated", "=", "node", ".", "idx_involved", "\n", "\n", "", "", "\"\"\"\n        Release all gradient of candidates parameters.\\\n        call this function after parameter updating, or\\\n        gradients might be lost.\n        \"\"\"", "\n", "def", "_release_grad", "(", "node", ":", "NODE", ")", ":", "\n", "            ", "for", "OP", "in", "node", ".", "candidates", ":", "\n", "                ", "for", "params", "in", "OP", ".", "parameters", "(", ")", ":", "\n", "                    ", "params", ".", "requires_grad", "=", "False", "\n", "del", "params", ".", "grad", "\n", "params", ".", "grad", "=", "None", "\n", "\n", "", "", "", "def", "_build_grad", "(", "node", ":", "NODE", ")", ":", "\n", "            ", "idx_activated", "=", "node", ".", "idx_activated", "[", "0", "]", "\n", "if", "setforArch", ":", "\n", "                ", "for", "idx", "in", "node", ".", "idx_involved", ":", "\n", "                    ", "node", ".", "candidates", "[", "idx", "]", ".", "arch_weight", ".", "requires_grad", "=", "True", "\n", "", "", "else", ":", "\n", "                ", "for", "name", ",", "params", "in", "node", ".", "candidates", "[", "idx_activated", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "if", "'arch_weight'", "not", "in", "name", ":", "\n", "                        ", "params", ".", "requires_grad", "=", "True", "\n", "\n", "# release grad", "\n", "", "", "", "", "self", ".", "apply_fn_node", "(", "_release_grad", ")", "\n", "self", ".", "apply_fn_node", "(", "_setEdge", ")", "\n", "# if self.MODE == \"eval\":", "\n", "#     # for eval mode, it is not required to re-build the gradients", "\n", "#     return", "\n", "# set requires_grad=True for active op", "\n", "self", ".", "apply_fn_node", "(", "_build_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch": [[463, 470], ["None"], "methods", ["None"], ["", "def", "modeswitch", "(", "self", ",", "mode", ":", "str", ")", ":", "\n", "        ", "r'''\n        switch mode of nodes to `mode`\n        '''", "\n", "assert", "mode", "in", "(", "\"warmup\"", ",", "\"eval\"", ",", "\"search\"", ")", "\n", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "node", ".", "MODE", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.saveModel": [[471, 491], ["print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "NASTop.NasManager.net.state_dict", "NASTop.NasManager.net_lr_scheduler.state_dict", "NASTop.NasManager.net.state_dict", "NASTop.NasManager.net_lr_scheduler.state_dict", "NASTop.NasManager.arch_lr_scheduler.state_dict"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict"], ["", "", "def", "saveModel", "(", "self", ",", "name", ",", "PATH", ")", ":", "\n", "        ", "r'Save checkpoint.\\\n        The checkpoint file would be located at `PATH/name.pt`'", "\n", "\n", "if", "self", ".", "DEBUG", ":", "\n", "            ", "print", "(", "\"Debugging, skipped saving model.\"", ")", "\n", "return", "\n", "", "if", "PATH", "[", "-", "1", "]", "!=", "'/'", ":", "\n", "            ", "PATH", "+=", "'/'", "\n", "", "if", "self", ".", "MODE", "==", "\"warmup\"", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'model'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'net_lr_scheduler'", ":", "self", ".", "net_lr_scheduler", ".", "state_dict", "(", ")", "\n", "}", ",", "PATH", "+", "name", "+", "'.pt'", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'model'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'net_lr_scheduler'", ":", "self", ".", "net_lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'arch_lr_scheduler'", ":", "self", ".", "arch_lr_scheduler", ".", "state_dict", "(", ")", "\n", "}", ",", "PATH", "+", "name", "+", "'.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.loadModel": [[492, 512], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "NASTop.NasManager.net.load_state_dict", "NASTop.NasManager.net_lr_scheduler.load_state_dict", "torch.load.keys", "torch.load.keys", "torch.load.keys", "NASTop.Lr_Scheduler", "NASTop.NasManager.arch_lr_scheduler.load_state_dict", "NASTop.NasManager.arch_lr_scheduler.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict"], ["", "", "def", "loadModel", "(", "self", ",", "PATH", ")", ":", "\n", "        ", "r'Load checkpoint from `PATH`.'", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "PATH", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "self", ".", "net_lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'net_lr_scheduler'", "]", ")", "\n", "\n", "if", "'arch_lr_scheduler'", "in", "checkpoint", ".", "keys", "(", ")", ":", "\n", "            ", "if", "self", ".", "arch_lr_scheduler", "is", "None", ":", "\n", "                ", "'''\n                arch_lr_scheduler is not create when building manager, so there\n                might be cases that calling loadModel() before creating arch_lr_scheduler.\n                Temporarily save the checkpoint into self.arch_lr_scheduler\n                '''", "\n", "self", ".", "arch_lr_scheduler", "=", "Lr_Scheduler", "(", "self", ".", "arch_optimizer", ")", "\n", "self", ".", "arch_lr_scheduler", ".", "load_state_dict", "(", "\n", "checkpoint", "[", "'arch_lr_scheduler'", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "arch_lr_scheduler", ".", "load_state_dict", "(", "\n", "checkpoint", "[", "'arch_lr_scheduler'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logLoss": [[513, 524], ["enumerate", "NASTop.NasManager.log[].append", "enumerate", "node.raiseArchProbs().tolist", "struct.pack", "node.raiseArchProbs", "len"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs"], ["", "", "", "def", "logLoss", "(", "self", ",", "loss_msg", "=", "None", ",", "loc", "=", "\"trainset\"", ")", ":", "\n", "        ", "assert", "loc", "in", "(", "\"trainset\"", ",", "\"evalset\"", ",", "\"archweight\"", ")", "\n", "\n", "if", "loc", "==", "\"archweight\"", ":", "\n", "            ", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "supernet", ".", "blocks", ")", ":", "\n", "                ", "for", "j", ",", "node", "in", "enumerate", "(", "block", ".", "nodes", ")", ":", "\n", "                    ", "archlog", "=", "node", ".", "raiseArchProbs", "(", ")", ".", "tolist", "(", ")", "\n", "archlog", "=", "struct", ".", "pack", "(", "\"%dd\"", "%", "len", "(", "archlog", ")", ",", "*", "archlog", ")", "\n", "self", ".", "log", "[", "'archweight'", "]", "[", "i", "]", "[", "j", "]", "+=", "archlog", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "log", "[", "loc", "]", ".", "append", "(", "loss_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logDump": [[525, 567], ["NASTop.NasManager.log.items", "print", "datetime.datetime.now().strftime", "struct.pack", "enumerate", "open", "file.write", "datetime.datetime.now", "len", "struct.pack", "enumerate", "open", "file.write", "struct.pack", "struct.pack", "struct.pack", "struct.pack", "len", "names.encode", "len", "str().split", "len", "str"], "methods", ["None"], ["", "", "def", "logDump", "(", "self", ",", "PATH", ",", "nameappd", "=", "''", ")", ":", "\n", "        ", "if", "self", ".", "DEBUG", ":", "\n", "            ", "print", "(", "\"Debugging, skipped log dump.\"", ")", "\n", "return", "\n", "", "nameappd", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\n", "'%Y_%m_%d_%H_%M_%S'", ")", "if", "nameappd", "==", "''", "else", "nameappd", "\n", "\n", "if", "PATH", "[", "-", "1", "]", "!=", "'/'", ":", "\n", "            ", "PATH", "=", "PATH", "+", "'/'", "\n", "", "for", "key", ",", "value", "in", "self", ".", "log", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", "in", "(", "\"archweight\"", ")", "and", "self", ".", "MODE", "==", "\"warmup\"", ":", "\n", "                ", "continue", "\n", "", "if", "key", "==", "\"archweight\"", ":", "\n", "# number of blocks", "\n", "                ", "bindata", "=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "value", ")", ")", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "supernet", ".", "blocks", ")", ":", "\n", "# number of nodes in each block", "\n", "                    ", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "block", ".", "num_node", ")", "\n", "for", "j", ",", "node", "in", "enumerate", "(", "block", ")", ":", "\n", "# number of candidate operations in each node", "\n", "                        ", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "node", ".", "num_ops", ")", "\n", "# length of names of candidate operations", "\n", "names", "=", "\"\"", "\n", "for", "op", "in", "node", ".", "candidates", ":", "\n", "                            ", "names", "+=", "str", "(", "op", ")", ".", "split", "(", "'('", ")", "[", "0", "]", "\n", "names", "+=", "','", "\n", "", "names", "=", "names", "[", ":", "-", "1", "]", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "names", ")", ")", "\n", "# names of all candidate operations", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'%ds'", "%", "\n", "(", "len", "(", "names", ")", ")", ",", "names", ".", "encode", "(", "\"utf8\"", ")", ")", "\n", "# length of probs (in bytes)", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "value", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "# probs of each node", "\n", "bindata", "+=", "value", "[", "i", "]", "[", "j", "]", "\n", "\n", "", "", "with", "open", "(", "\"{}/{}.{}.bin\"", ".", "format", "(", "PATH", ",", "key", ",", "nameappd", ")", ",", "'wb'", ")", "as", "file", ":", "\n", "                    ", "file", ".", "write", "(", "bindata", ")", "\n", "", "continue", "\n", "\n", "", "with", "open", "(", "\"{}/{}.{}.LOG\"", ".", "format", "(", "PATH", ",", "key", ",", "nameappd", ")", ",", "'w+'", ",", "encoding", "=", "'utf8'", ")", "as", "file", ":", "\n", "                ", "file", ".", "write", "(", "'\\n'", ".", "join", "(", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.archsearchSet": [[568, 572], ["NASTop.NasManager.modeswitch", "NASTop.NasManager.net.train"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train"], ["", "", "", "def", "archsearchSet", "(", "self", ")", ":", "\n", "        ", "self", ".", "MODE", "=", "\"search\"", "\n", "self", ".", "modeswitch", "(", "\"search\"", ")", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.warmupSet": [[573, 577], ["NASTop.NasManager.modeswitch", "NASTop.NasManager.net.train"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train"], ["", "def", "warmupSet", "(", "self", ")", ":", "\n", "        ", "self", ".", "MODE", "=", "\"warmup\"", "\n", "self", ".", "modeswitch", "(", "\"warmup\"", ")", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.eval": [[578, 582], ["NASTop.NasManager.modeswitch", "NASTop.NasManager.net.eval"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.modeswitch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.eval"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "MODE", "=", "\"eval\"", "\n", "self", ".", "modeswitch", "(", "\"eval\"", ")", "\n", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.apply_fn_node": [[583, 586], ["fn"], "methods", ["None"], ["", "def", "apply_fn_node", "(", "self", ",", "fn", ")", ":", "\n", "        ", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "fn", "(", "node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasModel.__init__": [[654, 667], ["torch.Module.__init__", "NET", "ctc_crf.WARP_CTC_LOSS", "ctc_crf.CTC_CRF_LOSS"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "NET", ":", "superNet", "=", "None", ",", "fn_loss", "=", "'crf'", ",", "lamb", ":", "float", "=", "0.1", ",", "net_configs", ":", "dict", "=", "None", ")", ":", "\n", "        ", "super", "(", "NasModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "NET", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "infer", "=", "NET", "(", "**", "net_configs", ")", "\n", "\n", "if", "fn_loss", "==", "\"ctc\"", ":", "\n", "            ", "self", ".", "loss_fn", "=", "WARP_CTC_LOSS", "(", ")", "\n", "", "elif", "fn_loss", "==", "\"crf\"", ":", "\n", "            ", "self", ".", "loss_fn", "=", "CTC_CRF_LOSS", "(", "lamb", "=", "lamb", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasModel.raiseNode": [[668, 670], ["NASTop.NasModel.infer.raiseNode"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseNode"], ["", "", "def", "raiseNode", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "infer", ".", "raiseNode", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasModel.raiseFixed": [[671, 673], ["NASTop.NasModel.infer.raiseFixed"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseFixed"], ["", "def", "raiseFixed", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "infer", ".", "raiseFixed", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasModel.printGraph": [[674, 678], ["NASTop.NasModel.infer.printGraph"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph"], ["", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "supernet_graph", "=", "self", ".", "infer", ".", "printGraph", "(", ")", "\n", "full_graph", "=", "supernet_graph", "\n", "return", "[", "\"%d-%d@%s\"", "%", "(", "tail", ",", "head", ",", "op", ")", "for", "(", "tail", ",", "head", ",", "op", ")", "in", "full_graph", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasModel.forward": [[679, 702], ["torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "labels_padded.cpu.cpu.cpu", "label_lengths.cpu.cpu.cpu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "NASTop.NasModel.infer", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "NASTop.NasModel.loss_fn", "indices.dim", "lens_o.to().cpu", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "enumerate", "print", "sys.exit", "lens_o.to"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels_padded", ",", "input_lengths", ",", "label_lengths", ")", ":", "\n", "# rearrange by input_lengths", "\n", "        ", "input_lengths", ",", "indices", "=", "torch", ".", "sort", "(", "input_lengths", ",", "descending", "=", "True", ")", "\n", "assert", "indices", ".", "dim", "(", ")", "==", "1", ",", "\"input_lengths should have only 1 dim\"", "\n", "logits", "=", "torch", ".", "index_select", "(", "logits", ",", "0", ",", "indices", ")", "\n", "labels_padded", "=", "torch", ".", "index_select", "(", "labels_padded", ",", "0", ",", "indices", ")", "\n", "label_lengths", "=", "torch", ".", "index_select", "(", "label_lengths", ",", "0", ",", "indices", ")", "\n", "\n", "labels_padded", "=", "labels_padded", ".", "cpu", "(", ")", "\n", "label_lengths", "=", "label_lengths", ".", "cpu", "(", ")", "\n", "\n", "label_list", "=", "[", "labels_padded", "[", "i", ",", ":", "x", "]", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "label_lengths", ")", "]", "\n", "labels", "=", "torch", ".", "cat", "(", "label_list", ")", "\n", "\n", "netout", ",", "lens_o", "=", "self", ".", "infer", "(", "logits", ",", "input_lengths", ")", "\n", "netout", "=", "F", ".", "log_softmax", "(", "netout", ",", "dim", "=", "2", ")", "\n", "loss", "=", "self", ".", "loss_fn", "(", "netout", ",", "labels", ",", "lens_o", ".", "to", "(", "torch", ".", "int32", ")", ".", "cpu", "(", ")", ",", "label_lengths", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "torch", ".", "isnan", "(", "loss", ")", ":", "\n", "                ", "print", "(", "\"nan in loss.\"", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.__init__": [[845, 848], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ")", ":", "\n", "        ", "super", "(", "Lr_Scheduler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict": [[849, 858], ["collections.OrderedDict", "vars().items", "vars", "value.state_dict"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.state_dict"], ["", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "output", "=", "OrderedDict", "(", ")", "\n", "for", "name", ",", "value", "in", "vars", "(", "self", ")", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "==", "'optimizer'", ":", "\n", "                ", "output", "[", "'optimizer'", "]", "=", "value", ".", "state_dict", "(", ")", "\n", "output", "[", "'lr'", "]", "=", "value", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "", "else", ":", "\n", "                ", "output", "[", "name", "]", "=", "value", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict": [[859, 870], ["vars().keys", "vars", "NASTop.Lr_Scheduler.optimizer.load_state_dict", "NASTop.Lr_Scheduler.load_state_dict.set_lr"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "ckpt", ":", "OrderedDict", ")", ":", "\n", "        ", "def", "set_lr", "(", "optimizer", ",", "lr", ")", ":", "\n", "            ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "", "", "for", "name", "in", "vars", "(", "self", ")", ".", "keys", "(", ")", ":", "\n", "            ", "if", "name", "==", "\"optimizer\"", ":", "\n", "                ", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "name", "]", ")", "\n", "set_lr", "(", "self", ".", "optimizer", ",", "ckpt", "[", "'lr'", "]", ")", "\n", "", "elif", "name", "in", "(", "\"worse_loss_count\"", ",", "\"best_loss\"", ",", "\"e_now\"", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "name", ",", "ckpt", "[", "name", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.__init__": [[873, 883], ["NASTop.Lr_Scheduler.__init__", "float"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "epoch_min", ",", "lr_stop", "=", "1e-5", ",", "look_fw", "=", "1", ",", "gamma", "=", "0.1", ",", "min_loss_improve", "=", "0.", ")", ":", "\n", "        ", "super", "(", "Lr_Scheduler_MileStone", ",", "self", ")", ".", "__init__", "(", "optimizer", ")", "\n", "self", ".", "lr_stop", "=", "lr_stop", "\n", "self", ".", "len_ahead", "=", "look_fw", "\n", "self", ".", "worse_loss_count", "=", "0", "\n", "self", ".", "best_loss", "=", "float", "(", "'inf'", ")", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "e_min", "=", "epoch_min", "\n", "self", ".", "e_now", "=", "0", "\n", "self", ".", "min_loss_improve", "=", "min_loss_improve", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step": [[884, 921], ["print", "print", "NASTop.Lr_Scheduler_MileStone.step.adjust_lr"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "global_epoch", ",", "loss", ")", ":", "\n", "        ", "r'''\n        return three state (int)`0`,`1`,`2`.\\\n        `0`: save ckeckpoint and continue\\\n        `1`: save checkpoint, inference model and continue\\\n        `2`: stop training.\n        '''", "\n", "def", "adjust_lr", "(", "optimizer", ",", "gamma", ")", ":", "\n", "            ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "*=", "gamma", "\n", "\n", "", "", "self", ".", "e_now", "=", "global_epoch", "\n", "if", "self", ".", "e_now", "<=", "self", ".", "e_min", ":", "\n", "            ", "if", "loss", "<", "self", ".", "best_loss", ":", "\n", "                ", "self", ".", "best_loss", "=", "loss", "\n", "", "return", "0", "\n", "", "elif", "loss", "<", "self", ".", "best_loss", "-", "self", ".", "min_loss_improve", ":", "\n", "            ", "self", ".", "best_loss", "=", "loss", "\n", "self", ".", "worse_loss_count", "=", "0", "\n", "return", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "worse_loss_count", "+=", "1", "\n", "if", "self", ".", "worse_loss_count", ">=", "self", ".", "len_ahead", ":", "\n", "                ", "lr", "=", "self", ".", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "print", "(", "\"Validation loss doesn't improve, decay the learning rate from {:.0e} to {:.0e}\"", ".", "format", "(", "\n", "lr", ",", "lr", "*", "self", ".", "gamma", ")", ")", "\n", "\n", "lr", "=", "lr", "*", "self", ".", "gamma", "\n", "if", "lr", "<", "self", ".", "lr_stop", ":", "\n", "                    ", "print", "(", "\"lr: {:.0e} < lr_stop: {:.0e}, terminate training.\"", ".", "format", "(", "\n", "lr", ",", "self", ".", "lr_stop", ")", ")", "\n", "return", "2", "\n", "", "else", ":", "\n", "                    ", "adjust_lr", "(", "self", ".", "optimizer", ",", "self", ".", "gamma", ")", "\n", "return", "0", "\n", "", "", "else", ":", "\n", "                ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.build_model": [[588, 639], ["NASTop.NasModel", "torch.device", "torch.device", "torch.device", "torch.DataParallel", "nn.DataParallel.to", "zip", "open", "json.load", "isinstance", "len", "len", "NASTop.build_model._nmcopy"], "function", ["None"], ["", "", "", "def", "build_model", "(", "args", ",", "candidates", "=", "None", ")", "->", "list", ":", "\n", "    ", "r'''\n    `block_list`:list type, length of num_blocks should match the superNet.lenconfig()\n    e.g. `[1,2,3]` denotes there are `1`, `2` and `3` blocks for each type.\n    '''", "\n", "def", "_nmcopy", "(", "origin", ":", "list", ",", "lenconfigs", ",", "num_blocks", ")", "->", "list", ":", "\n", "        ", "od", "=", "[", "]", "\n", "assert", "len", "(", "lenconfigs", ")", "==", "len", "(", "num_blocks", ")", "\n", "for", "len_config_block", ",", "n_block", "in", "zip", "(", "lenconfigs", ",", "num_blocks", ")", ":", "\n", "            ", "od", "+=", "[", "[", "origin", ".", "copy", "(", ")", "for", "_", "in", "range", "(", "len_config_block", ")", "]", "\n", "for", "_", "in", "range", "(", "n_block", ")", "]", "\n", "", "return", "od", "\n", "\n", "", "with", "open", "(", "args", ".", "nasConfig", ",", "'r'", ")", "as", "file", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "file", ")", "\n", "\n", "", "supernet", "=", "NetType", "[", "data", "[", "'net'", "]", "]", "\n", "net_configs", "=", "data", "[", "'net_configs'", "]", "\n", "block_list", "=", "net_configs", "[", "'block_list'", "]", "\n", "\n", "if", "candidates", "is", "None", ":", "\n", "        ", "candidates", "=", "data", "[", "'candidate'", "]", "\n", "if", "isinstance", "(", "candidates", ",", "list", ")", ":", "\n", "# the standard arguments", "\n", "            ", "candidates", "=", "_nmcopy", "(", "candidates", ",", "supernet", ".", "len_config", "(", ")", ",", "block_list", ")", "\n", "", "else", ":", "\n", "# simplified arguments", "\n", "            ", "base", "=", "candidates", "[", "'base'", "]", "\n", "output", "=", "_nmcopy", "(", "base", ",", "supernet", ".", "len_config", "(", ")", ",", "block_list", ")", "\n", "for", "pos", ",", "ops", "in", "candidates", ".", "items", "(", ")", ":", "\n", "                ", "if", "pos", "==", "\"base\"", ":", "\n", "                    ", "continue", "\n", "", "pos", "=", "[", "int", "(", "i", ")", "for", "i", "in", "pos", ".", "split", "(", "'-'", ")", "]", "\n", "output", "[", "pos", "[", "0", "]", "]", "[", "pos", "[", "1", "]", "]", "=", "ops", "\n", "", "candidates", "=", "output", "\n", "\n", "", "", "net_configs", "[", "'config'", "]", "=", "candidates", "\n", "if", "args", ".", "MODE", "==", "\"warmup\"", ":", "\n", "        ", "lossfn", "=", "args", ".", "lossFnWarmup", "\n", "", "elif", "args", ".", "MODE", "==", "\"archsearch\"", ":", "\n", "        ", "lossfn", "=", "args", ".", "lossFnAS", "\n", "", "elif", "args", ".", "MODE", "==", "\"retrain\"", ":", "\n", "        ", "lossfn", "=", "args", ".", "lossFnRetrain", "\n", "", "else", ":", "\n", "        ", "lossfn", "=", "None", "\n", "raise", "ValueError", "\n", "", "model", "=", "NasModel", "(", "supernet", ",", "lossfn", ",", "args", ".", "lamb", ",", "net_configs", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.build_manager": [[641, 651], ["NASTop.NasManager", "NASTop.NasManager.buildOptim", "NASTop.Lr_Scheduler_MileStone", "print", "NASTop.NasManager.loadModel"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.buildOptim", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.loadModel"], ["", "def", "build_manager", "(", "model", ",", "args", ")", ":", "\n", "    ", "manager", "=", "NasManager", "(", "model", ",", "args", ".", "debug", ")", "\n", "manager", ".", "buildOptim", "(", "args", ".", "lrNetParams", ",", "args", ".", "lrArchParams", ")", "\n", "\n", "# init a net_lr_scheduler, but still have to set attributes(like lr and lr_stop etc.) in specified stages.", "\n", "manager", ".", "net_lr_scheduler", "=", "Lr_Scheduler_MileStone", "(", "manager", ".", "net_optimizer", ",", "0", ")", "\n", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "        ", "print", "(", "\"Resuming from: {}\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "manager", ".", "loadModel", "(", "args", ".", "resume", ")", "\n", "", "return", "manager", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.validate": [[704, 732], ["enumerate", "nasmanager.setManager", "model.size", "torch.mean", "torch.mean", "torch.mean", "sum_test_loss.append", "sum", "model", "torch.mean", "torch.mean", "torch.mean", "real_loss_sum.item", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.mean", "torch.mean", "torch.mean", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "model.cpu", "model.cpu"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.setManager"], ["", "", "def", "validate", "(", "nasmanager", ":", "NasManager", ",", "testloader", ")", "->", "float", ":", "\n", "    ", "r'Validate the supernet performance on devset. Return `test_loss`'", "\n", "\n", "sum_test_loss", "=", "[", "]", "\n", "model", "=", "nasmanager", ".", "net", "\n", "count", "=", "0", "\n", "for", "i", ",", "minibatch", "in", "enumerate", "(", "testloader", ")", ":", "\n", "        ", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "minibatch", "\n", "nasmanager", ".", "setManager", "(", ")", "\n", "if", "torch", ".", "__version__", "<=", "'1.1.0'", ":", "\n", "            ", "loss", "=", "model", "(", "logits", ",", "labels_padded", ",", "input_lengths", ",", "label_lengths", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "loss", "=", "model", "(", "logits", ",", "labels_padded", ",", "\n", "input_lengths", ",", "label_lengths", ")", "\n", "", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "\n", "", "loss_size", "=", "loss", ".", "size", "(", "0", ")", "\n", "count", "=", "count", "+", "loss_size", "\n", "weight", "=", "torch", ".", "mean", "(", "path_weights", ")", "\n", "real_loss", "=", "partial_loss", "-", "weight", "\n", "real_loss_sum", "=", "real_loss", "*", "loss_size", "\n", "sum_test_loss", ".", "append", "(", "real_loss_sum", ".", "item", "(", ")", ")", "\n", "\n", "", "test_loss", "=", "sum", "(", "sum_test_loss", ")", "/", "count", "\n", "return", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train": [[734, 842], ["model.train", "datetime.datetime.now().strftime", "losslog.items", "timeit.default_timer", "enumerate", "model.eval", "enumerate", "print", "lr_scheduler.step", "model.train", "model", "model.backward", "optimizer.step", "optimizer.zero_grad", "torch.mean", "torch.mean", "torch.mean", "sum_test_loss.append", "numpy.sum", "model.train", "losslog[].append", "NASTop.train.logDump"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.eval", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.Lr_Scheduler_MileStone.step", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.train", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop.NasManager.logDump"], ["", "def", "train", "(", "model", ":", "nn", ".", "Module", ",", "trainloader", ",", "testloader", ",", "optimizer", ",", "lr_scheduler", ",", "saved_path", ",", "debug", "=", "True", ")", ":", "\n", "    ", "def", "logDump", "(", "losslog", ",", "PATH", ")", ":", "\n", "        ", "dt", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m_%d_%H_%M'", ")", "\n", "if", "PATH", "[", "-", "1", "]", "!=", "'/'", ":", "\n", "            ", "PATH", "=", "PATH", "+", "'/'", "\n", "\n", "", "for", "key", ",", "value", "in", "losslog", ".", "items", "(", ")", ":", "\n", "            ", "with", "open", "(", "PATH", "+", "key", "+", "dt", "+", "'.LOG'", ",", "'w+'", ",", "encoding", "=", "'utf8'", ")", "as", "file", ":", "\n", "                ", "file", ".", "write", "(", "'\\n'", ".", "join", "(", "value", ")", ")", "\n", "\n", "", "", "", "losslog", "=", "{", "\n", "\"train\"", ":", "[", "]", ",", "\n", "\"eval\"", ":", "[", "]", "\n", "}", "\n", "epoch", "=", "lr_scheduler", ".", "e_now", "\n", "model", ".", "train", "(", ")", "\n", "while", "True", ":", "\n", "# training stage", "\n", "        ", "epoch", "+=", "1", "\n", "running_loss", "=", "0.", "\n", "prev_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "for", "i", ",", "minibatch", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "minibatch", "\n", "loss", "=", "model", "(", "logits", ",", "labels_padded", ",", "input_lengths", ",", "label_lengths", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "weight", "=", "torch", ".", "mean", "(", "path_weights", ")", "\n", "running_loss", "+=", "partial_loss", "-", "weight", "\n", "\n", "", "loss", ".", "backward", "(", "loss", ".", "new_ones", "(", "len", "(", "loss", ")", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "i", "%", "10", "==", "9", "or", "debug", ":", "\n", "                ", "cur_t", "=", "timeit", ".", "default_timer", "(", ")", "\n", "print", "(", "\"\\repoch: {} | step: {} | time: {:.2f} | loss: {:.2f} | lr: {:.0e}\"", ".", "format", "(", "\n", "epoch", ",", "i", "+", "1", ",", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ",", "end", "=", "''", ")", "\n", "\n", "if", "not", "debug", ":", "\n", "                    ", "losslog", "[", "\"train\"", "]", ".", "append", "(", "\"time: {:.2f} | loss: {:.2f}\"", ".", "format", "(", "\n", "cur_t", "-", "prev_t", ",", "running_loss", "/", "(", "i", "+", "1", ")", ")", ")", "\n", "", "prev_t", "=", "cur_t", "\n", "\n", "# cv stage", "\n", "", "", "model", ".", "eval", "(", ")", "\n", "sum_test_loss", "=", "[", "]", "\n", "count", "=", "0", "\n", "\n", "for", "i", ",", "minibatch", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "logits", ",", "input_lengths", ",", "labels_padded", ",", "label_lengths", ",", "path_weights", "=", "minibatch", "\n", "if", "torch", ".", "__version__", "<=", "'1.1.0'", ":", "\n", "                ", "loss", "=", "model", "(", "logits", ",", "labels_padded", ",", "\n", "input_lengths", ",", "label_lengths", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "", "loss_size", "=", "loss", ".", "size", "(", "0", ")", "\n", "del", "loss", "\n", "loss", "=", "None", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "else", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "loss", "=", "model", "(", "logits", ",", "labels_padded", ",", "\n", "input_lengths", ",", "label_lengths", ")", "\n", "", "partial_loss", "=", "torch", ".", "mean", "(", "loss", ".", "cpu", "(", ")", ")", "\n", "loss_size", "=", "loss", ".", "size", "(", "0", ")", "\n", "", "count", "=", "count", "+", "loss_size", "\n", "weight", "=", "torch", ".", "mean", "(", "path_weights", ")", "\n", "real_loss", "=", "partial_loss", "-", "weight", "\n", "real_loss_sum", "=", "real_loss", "*", "loss_size", "\n", "sum_test_loss", ".", "append", "(", "real_loss_sum", ".", "item", "(", ")", ")", "\n", "\n", "", "test_loss", "=", "np", ".", "sum", "(", "np", ".", "asarray", "(", "sum_test_loss", ")", ")", "/", "count", "\n", "print", "(", "\" | test loss: {:.2f}{}\"", ".", "format", "(", "test_loss", ",", "' '", "*", "10", ")", ")", "\n", "\n", "state", "=", "lr_scheduler", ".", "step", "(", "epoch", ",", "test_loss", ")", "\n", "\n", "if", "debug", ":", "\n", "            ", "if", "state", "==", "2", ":", "\n", "                ", "break", "\n", "", "model", ".", "train", "(", ")", "\n", "continue", "\n", "", "else", ":", "\n", "            ", "losslog", "[", "\"eval\"", "]", ".", "append", "(", "\"test_loss: {}\"", ".", "format", "(", "test_loss", ")", ")", "\n", "logDump", "(", "losslog", ",", "saved_path", ")", "\n", "\n", "", "if", "state", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "lr_scheduler", ".", "state_dict", "(", ")", "\n", "}", ",", "saved_path", "+", "\"/model.epoch.{:02d}.pt\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "", "elif", "state", "==", "1", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "lr_scheduler", ".", "state_dict", "(", ")", "\n", "}", ",", "saved_path", "+", "\"/model.epoch.{:02d}.pt\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# save model for inference", "\n", "torch", ".", "save", "(", "model", ".", "module", ".", "infer", ",", "saved_path", "+", "\n", "\"/model.bestforinfer.pt\"", ")", "\n", "", "elif", "state", "==", "2", ":", "\n", "            ", "break", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Unknown state: {}\"", ".", "format", "(", "state", ")", ")", "\n", "raise", "NotImplementedError", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.NASTop._fetch_minmax": [[923, 925], ["min", "max"], "function", ["None"], ["", "", "", "", "def", "_fetch_minmax", "(", "graphinfo", ")", "->", "int", ":", "\n", "    ", "return", "min", "(", "[", "tail", "for", "(", "tail", ",", "_", ",", "_", ")", "in", "graphinfo", "]", ")", ",", "max", "(", "[", "head", "for", "(", "_", ",", "head", ",", "_", ")", "in", "graphinfo", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.visualize.rm_unused": [[14, 47], ["visualize.rm_unused._rm_duplicate"], "function", ["None"], ["def", "rm_unused", "(", "connections", ")", ":", "\n", "    ", "def", "_rm_duplicate", "(", "nodes", ":", "list", ")", "->", "list", ":", "\n", "        ", "return", "list", "(", "set", "(", "nodes", ")", ")", "\n", "\n", "", "nodes_tail", "=", "[", "]", "\n", "nodes", "=", "[", "]", "\n", "for", "item", "in", "connections", ":", "\n", "        ", "i", ",", "j", "=", "item", ".", "split", "(", "'@'", ")", "[", "0", "]", ".", "split", "(", "'-'", ")", "\n", "i", ",", "j", "=", "int", "(", "i", ")", ",", "int", "(", "j", ")", "\n", "nodes_tail", ".", "append", "(", "i", ")", "\n", "nodes", ".", "append", "(", "i", ")", "\n", "nodes", ".", "append", "(", "j", ")", "\n", "", "nodes", "=", "_rm_duplicate", "(", "nodes", ")", "\n", "nodes_tail", "=", "_rm_duplicate", "(", "nodes_tail", ")", "\n", "nodes", "=", "sorted", "(", "nodes", ")", "\n", "\n", "rm_nodes", "=", "[", "]", "\n", "for", "i", "in", "nodes", "[", ":", "-", "1", "]", ":", "\n", "        ", "if", "i", "not", "in", "nodes_tail", ":", "\n", "            ", "rm_nodes", ".", "append", "(", "i", ")", "\n", "# print(rm_nodes)", "\n", "", "", "if", "len", "(", "rm_nodes", ")", "==", "0", ":", "\n", "        ", "return", "connections", "\n", "\n", "", "new_connections", "=", "[", "]", "\n", "for", "item", "in", "connections", ":", "\n", "        ", "i", ",", "j", "=", "item", ".", "split", "(", "'@'", ")", "[", "0", "]", ".", "split", "(", "'-'", ")", "\n", "i", ",", "j", "=", "int", "(", "i", ")", ",", "int", "(", "j", ")", "\n", "if", "j", "in", "rm_nodes", ":", "\n", "            ", "continue", "\n", "", "new_connections", ".", "append", "(", "item", ")", "\n", "\n", "", "return", "rm_unused", "(", "new_connections", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.visualize.draw": [[48, 91], ["graphviz.Digraph", "graphviz.Digraph.attr", "visualize.rm_unused", "itertools.cycle", "graphviz.Digraph.render", "iter", "element.split", "link.split.split", "graphviz.Digraph.attr", "graphviz.Digraph.node", "graphviz.Digraph.edge", "graphviz.Digraph.edge", "nodes.append", "graphviz.Digraph.attr", "graphviz.Digraph.node", "nodes.append", "graphviz.Digraph.attr", "graphviz.Digraph.node", "graphviz.Digraph.edge", "color_stack.keys", "next", "element.split"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.visualize.rm_unused"], ["", "def", "draw", "(", "connections", ",", "filename", "=", "'tmp'", ")", ":", "\n", "    ", "dot", "=", "Digraph", "(", "comment", "=", "'Neural Network'", ",", "filename", "=", "filename", ",", "format", "=", "\"png\"", ")", "\n", "dot", ".", "attr", "(", "rankdir", "=", "'LR'", ",", "dpi", "=", "'250'", ",", "concentrate", "=", "'true'", ",", "fontsize", "=", "'8'", ")", "\n", "\n", "connections", "=", "rm_unused", "(", "connections", ")", "\n", "nodes", "=", "[", "]", "\n", "operations", "=", "[", "]", "\n", "color_stack", "=", "{", "}", "\n", "cycle_color", "=", "cycle", "(", "iter", "(", "COLOR", ")", ")", "\n", "for", "element", "in", "connections", ":", "\n", "        ", "link", ",", "op", "=", "element", ".", "split", "(", "\"@\"", ")", "\n", "link", "=", "link", ".", "split", "(", "'-'", ")", "\n", "if", "link", "[", "0", "]", "not", "in", "nodes", ":", "\n", "            ", "nodes", ".", "append", "(", "link", "[", "0", "]", ")", "\n", "dot", ".", "attr", "(", "'node'", ",", "shape", "=", "'circle'", ",", "style", "=", "'filled'", ",", "fillcolor", "=", "'cornsilk'", ",", "width", "=", "'0.4'", ",", "fixedsize", "=", "'true'", ")", "\n", "dot", ".", "node", "(", "link", "[", "0", "]", ",", "label", "=", "\"<<i>x</i><sub>{}</sub>>\"", ".", "format", "(", "link", "[", "0", "]", ")", ")", "\n", "", "if", "link", "[", "1", "]", "not", "in", "nodes", ":", "\n", "            ", "nodes", ".", "append", "(", "link", "[", "1", "]", ")", "\n", "dot", ".", "attr", "(", "'node'", ",", "shape", "=", "'circle'", ",", "style", "=", "'filled'", ",", "fillcolor", "=", "'cornsilk'", ",", "width", "=", "'0.4'", ",", "fixedsize", "=", "'true'", ")", "\n", "dot", ".", "node", "(", "link", "[", "1", "]", ",", "label", "=", "\"<<i>x</i><sub>{}</sub>>\"", ".", "format", "(", "link", "[", "1", "]", ")", ")", "\n", "\n", "", "if", "op", "==", "\"Identity\"", ":", "\n", "            ", "dot", ".", "edge", "(", "link", "[", "0", "]", ",", "link", "[", "1", "]", ")", "\n", "continue", "\n", "", "if", "op", "==", "\"Zero\"", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "op", "in", "color_stack", ".", "keys", "(", ")", ":", "\n", "            ", "color", "=", "color_stack", "[", "op", "]", "\n", "", "else", ":", "\n", "            ", "color", "=", "next", "(", "cycle_color", ")", "\n", "color_stack", "[", "op", "]", "=", "color", "\n", "\n", "", "dot", ".", "attr", "(", "'node'", ",", "shape", "=", "\"box\"", ",", "style", "=", "'filled'", ",", "fillcolor", "=", "color", ",", "fixedsize", "=", "'false'", ")", "\n", "\n", "if", "op", "in", "MultiArgOP", ":", "\n", "            ", "element", "=", "element", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "", "dot", ".", "node", "(", "element", ",", "label", "=", "op", ")", "\n", "dot", ".", "edge", "(", "link", "[", "0", "]", ",", "element", ",", "arrowhead", "=", "'none'", ")", "\n", "\n", "dot", ".", "edge", "(", "element", ",", "link", "[", "1", "]", ")", "\n", "\n", "", "dot", ".", "render", "(", ")", "\n", "# dot.view()", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDataset.__init__": [[15, 21], ["open", "pickle.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pickle_path", ")", ":", "\n", "        ", "with", "open", "(", "pickle_path", ",", "'rb'", ")", "as", "f", ":", "\n", "# for python2", "\n", "# self.dataset = pickle.load(f)", "\n", "# for python3", "\n", "            ", "self", ".", "dataset", "=", "pickle", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDataset.__len__": [[22, 24], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDataset.__getitem__": [[25, 29], ["numpy.asarray", "kaldi_io.read_mat", "torch.FloatTensor", "torch.IntTensor", "torch.FloatTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "key", ",", "feature_path", ",", "label", ",", "weight", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "mat", "=", "np", ".", "asarray", "(", "kaldi_io", ".", "read_mat", "(", "feature_path", ")", ")", "\n", "return", "torch", ".", "FloatTensor", "(", "mat", ")", ",", "torch", ".", "IntTensor", "(", "label", ")", ",", "torch", ".", "FloatTensor", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDatasetMem.__init__": [[32, 44], ["print", "open", "pickle.load", "numpy.asarray", "dataset_pickle.SpeechDatasetMem.data_batch.append", "kaldi_io.read_mat", "torch.FloatTensor", "torch.IntTensor", "torch.FloatTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pickle_path", ")", ":", "\n", "        ", "with", "open", "(", "pickle_path", ")", "as", "f", ":", "\n", "            ", "self", ".", "dataset", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "data_batch", "=", "[", "]", "\n", "\n", "for", "data", "in", "self", ".", "dataset", ":", "\n", "          ", "key", ",", "feature_path", ",", "label", ",", "weight", "=", "data", "\n", "mat", "=", "np", ".", "asarray", "(", "kaldi_io", ".", "read_mat", "(", "feature_path", ")", ")", "\n", "self", ".", "data_batch", ".", "append", "(", "\n", "[", "torch", ".", "FloatTensor", "(", "mat", ")", ",", "torch", ".", "IntTensor", "(", "label", ")", ",", "torch", ".", "FloatTensor", "(", "weight", ")", "]", ")", "\n", "", "print", "(", "\"read all data into memory\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDatasetMem.__len__": [[45, 47], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.SpeechDatasetMem.__getitem__": [[48, 50], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "data_batch", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.PadCollate.__init__": [[59, 61], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.PadCollate.__call__": [[62, 86], ["map", "max", "map", "max", "map", "map", "torch.stack", "torch.stack", "torch.IntTensor", "torch.IntTensor", "torch.FloatTensor", "list", "list", "list", "list", "x[].size", "x[].size", "dataset_pickle.pad_tensor", "dataset_pickle.pad_tensor"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.pad_tensor", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.pad_tensor"], ["", "def", "__call__", "(", "self", ",", "batch", ")", ":", "\n", "# batch: list of (mat, label, weight)", "\n", "# return: logits, input_lengths, label_padded, label_lengths, weights", "\n", "        ", "input_lengths", "=", "map", "(", "lambda", "x", ":", "x", "[", "0", "]", ".", "size", "(", "0", ")", ",", "batch", ")", "\n", "if", "sys", ".", "version", ">", "'3'", ":", "\n", "            ", "input_lengths", "=", "list", "(", "input_lengths", ")", "\n", "", "max_input_length", "=", "max", "(", "input_lengths", ")", "\n", "label_lengths", "=", "map", "(", "lambda", "x", ":", "x", "[", "1", "]", ".", "size", "(", "0", ")", ",", "batch", ")", "\n", "if", "sys", ".", "version", ">", "'3'", ":", "\n", "            ", "label_lengths", "=", "list", "(", "label_lengths", ")", "\n", "", "max_label_length", "=", "max", "(", "label_lengths", ")", "\n", "input_batch", "=", "map", "(", "lambda", "x", ":", "pad_tensor", "(", "\n", "x", "[", "0", "]", ",", "max_input_length", ",", "0", ")", ",", "batch", ")", "\n", "label_batch", "=", "map", "(", "lambda", "x", ":", "pad_tensor", "(", "\n", "x", "[", "1", "]", ",", "max_label_length", ",", "0", ")", ",", "batch", ")", "\n", "if", "sys", ".", "version", ">", "'3'", ":", "\n", "            ", "input_batch", "=", "list", "(", "input_batch", ")", "\n", "label_batch", "=", "list", "(", "label_batch", ")", "\n", "", "logits", "=", "torch", ".", "stack", "(", "input_batch", ",", "dim", "=", "0", ")", "\n", "label_padded", "=", "torch", ".", "stack", "(", "label_batch", ",", "dim", "=", "0", ")", "\n", "input_lengths", "=", "torch", ".", "IntTensor", "(", "input_lengths", ")", "\n", "label_lengths", "=", "torch", ".", "IntTensor", "(", "label_lengths", ")", "\n", "weights", "=", "torch", ".", "FloatTensor", "(", "[", "x", "[", "2", "]", "for", "x", "in", "batch", "]", ")", "\n", "return", "logits", ",", "input_lengths", ",", "label_padded", ",", "label_lengths", ",", "weights", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.dataset_pickle.pad_tensor": [[52, 56], ["list", "torch.cat", "t.size", "torch.zeros().type_as", "torch.zeros"], "function", ["None"], ["", "", "def", "pad_tensor", "(", "t", ",", "pad_to_length", ",", "dim", ")", ":", "\n", "    ", "pad_size", "=", "list", "(", "t", ".", "shape", ")", "\n", "pad_size", "[", "dim", "]", "=", "pad_to_length", "-", "t", ".", "size", "(", "dim", ")", "\n", "return", "torch", ".", "cat", "(", "[", "t", ",", "torch", ".", "zeros", "(", "*", "pad_size", ")", ".", "type_as", "(", "t", ")", "]", ",", "dim", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.count_parameters": [[18, 20], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["def", "count_parameters", "(", "model", ")", ":", "\n", "    ", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.highlight_msg": [[22, 32], ["len", "print", "print", "print", "msg.split.split"], "function", ["None"], ["", "def", "highlight_msg", "(", "msg", ":", "str", ")", ":", "\n", "    ", "len_str", "=", "len", "(", "msg", ")", "\n", "if", "'\\n'", "in", "msg", ":", "\n", "        ", "msg", "=", "msg", ".", "split", "(", "'\\n'", ")", "\n", "msg", "=", "'\\n'", ".", "join", "(", "[", "'# '", "+", "line", "+", "' #'", "for", "line", "in", "msg", "]", ")", "\n", "", "else", ":", "\n", "        ", "msg", "=", "'# '", "+", "msg", "+", "' #'", "\n", "", "print", "(", "'\\n'", "+", "\"#\"", "*", "(", "len_str", "+", "4", ")", ")", "\n", "print", "(", "msg", ")", "\n", "print", "(", "\"#\"", "*", "(", "len_str", "+", "4", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.packLog": [[34, 37], ["os.system", "os.system"], "function", ["None"], ["", "def", "packLog", "(", "PATH", ")", ":", "\n", "    ", "os", ".", "system", "(", "\"rm log.tar.gz\"", ")", "\n", "os", ".", "system", "(", "\"tar -cvf log.tar.gz %s\"", "%", "PATH", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.logType": [[39, 50], ["logfile.split"], "function", ["None"], ["", "def", "logType", "(", "logfile", ")", ":", "\n", "    ", "logfile", "=", "logfile", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "if", "\"archweight\"", "in", "logfile", ":", "\n", "        ", "return", "\"arch\"", "\n", "", "elif", "\"train\"", "in", "logfile", ":", "\n", "        ", "return", "\"train\"", "\n", "", "elif", "\"eval\"", "in", "logfile", ":", "\n", "        ", "return", "\"eval\"", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read": [[52, 59], ["struct.unpack", "int"], "function", ["None"], ["", "", "def", "read", "(", "bindata", ",", "N", "=", "1", ")", ":", "\n", "    ", "output", "=", "struct", ".", "unpack", "(", "\"%dd\"", "%", "N", ",", "bindata", "[", ":", "8", "*", "N", "]", ")", "\n", "bindata", "=", "bindata", "[", "8", "*", "N", ":", "]", "\n", "if", "N", "==", "1", ":", "\n", "        ", "return", "bindata", ",", "int", "(", "output", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "bindata", ",", "[", "x", "for", "x", "in", "output", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._read_arch": [[61, 89], ["utils.read", "range", "open", "f_in.read", "loss.append", "utils.read", "range", "loss[].append", "utils.read", "utils.read", "[].decode", "[].append", "utils.read", "[].append", "struct.unpack"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read"], ["", "", "def", "_read_arch", "(", "archfile", ")", ":", "\n", "    ", "loss", "=", "[", "]", "\n", "bindata", "=", "None", "\n", "with", "open", "(", "archfile", ",", "\"rb\"", ")", "as", "f_in", ":", "\n", "        ", "bindata", "=", "f_in", ".", "read", "(", ")", "\n", "\n", "", "max_node", "=", "0", "\n", "bindata", ",", "num_blocks", "=", "read", "(", "bindata", ")", "\n", "for", "b", "in", "range", "(", "num_blocks", ")", ":", "\n", "        ", "loss", ".", "append", "(", "[", "]", ")", "\n", "bindata", ",", "num_nodes", "=", "read", "(", "bindata", ")", "\n", "if", "num_nodes", ">", "max_node", ":", "\n", "            ", "max_node", "=", "num_nodes", "\n", "", "for", "n", "in", "range", "(", "num_nodes", ")", ":", "\n", "            ", "loss", "[", "-", "1", "]", ".", "append", "(", "[", "]", ")", "\n", "bindata", ",", "num_ops", "=", "read", "(", "bindata", ")", "\n", "bindata", ",", "len_names", "=", "read", "(", "bindata", ")", "\n", "\n", "names", "=", "struct", ".", "unpack", "(", "\"%ds\"", "%", "len_names", ",", "bindata", "[", ":", "len_names", "]", ")", "[", "\n", "0", "]", ".", "decode", "(", "\"utf8\"", ")", "\n", "\n", "bindata", "=", "bindata", "[", "len_names", ":", "]", "\n", "loss", "[", "-", "1", "]", "[", "-", "1", "]", ".", "append", "(", "names", ")", "\n", "\n", "bindata", ",", "len_probs", "=", "read", "(", "bindata", ")", "\n", "loss", "[", "-", "1", "]", "[", "-", "1", "]", ".", "append", "(", "bindata", "[", ":", "len_probs", "]", ")", "\n", "bindata", "=", "bindata", "[", "len_probs", ":", "]", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.mergeLog": [[91, 145], ["utils.logType", "struct.pack", "struct.pack", "utils._read_arch", "struct.pack", "enumerate", "open", "file.write", "utils.logType", "utils._read_arch", "enumerate", "len", "struct.pack", "enumerate", "open", "file.write", "open", "enumerate", "len", "len", "struct.pack", "struct.pack", "struct.pack", "struct.pack", "file.read", "names.split", "len", "names.encode", "len", "str", "str", "len", "random.random", "random.random"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.logType", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._read_arch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.logType", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._read_arch", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read"], ["", "def", "mergeLog", "(", "logfiles", ")", ":", "\n", "    ", "log_type", "=", "logType", "(", "logfiles", "[", "0", "]", ")", "\n", "for", "file", "in", "logfiles", ":", "\n", "        ", "assert", "logType", "(", "file", ")", "==", "log_type", "\n", "\n", "", "tmp_file", "=", "''", "\n", "if", "log_type", "==", "\"arch\"", ":", "\n", "        ", "allarch", "=", "_read_arch", "(", "logfiles", "[", "0", "]", ")", "\n", "for", "log", "in", "logfiles", "[", "1", ":", "]", ":", "\n", "            ", "newarch", "=", "_read_arch", "(", "log", ")", "\n", "for", "b", ",", "block", "in", "enumerate", "(", "newarch", ")", ":", "\n", "                ", "for", "n", ",", "node", "in", "enumerate", "(", "block", ")", ":", "\n", "                    ", "allarch", "[", "b", "]", "[", "n", "]", "[", "1", "]", "+=", "node", "[", "1", "]", "\n", "\n", "# number of blocks", "\n", "", "", "", "bindata", "=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "allarch", ")", ")", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "allarch", ")", ":", "\n", "# number of nodes in each block", "\n", "            ", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "block", ")", ")", "\n", "for", "j", ",", "node", "in", "enumerate", "(", "block", ")", ":", "\n", "                ", "names", "=", "node", "[", "0", "]", "\n", "num_ops", "=", "len", "(", "names", ".", "split", "(", "','", ")", ")", "\n", "# number of candidate operations in each node", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "num_ops", ")", "\n", "# length of names of candidate operations", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "names", ")", ")", "\n", "# names of all candidate operations", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'%ds'", "%", "\n", "(", "len", "(", "names", ")", ")", ",", "names", ".", "encode", "(", "\"utf8\"", ")", ")", "\n", "# length of probs (in bytes)", "\n", "bindata", "+=", "struct", ".", "pack", "(", "'d'", ",", "len", "(", "node", "[", "1", "]", ")", ")", "\n", "# probs of each node", "\n", "bindata", "+=", "node", "[", "1", "]", "\n", "\n", "", "", "tmp_file", "=", "str", "(", "random", ".", "random", "(", ")", ")", "[", "2", ":", "]", "+", "log_type", "+", "'.bin'", "\n", "with", "open", "(", "tmp_file", ",", "'wb'", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "bindata", ")", "\n", "\n", "", "return", "tmp_file", "\n", "", "else", ":", "\n", "        ", "tmp_file", "=", "str", "(", "random", ".", "random", "(", ")", ")", "[", "2", ":", "]", "+", "log_type", "+", "'.LOG'", "\n", "\n", "", "log", "=", "struct", ".", "pack", "(", "''", ")", "\n", "interval", "=", "struct", ".", "pack", "(", "'s'", ",", "'\\n'", ".", "encode", "(", "\"utf8\"", ")", ")", "\n", "\n", "for", "logi", "in", "logfiles", ":", "\n", "        ", "with", "open", "(", "logi", ",", "'rb'", ")", "as", "file", ":", "\n", "            ", "log", "+=", "interval", "+", "file", ".", "read", "(", ")", "\n", "", "", "log", "=", "log", "[", "1", ":", "]", "\n", "\n", "with", "open", "(", "tmp_file", ",", "'wb'", ")", "as", "file", ":", "\n", "        ", "file", ".", "write", "(", "log", ")", "\n", "\n", "", "return", "tmp_file", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.dealLog": [[147, 160], ["len", "utils.mergeLog", "utils.packLog", "os.system", "utils.packLog", "open", "open", "f_out.write", "f_in.read"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.mergeLog", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.packLog", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.packLog", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read"], ["", "def", "dealLog", "(", "args", ")", ":", "\n", "    ", "logfiles", "=", "args", ".", "logfiles", "\n", "#print(logfiles)", "\n", "if", "len", "(", "logfiles", ")", ">", "1", ":", "\n", "        ", "mergefile", "=", "mergeLog", "(", "logfiles", ")", "\n", "if", "args", ".", "outfile", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "mergefile", ",", "'rb'", ")", "as", "f_in", ":", "\n", "                ", "with", "open", "(", "args", ".", "outfile", ",", "'wb'", ")", "as", "f_out", ":", "\n", "                    ", "f_out", ".", "write", "(", "f_in", ".", "read", "(", ")", ")", "\n", "", "", "", "packLog", "(", "mergefile", ")", "\n", "os", ".", "system", "(", "\"rm %s\"", "%", "mergefile", ")", "\n", "", "else", ":", "\n", "        ", "packLog", "(", "logfiles", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._getlatest": [[162, 179], ["os.path.exists", "os.listdir", "print", "len", "re.search", "match_files.append", "sorted", "sorted", "int", "item.split"], "function", ["None"], ["", "", "def", "_getlatest", "(", "dir", ",", "pattern", ",", "isckpt", "=", "False", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "dir", ")", "\n", "files", "=", "os", ".", "listdir", "(", "dir", ")", "\n", "\n", "match_files", "=", "[", "]", "\n", "for", "file", "in", "files", ":", "\n", "        ", "if", "re", ".", "search", "(", "r\"%s\"", "%", "pattern", ",", "file", ")", "is", "not", "None", ":", "\n", "            ", "match_files", ".", "append", "(", "file", ")", "\n", "\n", "", "", "assert", "len", "(", "match_files", ")", "!=", "0", "\n", "if", "isckpt", ":", "\n", "        ", "latest", "=", "sorted", "(", "match_files", ",", "key", "=", "lambda", "item", ":", "int", "(", "\n", "item", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "        ", "latest", "=", "sorted", "(", "match_files", ")", "[", "-", "1", "]", "\n", "", "print", "(", "latest", ")", "\n", "return", "dir", "+", "'/'", "+", "latest", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.traverse_file": [[181, 192], ["os.listdir", "os.path.isdir", "utils.traverse_file"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.traverse_file"], ["", "def", "traverse_file", "(", "dirname", ")", ":", "\n", "    ", "if", "dirname", "[", "-", "1", "]", "!=", "\"/\"", ":", "\n", "        ", "dirname", "+=", "\"/\"", "\n", "", "files", "=", "os", ".", "listdir", "(", "dirname", ")", "\n", "for", "file", "in", "files", ":", "\n", "        ", "file", "=", "dirname", "+", "file", "\n", "if", "os", ".", "path", ".", "isdir", "(", "file", ")", ":", "\n", "            ", "for", "item", "in", "traverse_file", "(", "file", ")", ":", "\n", "                ", "yield", "item", "\n", "", "", "elif", "'.DS_Store'", "not", "in", "file", ":", "\n", "            ", "yield", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._plot_loss": [[194, 225], ["print", "os.makedirs", "matplotlib.savefig", "open", "scipy.signal.savgol_filter", "matplotlib.semilogy", "matplotlib.title", "matplotlib.ylabel", "matplotlib.xlabel", "file.split", "matplotlib.plot", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "print", "float", "scipy.signal.savgol_filter.append", "file.split", "len", "matplotlib.xticks", "matplotlib.xticks", "list", "list", "list", "list", "line.split", "range", "range", "range", "range", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.plot"], ["", "", "", "def", "_plot_loss", "(", "file", ")", ":", "\n", "# plt.rcParams['figure.figsize'] = [6.22, 3.5]", "\n", "    ", "print", "(", "\"Reading: {}\"", ".", "format", "(", "file", ")", ")", "\n", "log", "=", "[", "]", "\n", "with", "open", "(", "file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "if", "\"loss:\"", "in", "line", ":", "\n", "                ", "loss", "=", "float", "(", "line", ".", "split", "(", "'loss: '", ")", "[", "-", "1", "]", ")", "\n", "log", ".", "append", "(", "loss", ")", "\n", "\n", "", "", "", "if", "\"train\"", "in", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ":", "\n", "        ", "log", "=", "scipy", ".", "signal", ".", "savgol_filter", "(", "log", ",", "51", ",", "5", ")", "\n", "plt", ".", "semilogy", "(", "log", ")", "\n", "plt", ".", "title", "(", "\"Loss\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Training Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Steps\"", ")", "\n", "", "elif", "\"eval\"", "in", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ":", "\n", "        ", "plt", ".", "plot", "(", "log", ")", "\n", "if", "len", "(", "log", ")", ">=", "5", ":", "\n", "            ", "plt", ".", "xticks", "(", "list", "(", "range", "(", "0", ",", "len", "(", "log", ")", ",", "len", "(", "log", ")", "//", "5", ")", ")", ",", "\n", "list", "(", "range", "(", "1", ",", "len", "(", "log", ")", "+", "1", ",", "len", "(", "log", ")", "//", "5", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "xticks", "(", "list", "(", "range", "(", "len", "(", "log", ")", ")", ")", ",", "list", "(", "range", "(", "1", ",", "len", "(", "log", ")", "+", "1", ")", ")", ")", "\n", "", "plt", ".", "ylabel", "(", "\"Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "title", "(", "\"Validation loss\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"unexpected log name.\"", ")", "\n", "return", "\n", "", "os", ".", "makedirs", "(", "'figures'", ",", "exist_ok", "=", "True", ")", "\n", "plt", ".", "savefig", "(", "\"figures/{}.png\"", ".", "format", "(", "file", ")", ",", "dpi", "=", "300", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._plot_arch_new": [[227, 310], ["print", "utils.read", "range", "int", "matplotlib.subplots", "matplotlib.rc", "matplotlib.rc", "enumerate", "range", "[].text", "fig.text", "[].set_ylabel", "matplotlib.tight_layout", "os.makedirs", "matplotlib.savefig", "open", "f_in.read", "loss.append", "utils.read", "range", "math.pow", "enumerate", "range", "math.log10", "file.split", "loss[].append", "utils.read", "utils.read", "[].decode", "[].append", "utils.read", "utils.read", "max", "min", "range", "legends.append", "[].set_ylim", "[].set_xticks", "[].set_xticklabels", "enumerate", "[].grid", "[].set_box_aspect", "namestr.split", "max", "min", "[].append", "math.log10", "node[].split", "list", "[].plot", "[].legend", "[].set_yticklabels", "len", "len", "range", "struct.unpack", "len", "list", "range", "len"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.read", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.plot"], ["", "def", "_plot_arch_new", "(", "file", ")", ":", "\n", "# plt.rcParams['figure.figsize'] = [10, 3.5]", "\n", "    ", "print", "(", "\"Reading: {}\"", ".", "format", "(", "file", ")", ")", "\n", "\n", "loss", "=", "[", "]", "\n", "bindata", "=", "None", "\n", "with", "open", "(", "file", ",", "\"rb\"", ")", "as", "f_in", ":", "\n", "        ", "bindata", "=", "f_in", ".", "read", "(", ")", "\n", "\n", "", "max_probs", "=", "0.", "\n", "min_probs", "=", "1.", "\n", "max_node", "=", "0", "\n", "plot_interval", "=", "0", "\n", "bindata", ",", "num_blocks", "=", "read", "(", "bindata", ")", "\n", "for", "b", "in", "range", "(", "num_blocks", ")", ":", "\n", "        ", "loss", ".", "append", "(", "[", "]", ")", "\n", "bindata", ",", "num_nodes", "=", "read", "(", "bindata", ")", "\n", "if", "num_nodes", ">", "max_node", ":", "\n", "            ", "max_node", "=", "num_nodes", "\n", "", "for", "n", "in", "range", "(", "num_nodes", ")", ":", "\n", "            ", "loss", "[", "-", "1", "]", ".", "append", "(", "[", "]", ")", "\n", "bindata", ",", "num_ops", "=", "read", "(", "bindata", ")", "\n", "bindata", ",", "len_names", "=", "read", "(", "bindata", ")", "\n", "#print(len_names)", "\n", "names", "=", "struct", ".", "unpack", "(", "\"%ds\"", "%", "len_names", ",", "bindata", "[", ":", "len_names", "]", ")", "[", "\n", "0", "]", ".", "decode", "(", "\"utf8\"", ")", "\n", "#print(names)", "\n", "bindata", "=", "bindata", "[", "len_names", ":", "]", "\n", "loss", "[", "-", "1", "]", "[", "-", "1", "]", ".", "append", "(", "names", ")", "\n", "\n", "bindata", ",", "len_probs", "=", "read", "(", "bindata", ")", "\n", "num_probs", "=", "len_probs", "//", "8", "\n", "bindata", ",", "probs", "=", "read", "(", "bindata", ",", "num_probs", ")", "\n", "max_probs", "=", "max", "(", "max", "(", "probs", ")", ",", "max_probs", ")", "\n", "min_probs", "=", "min", "(", "min", "(", "probs", ")", ",", "min_probs", ")", "\n", "#print(probs)", "\n", "for", "o", "in", "range", "(", "num_ops", ")", ":", "\n", "                ", "loss", "[", "-", "1", "]", "[", "-", "1", "]", ".", "append", "(", "probs", "[", "o", ":", ":", "num_ops", "]", ")", "\n", "if", "len", "(", "loss", "[", "-", "1", "]", "[", "-", "1", "]", "[", "-", "1", "]", ")", ">", "plot_interval", ":", "\n", "                    ", "plot_interval", "=", "len", "(", "loss", "[", "-", "1", "]", "[", "-", "1", "]", "[", "-", "1", "]", ")", "\n", "\n", "", "", "", "", "plot_interval", "=", "int", "(", "math", ".", "pow", "(", "10", ",", "math", ".", "log10", "(", "plot_interval", ")", "//", "1", ")", ")", "\n", "\n", "fig", ",", "subplot", "=", "plt", ".", "subplots", "(", "max_node", ",", "num_blocks", ",", "figsize", "=", "[", "\n", "2", "*", "num_blocks", "+", "0.2", ",", "0.5", "+", "2", "*", "max_node", "]", ")", "\n", "if", "max_node", "==", "1", ":", "\n", "        ", "subplot", "=", "[", "subplot", "]", "\n", "\n", "", "plt", ".", "rc", "(", "'xtick'", ",", "labelsize", "=", "10", ")", "# fontsize of the tick labels", "\n", "plt", ".", "rc", "(", "'ytick'", ",", "labelsize", "=", "10", ")", "# fontsize of the tick labels", "\n", "\n", "legends", "=", "[", "]", "\n", "for", "b", ",", "block", "in", "enumerate", "(", "loss", ")", ":", "\n", "        ", "for", "n", ",", "node", "in", "enumerate", "(", "block", ")", ":", "\n", "            ", "legends", ".", "append", "(", "node", "[", "0", "]", ".", "split", "(", "','", ")", ")", "\n", "subplot", "[", "n", "]", "[", "b", "]", ".", "set_ylim", "(", "min_probs", "-", "0.02", ",", "max_probs", "+", "0.02", ")", "\n", "subplot", "[", "n", "]", "[", "b", "]", ".", "set_xticks", "(", "\n", "list", "(", "range", "(", "0", ",", "len", "(", "node", "[", "1", "]", ")", ",", "plot_interval", ")", ")", ")", "\n", "subplot", "[", "n", "]", "[", "b", "]", ".", "set_xticklabels", "(", "\n", "[", "x", "//", "plot_interval", "for", "x", "in", "list", "(", "range", "(", "0", ",", "len", "(", "node", "[", "1", "]", ")", ",", "plot_interval", ")", ")", "]", ")", "\n", "for", "o", ",", "op", "in", "enumerate", "(", "node", "[", "1", ":", "]", ")", ":", "\n", "                ", "subplot", "[", "n", "]", "[", "b", "]", ".", "plot", "(", "op", ")", "\n", "\n", "", "", "", "for", "row", "in", "range", "(", "max_node", ")", ":", "\n", "        ", "for", "col", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "subplot", "[", "row", "]", "[", "col", "]", ".", "grid", "(", "ls", "=", "'--'", ")", "\n", "subplot", "[", "row", "]", "[", "col", "]", ".", "set_box_aspect", "(", "1", ")", "\n", "if", "col", "==", "0", ":", "\n", "                ", "subplot", "[", "row", "]", "[", "col", "]", ".", "legend", "(", "\n", "legends", "[", "row", "]", ",", "loc", "=", "'upper left'", ",", "fontsize", "=", "8", ")", "\n", "", "else", ":", "\n", "                ", "subplot", "[", "row", "]", "[", "col", "]", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "\n", "", "", "", "subplot", "[", "0", "]", "[", "2", "]", ".", "text", "(", "0", ",", "-", "0.2", ",", "\" \"", "*", "10", ")", "\n", "pw", "=", "\"{:.0f}\"", ".", "format", "(", "math", ".", "log10", "(", "plot_interval", ")", ")", "\n", "fig", ".", "text", "(", "0.5", ",", "0.04", ",", "r\"Step ($\\times 10^{%s})$\"", "%", "pw", ",", "ha", "=", "'center'", ")", "\n", "\n", "subplot", "[", "0", "]", "[", "0", "]", ".", "set_ylabel", "(", "\"Architecture Probability\"", ")", "\n", "namestr", "=", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "namestr", "=", "'.'", ".", "join", "(", "namestr", ".", "split", "(", "'.'", ")", "[", ":", "-", "1", "]", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "os", ".", "makedirs", "(", "'figures'", ",", "exist_ok", "=", "True", ")", "\n", "plt", ".", "savefig", "(", "\"figures/{}.png\"", ".", "format", "(", "namestr", ")", ",", "dpi", "=", "300", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.plot": [[312, 326], ["len", "utils.mergeLog", "utils._plot_loss", "len", "os.system", "mergeLog.split", "utils._plot_arch_new", "mergeLog.split"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils.mergeLog", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._plot_loss", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.toolkit.utils._plot_arch_new"], ["", "def", "plot", "(", "args", ")", ":", "\n", "    ", "tmp_logfile", "=", "None", "\n", "if", "len", "(", "args", ".", "logfile", ")", ">", "1", ":", "\n", "        ", "tmp_logfile", "=", "mergeLog", "(", "args", ".", "logfile", ")", "\n", "", "else", ":", "\n", "        ", "tmp_logfile", "=", "args", ".", "logfile", "[", "0", "]", "\n", "", "if", "tmp_logfile", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "==", "\"LOG\"", ":", "\n", "        ", "_plot_loss", "(", "tmp_logfile", ")", "\n", "", "elif", "tmp_logfile", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "==", "\"bin\"", ":", "\n", "        ", "_plot_arch_new", "(", "tmp_logfile", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "if", "len", "(", "args", ".", "logfile", ")", ">", "1", ":", "\n", "        ", "os", ".", "system", "(", "\"rm {}\"", ".", "format", "(", "tmp_logfile", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.__init__": [[36, 40], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ParentBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_nodes", "=", "0", "\n", "self", ".", "nodes", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.num_node": [[41, 44], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_node", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node": [[45, 48], ["Block.ParentBlock.nodes.append"], "methods", ["None"], ["", "def", "add_node", "(", "self", ",", "node", ")", ":", "\n", "        ", "self", ".", "num_nodes", "+=", "1", "\n", "self", ".", "nodes", ".", "append", "(", "node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.__getitem__": [[49, 51], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.raiseNode": [[52, 54], ["None"], "methods", ["None"], ["", "def", "raiseNode", "(", "self", ")", ":", "\n", "        ", "return", "[", "x", "for", "x", "in", "self", ".", "nodes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.raiseFixed": [[55, 57], ["None"], "methods", ["None"], ["", "def", "raiseFixed", "(", "self", ")", ":", "\n", "        ", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.specify": [[58, 65], ["isinstance", "Block._select_max", "Block._get_module_name"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block._select_max", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._get_module_name"], ["", "def", "specify", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "num_nodes", ">", "0", "\n", "if", "isinstance", "(", "self", ".", "nodes", "[", "0", "]", ",", "NODE", ")", ":", "\n", "            ", "names", "=", "[", "_select_max", "(", "node", ")", "for", "node", "in", "self", ".", "nodes", "]", "\n", "", "else", ":", "\n", "            ", "names", "=", "[", "_get_module_name", "(", "module", ")", "for", "module", "in", "self", ".", "nodes", "]", "\n", "", "return", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.printGraph": [[66, 68], ["None"], "methods", ["None"], ["", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock._fetch_best": [[69, 74], ["out.append", "node._fetch_best"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet._fetch_best"], ["", "def", "_fetch_best", "(", "self", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "node", "in", "self", ".", "nodes", ":", "\n", "            ", "out", ".", "append", "(", "node", ".", "_fetch_best", "(", ")", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.WrapNode.__init__": [[77, 83], ["Block.ParentBlock.__init__", "Block.WrapNode.add_node", "len", "len", "Block.NODEorOP"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "list", ",", "idim", ":", "int", ",", "odim", ":", "int", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "WrapNode", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "len", "(", "config", ")", "==", "1", ",", "\"Length of configuration candidates:{} mismatchs number of nodes:{} in WrapNode\"", ".", "format", "(", "\n", "len", "(", "config", ")", ",", "1", ")", "\n", "\n", "self", ".", "add_node", "(", "NODEorOP", "(", "config", "[", "0", "]", ",", "idim", ",", "odim", ",", "dropout", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.WrapNode.forward": [[84, 87], ["Block.WrapNode.nodes[].forward"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.SubLayer.forward"], ["", "def", "forward", "(", "self", ",", "features", ":", "torch", ".", "Tensor", ",", "lens", ")", ":", "\n", "        ", "output", ",", "lens_o", "=", "self", ".", "nodes", "[", "0", "]", ".", "forward", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "return", "output", ",", "lens_o", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.WrapNode.printGraph": [[88, 91], ["Block.WrapNode.specify"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.specify"], ["", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "names", "=", "self", ".", "specify", "(", ")", "\n", "return", "[", "(", "0", ",", "1", ",", "names", "[", "0", "]", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.WrapNode.len_config": [[92, 95], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.BasicBlock.__init__": [[98, 106], ["Block.ParentBlock.__init__", "Block.BasicBlock.add_node", "Block.BasicBlock.add_node", "len", "len", "Block.NODEorOP", "Block.NODEorOP"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "list", ",", "idim", ":", "int", ",", "odim", ":", "int", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "len", "(", "config", ")", "==", "2", ",", "\"Length of configuration candidates:{} mismatchs number of nodes:{} in Block\"", ".", "format", "(", "\n", "len", "(", "config", ")", ",", "2", ")", "\n", "\n", "assert", "odim", "%", "2", "==", "0", "\n", "self", ".", "add_node", "(", "NODEorOP", "(", "config", "[", "0", "]", ",", "idim", ",", "odim", "//", "2", ",", "dropout", ")", ")", "\n", "self", ".", "add_node", "(", "NODEorOP", "(", "config", "[", "1", "]", ",", "idim", ",", "odim", "//", "2", ",", "dropout", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.BasicBlock.forward": [[107, 126], ["orderNode", "reverseNode", "reverseOut.flip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "orderOut.size", "reverseOut.size", "print", "print", "print", "orderOut.size", "reverseOut.size", "features.size", "orderOut.size", "reverseOut.size", "features.flip", "features.size", "orderOut.size", "reverseOut.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ":", "torch", ".", "Tensor", ",", "lens", ")", ":", "\n", "        ", "orderNode", "=", "self", ".", "nodes", "[", "0", "]", "\n", "reverseNode", "=", "self", ".", "nodes", "[", "1", "]", "\n", "orderOut", ",", "order_lens", "=", "orderNode", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "reverseOut", ",", "reverse_lens", "=", "reverseNode", "(", "\n", "features", "=", "features", ".", "flip", "(", "1", ")", ",", "lens", "=", "lens", ")", "\n", "if", "orderOut", ".", "size", "(", ")", "!=", "reverseOut", ".", "size", "(", ")", ":", "\n", "            ", "print", "(", "\"{}.{}.{}\"", ".", "format", "(", "features", ".", "size", "(", ")", ",", "\n", "orderOut", ".", "size", "(", ")", ",", "reverseOut", ".", "size", "(", ")", ")", ")", "\n", "print", "(", "\n", "self", ".", "orderNode", ".", "candidate_OPs", "[", "self", ".", "orderNode", ".", "actived_index", "[", "0", "]", "]", ")", "\n", "print", "(", "\n", "self", ".", "reverseNode", ".", "candidate_OPs", "[", "self", ".", "reverseNode", ".", "actived_index", "[", "0", "]", "]", ")", "\n", "", "assert", "orderOut", ".", "size", "(", ")", "==", "reverseOut", ".", "size", "(", "\n", ")", ",", "(", "\"Tensors of order output and reverse output give different sizes. {}.{}.{}\"", ".", "format", "(", "features", ".", "size", "(", ")", ",", "orderOut", ".", "size", "(", ")", ",", "reverseOut", ".", "size", "(", ")", ")", ")", "\n", "flipreverse", "=", "reverseOut", ".", "flip", "(", "1", ")", "\n", "output", "=", "torch", ".", "cat", "(", "(", "orderOut", ",", "flipreverse", ")", ",", "2", ")", "\n", "\n", "return", "output", ",", "order_lens", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.BasicBlock.printGraph": [[127, 131], ["Block.BasicBlock.specify"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.specify"], ["", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "names", "=", "self", ".", "specify", "(", ")", "\n", "graphinfo", "=", "[", "]", "\n", "return", "[", "(", "0", ",", "1", ",", "names", "[", "0", "]", ")", ",", "(", "0", ",", "1", ",", "names", "[", "1", "]", "+", "\"reverse\"", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.BasicBlock.len_config": [[132, 135], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "return", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ResidualBlock.__init__": [[138, 153], ["Block.ParentBlock.__init__", "BaseBlock", "Block.ResidualBlock.add_node", "len", "Block.ResidualBlock.add_node", "Block.NODEorOP", "Block.ResidualBlock.add_node", "Block.ResidualBlock.add_node", "Block.NODEorOP", "Block.NODEorOP"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.add_node", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "list", ",", "idim", ":", "int", ",", "odim", ":", "int", ",", "dropout", "=", "None", ",", "BaseBlock", ":", "ParentBlock", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base", "=", "BaseBlock", "(", "config", "[", ":", "-", "1", "]", ",", "idim", ",", "odim", ",", "dropout", ")", "\n", "for", "node", "in", "self", ".", "base", ".", "nodes", ":", "\n", "            ", "self", ".", "add_node", "(", "node", ")", "\n", "\n", "", "if", "len", "(", "config", "[", "-", "1", "]", ")", "==", "1", ":", "\n", "# build the derived model", "\n", "            ", "self", ".", "add_node", "(", "NODEorOP", "(", "config", "[", "-", "1", "]", ",", "idim", ",", "odim", ",", "dropout", ")", ")", "\n", "", "else", ":", "\n", "            ", "if", "idim", "==", "odim", ":", "\n", "                ", "self", ".", "add_node", "(", "\n", "NODEorOP", "(", "[", "'zero'", ",", "'identity'", "]", ",", "idim", ",", "odim", ",", "dropout", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "add_node", "(", "NODEorOP", "(", "[", "'zero'", ",", "'lstm'", "]", ",", "idim", ",", "odim", ",", "dropout", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ResidualBlock.forward": [[154, 167], ["Block.ResidualBlock.base", "Block.ResidualBlock.forward._iszero"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "features", ":", "torch", ".", "Tensor", ",", "lens", ")", ":", "\n", "        ", "def", "_iszero", "(", "module", ")", "->", "bool", ":", "\n", "            ", "return", "isinstance", "(", "module", ",", "Zero", ")", "\n", "\n", "", "x", ",", "lens_o", "=", "self", ".", "base", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "\n", "if", "_iszero", "(", "self", ".", "nodes", "[", "-", "1", "]", ")", ":", "\n", "            ", "return", "x", ",", "lens_o", "\n", "", "else", ":", "\n", "            ", "shortcut", ",", "lens_short", "=", "self", ".", "nodes", "[", "-", "1", "]", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "\n", "output", "=", "x", "+", "shortcut", "\n", "return", "output", ",", "lens_o", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ResidualBlock.printGraph": [[168, 175], ["Block.ResidualBlock.specify", "Block.ResidualBlock.base.printGraph", "Block._fetch_minmax", "Block.ResidualBlock.append"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.ParentBlock.specify", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._fetch_minmax"], ["", "", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "names", "=", "self", ".", "specify", "(", ")", "\n", "graphinfo", "=", "self", ".", "base", ".", "printGraph", "(", ")", "\n", "\n", "min_node", ",", "max_node", "=", "_fetch_minmax", "(", "graphinfo", ")", "\n", "graphinfo", ".", "append", "(", "(", "min_node", ",", "max_node", ",", "names", "[", "-", "1", "]", ")", ")", "\n", "return", "graphinfo", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block.NODEorOP": [[14, 20], ["len", "len", "Edge.op_init", "Node.NODE"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.op_init"], ["def", "NODEorOP", "(", "config", ":", "list", ",", "idim", ":", "int", ",", "odim", ":", "int", ",", "dropout", "=", "None", ")", "->", "nn", ".", "Module", ":", "\n", "    ", "assert", "len", "(", "config", ")", ">", "0", ",", "\"Invalid candidate number: 0.\"", "\n", "if", "len", "(", "config", ")", "==", "1", ":", "\n", "        ", "return", "op_init", "(", "config", "[", "0", "]", ",", "idim", ",", "odim", ",", "dropout", ")", "\n", "", "else", ":", "\n", "        ", "return", "NODE", "(", "config", ",", "idim", ",", "odim", ",", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block._select_max": [[22, 25], ["torch.max", "torch.max", "torch.max", "Block._get_module_name", "node.raiseArchProbs"], "function", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._get_module_name", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs"], ["", "", "def", "_select_max", "(", "node", ":", "NODE", ")", ":", "\n", "    ", "_", ",", "idx_max", "=", "torch", ".", "max", "(", "node", ".", "raiseArchProbs", "(", ")", ",", "dim", "=", "0", ")", "\n", "return", "_get_module_name", "(", "node", ".", "candidates", "[", "idx_max", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block._get_module_name": [[27, 29], ["str().split", "str"], "function", ["None"], ["", "def", "_get_module_name", "(", "module", ":", "nn", ".", "Module", ")", "->", "str", ":", "\n", "    ", "return", "str", "(", "module", ")", ".", "split", "(", "'('", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Block._fetch_minmax": [[31, 33], ["min", "max"], "function", ["None"], ["", "def", "_fetch_minmax", "(", "graphinfo", ")", "->", "int", ":", "\n", "    ", "return", "min", "(", "[", "tail", "for", "(", "tail", ",", "_", ",", "_", ")", "in", "graphinfo", "]", ")", ",", "max", "(", "[", "head", "for", "(", "_", ",", "head", ",", "_", ")", "in", "graphinfo", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.maskedbatchnorm1d.MaskedBatchNorm1d.__init__": [[42, 50], ["torch.BatchNorm1d.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_features", ",", "\n", "eps", "=", "1e-5", ",", "\n", "momentum", "=", "0.1", ",", "\n", "affine", "=", "True", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "MaskedBatchNorm1d", ",", "self", ")", ".", "__init__", "(", "num_features", ",", "eps", ",", "momentum", ",", "\n", "affine", ",", "track_running_stats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.maskedbatchnorm1d.MaskedBatchNorm1d.forward": [[51, 99], ["inp.transpose.transpose.transpose", "maskedbatchnorm1d.MaskedBatchNorm1d._check_input_dim", "maskedbatchnorm1d.lengths_to_mask", "mask.unsqueeze().expand.unsqueeze().expand.sum", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "inp.transpose.transpose.transpose", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "float"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.maskedbatchnorm1d.lengths_to_mask"], ["", "def", "forward", "(", "self", ",", "inp", ",", "lengths", ")", ":", "\n", "        ", "inp", "=", "inp", ".", "transpose", "(", "1", ",", "2", ")", "\n", "self", ".", "_check_input_dim", "(", "inp", ")", "\n", "\n", "exponential_average_factor", "=", "0.0", "\n", "\n", "# We transform the mask into a sort of P(inp) with equal probabilities", "\n", "# for all unmasked elements of the tensor, and 0 probability for masked", "\n", "# ones.", "\n", "mask", "=", "lengths_to_mask", "(", "lengths", ",", "max_len", "=", "inp", ".", "shape", "[", "-", "1", "]", ",", "dtype", "=", "inp", ".", "dtype", ")", "\n", "n", "=", "mask", ".", "sum", "(", ")", "\n", "mask", "=", "mask", "/", "n", "\n", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "inp", ".", "shape", ")", "\n", "\n", "if", "self", ".", "training", "and", "self", ".", "track_running_stats", ":", "\n", "            ", "if", "self", ".", "num_batches_tracked", "is", "not", "None", ":", "\n", "                ", "self", ".", "num_batches_tracked", "+=", "1", "\n", "if", "self", ".", "momentum", "is", "None", ":", "# use cumulative moving average", "\n", "                    ", "exponential_average_factor", "=", "1.0", "/", "float", "(", "\n", "self", ".", "num_batches_tracked", ")", "\n", "", "else", ":", "# use exponential moving average", "\n", "                    ", "exponential_average_factor", "=", "self", ".", "momentum", "\n", "\n", "# calculate running estimates", "\n", "", "", "", "if", "self", ".", "training", "and", "n", ">", "1", ":", "\n", "# Here lies the trick. Using Var(X) = E[X^2] - E[X]^2 as the biased", "\n", "# variance, we do not need to make any tensor shape manipulation.", "\n", "# mean = E[X] is simply the sum-product of our \"probability\" mask with the input...", "\n", "            ", "mean", "=", "(", "mask", "*", "inp", ")", ".", "sum", "(", "[", "0", ",", "2", "]", ")", "\n", "# ...whereas Var(X) is directly derived from the above formulae", "\n", "# This should be numerically equivalent to the biased sample variance", "\n", "var", "=", "(", "mask", "*", "inp", "**", "2", ")", ".", "sum", "(", "[", "0", ",", "2", "]", ")", "-", "mean", "**", "2", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "self", ".", "running_mean", "=", "exponential_average_factor", "*", "mean", "+", "(", "1", "-", "exponential_average_factor", ")", "*", "self", ".", "running_mean", "\n", "# Update running_var with unbiased var", "\n", "self", ".", "running_var", "=", "exponential_average_factor", "*", "var", "*", "n", "/", "(", "n", "-", "1", ")", "+", "(", "1", "-", "exponential_average_factor", ")", "*", "self", ".", "running_var", "\n", "", "", "else", ":", "\n", "            ", "mean", "=", "self", ".", "running_mean", "\n", "var", "=", "self", ".", "running_var", "\n", "\n", "", "inp", "=", "(", "inp", "-", "mean", "[", "None", ",", ":", ",", "None", "]", ")", "/", "(", "torch", ".", "sqrt", "(", "var", "[", "None", ",", ":", ",", "None", "]", "+", "\n", "self", ".", "eps", ")", ")", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "inp", "=", "inp", "*", "self", ".", "weight", "[", "None", ",", ":", ",", "None", "]", "+", "self", ".", "bias", "[", "None", ",", ":", ",", "None", "]", "\n", "\n", "", "return", "inp", ".", "transpose", "(", "1", ",", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.maskedbatchnorm1d.lengths_to_mask": [[10, 29], ["len", "lengths.max().item", "torch.arange().expand", "torch.arange().expand", "torch.arange().expand", "lengths.unsqueeze", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "len", "lengths.max", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["def", "lengths_to_mask", "(", "lengths", ",", "max_len", "=", "None", ",", "dtype", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Converts a \"lengths\" tensor to its binary mask representation.\n    \n    Based on: https://discuss.pytorch.org/t/how-to-generate-variable-length-mask/23397\n    \n    :lengths: N-dimensional tensor\n    :returns: N*max_len dimensional tensor. If max_len==None, max_len=max(lengtsh)\n    \"\"\"", "\n", "assert", "len", "(", "lengths", ".", "shape", ")", "==", "1", ",", "'Length shape should be 1 dimensional.'", "\n", "max_len", "=", "max_len", "or", "lengths", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "mask", "=", "torch", ".", "arange", "(", "\n", "max_len", ",", "\n", "device", "=", "lengths", ".", "device", ",", "\n", "dtype", "=", "lengths", ".", "dtype", ")", ".", "expand", "(", "len", "(", "lengths", ")", ",", "max_len", ")", "<", "lengths", ".", "unsqueeze", "(", "1", ")", "\n", "if", "dtype", "is", "not", "None", ":", "\n", "        ", "mask", "=", "torch", ".", "as_tensor", "(", "mask", ",", "dtype", "=", "dtype", ",", "device", "=", "lengths", ".", "device", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Edge.__init__": [[17, 25], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "Edge.arch_init", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.arch_init"], ["    ", "def", "__init__", "(", "self", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "Edge", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "arch_weight", "=", "nn", ".", "Parameter", "(", "arch_init", "(", ")", ")", "\n", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Edge._get_name": [[26, 28], ["None"], "methods", ["None"], ["", "", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer.__init__": [[31, 45], ["Edge.Edge.__init__", "torch.MultiheadAttention", "torch.MultiheadAttention", "torch.MultiheadAttention", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_i", ",", "dim_o", "=", "None", ",", "nhead", "=", "8", ",", "dim_feedforward", "=", "1024", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "EncoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "self_attn", "=", "nn", ".", "MultiheadAttention", "(", "dim_i", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "# Implementation of Feedforward model", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "dim_i", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "dim_feedforward", ",", "dim_i", ")", "\n", "\n", "self", ".", "norm1", "=", "nn", ".", "LayerNorm", "(", "dim_i", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "LayerNorm", "(", "dim_i", ")", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer.__setstate__": [[46, 50], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "'activation'", "not", "in", "state", ":", "\n", "            ", "state", "[", "'activation'", "]", "=", "F", ".", "relu", "\n", "", "super", "(", "EncoderLayer", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer.forward": [[51, 61], ["Edge.EncoderLayer.norm1", "Edge.EncoderLayer.linear2", "Edge.EncoderLayer.norm2", "Edge.EncoderLayer.self_attn", "Edge.EncoderLayer.dropout1", "Edge.EncoderLayer.dropout", "Edge.EncoderLayer.dropout2", "Edge.EncoderLayer.activation", "Edge.EncoderLayer.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "src", "=", "kwargs", "[", "\"features\"", "]", "\n", "src2", "=", "self", ".", "self_attn", "(", "src", ",", "src", ",", "src", ",", "attn_mask", "=", "None", ",", "\n", "key_padding_mask", "=", "None", ")", "[", "0", "]", "\n", "src", "=", "src", "+", "self", ".", "dropout1", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm1", "(", "src", ")", "\n", "src2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "src", ")", ")", ")", ")", "\n", "src", "=", "src", "+", "self", ".", "dropout2", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm2", "(", "src", ")", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer._get_name": [[62, 64], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"transformer\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.EncoderLayer.__str__": [[65, 67], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"Transformer\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.RNNEdge.__init__": [[70, 73], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dropout", ")", "->", "None", ":", "\n", "        ", "super", "(", "RNNEdge", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "self", ".", "rnn", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.RNNEdge.forward": [[74, 89], ["Edge.RNNEdge.rnn.flatten_parameters", "x.size", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "Edge.RNNEdge.rnn", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "Edge.RNNEdge.dropout", "lens_out.to"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "x", "=", "kwargs", "[", "'features'", "]", "\n", "lens", "=", "kwargs", "[", "'lens'", "]", "\n", "\n", "self", ".", "rnn", ".", "flatten_parameters", "(", ")", "\n", "len_total", "=", "x", ".", "size", "(", "1", ")", "\n", "\n", "packed_input", "=", "pack_padded_sequence", "(", "x", ",", "lens", ",", "batch_first", "=", "True", ")", "\n", "packed_output", ",", "_", "=", "self", ".", "rnn", "(", "packed_input", ")", "\n", "rnn_out", ",", "lens_out", "=", "pad_packed_sequence", "(", "\n", "packed_output", ",", "batch_first", "=", "True", ",", "total_length", "=", "len_total", ")", "\n", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "rnn_out", "=", "self", ".", "dropout", "(", "rnn_out", ")", "\n", "", "return", "rnn_out", ",", "lens_out", ".", "to", "(", "rnn_out", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.GRU.__init__": [[92, 95], ["Edge.RNNEdge.__init__", "torch.GRU", "torch.GRU", "torch.GRU"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "idim", ",", "hdim", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "GRU", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "GRU", "(", "idim", ",", "hdim", ",", "batch_first", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.GRU.__str__": [[96, 98], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "gru", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.GRU._get_name": [[99, 101], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"gru\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BGRU.__init__": [[104, 107], ["Edge.RNNEdge.__init__", "torch.GRU", "torch.GRU", "torch.GRU"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "idim", ",", "hdim", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "BGRU", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "GRU", "(", "idim", ",", "hdim", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BGRU._get_name": [[108, 110], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"bgru\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BGRU.__str__": [[111, 113], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "bgru", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.LSTM.__init__": [[116, 119], ["Edge.RNNEdge.__init__", "torch.LSTM", "torch.LSTM", "torch.LSTM"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "idim", ",", "hdim", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "LSTM", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "LSTM", "(", "idim", ",", "hdim", ",", "batch_first", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.LSTM._get_name": [[120, 122], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"lstm\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.LSTM.__str__": [[123, 125], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"LSTM\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BLSTM.__init__": [[128, 134], ["Edge.RNNEdge.__init__", "torch.LSTM", "torch.LSTM", "torch.LSTM"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "idim", ",", "hdim", ",", "num_layers", "=", "1", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "BLSTM", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "if", "dropout", "is", "None", ":", "\n", "            ", "dropout", "=", "0.", "\n", "", "self", ".", "rnn", "=", "nn", ".", "LSTM", "(", "idim", ",", "hdim", ",", "num_layers", "=", "num_layers", ",", "\n", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BLSTM._get_name": [[135, 137], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"blstm\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.BLSTM.__str__": [[138, 140], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"BLSTM\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.TDNN.__init__": [[143, 156], ["Edge.Edge.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "maskedbatchnorm1d.MaskedBatchNorm1d", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_i", ",", "dim_o", ",", "half_context", "=", "1", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "norm", "=", "'ln'", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "TDNN", ",", "self", ")", ".", "__init__", "(", "dropout", ")", "\n", "self", ".", "vals", "=", "[", "half_context", ",", "stride", ",", "dilation", ",", "norm", "]", "\n", "padding", "=", "half_context", "*", "dilation", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv1d", "(", "\n", "dim_i", ",", "dim_o", ",", "kernel_size", "=", "2", "*", "half_context", "+", "1", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ")", "\n", "\n", "if", "norm", "==", "\"bn\"", ":", "\n", "            ", "self", ".", "norm", "=", "MaskedBatchNorm1d", "(", "dim_o", ")", "\n", "", "elif", "norm", "==", "\"ln\"", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "dim_o", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.TDNN.forward": [[157, 175], ["features.transpose", "Edge.TDNN.conv", "torch.relu", "torch.relu", "torch.relu", "Edge.TDNN.transpose", "isinstance", "Edge.TDNN.norm", "Edge.TDNN.norm", "Edge.TDNN.dropout", "features.size", "Edge.TDNN.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "features", "=", "kwargs", "[", "'features'", "]", "\n", "lens", "=", "kwargs", "[", "'lens'", "]", "\n", "\n", "tdnn_in", "=", "features", ".", "transpose", "(", "1", ",", "2", ")", "\n", "tdnn_out", "=", "self", ".", "conv", "(", "tdnn_in", ")", "\n", "output", "=", "F", ".", "relu", "(", "tdnn_out", ")", "\n", "output", "=", "output", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "norm", ",", "MaskedBatchNorm1d", ")", ":", "\n", "            ", "output", "=", "self", ".", "norm", "(", "output", ",", "lens", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "norm", "(", "output", ")", "\n", "\n", "", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "output", "=", "self", ".", "dropout", "(", "output", ")", "\n", "\n", "", "return", "output", ",", "lens", "*", "output", ".", "size", "(", "1", ")", "/", "features", ".", "size", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.TDNN.__str__": [[176, 178], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"TDNN-C{}S{}D{}N{}\"", ".", "format", "(", "*", "(", "self", ".", "vals", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.TDNN._get_name": [[179, 181], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", ":", "\n", "        ", "return", "\"tdnn-C{}S{}D{}N{}\"", ".", "format", "(", "*", "(", "self", ".", "vals", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Identity.__init__": [[184, 186], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "args", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Identity.forward": [[187, 190], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "features", "=", "kwargs", "[", "'features'", "]", "\n", "return", "features", ",", "kwargs", "[", "'lens'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Identity._get_name": [[191, 193], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"identity\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Identity.__str__": [[194, 196], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Identity\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Zero.__init__": [[199, 202], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out", "=", "dim_out", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Zero.forward": [[203, 206], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "features.size", "features.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "features", "=", "kwargs", "[", "'features'", "]", "\n", "return", "torch", ".", "zeros", "(", "[", "features", ".", "size", "(", "0", ")", ",", "features", ".", "size", "(", "1", ")", ",", "self", ".", "out", "]", ",", "dtype", "=", "features", ".", "dtype", ",", "layout", "=", "features", ".", "layout", ",", "device", "=", "features", ".", "device", ")", ",", "kwargs", "[", "'lens'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Zero._get_name": [[207, 209], ["None"], "methods", ["None"], ["", "def", "_get_name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "\"zero\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Zero.__str__": [[210, 212], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Zero\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.arch_init": [[219, 222], ["torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["def", "arch_init", "(", ")", ":", "\n", "#return torch.empty(1).normal_(mean=0,std=0.1)", "\n", "    ", "return", "torch", ".", "zeros", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.op_init": [[230, 270], ["candidate.split", "Edge.LSTM", "Edge.BLSTM", "Edge.GRU", "Edge.BGRU", "Edge.op_init._update"], "function", ["None"], ["def", "op_init", "(", "candidate", ",", "dim_in", ",", "dim_out", ",", "dropout", "=", "None", ")", "->", "nn", ".", "Module", ":", "\n", "    ", "configs", "=", "candidate", ".", "split", "(", "'-'", ")", "\n", "layer", "=", "configs", "[", "0", "]", "\n", "if", "layer", "==", "\"lstm\"", ":", "\n", "        ", "return", "LSTM", "(", "dim_in", ",", "dim_out", ",", "dropout", "=", "dropout", ")", "\n", "", "elif", "layer", "==", "\"blstm\"", ":", "\n", "        ", "return", "BLSTM", "(", "dim_in", ",", "dim_out", "//", "2", ",", "dropout", "=", "dropout", ")", "\n", "", "elif", "layer", "==", "\"gru\"", ":", "\n", "        ", "return", "GRU", "(", "dim_in", ",", "dim_out", ",", "dropout", "=", "dropout", ")", "\n", "", "elif", "layer", "==", "\"bgru\"", ":", "\n", "        ", "return", "BGRU", "(", "dim_in", ",", "dim_out", "//", "2", ",", "dropout", "=", "dropout", ")", "\n", "", "elif", "layer", "==", "\"tdnn\"", ":", "\n", "        ", "configs", "=", "configs", "[", "1", "]", "\n", "\n", "def", "_update", "(", "pattern", ",", "default", ")", ":", "\n", "            ", "r", "=", "re", ".", "search", "(", "pattern", ",", "configs", ")", "\n", "if", "r", "is", "not", "None", ":", "\n", "                ", "return", "type", "(", "default", ")", "(", "r", ".", "group", "(", "0", ")", ")", "\n", "", "else", ":", "\n", "                ", "return", "default", "\n", "\n", "", "", "half_context", "=", "_update", "(", "r'(?<=C)\\d+'", ",", "1", ")", "\n", "stride", "=", "_update", "(", "r'(?<=S)\\d+'", ",", "1", ")", "\n", "dilation", "=", "_update", "(", "r'(?<=D)\\d+'", ",", "1", ")", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "print", "(", "\n", "\"Dilation is set > 1, which might cause slow computation in some machines.\"", ")", "\n", "", "norm", "=", "_update", "(", "r'(?<=N)(ln|bn)'", ",", "'ln'", ")", "\n", "\n", "return", "TDNN", "(", "dim_in", ",", "dim_out", ",", "half_context", "=", "half_context", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "norm", "=", "norm", ",", "dropout", "=", "dropout", ")", "\n", "\n", "", "elif", "layer", "==", "\"identity\"", ":", "\n", "        ", "return", "Identity", "(", ")", "\n", "", "elif", "layer", "==", "\"transformer\"", ":", "\n", "        ", "return", "EncoderLayer", "(", "dim_in", ")", "\n", "", "elif", "layer", "==", "\"zero\"", ":", "\n", "        ", "return", "Zero", "(", "dim_out", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "candidate", ")", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.check_hold_dim": [[272, 274], ["None"], "function", ["None"], ["", "", "def", "check_hold_dim", "(", "OP", ":", "str", ")", "->", "bool", ":", "\n", "    ", "return", "OP", "in", "[", "\"identity\"", ",", "\"transformer\"", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.__init__": [[16, 43], ["torch.Module.__init__", "len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "isinstance", "Node.NODE.candidates.append", "Edge.Edge.check_hold_dim", "tmp_ops.append", "Edge.Edge.op_init", "print", "print"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.check_hold_dim", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.op_init"], ["    ", "def", "__init__", "(", "self", ",", "ops", ":", "list", ",", "dim_in", ",", "dim_out", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "NODE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# \"search\": arch search", "\n", "# \"warmup\" : involves single op", "\n", "# \"eval\": behave the same as warmup", "\n", "if", "dim_in", "!=", "dim_out", ":", "\n", "            ", "tmp_ops", "=", "[", "]", "\n", "for", "op", "in", "ops", ":", "\n", "                ", "if", "check_hold_dim", "(", "op", ")", ":", "\n", "                    ", "print", "(", "\"OP:{} is unable to transform features dimension from {} to {}.\"", ".", "format", "(", "\n", "op", ",", "dim_in", ",", "dim_out", ")", ")", "\n", "print", "(", "\"Automatically reduce OP:{}.\"", ".", "format", "(", "op", ")", ")", "\n", "continue", "\n", "", "tmp_ops", ".", "append", "(", "op", ")", "\n", "", "ops", "=", "tmp_ops", "\n", "", "self", ".", "MODE", "=", "\"warmup\"", "\n", "self", ".", "num_ops", "=", "len", "(", "ops", ")", "\n", "self", ".", "idx_involved", "=", "[", "]", "\n", "self", ".", "idx_activated", "=", "[", "]", "\n", "assert", "self", ".", "num_ops", ">", "1", ",", "\"For none variable node, set as `fixed_part` instead.\"", "\n", "\n", "# candidate operations", "\n", "self", ".", "candidates", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "OP", "in", "ops", ":", "\n", "            ", "assert", "isinstance", "(", "OP", ",", "str", ")", "\n", "self", ".", "candidates", ".", "append", "(", "\n", "op_init", "(", "OP", ",", "dim_in", ",", "dim_out", ",", "dropout", "=", "dropout", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE._fetch_best": [[44, 48], ["Node.NODE.raiseArchProbs", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "Node.NODE.candidates[]._get_name"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.Zero._get_name"], ["", "", "def", "_fetch_best", "(", "self", ")", ":", "\n", "        ", "archs", "=", "self", ".", "raiseArchProbs", "(", ")", "\n", "_", ",", "idx", "=", "torch", ".", "max", "(", "archs", ",", "0", ")", "\n", "return", "[", "self", ".", "candidates", "[", "idx", "]", ".", "_get_name", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs": [[49, 71], ["torch.softmax", "torch.softmax", "torch.softmax", "Node.NODE.raiseArchProbs._raiseArchWeights"], "methods", ["None"], ["", "def", "raiseArchProbs", "(", "self", ",", "idxList", "=", "None", ",", "requires_grad", "=", "False", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "def", "_raiseArchWeights", "(", "idxList", ",", "requires_grad", ")", ":", "\n", "            ", "r'return the probs of specified indices ops,\\\n            if `idxList`=`None`, return probs of all ops'", "\n", "if", "idxList", "is", "None", ":", "\n", "                ", "idxList", "=", "list", "(", "range", "(", "self", ".", "num_ops", ")", ")", "\n", "", "if", "requires_grad", ":", "\n", "                ", "arch_weight", "=", "[", "]", "\n", "for", "i", "in", "idxList", ":", "\n", "                    ", "arch_weight", ".", "append", "(", "self", ".", "candidates", "[", "i", "]", ".", "arch_weight", ")", "\n", "", "arch_weight", "=", "torch", ".", "cat", "(", "arch_weight", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "arch_weight", "=", "torch", ".", "zeros", "(", "len", "(", "idxList", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "for", "m", ",", "i", "in", "enumerate", "(", "idxList", ")", ":", "\n", "                        ", "arch_weight", "[", "m", "]", "=", "self", ".", "candidates", "[", "i", "]", ".", "arch_weight", ".", "data", "\n", "\n", "", "", "", "return", "arch_weight", "\n", "\n", "", "probs", "=", "F", ".", "softmax", "(", "_raiseArchWeights", "(", "idxList", ",", "requires_grad", ")", ",", "dim", "=", "0", ")", "\n", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.modeSwitch": [[72, 77], ["None"], "methods", ["None"], ["", "def", "modeSwitch", "(", "self", ",", "new_mode", ":", "str", ")", ":", "\n", "        ", "if", "new_mode", "not", "in", "(", "\"search\"", ",", "\"warmup\"", ",", "\"eval\"", ")", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "            ", "self", ".", "MODE", "=", "new_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.forward": [[78, 105], ["Node.NODE.raiseArchProbs", "enumerate", "_out.detach", "prob_sliced[].detach", "prob_sliced[].detach"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Node.NODE.raiseArchProbs"], ["", "", "def", "forward", "(", "self", ",", "features", ",", "lens", ")", ":", "\n", "\n", "        ", "idx_activated", "=", "self", ".", "idx_activated", "[", "0", "]", "\n", "idx_involved", "=", "self", ".", "idx_involved", "\n", "\n", "if", "self", ".", "MODE", "in", "(", "\"warmup\"", ",", "\"eval\"", ")", ":", "\n", "# involves single candidate OP", "\n", "            ", "return", "self", ".", "candidates", "[", "idx_activated", "]", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "", "elif", "self", ".", "MODE", "==", "\"search\"", ":", "\n", "            ", "prob_sliced", "=", "self", ".", "raiseArchProbs", "(", "\n", "idxList", "=", "idx_involved", ",", "requires_grad", "=", "True", ")", "\n", "\n", "output", "=", "0.", "\n", "lens_o", "=", "None", "\n", "for", "idx_sliced", ",", "idx", "in", "enumerate", "(", "idx_involved", ")", ":", "\n", "                ", "_out", ",", "lens_o", "=", "self", ".", "candidates", "[", "idx", "]", "(", "\n", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "if", "idx", "==", "idx_activated", ":", "\n", "                    ", "output", "+=", "(", "1.", "-", "prob_sliced", "[", "idx_sliced", "]", ".", "detach", "(", ")", "+", "\n", "prob_sliced", "[", "idx_sliced", "]", ")", "*", "_out", "\n", "", "else", ":", "\n", "                    ", "output", "+=", "(", "prob_sliced", "[", "idx_sliced", "]", "-", "\n", "prob_sliced", "[", "idx_sliced", "]", ".", "detach", "(", ")", ")", "*", "_out", ".", "detach", "(", ")", "\n", "", "", "return", "output", ",", "lens_o", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MySequential.__init__": [[43, 45], ["torch.Sequential.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MySequential", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MySequential.insert": [[46, 56], ["superNet.MySequential.add_module", "KeyError", "IndexError", "list", "superNet.MySequential._modules.move_to_end", "len", "superNet.MySequential._modules.keys"], "methods", ["None"], ["", "def", "insert", "(", "self", ",", "name", ",", "pos", ",", "module", ")", ":", "\n", "        ", "if", "name", "in", "self", ".", "_modules", ":", "\n", "            ", "raise", "KeyError", "(", "\"Key already exists\"", ")", "\n", "", "if", "pos", "<", "0", "or", "pos", ">", "len", "(", "self", ".", "_modules", ")", ":", "\n", "            ", "raise", "IndexError", "(", "\"Index out of range\"", ")", "\n", "\n", "", "keys", "=", "list", "(", "self", ".", "_modules", ".", "keys", "(", ")", ")", "[", "pos", ":", "]", "\n", "self", ".", "add_module", "(", "name", ",", "module", ")", "\n", "for", "k", "in", "keys", ":", "\n", "            ", "self", ".", "_modules", ".", "move_to_end", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MySequential.forward": [[57, 64], ["enumerate", "module", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "features", ",", "lens", ")", ":", "\n", "        ", "for", "i", ",", "module", "in", "enumerate", "(", "self", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "features", ",", "lens", "=", "module", "(", "features", "=", "features", ",", "lens", "=", "lens", ")", "\n", "", "except", ":", "\n", "                ", "features", "=", "module", "(", "features", ")", "\n", "", "", "return", "features", ",", "lens", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.__init__": [[67, 79], ["torch.Module.__init__", "superNet.MySequential"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj", "=", "None", ")", ":", "\n", "        ", "super", "(", "superNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "obj", "is", "None", ":", "\n", "            ", "self", ".", "num_blocks", "=", "0", "\n", "self", ".", "layers", "=", "MySequential", "(", ")", "\n", "self", ".", "blocks", "=", "[", "]", "\n", "self", ".", "fixed_part", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_blocks", "=", "obj", ".", "num_blocks", "\n", "self", ".", "layers", "=", "obj", ".", "layers", "\n", "self", ".", "blocks", "=", "obj", ".", "blocks", "\n", "self", ".", "fixed_part", "=", "obj", ".", "fixed_part", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.add_block": [[80, 84], ["superNet.superNet.layers.add_module", "superNet.superNet.blocks.append"], "methods", ["None"], ["", "", "def", "add_block", "(", "self", ",", "name", ",", "block", ")", ":", "\n", "        ", "self", ".", "num_blocks", "+=", "1", "\n", "self", ".", "layers", ".", "add_module", "(", "name", ",", "block", ")", "\n", "self", ".", "blocks", ".", "append", "(", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.add_fixed": [[85, 91], ["superNet.superNet.fixed_part.append", "superNet.superNet.layers.add_module", "superNet.superNet.layers.insert"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MySequential.insert"], ["", "def", "add_fixed", "(", "self", ",", "name", ",", "fixed_layer", ",", "pos", "=", "None", ")", ":", "\n", "        ", "if", "pos", "is", "None", ":", "\n", "            ", "self", ".", "layers", ".", "add_module", "(", "name", ",", "fixed_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layers", ".", "insert", "(", "name", ",", "pos", ",", "fixed_layer", ")", "\n", "", "self", ".", "fixed_part", ".", "append", "(", "fixed_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph": [[92, 109], ["isinstance", "module.printGraph", "Block._fetch_minmax", "net_graph.append", "superNet._graph_add", "Block._get_module_name"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.printGraph", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._fetch_minmax", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._graph_add", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._get_module_name"], ["", "def", "printGraph", "(", "self", ")", ":", "\n", "        ", "net_graph", "=", "[", "]", "\n", "tail", "=", "0", "\n", "for", "module", "in", "self", ".", "layers", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "ParentBlock", ")", ":", "\n", "                ", "block_graph", "=", "module", ".", "printGraph", "(", ")", "\n", "min_node", ",", "max_node", "=", "_fetch_minmax", "(", "block_graph", ")", "\n", "if", "min_node", "==", "tail", ":", "\n", "                    ", "tail", "=", "max_node", "\n", "", "else", ":", "\n", "                    ", "block_graph", "=", "_graph_add", "(", "block_graph", ",", "tail", ")", "\n", "tail", "=", "max_node", "+", "tail", "\n", "", "net_graph", "+=", "block_graph", "\n", "", "else", ":", "\n", "                ", "net_graph", ".", "append", "(", "(", "tail", ",", "tail", "+", "1", ",", "_get_module_name", "(", "module", ")", ")", ")", "\n", "tail", "+=", "1", "\n", "", "", "return", "net_graph", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.forward": [[110, 113], ["superNet.superNet.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ",", "lens", ")", ":", "\n", "        ", "output", ",", "lens_o", "=", "self", ".", "layers", "(", "features", ",", "lens", ")", "\n", "return", "output", ",", "lens_o", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseFixed": [[114, 120], ["block.raiseFixed"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseFixed"], ["", "def", "raiseFixed", "(", "self", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "output", "+=", "block", ".", "raiseFixed", "(", ")", "\n", "", "output", "+=", "self", ".", "fixed_part", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseNode": [[121, 126], ["block.raiseNode"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.raiseNode"], ["", "def", "raiseNode", "(", "self", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "output", "=", "output", "+", "block", ".", "raiseNode", "(", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.num_block": [[127, 130], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_block", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.__getitem__": [[131, 133], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "blocks", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet._fetch_best": [[134, 139], ["output.append", "block._fetch_best"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet._fetch_best"], ["", "def", "_fetch_best", "(", "self", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "output", ".", "append", "(", "block", ".", "_fetch_best", "(", ")", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.repeatNet.__init__": [[142, 160], ["superNet.superNet.__init__", "superNet._generate_odims", "range", "superNet.repeatNet.add_fixed", "len", "len", "superNet.repeatNet.add_block", "torch.Linear", "torch.Linear", "BLOCK"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._generate_odims", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.add_fixed", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.add_block"], ["    ", "def", "__init__", "(", "self", ",", "BLOCK", ":", "ParentBlock", ",", "config", ":", "list", ",", "block_list", ":", "list", ",", "idim", ":", "int", ",", "odims", ",", "num_classes", ":", "int", ",", "dropout", ":", "float", "=", "None", ",", "args_block", ":", "tuple", "=", "None", ")", ":", "\n", "        ", "r'''\n        base supetnet for repeatly stacking the same kind of Block\n        '''", "\n", "super", "(", "repeatNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_blocks", "=", "block_list", "[", "0", "]", "\n", "assert", "len", "(", "config", ")", "==", "num_blocks", ",", "\"Length of configuration:{} mismatch number of blocks:{}\"", ".", "format", "(", "\n", "len", "(", "config", ")", ",", "num_blocks", ")", "\n", "\n", "odims", "=", "_generate_odims", "(", "num_blocks", ",", "odims", ")", "\n", "odims", "=", "[", "idim", "]", "+", "odims", "\n", "\n", "args", "=", "(", "dropout", ",", ")", "+", "args_block", "if", "args_block", "is", "not", "None", "else", "(", "dropout", ",", ")", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "self", ".", "add_block", "(", "\"block%d\"", "%", "i", ",", "BLOCK", "(", "\n", "config", "[", "i", "]", ",", "odims", "[", "i", "]", ",", "odims", "[", "i", "+", "1", "]", ",", "*", "args", ")", ")", "\n", "\n", "", "self", ".", "add_fixed", "(", "\"linear1\"", ",", "nn", ".", "Linear", "(", "odims", "[", "-", "1", "]", ",", "num_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.UniNodeNet.__init__": [[163, 165], ["superNet.repeatNet.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "UniNodeNet", ",", "self", ")", ".", "__init__", "(", "WrapNode", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.UniNodeNet.len_config": [[166, 170], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "r'Return length of config in each block.'", "\n", "return", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.BiResidualNet.__init__": [[173, 176], ["superNet.repeatNet.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BiResidualNet", ",", "self", ")", ".", "__init__", "(", "\n", "ResidualBlock", ",", "**", "kwargs", ",", "args_block", "=", "(", "BasicBlock", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.BiResidualNet.len_config": [[177, 181], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "r'Return length of config in each block.'", "\n", "return", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.ResidualNet.__init__": [[184, 188], ["superNet.repeatNet.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", "ResidualNet", ",", "self", ")", ".", "__init__", "(", "\n", "ResidualBlock", ",", "**", "kwargs", ",", "args_block", "=", "(", "WrapNode", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.ResidualNet.len_config": [[189, 193], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "r'Return length of config in each block.'", "\n", "return", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.BiNodeNet.__init__": [[196, 198], ["superNet.repeatNet.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BiNodeNet", ",", "self", ")", ".", "__init__", "(", "BasicBlock", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.BiNodeNet.len_config": [[199, 203], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "len_config", "(", ")", ":", "\n", "        ", "r'Return length of config in each block.'", "\n", "return", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.SubLayer.__init__": [[206, 209], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "coeff", ":", "int", ")", ":", "\n", "        ", "super", "(", "SubLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "step", "=", "coeff", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.SubLayer.forward": [[210, 212], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ",", "lens", ")", ":", "\n", "        ", "return", "features", "[", ":", ":", ",", ":", ":", "self", ".", "step", ",", ":", ":", "]", ",", "lens", "//", "self", ".", "step", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__": [[215, 219], ["superNet.UniNodeNet.__init__", "op_init", "superNet.MFRNet.add_fixed"], "methods", ["home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.MFRNet.__init__", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.Edge.op_init", "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet.superNet.add_fixed"], ["    ", "def", "__init__", "(", "self", ",", "pos_subsample", ":", "int", ",", "idim_sub", ":", "int", ",", "odim_sub", ":", "int", ",", "dropout_sub", ":", "float", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "        ", "super", "(", "MFRNet", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "sublayer", "=", "op_init", "(", "\"tdnn-C1S3D1Nln\"", ",", "idim_sub", ",", "odim_sub", ",", "dropout_sub", ")", "\n", "self", ".", "add_fixed", "(", "\"sublayer\"", ",", "sublayer", ",", "pos_subsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._graph_add": [[12, 17], ["outgraph.append"], "function", ["None"], ["def", "_graph_add", "(", "graphinfo", ",", "i", ")", ":", "\n", "    ", "outgraph", "=", "[", "]", "\n", "for", "tail", ",", "head", ",", "op", "in", "graphinfo", ":", "\n", "        ", "outgraph", ".", "append", "(", "(", "tail", "+", "i", ",", "head", "+", "i", ",", "op", ")", ")", "\n", "", "return", "outgraph", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._get_module_name": [[19, 21], ["str().split", "str"], "function", ["None"], ["", "def", "_get_module_name", "(", "module", ":", "nn", ".", "Module", ")", "->", "str", ":", "\n", "    ", "return", "str", "(", "module", ")", ".", "split", "(", "'('", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._fetch_minmax": [[23, 25], ["min", "max"], "function", ["None"], ["", "def", "_fetch_minmax", "(", "graphinfo", ")", "->", "int", ":", "\n", "    ", "return", "min", "(", "[", "tail", "for", "(", "tail", ",", "_", ",", "_", ")", "in", "graphinfo", "]", ")", ",", "max", "(", "[", "head", "for", "(", "_", ",", "head", ",", "_", ")", "in", "graphinfo", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu-spmi_ST-NAS.modules.superNet._generate_odims": [[27, 40], ["isinstance", "len", "range", "len", "len"], "function", ["None"], ["", "def", "_generate_odims", "(", "num_blocks", ",", "odims", ")", ":", "\n", "    ", "if", "isinstance", "(", "odims", ",", "int", ")", ":", "\n", "        ", "out_chs", "=", "[", "odims", "for", "_", "in", "range", "(", "num_blocks", ")", "]", "\n", "", "elif", "len", "(", "odims", ")", "<", "num_blocks", ":", "\n", "        ", "divied", "=", "num_blocks", "//", "len", "(", "odims", ")", "\n", "tmp_chs", "=", "odims", "\n", "out_chs", "=", "[", "]", "\n", "for", "oc", "in", "tmp_chs", "[", ":", "-", "1", "]", ":", "\n", "            ", "out_chs", "+=", "[", "oc", "]", "*", "divied", "\n", "", "out_chs", "+=", "[", "tmp_chs", "[", "-", "1", "]", "]", "*", "(", "num_blocks", "-", "len", "(", "out_chs", ")", ")", "\n", "", "else", ":", "\n", "        ", "out_chs", "=", "odims", "\n", "", "return", "out_chs", "\n", "\n"]]}