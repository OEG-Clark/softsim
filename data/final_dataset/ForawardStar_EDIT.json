{"home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.Discriminator.__init__": [[26, 44], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "layers.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Discriminator.__init__.discriminator_block"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "7", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "def", "discriminator_block", "(", "in_filters", ",", "out_filters", ",", "normalize", "=", "True", ")", ":", "\n", "            ", "\"\"\"Returns downsampling layers of each discriminator block\"\"\"", "\n", "layers", "=", "[", "nn", ".", "Conv2d", "(", "in_filters", ",", "out_filters", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "if", "normalize", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "out_filters", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "return", "layers", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "*", "discriminator_block", "(", "in_channels", ",", "64", ",", "normalize", "=", "False", ")", ",", "\n", "*", "discriminator_block", "(", "64", ",", "128", ")", ",", "\n", "*", "discriminator_block", "(", "128", ",", "256", ")", ",", "\n", "*", "discriminator_block", "(", "256", ",", "512", ")", ",", "\n", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "4", ",", "padding", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.Discriminator.forward": [[46, 49], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.Discriminator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "labels", ")", ":", "\n", "        ", "inputimg", "=", "torch", ".", "cat", "(", "[", "img", ",", "labels", "]", ",", "dim", "=", "1", ")", "\n", "return", "self", ".", "model", "(", "inputimg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.VGG.__init__": [[52, 64], ["torch.Module.__init__", "models.VGG.parameters"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "features", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "layer_name_mapping", "=", "{", "\n", "#'3': \"relu1_2\",", "\n", "'8'", ":", "\"relu2_2\"", ",", "\n", "'15'", ":", "\"relu3_3\"", ",", "\n", "'22'", ":", "\"relu4_3\"", ",", "\n", "'25'", ":", "\"relu5_1\"", "\n", "}", "\n", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.VGG.forward": [[65, 72], ["models.VGG.features._modules.items", "module", "outs.append"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "name", ",", "module", "in", "self", ".", "features", ".", "_modules", ".", "items", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "if", "name", "in", "self", ".", "layer_name_mapping", ":", "\n", "                ", "outs", ".", "append", "(", "x", ")", "\n", "", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.MyConv2D.__init__": [[75, 84], ["torch.Module.__init__", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "MyConv2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "torch", ".", "zeros", "(", "(", "out_channels", ",", "in_channels", ",", "kernel_size", ",", "kernel_size", ")", ")", ".", "cuda", "(", ")", "\n", "self", ".", "bias", "=", "torch", ".", "zeros", "(", "out_channels", ")", ".", "cuda", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "kernel_size", "=", "(", "kernel_size", ",", "kernel_size", ")", "\n", "self", ".", "stride", "=", "(", "stride", ",", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.MyConv2D.forward": [[85, 87], ["torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "conv2d", "(", "x", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.MyConv2D.extra_repr": [[88, 92], ["s.format"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s", "=", "(", "'{in_channels}, {out_channels}, kernel_size={kernel_size}'", "\n", "', stride={stride}'", ")", "\n", "return", "s", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ResidualBlock.__init__": [[95, 100], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.ConvLayer", "models.ConvLayer"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "*", "ConvLayer", "(", "channels", ",", "channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "trainable", "=", "True", ")", ",", "\n", "*", "ConvLayer", "(", "channels", ",", "channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "relu", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ResidualBlock.forward": [[102, 104], ["models.ResidualBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.__init__": [[123, 141], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.TransformNet.get_param_dict", "torch.Tanh", "torch.Tanh", "torch.Tanh", "models.ConvLayer", "models.ConvLayer", "models.ConvLayer", "models.ConvLayer", "models.ConvLayer", "models.ConvLayer", "models.ResidualBlock", "range"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.get_param_dict", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer"], ["    ", "def", "__init__", "(", "self", ",", "base", "=", "8", ")", ":", "\n", "        ", "super", "(", "TransformNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base", "=", "base", "\n", "self", ".", "weights", "=", "[", "]", "\n", "self", ".", "downsampling", "=", "nn", ".", "Sequential", "(", "\n", "\n", "*", "ConvLayer", "(", "3", ",", "base", ",", "kernel_size", "=", "9", ",", "trainable", "=", "True", ")", ",", "\n", "*", "ConvLayer", "(", "base", ",", "base", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "trainable", "=", "True", ")", ",", "\n", "*", "ConvLayer", "(", "base", "*", "2", ",", "base", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "trainable", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "residuals", "=", "nn", ".", "Sequential", "(", "*", "[", "ResidualBlock", "(", "base", "*", "4", ")", "for", "i", "in", "range", "(", "7", ")", "]", ")", "\n", "self", ".", "upsampling", "=", "nn", ".", "Sequential", "(", "\n", "*", "ConvLayer", "(", "base", "*", "4", ",", "base", "*", "2", ",", "kernel_size", "=", "3", ",", "upsample", "=", "2", ",", "trainable", "=", "True", ")", ",", "\n", "*", "ConvLayer", "(", "base", "*", "2", ",", "base", ",", "kernel_size", "=", "3", ",", "upsample", "=", "2", ")", ",", "\n", "*", "ConvLayer", "(", "base", ",", "3", ",", "kernel_size", "=", "9", ",", "instance_norm", "=", "False", ",", "relu", "=", "False", ",", "trainable", "=", "True", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n", "self", ".", "get_param_dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.forward": [[142, 147], ["models.TransformNet.downsampling", "models.TransformNet.residuals", "models.TransformNet.upsampling"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "y", "=", "self", ".", "downsampling", "(", "X", ")", "\n", "y", "=", "self", ".", "residuals", "(", "y", ")", "\n", "y", "=", "self", ".", "upsampling", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.get_param_dict": [[148, 161], ["collections.defaultdict", "models.TransformNet.get_param_dict.dfs"], "methods", ["None"], ["", "def", "get_param_dict", "(", "self", ")", ":", "\n", "        ", "\"\"\"\u627e\u51fa\u8be5\u7f51\u7edc\u6240\u6709 MyConv2D \u5c42\uff0c\u8ba1\u7b97\u5b83\u4eec\u9700\u8981\u7684\u6743\u503c\u6570\u91cf\"\"\"", "\n", "param_dict", "=", "defaultdict", "(", "int", ")", "\n", "\n", "def", "dfs", "(", "module", ",", "name", ")", ":", "\n", "            ", "for", "name2", ",", "layer", "in", "module", ".", "named_children", "(", ")", ":", "\n", "                ", "dfs", "(", "layer", ",", "'%s.%s'", "%", "(", "name", ",", "name2", ")", "if", "name", "!=", "''", "else", "name2", ")", "\n", "", "if", "module", ".", "__class__", "==", "MyConv2D", ":", "\n", "                ", "param_dict", "[", "name", "]", "+=", "int", "(", "np", ".", "prod", "(", "module", ".", "weight", ".", "shape", ")", ")", "\n", "param_dict", "[", "name", "]", "+=", "int", "(", "np", ".", "prod", "(", "module", ".", "bias", ".", "shape", ")", ")", "\n", "\n", "", "", "dfs", "(", "self", ",", "''", ")", "\n", "return", "param_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_my_attr": [[162, 175], ["name.split", "numpy.prod", "value[].view", "value[].view", "x.isnumeric", "getattr.__getitem__", "getattr", "int"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__getitem__"], ["", "def", "set_my_attr", "(", "self", ",", "name", ",", "value", ")", ":", "\n", "# \u4e0b\u9762\u8fd9\u4e2a\u5faa\u73af\u662f\u4e00\u6b65\u6b65\u904d\u5386\u7c7b\u4f3c residuals.0.conv.1 \u7684\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u76f8\u5e94\u7684\u6743\u503c", "\n", "        ", "target", "=", "self", "\n", "for", "x", "in", "name", ".", "split", "(", "'.'", ")", ":", "\n", "            ", "if", "x", ".", "isnumeric", "(", ")", ":", "\n", "                ", "target", "=", "target", ".", "__getitem__", "(", "int", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                ", "target", "=", "getattr", "(", "target", ",", "x", ")", "\n", "\n", "# \u8bbe\u7f6e\u5bf9\u5e94\u7684\u6743\u503c", "\n", "", "", "n_weight", "=", "np", ".", "prod", "(", "target", ".", "weight", ".", "shape", ")", "\n", "target", ".", "weight", "=", "value", "[", ":", "n_weight", "]", ".", "view", "(", "target", ".", "weight", ".", "shape", ")", "\n", "target", ".", "bias", "=", "value", "[", "n_weight", ":", "]", ".", "view", "(", "target", ".", "bias", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights": [[176, 180], ["weights.items", "models.TransformNet.set_my_attr"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_my_attr"], ["", "def", "set_weights", "(", "self", ",", "weights", ",", "i", "=", "0", ")", ":", "\n", "        ", "\"\"\"\u8f93\u5165\u6743\u503c\u5b57\u5178\uff0c\u5bf9\u8be5\u7f51\u7edc\u6240\u6709\u7684 MyConv2D \u5c42\u8bbe\u7f6e\u6743\u503c\"\"\"", "\n", "for", "name", ",", "param", "in", "weights", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "set_my_attr", "(", "name", ",", "weights", "[", "name", "]", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.MetaNet.__init__": [[182, 191], ["torch.Module.__init__", "len", "torch.Linear", "torch.Linear", "torch.Linear", "enumerate", "param_dict.items", "setattr", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "param_dict", ")", ":", "\n", "        ", "super", "(", "MetaNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "param_num", "=", "len", "(", "param_dict", ")", "\n", "self", ".", "hidden", "=", "nn", ".", "Linear", "(", "2816", "+", "4", ",", "128", "*", "self", ".", "param_num", ")", "\n", "\n", "self", ".", "fc_dict", "=", "{", "}", "\n", "for", "i", ",", "(", "name", ",", "params", ")", "in", "enumerate", "(", "param_dict", ".", "items", "(", ")", ")", ":", "\n", "            ", "self", ".", "fc_dict", "[", "name", "]", "=", "i", "\n", "setattr", "(", "self", ",", "'fc{}'", ".", "format", "(", "i", "+", "1", ")", ",", "nn", ".", "Linear", "(", "128", ",", "params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.MetaNet.forward": [[192, 207], ["torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.relu", "torch.relu", "torch.relu", "models.MetaNet.fc_dict.items", "models.MetaNet.hidden", "getattr", "getattr.", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "mean_std_features", ",", "label", ")", ":", "\n", "#mean_std_features = mean_std_features.view(-1,mean_std_features.shape[0] * mean_std_features.shape[1])", "\n", "#label_vector = torch.mean(label,dim=2).view(1,-1)", "\n", "        ", "index0", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "[", "torch", ".", "mean", "(", "label", "[", "0", "]", "[", "0", "]", ")", "]", ")", "\n", "index1", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "[", "torch", ".", "mean", "(", "label", "[", "0", "]", "[", "1", "]", ")", "]", ")", "\n", "index2", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "[", "torch", ".", "mean", "(", "label", "[", "0", "]", "[", "2", "]", ")", "]", ")", "\n", "index3", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "[", "torch", ".", "mean", "(", "label", "[", "0", "]", "[", "3", "]", ")", "]", ")", "\n", "#index4 = torch.cuda.FloatTensor([torch.mean(label[0][4])])", "\n", "label_vector", "=", "torch", ".", "cat", "(", "(", "index0", ",", "index1", ",", "index2", ",", "index3", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "hidden", "=", "F", ".", "relu", "(", "self", ".", "hidden", "(", "torch", ".", "cat", "(", "[", "mean_std_features", ",", "label_vector", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "filters", "=", "{", "}", "\n", "for", "name", ",", "i", "in", "self", ".", "fc_dict", ".", "items", "(", ")", ":", "\n", "            ", "fc", "=", "getattr", "(", "self", ",", "'fc{}'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "filters", "[", "name", "]", "=", "fc", "(", "hidden", "[", ":", ",", "i", "*", "128", ":", "(", "i", "+", "1", ")", "*", "128", "]", ")", "\n", "", "return", "filters", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.weights_init_normal": [[7, 14], ["classname.find", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "classname.find", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "function", ["None"], ["def", "weights_init_normal", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm2d'", ")", "!=", "-", "1", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "0.02", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.ConvLayer": [[106, 121], ["layers.append", "layers.append", "torch.ReflectionPad2d", "layers.append", "layers.append", "layers.append", "layers.append", "torch.Upsample", "torch.Conv2d", "models.MyConv2D", "torch.InstanceNorm2d", "torch.ReLU"], "function", ["None"], ["", "", "def", "ConvLayer", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "upsample", "=", "None", ",", "instance_norm", "=", "True", ",", "relu", "=", "True", ",", "trainable", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "if", "upsample", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Upsample", "(", "mode", "=", "'nearest'", ",", "scale_factor", "=", "upsample", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "ReflectionPad2d", "(", "kernel_size", "//", "2", ")", ")", "\n", "if", "trainable", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ")", ")", "\n", "", "else", ":", "\n", "        ", "layers", ".", "append", "(", "MyConv2D", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ")", ")", "\n", "", "if", "instance_norm", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "out_channels", ")", ")", "\n", "", "if", "relu", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets_CrossDomain.ImageDataset.__init__": [[14, 26], ["torchvision.Compose", "sorted", "sorted", "sorted", "sorted", "sorted", "sorted", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "transforms_", "=", "None", ",", "unaligned", "=", "False", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transforms_", ")", "\n", "self", ".", "unaligned", "=", "unaligned", "\n", "self", ".", "domains_num", "=", "3", "\n", "\n", "self", ".", "photo_files", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'monet2photo/%sB'", "%", "mode", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "monet_files", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'monet2photo/%sA'", "%", "mode", ")", "+", "'/*.*'", ")", ")", "\n", "#self.ukiyoe_files = sorted(glob.glob(os.path.join(root, 'ukiyoe2photo/%sA' % mode) + '/*.*'))", "\n", "self", ".", "sheos_files_A", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'real_sheos'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "sheos_files_B", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'edge_sheos'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "building_files_A", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'building_semantic_image'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "building_files_B", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'building_semantic_map'", ")", "+", "'/*.*'", ")", ")", "\n", "#self.bag_files_A = sorted(glob.glob(os.path.join(root, 'EdgesndHandbags/bags') + '/*.*'))", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets_CrossDomain.ImageDataset.__getitem__": [[29, 70], ["random.randint", "random.randint", "numpy.zeros", "numpy.zeros", "datasets_CrossDomain.ImageDataset.transform", "datasets_CrossDomain.ImageDataset.transform", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open().convert", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "datasets_CrossDomain.ImageDataset.transform", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open().convert", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "datasets_CrossDomain.ImageDataset.transform", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open", "PIL.Image.open().convert", "datasets_CrossDomain.ImageDataset.transform", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "random.randint", "PIL.Image.open", "random.randint", "random.randint", "len", "random.randint", "len", "random.randint", "len", "len", "random.randint", "len", "random.randint", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "ref_label", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "domains_num", "+", "1", ")", "\n", "\n", "if", "ref_label", "==", "1", ":", "\n", "            ", "ref", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "photo_files", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "photo_files", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "ref_label", "==", "2", ":", "\n", "            ", "ref", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "monet_files", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "monet_files", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "\n", "", "elif", "ref_label", "==", "3", ":", "\n", "            ", "ref", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "sheos_files_A", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sheos_files_A", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "ref_label", "==", "4", ":", "\n", "            ", "ref", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "building_files_A", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "building_files_A", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "", "label", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "domains_num", ")", "\n", "\n", "if", "label", "==", "1", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "sheos_files_A", "[", "index", "%", "len", "(", "self", ".", "sheos_files_A", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "sheos_files_B", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sheos_files_B", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "label", "==", "2", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "building_files_A", "[", "index", "%", "len", "(", "self", ".", "building_files_A", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "building_files_B", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "building_files_B", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "label", "==", "3", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "monet_files", "[", "index", "%", "len", "(", "self", ".", "monet_files", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "photo_files", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "photo_files", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "#elif label == 4:", "\n", "#    item_A = self.transform(Image.open(self.ukiyoe_files[index % len(self.ukiyoe_files)]).convert(\"RGB\"))", "\n", "\n", "#    item_B = self.transform(Image.open(self.photo_files[random.randint(0, len(self.photo_files) - 1)]).convert(\"RGB\"))", "\n", "\n", "", "one_hot_label_AB", "=", "np", ".", "zeros", "(", "(", "self", ".", "domains_num", "+", "1", ",", "item_A", ".", "shape", "[", "1", "]", ",", "item_A", ".", "shape", "[", "2", "]", ")", ")", "\n", "one_hot_label_BA", "=", "np", ".", "zeros", "(", "(", "self", ".", "domains_num", "+", "1", ",", "item_A", ".", "shape", "[", "1", "]", ",", "item_A", ".", "shape", "[", "2", "]", ")", ")", "\n", "one_hot_label_AB", "[", "label", "-", "1", "]", "=", "1", "\n", "one_hot_label_BA", "[", "label", "-", "1", "]", "=", "1", "\n", "one_hot_label_AB", "[", "self", ".", "domains_num", "]", "=", "0", "\n", "one_hot_label_BA", "[", "self", ".", "domains_num", "]", "=", "1", "\n", "\n", "return", "{", "'A'", ":", "item_A", ",", "'B'", ":", "item_B", ",", "'label_AB'", ":", "one_hot_label_AB", ",", "'label_BA'", ":", "one_hot_label_BA", ",", "'label_name'", ":", "label", ",", "'ref'", ":", "ref", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets_CrossDomain.ImageDataset.__len__": [[71, 73], ["max", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "max", "(", "len", "(", "self", ".", "sheos_files_A", ")", ",", "len", "(", "self", ".", "sheos_files_B", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.train.ColorToByte": [[147, 157], ["torch.where", "torch.where", "torch.where", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["def", "ColorToByte", "(", "tensor", ",", "threshold", ")", ":", "\n", "# R = tensor[0][1]", "\n", "# G = tensor[0][1]", "\n", "# B = tensor[0][2]", "\n", "#", "\n", "#tensor[0][0] = 0.299 * R + 0.587 * G + 0.114 * B", "\n", "    ", "tensor", "[", "0", "]", "[", "1", "]", "=", "tensor", "[", "0", "]", "[", "0", "]", "\n", "tensor", "[", "0", "]", "[", "2", "]", "=", "tensor", "[", "0", "]", "[", "0", "]", "\n", "\n", "return", "torch", ".", "where", "(", "tensor", ">", "threshold", ",", "torch", ".", "ones", "(", "tensor", ".", "shape", ")", ".", "cuda", "(", ")", ",", "torch", ".", "zeros", "(", "tensor", ".", "shape", ")", ".", "cuda", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.train.sample_images": [[158, 180], ["next", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "vgg16", "vgg16", "metanet", "metanet", "G.set_weights", "G", "G.set_weights", "G", "torch.cat", "torch.cat", "torch.cat", "torchvision.utils.save_image", "iter", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "utils.mean_std", "utils.mean_std"], "function", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std"], ["", "def", "sample_images", "(", "batches_done", ")", ":", "\n", "    ", "\"\"\"Saves a generated sample from the test set\"\"\"", "\n", "imgs", "=", "next", "(", "iter", "(", "val_dataloader", ")", ")", "\n", "val_real_A", "=", "Variable", "(", "imgs", "[", "'A'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_real_B", "=", "Variable", "(", "imgs", "[", "'B'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_label_AB", "=", "Variable", "(", "imgs", "[", "'label_AB'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_label_BA", "=", "Variable", "(", "imgs", "[", "'label_BA'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "label_name", "=", "imgs", "[", "'label_name'", "]", "\n", "\n", "val_real_A_features", "=", "vgg16", "(", "val_real_A", ")", "\n", "val_real_B_features", "=", "vgg16", "(", "val_real_B", ")", "\n", "\n", "val_weights_AB", "=", "metanet", "(", "mean_std", "(", "val_real_B_features", ")", ",", "val_label_AB", ")", "\n", "val_weights_BA", "=", "metanet", "(", "mean_std", "(", "val_real_A_features", ")", ",", "val_label_BA", ")", "\n", "\n", "G", ".", "set_weights", "(", "val_weights_BA", ",", "0", ")", "\n", "val_fake_A", "=", "G", "(", "val_real_B", ")", "\n", "G", ".", "set_weights", "(", "val_weights_AB", ",", "0", ")", "\n", "val_fake_B", "=", "G", "(", "val_real_A", ")", "\n", "img_sample", "=", "torch", ".", "cat", "(", "(", "val_real_A", ".", "data", ",", "val_fake_B", ".", "data", ",", "\n", "val_real_B", ".", "data", ",", "val_fake_A", ".", "data", ")", ",", "0", ")", "\n", "save_image", "(", "img_sample", ",", "'images/%s/%s_%s.png'", "%", "(", "opt", ".", "dataset_name", ",", "batches_done", ",", "label_name", ")", ",", "nrow", "=", "5", ",", "normalize", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.test.sample_images": [[163, 225], ["next", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "vgg16", "vgg16", "metanet", "metanet", "G.set_weights", "G", "G.set_weights", "G", "metanet.keys", "G.set_weights", "G", "G", "torch.cat", "torch.cat", "torch.cat", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "iter", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "utils.mean_std", "utils.mean_std"], "function", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std"], ["", "def", "sample_images", "(", "batches_done", ")", ":", "\n", "    ", "\"\"\"Saves a generated sample from the test set\"\"\"", "\n", "imgs", "=", "next", "(", "iter", "(", "val_dataloader", ")", ")", "\n", "val_real_A", "=", "Variable", "(", "imgs", "[", "'A'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_real_B", "=", "Variable", "(", "imgs", "[", "'B'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "label_AB", "=", "Variable", "(", "imgs", "[", "'label_AB'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "label_BA", "=", "Variable", "(", "imgs", "[", "'label_BA'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "r1", "=", "Variable", "(", "imgs", "[", "'reference1'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "r2", "=", "Variable", "(", "imgs", "[", "'reference2'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "label", "=", "imgs", "[", "'label_name'", "]", "\n", "\n", "val_real_A_features", "=", "vgg16", "(", "r1", ")", "\n", "val_real_B_features", "=", "vgg16", "(", "r2", ")", "\n", "\n", "val_weights_AB", "=", "metanet", "(", "mean_std", "(", "val_real_B_features", ")", ")", "\n", "val_weights_BA", "=", "metanet", "(", "mean_std", "(", "val_real_A_features", ")", ")", "\n", "\n", "G", ".", "set_weights", "(", "val_weights_AB", ",", "0", ")", "\n", "#G_BA.set_weights(val_weights_BA, 0)", "\n", "val_fake_B", "=", "G", "(", "val_real_A", ",", "label_AB", ")", "\n", "#val_reconv_A = G_BA(val_fake_B)", "\n", "G", ".", "set_weights", "(", "val_weights_BA", ",", "0", ")", "\n", "val_fake_A", "=", "G", "(", "val_real_B", ",", "label_BA", ")", "\n", "\n", "for", "key", "in", "val_weights_AB", ".", "keys", "(", ")", ":", "\n", "        ", "val_weights_BA", "[", "key", "]", "=", "(", "val_weights_AB", "[", "key", "]", "+", "val_weights_BA", "[", "key", "]", ")", "/", "2", "\n", "\n", "", "G", ".", "set_weights", "(", "val_weights_BA", ",", "0", ")", "\n", "#G_BA.set_weights(val_weights_BA, 0)", "\n", "\n", "val_fake_B_add", "=", "G", "(", "val_real_A", ",", "label_AB", ")", "\n", "#val_reconv_A = G_BA(val_fake_B)", "\n", "#G.set_weights(val_weights_BA, 0)", "\n", "val_fake_A_add", "=", "G", "(", "val_real_B", ",", "label_BA", ")", "\n", "# img_sample = torch.cat((val_real_A.data, val_fake_B.data,", "\n", "#                         val_real_B.data, val_fake_A.data), 0)", "\n", "# save_image(img_sample, 'images/%s/%s.png' % (opt.dataset_name, batches_done), nrow=5, normalize=True)", "\n", "# img_sample1 = torch.cat((val_real_A.data,", "\n", "#                         val_real_B.data,val_fake_B.data), 0)", "\n", "img_sample2", "=", "torch", ".", "cat", "(", "(", "val_real_A", ".", "data", ",", "\n", "val_real_B", ".", "data", ",", "val_fake_B", ".", "data", ")", ",", "0", ")", "\n", "\n", "#save_image(img_sample1, 'images/%s/test_result/%s_mobnet2photo.png' % (opt.dataset_name, batches_done), nrow=5, normalize=True)", "\n", "#save_image(img_sample2, 'images/%s/test_result/%s_photo2monet.png' % (opt.dataset_name, batches_done), nrow=5, normalize=True)", "\n", "# save_image(val_fake_B, 'images/%s/test_result/%s_photo2monet.png' % (opt.dataset_name, batches_done), nrow=5,", "\n", "#            normalize=True)", "\n", "save_image", "(", "r1", ",", "'images/test_result/%s_reference1_%d.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "r2", ",", "'images/test_result/%s_reference2_%d.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_real_B", ",", "'images/test_result/%s_photo_%d.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_real_A", ",", "'images/test_result/%s_painting_%d.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_fake_B", ",", "'images/test_result/%s_monet2photo_%s.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_fake_A", ",", "'images/test_result/%s_photo2monet_%s.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_fake_B_add", ",", "'images/test_result/%s_monet2photoadd_%s.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "save_image", "(", "val_fake_A_add", ",", "'images/test_result/%s_photo2monetadd_%s.png'", "%", "(", "batches_done", ",", "label", ")", ",", "nrow", "=", "5", ",", "\n", "normalize", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.ReplayBuffer.__init__": [[19, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_size", "=", "50", ")", ":", "\n", "        ", "assert", "(", "max_size", ">", "0", ")", ",", "'Empty buffer or trying to create a black hole. Be careful.'", "\n", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "labels", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.ReplayBuffer.push_and_pop": [[25, 46], ["torch.unsqueeze", "torch.autograd.Variable", "torch.autograd.Variable", "len", "utils.ReplayBuffer.data.append", "utils.ReplayBuffer.labels.append", "to_return.append", "to_return_label.append", "torch.cat", "torch.cat", "random.uniform", "random.randint", "to_return.append", "to_return_label.append", "to_return.append", "to_return_label.append", "utils.ReplayBuffer.data[].clone", "utils.ReplayBuffer.labels[].clone"], "methods", ["None"], ["", "def", "push_and_pop", "(", "self", ",", "data", ",", "label", ")", ":", "\n", "        ", "to_return", "=", "[", "]", "\n", "to_return_label", "=", "[", "]", "\n", "for", "element", "in", "data", ".", "data", ":", "\n", "            ", "element", "=", "torch", ".", "unsqueeze", "(", "element", ",", "0", ")", "\n", "if", "len", "(", "self", ".", "data", ")", "<", "self", ".", "max_size", ":", "\n", "                ", "self", ".", "data", ".", "append", "(", "element", ")", "\n", "self", ".", "labels", ".", "append", "(", "label", ")", "\n", "to_return", ".", "append", "(", "element", ")", "\n", "to_return_label", ".", "append", "(", "label", ")", "\n", "", "else", ":", "\n", "                ", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "                    ", "i", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "max_size", "-", "1", ")", "\n", "to_return", ".", "append", "(", "self", ".", "data", "[", "i", "]", ".", "clone", "(", ")", ")", "\n", "to_return_label", ".", "append", "(", "self", ".", "labels", "[", "i", "]", ".", "clone", "(", ")", ")", "\n", "self", ".", "data", "[", "i", "]", "=", "element", "\n", "self", ".", "labels", "[", "i", "]", "=", "label", "\n", "", "else", ":", "\n", "                    ", "to_return", ".", "append", "(", "element", ")", "\n", "to_return_label", ".", "append", "(", "label", ")", "\n", "", "", "", "return", "Variable", "(", "torch", ".", "cat", "(", "to_return", ")", ")", ",", "Variable", "(", "torch", ".", "cat", "(", "to_return_label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.LambdaLR.__init__": [[48, 53], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_epochs", ",", "offset", ",", "decay_start_epoch", ")", ":", "\n", "        ", "assert", "(", "(", "n_epochs", "-", "decay_start_epoch", ")", ">", "0", ")", ",", "\"Decay must start before the training session ends!\"", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "self", ".", "offset", "=", "offset", "\n", "self", ".", "decay_start_epoch", "=", "decay_start_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.LambdaLR.step": [[54, 56], ["max"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "return", "1.0", "-", "max", "(", "0", ",", "epoch", "+", "self", ".", "offset", "-", "self", ".", "decay_start_epoch", ")", "/", "(", "self", ".", "n_epochs", "-", "self", ".", "decay_start_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std": [[57, 68], ["torch.cat", "torch.cat.view", "torch.cat", "torch.cat.view().transpose().contiguous().view", "torch.cat.append", "torch.cat.mean", "torch.sqrt", "torch.cat.view().transpose().contiguous", "torch.cat.var", "torch.cat.view().transpose", "torch.cat.view"], "function", ["None"], ["", "", "def", "mean_std", "(", "features", ")", ":", "\n", "    ", "\"\"\"\u8f93\u5165 VGG16 \u8ba1\u7b97\u7684\u56db\u4e2a\u7279\u5f81\uff0c\u8f93\u51fa\u6bcf\u5f20\u7279\u5f81\u56fe\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u957f\u5ea6\u4e3a1920\"\"\"", "\n", "mean_std_features", "=", "[", "]", "\n", "for", "x", "in", "features", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "*", "x", ".", "shape", "[", ":", "2", "]", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ".", "mean", "(", "-", "1", ")", ",", "torch", ".", "sqrt", "(", "x", ".", "var", "(", "-", "1", ")", "+", "epsilon", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "n", "=", "x", ".", "shape", "[", "0", "]", "\n", "x2", "=", "x", ".", "view", "(", "n", ",", "2", ",", "-", "1", ")", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n", ",", "-", "1", ")", "# \u3010mean, ..., std, ...] to [mean, std, ...]", "\n", "mean_std_features", ".", "append", "(", "x2", ")", "\n", "", "mean_std_features", "=", "torch", ".", "cat", "(", "mean_std_features", ",", "dim", "=", "-", "1", ")", "\n", "return", "mean_std_features", "", "", ""]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.train_CrossDomain.ColorToByte": [[146, 156], ["torch.where", "torch.where", "torch.where", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["def", "ColorToByte", "(", "tensor", ",", "threshold", ")", ":", "\n", "# R = tensor[0][1]", "\n", "# G = tensor[0][1]", "\n", "# B = tensor[0][2]", "\n", "#", "\n", "#tensor[0][0] = 0.299 * R + 0.587 * G + 0.114 * B", "\n", "    ", "tensor", "[", "0", "]", "[", "1", "]", "=", "tensor", "[", "0", "]", "[", "0", "]", "\n", "tensor", "[", "0", "]", "[", "2", "]", "=", "tensor", "[", "0", "]", "[", "0", "]", "\n", "\n", "return", "torch", ".", "where", "(", "tensor", ">", "threshold", ",", "torch", ".", "ones", "(", "tensor", ".", "shape", ")", ".", "cuda", "(", ")", ",", "torch", ".", "zeros", "(", "tensor", ".", "shape", ")", ".", "cuda", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.train_CrossDomain.sample_images": [[157, 181], ["next", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "vgg16", "metanet", "metanet", "G.set_weights", "G", "G.set_weights", "G", "torch.cat", "torch.cat", "torch.cat", "torchvision.utils.save_image", "iter", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "imgs[].type", "utils.mean_std", "utils.mean_std"], "function", ["home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.models.TransformNet.set_weights", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std", "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.utils.mean_std"], ["", "def", "sample_images", "(", "batches_done", ")", ":", "\n", "    ", "\"\"\"Saves a generated sample from the test set\"\"\"", "\n", "imgs", "=", "next", "(", "iter", "(", "val_dataloader", ")", ")", "\n", "val_real_A", "=", "Variable", "(", "imgs", "[", "'A'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_real_B", "=", "Variable", "(", "imgs", "[", "'B'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_ref", "=", "Variable", "(", "imgs", "[", "'ref'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_label_AB", "=", "Variable", "(", "imgs", "[", "'label_AB'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "val_label_BA", "=", "Variable", "(", "imgs", "[", "'label_BA'", "]", ".", "type", "(", "Tensor", ")", ")", "\n", "label_name", "=", "imgs", "[", "'label_name'", "]", "\n", "\n", "# val_real_A_features = vgg16(val_real_A)", "\n", "# val_real_B_features = vgg16(val_real_B)", "\n", "val_ref_features", "=", "vgg16", "(", "val_ref", ")", "\n", "\n", "val_weights_AB", "=", "metanet", "(", "mean_std", "(", "val_ref_features", ")", ",", "val_label_AB", ")", "\n", "val_weights_BA", "=", "metanet", "(", "mean_std", "(", "val_ref_features", ")", ",", "val_label_BA", ")", "\n", "\n", "G", ".", "set_weights", "(", "val_weights_BA", ",", "0", ")", "\n", "val_fake_A", "=", "G", "(", "val_real_B", ")", "\n", "G", ".", "set_weights", "(", "val_weights_AB", ",", "0", ")", "\n", "val_fake_B", "=", "G", "(", "val_real_A", ")", "\n", "img_sample", "=", "torch", ".", "cat", "(", "(", "val_real_A", ".", "data", ",", "val_fake_B", ".", "data", ",", "\n", "val_real_B", ".", "data", ",", "val_fake_A", ".", "data", ",", "val_ref", ".", "data", ")", ",", "0", ")", "\n", "save_image", "(", "img_sample", ",", "'images/%s/%s_%s.png'", "%", "(", "opt", ".", "dataset_name", ",", "batches_done", ",", "label_name", ")", ",", "nrow", "=", "5", ",", "normalize", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__init__": [[14, 26], ["torchvision.Compose", "sorted", "sorted", "sorted", "sorted", "sorted", "sorted", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "transforms_", "=", "None", ",", "unaligned", "=", "False", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transforms_", ")", "\n", "self", ".", "unaligned", "=", "unaligned", "\n", "self", ".", "domains_num", "=", "3", "\n", "\n", "self", ".", "photo_files", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'monet2photo/%sB'", "%", "mode", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "monet_files", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'monet2photo/%sA'", "%", "mode", ")", "+", "'/*.*'", ")", ")", "\n", "#self.ukiyoe_files = sorted(glob.glob(os.path.join(root, 'ukiyoe2photo/%sA' % mode) + '/*.*'))", "\n", "self", ".", "sheos_files_A", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'real_sheos'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "sheos_files_B", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'edge_sheos'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "building_files_A", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'building_semantic_image'", ")", "+", "'/*.*'", ")", ")", "\n", "self", ".", "building_files_B", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'building_semantic_map'", ")", "+", "'/*.*'", ")", ")", "\n", "#self.bag_files_A = sorted(glob.glob(os.path.join(root, 'EdgesndHandbags/bags') + '/*.*'))", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__getitem__": [[29, 57], ["random.randint", "numpy.zeros", "numpy.zeros", "datasets.ImageDataset.transform", "datasets.ImageDataset.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.ImageDataset.transform", "datasets.ImageDataset.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.ImageDataset.transform", "datasets.ImageDataset.transform", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "random.randint", "len", "random.randint", "len", "len", "random.randint", "len", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "domains_num", ")", "\n", "\n", "if", "label", "==", "1", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "sheos_files_A", "[", "index", "%", "len", "(", "self", ".", "sheos_files_A", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "sheos_files_B", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sheos_files_B", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "label", "==", "2", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "building_files_A", "[", "index", "%", "len", "(", "self", ".", "building_files_A", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "building_files_B", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "building_files_B", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "", "elif", "label", "==", "3", ":", "\n", "            ", "item_A", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "monet_files", "[", "index", "%", "len", "(", "self", ".", "monet_files", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "\n", "item_B", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "photo_files", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "photo_files", ")", "-", "1", ")", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "#elif label == 4:", "\n", "#    item_A = self.transform(Image.open(self.ukiyoe_files[index % len(self.ukiyoe_files)]).convert(\"RGB\"))", "\n", "\n", "#    item_B = self.transform(Image.open(self.photo_files[random.randint(0, len(self.photo_files) - 1)]).convert(\"RGB\"))", "\n", "\n", "", "one_hot_label_AB", "=", "np", ".", "zeros", "(", "(", "self", ".", "domains_num", "+", "1", ",", "item_A", ".", "shape", "[", "1", "]", ",", "item_A", ".", "shape", "[", "2", "]", ")", ")", "\n", "one_hot_label_BA", "=", "np", ".", "zeros", "(", "(", "self", ".", "domains_num", "+", "1", ",", "item_A", ".", "shape", "[", "1", "]", ",", "item_A", ".", "shape", "[", "2", "]", ")", ")", "\n", "one_hot_label_AB", "[", "label", "-", "1", "]", "=", "1", "\n", "one_hot_label_BA", "[", "label", "-", "1", "]", "=", "1", "\n", "one_hot_label_AB", "[", "self", ".", "domains_num", "]", "=", "0", "\n", "one_hot_label_BA", "[", "self", ".", "domains_num", "]", "=", "1", "\n", "\n", "return", "{", "'A'", ":", "item_A", ",", "'B'", ":", "item_B", ",", "'label_AB'", ":", "one_hot_label_AB", ",", "'label_BA'", ":", "one_hot_label_BA", ",", "'label_name'", ":", "label", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ForawardStar_EDIT.None.datasets.ImageDataset.__len__": [[58, 60], ["max", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "max", "(", "len", "(", "self", ".", "sheos_files_A", ")", ",", "len", "(", "self", ".", "sheos_files_B", ")", ")", "\n", "", "", ""]]}