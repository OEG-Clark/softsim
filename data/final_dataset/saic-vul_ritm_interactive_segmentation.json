{"home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.demo.main": [[11, 23], ["demo.parse_args", "isegm.inference.utils.find_checkpoint", "isegm.inference.utils.load_is_model", "tkinter.Tk", "tk.Tk.minsize", "interactive_demo.app.InteractiveDemoApp", "tk.Tk.deiconify", "interactive_demo.app.InteractiveDemoApp.mainloop"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.find_checkpoint", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_is_model"], ["def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "parse_args", "(", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "checkpoint_path", "=", "utils", ".", "find_checkpoint", "(", "cfg", ".", "INTERACTIVE_MODELS_PATH", ",", "args", ".", "checkpoint", ")", "\n", "model", "=", "utils", ".", "load_is_model", "(", "checkpoint_path", ",", "args", ".", "device", ",", "cpu_dist_maps", "=", "True", ")", "\n", "\n", "root", "=", "tk", ".", "Tk", "(", ")", "\n", "root", ".", "minsize", "(", "960", ",", "480", ")", "\n", "app", "=", "InteractiveDemoApp", "(", "root", ",", "args", ",", "model", ")", "\n", "root", ".", "deiconify", "(", ")", "\n", "app", ".", "mainloop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.demo.parse_args": [[25, 54], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "isegm.utils.exp.load_config_file", "torch.device", "torch.device"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--checkpoint'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "\n", "help", "=", "'The path to the checkpoint. '", "\n", "'This can be a relative path (relative to cfg.INTERACTIVE_MODELS_PATH) '", "\n", "'or an absolute path. The file extension can be omitted.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'Id of GPU to use.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cpu'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'Use only CPU for inference.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--limit-longest-size'", ",", "type", "=", "int", ",", "default", "=", "800", ",", "\n", "help", "=", "'If the largest side of an image exceeds this value, '", "\n", "'it is resized so that its largest side is equal to this value.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "type", "=", "str", ",", "default", "=", "\"config.yml\"", ",", "\n", "help", "=", "'The path to the config file.'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "cpu", ":", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "f'cuda:{args.gpu}'", ")", "\n", "", "cfg", "=", "exp", ".", "load_config_file", "(", "args", ".", "cfg", ",", "return_edict", "=", "True", ")", "\n", "\n", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.train.main": [[9, 25], ["train.parse_args", "getattr", "isegm.utils.exp.init_experiment", "torch.multiprocessing.set_sharing_strategy", "load_module.main", "train.load_module", "train.load_module"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.init_experiment", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.main", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.train.load_module", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.train.load_module"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "if", "args", ".", "temp_model_path", ":", "\n", "        ", "model_script", "=", "load_module", "(", "args", ".", "temp_model_path", ")", "\n", "", "else", ":", "\n", "        ", "model_script", "=", "load_module", "(", "args", ".", "model_path", ")", "\n", "\n", "", "model_base_name", "=", "getattr", "(", "model_script", ",", "'MODEL_NAME'", ",", "None", ")", "\n", "\n", "args", ".", "distributed", "=", "'WORLD_SIZE'", "in", "os", ".", "environ", "\n", "cfg", "=", "init_experiment", "(", "args", ",", "model_base_name", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "multiprocessing", ".", "set_sharing_strategy", "(", "'file_system'", ")", "\n", "\n", "model_script", ".", "main", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.train.parse_args": [[27, 71], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "\n", "help", "=", "'Path to the model script.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--exp-name'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'Here you can specify the name of the experiment. '", "\n", "'It will be added as a suffix to the experiment folder.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'Dataloader threads.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "\n", "help", "=", "'You can override model batch size by specify positive number.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--ngpus'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Number of GPUs. '", "\n", "'If you only specify \"--gpus\" argument, the ngpus value will be calculated automatically. '", "\n", "'You should use either this argument or \"--gpus\".'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpus'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "required", "=", "False", ",", "\n", "help", "=", "'Ids of used GPUs. You should use either this argument or \"--ngpus\".'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--resume-exp'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "'The prefix of the name of the experiment to be continued. '", "\n", "'If you use this field, you must specify the \"--resume-prefix\" argument.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--resume-prefix'", ",", "type", "=", "str", ",", "default", "=", "'latest'", ",", "\n", "help", "=", "'The prefix of the name of the checkpoint to be loaded.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'The number of the starting epoch from which training will continue. '", "\n", "'(it is important for correct logging and learning rate)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--weights'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "'Model weights will be loaded from the specified path if you use this argument.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--temp-model-path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'Do not use this argument (for internal purposes).'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--local_rank\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.None.train.load_module": [[73, 79], ["importlib.util.spec_from_file_location", "importlib.util.module_from_spec", "importlib.util.spec_from_file_location.loader.exec_module"], "function", ["None"], ["", "def", "load_module", "(", "script_path", ")", ":", "\n", "    ", "spec", "=", "importlib", ".", "util", ".", "spec_from_file_location", "(", "\"model_script\"", ",", "script_path", ")", "\n", "model_script", "=", "importlib", ".", "util", ".", "module_from_spec", "(", "spec", ")", "\n", "spec", ".", "loader", ".", "exec_module", "(", "model_script", ")", "\n", "\n", "return", "model_script", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.BoundedNumericalEntry.__init__": [[6, 29], ["tkinter.StringVar", "wrappers.BoundedNumericalEntry.var.get", "master.register", "tkinter.Entry.__init__", "tkinter.DoubleVar", "wrappers.BoundedNumericalEntry.var.get", "tkinter.IntVar", "tkinter.StringVar"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "master", "=", "None", ",", "min_value", "=", "None", ",", "max_value", "=", "None", ",", "variable", "=", "None", ",", "\n", "vartype", "=", "float", ",", "width", "=", "7", ",", "allow_inf", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "variable", "is", "None", ":", "\n", "            ", "if", "vartype", "==", "float", ":", "\n", "                ", "self", ".", "var", "=", "tk", ".", "DoubleVar", "(", ")", "\n", "", "elif", "vartype", "==", "int", ":", "\n", "                ", "self", ".", "var", "=", "tk", ".", "IntVar", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "var", "=", "tk", ".", "StringVar", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "var", "=", "variable", "\n", "\n", "", "self", ".", "fake_var", "=", "tk", ".", "StringVar", "(", "value", "=", "self", ".", "var", ".", "get", "(", ")", ")", "\n", "self", ".", "vartype", "=", "vartype", "\n", "self", ".", "old_value", "=", "self", ".", "var", ".", "get", "(", ")", "\n", "self", ".", "allow_inf", "=", "allow_inf", "\n", "\n", "self", ".", "min_value", ",", "self", ".", "max_value", "=", "min_value", ",", "max_value", "\n", "self", ".", "get", ",", "self", ".", "set", "=", "self", ".", "fake_var", ".", "get", ",", "self", ".", "fake_var", ".", "set", "\n", "\n", "self", ".", "validate_command", "=", "master", ".", "register", "(", "self", ".", "_check_bounds", ")", "\n", "tk", ".", "Entry", ".", "__init__", "(", "self", ",", "master", ",", "textvariable", "=", "self", ".", "fake_var", ",", "validate", "=", "\"focus\"", ",", "width", "=", "width", ",", "\n", "vcmd", "=", "(", "self", ".", "validate_command", ",", "'%P'", ",", "'%d'", ")", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.BoundedNumericalEntry._check_bounds": [[30, 57], ["wrappers.BoundedNumericalEntry.delete", "wrappers.BoundedNumericalEntry.insert", "tkinter.messagebox.showwarning", "wrappers.BoundedNumericalEntry.fake_var.set", "str", "str", "str", "wrappers.BoundedNumericalEntry.vartype", "wrappers.BoundedNumericalEntry.vartype", "wrappers.BoundedNumericalEntry.delete", "wrappers.BoundedNumericalEntry.insert", "wrappers.BoundedNumericalEntry.var.set", "wrappers.BoundedNumericalEntry.fake_var.get", "str"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["", "def", "_check_bounds", "(", "self", ",", "instr", ",", "action_type", ")", ":", "\n", "        ", "if", "self", ".", "allow_inf", "and", "instr", "==", "'INF'", ":", "\n", "            ", "self", ".", "fake_var", ".", "set", "(", "'INF'", ")", "\n", "return", "True", "\n", "\n", "", "if", "action_type", "==", "'-1'", ":", "\n", "            ", "try", ":", "\n", "                ", "new_value", "=", "self", ".", "vartype", "(", "instr", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "if", "(", "self", ".", "min_value", "is", "None", "or", "new_value", ">=", "self", ".", "min_value", ")", "and", "(", "self", ".", "max_value", "is", "None", "or", "new_value", "<=", "self", ".", "max_value", ")", ":", "\n", "                    ", "if", "new_value", "!=", "self", ".", "old_value", ":", "\n", "                        ", "self", ".", "old_value", "=", "self", ".", "vartype", "(", "self", ".", "fake_var", ".", "get", "(", ")", ")", "\n", "self", ".", "delete", "(", "0", ",", "tk", ".", "END", ")", "\n", "self", ".", "insert", "(", "0", ",", "str", "(", "self", ".", "old_value", ")", ")", "\n", "self", ".", "var", ".", "set", "(", "self", ".", "old_value", ")", "\n", "", "return", "True", "\n", "", "", "", "self", ".", "delete", "(", "0", ",", "tk", ".", "END", ")", "\n", "self", ".", "insert", "(", "0", ",", "str", "(", "self", ".", "old_value", ")", ")", "\n", "mn", "=", "'-inf'", "if", "self", ".", "min_value", "is", "None", "else", "str", "(", "self", ".", "min_value", ")", "\n", "mx", "=", "'+inf'", "if", "self", ".", "max_value", "is", "None", "else", "str", "(", "self", ".", "max_value", ")", "\n", "messagebox", ".", "showwarning", "(", "\"Incorrect value in input field\"", ",", "f\"Value for {self._name} should be in \"", "\n", "f\"[{mn}; {mx}] and of type {self.vartype.__name__}\"", ")", "\n", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusHorizontalScale.__init__": [[60, 66], ["tkinter.Scale.__init__", "wrappers.FocusHorizontalScale.bind", "wrappers.FocusHorizontalScale.focus_set"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "0", ",", "sliderrelief", "=", "tk", ".", "GROOVE", ",", "resolution", "=", "0.01", ",", "\n", "sliderlength", "=", "20", ",", "length", "=", "200", ",", "**", "kwargs", ")", ":", "\n", "        ", "tk", ".", "Scale", ".", "__init__", "(", "self", ",", "*", "args", ",", "orient", "=", "tk", ".", "HORIZONTAL", ",", "highlightthickness", "=", "highlightthickness", ",", "\n", "sliderrelief", "=", "sliderrelief", ",", "resolution", "=", "resolution", ",", "\n", "sliderlength", "=", "sliderlength", ",", "length", "=", "length", ",", "**", "kwargs", ")", "\n", "self", ".", "bind", "(", "\"<1>\"", ",", "lambda", "event", ":", "self", ".", "focus_set", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusCheckButton.__init__": [[69, 72], ["tkinter.Checkbutton.__init__", "wrappers.FocusCheckButton.bind", "wrappers.FocusCheckButton.focus_set"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "tk", ".", "Checkbutton", ".", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "highlightthickness", ",", "**", "kwargs", ")", "\n", "self", ".", "bind", "(", "\"<1>\"", ",", "lambda", "event", ":", "self", ".", "focus_set", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusButton.__init__": [[75, 78], ["tkinter.Button.__init__", "wrappers.FocusButton.bind", "wrappers.FocusButton.focus_set"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "tk", ".", "Button", ".", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "highlightthickness", ",", "**", "kwargs", ")", "\n", "self", ".", "bind", "(", "\"<1>\"", ",", "lambda", "event", ":", "self", ".", "focus_set", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusLabelFrame.__init__": [[81, 85], ["tkinter.LabelFrame.__init__", "wrappers.FocusLabelFrame.bind", "wrappers.FocusLabelFrame.focus_set"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "0", ",", "relief", "=", "tk", ".", "RIDGE", ",", "borderwidth", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "tk", ".", "LabelFrame", ".", "__init__", "(", "self", ",", "*", "args", ",", "highlightthickness", "=", "highlightthickness", ",", "relief", "=", "relief", ",", "\n", "borderwidth", "=", "borderwidth", ",", "**", "kwargs", ")", "\n", "self", ".", "bind", "(", "\"<1>\"", ",", "lambda", "event", ":", "self", ".", "focus_set", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusLabelFrame.set_frame_state": [[86, 93], ["wrappers.FocusLabelFrame.set_frame_state.set_widget_state"], "methods", ["None"], ["", "def", "set_frame_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "def", "set_widget_state", "(", "widget", ",", "state", ")", ":", "\n", "            ", "if", "widget", ".", "winfo_children", "is", "not", "None", ":", "\n", "                ", "for", "w", "in", "widget", ".", "winfo_children", "(", ")", ":", "\n", "                    ", "w", ".", "configure", "(", "state", "=", "state", ")", "\n", "\n", "", "", "", "set_widget_state", "(", "self", ",", "state", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.__init__": [[11, 27], ["isegm.inference.clicker.Clicker", "controller.InteractiveController.reset_predictor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_predictor"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "device", ",", "predictor_params", ",", "update_image_callback", ",", "prob_thresh", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "net", "=", "net", "\n", "self", ".", "prob_thresh", "=", "prob_thresh", "\n", "self", ".", "clicker", "=", "clicker", ".", "Clicker", "(", ")", "\n", "self", ".", "states", "=", "[", "]", "\n", "self", ".", "probs_history", "=", "[", "]", "\n", "self", ".", "object_count", "=", "0", "\n", "self", ".", "_result_mask", "=", "None", "\n", "self", ".", "_init_mask", "=", "None", "\n", "\n", "self", ".", "image", "=", "None", "\n", "self", ".", "predictor", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "update_image_callback", "=", "update_image_callback", "\n", "self", ".", "predictor_params", "=", "predictor_params", "\n", "self", ".", "reset_predictor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.set_image": [[28, 34], ["numpy.zeros", "controller.InteractiveController.reset_last_object", "controller.InteractiveController.update_image_callback"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_last_object"], ["", "def", "set_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "self", ".", "image", "=", "image", "\n", "self", ".", "_result_mask", "=", "np", ".", "zeros", "(", "image", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "uint16", ")", "\n", "self", ".", "object_count", "=", "0", "\n", "self", ".", "reset_last_object", "(", "update_image", "=", "False", ")", "\n", "self", ".", "update_image_callback", "(", "reset_canvas", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.set_mask": [[35, 47], ["mask.astype", "controller.InteractiveController.probs_history.append", "torch.tensor().unsqueeze().unsqueeze", "tkinter.messagebox.showwarning", "len", "controller.InteractiveController.reset_last_object", "numpy.zeros_like", "torch.tensor().unsqueeze", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_last_object"], ["", "def", "set_mask", "(", "self", ",", "mask", ")", ":", "\n", "        ", "if", "self", ".", "image", ".", "shape", "[", ":", "2", "]", "!=", "mask", ".", "shape", "[", ":", "2", "]", ":", "\n", "            ", "messagebox", ".", "showwarning", "(", "\"Warning\"", ",", "\"A segmentation mask must have the same sizes as the current image!\"", ")", "\n", "return", "\n", "\n", "", "if", "len", "(", "self", ".", "probs_history", ")", ">", "0", ":", "\n", "            ", "self", ".", "reset_last_object", "(", ")", "\n", "\n", "", "self", ".", "_init_mask", "=", "mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "probs_history", ".", "append", "(", "(", "np", ".", "zeros_like", "(", "self", ".", "_init_mask", ")", ",", "self", ".", "_init_mask", ")", ")", "\n", "self", ".", "_init_mask", "=", "torch", ".", "tensor", "(", "self", ".", "_init_mask", ",", "device", "=", "self", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "self", ".", "clicker", ".", "click_indx_offset", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.add_click": [[48, 68], ["controller.InteractiveController.states.append", "isegm.inference.clicker.Click", "controller.InteractiveController.clicker.add_click", "controller.InteractiveController.predictor.get_prediction", "torch.cuda.empty_cache", "controller.InteractiveController.update_image_callback", "controller.InteractiveController.predictor.get_prediction", "controller.InteractiveController.probs_history.append", "controller.InteractiveController.probs_history.append", "controller.InteractiveController.clicker.get_state", "controller.InteractiveController.predictor.get_states", "len", "numpy.zeros_like"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_prediction", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_prediction", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.get_state", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.get_states"], ["", "def", "add_click", "(", "self", ",", "x", ",", "y", ",", "is_positive", ")", ":", "\n", "        ", "self", ".", "states", ".", "append", "(", "{", "\n", "'clicker'", ":", "self", ".", "clicker", ".", "get_state", "(", ")", ",", "\n", "'predictor'", ":", "self", ".", "predictor", ".", "get_states", "(", ")", "\n", "}", ")", "\n", "\n", "click", "=", "clicker", ".", "Click", "(", "is_positive", "=", "is_positive", ",", "coords", "=", "(", "y", ",", "x", ")", ")", "\n", "self", ".", "clicker", ".", "add_click", "(", "click", ")", "\n", "pred", "=", "self", ".", "predictor", ".", "get_prediction", "(", "self", ".", "clicker", ",", "prev_mask", "=", "self", ".", "_init_mask", ")", "\n", "if", "self", ".", "_init_mask", "is", "not", "None", "and", "len", "(", "self", ".", "clicker", ")", "==", "1", ":", "\n", "            ", "pred", "=", "self", ".", "predictor", ".", "get_prediction", "(", "self", ".", "clicker", ",", "prev_mask", "=", "self", ".", "_init_mask", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "self", ".", "probs_history", ".", "append", "(", "(", "self", ".", "probs_history", "[", "-", "1", "]", "[", "0", "]", ",", "pred", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "probs_history", ".", "append", "(", "(", "np", ".", "zeros_like", "(", "pred", ")", ",", "pred", ")", ")", "\n", "\n", "", "self", ".", "update_image_callback", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.undo_click": [[69, 80], ["controller.InteractiveController.states.pop", "controller.InteractiveController.clicker.set_state", "controller.InteractiveController.predictor.set_states", "controller.InteractiveController.probs_history.pop", "controller.InteractiveController.update_image_callback", "controller.InteractiveController.reset_init_mask"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.set_state", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_states", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_init_mask"], ["", "def", "undo_click", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "states", ":", "\n", "            ", "return", "\n", "\n", "", "prev_state", "=", "self", ".", "states", ".", "pop", "(", ")", "\n", "self", ".", "clicker", ".", "set_state", "(", "prev_state", "[", "'clicker'", "]", ")", "\n", "self", ".", "predictor", ".", "set_states", "(", "prev_state", "[", "'predictor'", "]", ")", "\n", "self", ".", "probs_history", ".", "pop", "(", ")", "\n", "if", "not", "self", ".", "probs_history", ":", "\n", "            ", "self", ".", "reset_init_mask", "(", ")", "\n", "", "self", ".", "update_image_callback", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.partially_finish_object": [[81, 93], ["controller.InteractiveController.probs_history.append", "controller.InteractiveController.states.append", "controller.InteractiveController.clicker.reset_clicks", "controller.InteractiveController.reset_predictor", "controller.InteractiveController.reset_init_mask", "controller.InteractiveController.update_image_callback", "numpy.zeros_like"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_predictor", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_init_mask"], ["", "def", "partially_finish_object", "(", "self", ")", ":", "\n", "        ", "object_prob", "=", "self", ".", "current_object_prob", "\n", "if", "object_prob", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "probs_history", ".", "append", "(", "(", "object_prob", ",", "np", ".", "zeros_like", "(", "object_prob", ")", ")", ")", "\n", "self", ".", "states", ".", "append", "(", "self", ".", "states", "[", "-", "1", "]", ")", "\n", "\n", "self", ".", "clicker", ".", "reset_clicks", "(", ")", "\n", "self", ".", "reset_predictor", "(", ")", "\n", "self", ".", "reset_init_mask", "(", ")", "\n", "self", ".", "update_image_callback", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.finish_object": [[94, 101], ["controller.InteractiveController.reset_last_object"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_last_object"], ["", "def", "finish_object", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current_object_prob", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "_result_mask", "=", "self", ".", "result_mask", "\n", "self", ".", "object_count", "+=", "1", "\n", "self", ".", "reset_last_object", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_last_object": [[102, 110], ["controller.InteractiveController.clicker.reset_clicks", "controller.InteractiveController.reset_predictor", "controller.InteractiveController.reset_init_mask", "controller.InteractiveController.update_image_callback"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_predictor", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_init_mask"], ["", "def", "reset_last_object", "(", "self", ",", "update_image", "=", "True", ")", ":", "\n", "        ", "self", ".", "states", "=", "[", "]", "\n", "self", ".", "probs_history", "=", "[", "]", "\n", "self", ".", "clicker", ".", "reset_clicks", "(", ")", "\n", "self", ".", "reset_predictor", "(", ")", "\n", "self", ".", "reset_init_mask", "(", ")", "\n", "if", "update_image", ":", "\n", "            ", "self", ".", "update_image_callback", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_predictor": [[111, 118], ["isegm.inference.predictors.get_predictor", "controller.InteractiveController.predictor.set_input_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.__init__.get_predictor", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_input_image"], ["", "", "def", "reset_predictor", "(", "self", ",", "predictor_params", "=", "None", ")", ":", "\n", "        ", "if", "predictor_params", "is", "not", "None", ":", "\n", "            ", "self", ".", "predictor_params", "=", "predictor_params", "\n", "", "self", ".", "predictor", "=", "get_predictor", "(", "self", ".", "net", ",", "device", "=", "self", ".", "device", ",", "\n", "**", "self", ".", "predictor_params", ")", "\n", "if", "self", ".", "image", "is", "not", "None", ":", "\n", "            ", "self", ".", "predictor", ".", "set_input_image", "(", "self", ".", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_init_mask": [[119, 122], ["None"], "methods", ["None"], ["", "", "def", "reset_init_mask", "(", "self", ")", ":", "\n", "        ", "self", ".", "_init_mask", "=", "None", "\n", "self", ".", "clicker", ".", "click_indx_offset", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.current_object_prob": [[123, 130], ["numpy.maximum"], "methods", ["None"], ["", "@", "property", "\n", "def", "current_object_prob", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "probs_history", ":", "\n", "            ", "current_prob_total", ",", "current_prob_additive", "=", "self", ".", "probs_history", "[", "-", "1", "]", "\n", "return", "np", ".", "maximum", "(", "current_prob_total", ",", "current_prob_additive", ")", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.is_incomplete_mask": [[131, 134], ["len"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "is_incomplete_mask", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "probs_history", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.result_mask": [[135, 141], ["controller.InteractiveController._result_mask.copy"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "@", "property", "\n", "def", "result_mask", "(", "self", ")", ":", "\n", "        ", "result_mask", "=", "self", ".", "_result_mask", ".", "copy", "(", ")", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "result_mask", "[", "self", ".", "current_object_prob", ">", "self", ".", "prob_thresh", "]", "=", "self", ".", "object_count", "+", "1", "\n", "", "return", "result_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.get_visualization": [[142, 155], ["isegm.utils.vis.draw_with_blend_and_clicks", "isegm.utils.vis.draw_with_blend_and_clicks", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_with_blend_and_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_with_blend_and_clicks"], ["", "def", "get_visualization", "(", "self", ",", "alpha_blend", ",", "click_radius", ")", ":", "\n", "        ", "if", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "None", "\n", "\n", "", "results_mask_for_vis", "=", "self", ".", "result_mask", "\n", "vis", "=", "draw_with_blend_and_clicks", "(", "self", ".", "image", ",", "mask", "=", "results_mask_for_vis", ",", "alpha", "=", "alpha_blend", ",", "\n", "clicks_list", "=", "self", ".", "clicker", ".", "clicks_list", ",", "radius", "=", "click_radius", ")", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "total_mask", "=", "self", ".", "probs_history", "[", "-", "1", "]", "[", "0", "]", ">", "self", ".", "prob_thresh", "\n", "results_mask_for_vis", "[", "np", ".", "logical_not", "(", "total_mask", ")", "]", "=", "0", "\n", "vis", "=", "draw_with_blend_and_clicks", "(", "vis", ",", "mask", "=", "results_mask_for_vis", ",", "alpha", "=", "alpha_blend", ")", "\n", "\n", "", "return", "vis", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set": [[33, 39], ["canvas.AutoScrollbar.grid_remove", "canvas.AutoScrollbar.grid", "tkinter.ttk.Scrollbar.set", "float", "float"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["def", "set", "(", "self", ",", "lo", ",", "hi", ")", ":", "\n", "        ", "if", "float", "(", "lo", ")", "<=", "0.0", "and", "float", "(", "hi", ")", ">=", "1.0", ":", "\n", "            ", "self", ".", "grid_remove", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "grid", "(", ")", "\n", "ttk", ".", "Scrollbar", ".", "set", "(", "self", ",", "lo", ",", "hi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack": [[40, 43], ["canvas.handle_exception", "tkinter.TclError"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.handle_exception"], ["", "", "@", "handle_exception", "(", "1", ")", "\n", "def", "pack", "(", "self", ",", "**", "kw", ")", ":", "\n", "        ", "raise", "tk", ".", "TclError", "(", "'Cannot use pack with the widget '", "+", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.place": [[44, 47], ["canvas.handle_exception", "tkinter.TclError"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.handle_exception"], ["", "@", "handle_exception", "(", "1", ")", "\n", "def", "place", "(", "self", ",", "**", "kw", ")", ":", "\n", "        ", "raise", "tk", ".", "TclError", "(", "'Cannot use place with the widget '", "+", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__init__": [[52, 88], ["canvas.AutoScrollbar", "canvas.AutoScrollbar", "canvas.CanvasImage.hbar.grid", "canvas.CanvasImage.vbar.grid", "canvas.CanvasImage.canvas.configure", "canvas.CanvasImage.hbar.configure", "canvas.CanvasImage.vbar.configure", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.canvas.bind", "canvas.CanvasImage.__size_changed", "canvas.CanvasImage.canvas.after_idle"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__size_changed"], ["def", "__init__", "(", "self", ",", "canvas_frame", ",", "canvas", ")", ":", "\n", "        ", "\"\"\" Initialize the ImageFrame \"\"\"", "\n", "self", ".", "current_scale", "=", "1.0", "# scale for the canvas image zoom, public for outer classes", "\n", "self", ".", "__delta", "=", "1.2", "# zoom magnitude", "\n", "self", ".", "__previous_state", "=", "0", "# previous state of the keyboard", "\n", "# Create ImageFrame in placeholder widget", "\n", "self", ".", "__imframe", "=", "canvas_frame", "\n", "# Vertical and horizontal scrollbars for canvas", "\n", "self", ".", "hbar", "=", "AutoScrollbar", "(", "canvas_frame", ",", "orient", "=", "'horizontal'", ")", "\n", "self", ".", "vbar", "=", "AutoScrollbar", "(", "canvas_frame", ",", "orient", "=", "'vertical'", ")", "\n", "self", ".", "hbar", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "0", ",", "sticky", "=", "'we'", ")", "\n", "self", ".", "vbar", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "1", ",", "sticky", "=", "'ns'", ")", "\n", "# Add scroll bars to canvas", "\n", "self", ".", "canvas", "=", "canvas", "\n", "self", ".", "canvas", ".", "configure", "(", "xscrollcommand", "=", "self", ".", "hbar", ".", "set", ",", "yscrollcommand", "=", "self", ".", "vbar", ".", "set", ")", "\n", "self", ".", "hbar", ".", "configure", "(", "command", "=", "self", ".", "__scroll_x", ")", "# bind scrollbars to the canvas", "\n", "self", ".", "vbar", ".", "configure", "(", "command", "=", "self", ".", "__scroll_y", ")", "\n", "# Bind events to the Canvas", "\n", "self", ".", "canvas", ".", "bind", "(", "'<Configure>'", ",", "lambda", "event", ":", "self", ".", "__size_changed", "(", ")", ")", "# canvas is resized", "\n", "self", ".", "canvas", ".", "bind", "(", "'<Button-1>'", ",", "self", ".", "__left_mouse_button", ")", "# remember canvas position", "\n", "self", ".", "canvas", ".", "bind", "(", "'<ButtonPress-3>'", ",", "self", ".", "__right_mouse_button_pressed", ")", "# remember canvas position", "\n", "self", ".", "canvas", ".", "bind", "(", "'<ButtonPress-2>'", ",", "self", ".", "__right_mouse_button_pressed", ")", "# remember canvas position (MacOS)", "\n", "self", ".", "canvas", ".", "bind", "(", "'<ButtonRelease-3>'", ",", "self", ".", "__right_mouse_button_released", ")", "# remember canvas position", "\n", "self", ".", "canvas", ".", "bind", "(", "'<ButtonRelease-2>'", ",", "self", ".", "__right_mouse_button_released", ")", "# remember canvas position (MacOS)", "\n", "self", ".", "canvas", ".", "bind", "(", "'<B3-Motion>'", ",", "self", ".", "__right_mouse_button_motion", ")", "# move canvas to the new position", "\n", "self", ".", "canvas", ".", "bind", "(", "'<B2-Motion>'", ",", "self", ".", "__right_mouse_button_motion", ")", "# move canvas to the new position", "\n", "self", ".", "canvas", ".", "bind", "(", "'<MouseWheel>'", ",", "self", ".", "__wheel", ")", "# zoom for Windows and MacOS, but not Linux", "\n", "self", ".", "canvas", ".", "bind", "(", "'<Button-5>'", ",", "self", ".", "__wheel", ")", "# zoom for Linux, wheel scroll down", "\n", "self", ".", "canvas", ".", "bind", "(", "'<Button-4>'", ",", "self", ".", "__wheel", ")", "# zoom for Linux, wheel scroll up", "\n", "\n", "# Handle keystrokes in idle mode, because program slows down on a weak computers,", "\n", "# when too many key stroke events in the same time", "\n", "self", ".", "canvas", ".", "bind", "(", "'<Key>'", ",", "lambda", "event", ":", "self", ".", "canvas", ".", "after_idle", "(", "self", ".", "__keystroke", ",", "event", ")", ")", "\n", "self", ".", "container", "=", "None", "\n", "\n", "self", ".", "_click_callback", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.register_click_callback": [[89, 91], ["None"], "methods", ["None"], ["", "def", "register_click_callback", "(", "self", ",", "click_callback", ")", ":", "\n", "        ", "self", ".", "_click_callback", "=", "click_callback", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.reload_image": [[92, 110], ["image.copy", "image.copy", "canvas.CanvasImage.__show_image", "canvas.CanvasImage.canvas.focus_set", "min", "min", "canvas.CanvasImage.canvas.create_rectangle", "canvas.CanvasImage._reset_canvas_offset", "canvas.CanvasImage.canvas.delete", "canvas.CanvasImage.canvas.winfo_width", "canvas.CanvasImage.canvas.winfo_height"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._reset_canvas_offset"], ["", "def", "reload_image", "(", "self", ",", "image", ",", "reset_canvas", "=", "True", ")", ":", "\n", "        ", "self", ".", "__original_image", "=", "image", ".", "copy", "(", ")", "\n", "self", ".", "__current_image", "=", "image", ".", "copy", "(", ")", "\n", "\n", "if", "reset_canvas", ":", "\n", "            ", "self", ".", "imwidth", ",", "self", ".", "imheight", "=", "self", ".", "__original_image", ".", "size", "\n", "self", ".", "__min_side", "=", "min", "(", "self", ".", "imwidth", ",", "self", ".", "imheight", ")", "# get the smaller image side", "\n", "\n", "scale", "=", "min", "(", "self", ".", "canvas", ".", "winfo_width", "(", ")", "/", "self", ".", "imwidth", ",", "self", ".", "canvas", ".", "winfo_height", "(", ")", "/", "self", ".", "imheight", ")", "\n", "if", "self", ".", "container", ":", "\n", "                ", "self", ".", "canvas", ".", "delete", "(", "self", ".", "container", ")", "\n", "\n", "", "self", ".", "container", "=", "self", ".", "canvas", ".", "create_rectangle", "(", "(", "0", ",", "0", ",", "scale", "*", "self", ".", "imwidth", ",", "scale", "*", "self", ".", "imheight", ")", ",", "width", "=", "0", ")", "\n", "self", ".", "current_scale", "=", "scale", "\n", "self", ".", "_reset_canvas_offset", "(", ")", "\n", "\n", "", "self", ".", "__show_image", "(", ")", "# show image on the canvas", "\n", "self", ".", "canvas", ".", "focus_set", "(", ")", "# set focus on the canvas", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid": [[111, 117], ["canvas.CanvasImage.__imframe.grid", "canvas.CanvasImage.__imframe.grid", "canvas.CanvasImage.__imframe.rowconfigure", "canvas.CanvasImage.__imframe.columnconfigure"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid"], ["", "def", "grid", "(", "self", ",", "**", "kw", ")", ":", "\n", "        ", "\"\"\" Put CanvasImage widget on the parent widget \"\"\"", "\n", "self", ".", "__imframe", ".", "grid", "(", "**", "kw", ")", "# place CanvasImage widget on the grid", "\n", "self", ".", "__imframe", ".", "grid", "(", "sticky", "=", "'nswe'", ")", "# make frame container sticky", "\n", "self", ".", "__imframe", ".", "rowconfigure", "(", "0", ",", "weight", "=", "1", ")", "# make canvas expandable", "\n", "self", ".", "__imframe", ".", "columnconfigure", "(", "0", ",", "weight", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image": [[118, 174], ["canvas.CanvasImage.canvas.coords", "tuple", "canvas.CanvasImage.canvas.configure", "max", "max", "canvas.CanvasImage.canvas.canvasx", "canvas.CanvasImage.canvas.canvasy", "canvas.CanvasImage.canvas.canvasx", "canvas.CanvasImage.canvas.canvasy", "map", "min", "min", "max", "max", "min", "min", "min", "min", "canvas.CanvasImage.__original_image.crop", "int", "int", "__current_image.resize.resize.resize", "min", "min", "__current_image.resize.resize.crop", "PIL.ImageTk.PhotoImage", "canvas.CanvasImage.canvas.create_image", "canvas.CanvasImage.canvas.lower", "canvas.CanvasImage.canvas.winfo_width", "canvas.CanvasImage.canvas.winfo_height", "tuple", "int", "int", "max", "max", "math.ceil", "math.ceil", "round", "round", "max", "max", "map", "math.floor", "math.floor", "canvas.CanvasImage.canvas.winfo_width", "canvas.CanvasImage.canvas.winfo_height"], "methods", ["None"], ["", "def", "__show_image", "(", "self", ")", ":", "\n", "        ", "box_image", "=", "self", ".", "canvas", ".", "coords", "(", "self", ".", "container", ")", "# get image area", "\n", "box_canvas", "=", "(", "self", ".", "canvas", ".", "canvasx", "(", "0", ")", ",", "# get visible area of the canvas", "\n", "self", ".", "canvas", ".", "canvasy", "(", "0", ")", ",", "\n", "self", ".", "canvas", ".", "canvasx", "(", "self", ".", "canvas", ".", "winfo_width", "(", ")", ")", ",", "\n", "self", ".", "canvas", ".", "canvasy", "(", "self", ".", "canvas", ".", "winfo_height", "(", ")", ")", ")", "\n", "box_img_int", "=", "tuple", "(", "map", "(", "int", ",", "box_image", ")", ")", "# convert to integer or it will not work properly", "\n", "# Get scroll region box", "\n", "box_scroll", "=", "[", "min", "(", "box_img_int", "[", "0", "]", ",", "box_canvas", "[", "0", "]", ")", ",", "min", "(", "box_img_int", "[", "1", "]", ",", "box_canvas", "[", "1", "]", ")", ",", "\n", "max", "(", "box_img_int", "[", "2", "]", ",", "box_canvas", "[", "2", "]", ")", ",", "max", "(", "box_img_int", "[", "3", "]", ",", "box_canvas", "[", "3", "]", ")", "]", "\n", "# Horizontal part of the image is in the visible area", "\n", "if", "box_scroll", "[", "0", "]", "==", "box_canvas", "[", "0", "]", "and", "box_scroll", "[", "2", "]", "==", "box_canvas", "[", "2", "]", ":", "\n", "            ", "box_scroll", "[", "0", "]", "=", "box_img_int", "[", "0", "]", "\n", "box_scroll", "[", "2", "]", "=", "box_img_int", "[", "2", "]", "\n", "# Vertical part of the image is in the visible area", "\n", "", "if", "box_scroll", "[", "1", "]", "==", "box_canvas", "[", "1", "]", "and", "box_scroll", "[", "3", "]", "==", "box_canvas", "[", "3", "]", ":", "\n", "            ", "box_scroll", "[", "1", "]", "=", "box_img_int", "[", "1", "]", "\n", "box_scroll", "[", "3", "]", "=", "box_img_int", "[", "3", "]", "\n", "# Convert scroll region to tuple and to integer", "\n", "", "self", ".", "canvas", ".", "configure", "(", "scrollregion", "=", "tuple", "(", "map", "(", "int", ",", "box_scroll", ")", ")", ")", "# set scroll region", "\n", "x1", "=", "max", "(", "box_canvas", "[", "0", "]", "-", "box_image", "[", "0", "]", ",", "0", ")", "# get coordinates (x1,y1,x2,y2) of the image tile", "\n", "y1", "=", "max", "(", "box_canvas", "[", "1", "]", "-", "box_image", "[", "1", "]", ",", "0", ")", "\n", "x2", "=", "min", "(", "box_canvas", "[", "2", "]", ",", "box_image", "[", "2", "]", ")", "-", "box_image", "[", "0", "]", "\n", "y2", "=", "min", "(", "box_canvas", "[", "3", "]", ",", "box_image", "[", "3", "]", ")", "-", "box_image", "[", "1", "]", "\n", "\n", "if", "int", "(", "x2", "-", "x1", ")", ">", "0", "and", "int", "(", "y2", "-", "y1", ")", ">", "0", ":", "# show image if it in the visible area", "\n", "            ", "border_width", "=", "2", "\n", "sx1", ",", "sx2", "=", "x1", "/", "self", ".", "current_scale", ",", "x2", "/", "self", ".", "current_scale", "\n", "sy1", ",", "sy2", "=", "y1", "/", "self", ".", "current_scale", ",", "y2", "/", "self", ".", "current_scale", "\n", "crop_x", ",", "crop_y", "=", "max", "(", "0", ",", "math", ".", "floor", "(", "sx1", "-", "border_width", ")", ")", ",", "max", "(", "0", ",", "math", ".", "floor", "(", "sy1", "-", "border_width", ")", ")", "\n", "crop_w", ",", "crop_h", "=", "math", ".", "ceil", "(", "sx2", "-", "sx1", "+", "2", "*", "border_width", ")", ",", "math", ".", "ceil", "(", "sy2", "-", "sy1", "+", "2", "*", "border_width", ")", "\n", "crop_w", "=", "min", "(", "crop_w", ",", "self", ".", "__original_image", ".", "width", "-", "crop_x", ")", "\n", "crop_h", "=", "min", "(", "crop_h", ",", "self", ".", "__original_image", ".", "height", "-", "crop_y", ")", "\n", "\n", "__current_image", "=", "self", ".", "__original_image", ".", "crop", "(", "(", "crop_x", ",", "crop_y", ",", "\n", "crop_x", "+", "crop_w", ",", "crop_y", "+", "crop_h", ")", ")", "\n", "crop_zw", "=", "int", "(", "round", "(", "crop_w", "*", "self", ".", "current_scale", ")", ")", "\n", "crop_zh", "=", "int", "(", "round", "(", "crop_h", "*", "self", ".", "current_scale", ")", ")", "\n", "zoom_sx", ",", "zoom_sy", "=", "crop_zw", "/", "crop_w", ",", "crop_zh", "/", "crop_h", "\n", "crop_zx", ",", "crop_zy", "=", "crop_x", "*", "zoom_sx", ",", "crop_y", "*", "zoom_sy", "\n", "self", ".", "real_scale", "=", "(", "zoom_sx", ",", "zoom_sy", ")", "\n", "\n", "interpolation", "=", "Image", ".", "NEAREST", "if", "self", ".", "current_scale", ">", "2.0", "else", "Image", ".", "ANTIALIAS", "\n", "__current_image", "=", "__current_image", ".", "resize", "(", "(", "crop_zw", ",", "crop_zh", ")", ",", "interpolation", ")", "\n", "zx1", ",", "zy1", "=", "x1", "-", "crop_zx", ",", "y1", "-", "crop_zy", "\n", "zx2", "=", "min", "(", "zx1", "+", "self", ".", "canvas", ".", "winfo_width", "(", ")", ",", "__current_image", ".", "width", ")", "\n", "zy2", "=", "min", "(", "zy1", "+", "self", ".", "canvas", ".", "winfo_height", "(", ")", ",", "__current_image", ".", "height", ")", "\n", "\n", "self", ".", "__current_image", "=", "__current_image", ".", "crop", "(", "(", "zx1", ",", "zy1", ",", "zx2", ",", "zy2", ")", ")", "\n", "\n", "imagetk", "=", "ImageTk", ".", "PhotoImage", "(", "self", ".", "__current_image", ")", "\n", "imageid", "=", "self", ".", "canvas", ".", "create_image", "(", "max", "(", "box_canvas", "[", "0", "]", ",", "box_img_int", "[", "0", "]", ")", ",", "\n", "max", "(", "box_canvas", "[", "1", "]", ",", "box_img_int", "[", "1", "]", ")", ",", "\n", "anchor", "=", "'nw'", ",", "image", "=", "imagetk", ")", "\n", "self", ".", "canvas", ".", "lower", "(", "imageid", ")", "# set image into background", "\n", "self", ".", "canvas", ".", "imagetk", "=", "imagetk", "# keep an extra reference to prevent garbage-collection", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._get_click_coordinates": [[175, 190], ["canvas.CanvasImage.canvas.canvasx", "canvas.CanvasImage.canvas.canvasy", "canvas.CanvasImage.outside", "canvas.CanvasImage.canvas.coords", "max", "max", "int", "int"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.outside"], ["", "", "def", "_get_click_coordinates", "(", "self", ",", "event", ")", ":", "\n", "        ", "x", "=", "self", ".", "canvas", ".", "canvasx", "(", "event", ".", "x", ")", "# get coordinates of the event on the canvas", "\n", "y", "=", "self", ".", "canvas", ".", "canvasy", "(", "event", ".", "y", ")", "\n", "\n", "if", "self", ".", "outside", "(", "x", ",", "y", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "box_image", "=", "self", ".", "canvas", ".", "coords", "(", "self", ".", "container", ")", "\n", "x", "=", "max", "(", "x", "-", "box_image", "[", "0", "]", ",", "0", ")", "\n", "y", "=", "max", "(", "y", "-", "box_image", "[", "1", "]", ",", "0", ")", "\n", "\n", "x", "=", "int", "(", "x", "/", "self", ".", "real_scale", "[", "0", "]", ")", "\n", "y", "=", "int", "(", "y", "/", "self", ".", "real_scale", "[", "1", "]", ")", "\n", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._reset_canvas_offset": [[192, 196], ["canvas.CanvasImage.canvas.configure", "canvas.CanvasImage.canvas.scan_mark", "canvas.CanvasImage.canvas.scan_dragto", "int", "int", "canvas.CanvasImage.canvas.canvasx", "canvas.CanvasImage.canvas.canvasy"], "methods", ["None"], ["", "def", "_reset_canvas_offset", "(", "self", ")", ":", "\n", "        ", "self", ".", "canvas", ".", "configure", "(", "scrollregion", "=", "(", "0", ",", "0", ",", "5000", ",", "5000", ")", ")", "\n", "self", ".", "canvas", ".", "scan_mark", "(", "0", ",", "0", ")", "\n", "self", ".", "canvas", ".", "scan_dragto", "(", "int", "(", "self", ".", "canvas", ".", "canvasx", "(", "0", ")", ")", ",", "int", "(", "self", ".", "canvas", ".", "canvasy", "(", "0", ")", ")", ",", "gain", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._change_canvas_scale": [[197, 209], ["canvas.CanvasImage.canvas.scale", "canvas.CanvasImage.canvas.winfo_width", "canvas.CanvasImage.canvas.winfo_height"], "methods", ["None"], ["", "def", "_change_canvas_scale", "(", "self", ",", "relative_scale", ",", "x", "=", "0", ",", "y", "=", "0", ")", ":", "\n", "        ", "new_scale", "=", "self", ".", "current_scale", "*", "relative_scale", "\n", "\n", "if", "new_scale", ">", "20", ":", "\n", "            ", "return", "\n", "\n", "", "if", "new_scale", "*", "self", ".", "__original_image", ".", "width", "<", "self", ".", "canvas", ".", "winfo_width", "(", ")", "and", "new_scale", "*", "self", ".", "__original_image", ".", "height", "<", "self", ".", "canvas", ".", "winfo_height", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "current_scale", "=", "new_scale", "\n", "self", ".", "canvas", ".", "scale", "(", "'all'", ",", "x", ",", "y", ",", "relative_scale", ",", "relative_scale", ")", "# rescale all objects", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_x": [[211, 215], ["canvas.CanvasImage.canvas.xview", "canvas.CanvasImage.__show_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image"], ["", "def", "__scroll_x", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\" Scroll canvas horizontally and redraw the image \"\"\"", "\n", "self", ".", "canvas", ".", "xview", "(", "*", "args", ")", "# scroll horizontally", "\n", "self", ".", "__show_image", "(", ")", "# redraw the image", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_y": [[217, 221], ["canvas.CanvasImage.canvas.yview", "canvas.CanvasImage.__show_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image"], ["", "def", "__scroll_y", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\" Scroll canvas vertically and redraw the image \"\"\"", "\n", "self", ".", "canvas", ".", "yview", "(", "*", "args", ")", "# scroll vertically", "\n", "self", ".", "__show_image", "(", ")", "# redraw the image", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__size_changed": [[222, 229], ["min", "canvas.CanvasImage.__show_image", "canvas.CanvasImage.canvas.winfo_width", "canvas.CanvasImage.canvas.winfo_height", "canvas.CanvasImage._change_canvas_scale"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._change_canvas_scale"], ["", "def", "__size_changed", "(", "self", ")", ":", "\n", "        ", "new_scale_w", "=", "self", ".", "canvas", ".", "winfo_width", "(", ")", "/", "(", "self", ".", "current_scale", "*", "self", ".", "__original_image", ".", "width", ")", "\n", "new_scale_h", "=", "self", ".", "canvas", ".", "winfo_height", "(", ")", "/", "(", "self", ".", "current_scale", "*", "self", ".", "__original_image", ".", "height", ")", "\n", "new_scale", "=", "min", "(", "new_scale_w", ",", "new_scale_h", ")", "\n", "if", "new_scale", ">", "1.0", ":", "\n", "            ", "self", ".", "_change_canvas_scale", "(", "new_scale", ")", "\n", "", "self", ".", "__show_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__wheel": [[231, 246], ["canvas.CanvasImage.canvas.canvasx", "canvas.CanvasImage.canvas.canvasy", "canvas.CanvasImage.outside", "canvas.CanvasImage._change_canvas_scale", "canvas.CanvasImage.__show_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.outside", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._change_canvas_scale", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image"], ["", "def", "__wheel", "(", "self", ",", "event", ")", ":", "\n", "        ", "\"\"\" Zoom with mouse wheel \"\"\"", "\n", "x", "=", "self", ".", "canvas", ".", "canvasx", "(", "event", ".", "x", ")", "# get coordinates of the event on the canvas", "\n", "y", "=", "self", ".", "canvas", ".", "canvasy", "(", "event", ".", "y", ")", "\n", "if", "self", ".", "outside", "(", "x", ",", "y", ")", ":", "return", "# zoom only inside image area", "\n", "\n", "scale", "=", "1.0", "\n", "# Respond to Linux (event.num) or Windows (event.delta) wheel event", "\n", "if", "event", ".", "num", "==", "5", "or", "event", ".", "delta", "==", "-", "120", "or", "event", ".", "delta", "==", "1", ":", "# scroll down, zoom out, smaller", "\n", "            ", "scale", "/=", "self", ".", "__delta", "\n", "", "if", "event", ".", "num", "==", "4", "or", "event", ".", "delta", "==", "120", "or", "event", ".", "delta", "==", "-", "1", ":", "# scroll up, zoom in, bigger", "\n", "            ", "scale", "*=", "self", ".", "__delta", "\n", "\n", "", "self", ".", "_change_canvas_scale", "(", "scale", ",", "x", ",", "y", ")", "\n", "self", ".", "__show_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__left_mouse_button": [[247, 255], ["canvas.CanvasImage._get_click_coordinates", "canvas.CanvasImage._click_callback"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._get_click_coordinates", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._click_callback"], ["", "def", "__left_mouse_button", "(", "self", ",", "event", ")", ":", "\n", "        ", "if", "self", ".", "_click_callback", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "coords", "=", "self", ".", "_get_click_coordinates", "(", "event", ")", "\n", "\n", "if", "coords", "is", "not", "None", ":", "\n", "            ", "self", ".", "_click_callback", "(", "is_positive", "=", "True", ",", "x", "=", "coords", "[", "0", "]", ",", "y", "=", "coords", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__right_mouse_button_pressed": [[256, 261], ["time.time", "canvas.CanvasImage.canvas.scan_mark"], "methods", ["None"], ["", "", "def", "__right_mouse_button_pressed", "(", "self", ",", "event", ")", ":", "\n", "        ", "\"\"\" Remember previous coordinates for scrolling with the mouse \"\"\"", "\n", "self", ".", "_last_rb_click_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "_last_rb_click_event", "=", "event", "\n", "self", ".", "canvas", ".", "scan_mark", "(", "event", ".", "x", ",", "event", ".", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__right_mouse_button_released": [[262, 276], ["math.sqrt", "canvas.CanvasImage._get_click_coordinates", "time.time", "canvas.CanvasImage._click_callback"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage._get_click_coordinates", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._click_callback"], ["", "def", "__right_mouse_button_released", "(", "self", ",", "event", ")", ":", "\n", "        ", "time_delta", "=", "time", ".", "time", "(", ")", "-", "self", ".", "_last_rb_click_time", "\n", "move_delta", "=", "math", ".", "sqrt", "(", "(", "event", ".", "x", "-", "self", ".", "_last_rb_click_event", ".", "x", ")", "**", "2", "+", "\n", "(", "event", ".", "y", "-", "self", ".", "_last_rb_click_event", ".", "y", ")", "**", "2", ")", "\n", "if", "time_delta", ">", "0.5", "or", "move_delta", ">", "3", ":", "\n", "            ", "return", "\n", "\n", "", "if", "self", ".", "_click_callback", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "coords", "=", "self", ".", "_get_click_coordinates", "(", "self", ".", "_last_rb_click_event", ")", "\n", "\n", "if", "coords", "is", "not", "None", ":", "\n", "            ", "self", ".", "_click_callback", "(", "is_positive", "=", "False", ",", "x", "=", "coords", "[", "0", "]", ",", "y", "=", "coords", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__right_mouse_button_motion": [[277, 284], ["math.sqrt", "canvas.CanvasImage.canvas.scan_dragto", "canvas.CanvasImage.__show_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__show_image"], ["", "", "def", "__right_mouse_button_motion", "(", "self", ",", "event", ")", ":", "\n", "        ", "\"\"\" Drag (move) canvas to the new position \"\"\"", "\n", "move_delta", "=", "math", ".", "sqrt", "(", "(", "event", ".", "x", "-", "self", ".", "_last_rb_click_event", ".", "x", ")", "**", "2", "+", "\n", "(", "event", ".", "y", "-", "self", ".", "_last_rb_click_event", ".", "y", ")", "**", "2", ")", "\n", "if", "move_delta", ">", "3", ":", "\n", "            ", "self", ".", "canvas", ".", "scan_dragto", "(", "event", ".", "x", ",", "event", ".", "y", ",", "gain", "=", "1", ")", "\n", "self", ".", "__show_image", "(", ")", "# zoom tile and show it on the canvas", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.outside": [[285, 292], ["canvas.CanvasImage.canvas.coords"], "methods", ["None"], ["", "", "def", "outside", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\" Checks if the point (x,y) is outside the image area \"\"\"", "\n", "bbox", "=", "self", ".", "canvas", ".", "coords", "(", "self", ".", "container", ")", "# get image area", "\n", "if", "bbox", "[", "0", "]", "<", "x", "<", "bbox", "[", "2", "]", "and", "bbox", "[", "1", "]", "<", "y", "<", "bbox", "[", "3", "]", ":", "\n", "            ", "return", "False", "# point (x,y) is inside the image area", "\n", "", "else", ":", "\n", "            ", "return", "True", "# point (x,y) is outside the image area", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__keystroke": [[294, 325], ["canvas.CanvasImage.__scroll_x", "canvas.CanvasImage.__scroll_x", "canvas.CanvasImage.__scroll_y", "canvas.CanvasImage.__scroll_y"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_x", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_x", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_y", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.__scroll_y"], ["", "", "def", "__keystroke", "(", "self", ",", "event", ")", ":", "\n", "        ", "\"\"\" Scrolling with the keyboard.\n            Independent from the language of the keyboard, CapsLock, <Ctrl>+<key>, etc. \"\"\"", "\n", "if", "event", ".", "state", "-", "self", ".", "__previous_state", "==", "4", ":", "# means that the Control key is pressed", "\n", "            ", "pass", "# do nothing if Control key is pressed", "\n", "", "else", ":", "\n", "            ", "self", ".", "__previous_state", "=", "event", ".", "state", "# remember the last keystroke state", "\n", "# Up, Down, Left, Right keystrokes", "\n", "self", ".", "keycodes", "=", "{", "}", "# init key codes", "\n", "if", "os", ".", "name", "==", "'nt'", ":", "# Windows OS", "\n", "                ", "self", ".", "keycodes", "=", "{", "\n", "'d'", ":", "[", "68", ",", "39", ",", "102", "]", ",", "\n", "'a'", ":", "[", "65", ",", "37", ",", "100", "]", ",", "\n", "'w'", ":", "[", "87", ",", "38", ",", "104", "]", ",", "\n", "'s'", ":", "[", "83", ",", "40", ",", "98", "]", ",", "\n", "}", "\n", "", "else", ":", "# Linux OS", "\n", "                ", "self", ".", "keycodes", "=", "{", "\n", "'d'", ":", "[", "40", ",", "114", ",", "85", "]", ",", "\n", "'a'", ":", "[", "38", ",", "113", ",", "83", "]", ",", "\n", "'w'", ":", "[", "25", ",", "111", ",", "80", "]", ",", "\n", "'s'", ":", "[", "39", ",", "116", ",", "88", "]", ",", "\n", "}", "\n", "", "if", "event", ".", "keycode", "in", "self", ".", "keycodes", "[", "'d'", "]", ":", "# scroll right, keys 'd' or 'Right'", "\n", "                ", "self", ".", "__scroll_x", "(", "'scroll'", ",", "1", ",", "'unit'", ",", "event", "=", "event", ")", "\n", "", "elif", "event", ".", "keycode", "in", "self", ".", "keycodes", "[", "'a'", "]", ":", "# scroll left, keys 'a' or 'Left'", "\n", "                ", "self", ".", "__scroll_x", "(", "'scroll'", ",", "-", "1", ",", "'unit'", ",", "event", "=", "event", ")", "\n", "", "elif", "event", ".", "keycode", "in", "self", ".", "keycodes", "[", "'w'", "]", ":", "# scroll up, keys 'w' or 'Up'", "\n", "                ", "self", ".", "__scroll_y", "(", "'scroll'", ",", "-", "1", ",", "'unit'", ",", "event", "=", "event", ")", "\n", "", "elif", "event", ".", "keycode", "in", "self", ".", "keycodes", "[", "'s'", "]", ":", "# scroll down, keys 's' or 'Down'", "\n", "                ", "self", ".", "__scroll_y", "(", "'scroll'", ",", "1", ",", "'unit'", ",", "event", "=", "event", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.handle_exception": [[13, 28], ["func", "sys.exit"], "function", ["None"], ["def", "handle_exception", "(", "exit_code", "=", "0", ")", ":", "\n", "    ", "\"\"\" Use: @land.logger.handle_exception(0)\n        before every function which could cast an exception \"\"\"", "\n", "\n", "def", "wrapper", "(", "func", ")", ":", "\n", "        ", "def", "inner", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "return", "func", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "except", ":", "\n", "                ", "if", "exit_code", "!=", "0", ":", "# if zero, don't exit from the program", "\n", "                    ", "sys", ".", "exit", "(", "exit_code", ")", "# exit from the program", "\n", "\n", "", "", "", "return", "inner", "\n", "\n", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp.__init__": [[15, 47], ["tkinter.ttk.Frame.__init__", "master.title", "master.withdraw", "master.update_idletasks", "master.geometry", "app.InteractiveDemoApp.pack", "interactive_demo.controller.InteractiveController", "app.InteractiveDemoApp._init_state", "app.InteractiveDemoApp._add_menu", "app.InteractiveDemoApp._add_canvas", "app.InteractiveDemoApp._add_buttons", "master.bind", "master.bind", "[].trace", "[].trace", "[].trace", "[].trace", "app.InteractiveDemoApp.state[].trace", "app.InteractiveDemoApp._change_brs_mode", "master.winfo_screenwidth", "master.winfo_reqwidth", "master.winfo_screenheight", "master.winfo_reqheight", "app.InteractiveDemoApp.controller.finish_object", "app.InteractiveDemoApp.controller.partially_finish_object"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._init_state", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_menu", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_canvas", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_buttons", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._change_brs_mode", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.finish_object", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.partially_finish_object"], ["    ", "def", "__init__", "(", "self", ",", "master", ",", "args", ",", "model", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "master", ")", "\n", "self", ".", "master", "=", "master", "\n", "master", ".", "title", "(", "\"Reviving Iterative Training with Mask Guidance for Interactive Segmentation\"", ")", "\n", "master", ".", "withdraw", "(", ")", "\n", "master", ".", "update_idletasks", "(", ")", "\n", "x", "=", "(", "master", ".", "winfo_screenwidth", "(", ")", "-", "master", ".", "winfo_reqwidth", "(", ")", ")", "/", "2", "\n", "y", "=", "(", "master", ".", "winfo_screenheight", "(", ")", "-", "master", ".", "winfo_reqheight", "(", ")", ")", "/", "2", "\n", "master", ".", "geometry", "(", "\"+%d+%d\"", "%", "(", "x", ",", "y", ")", ")", "\n", "self", ".", "pack", "(", "fill", "=", "\"both\"", ",", "expand", "=", "True", ")", "\n", "\n", "self", ".", "brs_modes", "=", "[", "'NoBRS'", ",", "'RGB-BRS'", ",", "'DistMap-BRS'", ",", "'f-BRS-A'", ",", "'f-BRS-B'", ",", "'f-BRS-C'", "]", "\n", "self", ".", "limit_longest_size", "=", "args", ".", "limit_longest_size", "\n", "\n", "self", ".", "controller", "=", "InteractiveController", "(", "model", ",", "args", ".", "device", ",", "\n", "predictor_params", "=", "{", "'brs_mode'", ":", "'NoBRS'", "}", ",", "\n", "update_image_callback", "=", "self", ".", "_update_image", ")", "\n", "\n", "self", ".", "_init_state", "(", ")", "\n", "self", ".", "_add_menu", "(", ")", "\n", "self", ".", "_add_canvas", "(", ")", "\n", "self", ".", "_add_buttons", "(", ")", "\n", "\n", "master", ".", "bind", "(", "'<space>'", ",", "lambda", "event", ":", "self", ".", "controller", ".", "finish_object", "(", ")", ")", "\n", "master", ".", "bind", "(", "'a'", ",", "lambda", "event", ":", "self", ".", "controller", ".", "partially_finish_object", "(", ")", ")", "\n", "\n", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'skip_clicks'", "]", ".", "trace", "(", "mode", "=", "'w'", ",", "callback", "=", "self", ".", "_reset_predictor", ")", "\n", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'target_size'", "]", ".", "trace", "(", "mode", "=", "'w'", ",", "callback", "=", "self", ".", "_reset_predictor", ")", "\n", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'expansion_ratio'", "]", ".", "trace", "(", "mode", "=", "'w'", ",", "callback", "=", "self", ".", "_reset_predictor", ")", "\n", "self", ".", "state", "[", "'predictor_params'", "]", "[", "'net_clicks_limit'", "]", ".", "trace", "(", "mode", "=", "'w'", ",", "callback", "=", "self", ".", "_change_brs_mode", ")", "\n", "self", ".", "state", "[", "'lbfgs_max_iters'", "]", ".", "trace", "(", "mode", "=", "'w'", ",", "callback", "=", "self", ".", "_change_brs_mode", ")", "\n", "self", ".", "_change_brs_mode", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._init_state": [[48, 67], ["tkinter.StringVar", "tkinter.DoubleVar", "tkinter.IntVar", "tkinter.DoubleVar", "tkinter.IntVar", "tkinter.BooleanVar", "tkinter.BooleanVar", "tkinter.IntVar", "tkinter.IntVar", "tkinter.DoubleVar", "tkinter.IntVar", "min"], "methods", ["None"], ["", "def", "_init_state", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "{", "\n", "'zoomin_params'", ":", "{", "\n", "'use_zoom_in'", ":", "tk", ".", "BooleanVar", "(", "value", "=", "True", ")", ",", "\n", "'fixed_crop'", ":", "tk", ".", "BooleanVar", "(", "value", "=", "True", ")", ",", "\n", "'skip_clicks'", ":", "tk", ".", "IntVar", "(", "value", "=", "-", "1", ")", ",", "\n", "'target_size'", ":", "tk", ".", "IntVar", "(", "value", "=", "min", "(", "400", ",", "self", ".", "limit_longest_size", ")", ")", ",", "\n", "'expansion_ratio'", ":", "tk", ".", "DoubleVar", "(", "value", "=", "1.4", ")", "\n", "}", ",", "\n", "\n", "'predictor_params'", ":", "{", "\n", "'net_clicks_limit'", ":", "tk", ".", "IntVar", "(", "value", "=", "8", ")", "\n", "}", ",", "\n", "'brs_mode'", ":", "tk", ".", "StringVar", "(", "value", "=", "'NoBRS'", ")", ",", "\n", "'prob_thresh'", ":", "tk", ".", "DoubleVar", "(", "value", "=", "0.5", ")", ",", "\n", "'lbfgs_max_iters'", ":", "tk", ".", "IntVar", "(", "value", "=", "20", ")", ",", "\n", "\n", "'alpha_blend'", ":", "tk", ".", "DoubleVar", "(", "value", "=", "0.5", ")", ",", "\n", "'click_radius'", ":", "tk", ".", "IntVar", "(", "value", "=", "3", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_menu": [[69, 87], ["interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.menubar.pack", "interactive_demo.wrappers.FocusButton", "interactive_demo.wrappers.FocusButton.pack", "interactive_demo.wrappers.FocusButton", "app.InteractiveDemoApp.save_mask_btn.pack", "app.InteractiveDemoApp.save_mask_btn.configure", "interactive_demo.wrappers.FocusButton", "app.InteractiveDemoApp.load_mask_btn.pack", "app.InteractiveDemoApp.load_mask_btn.configure", "interactive_demo.wrappers.FocusButton", "interactive_demo.wrappers.FocusButton.pack", "interactive_demo.wrappers.FocusButton", "interactive_demo.wrappers.FocusButton.pack"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack"], ["", "def", "_add_menu", "(", "self", ")", ":", "\n", "        ", "self", ".", "menubar", "=", "FocusLabelFrame", "(", "self", ",", "bd", "=", "1", ")", "\n", "self", ".", "menubar", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "'x'", ")", "\n", "\n", "button", "=", "FocusButton", "(", "self", ".", "menubar", ",", "text", "=", "'Load image'", ",", "command", "=", "self", ".", "_load_image_callback", ")", "\n", "button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ")", "\n", "self", ".", "save_mask_btn", "=", "FocusButton", "(", "self", ".", "menubar", ",", "text", "=", "'Save mask'", ",", "command", "=", "self", ".", "_save_mask_callback", ")", "\n", "self", ".", "save_mask_btn", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ")", "\n", "self", ".", "save_mask_btn", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "\n", "self", ".", "load_mask_btn", "=", "FocusButton", "(", "self", ".", "menubar", ",", "text", "=", "'Load mask'", ",", "command", "=", "self", ".", "_load_mask_callback", ")", "\n", "self", ".", "load_mask_btn", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ")", "\n", "self", ".", "load_mask_btn", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "\n", "button", "=", "FocusButton", "(", "self", ".", "menubar", ",", "text", "=", "'About'", ",", "command", "=", "self", ".", "_about_callback", ")", "\n", "button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ")", "\n", "button", "=", "FocusButton", "(", "self", ".", "menubar", ",", "text", "=", "'Exit'", ",", "command", "=", "self", ".", "master", ".", "quit", ")", "\n", "button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_canvas": [[88, 98], ["interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.canvas_frame.rowconfigure", "app.InteractiveDemoApp.canvas_frame.columnconfigure", "tkinter.Canvas", "app.InteractiveDemoApp.canvas.grid", "app.InteractiveDemoApp.canvas_frame.pack"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack"], ["", "def", "_add_canvas", "(", "self", ")", ":", "\n", "        ", "self", ".", "canvas_frame", "=", "FocusLabelFrame", "(", "self", ",", "text", "=", "\"Image\"", ")", "\n", "self", ".", "canvas_frame", ".", "rowconfigure", "(", "0", ",", "weight", "=", "1", ")", "\n", "self", ".", "canvas_frame", ".", "columnconfigure", "(", "0", ",", "weight", "=", "1", ")", "\n", "\n", "self", ".", "canvas", "=", "tk", ".", "Canvas", "(", "self", ".", "canvas_frame", ",", "highlightthickness", "=", "0", ",", "cursor", "=", "\"hand1\"", ",", "width", "=", "400", ",", "height", "=", "400", ")", "\n", "self", ".", "canvas", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "0", ",", "sticky", "=", "'nswe'", ",", "padx", "=", "5", ",", "pady", "=", "5", ")", "\n", "\n", "self", ".", "image_on_canvas", "=", "None", "\n", "self", ".", "canvas_frame", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "\"both\"", ",", "expand", "=", "True", ",", "padx", "=", "5", ",", "pady", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._add_buttons": [[99, 174], ["interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.control_frame.pack", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.clicks_options_frame.pack", "interactive_demo.wrappers.FocusButton", "app.InteractiveDemoApp.finish_object_button.pack", "interactive_demo.wrappers.FocusButton", "app.InteractiveDemoApp.undo_click_button.pack", "interactive_demo.wrappers.FocusButton", "app.InteractiveDemoApp.reset_clicks_button.pack", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.zoomin_options_frame.pack", "interactive_demo.wrappers.FocusCheckButton().grid", "interactive_demo.wrappers.FocusCheckButton().grid", "tkinter.Label().grid", "tkinter.Label().grid", "tkinter.Label().grid", "interactive_demo.wrappers.BoundedNumericalEntry().grid", "interactive_demo.wrappers.BoundedNumericalEntry().grid", "interactive_demo.wrappers.BoundedNumericalEntry().grid", "app.InteractiveDemoApp.zoomin_options_frame.columnconfigure", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.brs_options_frame.pack", "tkinter.OptionMenu", "tkinter.OptionMenu.config", "tkinter.OptionMenu.grid", "tkinter.Label", "app.InteractiveDemoApp.net_clicks_label.grid", "interactive_demo.wrappers.BoundedNumericalEntry", "app.InteractiveDemoApp.net_clicks_entry.grid", "tkinter.Label", "app.InteractiveDemoApp.lbfgs_iters_label.grid", "interactive_demo.wrappers.BoundedNumericalEntry", "app.InteractiveDemoApp.lbfgs_iters_entry.grid", "app.InteractiveDemoApp.brs_options_frame.columnconfigure", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.prob_thresh_frame.pack", "interactive_demo.wrappers.FocusHorizontalScale().pack", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.alpha_blend_frame.pack", "interactive_demo.wrappers.FocusHorizontalScale().pack", "interactive_demo.wrappers.FocusLabelFrame", "app.InteractiveDemoApp.click_radius_frame.pack", "interactive_demo.wrappers.FocusHorizontalScale().pack", "interactive_demo.wrappers.FocusCheckButton", "interactive_demo.wrappers.FocusCheckButton", "tkinter.Label", "tkinter.Label", "tkinter.Label", "interactive_demo.wrappers.BoundedNumericalEntry", "interactive_demo.wrappers.BoundedNumericalEntry", "interactive_demo.wrappers.BoundedNumericalEntry", "interactive_demo.wrappers.FocusHorizontalScale", "interactive_demo.wrappers.FocusHorizontalScale", "interactive_demo.wrappers.FocusHorizontalScale"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.pack"], ["", "def", "_add_buttons", "(", "self", ")", ":", "\n", "        ", "self", ".", "control_frame", "=", "FocusLabelFrame", "(", "self", ",", "text", "=", "\"Controls\"", ")", "\n", "self", ".", "control_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "'x'", ",", "padx", "=", "5", ",", "pady", "=", "5", ")", "\n", "master", "=", "self", ".", "control_frame", "\n", "\n", "self", ".", "clicks_options_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"Clicks management\"", ")", "\n", "self", ".", "clicks_options_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "self", ".", "finish_object_button", "=", "FocusButton", "(", "self", ".", "clicks_options_frame", ",", "text", "=", "'Finish\\nobject'", ",", "bg", "=", "'#b6d7a8'", ",", "fg", "=", "'black'", ",", "width", "=", "10", ",", "height", "=", "2", ",", "\n", "state", "=", "tk", ".", "DISABLED", ",", "command", "=", "self", ".", "controller", ".", "finish_object", ")", "\n", "self", ".", "finish_object_button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "self", ".", "undo_click_button", "=", "FocusButton", "(", "self", ".", "clicks_options_frame", ",", "text", "=", "'Undo click'", ",", "bg", "=", "'#ffe599'", ",", "fg", "=", "'black'", ",", "width", "=", "10", ",", "height", "=", "2", ",", "\n", "state", "=", "tk", ".", "DISABLED", ",", "command", "=", "self", ".", "controller", ".", "undo_click", ")", "\n", "self", ".", "undo_click_button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "self", ".", "reset_clicks_button", "=", "FocusButton", "(", "self", ".", "clicks_options_frame", ",", "text", "=", "'Reset clicks'", ",", "bg", "=", "'#ea9999'", ",", "fg", "=", "'black'", ",", "width", "=", "10", ",", "height", "=", "2", ",", "\n", "state", "=", "tk", ".", "DISABLED", ",", "command", "=", "self", ".", "_reset_last_object", ")", "\n", "self", ".", "reset_clicks_button", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "\n", "self", ".", "zoomin_options_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"ZoomIn options\"", ")", "\n", "self", ".", "zoomin_options_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "FocusCheckButton", "(", "self", ".", "zoomin_options_frame", ",", "text", "=", "'Use ZoomIn'", ",", "command", "=", "self", ".", "_reset_predictor", ",", "\n", "variable", "=", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'use_zoom_in'", "]", ")", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "0", ",", "padx", "=", "10", ")", "\n", "FocusCheckButton", "(", "self", ".", "zoomin_options_frame", ",", "text", "=", "'Fixed crop'", ",", "command", "=", "self", ".", "_reset_predictor", ",", "\n", "variable", "=", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'fixed_crop'", "]", ")", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "0", ",", "padx", "=", "10", ")", "\n", "tk", ".", "Label", "(", "self", ".", "zoomin_options_frame", ",", "text", "=", "\"Skip clicks\"", ")", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "1", ",", "pady", "=", "1", ",", "sticky", "=", "'e'", ")", "\n", "tk", ".", "Label", "(", "self", ".", "zoomin_options_frame", ",", "text", "=", "\"Target size\"", ")", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "1", ",", "pady", "=", "1", ",", "sticky", "=", "'e'", ")", "\n", "tk", ".", "Label", "(", "self", ".", "zoomin_options_frame", ",", "text", "=", "\"Expand ratio\"", ")", ".", "grid", "(", "row", "=", "2", ",", "column", "=", "1", ",", "pady", "=", "1", ",", "sticky", "=", "'e'", ")", "\n", "BoundedNumericalEntry", "(", "self", ".", "zoomin_options_frame", ",", "variable", "=", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'skip_clicks'", "]", ",", "\n", "min_value", "=", "-", "1", ",", "max_value", "=", "None", ",", "vartype", "=", "int", ",", "\n", "name", "=", "'zoom_in_skip_clicks'", ")", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "2", ",", "padx", "=", "10", ",", "pady", "=", "1", ",", "sticky", "=", "'w'", ")", "\n", "BoundedNumericalEntry", "(", "self", ".", "zoomin_options_frame", ",", "variable", "=", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'target_size'", "]", ",", "\n", "min_value", "=", "100", ",", "max_value", "=", "self", ".", "limit_longest_size", ",", "vartype", "=", "int", ",", "\n", "name", "=", "'zoom_in_target_size'", ")", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "2", ",", "padx", "=", "10", ",", "pady", "=", "1", ",", "sticky", "=", "'w'", ")", "\n", "BoundedNumericalEntry", "(", "self", ".", "zoomin_options_frame", ",", "variable", "=", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'expansion_ratio'", "]", ",", "\n", "min_value", "=", "1.0", ",", "max_value", "=", "2.0", ",", "vartype", "=", "float", ",", "\n", "name", "=", "'zoom_in_expansion_ratio'", ")", ".", "grid", "(", "row", "=", "2", ",", "column", "=", "2", ",", "padx", "=", "10", ",", "pady", "=", "1", ",", "sticky", "=", "'w'", ")", "\n", "self", ".", "zoomin_options_frame", ".", "columnconfigure", "(", "(", "0", ",", "1", ",", "2", ")", ",", "weight", "=", "1", ")", "\n", "\n", "self", ".", "brs_options_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"BRS options\"", ")", "\n", "self", ".", "brs_options_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "menu", "=", "tk", ".", "OptionMenu", "(", "self", ".", "brs_options_frame", ",", "self", ".", "state", "[", "'brs_mode'", "]", ",", "\n", "*", "self", ".", "brs_modes", ",", "command", "=", "self", ".", "_change_brs_mode", ")", "\n", "menu", ".", "config", "(", "width", "=", "11", ")", "\n", "menu", ".", "grid", "(", "rowspan", "=", "2", ",", "column", "=", "0", ",", "padx", "=", "10", ")", "\n", "self", ".", "net_clicks_label", "=", "tk", ".", "Label", "(", "self", ".", "brs_options_frame", ",", "text", "=", "\"Network clicks\"", ")", "\n", "self", ".", "net_clicks_label", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "1", ",", "pady", "=", "2", ",", "sticky", "=", "'e'", ")", "\n", "self", ".", "net_clicks_entry", "=", "BoundedNumericalEntry", "(", "self", ".", "brs_options_frame", ",", "\n", "variable", "=", "self", ".", "state", "[", "'predictor_params'", "]", "[", "'net_clicks_limit'", "]", ",", "\n", "min_value", "=", "0", ",", "max_value", "=", "None", ",", "vartype", "=", "int", ",", "allow_inf", "=", "True", ",", "\n", "name", "=", "'net_clicks_limit'", ")", "\n", "self", ".", "net_clicks_entry", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "2", ",", "padx", "=", "10", ",", "pady", "=", "2", ",", "sticky", "=", "'w'", ")", "\n", "self", ".", "lbfgs_iters_label", "=", "tk", ".", "Label", "(", "self", ".", "brs_options_frame", ",", "text", "=", "\"L-BFGS\\nmax iterations\"", ")", "\n", "self", ".", "lbfgs_iters_label", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "1", ",", "pady", "=", "2", ",", "sticky", "=", "'e'", ")", "\n", "self", ".", "lbfgs_iters_entry", "=", "BoundedNumericalEntry", "(", "self", ".", "brs_options_frame", ",", "variable", "=", "self", ".", "state", "[", "'lbfgs_max_iters'", "]", ",", "\n", "min_value", "=", "1", ",", "max_value", "=", "1000", ",", "vartype", "=", "int", ",", "\n", "name", "=", "'lbfgs_max_iters'", ")", "\n", "self", ".", "lbfgs_iters_entry", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "2", ",", "padx", "=", "10", ",", "pady", "=", "2", ",", "sticky", "=", "'w'", ")", "\n", "self", ".", "brs_options_frame", ".", "columnconfigure", "(", "(", "0", ",", "1", ")", ",", "weight", "=", "1", ")", "\n", "\n", "self", ".", "prob_thresh_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"Predictions threshold\"", ")", "\n", "self", ".", "prob_thresh_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "FocusHorizontalScale", "(", "self", ".", "prob_thresh_frame", ",", "from_", "=", "0.0", ",", "to", "=", "1.0", ",", "command", "=", "self", ".", "_update_prob_thresh", ",", "\n", "variable", "=", "self", ".", "state", "[", "'prob_thresh'", "]", ")", ".", "pack", "(", "padx", "=", "10", ")", "\n", "\n", "self", ".", "alpha_blend_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"Alpha blending coefficient\"", ")", "\n", "self", ".", "alpha_blend_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "FocusHorizontalScale", "(", "self", ".", "alpha_blend_frame", ",", "from_", "=", "0.0", ",", "to", "=", "1.0", ",", "command", "=", "self", ".", "_update_blend_alpha", ",", "\n", "variable", "=", "self", ".", "state", "[", "'alpha_blend'", "]", ")", ".", "pack", "(", "padx", "=", "10", ",", "anchor", "=", "tk", ".", "CENTER", ")", "\n", "\n", "self", ".", "click_radius_frame", "=", "FocusLabelFrame", "(", "master", ",", "text", "=", "\"Visualisation click radius\"", ")", "\n", "self", ".", "click_radius_frame", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ",", "padx", "=", "10", ",", "pady", "=", "3", ")", "\n", "FocusHorizontalScale", "(", "self", ".", "click_radius_frame", ",", "from_", "=", "0", ",", "to", "=", "7", ",", "resolution", "=", "1", ",", "command", "=", "self", ".", "_update_click_radius", ",", "\n", "variable", "=", "self", ".", "state", "[", "'click_radius'", "]", ")", ".", "pack", "(", "padx", "=", "10", ",", "anchor", "=", "tk", ".", "CENTER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._load_image_callback": [[175, 188], ["app.InteractiveDemoApp.menubar.focus_set", "app.InteractiveDemoApp._check_entry", "tkinter.filedialog.askopenfilename", "len", "cv2.cvtColor", "app.InteractiveDemoApp.controller.set_image", "app.InteractiveDemoApp.save_mask_btn.configure", "app.InteractiveDemoApp.load_mask_btn.configure", "cv2.imread"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.set_image"], ["", "def", "_load_image_callback", "(", "self", ")", ":", "\n", "        ", "self", ".", "menubar", ".", "focus_set", "(", ")", "\n", "if", "self", ".", "_check_entry", "(", "self", ")", ":", "\n", "            ", "filename", "=", "filedialog", ".", "askopenfilename", "(", "parent", "=", "self", ".", "master", ",", "filetypes", "=", "[", "\n", "(", "\"Images\"", ",", "\"*.jpg *.jpeg *.png *.bmp *.tiff\"", ")", ",", "\n", "(", "\"All files\"", ",", "\"*.*\"", ")", ",", "\n", "]", ",", "title", "=", "\"Chose an image\"", ")", "\n", "\n", "if", "len", "(", "filename", ")", ">", "0", ":", "\n", "                ", "image", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "filename", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "self", ".", "controller", ".", "set_image", "(", "image", ")", "\n", "self", ".", "save_mask_btn", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "self", ".", "load_mask_btn", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._save_mask_callback": [[189, 207], ["app.InteractiveDemoApp.menubar.focus_set", "app.InteractiveDemoApp._check_entry", "tkinter.filedialog.asksaveasfilename", "len", "cv2.imwrite", "mask.astype.astype.max", "mask.astype.astype.astype", "mask.astype.astype.max"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry"], ["", "", "", "def", "_save_mask_callback", "(", "self", ")", ":", "\n", "        ", "self", ".", "menubar", ".", "focus_set", "(", ")", "\n", "if", "self", ".", "_check_entry", "(", "self", ")", ":", "\n", "            ", "mask", "=", "self", ".", "controller", ".", "result_mask", "\n", "if", "mask", "is", "None", ":", "\n", "                ", "return", "\n", "\n", "", "filename", "=", "filedialog", ".", "asksaveasfilename", "(", "parent", "=", "self", ".", "master", ",", "initialfile", "=", "'mask.png'", ",", "filetypes", "=", "[", "\n", "(", "\"PNG image\"", ",", "\"*.png\"", ")", ",", "\n", "(", "\"BMP image\"", ",", "\"*.bmp\"", ")", ",", "\n", "(", "\"All files\"", ",", "\"*.*\"", ")", ",", "\n", "]", ",", "title", "=", "\"Save the current mask as...\"", ")", "\n", "\n", "if", "len", "(", "filename", ")", ">", "0", ":", "\n", "                ", "if", "mask", ".", "max", "(", ")", "<", "256", ":", "\n", "                    ", "mask", "=", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "mask", "*=", "255", "//", "mask", ".", "max", "(", ")", "\n", "", "cv2", ".", "imwrite", "(", "filename", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._load_mask_callback": [[208, 225], ["app.InteractiveDemoApp.menubar.focus_set", "app.InteractiveDemoApp._check_entry", "tkinter.messagebox.showwarning", "tkinter.filedialog.askopenfilename", "len", "app.InteractiveDemoApp.controller.set_mask", "app.InteractiveDemoApp._update_image", "cv2.imread"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.set_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_image"], ["", "", "", "def", "_load_mask_callback", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", ".", "net", ".", "with_prev_mask", ":", "\n", "            ", "messagebox", ".", "showwarning", "(", "\"Warning\"", ",", "\"The current model doesn't support loading external masks. \"", "\n", "\"Please use ITER-M models for that purpose.\"", ")", "\n", "return", "\n", "\n", "", "self", ".", "menubar", ".", "focus_set", "(", ")", "\n", "if", "self", ".", "_check_entry", "(", "self", ")", ":", "\n", "            ", "filename", "=", "filedialog", ".", "askopenfilename", "(", "parent", "=", "self", ".", "master", ",", "filetypes", "=", "[", "\n", "(", "\"Binary mask (png, bmp)\"", ",", "\"*.png *.bmp\"", ")", ",", "\n", "(", "\"All files\"", ",", "\"*.*\"", ")", ",", "\n", "]", ",", "title", "=", "\"Chose an image\"", ")", "\n", "\n", "if", "len", "(", "filename", ")", ">", "0", ":", "\n", "                ", "mask", "=", "cv2", ".", "imread", "(", "filename", ")", "[", ":", ",", ":", ",", "0", "]", ">", "127", "\n", "self", ".", "controller", ".", "set_mask", "(", "mask", ")", "\n", "self", ".", "_update_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._about_callback": [[226, 236], ["app.InteractiveDemoApp.menubar.focus_set", "tkinter.messagebox.showinfo"], "methods", ["None"], ["", "", "", "def", "_about_callback", "(", "self", ")", ":", "\n", "        ", "self", ".", "menubar", ".", "focus_set", "(", ")", "\n", "\n", "text", "=", "[", "\n", "\"Developed by:\"", ",", "\n", "\"K.Sofiiuk and I. Petrov\"", ",", "\n", "\"The MIT License, 2021\"", "\n", "]", "\n", "\n", "messagebox", ".", "showinfo", "(", "\"About Demo\"", ",", "'\\n'", ".", "join", "(", "text", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._reset_last_object": [[237, 241], ["app.InteractiveDemoApp.state[].set", "app.InteractiveDemoApp.state[].set", "app.InteractiveDemoApp.controller.reset_last_object"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_last_object"], ["", "def", "_reset_last_object", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "[", "'alpha_blend'", "]", ".", "set", "(", "0.5", ")", "\n", "self", ".", "state", "[", "'prob_thresh'", "]", ".", "set", "(", "0.5", ")", "\n", "self", ".", "controller", ".", "reset_last_object", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_prob_thresh": [[242, 246], ["app.InteractiveDemoApp.state[].get", "app.InteractiveDemoApp._update_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_image"], ["", "def", "_update_prob_thresh", "(", "self", ",", "value", ")", ":", "\n", "        ", "if", "self", ".", "controller", ".", "is_incomplete_mask", ":", "\n", "            ", "self", ".", "controller", ".", "prob_thresh", "=", "self", ".", "state", "[", "'prob_thresh'", "]", ".", "get", "(", ")", "\n", "self", ".", "_update_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_blend_alpha": [[247, 249], ["app.InteractiveDemoApp._update_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_image"], ["", "", "def", "_update_blend_alpha", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "_update_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_click_radius": [[250, 255], ["app.InteractiveDemoApp._update_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_image"], ["", "def", "_update_click_radius", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "if", "self", ".", "image_on_canvas", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "_update_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._change_brs_mode": [[256, 272], ["app.InteractiveDemoApp._reset_predictor", "app.InteractiveDemoApp.state[].get", "app.InteractiveDemoApp.net_clicks_entry.set", "app.InteractiveDemoApp.net_clicks_entry.configure", "app.InteractiveDemoApp.net_clicks_label.configure", "app.InteractiveDemoApp.lbfgs_iters_entry.configure", "app.InteractiveDemoApp.lbfgs_iters_label.configure", "app.InteractiveDemoApp.net_clicks_entry.configure", "app.InteractiveDemoApp.net_clicks_label.configure", "app.InteractiveDemoApp.lbfgs_iters_entry.configure", "app.InteractiveDemoApp.lbfgs_iters_label.configure", "app.InteractiveDemoApp.net_clicks_entry.get", "app.InteractiveDemoApp.net_clicks_entry.set"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._reset_predictor", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["", "def", "_change_brs_mode", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "if", "self", ".", "state", "[", "'brs_mode'", "]", ".", "get", "(", ")", "==", "'NoBRS'", ":", "\n", "            ", "self", ".", "net_clicks_entry", ".", "set", "(", "'INF'", ")", "\n", "self", ".", "net_clicks_entry", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "net_clicks_label", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "lbfgs_iters_entry", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "lbfgs_iters_label", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "net_clicks_entry", ".", "get", "(", ")", "==", "'INF'", ":", "\n", "                ", "self", ".", "net_clicks_entry", ".", "set", "(", "8", ")", "\n", "", "self", ".", "net_clicks_entry", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "self", ".", "net_clicks_label", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "self", ".", "lbfgs_iters_entry", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "self", ".", "lbfgs_iters_label", ".", "configure", "(", "state", "=", "tk", ".", "NORMAL", ")", "\n", "\n", "", "self", ".", "_reset_predictor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._reset_predictor": [[273, 301], ["app.InteractiveDemoApp.state[].get", "app.InteractiveDemoApp.state[].get", "[].get", "app.InteractiveDemoApp.controller.reset_predictor", "[].get", "[].get", "[].get", "[].get", "[].get", "app.InteractiveDemoApp.state[].get"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.reset_predictor"], ["", "def", "_reset_predictor", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "brs_mode", "=", "self", ".", "state", "[", "'brs_mode'", "]", ".", "get", "(", ")", "\n", "prob_thresh", "=", "self", ".", "state", "[", "'prob_thresh'", "]", ".", "get", "(", ")", "\n", "net_clicks_limit", "=", "None", "if", "brs_mode", "==", "'NoBRS'", "else", "self", ".", "state", "[", "'predictor_params'", "]", "[", "'net_clicks_limit'", "]", ".", "get", "(", ")", "\n", "\n", "if", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'use_zoom_in'", "]", ".", "get", "(", ")", ":", "\n", "            ", "zoomin_params", "=", "{", "\n", "'skip_clicks'", ":", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'skip_clicks'", "]", ".", "get", "(", ")", ",", "\n", "'target_size'", ":", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'target_size'", "]", ".", "get", "(", ")", ",", "\n", "'expansion_ratio'", ":", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'expansion_ratio'", "]", ".", "get", "(", ")", "\n", "}", "\n", "if", "self", ".", "state", "[", "'zoomin_params'", "]", "[", "'fixed_crop'", "]", ".", "get", "(", ")", ":", "\n", "                ", "zoomin_params", "[", "'target_size'", "]", "=", "(", "zoomin_params", "[", "'target_size'", "]", ",", "zoomin_params", "[", "'target_size'", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "zoomin_params", "=", "None", "\n", "\n", "", "predictor_params", "=", "{", "\n", "'brs_mode'", ":", "brs_mode", ",", "\n", "'prob_thresh'", ":", "prob_thresh", ",", "\n", "'zoom_in_params'", ":", "zoomin_params", ",", "\n", "'predictor_params'", ":", "{", "\n", "'net_clicks_limit'", ":", "net_clicks_limit", ",", "\n", "'max_size'", ":", "self", ".", "limit_longest_size", "\n", "}", ",", "\n", "'brs_opt_func_params'", ":", "{", "'min_iou_diff'", ":", "1e-3", "}", ",", "\n", "'lbfgs_params'", ":", "{", "'maxfun'", ":", "self", ".", "state", "[", "'lbfgs_max_iters'", "]", ".", "get", "(", ")", "}", "\n", "}", "\n", "self", ".", "controller", ".", "reset_predictor", "(", "predictor_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._click_callback": [[302, 311], ["app.InteractiveDemoApp.canvas.focus_set", "app.InteractiveDemoApp._check_entry", "tkinter.messagebox.showwarning", "app.InteractiveDemoApp.controller.add_click"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click"], ["", "def", "_click_callback", "(", "self", ",", "is_positive", ",", "x", ",", "y", ")", ":", "\n", "        ", "self", ".", "canvas", ".", "focus_set", "(", ")", "\n", "\n", "if", "self", ".", "image_on_canvas", "is", "None", ":", "\n", "            ", "messagebox", ".", "showwarning", "(", "\"Warning\"", ",", "\"Please load an image first\"", ")", "\n", "return", "\n", "\n", "", "if", "self", ".", "_check_entry", "(", "self", ")", ":", "\n", "            ", "self", ".", "controller", ".", "add_click", "(", "x", ",", "y", ",", "is_positive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._update_image": [[312, 322], ["app.InteractiveDemoApp.controller.get_visualization", "app.InteractiveDemoApp._set_click_dependent_widgets_state", "interactive_demo.canvas.CanvasImage", "app.InteractiveDemoApp.image_on_canvas.register_click_callback", "app.InteractiveDemoApp.image_on_canvas.reload_image", "app.InteractiveDemoApp.state[].get", "app.InteractiveDemoApp.state[].get", "PIL.Image.fromarray"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.controller.InteractiveController.get_visualization", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._set_click_dependent_widgets_state", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.register_click_callback", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.reload_image"], ["", "", "def", "_update_image", "(", "self", ",", "reset_canvas", "=", "False", ")", ":", "\n", "        ", "image", "=", "self", ".", "controller", ".", "get_visualization", "(", "alpha_blend", "=", "self", ".", "state", "[", "'alpha_blend'", "]", ".", "get", "(", ")", ",", "\n", "click_radius", "=", "self", ".", "state", "[", "'click_radius'", "]", ".", "get", "(", ")", ")", "\n", "if", "self", ".", "image_on_canvas", "is", "None", ":", "\n", "            ", "self", ".", "image_on_canvas", "=", "CanvasImage", "(", "self", ".", "canvas_frame", ",", "self", ".", "canvas", ")", "\n", "self", ".", "image_on_canvas", ".", "register_click_callback", "(", "self", ".", "_click_callback", ")", "\n", "\n", "", "self", ".", "_set_click_dependent_widgets_state", "(", ")", "\n", "if", "image", "is", "not", "None", ":", "\n", "            ", "self", ".", "image_on_canvas", ".", "reload_image", "(", "Image", ".", "fromarray", "(", "image", ")", ",", "reset_canvas", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._set_click_dependent_widgets_state": [[323, 338], ["app.InteractiveDemoApp.finish_object_button.configure", "app.InteractiveDemoApp.undo_click_button.configure", "app.InteractiveDemoApp.reset_clicks_button.configure", "app.InteractiveDemoApp.zoomin_options_frame.set_frame_state", "app.InteractiveDemoApp.brs_options_frame.set_frame_state", "app.InteractiveDemoApp.state[].get", "app.InteractiveDemoApp.net_clicks_entry.configure", "app.InteractiveDemoApp.net_clicks_label.configure", "app.InteractiveDemoApp.lbfgs_iters_entry.configure", "app.InteractiveDemoApp.lbfgs_iters_label.configure"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusLabelFrame.set_frame_state", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.FocusLabelFrame.set_frame_state"], ["", "", "def", "_set_click_dependent_widgets_state", "(", "self", ")", ":", "\n", "        ", "after_1st_click_state", "=", "tk", ".", "NORMAL", "if", "self", ".", "controller", ".", "is_incomplete_mask", "else", "tk", ".", "DISABLED", "\n", "before_1st_click_state", "=", "tk", ".", "DISABLED", "if", "self", ".", "controller", ".", "is_incomplete_mask", "else", "tk", ".", "NORMAL", "\n", "\n", "self", ".", "finish_object_button", ".", "configure", "(", "state", "=", "after_1st_click_state", ")", "\n", "self", ".", "undo_click_button", ".", "configure", "(", "state", "=", "after_1st_click_state", ")", "\n", "self", ".", "reset_clicks_button", ".", "configure", "(", "state", "=", "after_1st_click_state", ")", "\n", "self", ".", "zoomin_options_frame", ".", "set_frame_state", "(", "before_1st_click_state", ")", "\n", "self", ".", "brs_options_frame", ".", "set_frame_state", "(", "before_1st_click_state", ")", "\n", "\n", "if", "self", ".", "state", "[", "'brs_mode'", "]", ".", "get", "(", ")", "==", "'NoBRS'", ":", "\n", "            ", "self", ".", "net_clicks_entry", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "net_clicks_label", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "lbfgs_iters_entry", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "self", ".", "lbfgs_iters_label", ".", "configure", "(", "state", "=", "tk", ".", "DISABLED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry": [[339, 349], ["widget.winfo_children", "getattr", "widget._check_bounds", "app.InteractiveDemoApp._check_entry", "widget.get"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.wrappers.BoundedNumericalEntry._check_bounds", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.app.InteractiveDemoApp._check_entry"], ["", "", "def", "_check_entry", "(", "self", ",", "widget", ")", ":", "\n", "        ", "all_checked", "=", "True", "\n", "if", "widget", ".", "winfo_children", "is", "not", "None", ":", "\n", "            ", "for", "w", "in", "widget", ".", "winfo_children", "(", ")", ":", "\n", "                ", "all_checked", "=", "all_checked", "and", "self", ".", "_check_entry", "(", "w", ")", "\n", "\n", "", "", "if", "getattr", "(", "widget", ",", "\"_check_bounds\"", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "all_checked", "=", "all_checked", "and", "widget", ".", "_check_bounds", "(", "widget", ".", "get", "(", ")", ",", "'-1'", ")", "\n", "\n", "", "return", "all_checked", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.init_experiment": [[16, 100], ["pathlib.Path", "exp.get_model_family_tree", "exp.load_config", "exp.update_config", "pathlib.Path", "exp_parent_path.mkdir", "distributed.synchronize", "len", "print", "sys.exit", "torch.distributed.init_process_group", "exp.find_resume_exp", "exp.find_last_exp_indx", "distributed.synchronize", "load_config.LOGS_PATH.mkdir", "load_config.CHECKPOINTS_PATH.mkdir", "load_config.VIS_PATH.mkdir", "list", "torch.device", "torch.cuda.set_device", "torch.device", "log.add_logging", "log.logger.info", "log.logger.info", "log.logger.info", "torch.multiprocessing.set_start_method", "find_resume_exp.mkdir", "shutil.copy", "os.remove", "shutil.copy", "int", "range", "torch.cuda.device_count", "log.logger.info", "pprint.pformat", "datetime.datetime.strftime", "load_config.gpus.split", "max", "str", "datetime.datetime.today", "distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.get_model_family_tree", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.update_config", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.synchronize", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.find_resume_exp", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.find_last_exp_indx", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.synchronize", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.add_logging", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_world_size"], ["def", "init_experiment", "(", "args", ",", "model_name", ")", ":", "\n", "    ", "model_path", "=", "Path", "(", "args", ".", "model_path", ")", "\n", "ftree", "=", "get_model_family_tree", "(", "model_path", ",", "model_name", "=", "model_name", ")", "\n", "\n", "if", "ftree", "is", "None", ":", "\n", "        ", "print", "(", "'Models can only be located in the \"models\" directory in the root of the repository'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "cfg", "=", "load_config", "(", "model_path", ")", "\n", "update_config", "(", "cfg", ",", "args", ")", "\n", "\n", "cfg", ".", "distributed", "=", "args", ".", "distributed", "\n", "cfg", ".", "local_rank", "=", "args", ".", "local_rank", "\n", "if", "cfg", ".", "distributed", ":", "\n", "        ", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "'nccl'", ",", "init_method", "=", "'env://'", ")", "\n", "if", "args", ".", "workers", ">", "0", ":", "\n", "            ", "torch", ".", "multiprocessing", ".", "set_start_method", "(", "'forkserver'", ",", "force", "=", "True", ")", "\n", "\n", "", "", "experiments_path", "=", "Path", "(", "cfg", ".", "EXPS_PATH", ")", "\n", "exp_parent_path", "=", "experiments_path", "/", "'/'", ".", "join", "(", "ftree", ")", "\n", "exp_parent_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "cfg", ".", "resume_exp", ":", "\n", "        ", "exp_path", "=", "find_resume_exp", "(", "exp_parent_path", ",", "cfg", ".", "resume_exp", ")", "\n", "", "else", ":", "\n", "        ", "last_exp_indx", "=", "find_last_exp_indx", "(", "exp_parent_path", ")", "\n", "exp_name", "=", "f'{last_exp_indx:03d}'", "\n", "if", "cfg", ".", "exp_name", ":", "\n", "            ", "exp_name", "+=", "'_'", "+", "cfg", ".", "exp_name", "\n", "", "exp_path", "=", "exp_parent_path", "/", "exp_name", "\n", "synchronize", "(", ")", "\n", "if", "cfg", ".", "local_rank", "==", "0", ":", "\n", "            ", "exp_path", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "\n", "", "", "cfg", ".", "EXP_PATH", "=", "exp_path", "\n", "cfg", ".", "CHECKPOINTS_PATH", "=", "exp_path", "/", "'checkpoints'", "\n", "cfg", ".", "VIS_PATH", "=", "exp_path", "/", "'vis'", "\n", "cfg", ".", "LOGS_PATH", "=", "exp_path", "/", "'logs'", "\n", "\n", "if", "cfg", ".", "local_rank", "==", "0", ":", "\n", "        ", "cfg", ".", "LOGS_PATH", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "cfg", ".", "CHECKPOINTS_PATH", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "cfg", ".", "VIS_PATH", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "\n", "dst_script_path", "=", "exp_path", "/", "(", "model_path", ".", "stem", "+", "datetime", ".", "strftime", "(", "datetime", ".", "today", "(", ")", ",", "'_%Y-%m-%d-%H-%M-%S.py'", ")", ")", "\n", "if", "args", ".", "temp_model_path", ":", "\n", "            ", "shutil", ".", "copy", "(", "args", ".", "temp_model_path", ",", "dst_script_path", ")", "\n", "os", ".", "remove", "(", "args", ".", "temp_model_path", ")", "\n", "", "else", ":", "\n", "            ", "shutil", ".", "copy", "(", "model_path", ",", "dst_script_path", ")", "\n", "\n", "", "", "synchronize", "(", ")", "\n", "\n", "if", "cfg", ".", "gpus", "!=", "''", ":", "\n", "        ", "gpu_ids", "=", "[", "int", "(", "id", ")", "for", "id", "in", "cfg", ".", "gpus", ".", "split", "(", "','", ")", "]", "\n", "", "else", ":", "\n", "        ", "gpu_ids", "=", "list", "(", "range", "(", "max", "(", "cfg", ".", "ngpus", ",", "get_world_size", "(", ")", ")", ")", ")", "\n", "cfg", ".", "gpus", "=", "','", ".", "join", "(", "[", "str", "(", "id", ")", "for", "id", "in", "gpu_ids", "]", ")", "\n", "\n", "", "cfg", ".", "gpu_ids", "=", "gpu_ids", "\n", "cfg", ".", "ngpus", "=", "len", "(", "gpu_ids", ")", "\n", "cfg", ".", "multi_gpu", "=", "cfg", ".", "ngpus", ">", "1", "\n", "\n", "if", "cfg", ".", "distributed", ":", "\n", "        ", "cfg", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "cfg", ".", "gpu_ids", "=", "[", "cfg", ".", "gpu_ids", "[", "cfg", ".", "local_rank", "]", "]", "\n", "torch", ".", "cuda", ".", "set_device", "(", "cfg", ".", "gpu_ids", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "if", "cfg", ".", "multi_gpu", ":", "\n", "            ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "cfg", ".", "gpus", "\n", "ngpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "assert", "ngpus", "==", "cfg", ".", "ngpus", "\n", "", "cfg", ".", "device", "=", "torch", ".", "device", "(", "f'cuda:{cfg.gpu_ids[0]}'", ")", "\n", "\n", "", "if", "cfg", ".", "local_rank", "==", "0", ":", "\n", "        ", "add_logging", "(", "cfg", ".", "LOGS_PATH", ",", "prefix", "=", "'train_'", ")", "\n", "logger", ".", "info", "(", "f'Number of GPUs: {cfg.ngpus}'", ")", "\n", "if", "cfg", ".", "distributed", ":", "\n", "            ", "logger", ".", "info", "(", "f'Multi-Process Multi-GPU Distributed Training'", ")", "\n", "\n", "", "logger", ".", "info", "(", "'Run experiment with config:'", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "cfg", ",", "indent", "=", "4", ")", ")", "\n", "\n", "", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.get_model_family_tree": [[102, 114], ["family_tree.append"], "function", ["None"], ["", "def", "get_model_family_tree", "(", "model_path", ",", "terminate_name", "=", "'models'", ",", "model_name", "=", "None", ")", ":", "\n", "    ", "if", "model_name", "is", "None", ":", "\n", "        ", "model_name", "=", "model_path", ".", "stem", "\n", "", "family_tree", "=", "[", "model_name", "]", "\n", "for", "x", "in", "model_path", ".", "parents", ":", "\n", "        ", "if", "x", ".", "stem", "==", "terminate_name", ":", "\n", "            ", "break", "\n", "", "family_tree", ".", "append", "(", "x", ".", "stem", ")", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "\n", "", "return", "family_tree", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.find_last_exp_indx": [[116, 127], ["exp_parent_path.iterdir", "exp_name[].isnumeric", "x.is_dir", "max", "int"], "function", ["None"], ["", "def", "find_last_exp_indx", "(", "exp_parent_path", ")", ":", "\n", "    ", "indx", "=", "0", "\n", "for", "x", "in", "exp_parent_path", ".", "iterdir", "(", ")", ":", "\n", "        ", "if", "not", "x", ".", "is_dir", "(", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "exp_name", "=", "x", ".", "stem", "\n", "if", "exp_name", "[", ":", "3", "]", ".", "isnumeric", "(", ")", ":", "\n", "            ", "indx", "=", "max", "(", "indx", ",", "int", "(", "exp_name", "[", ":", "3", "]", ")", "+", "1", ")", "\n", "\n", "", "", "return", "indx", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.find_resume_exp": [[129, 144], ["sorted", "exp_parent_path.glob", "len", "print", "sys.exit", "len", "print", "sys.exit", "print", "print"], "function", ["None"], ["", "def", "find_resume_exp", "(", "exp_parent_path", ",", "exp_pattern", ")", ":", "\n", "    ", "candidates", "=", "sorted", "(", "exp_parent_path", ".", "glob", "(", "f'{exp_pattern}*'", ")", ")", "\n", "if", "len", "(", "candidates", ")", "==", "0", ":", "\n", "        ", "print", "(", "f'No experiments could be found that satisfies the pattern = \"*{exp_pattern}\"'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "elif", "len", "(", "candidates", ")", ">", "1", ":", "\n", "        ", "print", "(", "'More than one experiment found:'", ")", "\n", "for", "x", "in", "candidates", ":", "\n", "            ", "print", "(", "x", ")", "\n", "", "sys", ".", "exit", "(", "1", ")", "\n", "", "else", ":", "\n", "        ", "exp_path", "=", "candidates", "[", "0", "]", "\n", "print", "(", "f'Continue with experiment \"{exp_path}\"'", ")", "\n", "\n", "", "return", "exp_path", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.update_config": [[146, 151], ["vars().items", "vars", "param_name.lower", "param_name.upper"], "function", ["None"], ["", "def", "update_config", "(", "cfg", ",", "args", ")", ":", "\n", "    ", "for", "param_name", ",", "value", "in", "vars", "(", "args", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "param_name", ".", "lower", "(", ")", "in", "cfg", "or", "param_name", ".", "upper", "(", ")", "in", "cfg", ":", "\n", "            ", "continue", "\n", "", "cfg", "[", "param_name", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config": [[153, 176], ["config_path.exists", "pathlib.Path.cwd", "config_path.parent.absolute", "easydict.EasyDict", "exp.load_config_file", "dict", "len", "config_path.exists", "exp.load_config_file", "dict.update", "config_path.parent.absolute.absolute", "load_config_file.items"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "", "def", "load_config", "(", "model_path", ")", ":", "\n", "    ", "model_name", "=", "model_path", ".", "stem", "\n", "config_path", "=", "model_path", ".", "parent", "/", "(", "model_name", "+", "'.yml'", ")", "\n", "\n", "if", "config_path", ".", "exists", "(", ")", ":", "\n", "        ", "cfg", "=", "load_config_file", "(", "config_path", ")", "\n", "", "else", ":", "\n", "        ", "cfg", "=", "dict", "(", ")", "\n", "\n", "", "cwd", "=", "Path", ".", "cwd", "(", ")", "\n", "config_parent", "=", "config_path", ".", "parent", ".", "absolute", "(", ")", "\n", "while", "len", "(", "config_parent", ".", "parents", ")", ">", "0", ":", "\n", "        ", "config_path", "=", "config_parent", "/", "'config.yml'", "\n", "\n", "if", "config_path", ".", "exists", "(", ")", ":", "\n", "            ", "local_config", "=", "load_config_file", "(", "config_path", ",", "model_name", "=", "model_name", ")", "\n", "cfg", ".", "update", "(", "{", "k", ":", "v", "for", "k", ",", "v", "in", "local_config", ".", "items", "(", ")", "if", "k", "not", "in", "cfg", "}", ")", "\n", "\n", "", "if", "config_parent", ".", "absolute", "(", ")", "==", "cwd", ":", "\n", "            ", "break", "\n", "", "config_parent", "=", "config_parent", ".", "parent", "\n", "\n", "", "return", "edict", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file": [[178, 188], ["open", "yaml.safe_load", "easydict.EasyDict", "yaml.safe_load.update"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "load_config_file", "(", "config_path", ",", "model_name", "=", "None", ",", "return_edict", "=", "False", ")", ":", "\n", "    ", "with", "open", "(", "config_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "cfg", "=", "yaml", ".", "safe_load", "(", "f", ")", "\n", "\n", "", "if", "'SUBCONFIGS'", "in", "cfg", ":", "\n", "        ", "if", "model_name", "is", "not", "None", "and", "model_name", "in", "cfg", "[", "'SUBCONFIGS'", "]", ":", "\n", "            ", "cfg", ".", "update", "(", "cfg", "[", "'SUBCONFIGS'", "]", "[", "model_name", "]", ")", "\n", "", "del", "cfg", "[", "'SUBCONFIGS'", "]", "\n", "\n", "", "return", "edict", "(", "cfg", ")", "if", "return_edict", "else", "cfg", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_rank": [[6, 10], ["torch.distributed.get_rank", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_rank"], ["def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", "or", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n", "", "return", "dist", ".", "get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.synchronize": [[12, 16], ["torch.distributed.barrier", "torch.distributed.is_available", "torch.distributed.is_initialized", "torch.distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_world_size"], ["", "def", "synchronize", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", "or", "not", "dist", ".", "is_initialized", "(", ")", "or", "dist", ".", "get_world_size", "(", ")", "==", "1", ":", "\n", "        ", "return", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_world_size": [[18, 23], ["torch.distributed.get_world_size", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_world_size"], ["", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", "or", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "\n", "", "return", "dist", ".", "get_world_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.reduce_loss_dict": [[25, 48], ["distributed.get_world_size", "torch.no_grad", "loss_dict.keys", "torch.stack", "torch.distributed.reduce", "keys.append", "torch.stack.append", "torch.distributed.get_rank", "zip"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_world_size", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_rank"], ["", "def", "reduce_loss_dict", "(", "loss_dict", ")", ":", "\n", "    ", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "if", "world_size", "<", "2", ":", "\n", "        ", "return", "loss_dict", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "keys", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "\n", "for", "k", "in", "loss_dict", ".", "keys", "(", ")", ":", "\n", "            ", "keys", ".", "append", "(", "k", ")", "\n", "losses", ".", "append", "(", "loss_dict", "[", "k", "]", ")", "\n", "\n", "", "losses", "=", "torch", ".", "stack", "(", "losses", ",", "0", ")", "\n", "dist", ".", "reduce", "(", "losses", ",", "dst", "=", "0", ")", "\n", "\n", "if", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "losses", "/=", "world_size", "\n", "\n", "", "reduced_losses", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "keys", ",", "losses", ")", "}", "\n", "\n", "", "return", "reduced_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_sampler": [[50, 58], ["torch.utils.data.distributed.DistributedSampler", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler"], "function", ["None"], ["", "def", "get_sampler", "(", "dataset", ",", "shuffle", ",", "distributed", ")", ":", "\n", "    ", "if", "distributed", ":", "\n", "        ", "return", "data", ".", "distributed", ".", "DistributedSampler", "(", "dataset", ",", "shuffle", "=", "shuffle", ")", "\n", "\n", "", "if", "shuffle", ":", "\n", "        ", "return", "data", ".", "RandomSampler", "(", "dataset", ")", "\n", "", "else", ":", "\n", "        ", "return", "data", ".", "SequentialSampler", "(", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_dp_wrapper": [[60, 68], ["super().__getattr__", "getattr"], "function", ["None"], ["", "", "def", "get_dp_wrapper", "(", "distributed", ")", ":", "\n", "    ", "class", "DPWrapper", "(", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "if", "distributed", "else", "torch", ".", "nn", ".", "DataParallel", ")", ":", "\n", "        ", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "return", "super", "(", ")", ".", "__getattr__", "(", "name", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "return", "getattr", "(", "self", ".", "module", ",", "name", ")", "\n", "", "", "", "return", "DPWrapper", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion": [[7, 13], ["list", "range", "list.remove"], "function", ["None"], ["def", "get_dims_with_exclusion", "(", "dim", ",", "exclude", "=", "None", ")", ":", "\n", "    ", "dims", "=", "list", "(", "range", "(", "dim", ")", ")", "\n", "if", "exclude", "is", "not", "None", ":", "\n", "        ", "dims", ".", "remove", "(", "exclude", ")", "\n", "\n", "", "return", "dims", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.save_checkpoint": [[15, 34], ["torch.save", "checkpoints_path.exists", "checkpoints_path.mkdir", "log.logger.info", "str", "net.state_dict", "str"], "function", ["None"], ["", "def", "save_checkpoint", "(", "net", ",", "checkpoints_path", ",", "epoch", "=", "None", ",", "prefix", "=", "''", ",", "verbose", "=", "True", ",", "multi_gpu", "=", "False", ")", ":", "\n", "    ", "if", "epoch", "is", "None", ":", "\n", "        ", "checkpoint_name", "=", "'last_checkpoint.pth'", "\n", "", "else", ":", "\n", "        ", "checkpoint_name", "=", "f'{epoch:03d}.pth'", "\n", "\n", "", "if", "prefix", ":", "\n", "        ", "checkpoint_name", "=", "f'{prefix}_{checkpoint_name}'", "\n", "\n", "", "if", "not", "checkpoints_path", ".", "exists", "(", ")", ":", "\n", "        ", "checkpoints_path", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "\n", "", "checkpoint_path", "=", "checkpoints_path", "/", "checkpoint_name", "\n", "if", "verbose", ":", "\n", "        ", "logger", ".", "info", "(", "f'Save checkpoint to {str(checkpoint_path)}'", ")", "\n", "\n", "", "net", "=", "net", ".", "module", "if", "multi_gpu", "else", "net", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "net", ".", "state_dict", "(", ")", ",", "\n", "'config'", ":", "net", ".", "_config", "}", ",", "str", "(", "checkpoint_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask": [[36, 43], ["numpy.any", "numpy.any", "numpy.where", "numpy.where"], "function", ["None"], ["", "def", "get_bbox_from_mask", "(", "mask", ")", ":", "\n", "    ", "rows", "=", "np", ".", "any", "(", "mask", ",", "axis", "=", "1", ")", "\n", "cols", "=", "np", ".", "any", "(", "mask", ",", "axis", "=", "0", ")", "\n", "rmin", ",", "rmax", "=", "np", ".", "where", "(", "rows", ")", "[", "0", "]", "[", "[", "0", ",", "-", "1", "]", "]", "\n", "cmin", ",", "cmax", "=", "np", ".", "where", "(", "cols", ")", "[", "0", "]", "[", "[", "0", ",", "-", "1", "]", "]", "\n", "\n", "return", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.expand_bbox": [[45, 61], ["int", "int", "int", "int", "max", "max", "round", "round", "round", "round"], "function", ["None"], ["", "def", "expand_bbox", "(", "bbox", ",", "expand_ratio", ",", "min_crop_size", "=", "None", ")", ":", "\n", "    ", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "bbox", "\n", "rcenter", "=", "0.5", "*", "(", "rmin", "+", "rmax", ")", "\n", "ccenter", "=", "0.5", "*", "(", "cmin", "+", "cmax", ")", "\n", "height", "=", "expand_ratio", "*", "(", "rmax", "-", "rmin", "+", "1", ")", "\n", "width", "=", "expand_ratio", "*", "(", "cmax", "-", "cmin", "+", "1", ")", "\n", "if", "min_crop_size", "is", "not", "None", ":", "\n", "        ", "height", "=", "max", "(", "height", ",", "min_crop_size", ")", "\n", "width", "=", "max", "(", "width", ",", "min_crop_size", ")", "\n", "\n", "", "rmin", "=", "int", "(", "round", "(", "rcenter", "-", "0.5", "*", "height", ")", ")", "\n", "rmax", "=", "int", "(", "round", "(", "rcenter", "+", "0.5", "*", "height", ")", ")", "\n", "cmin", "=", "int", "(", "round", "(", "ccenter", "-", "0.5", "*", "width", ")", ")", "\n", "cmax", "=", "int", "(", "round", "(", "ccenter", "+", "0.5", "*", "width", ")", ")", "\n", "\n", "return", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.clamp_bbox": [[63, 66], ["max", "min", "max", "min"], "function", ["None"], ["", "def", "clamp_bbox", "(", "bbox", ",", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", ")", ":", "\n", "    ", "return", "(", "max", "(", "rmin", ",", "bbox", "[", "0", "]", ")", ",", "min", "(", "rmax", ",", "bbox", "[", "1", "]", ")", ",", "\n", "max", "(", "cmin", ",", "bbox", "[", "2", "]", ")", ",", "min", "(", "cmax", ",", "bbox", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_iou": [[68, 72], ["misc.get_segments_iou", "misc.get_segments_iou"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_segments_iou", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_segments_iou"], ["", "def", "get_bbox_iou", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "h_iou", "=", "get_segments_iou", "(", "b1", "[", ":", "2", "]", ",", "b2", "[", ":", "2", "]", ")", "\n", "w_iou", "=", "get_segments_iou", "(", "b1", "[", "2", ":", "4", "]", ",", "b2", "[", "2", ":", "4", "]", ")", "\n", "return", "h_iou", "*", "w_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_segments_iou": [[74, 80], ["max", "max", "min", "max", "max", "min"], "function", ["None"], ["", "def", "get_segments_iou", "(", "s1", ",", "s2", ")", ":", "\n", "    ", "a", ",", "b", "=", "s1", "\n", "c", ",", "d", "=", "s2", "\n", "intersection", "=", "max", "(", "0", ",", "min", "(", "b", ",", "d", ")", "-", "max", "(", "a", ",", "c", ")", "+", "1", ")", "\n", "union", "=", "max", "(", "1e-6", ",", "max", "(", "b", ",", "d", ")", "-", "min", "(", "a", ",", "c", ")", "+", "1", ")", "\n", "return", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes": [[82, 87], ["numpy.bincount", "[].tolist", "x.flatten", "obj_sizes[].tolist", "numpy.nonzero"], "function", ["None"], ["", "def", "get_labels_with_sizes", "(", "x", ")", ":", "\n", "    ", "obj_sizes", "=", "np", ".", "bincount", "(", "x", ".", "flatten", "(", ")", ")", "\n", "labels", "=", "np", ".", "nonzero", "(", "obj_sizes", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "labels", "=", "[", "x", "for", "x", "in", "labels", "if", "x", "!=", "0", "]", "\n", "return", "labels", ",", "obj_sizes", "[", "labels", "]", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.__init__": [[35, 41], ["io.StringIO.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "logger", ",", "level", "=", "None", ",", "mininterval", "=", "5", ")", ":", "\n", "        ", "super", "(", "TqdmToLogger", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "level", "=", "level", "or", "logging", ".", "INFO", "\n", "self", ".", "mininterval", "=", "mininterval", "\n", "self", ".", "last_time", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.write": [[42, 44], ["buf.strip"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "buf", ")", ":", "\n", "        ", "self", ".", "buf", "=", "buf", ".", "strip", "(", "'\\r\\n\\t '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.flush": [[45, 49], ["log.TqdmToLogger.logger.log", "time.time", "len", "time.time"], "methods", ["None"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "buf", ")", ">", "0", "and", "time", ".", "time", "(", ")", "-", "self", ".", "last_time", ">", "self", ".", "mininterval", ":", "\n", "            ", "self", ".", "logger", ".", "log", "(", "self", ".", "level", ",", "self", ".", "buf", ")", "\n", "self", ".", "last_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.__init__": [[52, 56], ["torch.utils.tensorboard.SummaryWriter.__init__", "dict"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "dump_period", "=", "20", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "_dump_period", "=", "dump_period", "\n", "self", ".", "_avg_scalars", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar": [[57, 70], ["isinstance", "super().add_scalar", "avg_scalar.add", "avg_scalar.is_full", "numpy.array", "log.ScalarAccumulator", "super().add_scalar", "avg_scalar.reset"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.add", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.is_full", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.reset"], ["", "def", "add_scalar", "(", "self", ",", "tag", ",", "value", ",", "global_step", "=", "None", ",", "disable_avg", "=", "False", ")", ":", "\n", "        ", "if", "disable_avg", "or", "isinstance", "(", "value", ",", "(", "tuple", ",", "list", ",", "dict", ")", ")", ":", "\n", "            ", "super", "(", ")", ".", "add_scalar", "(", "tag", ",", "np", ".", "array", "(", "value", ")", ",", "global_step", "=", "global_step", ")", "\n", "", "else", ":", "\n", "            ", "if", "tag", "not", "in", "self", ".", "_avg_scalars", ":", "\n", "                ", "self", ".", "_avg_scalars", "[", "tag", "]", "=", "ScalarAccumulator", "(", "self", ".", "_dump_period", ")", "\n", "", "avg_scalar", "=", "self", ".", "_avg_scalars", "[", "tag", "]", "\n", "avg_scalar", ".", "add", "(", "value", ")", "\n", "\n", "if", "avg_scalar", ".", "is_full", "(", ")", ":", "\n", "                ", "super", "(", ")", ".", "add_scalar", "(", "tag", ",", "avg_scalar", ".", "value", ",", "\n", "global_step", "=", "global_step", ")", "\n", "avg_scalar", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.__init__": [[73, 77], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "period", ")", ":", "\n", "        ", "self", ".", "sum", "=", "0", "\n", "self", ".", "cnt", "=", "0", "\n", "self", ".", "period", "=", "period", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.add": [[78, 81], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "value", "\n", "self", ".", "cnt", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.value": [[82, 88], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "value", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cnt", ">", "0", ":", "\n", "            ", "return", "self", ".", "sum", "/", "self", ".", "cnt", "\n", "", "else", ":", "\n", "            ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.reset": [[89, 92], ["None"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "cnt", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.is_full": [[93, 95], ["None"], "methods", ["None"], ["", "def", "is_full", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "cnt", ">=", "self", ".", "period", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.ScalarAccumulator.__len__": [[96, 98], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "cnt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.add_logging": [[19, 28], ["logging.FileHandler", "logging.Formatter", "logging.FileHandler.setFormatter", "logger.addHandler", "str", "datetime.datetime.strftime", "datetime.datetime.today"], "function", ["None"], ["def", "add_logging", "(", "logs_path", ",", "prefix", ")", ":", "\n", "    ", "log_name", "=", "prefix", "+", "datetime", ".", "strftime", "(", "datetime", ".", "today", "(", ")", ",", "'%Y-%m-%d_%H-%M-%S'", ")", "+", "'.log'", "\n", "stdout_log_path", "=", "logs_path", "/", "log_name", "\n", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "str", "(", "stdout_log_path", ")", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "fmt", "=", "'(%(levelname)s) %(asctime)s: %(message)s'", ",", "\n", "datefmt", "=", "LOGGER_DATEFMT", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.serialize": [[7, 42], ["list", "functools.wraps", "copy.deepcopy", "zip", "set", "get_default_params().items", "list", "setattr", "init", "inspect.signature", "serialization.get_classname", "dict", "copy.deepcopy.keys", "copy.deepcopy.items", "inspect.isclass", "serialization.get_default_params", "serialization.get_classname"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_classname", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_default_params", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_classname"], ["def", "serialize", "(", "init", ")", ":", "\n", "    ", "parameters", "=", "list", "(", "inspect", ".", "signature", "(", "init", ")", ".", "parameters", ")", "\n", "\n", "@", "wraps", "(", "init", ")", "\n", "def", "new_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "params", "=", "deepcopy", "(", "kwargs", ")", "\n", "for", "pname", ",", "value", "in", "zip", "(", "parameters", "[", "1", ":", "]", ",", "args", ")", ":", "\n", "            ", "params", "[", "pname", "]", "=", "value", "\n", "\n", "", "config", "=", "{", "\n", "'class'", ":", "get_classname", "(", "self", ".", "__class__", ")", ",", "\n", "'params'", ":", "dict", "(", ")", "\n", "}", "\n", "specified_params", "=", "set", "(", "params", ".", "keys", "(", ")", ")", "\n", "\n", "for", "pname", ",", "param", "in", "get_default_params", "(", "self", ".", "__class__", ")", ".", "items", "(", ")", ":", "\n", "            ", "if", "pname", "not", "in", "params", ":", "\n", "                ", "params", "[", "pname", "]", "=", "param", ".", "default", "\n", "\n", "", "", "for", "name", ",", "value", "in", "list", "(", "params", ".", "items", "(", ")", ")", ":", "\n", "            ", "param_type", "=", "'builtin'", "\n", "if", "inspect", ".", "isclass", "(", "value", ")", ":", "\n", "                ", "param_type", "=", "'class'", "\n", "value", "=", "get_classname", "(", "value", ")", "\n", "\n", "", "config", "[", "'params'", "]", "[", "name", "]", "=", "{", "\n", "'type'", ":", "param_type", ",", "\n", "'value'", ":", "value", ",", "\n", "'specified'", ":", "name", "in", "specified_params", "\n", "}", "\n", "\n", "", "setattr", "(", "self", ",", "'_config'", ",", "config", ")", "\n", "init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "new_init", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.load_model": [[44, 65], ["serialization.get_class_from_str", "serialization.get_default_params", "dict", "config[].items", "dict.update", "get_class_from_str.", "serialization.get_class_from_str"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_class_from_str", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_default_params", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_class_from_str"], ["", "def", "load_model", "(", "config", ",", "**", "kwargs", ")", ":", "\n", "    ", "model_class", "=", "get_class_from_str", "(", "config", "[", "'class'", "]", ")", "\n", "model_default_params", "=", "get_default_params", "(", "model_class", ")", "\n", "\n", "model_args", "=", "dict", "(", ")", "\n", "for", "pname", ",", "param", "in", "config", "[", "'params'", "]", ".", "items", "(", ")", ":", "\n", "        ", "value", "=", "param", "[", "'value'", "]", "\n", "if", "param", "[", "'type'", "]", "==", "'class'", ":", "\n", "            ", "value", "=", "get_class_from_str", "(", "value", ")", "\n", "\n", "", "if", "pname", "not", "in", "model_default_params", "and", "not", "param", "[", "'specified'", "]", ":", "\n", "            ", "continue", "\n", "\n", "", "assert", "pname", "in", "model_default_params", "\n", "if", "not", "param", "[", "'specified'", "]", "and", "model_default_params", "[", "pname", "]", ".", "default", "==", "value", ":", "\n", "            ", "continue", "\n", "", "model_args", "[", "pname", "]", "=", "value", "\n", "\n", "", "model_args", ".", "update", "(", "kwargs", ")", "\n", "\n", "return", "model_class", "(", "**", "model_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_config_repr": [[67, 78], ["config[].items", "value.split", "str"], "function", ["None"], ["", "def", "get_config_repr", "(", "config", ")", ":", "\n", "    ", "config_str", "=", "f'Model: {config[\"class\"]}\\n'", "\n", "for", "pname", ",", "param", "in", "config", "[", "'params'", "]", ".", "items", "(", ")", ":", "\n", "        ", "value", "=", "param", "[", "\"value\"", "]", "\n", "if", "param", "[", "'type'", "]", "==", "'class'", ":", "\n", "            ", "value", "=", "value", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "\n", "", "param_str", "=", "f'{pname:<22} = {str(value):<12}'", "\n", "if", "not", "param", "[", "'specified'", "]", ":", "\n", "            ", "param_str", "+=", "' (default)'", "\n", "", "config_str", "+=", "param_str", "+", "'\\n'", "\n", "", "return", "config_str", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_default_params": [[80, 92], ["dict", "some_class.mro", "mclass_params.items", "inspect.signature"], "function", ["None"], ["", "def", "get_default_params", "(", "some_class", ")", ":", "\n", "    ", "params", "=", "dict", "(", ")", "\n", "for", "mclass", "in", "some_class", ".", "mro", "(", ")", ":", "\n", "        ", "if", "mclass", "is", "nn", ".", "Module", "or", "mclass", "is", "object", ":", "\n", "            ", "continue", "\n", "\n", "", "mclass_params", "=", "inspect", ".", "signature", "(", "mclass", ".", "__init__", ")", ".", "parameters", "\n", "for", "pname", ",", "param", "in", "mclass_params", ".", "items", "(", ")", ":", "\n", "            ", "if", "param", ".", "default", "!=", "param", ".", "empty", "and", "pname", "not", "in", "params", ":", "\n", "                ", "params", "[", "pname", "]", "=", "param", "\n", "\n", "", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_classname": [[94, 100], ["None"], "function", ["None"], ["", "def", "get_classname", "(", "cls", ")", ":", "\n", "    ", "module", "=", "cls", ".", "__module__", "\n", "name", "=", "cls", ".", "__qualname__", "\n", "if", "module", "is", "not", "None", "and", "module", "!=", "\"__builtin__\"", ":", "\n", "        ", "name", "=", "module", "+", "\".\"", "+", "name", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_class_from_str": [[102, 108], ["class_str.split", "__import__", "getattr"], "function", ["None"], ["", "def", "get_class_from_str", "(", "class_str", ")", ":", "\n", "    ", "components", "=", "class_str", ".", "split", "(", "'.'", ")", "\n", "mod", "=", "__import__", "(", "'.'", ".", "join", "(", "components", "[", ":", "-", "1", "]", ")", ")", "\n", "for", "comp", "in", "components", "[", "1", ":", "]", ":", "\n", "        ", "mod", "=", "getattr", "(", "mod", ",", "comp", ")", "\n", "", "return", "mod", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.visualize_instances": [[7, 23], ["vis.get_palette", "palette[].astype", "imask.max", "vis.get_boundaries", "tresult.astype.astype", "result.astype.astype"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_palette", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_boundaries"], ["def", "visualize_instances", "(", "imask", ",", "bg_color", "=", "255", ",", "\n", "boundaries_color", "=", "None", ",", "boundaries_width", "=", "1", ",", "boundaries_alpha", "=", "0.8", ")", ":", "\n", "    ", "num_objects", "=", "imask", ".", "max", "(", ")", "+", "1", "\n", "palette", "=", "get_palette", "(", "num_objects", ")", "\n", "if", "bg_color", "is", "not", "None", ":", "\n", "        ", "palette", "[", "0", "]", "=", "bg_color", "\n", "\n", "", "result", "=", "palette", "[", "imask", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "boundaries_color", "is", "not", "None", ":", "\n", "        ", "boundaries_mask", "=", "get_boundaries", "(", "imask", ",", "boundaries_width", "=", "boundaries_width", ")", "\n", "tresult", "=", "result", ".", "astype", "(", "np", ".", "float32", ")", "\n", "tresult", "[", "boundaries_mask", "]", "=", "boundaries_color", "\n", "tresult", "=", "tresult", "*", "boundaries_alpha", "+", "(", "1", "-", "boundaries_alpha", ")", "*", "result", "\n", "result", "=", "tresult", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_palette": [[25, 41], ["functools.lru_cache", "numpy.zeros", "range", "np.zeros.reshape"], "function", ["None"], ["", "@", "lru_cache", "(", "maxsize", "=", "16", ")", "\n", "def", "get_palette", "(", "num_cls", ")", ":", "\n", "    ", "palette", "=", "np", ".", "zeros", "(", "3", "*", "num_cls", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "num_cls", ")", ":", "\n", "        ", "lab", "=", "j", "\n", "i", "=", "0", "\n", "\n", "while", "lab", ">", "0", ":", "\n", "            ", "palette", "[", "j", "*", "3", "+", "0", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "palette", "[", "j", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "palette", "[", "j", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "i", "=", "i", "+", "1", "\n", "lab", ">>=", "3", "\n", "\n", "", "", "return", "palette", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.visualize_mask": [[43, 48], ["vis.get_palette", "palette[].astype"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_palette"], ["", "def", "visualize_mask", "(", "mask", ",", "num_cls", ")", ":", "\n", "    ", "palette", "=", "get_palette", "(", "num_cls", ")", "\n", "mask", "[", "mask", "==", "-", "1", "]", "=", "0", "\n", "\n", "return", "palette", "[", "mask", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.visualize_proposals": [[50, 58], ["vis.draw_probmap", "cv2.circle"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_probmap"], ["", "def", "visualize_proposals", "(", "proposals_info", ",", "point_color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "point_radius", "=", "1", ")", ":", "\n", "    ", "proposal_map", ",", "colors", ",", "candidates", "=", "proposals_info", "\n", "\n", "proposal_map", "=", "draw_probmap", "(", "proposal_map", ")", "\n", "for", "x", ",", "y", "in", "candidates", ":", "\n", "        ", "proposal_map", "=", "cv2", ".", "circle", "(", "proposal_map", ",", "(", "y", ",", "x", ")", ",", "point_radius", ",", "point_color", ",", "-", "1", ")", "\n", "\n", "", "return", "proposal_map", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_probmap": [[60, 62], ["cv2.applyColorMap"], "function", ["None"], ["", "def", "draw_probmap", "(", "x", ")", ":", "\n", "    ", "return", "cv2", ".", "applyColorMap", "(", "(", "x", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "COLORMAP_HOT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_points": [[64, 76], ["cv2.circle.copy", "cv2.circle", "len", "int", "int", "numpy.np.uint8"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "def", "draw_points", "(", "image", ",", "points", ",", "color", ",", "radius", "=", "3", ")", ":", "\n", "    ", "image", "=", "image", ".", "copy", "(", ")", "\n", "for", "p", "in", "points", ":", "\n", "        ", "if", "p", "[", "0", "]", "<", "0", ":", "\n", "            ", "continue", "\n", "", "if", "len", "(", "p", ")", "==", "3", ":", "\n", "            ", "pradius", "=", "{", "0", ":", "8", ",", "1", ":", "6", ",", "2", ":", "4", "}", "[", "p", "[", "2", "]", "]", "if", "p", "[", "2", "]", "<", "3", "else", "2", "\n", "", "else", ":", "\n", "            ", "pradius", "=", "radius", "\n", "", "image", "=", "cv2", ".", "circle", "(", "image", ",", "(", "int", "(", "p", "[", "1", "]", ")", ",", "int", "(", "p", "[", "0", "]", ")", ")", ",", "pradius", ",", "color", ",", "-", "1", ")", "\n", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_instance_map": [[78, 84], ["palette[].astype", "x.max", "vis.get_palette"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_palette"], ["", "def", "draw_instance_map", "(", "x", ",", "palette", "=", "None", ")", ":", "\n", "    ", "num_colors", "=", "x", ".", "max", "(", ")", "+", "1", "\n", "if", "palette", "is", "None", ":", "\n", "        ", "palette", "=", "get_palette", "(", "num_colors", ")", "\n", "\n", "", "return", "palette", "[", "x", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.blend_mask": [[86, 93], ["vis.draw_instance_map", "mask.min", "mask.copy"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_instance_map", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "def", "blend_mask", "(", "image", ",", "mask", ",", "alpha", "=", "0.6", ")", ":", "\n", "    ", "if", "mask", ".", "min", "(", ")", "==", "-", "1", ":", "\n", "        ", "mask", "=", "mask", ".", "copy", "(", ")", "+", "1", "\n", "\n", "", "imap", "=", "draw_instance_map", "(", "mask", ")", "\n", "result", "=", "(", "image", "*", "(", "1", "-", "alpha", ")", "+", "alpha", "*", "imap", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_boundaries": [[95, 109], ["numpy.zeros", "numpy.unique", "instances_masks.flatten", "cv2.getStructuringElement", "cv2.erode().astype", "numpy.logical_xor", "numpy.logical_or", "numpy.logical_and", "cv2.erode", "obj_mask.astype"], "function", ["None"], ["", "def", "get_boundaries", "(", "instances_masks", ",", "boundaries_width", "=", "1", ")", ":", "\n", "    ", "boundaries", "=", "np", ".", "zeros", "(", "(", "instances_masks", ".", "shape", "[", "0", "]", ",", "instances_masks", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n", "for", "obj_id", "in", "np", ".", "unique", "(", "instances_masks", ".", "flatten", "(", ")", ")", ":", "\n", "        ", "if", "obj_id", "==", "0", ":", "\n", "            ", "continue", "\n", "\n", "", "obj_mask", "=", "instances_masks", "==", "obj_id", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "3", ",", "3", ")", ")", "\n", "inner_mask", "=", "cv2", ".", "erode", "(", "obj_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "kernel", ",", "iterations", "=", "boundaries_width", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "\n", "obj_boundary", "=", "np", ".", "logical_xor", "(", "obj_mask", ",", "np", ".", "logical_and", "(", "inner_mask", ",", "obj_mask", ")", ")", "\n", "boundaries", "=", "np", ".", "logical_or", "(", "boundaries", ",", "obj_boundary", ")", "\n", "", "return", "boundaries", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_with_blend_and_clicks": [[111, 135], ["img.copy", "vis.get_palette", "draw_points.astype", "vis.draw_points", "vis.draw_points", "len", "numpy.max", "mask.astype"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.get_palette", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_points"], ["", "def", "draw_with_blend_and_clicks", "(", "img", ",", "mask", "=", "None", ",", "alpha", "=", "0.6", ",", "clicks_list", "=", "None", ",", "pos_color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "neg_color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "radius", "=", "4", ")", ":", "\n", "    ", "result", "=", "img", ".", "copy", "(", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "palette", "=", "get_palette", "(", "np", ".", "max", "(", "mask", ")", "+", "1", ")", "\n", "rgb_mask", "=", "palette", "[", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "]", "\n", "\n", "mask_region", "=", "(", "mask", ">", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "result", "=", "result", "*", "(", "1", "-", "mask_region", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", "+", "(", "1", "-", "alpha", ")", "*", "mask_region", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "*", "result", "+", "alpha", "*", "rgb_mask", "\n", "result", "=", "result", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "# result = (result * (1 - alpha) + alpha * rgb_mask).astype(np.uint8)", "\n", "\n", "", "if", "clicks_list", "is", "not", "None", "and", "len", "(", "clicks_list", ")", ">", "0", ":", "\n", "        ", "pos_points", "=", "[", "click", ".", "coords", "for", "click", "in", "clicks_list", "if", "click", ".", "is_positive", "]", "\n", "neg_points", "=", "[", "click", ".", "coords", "for", "click", "in", "clicks_list", "if", "not", "click", ".", "is_positive", "]", "\n", "\n", "result", "=", "draw_points", "(", "result", ",", "pos_points", ",", "pos_color", ",", "radius", "=", "radius", ")", "\n", "result", "=", "draw_points", "(", "result", ",", "neg_points", ",", "neg_color", ",", "radius", "=", "radius", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cython._get_dist_maps.make_ext": [[3, 8], ["Extension", "numpy.get_include"], "function", ["None"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.BilinearConvTranspose2d.__init__": [[22, 35], ["torch.nn.ConvTranspose2d.__init__", "ops.BilinearConvTranspose2d.apply", "isegm.Bilinear"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "scale", ",", "groups", "=", "1", ")", ":", "\n", "        ", "kernel_size", "=", "2", "*", "scale", "-", "scale", "%", "2", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "scale", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "groups", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "apply", "(", "initializer", ".", "Bilinear", "(", "scale", "=", "scale", ",", "in_channels", "=", "in_channels", ",", "groups", "=", "groups", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.DistMaps.__init__": [[38, 47], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "norm_radius", ",", "spatial_scale", "=", "1.0", ",", "cpu_mode", "=", "False", ",", "use_disks", "=", "False", ")", ":", "\n", "        ", "super", "(", "DistMaps", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "spatial_scale", "=", "spatial_scale", "\n", "self", ".", "norm_radius", "=", "norm_radius", "\n", "self", ".", "cpu_mode", "=", "cpu_mode", "\n", "self", ".", "use_disks", "=", "use_disks", "\n", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "from", "isegm", ".", "utils", ".", "cython", "import", "get_dist_maps", "\n", "self", ".", "_get_dist_maps", "=", "get_dist_maps", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.DistMaps.get_coord_features": [[48, 89], ["range", "torch.from_numpy().to().float", "points.view.view.view", "torch.split", "torch.arange", "torch.arange", "torch.meshgrid", "torch.stack().unsqueeze().repeat", "coords.view.view.add_", "coords.view.view.mul_", "coords.view.view.view", "coords.view.view.view", "coords.view.view.sqrt_().mul_().tanh_", "coords.view.view.append", "points.view.view.size", "points.view.view.size", "points.view.view.size", "points.view.view.size", "coords.view.view.div_", "coords.view.view.min", "ops.DistMaps._get_dist_maps", "torch.from_numpy().to", "torch.max", "torch.stack().unsqueeze", "coords.view.view.sqrt_().mul_", "points[].cpu().float().numpy", "torch.from_numpy", "torch.stack", "coords.view.view.sqrt_", "points[].cpu().float", "numpy.stack", "points[].cpu"], "methods", ["None"], ["", "", "def", "get_coord_features", "(", "self", ",", "points", ",", "batchsize", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "coords", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batchsize", ")", ":", "\n", "                ", "norm_delimeter", "=", "1.0", "if", "self", ".", "use_disks", "else", "self", ".", "spatial_scale", "*", "self", ".", "norm_radius", "\n", "coords", ".", "append", "(", "self", ".", "_get_dist_maps", "(", "points", "[", "i", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", ",", "rows", ",", "cols", ",", "\n", "norm_delimeter", ")", ")", "\n", "", "coords", "=", "torch", ".", "from_numpy", "(", "np", ".", "stack", "(", "coords", ",", "axis", "=", "0", ")", ")", ".", "to", "(", "points", ".", "device", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "num_points", "=", "points", ".", "shape", "[", "1", "]", "//", "2", "\n", "points", "=", "points", ".", "view", "(", "-", "1", ",", "points", ".", "size", "(", "2", ")", ")", "\n", "points", ",", "points_order", "=", "torch", ".", "split", "(", "points", ",", "[", "2", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "invalid_points", "=", "torch", ".", "max", "(", "points", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "<", "0", "\n", "row_array", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "rows", ",", "step", "=", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "points", ".", "device", ")", "\n", "col_array", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "cols", ",", "step", "=", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "points", ".", "device", ")", "\n", "\n", "coord_rows", ",", "coord_cols", "=", "torch", ".", "meshgrid", "(", "row_array", ",", "col_array", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "(", "coord_rows", ",", "coord_cols", ")", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "points", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "add_xy", "=", "(", "points", "*", "self", ".", "spatial_scale", ")", ".", "view", "(", "points", ".", "size", "(", "0", ")", ",", "points", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "\n", "coords", ".", "add_", "(", "-", "add_xy", ")", "\n", "if", "not", "self", ".", "use_disks", ":", "\n", "                ", "coords", ".", "div_", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "\n", "", "coords", ".", "mul_", "(", "coords", ")", "\n", "\n", "coords", "[", ":", ",", "0", "]", "+=", "coords", "[", ":", ",", "1", "]", "\n", "coords", "=", "coords", "[", ":", ",", ":", "1", "]", "\n", "\n", "coords", "[", "invalid_points", ",", ":", ",", ":", ",", ":", "]", "=", "1e6", "\n", "\n", "coords", "=", "coords", ".", "view", "(", "-", "1", ",", "num_points", ",", "1", ",", "rows", ",", "cols", ")", "\n", "coords", "=", "coords", ".", "min", "(", "dim", "=", "1", ")", "[", "0", "]", "# -> (bs * num_masks * 2) x 1 x h x w", "\n", "coords", "=", "coords", ".", "view", "(", "-", "1", ",", "2", ",", "rows", ",", "cols", ")", "\n", "\n", "", "if", "self", ".", "use_disks", ":", "\n", "            ", "coords", "=", "(", "coords", "<=", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "**", "2", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "coords", ".", "sqrt_", "(", ")", ".", "mul_", "(", "2", ")", ".", "tanh_", "(", ")", "\n", "\n", "", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.DistMaps.forward": [[90, 92], ["ops.DistMaps.get_coord_features"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features"], ["", "def", "forward", "(", "self", ",", "x", ",", "coords", ")", ":", "\n", "        ", "return", "self", ".", "get_coord_features", "(", "coords", ",", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.ScaleLayer.__init__": [[95, 100], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.full"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1.0", ",", "lr_mult", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lr_mult", "=", "lr_mult", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "full", "(", "(", "1", ",", ")", ",", "init_value", "/", "lr_mult", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.ScaleLayer.forward": [[102, 105], ["torch.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "scale", "=", "torch", ".", "abs", "(", "self", ".", "scale", "*", "self", ".", "lr_mult", ")", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.BatchImageNormalize.__init__": [[108, 111], ["torch.as_tensor", "torch.as_tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ",", "dtype", "=", "torch", ".", "float", ")", ":", "\n", "        ", "self", ".", "mean", "=", "torch", ".", "as_tensor", "(", "mean", ",", "dtype", "=", "dtype", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", "\n", "self", ".", "std", "=", "torch", ".", "as_tensor", "(", "std", ",", "dtype", "=", "dtype", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.BatchImageNormalize.__call__": [[112, 117], ["tensor.clone.clone.clone", "tensor.clone.clone.sub_().div_", "ops.BatchImageNormalize.std.to", "tensor.clone.clone.sub_", "ops.BatchImageNormalize.mean.to"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "tensor", "=", "tensor", ".", "clone", "(", ")", "\n", "\n", "tensor", ".", "sub_", "(", "self", ".", "mean", ".", "to", "(", "tensor", ".", "device", ")", ")", ".", "div_", "(", "self", ".", "std", ".", "to", "(", "tensor", ".", "device", ")", ")", "\n", "return", "tensor", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.select_activation_function": [[7, 19], ["isinstance", "isinstance", "activation.lower", "ValueError", "activation.lower", "ValueError"], "function", ["None"], ["def", "select_activation_function", "(", "activation", ")", ":", "\n", "    ", "if", "isinstance", "(", "activation", ",", "str", ")", ":", "\n", "        ", "if", "activation", ".", "lower", "(", ")", "==", "'relu'", ":", "\n", "            ", "return", "nn", ".", "ReLU", "\n", "", "elif", "activation", ".", "lower", "(", ")", "==", "'softplus'", ":", "\n", "            ", "return", "nn", ".", "Softplus", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Unknown activation type {activation}\"", ")", "\n", "", "", "elif", "isinstance", "(", "activation", ",", "nn", ".", "Module", ")", ":", "\n", "        ", "return", "activation", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"Unknown activation type {activation}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.__init__": [[10, 60], ["torch.Module.__init__", "isegm.model.ops.BatchImageNormalize", "len", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "isegm.model.ops.DistMaps", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "is_model.ISModel.maps_transform.apply", "torch.Sequential", "torch.Sequential", "is_model.ISModel.dist_maps.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ReLU", "torch.ReLU", "isegm.model.modifiers.LRMult", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "isegm.model.ops.ScaleLayer", "isegm.model.ops.DistMaps", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply"], ["    ", "def", "__init__", "(", "self", ",", "use_rgb_conv", "=", "True", ",", "with_aux_output", "=", "False", ",", "\n", "norm_radius", "=", "260", ",", "use_disks", "=", "False", ",", "cpu_dist_maps", "=", "False", ",", "\n", "clicks_groups", "=", "None", ",", "with_prev_mask", "=", "False", ",", "use_leaky_relu", "=", "False", ",", "\n", "binary_prev_mask", "=", "False", ",", "conv_extend", "=", "False", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", "norm_mean_std", "=", "(", "[", ".485", ",", ".456", ",", ".406", "]", ",", "[", ".229", ",", ".224", ",", ".225", "]", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_aux_output", "=", "with_aux_output", "\n", "self", ".", "clicks_groups", "=", "clicks_groups", "\n", "self", ".", "with_prev_mask", "=", "with_prev_mask", "\n", "self", ".", "binary_prev_mask", "=", "binary_prev_mask", "\n", "self", ".", "normalization", "=", "BatchImageNormalize", "(", "norm_mean_std", "[", "0", "]", ",", "norm_mean_std", "[", "1", "]", ")", "\n", "\n", "self", ".", "coord_feature_ch", "=", "2", "\n", "if", "clicks_groups", "is", "not", "None", ":", "\n", "            ", "self", ".", "coord_feature_ch", "*=", "len", "(", "clicks_groups", ")", "\n", "\n", "", "if", "self", ".", "with_prev_mask", ":", "\n", "            ", "self", ".", "coord_feature_ch", "+=", "1", "\n", "\n", "", "if", "use_rgb_conv", ":", "\n", "            ", "rgb_conv_layers", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", "+", "self", ".", "coord_feature_ch", ",", "out_channels", "=", "6", "+", "self", ".", "coord_feature_ch", ",", "kernel_size", "=", "1", ")", ",", "\n", "norm_layer", "(", "6", "+", "self", ".", "coord_feature_ch", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "if", "use_leaky_relu", "else", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "6", "+", "self", ".", "coord_feature_ch", ",", "out_channels", "=", "3", ",", "kernel_size", "=", "1", ")", "\n", "]", "\n", "self", ".", "rgb_conv", "=", "nn", ".", "Sequential", "(", "*", "rgb_conv_layers", ")", "\n", "", "elif", "conv_extend", ":", "\n", "            ", "self", ".", "rgb_conv", "=", "None", "\n", "self", ".", "maps_transform", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "coord_feature_ch", ",", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "maps_transform", ".", "apply", "(", "LRMult", "(", "0.1", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "rgb_conv", "=", "None", "\n", "mt_layers", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "coord_feature_ch", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "if", "use_leaky_relu", "else", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "16", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "ScaleLayer", "(", "init_value", "=", "0.05", ",", "lr_mult", "=", "1", ")", "\n", "]", "\n", "self", ".", "maps_transform", "=", "nn", ".", "Sequential", "(", "*", "mt_layers", ")", "\n", "\n", "", "if", "self", ".", "clicks_groups", "is", "not", "None", ":", "\n", "            ", "self", ".", "dist_maps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "click_radius", "in", "self", ".", "clicks_groups", ":", "\n", "                ", "self", ".", "dist_maps", ".", "append", "(", "DistMaps", "(", "norm_radius", "=", "click_radius", ",", "spatial_scale", "=", "1.0", ",", "\n", "cpu_mode", "=", "cpu_dist_maps", ",", "use_disks", "=", "use_disks", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "dist_maps", "=", "DistMaps", "(", "norm_radius", "=", "norm_radius", ",", "spatial_scale", "=", "1.0", ",", "\n", "cpu_mode", "=", "cpu_dist_maps", ",", "use_disks", "=", "use_disks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.forward": [[61, 79], ["is_model.ISModel.prepare_input", "is_model.ISModel.get_coord_features", "torch.functional.interpolate", "torch.functional.interpolate", "is_model.ISModel.rgb_conv", "is_model.ISModel.backbone_forward", "is_model.ISModel.maps_transform", "is_model.ISModel.backbone_forward", "torch.functional.interpolate", "torch.functional.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "image.size", "image.size"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.prepare_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_deeplab_model.DeeplabModel.backbone_forward", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_deeplab_model.DeeplabModel.backbone_forward"], ["", "", "def", "forward", "(", "self", ",", "image", ",", "points", ")", ":", "\n", "        ", "image", ",", "prev_mask", "=", "self", ".", "prepare_input", "(", "image", ")", "\n", "coord_features", "=", "self", ".", "get_coord_features", "(", "image", ",", "prev_mask", ",", "points", ")", "\n", "\n", "if", "self", ".", "rgb_conv", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "rgb_conv", "(", "torch", ".", "cat", "(", "(", "image", ",", "coord_features", ")", ",", "dim", "=", "1", ")", ")", "\n", "outputs", "=", "self", ".", "backbone_forward", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "coord_features", "=", "self", ".", "maps_transform", "(", "coord_features", ")", "\n", "outputs", "=", "self", ".", "backbone_forward", "(", "image", ",", "coord_features", ")", "\n", "\n", "", "outputs", "[", "'instances'", "]", "=", "nn", ".", "functional", ".", "interpolate", "(", "outputs", "[", "'instances'", "]", ",", "size", "=", "image", ".", "size", "(", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "if", "self", ".", "with_aux_output", ":", "\n", "            ", "outputs", "[", "'instances_aux'", "]", "=", "nn", ".", "functional", ".", "interpolate", "(", "outputs", "[", "'instances_aux'", "]", ",", "size", "=", "image", ".", "size", "(", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.prepare_input": [[80, 90], ["is_model.ISModel.normalization"], "methods", ["None"], ["", "def", "prepare_input", "(", "self", ",", "image", ")", ":", "\n", "        ", "prev_mask", "=", "None", "\n", "if", "self", ".", "with_prev_mask", ":", "\n", "            ", "prev_mask", "=", "image", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", "\n", "image", "=", "image", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "if", "self", ".", "binary_prev_mask", ":", "\n", "                ", "prev_mask", "=", "(", "prev_mask", ">", "0.5", ")", ".", "float", "(", ")", "\n", "\n", "", "", "image", "=", "self", ".", "normalization", "(", "image", ")", "\n", "return", "image", ",", "prev_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.backbone_forward": [[91, 93], ["None"], "methods", ["None"], ["", "def", "backbone_forward", "(", "self", ",", "image", ",", "coord_features", "=", "None", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features": [[94, 106], ["is_model.split_points_by_order", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "is_model.ISModel.dist_maps", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dist_map", "zip", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.split_points_by_order"], ["", "def", "get_coord_features", "(", "self", ",", "image", ",", "prev_mask", ",", "points", ")", ":", "\n", "        ", "if", "self", ".", "clicks_groups", "is", "not", "None", ":", "\n", "            ", "points_groups", "=", "split_points_by_order", "(", "points", ",", "groups", "=", "(", "2", ",", ")", "+", "(", "1", ",", ")", "*", "(", "len", "(", "self", ".", "clicks_groups", ")", "-", "2", ")", "+", "(", "-", "1", ",", ")", ")", "\n", "coord_features", "=", "[", "dist_map", "(", "image", ",", "pg", ")", "for", "dist_map", ",", "pg", "in", "zip", "(", "self", ".", "dist_maps", ",", "points_groups", ")", "]", "\n", "coord_features", "=", "torch", ".", "cat", "(", "coord_features", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "coord_features", "=", "self", ".", "dist_maps", "(", "image", ",", "points", ")", "\n", "\n", "", "if", "prev_mask", "is", "not", "None", ":", "\n", "            ", "coord_features", "=", "torch", ".", "cat", "(", "(", "prev_mask", ",", "coord_features", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "return", "coord_features", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.split_points_by_order": [[108, 142], ["tpoints.cpu().numpy", "len", "numpy.zeros", "enumerate", "range", "numpy.full", "range", "torch.tensor", "torch.tensor", "tpoints.cpu", "int", "int"], "function", ["None"], ["", "", "def", "split_points_by_order", "(", "tpoints", ":", "torch", ".", "Tensor", ",", "groups", ")", ":", "\n", "    ", "points", "=", "tpoints", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "num_groups", "=", "len", "(", "groups", ")", "\n", "bs", "=", "points", ".", "shape", "[", "0", "]", "\n", "num_points", "=", "points", ".", "shape", "[", "1", "]", "//", "2", "\n", "\n", "groups", "=", "[", "x", "if", "x", ">", "0", "else", "num_points", "for", "x", "in", "groups", "]", "\n", "group_points", "=", "[", "np", ".", "full", "(", "(", "bs", ",", "2", "*", "x", ",", "3", ")", ",", "-", "1", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "x", "in", "groups", "]", "\n", "\n", "last_point_indx_group", "=", "np", ".", "zeros", "(", "(", "bs", ",", "num_groups", ",", "2", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "group_indx", ",", "group_size", "in", "enumerate", "(", "groups", ")", ":", "\n", "        ", "last_point_indx_group", "[", ":", ",", "group_indx", ",", "1", "]", "=", "group_size", "\n", "\n", "", "for", "bindx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "for", "pindx", "in", "range", "(", "2", "*", "num_points", ")", ":", "\n", "            ", "point", "=", "points", "[", "bindx", ",", "pindx", ",", ":", "]", "\n", "group_id", "=", "int", "(", "point", "[", "2", "]", ")", "\n", "if", "group_id", "<", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "is_negative", "=", "int", "(", "pindx", ">=", "num_points", ")", "\n", "if", "group_id", ">=", "num_groups", "or", "(", "group_id", "==", "0", "and", "is_negative", ")", ":", "# disable negative first click", "\n", "                ", "group_id", "=", "num_groups", "-", "1", "\n", "\n", "", "new_point_indx", "=", "last_point_indx_group", "[", "bindx", ",", "group_id", ",", "is_negative", "]", "\n", "last_point_indx_group", "[", "bindx", ",", "group_id", ",", "is_negative", "]", "+=", "1", "\n", "\n", "group_points", "[", "group_id", "]", "[", "bindx", ",", "new_point_indx", ",", ":", "]", "=", "point", "\n", "\n", "", "", "group_points", "=", "[", "torch", ".", "tensor", "(", "x", ",", "dtype", "=", "tpoints", ".", "dtype", ",", "device", "=", "tpoints", ".", "device", ")", "\n", "for", "x", "in", "group_points", "]", "\n", "\n", "return", "group_points", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pred_outputs", ",", "gt_outputs", ")", ":", "\n", "        ", "self", ".", "pred_outputs", "=", "pred_outputs", "\n", "self", ".", "gt_outputs", "=", "gt_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.update": [[12, 14], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.get_epoch_value": [[15, 17], ["None"], "methods", ["None"], ["", "def", "get_epoch_value", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.reset_epoch_stats": [[18, 20], ["None"], "methods", ["None"], ["", "def", "reset_epoch_stats", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.log_states": [[21, 23], ["None"], "methods", ["None"], ["", "def", "log_states", "(", "self", ",", "sw", ",", "tag_prefix", ",", "global_step", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.TrainMetric.name": [[24, 27], ["type"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "type", "(", "self", ")", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.__init__": [[30, 43], ["metrics.TrainMetric.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_thresh", "=", "0.4", ",", "thresh_step", "=", "0.025", ",", "thresh_beta", "=", "0.99", ",", "iou_beta", "=", "0.9", ",", "\n", "ignore_label", "=", "-", "1", ",", "from_logits", "=", "True", ",", "\n", "pred_output", "=", "'instances'", ",", "gt_output", "=", "'instances'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "pred_outputs", "=", "(", "pred_output", ",", ")", ",", "gt_outputs", "=", "(", "gt_output", ",", ")", ")", "\n", "self", ".", "_ignore_label", "=", "ignore_label", "\n", "self", ".", "_from_logits", "=", "from_logits", "\n", "self", ".", "_iou_thresh", "=", "init_thresh", "\n", "self", ".", "_thresh_step", "=", "thresh_step", "\n", "self", ".", "_thresh_beta", "=", "thresh_beta", "\n", "self", ".", "_iou_beta", "=", "iou_beta", "\n", "self", ".", "_ema_iou", "=", "0.0", "\n", "self", ".", "_epoch_iou_sum", "=", "0.0", "\n", "self", ".", "_epoch_batch_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update": [[44, 66], ["torch.sum().detach().cpu().numpy", "numpy.all", "_compute_iou().mean", "torch.sigmoid", "_compute_iou().mean", "torch.sum().detach().cpu", "metrics._compute_iou", "metrics._compute_iou", "torch.sum().detach", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics._compute_iou", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics._compute_iou"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "gt_mask", "=", "gt", ">", "0.5", "\n", "if", "self", ".", "_from_logits", ":", "\n", "            ", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "", "gt_mask_area", "=", "torch", ".", "sum", "(", "gt_mask", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "np", ".", "all", "(", "gt_mask_area", "==", "0", ")", ":", "\n", "            ", "return", "\n", "\n", "", "ignore_mask", "=", "gt", "==", "self", ".", "_ignore_label", "\n", "max_iou", "=", "_compute_iou", "(", "pred", ">", "self", ".", "_iou_thresh", ",", "gt_mask", ",", "ignore_mask", ")", ".", "mean", "(", ")", "\n", "best_thresh", "=", "self", ".", "_iou_thresh", "\n", "for", "t", "in", "[", "best_thresh", "-", "self", ".", "_thresh_step", ",", "best_thresh", "+", "self", ".", "_thresh_step", "]", ":", "\n", "            ", "temp_iou", "=", "_compute_iou", "(", "pred", ">", "t", ",", "gt_mask", ",", "ignore_mask", ")", ".", "mean", "(", ")", "\n", "if", "temp_iou", ">", "max_iou", ":", "\n", "                ", "max_iou", "=", "temp_iou", "\n", "best_thresh", "=", "t", "\n", "\n", "", "", "self", ".", "_iou_thresh", "=", "self", ".", "_thresh_beta", "*", "self", ".", "_iou_thresh", "+", "(", "1", "-", "self", ".", "_thresh_beta", ")", "*", "best_thresh", "\n", "self", ".", "_ema_iou", "=", "self", ".", "_iou_beta", "*", "self", ".", "_ema_iou", "+", "(", "1", "-", "self", ".", "_iou_beta", ")", "*", "max_iou", "\n", "self", ".", "_epoch_iou_sum", "+=", "max_iou", "\n", "self", ".", "_epoch_batch_count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.get_epoch_value": [[67, 72], ["None"], "methods", ["None"], ["", "def", "get_epoch_value", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_epoch_batch_count", ">", "0", ":", "\n", "            ", "return", "self", ".", "_epoch_iou_sum", "/", "self", ".", "_epoch_batch_count", "\n", "", "else", ":", "\n", "            ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.reset_epoch_stats": [[73, 76], ["None"], "methods", ["None"], ["", "", "def", "reset_epoch_stats", "(", "self", ")", ":", "\n", "        ", "self", ".", "_epoch_iou_sum", "=", "0.0", "\n", "self", ".", "_epoch_batch_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.log_states": [[77, 80], ["sw.add_scalar", "sw.add_scalar"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar"], ["", "def", "log_states", "(", "self", ",", "sw", ",", "tag_prefix", ",", "global_step", ")", ":", "\n", "        ", "sw", ".", "add_scalar", "(", "tag", "=", "tag_prefix", "+", "'_ema_iou'", ",", "value", "=", "self", ".", "_ema_iou", ",", "global_step", "=", "global_step", ")", "\n", "sw", ".", "add_scalar", "(", "tag", "=", "tag_prefix", "+", "'_iou_thresh'", ",", "value", "=", "self", ".", "_iou_thresh", ",", "global_step", "=", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.iou_thresh": [[81, 84], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "iou_thresh", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_iou_thresh", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics._compute_iou": [[86, 102], ["isegm.utils.misc.get_dims_with_exclusion", "torch.mean().detach().cpu().numpy", "torch.mean().detach().cpu().numpy", "torch.where", "gt_mask.dim", "numpy.full_like", "torch.zeros_like", "torch.mean().detach().cpu", "torch.mean().detach().cpu", "torch.mean().detach", "torch.mean().detach", "torch.mean", "torch.mean"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion"], ["", "", "def", "_compute_iou", "(", "pred_mask", ",", "gt_mask", ",", "ignore_mask", "=", "None", ",", "keep_ignore", "=", "False", ")", ":", "\n", "    ", "if", "ignore_mask", "is", "not", "None", ":", "\n", "        ", "pred_mask", "=", "torch", ".", "where", "(", "ignore_mask", ",", "torch", ".", "zeros_like", "(", "pred_mask", ")", ",", "pred_mask", ")", "\n", "\n", "", "reduction_dims", "=", "misc", ".", "get_dims_with_exclusion", "(", "gt_mask", ".", "dim", "(", ")", ",", "0", ")", "\n", "union", "=", "torch", ".", "mean", "(", "(", "pred_mask", "|", "gt_mask", ")", ".", "float", "(", ")", ",", "dim", "=", "reduction_dims", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "intersection", "=", "torch", ".", "mean", "(", "(", "pred_mask", "&", "gt_mask", ")", ".", "float", "(", ")", ",", "dim", "=", "reduction_dims", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "nonzero", "=", "union", ">", "0", "\n", "\n", "iou", "=", "intersection", "[", "nonzero", "]", "/", "union", "[", "nonzero", "]", "\n", "if", "not", "keep_ignore", ":", "\n", "        ", "return", "iou", "\n", "", "else", ":", "\n", "        ", "result", "=", "np", ".", "full_like", "(", "intersection", ",", "-", "1", ")", "\n", "result", "[", "nonzero", "]", "=", "iou", "\n", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_hrnet_model.HRNetModel.__init__": [[10, 22], ["is_model.ISModel.__init__", "modeling.hrnet_ocr.HighResolutionNet", "is_hrnet_model.HRNetModel.feature_extractor.apply", "isegm.model.modifiers.LRMult", "is_hrnet_model.HRNetModel.feature_extractor.ocr_distri_head.apply", "is_hrnet_model.HRNetModel.feature_extractor.ocr_gather_head.apply", "is_hrnet_model.HRNetModel.feature_extractor.conv3x3_ocr.apply", "isegm.model.modifiers.LRMult", "isegm.model.modifiers.LRMult", "isegm.model.modifiers.LRMult"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply"], ["    ", "@", "serialize", "\n", "def", "__init__", "(", "self", ",", "width", "=", "48", ",", "ocr_width", "=", "256", ",", "small", "=", "False", ",", "backbone_lr_mult", "=", "0.1", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "norm_layer", "=", "norm_layer", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "feature_extractor", "=", "HighResolutionNet", "(", "width", "=", "width", ",", "ocr_width", "=", "ocr_width", ",", "small", "=", "small", ",", "\n", "num_classes", "=", "1", ",", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "feature_extractor", ".", "apply", "(", "LRMult", "(", "backbone_lr_mult", ")", ")", "\n", "if", "ocr_width", ">", "0", ":", "\n", "            ", "self", ".", "feature_extractor", ".", "ocr_distri_head", ".", "apply", "(", "LRMult", "(", "1.0", ")", ")", "\n", "self", ".", "feature_extractor", ".", "ocr_gather_head", ".", "apply", "(", "LRMult", "(", "1.0", ")", ")", "\n", "self", ".", "feature_extractor", ".", "conv3x3_ocr", ".", "apply", "(", "LRMult", "(", "1.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_hrnet_model.HRNetModel.backbone_forward": [[23, 27], ["is_hrnet_model.HRNetModel.feature_extractor"], "methods", ["None"], ["", "", "def", "backbone_forward", "(", "self", ",", "image", ",", "coord_features", "=", "None", ")", ":", "\n", "        ", "net_outputs", "=", "self", ".", "feature_extractor", "(", "image", ",", "coord_features", ")", "\n", "\n", "return", "{", "'instances'", ":", "net_outputs", "[", "0", "]", ",", "'instances_aux'", ":", "net_outputs", "[", "1", "]", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer.__init__": [[7, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "local_init", "=", "True", ",", "gamma", "=", "None", ")", ":", "\n", "        ", "self", ".", "local_init", "=", "local_init", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer.__call__": [[11, 30], ["getattr", "isinstance", "object.__setattr__", "initializer.Initializer._init_gamma", "initializer.Initializer._init_beta", "getattr", "initializer.Initializer._init_weight", "getattr", "initializer.Initializer._init_bias"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_gamma", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_beta", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.XavierGluon._init_weight", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_bias"], ["", "def", "__call__", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "getattr", "(", "m", ",", "'__initialized'", ",", "False", ")", ":", "\n", "            ", "return", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "BatchNorm3d", ",", "\n", "nn", ".", "InstanceNorm1d", ",", "nn", ".", "InstanceNorm2d", ",", "nn", ".", "InstanceNorm3d", ",", "\n", "nn", ".", "GroupNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", "or", "'BatchNorm'", "in", "m", ".", "__class__", ".", "__name__", ":", "\n", "            ", "if", "m", ".", "weight", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_gamma", "(", "m", ".", "weight", ".", "data", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_beta", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "getattr", "(", "m", ",", "'weight'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_weight", "(", "m", ".", "weight", ".", "data", ")", "\n", "", "if", "getattr", "(", "m", ",", "'bias'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_bias", "(", "m", ".", "bias", ".", "data", ")", "\n", "\n", "", "", "if", "self", ".", "local_init", ":", "\n", "            ", "object", ".", "__setattr__", "(", "m", ",", "'__initialized'", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_weight": [[31, 33], ["torch.init.uniform_", "torch.init.uniform_"], "methods", ["None"], ["", "", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "uniform_", "(", "data", ",", "-", "0.07", ",", "0.07", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_bias": [[34, 36], ["torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_bias", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_gamma": [[37, 42], ["torch.init.constant_", "torch.init.constant_", "torch.init.normal_", "torch.init.normal_"], "methods", ["None"], ["", "def", "_init_gamma", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "gamma", "is", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "nn", ".", "init", ".", "normal_", "(", "data", ",", "1.0", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Initializer._init_beta": [[43, 45], ["torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "def", "_init_beta", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Bilinear.__init__": [[48, 53], ["initializer.Initializer.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ",", "groups", ",", "in_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Bilinear._init_weight": [[54, 65], ["initializer.Bilinear.get_bilinear_kernel", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Bilinear.get_bilinear_kernel"], ["", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"Reset the weight and bias.\"\"\"", "\n", "bilinear_kernel", "=", "self", ".", "get_bilinear_kernel", "(", "self", ".", "scale", ")", "\n", "weight", "=", "torch", ".", "zeros_like", "(", "data", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "in_channels", ")", ":", "\n", "            ", "if", "self", ".", "groups", "==", "1", ":", "\n", "                ", "j", "=", "i", "\n", "", "else", ":", "\n", "                ", "j", "=", "0", "\n", "", "weight", "[", "i", ",", "j", "]", "=", "bilinear_kernel", "\n", "", "data", "[", ":", "]", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.Bilinear.get_bilinear_kernel": [[66, 77], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_bilinear_kernel", "(", "scale", ")", ":", "\n", "        ", "\"\"\"Generate a bilinear upsampling kernel.\"\"\"", "\n", "kernel_size", "=", "2", "*", "scale", "-", "scale", "%", "2", "\n", "scale", "=", "(", "kernel_size", "+", "1", ")", "//", "2", "\n", "center", "=", "scale", "-", "0.5", "*", "(", "1", "+", "kernel_size", "%", "2", ")", "\n", "\n", "og", "=", "np", ".", "ogrid", "[", ":", "kernel_size", ",", ":", "kernel_size", "]", "\n", "kernel", "=", "(", "1", "-", "np", ".", "abs", "(", "og", "[", "0", "]", "-", "center", ")", "/", "scale", ")", "*", "(", "1", "-", "np", ".", "abs", "(", "og", "[", "1", "]", "-", "center", ")", "/", "scale", ")", "\n", "\n", "return", "torch", ".", "tensor", "(", "kernel", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.XavierGluon.__init__": [[80, 86], ["initializer.Initializer.__init__", "float"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnd_type", "=", "'uniform'", ",", "factor_type", "=", "'avg'", ",", "magnitude", "=", "3", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "rnd_type", "=", "rnd_type", "\n", "self", ".", "factor_type", "=", "factor_type", "\n", "self", ".", "magnitude", "=", "float", "(", "magnitude", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.initializer.XavierGluon._init_weight": [[87, 106], ["torch.init._calculate_fan_in_and_fan_out", "torch.init._calculate_fan_in_and_fan_out", "numpy.sqrt", "torch.init.uniform_", "torch.init.uniform_", "torch.init.normal_", "torch.init.normal_", "ValueError", "ValueError"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ",", "arr", ")", ":", "\n", "        ", "fan_in", ",", "fan_out", "=", "nn", ".", "init", ".", "_calculate_fan_in_and_fan_out", "(", "arr", ")", "\n", "\n", "if", "self", ".", "factor_type", "==", "'avg'", ":", "\n", "            ", "factor", "=", "(", "fan_in", "+", "fan_out", ")", "/", "2.0", "\n", "", "elif", "self", ".", "factor_type", "==", "'in'", ":", "\n", "            ", "factor", "=", "fan_in", "\n", "", "elif", "self", ".", "factor_type", "==", "'out'", ":", "\n", "            ", "factor", "=", "fan_out", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect factor type'", ")", "\n", "", "scale", "=", "np", ".", "sqrt", "(", "self", ".", "magnitude", "/", "factor", ")", "\n", "\n", "if", "self", ".", "rnd_type", "==", "'uniform'", ":", "\n", "            ", "nn", ".", "init", ".", "uniform_", "(", "arr", ",", "-", "scale", ",", "scale", ")", "\n", "", "elif", "self", ".", "rnd_type", "==", "'gaussian'", ":", "\n", "            ", "nn", ".", "init", ".", "normal_", "(", "arr", ",", "0", ",", "scale", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown random type'", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.modifiers.LRMult.__init__": [[4, 6], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lr_mult", "=", "1.", ")", ":", "\n", "        ", "self", ".", "lr_mult", "=", "lr_mult", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.modifiers.LRMult.__call__": [[7, 12], ["getattr", "getattr"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "getattr", "(", "m", ",", "'weight'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "m", ".", "weight", ".", "lr_mult", "=", "self", ".", "lr_mult", "\n", "", "if", "getattr", "(", "m", ",", "'bias'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "m", ".", "bias", ".", "lr_mult", "=", "self", ".", "lr_mult", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_deeplab_model.DeeplabModel.__init__": [[11, 21], ["is_model.ISModel.__init__", "modeling.deeplab_v3.DeepLabV3Plus", "is_deeplab_model.DeeplabModel.feature_extractor.backbone.apply", "modeling.basic_blocks.SepConvHead", "isegm.model.modifiers.LRMult"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply"], ["    ", "@", "serialize", "\n", "def", "__init__", "(", "self", ",", "backbone", "=", "'resnet50'", ",", "deeplab_ch", "=", "256", ",", "aspp_dropout", "=", "0.5", ",", "\n", "backbone_norm_layer", "=", "None", ",", "backbone_lr_mult", "=", "0.1", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "norm_layer", "=", "norm_layer", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "feature_extractor", "=", "DeepLabV3Plus", "(", "backbone", "=", "backbone", ",", "ch", "=", "deeplab_ch", ",", "project_dropout", "=", "aspp_dropout", ",", "\n", "norm_layer", "=", "norm_layer", ",", "backbone_norm_layer", "=", "backbone_norm_layer", ")", "\n", "self", ".", "feature_extractor", ".", "backbone", ".", "apply", "(", "LRMult", "(", "backbone_lr_mult", ")", ")", "\n", "self", ".", "head", "=", "SepConvHead", "(", "1", ",", "in_channels", "=", "deeplab_ch", ",", "mid_channels", "=", "deeplab_ch", "//", "2", ",", "\n", "num_layers", "=", "2", ",", "norm_layer", "=", "norm_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_deeplab_model.DeeplabModel.backbone_forward": [[22, 26], ["is_deeplab_model.DeeplabModel.feature_extractor", "is_deeplab_model.DeeplabModel.head"], "methods", ["None"], ["", "def", "backbone_forward", "(", "self", ",", "image", ",", "coord_features", "=", "None", ")", ":", "\n", "        ", "backbone_features", "=", "self", ".", "feature_extractor", "(", "image", ",", "coord_features", ")", "\n", "\n", "return", "{", "'instances'", ":", "self", ".", "head", "(", "backbone_features", "[", "0", "]", ")", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.__init__": [[10, 29], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", "=", "-", "1", ",", "alpha", "=", "0.25", ",", "gamma", "=", "2", ",", "max_mult", "=", "-", "1", ",", "eps", "=", "1e-12", ",", "\n", "from_sigmoid", "=", "False", ",", "detach_delimeter", "=", "True", ",", "\n", "batch_axis", "=", "0", ",", "weight", "=", "None", ",", "size_average", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "NormalizedFocalLossSigmoid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_axis", "=", "axis", "\n", "self", ".", "_alpha", "=", "alpha", "\n", "self", ".", "_gamma", "=", "gamma", "\n", "self", ".", "_ignore_label", "=", "ignore_label", "\n", "self", ".", "_weight", "=", "weight", "if", "weight", "is", "not", "None", "else", "1.0", "\n", "self", ".", "_batch_axis", "=", "batch_axis", "\n", "\n", "self", ".", "_from_logits", "=", "from_sigmoid", "\n", "self", ".", "_eps", "=", "eps", "\n", "self", ".", "_size_average", "=", "size_average", "\n", "self", ".", "_detach_delimeter", "=", "detach_delimeter", "\n", "self", ".", "_max_mult", "=", "max_mult", "\n", "self", ".", "_k_sum", "=", "0", "\n", "self", ".", "_m_max", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.forward": [[30, 71], ["torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "mult.detach.detach.detach", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.clamp_max", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.sum().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "torch.mean().cpu().numpy", "numpy.any", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "torch.flatten().max", "beta_pmax.mean().item.mean().item.mean().item", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.mean().cpu", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "isegm.utils.misc.get_dims_with_exclusion", "isegm.utils.misc.get_dims_with_exclusion", "sample_mult[].mean", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "beta_pmax.mean().item.mean().item.mean", "sample_weight.dim", "isegm.utils.misc.get_dims_with_exclusion", "torch.sum.dim", "torch.sum.dim", "torch.sum.dim", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.sum.dim", "torch.sum.dim", "torch.sum.dim", "tuple", "tuple", "range", "range", "label.dim", "mult.detach.detach.dim"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion"], ["", "def", "forward", "(", "self", ",", "pred", ",", "label", ")", ":", "\n", "        ", "one_hot", "=", "label", ">", "0.5", "\n", "sample_weight", "=", "label", "!=", "self", ".", "_ignore_label", "\n", "\n", "if", "not", "self", ".", "_from_logits", ":", "\n", "            ", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "", "alpha", "=", "torch", ".", "where", "(", "one_hot", ",", "self", ".", "_alpha", "*", "sample_weight", ",", "(", "1", "-", "self", ".", "_alpha", ")", "*", "sample_weight", ")", "\n", "pt", "=", "torch", ".", "where", "(", "sample_weight", ",", "1.0", "-", "torch", ".", "abs", "(", "label", "-", "pred", ")", ",", "torch", ".", "ones_like", "(", "pred", ")", ")", "\n", "\n", "beta", "=", "(", "1", "-", "pt", ")", "**", "self", ".", "_gamma", "\n", "\n", "sw_sum", "=", "torch", ".", "sum", "(", "sample_weight", ",", "dim", "=", "(", "-", "2", ",", "-", "1", ")", ",", "keepdim", "=", "True", ")", "\n", "beta_sum", "=", "torch", ".", "sum", "(", "beta", ",", "dim", "=", "(", "-", "2", ",", "-", "1", ")", ",", "keepdim", "=", "True", ")", "\n", "mult", "=", "sw_sum", "/", "(", "beta_sum", "+", "self", ".", "_eps", ")", "\n", "if", "self", ".", "_detach_delimeter", ":", "\n", "            ", "mult", "=", "mult", ".", "detach", "(", ")", "\n", "", "beta", "=", "beta", "*", "mult", "\n", "if", "self", ".", "_max_mult", ">", "0", ":", "\n", "            ", "beta", "=", "torch", ".", "clamp_max", "(", "beta", ",", "self", ".", "_max_mult", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "ignore_area", "=", "torch", ".", "sum", "(", "label", "==", "self", ".", "_ignore_label", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "label", ".", "dim", "(", ")", ")", ")", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "sample_mult", "=", "torch", ".", "mean", "(", "mult", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "mult", ".", "dim", "(", ")", ")", ")", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "np", ".", "any", "(", "ignore_area", "==", "0", ")", ":", "\n", "                ", "self", ".", "_k_sum", "=", "0.9", "*", "self", ".", "_k_sum", "+", "0.1", "*", "sample_mult", "[", "ignore_area", "==", "0", "]", ".", "mean", "(", ")", "\n", "\n", "beta_pmax", ",", "_", "=", "torch", ".", "flatten", "(", "beta", ",", "start_dim", "=", "1", ")", ".", "max", "(", "dim", "=", "1", ")", "\n", "beta_pmax", "=", "beta_pmax", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "_m_max", "=", "0.8", "*", "self", ".", "_m_max", "+", "0.2", "*", "beta_pmax", "\n", "\n", "", "", "loss", "=", "-", "alpha", "*", "beta", "*", "torch", ".", "log", "(", "torch", ".", "min", "(", "pt", "+", "self", ".", "_eps", ",", "torch", ".", "ones", "(", "1", ",", "dtype", "=", "torch", ".", "float", ")", ".", "to", "(", "pt", ".", "device", ")", ")", ")", "\n", "loss", "=", "self", ".", "_weight", "*", "(", "loss", "*", "sample_weight", ")", "\n", "\n", "if", "self", ".", "_size_average", ":", "\n", "            ", "bsum", "=", "torch", ".", "sum", "(", "sample_weight", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "sample_weight", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "\n", "loss", "=", "torch", ".", "sum", "(", "loss", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "loss", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "/", "(", "bsum", "+", "self", ".", "_eps", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "sum", "(", "loss", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "loss", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.log_states": [[72, 75], ["sw.add_scalar", "sw.add_scalar"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar"], ["", "def", "log_states", "(", "self", ",", "sw", ",", "name", ",", "global_step", ")", ":", "\n", "        ", "sw", ".", "add_scalar", "(", "tag", "=", "name", "+", "'_k'", ",", "value", "=", "self", ".", "_k_sum", ",", "global_step", "=", "global_step", ")", "\n", "sw", ".", "add_scalar", "(", "tag", "=", "name", "+", "'_m'", ",", "value", "=", "self", ".", "_m_max", ",", "global_step", "=", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.FocalLoss.__init__": [[78, 96], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", "=", "-", "1", ",", "alpha", "=", "0.25", ",", "gamma", "=", "2", ",", "\n", "from_logits", "=", "False", ",", "batch_axis", "=", "0", ",", "\n", "weight", "=", "None", ",", "num_class", "=", "None", ",", "\n", "eps", "=", "1e-9", ",", "size_average", "=", "True", ",", "scale", "=", "1.0", ",", "\n", "ignore_label", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_axis", "=", "axis", "\n", "self", ".", "_alpha", "=", "alpha", "\n", "self", ".", "_gamma", "=", "gamma", "\n", "self", ".", "_ignore_label", "=", "ignore_label", "\n", "self", ".", "_weight", "=", "weight", "if", "weight", "is", "not", "None", "else", "1.0", "\n", "self", ".", "_batch_axis", "=", "batch_axis", "\n", "\n", "self", ".", "_scale", "=", "scale", "\n", "self", ".", "_num_class", "=", "num_class", "\n", "self", ".", "_from_logits", "=", "from_logits", "\n", "self", ".", "_eps", "=", "eps", "\n", "self", ".", "_size_average", "=", "size_average", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.FocalLoss.forward": [[97, 119], ["torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "isegm.utils.misc.get_dims_with_exclusion", "isegm.utils.misc.get_dims_with_exclusion", "label.dim", "isegm.utils.misc.get_dims_with_exclusion", "torch.sum.dim", "torch.sum.dim", "torch.sum.dim", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.sum.dim", "torch.sum.dim", "torch.sum.dim"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion"], ["", "def", "forward", "(", "self", ",", "pred", ",", "label", ",", "sample_weight", "=", "None", ")", ":", "\n", "        ", "one_hot", "=", "label", ">", "0.5", "\n", "sample_weight", "=", "label", "!=", "self", ".", "_ignore_label", "\n", "\n", "if", "not", "self", ".", "_from_logits", ":", "\n", "            ", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "", "alpha", "=", "torch", ".", "where", "(", "one_hot", ",", "self", ".", "_alpha", "*", "sample_weight", ",", "(", "1", "-", "self", ".", "_alpha", ")", "*", "sample_weight", ")", "\n", "pt", "=", "torch", ".", "where", "(", "sample_weight", ",", "1.0", "-", "torch", ".", "abs", "(", "label", "-", "pred", ")", ",", "torch", ".", "ones_like", "(", "pred", ")", ")", "\n", "\n", "beta", "=", "(", "1", "-", "pt", ")", "**", "self", ".", "_gamma", "\n", "\n", "loss", "=", "-", "alpha", "*", "beta", "*", "torch", ".", "log", "(", "torch", ".", "min", "(", "pt", "+", "self", ".", "_eps", ",", "torch", ".", "ones", "(", "1", ",", "dtype", "=", "torch", ".", "float", ")", ".", "to", "(", "pt", ".", "device", ")", ")", ")", "\n", "loss", "=", "self", ".", "_weight", "*", "(", "loss", "*", "sample_weight", ")", "\n", "\n", "if", "self", ".", "_size_average", ":", "\n", "            ", "tsum", "=", "torch", ".", "sum", "(", "sample_weight", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "label", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "\n", "loss", "=", "torch", ".", "sum", "(", "loss", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "loss", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "/", "(", "tsum", "+", "self", ".", "_eps", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "sum", "(", "loss", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "loss", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "\n", "\n", "", "return", "self", ".", "_scale", "*", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.SoftIoU.__init__": [[122, 126], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "from_sigmoid", "=", "False", ",", "ignore_label", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_from_sigmoid", "=", "from_sigmoid", "\n", "self", ".", "_ignore_label", "=", "ignore_label", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.SoftIoU.forward": [[127, 138], ["label.view.view.view", "torch.sigmoid.size", "torch.sigmoid.size", "torch.sigmoid.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "label", ")", ":", "\n", "        ", "label", "=", "label", ".", "view", "(", "pred", ".", "size", "(", ")", ")", "\n", "sample_weight", "=", "label", "!=", "self", ".", "_ignore_label", "\n", "\n", "if", "not", "self", ".", "_from_sigmoid", ":", "\n", "            ", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "", "loss", "=", "1.0", "-", "torch", ".", "sum", "(", "pred", "*", "label", "*", "sample_weight", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "/", "(", "torch", ".", "sum", "(", "torch", ".", "max", "(", "pred", ",", "label", ")", "*", "sample_weight", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "1e-8", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.SigmoidBinaryCrossEntropyLoss.__init__": [[141, 147], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "from_sigmoid", "=", "False", ",", "weight", "=", "None", ",", "batch_axis", "=", "0", ",", "ignore_label", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "SigmoidBinaryCrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_from_sigmoid", "=", "from_sigmoid", "\n", "self", ".", "_ignore_label", "=", "ignore_label", "\n", "self", ".", "_weight", "=", "weight", "if", "weight", "is", "not", "None", "else", "1.0", "\n", "self", ".", "_batch_axis", "=", "batch_axis", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.SigmoidBinaryCrossEntropyLoss.forward": [[148, 162], ["torch.where.view", "torch.where.view", "torch.where.view", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "pred.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.softplus", "torch.softplus", "torch.softplus", "isegm.utils.misc.get_dims_with_exclusion", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "loss.dim", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_dims_with_exclusion"], ["", "def", "forward", "(", "self", ",", "pred", ",", "label", ")", ":", "\n", "        ", "label", "=", "label", ".", "view", "(", "pred", ".", "size", "(", ")", ")", "\n", "sample_weight", "=", "label", "!=", "self", ".", "_ignore_label", "\n", "label", "=", "torch", ".", "where", "(", "sample_weight", ",", "label", ",", "torch", ".", "zeros_like", "(", "label", ")", ")", "\n", "\n", "if", "not", "self", ".", "_from_sigmoid", ":", "\n", "            ", "loss", "=", "torch", ".", "relu", "(", "pred", ")", "-", "pred", "*", "label", "+", "F", ".", "softplus", "(", "-", "torch", ".", "abs", "(", "pred", ")", ")", "\n", "", "else", ":", "\n", "            ", "eps", "=", "1e-12", "\n", "loss", "=", "-", "(", "torch", ".", "log", "(", "pred", "+", "eps", ")", "*", "label", "\n", "+", "torch", ".", "log", "(", "1.", "-", "pred", "+", "eps", ")", "*", "(", "1.", "-", "label", ")", ")", "\n", "\n", "", "loss", "=", "self", ".", "_weight", "*", "(", "loss", "*", "sample_weight", ")", "\n", "return", "torch", ".", "mean", "(", "loss", ",", "dim", "=", "misc", ".", "get_dims_with_exclusion", "(", "loss", ".", "dim", "(", ")", ",", "self", ".", "_batch_axis", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.ConvHead.__init__": [[7, 22], ["torch.Module.__init__", "range", "convhead.append", "torch.Sequential", "convhead.extend", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "norm_layer", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_channels", ",", "in_channels", "=", "32", ",", "num_layers", "=", "1", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "ConvHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "convhead", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "convhead", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "norm_layer", "(", "in_channels", ")", "if", "norm_layer", "is", "not", "None", "else", "nn", ".", "Identity", "(", ")", "\n", "]", ")", "\n", "", "convhead", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "padding", "=", "0", ")", ")", "\n", "\n", "self", ".", "convhead", "=", "nn", ".", "Sequential", "(", "*", "convhead", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.ConvHead.forward": [[23, 25], ["basic_blocks.ConvHead.convhead"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "convhead", "(", "inputs", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.SepConvHead.__init__": [[28, 50], ["torch.Module.__init__", "range", "sepconvhead.append", "torch.Sequential", "sepconvhead.append", "torch.Conv2d", "basic_blocks.SeparableConv2d", "sepconvhead.append", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_outputs", ",", "in_channels", ",", "mid_channels", ",", "num_layers", "=", "1", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "dropout_ratio", "=", "0.0", ",", "dropout_indx", "=", "0", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "SepConvHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "sepconvhead", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "sepconvhead", ".", "append", "(", "\n", "SeparableConv2d", "(", "in_channels", "=", "in_channels", "if", "i", "==", "0", "else", "mid_channels", ",", "\n", "out_channels", "=", "mid_channels", ",", "\n", "dw_kernel", "=", "kernel_size", ",", "dw_padding", "=", "padding", ",", "\n", "norm_layer", "=", "norm_layer", ",", "activation", "=", "'relu'", ")", "\n", ")", "\n", "if", "dropout_ratio", ">", "0", "and", "dropout_indx", "==", "i", ":", "\n", "                ", "sepconvhead", ".", "append", "(", "nn", ".", "Dropout", "(", "dropout_ratio", ")", ")", "\n", "\n", "", "", "sepconvhead", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "mid_channels", ",", "out_channels", "=", "num_outputs", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "sepconvhead", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.SepConvHead.forward": [[51, 55], ["basic_blocks.SepConvHead.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "\n", "return", "self", ".", "layers", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.SeparableConv2d.__init__": [[58, 68], ["torch.Module.__init__", "isegm.model.ops.select_activation_function", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "isegm.model.ops.select_activation_function.", "norm_layer", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.select_activation_function"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dw_kernel", ",", "dw_padding", ",", "dw_stride", "=", "1", ",", "\n", "activation", "=", "None", ",", "use_bias", "=", "False", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "SeparableConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "_activation", "=", "ops", ".", "select_activation_function", "(", "activation", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "dw_kernel", ",", "stride", "=", "dw_stride", ",", "\n", "padding", "=", "dw_padding", ",", "bias", "=", "use_bias", ",", "groups", "=", "in_channels", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", "if", "norm_layer", "is", "not", "None", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "_activation", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.basic_blocks.SeparableConv2d.forward": [[70, 72], ["basic_blocks.SeparableConv2d.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "body", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3.DeepLabV3Plus.__init__": [[13, 50], ["torch.nn.Module.__init__", "resnet.ResNetBackbone", "deeplab_v3._DeepLabHead", "deeplab_v3._SkipProject", "deeplab_v3._ASPP", "deeplab_v3.DeepLabV3Plus.set_prediction_mode"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3.DeepLabV3Plus.set_prediction_mode"], ["    ", "def", "__init__", "(", "self", ",", "backbone", "=", "'resnet50'", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", "backbone_norm_layer", "=", "None", ",", "\n", "ch", "=", "256", ",", "\n", "project_dropout", "=", "0.5", ",", "\n", "inference_mode", "=", "False", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DeepLabV3Plus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "backbone_norm_layer", "is", "None", ":", "\n", "            ", "backbone_norm_layer", "=", "norm_layer", "\n", "\n", "", "self", ".", "backbone_name", "=", "backbone", "\n", "self", ".", "norm_layer", "=", "norm_layer", "\n", "self", ".", "backbone_norm_layer", "=", "backbone_norm_layer", "\n", "self", ".", "inference_mode", "=", "False", "\n", "self", ".", "ch", "=", "ch", "\n", "self", ".", "aspp_in_channels", "=", "2048", "\n", "self", ".", "skip_project_in_channels", "=", "256", "# layer 1 out_channels", "\n", "\n", "self", ".", "_kwargs", "=", "kwargs", "\n", "if", "backbone", "==", "'resnet34'", ":", "\n", "            ", "self", ".", "aspp_in_channels", "=", "512", "\n", "self", ".", "skip_project_in_channels", "=", "64", "\n", "\n", "", "self", ".", "backbone", "=", "ResNetBackbone", "(", "backbone", "=", "self", ".", "backbone_name", ",", "pretrained_base", "=", "False", ",", "\n", "norm_layer", "=", "self", ".", "backbone_norm_layer", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "head", "=", "_DeepLabHead", "(", "in_channels", "=", "ch", "+", "32", ",", "mid_channels", "=", "ch", ",", "out_channels", "=", "ch", ",", "\n", "norm_layer", "=", "self", ".", "norm_layer", ")", "\n", "self", ".", "skip_project", "=", "_SkipProject", "(", "self", ".", "skip_project_in_channels", ",", "32", ",", "norm_layer", "=", "self", ".", "norm_layer", ")", "\n", "self", ".", "aspp", "=", "_ASPP", "(", "in_channels", "=", "self", ".", "aspp_in_channels", ",", "\n", "atrous_rates", "=", "[", "12", ",", "24", ",", "36", "]", ",", "\n", "out_channels", "=", "ch", ",", "\n", "project_dropout", "=", "project_dropout", ",", "\n", "norm_layer", "=", "self", ".", "norm_layer", ")", "\n", "\n", "if", "inference_mode", ":", "\n", "            ", "self", ".", "set_prediction_mode", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3.DeepLabV3Plus.load_pretrained_weights": [[51, 63], ["resnet.ResNetBackbone", "deeplab_v3.DeepLabV3Plus.backbone.state_dict", "resnet.ResNetBackbone.state_dict", "deeplab_v3.DeepLabV3Plus.update", "deeplab_v3.DeepLabV3Plus.backbone.load_state_dict", "deeplab_v3.DeepLabV3Plus.backbone.parameters"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "", "def", "load_pretrained_weights", "(", "self", ")", ":", "\n", "        ", "pretrained", "=", "ResNetBackbone", "(", "backbone", "=", "self", ".", "backbone_name", ",", "pretrained_base", "=", "True", ",", "\n", "norm_layer", "=", "self", ".", "backbone_norm_layer", ",", "**", "self", ".", "_kwargs", ")", "\n", "backbone_state_dict", "=", "self", ".", "backbone", ".", "state_dict", "(", ")", "\n", "pretrained_state_dict", "=", "pretrained", ".", "state_dict", "(", ")", "\n", "\n", "backbone_state_dict", ".", "update", "(", "pretrained_state_dict", ")", "\n", "self", ".", "backbone", ".", "load_state_dict", "(", "backbone_state_dict", ")", "\n", "\n", "if", "self", ".", "inference_mode", ":", "\n", "            ", "for", "param", "in", "self", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3.DeepLabV3Plus.set_prediction_mode": [[64, 67], ["deeplab_v3.DeepLabV3Plus.eval"], "methods", ["None"], ["", "", "", "def", "set_prediction_mode", "(", "self", ")", ":", "\n", "        ", "self", ".", "inference_mode", "=", "True", "\n", "self", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3.DeepLabV3Plus.forward": [[68, 82], ["contextlib.ExitStack", "deeplab_v3.DeepLabV3Plus.backbone", "deeplab_v3.DeepLabV3Plus.skip_project", "deeplab_v3.DeepLabV3Plus.aspp", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "deeplab_v3.DeepLabV3Plus.head", "stack.enter_context", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "deeplab_v3.DeepLabV3Plus.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "additional_features", "=", "None", ")", ":", "\n", "        ", "with", "ExitStack", "(", ")", "as", "stack", ":", "\n", "            ", "if", "self", ".", "inference_mode", ":", "\n", "                ", "stack", ".", "enter_context", "(", "torch", ".", "no_grad", "(", ")", ")", "\n", "\n", "", "c1", ",", "_", ",", "c3", ",", "c4", "=", "self", ".", "backbone", "(", "x", ",", "additional_features", ")", "\n", "c1", "=", "self", ".", "skip_project", "(", "c1", ")", "\n", "\n", "x", "=", "self", ".", "aspp", "(", "c4", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "c1", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c1", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "", "return", "x", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._SkipProject.__init__": [[85, 93], ["torch.nn.Module.__init__", "isegm.model.ops.select_activation_function", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "norm_layer", "isegm.model.ops.select_activation_function."], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.ops.select_activation_function"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "_SkipProject", ",", "self", ")", ".", "__init__", "(", ")", "\n", "_activation", "=", "ops", ".", "select_activation_function", "(", "\"relu\"", ")", "\n", "\n", "self", ".", "skip_project", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", ",", "\n", "_activation", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._SkipProject.forward": [[95, 97], ["deeplab_v3._SkipProject.skip_project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "skip_project", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._DeepLabHead.__init__": [[100, 109], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "basic_blocks.SeparableConv2d", "basic_blocks.SeparableConv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_channels", ",", "in_channels", ",", "mid_channels", "=", "256", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "_DeepLabHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "SeparableConv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "mid_channels", ",", "dw_kernel", "=", "3", ",", "\n", "dw_padding", "=", "1", ",", "activation", "=", "'relu'", ",", "norm_layer", "=", "norm_layer", ")", ",", "\n", "SeparableConv2d", "(", "in_channels", "=", "mid_channels", ",", "out_channels", "=", "mid_channels", ",", "dw_kernel", "=", "3", ",", "\n", "dw_padding", "=", "1", ",", "activation", "=", "'relu'", ",", "norm_layer", "=", "norm_layer", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "mid_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._DeepLabHead.forward": [[111, 113], ["deeplab_v3._DeepLabHead.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "block", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPP.__init__": [[116, 143], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "tuple", "deeplab_v3._ASPPConv", "deeplab_v3._ASPPConv", "deeplab_v3._ASPPConv", "deeplab_v3._AsppPooling", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "norm_layer", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "norm_layer", "torch.nn.ReLU", "torch.nn.ReLU", "project.append", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPPConv", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPPConv", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPPConv"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "atrous_rates", ",", "out_channels", "=", "256", ",", "\n", "project_dropout", "=", "0.5", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "_ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "b0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "rate1", ",", "rate2", ",", "rate3", "=", "tuple", "(", "atrous_rates", ")", "\n", "b1", "=", "_ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate1", ",", "norm_layer", ")", "\n", "b2", "=", "_ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate2", ",", "norm_layer", ")", "\n", "b3", "=", "_ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate3", ",", "norm_layer", ")", "\n", "b4", "=", "_AsppPooling", "(", "in_channels", ",", "out_channels", ",", "norm_layer", "=", "norm_layer", ")", "\n", "\n", "self", ".", "concurent", "=", "nn", ".", "ModuleList", "(", "[", "b0", ",", "b1", ",", "b2", ",", "b3", ",", "b4", "]", ")", "\n", "\n", "project", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "5", "*", "out_channels", ",", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "if", "project_dropout", ">", "0", ":", "\n", "            ", "project", ".", "append", "(", "nn", ".", "Dropout", "(", "project_dropout", ")", ")", "\n", "", "self", ".", "project", "=", "nn", ".", "Sequential", "(", "*", "project", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPP.forward": [[144, 148], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "deeplab_v3._ASPP.project", "block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "[", "block", "(", "x", ")", "for", "block", "in", "self", ".", "concurent", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "self", ".", "project", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._AsppPooling.__init__": [[151, 160], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "norm_layer", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "norm_layer", ")", ":", "\n", "        ", "super", "(", "_AsppPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "gap", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._AsppPooling.forward": [[162, 165], ["deeplab_v3._AsppPooling.gap", "torch.interpolate", "torch.interpolate", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool", "=", "self", ".", "gap", "(", "x", ")", "\n", "return", "F", ".", "interpolate", "(", "pool", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.deeplab_v3._ASPPConv": [[167, 177], ["torch.nn.Sequential", "torch.nn.Conv2d", "norm_layer", "torch.nn.ReLU"], "function", ["None"], ["", "", "def", "_ASPPConv", "(", "in_channels", ",", "out_channels", ",", "atrous_rate", ",", "norm_layer", ")", ":", "\n", "    ", "block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "atrous_rate", ",", "\n", "dilation", "=", "atrous_rate", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "return", "block", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.BasicBlockV1b.__init__": [[9, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "downsample", "=", "None", ",", "\n", "previous_dilation", "=", "1", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "BasicBlockV1b", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "previous_dilation", ",", "dilation", "=", "previous_dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.BasicBlockV1b.forward": [[23, 40], ["resnetv1b.BasicBlockV1b.conv1", "resnetv1b.BasicBlockV1b.bn1", "resnetv1b.BasicBlockV1b.relu", "resnetv1b.BasicBlockV1b.conv2", "resnetv1b.BasicBlockV1b.bn2", "resnetv1b.BasicBlockV1b.relu", "resnetv1b.BasicBlockV1b.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "out", "+", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.BottleneckV1b.__init__": [[45, 61], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "downsample", "=", "None", ",", "\n", "previous_dilation", "=", "1", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "BottleneckV1b", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.BottleneckV1b.forward": [[62, 83], ["resnetv1b.BottleneckV1b.conv1", "resnetv1b.BottleneckV1b.bn1", "resnetv1b.BottleneckV1b.relu", "resnetv1b.BottleneckV1b.conv2", "resnetv1b.BottleneckV1b.bn2", "resnetv1b.BottleneckV1b.relu", "resnetv1b.BottleneckV1b.conv3", "resnetv1b.BottleneckV1b.bn3", "resnetv1b.BottleneckV1b.relu", "resnetv1b.BottleneckV1b.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "out", "+", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.ResNetV1b.__init__": [[114, 152], ["torch.Module.__init__", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnetv1b.ResNetV1b._make_layer", "resnetv1b.ResNetV1b._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "resnetv1b.ResNetV1b._make_layer", "resnetv1b.ResNetV1b._make_layer", "resnetv1b.ResNetV1b._make_layer", "resnetv1b.ResNetV1b._make_layer", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "classes", "=", "1000", ",", "dilated", "=", "True", ",", "deep_stem", "=", "False", ",", "stem_width", "=", "32", ",", "\n", "avg_down", "=", "False", ",", "final_drop", "=", "0.0", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "stem_width", "*", "2", "if", "deep_stem", "else", "64", "\n", "super", "(", "ResNetV1b", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "deep_stem", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "stem_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "stem_width", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "stem_width", ",", "stem_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "stem_width", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "stem_width", ",", "2", "*", "stem_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "avg_down", "=", "avg_down", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "avg_down", "=", "avg_down", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "if", "dilated", ":", "\n", "            ", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ",", "\n", "avg_down", "=", "avg_down", ",", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ",", "\n", "avg_down", "=", "avg_down", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "avg_down", "=", "avg_down", ",", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "avg_down", "=", "avg_down", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "drop", "=", "None", "\n", "if", "final_drop", ">", "0.0", ":", "\n", "            ", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "final_drop", ")", "\n", "", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.ResNetV1b._make_layer": [[153, 196], ["range", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "torch.Sequential.extend", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "RuntimeError", "block", "torch.Sequential.append", "torch.Sequential.append", "torch.Conv2d", "torch.Conv2d", "norm_layer", "block", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "\n", "avg_down", "=", "False", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "[", "]", "\n", "if", "avg_down", ":", "\n", "                ", "if", "dilation", "==", "1", ":", "\n", "                    ", "downsample", ".", "append", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "stride", ",", "stride", "=", "stride", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "downsample", ".", "append", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", "\n", ")", "\n", "", "downsample", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "out_channels", "=", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", "\n", "]", ")", "\n", "downsample", "=", "nn", ".", "Sequential", "(", "*", "downsample", ")", "\n", "", "else", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "out_channels", "=", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", "\n", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "if", "dilation", "in", "(", "1", ",", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "1", ",", "downsample", "=", "downsample", ",", "\n", "previous_dilation", "=", "dilation", ",", "norm_layer", "=", "norm_layer", ")", ")", "\n", "", "elif", "dilation", "==", "4", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "2", ",", "downsample", "=", "downsample", ",", "\n", "previous_dilation", "=", "dilation", ",", "norm_layer", "=", "norm_layer", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"=> unknown dilation size: {}\"", ".", "format", "(", "dilation", ")", ")", "\n", "\n", "", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ",", "\n", "previous_dilation", "=", "dilation", ",", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.ResNetV1b.forward": [[197, 215], ["resnetv1b.ResNetV1b.conv1", "resnetv1b.ResNetV1b.bn1", "resnetv1b.ResNetV1b.relu", "resnetv1b.ResNetV1b.maxpool", "resnetv1b.ResNetV1b.layer1", "resnetv1b.ResNetV1b.layer2", "resnetv1b.ResNetV1b.layer3", "resnetv1b.ResNetV1b.layer4", "resnetv1b.ResNetV1b.avgpool", "resnetv1b.ResNetV1b.view", "resnetv1b.ResNetV1b.fc", "resnetv1b.ResNetV1b.size", "resnetv1b.ResNetV1b.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "if", "self", ".", "drop", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b._safe_state_dict_filtering": [[217, 225], ["orig_dict.items", "print"], "function", ["None"], ["", "", "def", "_safe_state_dict_filtering", "(", "orig_dict", ",", "model_dict_keys", ")", ":", "\n", "    ", "filtered_orig_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "orig_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "model_dict_keys", ":", "\n", "            ", "filtered_orig_dict", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "            ", "print", "(", "f\"[ERROR] Failed to load <{k}> in backbone\"", ")", "\n", "", "", "return", "filtered_orig_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet34_v1b": [[227, 238], ["resnetv1b.ResNetV1b", "ResNetV1b.state_dict", "resnetv1b._safe_state_dict_filtering", "model.state_dict.update", "ResNetV1b.load_state_dict", "torch.hub.load().state_dict", "torch.hub.load().state_dict", "model.state_dict.keys", "torch.hub.load", "torch.hub.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b._safe_state_dict_filtering", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "resnet34_v1b", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetV1b", "(", "BasicBlockV1b", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "filtered_orig_dict", "=", "_safe_state_dict_filtering", "(", "\n", "torch", ".", "hub", ".", "load", "(", "GLUON_RESNET_TORCH_HUB", ",", "'gluon_resnet34_v1b'", ",", "pretrained", "=", "True", ")", ".", "state_dict", "(", ")", ",", "\n", "model_dict", ".", "keys", "(", ")", "\n", ")", "\n", "model_dict", ".", "update", "(", "filtered_orig_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet50_v1s": [[240, 251], ["resnetv1b.ResNetV1b", "ResNetV1b.state_dict", "resnetv1b._safe_state_dict_filtering", "model.state_dict.update", "ResNetV1b.load_state_dict", "torch.hub.load().state_dict", "torch.hub.load().state_dict", "model.state_dict.keys", "torch.hub.load", "torch.hub.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b._safe_state_dict_filtering", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "resnet50_v1s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetV1b", "(", "BottleneckV1b", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "deep_stem", "=", "True", ",", "stem_width", "=", "64", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "filtered_orig_dict", "=", "_safe_state_dict_filtering", "(", "\n", "torch", ".", "hub", ".", "load", "(", "GLUON_RESNET_TORCH_HUB", ",", "'gluon_resnet50_v1s'", ",", "pretrained", "=", "True", ")", ".", "state_dict", "(", ")", ",", "\n", "model_dict", ".", "keys", "(", ")", "\n", ")", "\n", "model_dict", ".", "update", "(", "filtered_orig_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet101_v1s": [[253, 264], ["resnetv1b.ResNetV1b", "ResNetV1b.state_dict", "resnetv1b._safe_state_dict_filtering", "model.state_dict.update", "ResNetV1b.load_state_dict", "torch.hub.load().state_dict", "torch.hub.load().state_dict", "model.state_dict.keys", "torch.hub.load", "torch.hub.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b._safe_state_dict_filtering", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "resnet101_v1s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetV1b", "(", "BottleneckV1b", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "deep_stem", "=", "True", ",", "stem_width", "=", "64", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "filtered_orig_dict", "=", "_safe_state_dict_filtering", "(", "\n", "torch", ".", "hub", ".", "load", "(", "GLUON_RESNET_TORCH_HUB", ",", "'gluon_resnet101_v1s'", ",", "pretrained", "=", "True", ")", ".", "state_dict", "(", ")", ",", "\n", "model_dict", ".", "keys", "(", ")", "\n", ")", "\n", "model_dict", ".", "update", "(", "filtered_orig_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet152_v1s": [[266, 277], ["resnetv1b.ResNetV1b", "ResNetV1b.state_dict", "resnetv1b._safe_state_dict_filtering", "model.state_dict.update", "ResNetV1b.load_state_dict", "torch.hub.load().state_dict", "torch.hub.load().state_dict", "model.state_dict.keys", "torch.hub.load", "torch.hub.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b._safe_state_dict_filtering", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "resnet152_v1s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetV1b", "(", "BottleneckV1b", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "deep_stem", "=", "True", ",", "stem_width", "=", "64", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "filtered_orig_dict", "=", "_safe_state_dict_filtering", "(", "\n", "torch", ".", "hub", ".", "load", "(", "GLUON_RESNET_TORCH_HUB", ",", "'gluon_resnet152_v1s'", ",", "pretrained", "=", "True", ")", ".", "state_dict", "(", ")", ",", "\n", "model_dict", ".", "keys", "(", ")", "\n", ")", "\n", "model_dict", ".", "update", "(", "filtered_orig_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule.__init__": [[14, 32], ["torch.Module.__init__", "hrnet_ocr.HighResolutionModule._check_branches", "hrnet_ocr.HighResolutionModule._make_branches", "hrnet_ocr.HighResolutionModule._make_fuse_layers", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._check_branches", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_branches", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_fuse_layers"], ["    ", "def", "__init__", "(", "self", ",", "num_branches", ",", "blocks", ",", "num_blocks", ",", "num_inchannels", ",", "\n", "num_channels", ",", "fuse_method", ",", "multi_scale_output", "=", "True", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "align_corners", "=", "True", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_check_branches", "(", "num_branches", ",", "num_blocks", ",", "num_inchannels", ",", "num_channels", ")", "\n", "\n", "self", ".", "num_inchannels", "=", "num_inchannels", "\n", "self", ".", "fuse_method", "=", "fuse_method", "\n", "self", ".", "num_branches", "=", "num_branches", "\n", "self", ".", "norm_layer", "=", "norm_layer", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "multi_scale_output", "=", "multi_scale_output", "\n", "\n", "self", ".", "branches", "=", "self", ".", "_make_branches", "(", "\n", "num_branches", ",", "blocks", ",", "num_blocks", ",", "num_channels", ")", "\n", "self", ".", "fuse_layers", "=", "self", ".", "_make_fuse_layers", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._check_branches": [[33, 48], ["len", "ValueError", "len", "ValueError", "len", "ValueError", "len", "len", "len"], "methods", ["None"], ["", "def", "_check_branches", "(", "self", ",", "num_branches", ",", "num_blocks", ",", "num_inchannels", ",", "num_channels", ")", ":", "\n", "        ", "if", "num_branches", "!=", "len", "(", "num_blocks", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_BLOCKS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_blocks", ")", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n", "", "if", "num_branches", "!=", "len", "(", "num_channels", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_CHANNELS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_channels", ")", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n", "", "if", "num_branches", "!=", "len", "(", "num_inchannels", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_INCHANNELS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_inchannels", ")", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_one_branch": [[49, 73], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionModule.norm_layer", "block"], "methods", ["None"], ["", "", "def", "_make_one_branch", "(", "self", ",", "branch_index", ",", "block", ",", "num_blocks", ",", "num_channels", ",", "\n", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "num_inchannels", "[", "branch_index", "]", "!=", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", ",", "stride", ",", "\n", "downsample", "=", "downsample", ",", "norm_layer", "=", "self", ".", "norm_layer", ")", ")", "\n", "self", ".", "num_inchannels", "[", "branch_index", "]", "=", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "num_blocks", "[", "branch_index", "]", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", ",", "\n", "norm_layer", "=", "self", ".", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_branches": [[74, 82], ["range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "branches.append", "hrnet_ocr.HighResolutionModule._make_one_branch"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_one_branch"], ["", "def", "_make_branches", "(", "self", ",", "num_branches", ",", "block", ",", "num_blocks", ",", "num_channels", ")", ":", "\n", "        ", "branches", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_branches", ")", ":", "\n", "            ", "branches", ".", "append", "(", "\n", "self", ".", "_make_one_branch", "(", "i", ",", "block", ",", "num_blocks", ",", "num_channels", ")", ")", "\n", "\n", "", "return", "nn", ".", "ModuleList", "(", "branches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule._make_fuse_layers": [[83, 124], ["range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "fuse_layers.append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "fuse_layer.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fuse_layer.append", "range", "fuse_layer.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionModule.norm_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv3x3s.append", "conv3x3s.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionModule.norm_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionModule.norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_fuse_layers", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "num_branches", "==", "1", ":", "\n", "            ", "return", "None", "\n", "\n", "", "num_branches", "=", "self", ".", "num_branches", "\n", "num_inchannels", "=", "self", ".", "num_inchannels", "\n", "fuse_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_branches", "if", "self", ".", "multi_scale_output", "else", "1", ")", ":", "\n", "            ", "fuse_layer", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_branches", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "fuse_layer", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "num_inchannels", "[", "j", "]", ",", "\n", "out_channels", "=", "num_inchannels", "[", "i", "]", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "num_inchannels", "[", "i", "]", ")", ")", ")", "\n", "", "elif", "j", "==", "i", ":", "\n", "                    ", "fuse_layer", ".", "append", "(", "None", ")", "\n", "", "else", ":", "\n", "                    ", "conv3x3s", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "num_outchannels_conv3x3", "=", "num_inchannels", "[", "i", "]", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_inchannels", "[", "j", "]", ",", "\n", "num_outchannels_conv3x3", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "num_outchannels_conv3x3", ")", ")", ")", "\n", "", "else", ":", "\n", "                            ", "num_outchannels_conv3x3", "=", "num_inchannels", "[", "j", "]", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_inchannels", "[", "j", "]", ",", "\n", "num_outchannels_conv3x3", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "num_outchannels_conv3x3", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ")", ")", "\n", "", "", "fuse_layer", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "conv3x3s", ")", ")", "\n", "", "", "fuse_layers", ".", "append", "(", "nn", ".", "ModuleList", "(", "fuse_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "ModuleList", "(", "fuse_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule.get_num_inchannels": [[125, 127], ["None"], "methods", ["None"], ["", "def", "get_num_inchannels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_inchannels", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule.forward": [[128, 153], ["range", "range", "len", "range", "x_fuse.append", "hrnet_ocr.HighResolutionModule.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "num_branches", "==", "1", ":", "\n", "            ", "return", "[", "self", ".", "branches", "[", "0", "]", "(", "x", "[", "0", "]", ")", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "num_branches", ")", ":", "\n", "            ", "x", "[", "i", "]", "=", "self", ".", "branches", "[", "i", "]", "(", "x", "[", "i", "]", ")", "\n", "\n", "", "x_fuse", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "fuse_layers", ")", ")", ":", "\n", "            ", "y", "=", "x", "[", "0", "]", "if", "i", "==", "0", "else", "self", ".", "fuse_layers", "[", "i", "]", "[", "0", "]", "(", "x", "[", "0", "]", ")", "\n", "for", "j", "in", "range", "(", "1", ",", "self", ".", "num_branches", ")", ":", "\n", "                ", "if", "i", "==", "j", ":", "\n", "                    ", "y", "=", "y", "+", "x", "[", "j", "]", "\n", "", "elif", "j", ">", "i", ":", "\n", "                    ", "width_output", "=", "x", "[", "i", "]", ".", "shape", "[", "-", "1", "]", "\n", "height_output", "=", "x", "[", "i", "]", ".", "shape", "[", "-", "2", "]", "\n", "y", "=", "y", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "fuse_layers", "[", "i", "]", "[", "j", "]", "(", "x", "[", "j", "]", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "", "else", ":", "\n", "                    ", "y", "=", "y", "+", "self", ".", "fuse_layers", "[", "i", "]", "[", "j", "]", "(", "x", "[", "j", "]", ")", "\n", "", "", "x_fuse", ".", "append", "(", "self", ".", "relu", "(", "y", ")", ")", "\n", "\n", "", "return", "x_fuse", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.__init__": [[156, 247], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "hrnet_ocr.HighResolutionNet._make_layer", "hrnet_ocr.HighResolutionNet._make_transition_layer", "hrnet_ocr.HighResolutionNet._make_stage", "hrnet_ocr.HighResolutionNet._make_transition_layer", "hrnet_ocr.HighResolutionNet._make_stage", "hrnet_ocr.HighResolutionNet._make_transition_layer", "hrnet_ocr.HighResolutionNet._make_stage", "numpy.int", "numpy.sum", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ocr.SpatialGather_Module", "ocr.SpatialOCR_Module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "range", "range", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_stage", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_stage", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_stage"], ["    ", "def", "__init__", "(", "self", ",", "width", ",", "num_classes", ",", "ocr_width", "=", "256", ",", "small", "=", "False", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "align_corners", "=", "True", ")", ":", "\n", "        ", "super", "(", "HighResolutionNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_layer", "=", "norm_layer", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "ocr_width", "=", "ocr_width", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", "\n", "\n", "num_blocks", "=", "2", "if", "small", "else", "4", "\n", "\n", "stage1_num_channels", "=", "64", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "BottleneckV1b", ",", "64", ",", "stage1_num_channels", ",", "blocks", "=", "num_blocks", ")", "\n", "stage1_out_channel", "=", "BottleneckV1b", ".", "expansion", "*", "stage1_num_channels", "\n", "\n", "self", ".", "stage2_num_branches", "=", "2", "\n", "num_channels", "=", "[", "width", ",", "2", "*", "width", "]", "\n", "num_inchannels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "BasicBlockV1b", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition1", "=", "self", ".", "_make_transition_layer", "(", "\n", "[", "stage1_out_channel", "]", ",", "num_inchannels", ")", "\n", "self", ".", "stage2", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "BasicBlockV1b", ",", "num_inchannels", "=", "num_inchannels", ",", "num_modules", "=", "1", ",", "num_branches", "=", "self", ".", "stage2_num_branches", ",", "\n", "num_blocks", "=", "2", "*", "[", "num_blocks", "]", ",", "num_channels", "=", "num_channels", ")", "\n", "\n", "self", ".", "stage3_num_branches", "=", "3", "\n", "num_channels", "=", "[", "width", ",", "2", "*", "width", ",", "4", "*", "width", "]", "\n", "num_inchannels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "BasicBlockV1b", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition2", "=", "self", ".", "_make_transition_layer", "(", "\n", "pre_stage_channels", ",", "num_inchannels", ")", "\n", "self", ".", "stage3", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "BasicBlockV1b", ",", "num_inchannels", "=", "num_inchannels", ",", "\n", "num_modules", "=", "3", "if", "small", "else", "4", ",", "num_branches", "=", "self", ".", "stage3_num_branches", ",", "\n", "num_blocks", "=", "3", "*", "[", "num_blocks", "]", ",", "num_channels", "=", "num_channels", ")", "\n", "\n", "self", ".", "stage4_num_branches", "=", "4", "\n", "num_channels", "=", "[", "width", ",", "2", "*", "width", ",", "4", "*", "width", ",", "8", "*", "width", "]", "\n", "num_inchannels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "BasicBlockV1b", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition3", "=", "self", ".", "_make_transition_layer", "(", "\n", "pre_stage_channels", ",", "num_inchannels", ")", "\n", "self", ".", "stage4", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "BasicBlockV1b", ",", "num_inchannels", "=", "num_inchannels", ",", "num_modules", "=", "2", "if", "small", "else", "3", ",", "\n", "num_branches", "=", "self", ".", "stage4_num_branches", ",", "\n", "num_blocks", "=", "4", "*", "[", "num_blocks", "]", ",", "num_channels", "=", "num_channels", ")", "\n", "\n", "last_inp_channels", "=", "np", ".", "int", "(", "np", ".", "sum", "(", "pre_stage_channels", ")", ")", "\n", "if", "self", ".", "ocr_width", ">", "0", ":", "\n", "            ", "ocr_mid_channels", "=", "2", "*", "self", ".", "ocr_width", "\n", "ocr_key_channels", "=", "self", ".", "ocr_width", "\n", "\n", "self", ".", "conv3x3_ocr", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "last_inp_channels", ",", "ocr_mid_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "norm_layer", "(", "ocr_mid_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ",", "\n", ")", "\n", "self", ".", "ocr_gather_head", "=", "SpatialGather_Module", "(", "num_classes", ")", "\n", "\n", "self", ".", "ocr_distri_head", "=", "SpatialOCR_Module", "(", "in_channels", "=", "ocr_mid_channels", ",", "\n", "key_channels", "=", "ocr_key_channels", ",", "\n", "out_channels", "=", "ocr_mid_channels", ",", "\n", "scale", "=", "1", ",", "\n", "dropout", "=", "0.05", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "cls_head", "=", "nn", ".", "Conv2d", "(", "\n", "ocr_mid_channels", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "last_inp_channels", ",", "last_inp_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "norm_layer", "(", "last_inp_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ",", "\n", "nn", ".", "Conv2d", "(", "last_inp_channels", ",", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "cls_head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "last_inp_channels", ",", "last_inp_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "norm_layer", "(", "last_inp_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ",", "\n", "nn", ".", "Conv2d", "(", "last_inp_channels", ",", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_transition_layer": [[249, 283], ["len", "len", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "transition_layers.append", "transition_layers.append", "transition_layers.append", "conv3x3s.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionNet.norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionNet.norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "", "def", "_make_transition_layer", "(", "\n", "self", ",", "num_channels_pre_layer", ",", "num_channels_cur_layer", ")", ":", "\n", "        ", "num_branches_cur", "=", "len", "(", "num_channels_cur_layer", ")", "\n", "num_branches_pre", "=", "len", "(", "num_channels_pre_layer", ")", "\n", "\n", "transition_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_branches_cur", ")", ":", "\n", "            ", "if", "i", "<", "num_branches_pre", ":", "\n", "                ", "if", "num_channels_cur_layer", "[", "i", "]", "!=", "num_channels_pre_layer", "[", "i", "]", ":", "\n", "                    ", "transition_layers", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_channels_pre_layer", "[", "i", "]", ",", "\n", "num_channels_cur_layer", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "num_channels_cur_layer", "[", "i", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "transition_layers", ".", "append", "(", "None", ")", "\n", "", "", "else", ":", "\n", "                ", "conv3x3s", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", "-", "num_branches_pre", ")", ":", "\n", "                    ", "inchannels", "=", "num_channels_pre_layer", "[", "-", "1", "]", "\n", "outchannels", "=", "num_channels_cur_layer", "[", "i", "]", "if", "j", "==", "i", "-", "num_branches_pre", "else", "inchannels", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inchannels", ",", "outchannels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "outchannels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "relu_inplace", ")", ")", ")", "\n", "", "transition_layers", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "conv3x3s", ")", ")", "\n", "\n", "", "", "return", "nn", ".", "ModuleList", "(", "transition_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_layer": [[284, 301], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "hrnet_ocr.HighResolutionNet.norm_layer", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "\n", "downsample", "=", "downsample", ",", "norm_layer", "=", "self", ".", "norm_layer", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "norm_layer", "=", "self", ".", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet._make_stage": [[302, 327], ["range", "modules.append", "modules[].get_num_inchannels", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "hrnet_ocr.HighResolutionModule"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionModule.get_num_inchannels"], ["", "def", "_make_stage", "(", "self", ",", "block", ",", "num_inchannels", ",", "\n", "num_modules", ",", "num_branches", ",", "num_blocks", ",", "num_channels", ",", "\n", "fuse_method", "=", "'SUM'", ",", "\n", "multi_scale_output", "=", "True", ")", ":", "\n", "        ", "modules", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "# multi_scale_output is only used last module", "\n", "            ", "if", "not", "multi_scale_output", "and", "i", "==", "num_modules", "-", "1", ":", "\n", "                ", "reset_multi_scale_output", "=", "False", "\n", "", "else", ":", "\n", "                ", "reset_multi_scale_output", "=", "True", "\n", "", "modules", ".", "append", "(", "\n", "HighResolutionModule", "(", "num_branches", ",", "\n", "block", ",", "\n", "num_blocks", ",", "\n", "num_inchannels", ",", "\n", "num_channels", ",", "\n", "fuse_method", ",", "\n", "reset_multi_scale_output", ",", "\n", "norm_layer", "=", "self", ".", "norm_layer", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", ")", "\n", "num_inchannels", "=", "modules", "[", "-", "1", "]", ".", "get_num_inchannels", "(", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", ",", "num_inchannels", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.forward": [[328, 340], ["hrnet_ocr.HighResolutionNet.compute_hrnet_feats", "hrnet_ocr.HighResolutionNet.aux_head", "hrnet_ocr.HighResolutionNet.conv3x3_ocr", "hrnet_ocr.HighResolutionNet.ocr_gather_head", "hrnet_ocr.HighResolutionNet.ocr_distri_head", "hrnet_ocr.HighResolutionNet.cls_head", "hrnet_ocr.HighResolutionNet.cls_head"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.compute_hrnet_feats"], ["", "def", "forward", "(", "self", ",", "x", ",", "additional_features", "=", "None", ")", ":", "\n", "        ", "feats", "=", "self", ".", "compute_hrnet_feats", "(", "x", ",", "additional_features", ")", "\n", "if", "self", ".", "ocr_width", ">", "0", ":", "\n", "            ", "out_aux", "=", "self", ".", "aux_head", "(", "feats", ")", "\n", "feats", "=", "self", ".", "conv3x3_ocr", "(", "feats", ")", "\n", "\n", "context", "=", "self", ".", "ocr_gather_head", "(", "feats", ",", "out_aux", ")", "\n", "feats", "=", "self", ".", "ocr_distri_head", "(", "feats", ",", "context", ")", "\n", "out", "=", "self", ".", "cls_head", "(", "feats", ")", "\n", "return", "[", "out", ",", "out_aux", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "self", ".", "cls_head", "(", "feats", ")", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.compute_hrnet_feats": [[341, 376], ["hrnet_ocr.HighResolutionNet.compute_pre_stage_features", "hrnet_ocr.HighResolutionNet.layer1", "range", "hrnet_ocr.HighResolutionNet.stage2", "range", "hrnet_ocr.HighResolutionNet.stage3", "range", "hrnet_ocr.HighResolutionNet.stage4", "hrnet_ocr.HighResolutionNet.aggregate_hrnet_features", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.compute_pre_stage_features", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.aggregate_hrnet_features"], ["", "", "def", "compute_hrnet_feats", "(", "self", ",", "x", ",", "additional_features", ")", ":", "\n", "        ", "x", "=", "self", ".", "compute_pre_stage_features", "(", "x", ",", "additional_features", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage2_num_branches", ")", ":", "\n", "            ", "if", "self", ".", "transition1", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "x_list", ".", "append", "(", "self", ".", "transition1", "[", "i", "]", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "x", ")", "\n", "", "", "y_list", "=", "self", ".", "stage2", "(", "x_list", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage3_num_branches", ")", ":", "\n", "            ", "if", "self", ".", "transition2", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "if", "i", "<", "self", ".", "stage2_num_branches", ":", "\n", "                    ", "x_list", ".", "append", "(", "self", ".", "transition2", "[", "i", "]", "(", "y_list", "[", "i", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "x_list", ".", "append", "(", "self", ".", "transition2", "[", "i", "]", "(", "y_list", "[", "-", "1", "]", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "y_list", "[", "i", "]", ")", "\n", "", "", "y_list", "=", "self", ".", "stage3", "(", "x_list", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage4_num_branches", ")", ":", "\n", "            ", "if", "self", ".", "transition3", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "if", "i", "<", "self", ".", "stage3_num_branches", ":", "\n", "                    ", "x_list", ".", "append", "(", "self", ".", "transition3", "[", "i", "]", "(", "y_list", "[", "i", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "x_list", ".", "append", "(", "self", ".", "transition3", "[", "i", "]", "(", "y_list", "[", "-", "1", "]", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "y_list", "[", "i", "]", ")", "\n", "", "", "x", "=", "self", ".", "stage4", "(", "x_list", ")", "\n", "\n", "return", "self", ".", "aggregate_hrnet_features", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.compute_pre_stage_features": [[377, 386], ["hrnet_ocr.HighResolutionNet.conv1", "hrnet_ocr.HighResolutionNet.bn1", "hrnet_ocr.HighResolutionNet.relu", "hrnet_ocr.HighResolutionNet.conv2", "hrnet_ocr.HighResolutionNet.bn2", "hrnet_ocr.HighResolutionNet.relu"], "methods", ["None"], ["", "def", "compute_pre_stage_features", "(", "self", ",", "x", ",", "additional_features", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "if", "additional_features", "is", "not", "None", ":", "\n", "            ", "x", "=", "x", "+", "additional_features", "\n", "", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.aggregate_hrnet_features": [[387, 398], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x[].size", "x[].size"], "methods", ["None"], ["", "def", "aggregate_hrnet_features", "(", "self", ",", "x", ")", ":", "\n", "# Upsampling", "\n", "        ", "x0_h", ",", "x0_w", "=", "x", "[", "0", "]", ".", "size", "(", "2", ")", ",", "x", "[", "0", "]", ".", "size", "(", "3", ")", "\n", "x1", "=", "F", ".", "interpolate", "(", "x", "[", "1", "]", ",", "size", "=", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x2", "=", "F", ".", "interpolate", "(", "x", "[", "2", "]", ",", "size", "=", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x3", "=", "F", ".", "interpolate", "(", "x", "[", "3", "]", ",", "size", "=", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "x", "[", "0", "]", ",", "x1", ",", "x2", ",", "x3", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights": [[399, 417], ["hrnet_ocr.HighResolutionNet.state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "hrnet_ocr.HighResolutionNet.update", "hrnet_ocr.HighResolutionNet.load_state_dict", "os.path.exists", "print", "print", "exit", "k.replace().replace", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "k.replace", "hrnet_ocr.HighResolutionNet.keys"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "load_pretrained_weights", "(", "self", ",", "pretrained_path", "=", "''", ")", ":", "\n", "        ", "model_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "pretrained_path", ")", ":", "\n", "            ", "print", "(", "f'\\nFile \"{pretrained_path}\" does not exist.'", ")", "\n", "print", "(", "'You need to specify the correct path to the pre-trained weights.\\n'", "\n", "'You can download the weights for HRNet from the repository:\\n'", "\n", "'https://github.com/HRNet/HRNet-Image-Classification'", ")", "\n", "exit", "(", "1", ")", "\n", "", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained_path", ",", "map_location", "=", "{", "'cuda:0'", ":", "'cpu'", "}", ")", "\n", "pretrained_dict", "=", "{", "k", ".", "replace", "(", "'last_layer'", ",", "'aux_head'", ")", ".", "replace", "(", "'model.'", ",", "''", ")", ":", "v", "for", "k", ",", "v", "in", "\n", "pretrained_dict", ".", "items", "(", ")", "}", "\n", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "in", "model_dict", ".", "keys", "(", ")", "}", "\n", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "self", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnet.ResNetBackbone.__init__": [[6, 28], ["super().__init__", "resnetv1b.resnet34_v1b", "resnetv1b.resnet50_v1s", "resnetv1b.resnet101_v1s", "resnetv1b.resnet152_v1s", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet34_v1b", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet50_v1s", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet101_v1s", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnetv1b.resnet152_v1s"], ["    ", "def", "__init__", "(", "self", ",", "backbone", "=", "'resnet50'", ",", "pretrained_base", "=", "True", ",", "dilated", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ResNetBackbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "backbone", "==", "'resnet34'", ":", "\n", "            ", "pretrained", "=", "resnet34_v1b", "(", "pretrained", "=", "pretrained_base", ",", "dilated", "=", "dilated", ",", "**", "kwargs", ")", "\n", "", "elif", "backbone", "==", "'resnet50'", ":", "\n", "            ", "pretrained", "=", "resnet50_v1s", "(", "pretrained", "=", "pretrained_base", ",", "dilated", "=", "dilated", ",", "**", "kwargs", ")", "\n", "", "elif", "backbone", "==", "'resnet101'", ":", "\n", "            ", "pretrained", "=", "resnet101_v1s", "(", "pretrained", "=", "pretrained_base", ",", "dilated", "=", "dilated", ",", "**", "kwargs", ")", "\n", "", "elif", "backbone", "==", "'resnet152'", ":", "\n", "            ", "pretrained", "=", "resnet152_v1s", "(", "pretrained", "=", "pretrained_base", ",", "dilated", "=", "dilated", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f'unknown backbone: {backbone}'", ")", "\n", "\n", "", "self", ".", "conv1", "=", "pretrained", ".", "conv1", "\n", "self", ".", "bn1", "=", "pretrained", ".", "bn1", "\n", "self", ".", "relu", "=", "pretrained", ".", "relu", "\n", "self", ".", "maxpool", "=", "pretrained", ".", "maxpool", "\n", "self", ".", "layer1", "=", "pretrained", ".", "layer1", "\n", "self", ".", "layer2", "=", "pretrained", ".", "layer2", "\n", "self", ".", "layer3", "=", "pretrained", ".", "layer3", "\n", "self", ".", "layer4", "=", "pretrained", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.resnet.ResNetBackbone.forward": [[29, 44], ["resnet.ResNetBackbone.conv1", "resnet.ResNetBackbone.bn1", "resnet.ResNetBackbone.relu", "resnet.ResNetBackbone.maxpool", "resnet.ResNetBackbone.layer1", "resnet.ResNetBackbone.layer2", "resnet.ResNetBackbone.layer3", "resnet.ResNetBackbone.layer4", "torch.nn.functional.pad", "resnet.ResNetBackbone.size", "additional_features.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "additional_features", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "if", "additional_features", "is", "not", "None", ":", "\n", "            ", "x", "=", "x", "+", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "additional_features", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "x", ".", "size", "(", "1", ")", "-", "additional_features", ".", "size", "(", "1", ")", "]", ",", "\n", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "c1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "c2", "=", "self", ".", "layer2", "(", "c1", ")", "\n", "c3", "=", "self", ".", "layer3", "(", "c2", ")", "\n", "c4", "=", "self", ".", "layer4", "(", "c3", ")", "\n", "\n", "return", "c1", ",", "c2", ",", "c3", ",", "c4", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.SpatialGather_Module.__init__": [[14, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "cls_num", "=", "0", ",", "scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "SpatialGather_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cls_num", "=", "cls_num", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.SpatialGather_Module.forward": [[19, 28], ["torch.softmax.view", "feats.permute.permute.view", "feats.permute.permute.permute", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.matmul().permute().unsqueeze", "torch.softmax.size", "torch.softmax.size", "torch.softmax.size", "torch.softmax.size", "feats.permute.permute.size", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul().permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ",", "probs", ")", ":", "\n", "        ", "batch_size", ",", "c", ",", "h", ",", "w", "=", "probs", ".", "size", "(", "0", ")", ",", "probs", ".", "size", "(", "1", ")", ",", "probs", ".", "size", "(", "2", ")", ",", "probs", ".", "size", "(", "3", ")", "\n", "probs", "=", "probs", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ")", "\n", "feats", "=", "feats", ".", "view", "(", "batch_size", ",", "feats", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "feats", "=", "feats", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# batch x hw x c", "\n", "probs", "=", "F", ".", "softmax", "(", "self", ".", "scale", "*", "probs", ",", "dim", "=", "2", ")", "# batch x k x hw", "\n", "ocr_context", "=", "torch", ".", "matmul", "(", "probs", ",", "feats", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", "# batch x k x c", "\n", "return", "ocr_context", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.SpatialOCR_Module.__init__": [[36, 53], ["torch.Module.__init__", "ocr.ObjectAttentionBlock2D", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "key_channels", ",", "\n", "out_channels", ",", "\n", "scale", "=", "1", ",", "\n", "dropout", "=", "0.1", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", "align_corners", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialOCR_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "object_context_block", "=", "ObjectAttentionBlock2D", "(", "in_channels", ",", "key_channels", ",", "scale", ",", "\n", "norm_layer", ",", "align_corners", ")", "\n", "_in_channels", "=", "2", "*", "in_channels", "\n", "\n", "self", ".", "conv_bn_dropout", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "_in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "out_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "dropout", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.SpatialOCR_Module.forward": [[55, 61], ["ocr.SpatialOCR_Module.object_context_block", "ocr.SpatialOCR_Module.conv_bn_dropout", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ",", "proxy_feats", ")", ":", "\n", "        ", "context", "=", "self", ".", "object_context_block", "(", "feats", ",", "proxy_feats", ")", "\n", "\n", "output", "=", "self", ".", "conv_bn_dropout", "(", "torch", ".", "cat", "(", "[", "context", ",", "feats", "]", ",", "1", ")", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.ObjectAttentionBlock2D.__init__": [[77, 115], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "key_channels", ",", "\n", "scale", "=", "1", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", "align_corners", "=", "True", ")", ":", "\n", "        ", "super", "(", "ObjectAttentionBlock2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "scale", ",", "scale", ")", ")", "\n", "self", ".", "f_pixel", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "key_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "key_channels", ",", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "key_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", ")", "\n", "self", ".", "f_object", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "key_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "key_channels", ",", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "key_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", ")", "\n", "self", ".", "f_down", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "key_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", ")", "\n", "self", ".", "f_up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "key_channels", ",", "out_channels", "=", "self", ".", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sequential", "(", "norm_layer", "(", "self", ".", "in_channels", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.ocr.ObjectAttentionBlock2D.forward": [[117, 142], ["ocr.ObjectAttentionBlock2D.f_pixel().view", "query.permute.permute.permute", "ocr.ObjectAttentionBlock2D.f_object().view", "ocr.ObjectAttentionBlock2D.f_down().view", "value.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.interpolate.permute().contiguous", "torch.interpolate.view", "ocr.ObjectAttentionBlock2D.f_up", "ocr.ObjectAttentionBlock2D.size", "ocr.ObjectAttentionBlock2D.size", "ocr.ObjectAttentionBlock2D.size", "ocr.ObjectAttentionBlock2D.pool", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ocr.ObjectAttentionBlock2D.f_pixel", "ocr.ObjectAttentionBlock2D.f_object", "ocr.ObjectAttentionBlock2D.f_down", "torch.interpolate.permute", "ocr.ObjectAttentionBlock2D.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "proxy", ")", ":", "\n", "        ", "batch_size", ",", "h", ",", "w", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "\n", "", "query", "=", "self", ".", "f_pixel", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "-", "1", ")", "\n", "query", "=", "query", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "key", "=", "self", ".", "f_object", "(", "proxy", ")", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "-", "1", ")", "\n", "value", "=", "self", ".", "f_down", "(", "proxy", ")", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "-", "1", ")", "\n", "value", "=", "value", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "sim_map", "=", "torch", ".", "matmul", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# add bg context ...", "\n", "context", "=", "torch", ".", "matmul", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "context", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "context", "=", "context", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "context", "=", "self", ".", "f_up", "(", "context", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "context", "=", "F", ".", "interpolate", "(", "input", "=", "context", ",", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "", "return", "context", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.__init__": [[22, 115], ["copy.deepcopy", "copy.deepcopy", "isegm.utils.log.logger.info", "isegm.utils.log.logger.info", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "optimizer.get_optimizer", "trainer.ISTrainer._load_weights", "trainer.ISTrainer.to", "isegm.utils.log.TqdmToLogger", "trainer.ISTrainer.val_metrics.extend", "isegm.utils.log.logger.info", "isegm.utils.log.logger.info", "lr_scheduler", "isegm.utils.distributed.get_sampler", "isegm.utils.distributed.get_sampler", "isegm.utils.distributed.get_dp_wrapper", "isegm.utils.serialization.get_config_repr", "range", "click_model.parameters", "click_model.to", "click_model.eval", "trainset.get_samples_number", "valset.get_samples_number", "trainer.ISTrainer.lr_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.optimizer.get_optimizer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer._load_weights", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_sampler", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_sampler", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.get_dp_wrapper", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.get_config_repr", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.get_samples_number", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.get_samples_number"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "None", ",", "\n", "image_dump_interval", "=", "200", ",", "\n", "checkpoint_interval", "=", "10", ",", "\n", "tb_dump_period", "=", "25", ",", "\n", "max_interactive_points", "=", "0", ",", "\n", "lr_scheduler", "=", "None", ",", "\n", "metrics", "=", "None", ",", "\n", "additional_val_metrics", "=", "None", ",", "\n", "net_inputs", "=", "(", "'images'", ",", "'points'", ")", ",", "\n", "max_num_next_clicks", "=", "0", ",", "\n", "click_models", "=", "None", ",", "\n", "prev_mask_drop_prob", "=", "0.0", ",", "\n", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "max_interactive_points", "=", "max_interactive_points", "\n", "self", ".", "loss_cfg", "=", "loss_cfg", "\n", "self", ".", "val_loss_cfg", "=", "deepcopy", "(", "loss_cfg", ")", "\n", "self", ".", "tb_dump_period", "=", "tb_dump_period", "\n", "self", ".", "net_inputs", "=", "net_inputs", "\n", "self", ".", "max_num_next_clicks", "=", "max_num_next_clicks", "\n", "\n", "self", ".", "click_models", "=", "click_models", "\n", "self", ".", "prev_mask_drop_prob", "=", "prev_mask_drop_prob", "\n", "\n", "if", "cfg", ".", "distributed", ":", "\n", "            ", "cfg", ".", "batch_size", "//=", "cfg", ".", "ngpus", "\n", "cfg", ".", "val_batch_size", "//=", "cfg", ".", "ngpus", "\n", "\n", "", "if", "metrics", "is", "None", ":", "\n", "            ", "metrics", "=", "[", "]", "\n", "", "self", ".", "train_metrics", "=", "metrics", "\n", "self", ".", "val_metrics", "=", "deepcopy", "(", "metrics", ")", "\n", "if", "additional_val_metrics", "is", "not", "None", ":", "\n", "            ", "self", ".", "val_metrics", ".", "extend", "(", "additional_val_metrics", ")", "\n", "\n", "", "self", ".", "checkpoint_interval", "=", "checkpoint_interval", "\n", "self", ".", "image_dump_interval", "=", "image_dump_interval", "\n", "self", ".", "task_prefix", "=", "''", "\n", "self", ".", "sw", "=", "None", "\n", "\n", "self", ".", "trainset", "=", "trainset", "\n", "self", ".", "valset", "=", "valset", "\n", "\n", "logger", ".", "info", "(", "f'Dataset of {trainset.get_samples_number()} samples was loaded for training.'", ")", "\n", "logger", ".", "info", "(", "f'Dataset of {valset.get_samples_number()} samples was loaded for validation.'", ")", "\n", "\n", "self", ".", "train_data", "=", "DataLoader", "(", "\n", "trainset", ",", "cfg", ".", "batch_size", ",", "\n", "sampler", "=", "get_sampler", "(", "trainset", ",", "shuffle", "=", "True", ",", "distributed", "=", "cfg", ".", "distributed", ")", ",", "\n", "drop_last", "=", "True", ",", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "cfg", ".", "workers", "\n", ")", "\n", "\n", "self", ".", "val_data", "=", "DataLoader", "(", "\n", "valset", ",", "cfg", ".", "val_batch_size", ",", "\n", "sampler", "=", "get_sampler", "(", "valset", ",", "shuffle", "=", "False", ",", "distributed", "=", "cfg", ".", "distributed", ")", ",", "\n", "drop_last", "=", "True", ",", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "cfg", ".", "workers", "\n", ")", "\n", "\n", "self", ".", "optim", "=", "get_optimizer", "(", "model", ",", "optimizer", ",", "optimizer_params", ")", "\n", "model", "=", "self", ".", "_load_weights", "(", "model", ")", "\n", "\n", "if", "cfg", ".", "multi_gpu", ":", "\n", "            ", "model", "=", "get_dp_wrapper", "(", "cfg", ".", "distributed", ")", "(", "model", ",", "device_ids", "=", "cfg", ".", "gpu_ids", ",", "\n", "output_device", "=", "cfg", ".", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "", "if", "self", ".", "is_master", ":", "\n", "            ", "logger", ".", "info", "(", "model", ")", "\n", "logger", ".", "info", "(", "get_config_repr", "(", "model", ".", "_config", ")", ")", "\n", "\n", "", "self", ".", "device", "=", "cfg", ".", "device", "\n", "self", ".", "net", "=", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "lr", "=", "optimizer_params", "[", "'lr'", "]", "\n", "\n", "if", "lr_scheduler", "is", "not", "None", ":", "\n", "            ", "self", ".", "lr_scheduler", "=", "lr_scheduler", "(", "optimizer", "=", "self", ".", "optim", ")", "\n", "if", "cfg", ".", "start_epoch", ">", "0", ":", "\n", "                ", "for", "_", "in", "range", "(", "cfg", ".", "start_epoch", ")", ":", "\n", "                    ", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "", "self", ".", "tqdm_out", "=", "TqdmToLogger", "(", "logger", ",", "level", "=", "logging", ".", "INFO", ")", "\n", "\n", "if", "self", ".", "click_models", "is", "not", "None", ":", "\n", "            ", "for", "click_model", "in", "self", ".", "click_models", ":", "\n", "                ", "for", "param", "in", "click_model", ".", "parameters", "(", ")", ":", "\n", "                    ", "param", ".", "requires_grad", "=", "False", "\n", "", "click_model", ".", "to", "(", "self", ".", "device", ")", "\n", "click_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run": [[116, 126], ["isegm.utils.log.logger.info", "isegm.utils.log.logger.info", "range", "trainer.ISTrainer.training", "trainer.ISTrainer.validation"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.training", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.validation"], ["", "", "", "def", "run", "(", "self", ",", "num_epochs", ",", "start_epoch", "=", "None", ",", "validation", "=", "True", ")", ":", "\n", "        ", "if", "start_epoch", "is", "None", ":", "\n", "            ", "start_epoch", "=", "self", ".", "cfg", ".", "start_epoch", "\n", "\n", "", "logger", ".", "info", "(", "f'Starting Epoch: {start_epoch}'", ")", "\n", "logger", ".", "info", "(", "f'Total Epochs: {num_epochs}'", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "num_epochs", ")", ":", "\n", "            ", "self", ".", "training", "(", "epoch", ")", "\n", "if", "validation", ":", "\n", "                ", "self", ".", "validation", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.training": [[127, 200], ["trainer.ISTrainer.net.train", "enumerate", "hasattr", "isegm.utils.log.SummaryWriterAvg", "trainer.ISTrainer.train_data.sampler.set_epoch", "trainer.ISTrainer.task_prefix.capitalize", "tqdm.tqdm.tqdm", "metric.reset_epoch_stats", "trainer.ISTrainer.batch_forward", "trainer.ISTrainer.optim.zero_grad", "loss.backward", "trainer.ISTrainer.optim.step", "isegm.utils.distributed.reduce_loss_dict", "losses_logging[].item", "isegm.utils.misc.save_checkpoint", "isinstance", "trainer.ISTrainer.lr_scheduler.step", "losses_logging.items", "trainer.ISTrainer.loss_cfg.items", "trainer.ISTrainer.sw.add_scalar", "tbar.set_description", "trainer.ISTrainer.sw.add_scalar", "isegm.utils.misc.save_checkpoint", "str", "len", "trainer.ISTrainer.sw.add_scalar", "trainer.ISTrainer.save_visualization", "metric.log_states", "hasattr", "v.log_states", "metric.get_epoch_value", "loss_value.item", "trainer.ISTrainer.loss_cfg.get", "hasattr", "trainer.ISTrainer.lr_scheduler.get_lr"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.reset_epoch_stats", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.batch_forward", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.reduce_loss_dict", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.save_checkpoint", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.save_checkpoint", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.save_visualization", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.log_states", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.log_states", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.get_epoch_value"], ["", "", "", "def", "training", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "sw", "is", "None", "and", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "sw", "=", "SummaryWriterAvg", "(", "log_dir", "=", "str", "(", "self", ".", "cfg", ".", "LOGS_PATH", ")", ",", "\n", "flush_secs", "=", "10", ",", "dump_period", "=", "self", ".", "tb_dump_period", ")", "\n", "\n", "", "if", "self", ".", "cfg", ".", "distributed", ":", "\n", "            ", "self", ".", "train_data", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "log_prefix", "=", "'Train'", "+", "self", ".", "task_prefix", ".", "capitalize", "(", ")", "\n", "tbar", "=", "tqdm", "(", "self", ".", "train_data", ",", "file", "=", "self", ".", "tqdm_out", ",", "ncols", "=", "100", ")", "if", "self", ".", "is_master", "else", "self", ".", "train_data", "\n", "\n", "for", "metric", "in", "self", ".", "train_metrics", ":", "\n", "            ", "metric", ".", "reset_epoch_stats", "(", ")", "\n", "\n", "", "self", ".", "net", ".", "train", "(", ")", "\n", "train_loss", "=", "0.0", "\n", "for", "i", ",", "batch_data", "in", "enumerate", "(", "tbar", ")", ":", "\n", "            ", "global_step", "=", "epoch", "*", "len", "(", "self", ".", "train_data", ")", "+", "i", "\n", "\n", "loss", ",", "losses_logging", ",", "splitted_batch_data", ",", "outputs", "=", "self", ".", "batch_forward", "(", "batch_data", ")", "\n", "\n", "self", ".", "optim", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optim", ".", "step", "(", ")", "\n", "\n", "losses_logging", "[", "'overall'", "]", "=", "loss", "\n", "reduce_loss_dict", "(", "losses_logging", ")", "\n", "\n", "train_loss", "+=", "losses_logging", "[", "'overall'", "]", ".", "item", "(", ")", "\n", "\n", "if", "self", ".", "is_master", ":", "\n", "                ", "for", "loss_name", ",", "loss_value", "in", "losses_logging", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "sw", ".", "add_scalar", "(", "tag", "=", "f'{log_prefix}Losses/{loss_name}'", ",", "\n", "value", "=", "loss_value", ".", "item", "(", ")", ",", "\n", "global_step", "=", "global_step", ")", "\n", "\n", "", "for", "k", ",", "v", "in", "self", ".", "loss_cfg", ".", "items", "(", ")", ":", "\n", "                    ", "if", "'_loss'", "in", "k", "and", "hasattr", "(", "v", ",", "'log_states'", ")", "and", "self", ".", "loss_cfg", ".", "get", "(", "k", "+", "'_weight'", ",", "0.0", ")", ">", "0", ":", "\n", "                        ", "v", ".", "log_states", "(", "self", ".", "sw", ",", "f'{log_prefix}Losses/{k}'", ",", "global_step", ")", "\n", "\n", "", "", "if", "self", ".", "image_dump_interval", ">", "0", "and", "global_step", "%", "self", ".", "image_dump_interval", "==", "0", ":", "\n", "                    ", "self", ".", "save_visualization", "(", "splitted_batch_data", ",", "outputs", ",", "global_step", ",", "prefix", "=", "'train'", ")", "\n", "\n", "", "self", ".", "sw", ".", "add_scalar", "(", "tag", "=", "f'{log_prefix}States/learning_rate'", ",", "\n", "value", "=", "self", ".", "lr", "if", "not", "hasattr", "(", "self", ",", "'lr_scheduler'", ")", "else", "self", ".", "lr_scheduler", ".", "get_lr", "(", ")", "[", "-", "1", "]", ",", "\n", "global_step", "=", "global_step", ")", "\n", "\n", "tbar", ".", "set_description", "(", "f'Epoch {epoch}, training loss {train_loss/(i+1):.4f}'", ")", "\n", "for", "metric", "in", "self", ".", "train_metrics", ":", "\n", "                    ", "metric", ".", "log_states", "(", "self", ".", "sw", ",", "f'{log_prefix}Metrics/{metric.name}'", ",", "global_step", ")", "\n", "\n", "", "", "", "if", "self", ".", "is_master", ":", "\n", "            ", "for", "metric", "in", "self", ".", "train_metrics", ":", "\n", "                ", "self", ".", "sw", ".", "add_scalar", "(", "tag", "=", "f'{log_prefix}Metrics/{metric.name}'", ",", "\n", "value", "=", "metric", ".", "get_epoch_value", "(", ")", ",", "\n", "global_step", "=", "epoch", ",", "disable_avg", "=", "True", ")", "\n", "\n", "", "save_checkpoint", "(", "self", ".", "net", ",", "self", ".", "cfg", ".", "CHECKPOINTS_PATH", ",", "prefix", "=", "self", ".", "task_prefix", ",", "\n", "epoch", "=", "None", ",", "multi_gpu", "=", "self", ".", "cfg", ".", "multi_gpu", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "checkpoint_interval", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "checkpoint_interval", "=", "[", "x", "for", "x", "in", "self", ".", "checkpoint_interval", "if", "x", "[", "0", "]", "<=", "epoch", "]", "[", "-", "1", "]", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "checkpoint_interval", "=", "self", ".", "checkpoint_interval", "\n", "\n", "", "if", "epoch", "%", "checkpoint_interval", "==", "0", ":", "\n", "                ", "save_checkpoint", "(", "self", ".", "net", ",", "self", ".", "cfg", ".", "CHECKPOINTS_PATH", ",", "prefix", "=", "self", ".", "task_prefix", ",", "\n", "epoch", "=", "epoch", ",", "multi_gpu", "=", "self", ".", "cfg", ".", "multi_gpu", ")", "\n", "\n", "", "", "if", "hasattr", "(", "self", ",", "'lr_scheduler'", ")", ":", "\n", "            ", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.validation": [[201, 241], ["collections.defaultdict", "trainer.ISTrainer.net.eval", "enumerate", "isegm.utils.log.SummaryWriterAvg", "trainer.ISTrainer.task_prefix.capitalize", "tqdm.tqdm.tqdm", "metric.reset_epoch_stats", "trainer.ISTrainer.batch_forward", "isegm.utils.distributed.reduce_loss_dict", "batch_losses_logging.items", "batch_losses_logging[].item", "collections.defaultdict.items", "losses_logging[].append", "tbar.set_description", "trainer.ISTrainer.sw.add_scalar", "trainer.ISTrainer.sw.add_scalar", "str", "len", "loss_value.item", "metric.log_states", "numpy.array().mean", "metric.get_epoch_value", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.reset_epoch_stats", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.batch_forward", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.distributed.reduce_loss_dict", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.SummaryWriterAvg.add_scalar", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.losses.NormalizedFocalLossSigmoid.log_states", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.get_epoch_value"], ["", "", "def", "validation", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "sw", "is", "None", "and", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "sw", "=", "SummaryWriterAvg", "(", "log_dir", "=", "str", "(", "self", ".", "cfg", ".", "LOGS_PATH", ")", ",", "\n", "flush_secs", "=", "10", ",", "dump_period", "=", "self", ".", "tb_dump_period", ")", "\n", "\n", "", "log_prefix", "=", "'Val'", "+", "self", ".", "task_prefix", ".", "capitalize", "(", ")", "\n", "tbar", "=", "tqdm", "(", "self", ".", "val_data", ",", "file", "=", "self", ".", "tqdm_out", ",", "ncols", "=", "100", ")", "if", "self", ".", "is_master", "else", "self", ".", "val_data", "\n", "\n", "for", "metric", "in", "self", ".", "val_metrics", ":", "\n", "            ", "metric", ".", "reset_epoch_stats", "(", ")", "\n", "\n", "", "val_loss", "=", "0", "\n", "losses_logging", "=", "defaultdict", "(", "list", ")", "\n", "\n", "self", ".", "net", ".", "eval", "(", ")", "\n", "for", "i", ",", "batch_data", "in", "enumerate", "(", "tbar", ")", ":", "\n", "            ", "global_step", "=", "epoch", "*", "len", "(", "self", ".", "val_data", ")", "+", "i", "\n", "loss", ",", "batch_losses_logging", ",", "splitted_batch_data", ",", "outputs", "=", "self", ".", "batch_forward", "(", "batch_data", ",", "validation", "=", "True", ")", "\n", "\n", "batch_losses_logging", "[", "'overall'", "]", "=", "loss", "\n", "reduce_loss_dict", "(", "batch_losses_logging", ")", "\n", "for", "loss_name", ",", "loss_value", "in", "batch_losses_logging", ".", "items", "(", ")", ":", "\n", "                ", "losses_logging", "[", "loss_name", "]", ".", "append", "(", "loss_value", ".", "item", "(", ")", ")", "\n", "\n", "", "val_loss", "+=", "batch_losses_logging", "[", "'overall'", "]", ".", "item", "(", ")", "\n", "\n", "if", "self", ".", "is_master", ":", "\n", "                ", "tbar", ".", "set_description", "(", "f'Epoch {epoch}, validation loss: {val_loss/(i + 1):.4f}'", ")", "\n", "for", "metric", "in", "self", ".", "val_metrics", ":", "\n", "                    ", "metric", ".", "log_states", "(", "self", ".", "sw", ",", "f'{log_prefix}Metrics/{metric.name}'", ",", "global_step", ")", "\n", "\n", "", "", "", "if", "self", ".", "is_master", ":", "\n", "            ", "for", "loss_name", ",", "loss_values", "in", "losses_logging", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "sw", ".", "add_scalar", "(", "tag", "=", "f'{log_prefix}Losses/{loss_name}'", ",", "value", "=", "np", ".", "array", "(", "loss_values", ")", ".", "mean", "(", ")", ",", "\n", "global_step", "=", "epoch", ",", "disable_avg", "=", "True", ")", "\n", "\n", "", "for", "metric", "in", "self", ".", "val_metrics", ":", "\n", "                ", "self", ".", "sw", ".", "add_scalar", "(", "tag", "=", "f'{log_prefix}Metrics/{metric.name}'", ",", "value", "=", "metric", ".", "get_epoch_value", "(", ")", ",", "\n", "global_step", "=", "epoch", ",", "disable_avg", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.batch_forward": [[242, 298], ["dict", "torch.set_grad_enabled", "trainer.ISTrainer.net", "trainer.ISTrainer.add_loss", "trainer.ISTrainer.add_loss", "v.to", "image.clone", "gt_mask.clone", "get_next_points.clone", "torch.zeros_like", "torch.no_grad", "random.randint", "range", "torch.cat", "batch_data.items", "torch.sigmoid", "trainer.get_next_points", "torch.zeros_like", "torch.no_grad", "trainer.ISTrainer.net.eval", "torch.cat", "trainer.ISTrainer.net.train", "numpy.random.random", "m.update", "len", "eval_model", "torch.sigmoid.size", "trainer.ISTrainer.get"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.add_loss", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.add_loss", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.get_next_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "", "", "def", "batch_forward", "(", "self", ",", "batch_data", ",", "validation", "=", "False", ")", ":", "\n", "        ", "metrics", "=", "self", ".", "val_metrics", "if", "validation", "else", "self", ".", "train_metrics", "\n", "losses_logging", "=", "dict", "(", ")", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "not", "validation", ")", ":", "\n", "            ", "batch_data", "=", "{", "k", ":", "v", ".", "to", "(", "self", ".", "device", ")", "for", "k", ",", "v", "in", "batch_data", ".", "items", "(", ")", "}", "\n", "image", ",", "gt_mask", ",", "points", "=", "batch_data", "[", "'images'", "]", ",", "batch_data", "[", "'instances'", "]", ",", "batch_data", "[", "'points'", "]", "\n", "orig_image", ",", "orig_gt_mask", ",", "orig_points", "=", "image", ".", "clone", "(", ")", ",", "gt_mask", ".", "clone", "(", ")", ",", "points", ".", "clone", "(", ")", "\n", "\n", "prev_output", "=", "torch", ".", "zeros_like", "(", "image", ",", "dtype", "=", "torch", ".", "float32", ")", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", "\n", "\n", "last_click_indx", "=", "None", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "num_iters", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "max_num_next_clicks", ")", "\n", "\n", "for", "click_indx", "in", "range", "(", "num_iters", ")", ":", "\n", "                    ", "last_click_indx", "=", "click_indx", "\n", "\n", "if", "not", "validation", ":", "\n", "                        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "", "if", "self", ".", "click_models", "is", "None", "or", "click_indx", ">=", "len", "(", "self", ".", "click_models", ")", ":", "\n", "                        ", "eval_model", "=", "self", ".", "net", "\n", "", "else", ":", "\n", "                        ", "eval_model", "=", "self", ".", "click_models", "[", "click_indx", "]", "\n", "\n", "", "net_input", "=", "torch", ".", "cat", "(", "(", "image", ",", "prev_output", ")", ",", "dim", "=", "1", ")", "if", "self", ".", "net", ".", "with_prev_mask", "else", "image", "\n", "prev_output", "=", "torch", ".", "sigmoid", "(", "eval_model", "(", "net_input", ",", "points", ")", "[", "'instances'", "]", ")", "\n", "\n", "points", "=", "get_next_points", "(", "prev_output", ",", "orig_gt_mask", ",", "points", ",", "click_indx", "+", "1", ")", "\n", "\n", "if", "not", "validation", ":", "\n", "                        ", "self", ".", "net", ".", "train", "(", ")", "\n", "\n", "", "", "if", "self", ".", "net", ".", "with_prev_mask", "and", "self", ".", "prev_mask_drop_prob", ">", "0", "and", "last_click_indx", "is", "not", "None", ":", "\n", "                    ", "zero_mask", "=", "np", ".", "random", ".", "random", "(", "size", "=", "prev_output", ".", "size", "(", "0", ")", ")", "<", "self", ".", "prev_mask_drop_prob", "\n", "prev_output", "[", "zero_mask", "]", "=", "torch", ".", "zeros_like", "(", "prev_output", "[", "zero_mask", "]", ")", "\n", "\n", "", "", "batch_data", "[", "'points'", "]", "=", "points", "\n", "\n", "net_input", "=", "torch", ".", "cat", "(", "(", "image", ",", "prev_output", ")", ",", "dim", "=", "1", ")", "if", "self", ".", "net", ".", "with_prev_mask", "else", "image", "\n", "output", "=", "self", ".", "net", "(", "net_input", ",", "points", ")", "\n", "\n", "loss", "=", "0.0", "\n", "loss", "=", "self", ".", "add_loss", "(", "'instance_loss'", ",", "loss", ",", "losses_logging", ",", "validation", ",", "\n", "lambda", ":", "(", "output", "[", "'instances'", "]", ",", "batch_data", "[", "'instances'", "]", ")", ")", "\n", "loss", "=", "self", ".", "add_loss", "(", "'instance_aux_loss'", ",", "loss", ",", "losses_logging", ",", "validation", ",", "\n", "lambda", ":", "(", "output", "[", "'instances_aux'", "]", ",", "batch_data", "[", "'instances'", "]", ")", ")", "\n", "\n", "if", "self", ".", "is_master", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "for", "m", "in", "metrics", ":", "\n", "                        ", "m", ".", "update", "(", "*", "(", "output", ".", "get", "(", "x", ")", "for", "x", "in", "m", ".", "pred_outputs", ")", ",", "\n", "*", "(", "batch_data", "[", "x", "]", "for", "x", "in", "m", ".", "gt_outputs", ")", ")", "\n", "", "", "", "", "return", "loss", ",", "losses_logging", ",", "batch_data", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.add_loss": [[299, 311], ["loss_cfg.get", "loss_cfg.get", "loss_cfg.get.", "torch.mean", "lambda_loss_inputs"], "methods", ["None"], ["", "def", "add_loss", "(", "self", ",", "loss_name", ",", "total_loss", ",", "losses_logging", ",", "validation", ",", "lambda_loss_inputs", ")", ":", "\n", "        ", "loss_cfg", "=", "self", ".", "loss_cfg", "if", "not", "validation", "else", "self", ".", "val_loss_cfg", "\n", "loss_weight", "=", "loss_cfg", ".", "get", "(", "loss_name", "+", "'_weight'", ",", "0.0", ")", "\n", "if", "loss_weight", ">", "0.0", ":", "\n", "            ", "loss_criterion", "=", "loss_cfg", ".", "get", "(", "loss_name", ")", "\n", "loss", "=", "loss_criterion", "(", "*", "lambda_loss_inputs", "(", ")", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "loss", ")", "\n", "losses_logging", "[", "loss_name", "]", "=", "loss", "\n", "loss", "=", "loss_weight", "*", "loss", "\n", "total_loss", "=", "total_loss", "+", "loss", "\n", "\n", "", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.save_visualization": [[312, 349], ["instance_masks.cpu().numpy", "torch.sigmoid().detach().cpu().numpy", "points.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "numpy.squeeze", "numpy.squeeze", "image.transpose.transpose.transpose", "isegm.utils.vis.draw_points", "isegm.utils.vis.draw_points", "isegm.utils.vis.draw_probmap", "isegm.utils.vis.draw_probmap", "numpy.hstack().astype", "trainer.ISTrainer.save_visualization._save_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_probmap", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_probmap"], ["", "def", "save_visualization", "(", "self", ",", "splitted_batch_data", ",", "outputs", ",", "global_step", ",", "prefix", ")", ":", "\n", "        ", "output_images_path", "=", "self", ".", "cfg", ".", "VIS_PATH", "/", "prefix", "\n", "if", "self", ".", "task_prefix", ":", "\n", "            ", "output_images_path", "/=", "self", ".", "task_prefix", "\n", "\n", "", "if", "not", "output_images_path", ".", "exists", "(", ")", ":", "\n", "            ", "output_images_path", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "", "image_name_prefix", "=", "f'{global_step:06d}'", "\n", "\n", "def", "_save_image", "(", "suffix", ",", "image", ")", ":", "\n", "            ", "cv2", ".", "imwrite", "(", "str", "(", "output_images_path", "/", "f'{image_name_prefix}_{suffix}.jpg'", ")", ",", "\n", "image", ",", "[", "cv2", ".", "IMWRITE_JPEG_QUALITY", ",", "85", "]", ")", "\n", "\n", "", "images", "=", "splitted_batch_data", "[", "'images'", "]", "\n", "points", "=", "splitted_batch_data", "[", "'points'", "]", "\n", "instance_masks", "=", "splitted_batch_data", "[", "'instances'", "]", "\n", "\n", "gt_instance_masks", "=", "instance_masks", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "predicted_instance_masks", "=", "torch", ".", "sigmoid", "(", "outputs", "[", "'instances'", "]", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "points", "=", "points", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "image_blob", ",", "points", "=", "images", "[", "0", "]", ",", "points", "[", "0", "]", "\n", "gt_mask", "=", "np", ".", "squeeze", "(", "gt_instance_masks", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "predicted_mask", "=", "np", ".", "squeeze", "(", "predicted_instance_masks", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "\n", "image", "=", "image_blob", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "*", "255", "\n", "image", "=", "image", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "image_with_points", "=", "draw_points", "(", "image", ",", "points", "[", ":", "self", ".", "max_interactive_points", "]", ",", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "image_with_points", "=", "draw_points", "(", "image_with_points", ",", "points", "[", "self", ".", "max_interactive_points", ":", "]", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "gt_mask", "[", "gt_mask", "<", "0", "]", "=", "0.25", "\n", "gt_mask", "=", "draw_probmap", "(", "gt_mask", ")", "\n", "predicted_mask", "=", "draw_probmap", "(", "predicted_mask", ")", "\n", "viz_image", "=", "np", ".", "hstack", "(", "(", "image_with_points", ",", "gt_mask", ",", "predicted_mask", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "_save_image", "(", "'instance_segmentation'", ",", "viz_image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer._load_weights": [[350, 365], ["os.path.isfile", "trainer.load_weights", "RuntimeError", "list", "isegm.utils.log.logger.info", "trainer.load_weights", "trainer.ISTrainer.cfg.CHECKPOINTS_PATH.glob", "len", "str"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.load_weights", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.load_weights"], ["", "def", "_load_weights", "(", "self", ",", "net", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "weights", "is", "not", "None", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "cfg", ".", "weights", ")", ":", "\n", "                ", "load_weights", "(", "net", ",", "self", ".", "cfg", ".", "weights", ")", "\n", "self", ".", "cfg", ".", "weights", "=", "None", "\n", "", "else", ":", "\n", "                ", "raise", "RuntimeError", "(", "f\"=> no checkpoint found at '{self.cfg.weights}'\"", ")", "\n", "", "", "elif", "self", ".", "cfg", ".", "resume_exp", "is", "not", "None", ":", "\n", "            ", "checkpoints", "=", "list", "(", "self", ".", "cfg", ".", "CHECKPOINTS_PATH", ".", "glob", "(", "f'{self.cfg.resume_prefix}*.pth'", ")", ")", "\n", "assert", "len", "(", "checkpoints", ")", "==", "1", "\n", "\n", "checkpoint_path", "=", "checkpoints", "[", "0", "]", "\n", "logger", ".", "info", "(", "f'Load checkpoint from path: {checkpoint_path}'", ")", "\n", "load_weights", "(", "net", ",", "str", "(", "checkpoint_path", ")", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.is_master": [[366, 369], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_master", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "cfg", ".", "local_rank", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.get_next_points": [[371, 407], ["numpy.logical_and", "numpy.logical_and", "numpy.pad().astype", "numpy.pad().astype", "points.clone.clone", "range", "pred.cpu().numpy", "numpy.logical_not", "points.clone.size", "numpy.max", "numpy.max", "numpy.argwhere", "gt.cpu().numpy", "numpy.pad", "numpy.pad", "cv2.distanceTransform", "cv2.distanceTransform", "len", "pred.cpu", "max", "float", "float", "float", "float", "float", "float", "gt.cpu", "numpy.random.randint", "len"], "function", ["None"], ["", "", "def", "get_next_points", "(", "pred", ",", "gt", ",", "points", ",", "click_indx", ",", "pred_thresh", "=", "0.49", ")", ":", "\n", "    ", "assert", "click_indx", ">", "0", "\n", "pred", "=", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "gt", "=", "gt", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", "0", ",", ":", ",", ":", "]", ">", "0.5", "\n", "\n", "fn_mask", "=", "np", ".", "logical_and", "(", "gt", ",", "pred", "<", "pred_thresh", ")", "\n", "fp_mask", "=", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "gt", ")", ",", "pred", ">", "pred_thresh", ")", "\n", "\n", "fn_mask", "=", "np", ".", "pad", "(", "fn_mask", ",", "(", "(", "0", ",", "0", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "'constant'", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "fp_mask", "=", "np", ".", "pad", "(", "fp_mask", ",", "(", "(", "0", ",", "0", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "'constant'", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "num_points", "=", "points", ".", "size", "(", "1", ")", "//", "2", "\n", "points", "=", "points", ".", "clone", "(", ")", "\n", "\n", "for", "bindx", "in", "range", "(", "fn_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "fn_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "fn_mask", "[", "bindx", "]", ",", "cv2", ".", "DIST_L2", ",", "5", ")", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "fp_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "fp_mask", "[", "bindx", "]", ",", "cv2", ".", "DIST_L2", ",", "5", ")", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "\n", "fn_max_dist", "=", "np", ".", "max", "(", "fn_mask_dt", ")", "\n", "fp_max_dist", "=", "np", ".", "max", "(", "fp_mask_dt", ")", "\n", "\n", "is_positive", "=", "fn_max_dist", ">", "fp_max_dist", "\n", "dt", "=", "fn_mask_dt", "if", "is_positive", "else", "fp_mask_dt", "\n", "inner_mask", "=", "dt", ">", "max", "(", "fn_max_dist", ",", "fp_max_dist", ")", "/", "2.0", "\n", "indices", "=", "np", ".", "argwhere", "(", "inner_mask", ")", "\n", "if", "len", "(", "indices", ")", ">", "0", ":", "\n", "            ", "coords", "=", "indices", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "indices", ")", ")", "]", "\n", "if", "is_positive", ":", "\n", "                ", "points", "[", "bindx", ",", "num_points", "-", "click_indx", ",", "0", "]", "=", "float", "(", "coords", "[", "0", "]", ")", "\n", "points", "[", "bindx", ",", "num_points", "-", "click_indx", ",", "1", "]", "=", "float", "(", "coords", "[", "1", "]", ")", "\n", "points", "[", "bindx", ",", "num_points", "-", "click_indx", ",", "2", "]", "=", "float", "(", "click_indx", ")", "\n", "", "else", ":", "\n", "                ", "points", "[", "bindx", ",", "2", "*", "num_points", "-", "click_indx", ",", "0", "]", "=", "float", "(", "coords", "[", "0", "]", ")", "\n", "points", "[", "bindx", ",", "2", "*", "num_points", "-", "click_indx", ",", "1", "]", "=", "float", "(", "coords", "[", "1", "]", ")", "\n", "points", "[", "bindx", ",", "2", "*", "num_points", "-", "click_indx", ",", "2", "]", "=", "float", "(", "click_indx", ")", "\n", "\n", "", "", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.load_weights": [[409, 414], ["model.state_dict", "model.state_dict.update", "model.load_state_dict", "torch.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], ["", "def", "load_weights", "(", "model", ",", "path_to_weights", ")", ":", "\n", "    ", "current_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "new_state_dict", "=", "torch", ".", "load", "(", "path_to_weights", ",", "map_location", "=", "'cpu'", ")", "[", "'state_dict'", "]", "\n", "current_state_dict", ".", "update", "(", "new_state_dict", ")", "\n", "model", ".", "load_state_dict", "(", "current_state_dict", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.optimizer.get_optimizer": [[6, 28], ["model.named_parameters", "params.append", "params.append", "math.isclose", "isegm.utils.log.logger.info", "getattr", "param_group.get", "opt_name.lower"], "function", ["None"], ["def", "get_optimizer", "(", "model", ",", "opt_name", ",", "opt_kwargs", ")", ":", "\n", "    ", "params", "=", "[", "]", "\n", "base_lr", "=", "opt_kwargs", "[", "'lr'", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "param_group", "=", "{", "'params'", ":", "[", "param", "]", "}", "\n", "if", "not", "param", ".", "requires_grad", ":", "\n", "            ", "params", ".", "append", "(", "param_group", ")", "\n", "continue", "\n", "\n", "", "if", "not", "math", ".", "isclose", "(", "getattr", "(", "param", ",", "'lr_mult'", ",", "1.0", ")", ",", "1.0", ")", ":", "\n", "            ", "logger", ".", "info", "(", "f'Applied lr_mult={param.lr_mult} to \"{name}\" parameter.'", ")", "\n", "param_group", "[", "'lr'", "]", "=", "param_group", ".", "get", "(", "'lr'", ",", "base_lr", ")", "*", "param", ".", "lr_mult", "\n", "\n", "", "params", ".", "append", "(", "param_group", ")", "\n", "\n", "", "optimizer", "=", "{", "\n", "'sgd'", ":", "torch", ".", "optim", ".", "SGD", ",", "\n", "'adam'", ":", "torch", ".", "optim", ".", "Adam", ",", "\n", "'adamw'", ":", "torch", ".", "optim", ".", "AdamW", "\n", "}", "[", "opt_name", ".", "lower", "(", ")", "]", "(", "params", ",", "**", "opt_kwargs", ")", "\n", "\n", "return", "optimizer", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.__init__": [[7, 20], ["clicker.Clicker.reset_clicks", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click"], ["    ", "def", "__init__", "(", "self", ",", "gt_mask", "=", "None", ",", "init_clicks", "=", "None", ",", "ignore_label", "=", "-", "1", ",", "click_indx_offset", "=", "0", ")", ":", "\n", "        ", "self", ".", "click_indx_offset", "=", "click_indx_offset", "\n", "if", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "gt_mask", "=", "gt_mask", "==", "1", "\n", "self", ".", "not_ignore_mask", "=", "gt_mask", "!=", "ignore_label", "\n", "", "else", ":", "\n", "            ", "self", ".", "gt_mask", "=", "None", "\n", "\n", "", "self", ".", "reset_clicks", "(", ")", "\n", "\n", "if", "init_clicks", "is", "not", "None", ":", "\n", "            ", "for", "click", "in", "init_clicks", ":", "\n", "                ", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.make_next_click": [[21, 25], ["clicker.Clicker._get_next_click", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker._get_next_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click"], ["", "", "", "def", "make_next_click", "(", "self", ",", "pred_mask", ")", ":", "\n", "        ", "assert", "self", ".", "gt_mask", "is", "not", "None", "\n", "click", "=", "self", ".", "_get_next_click", "(", "pred_mask", ")", "\n", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.get_clicks": [[26, 28], ["None"], "methods", ["None"], ["", "def", "get_clicks", "(", "self", ",", "clicks_limit", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "clicks_list", "[", ":", "clicks_limit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker._get_next_click": [[29, 57], ["numpy.logical_and", "numpy.logical_and", "cv2.distanceTransform", "cv2.distanceTransform", "numpy.max", "numpy.max", "clicker.Click", "numpy.logical_and", "numpy.logical_and", "numpy.pad", "numpy.pad", "numpy.pad.astype", "numpy.pad.astype", "numpy.where", "numpy.where", "numpy.logical_not", "numpy.logical_not"], "methods", ["None"], ["", "def", "_get_next_click", "(", "self", ",", "pred_mask", ",", "padding", "=", "True", ")", ":", "\n", "        ", "fn_mask", "=", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "self", ".", "gt_mask", ",", "np", ".", "logical_not", "(", "pred_mask", ")", ")", ",", "self", ".", "not_ignore_mask", ")", "\n", "fp_mask", "=", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "self", ".", "gt_mask", ")", ",", "pred_mask", ")", ",", "self", ".", "not_ignore_mask", ")", "\n", "\n", "if", "padding", ":", "\n", "            ", "fn_mask", "=", "np", ".", "pad", "(", "fn_mask", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "'constant'", ")", "\n", "fp_mask", "=", "np", ".", "pad", "(", "fp_mask", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "'constant'", ")", "\n", "\n", "", "fn_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "fn_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "DIST_L2", ",", "0", ")", "\n", "fp_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "fp_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "DIST_L2", ",", "0", ")", "\n", "\n", "if", "padding", ":", "\n", "            ", "fn_mask_dt", "=", "fn_mask_dt", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "fp_mask_dt", "=", "fp_mask_dt", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "\n", "", "fn_mask_dt", "=", "fn_mask_dt", "*", "self", ".", "not_clicked_map", "\n", "fp_mask_dt", "=", "fp_mask_dt", "*", "self", ".", "not_clicked_map", "\n", "\n", "fn_max_dist", "=", "np", ".", "max", "(", "fn_mask_dt", ")", "\n", "fp_max_dist", "=", "np", ".", "max", "(", "fp_mask_dt", ")", "\n", "\n", "is_positive", "=", "fn_max_dist", ">", "fp_max_dist", "\n", "if", "is_positive", ":", "\n", "            ", "coords_y", ",", "coords_x", "=", "np", ".", "where", "(", "fn_mask_dt", "==", "fn_max_dist", ")", "# coords is [y, x]", "\n", "", "else", ":", "\n", "            ", "coords_y", ",", "coords_x", "=", "np", ".", "where", "(", "fp_mask_dt", "==", "fp_max_dist", ")", "# coords is [y, x]", "\n", "\n", "", "return", "Click", "(", "is_positive", "=", "is_positive", ",", "coords", "=", "(", "coords_y", "[", "0", "]", ",", "coords_x", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click": [[58, 70], ["clicker.Clicker.clicks_list.append"], "methods", ["None"], ["", "def", "add_click", "(", "self", ",", "click", ")", ":", "\n", "        ", "coords", "=", "click", ".", "coords", "\n", "\n", "click", ".", "indx", "=", "self", ".", "click_indx_offset", "+", "self", ".", "num_pos_clicks", "+", "self", ".", "num_neg_clicks", "\n", "if", "click", ".", "is_positive", ":", "\n", "            ", "self", ".", "num_pos_clicks", "+=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_neg_clicks", "+=", "1", "\n", "\n", "", "self", ".", "clicks_list", ".", "append", "(", "click", ")", "\n", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", "]", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker._remove_last_click": [[71, 82], ["clicker.Clicker.clicks_list.pop"], "methods", ["None"], ["", "", "def", "_remove_last_click", "(", "self", ")", ":", "\n", "        ", "click", "=", "self", ".", "clicks_list", ".", "pop", "(", ")", "\n", "coords", "=", "click", ".", "coords", "\n", "\n", "if", "click", ".", "is_positive", ":", "\n", "            ", "self", ".", "num_pos_clicks", "-=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_neg_clicks", "-=", "1", "\n", "\n", "", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", "]", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.reset_clicks": [[83, 91], ["numpy.ones_like"], "methods", ["None"], ["", "", "def", "reset_clicks", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "=", "np", ".", "ones_like", "(", "self", ".", "gt_mask", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n", "", "self", ".", "num_pos_clicks", "=", "0", "\n", "self", ".", "num_neg_clicks", "=", "0", "\n", "\n", "self", ".", "clicks_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.get_state": [[92, 94], ["copy.deepcopy"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "deepcopy", "(", "self", ".", "clicks_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.set_state": [[95, 99], ["clicker.Clicker.reset_clicks", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.add_click"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "reset_clicks", "(", ")", "\n", "for", "click", "in", "state", ":", "\n", "            ", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.__len__": [[100, 102], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "clicks_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.__init__": [[105, 109], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "is_positive", ",", "coords", ",", "indx", "=", "None", ")", ":", "\n", "        ", "self", ".", "is_positive", "=", "is_positive", "\n", "self", ".", "coords", "=", "coords", "\n", "self", ".", "indx", "=", "indx", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.coords_and_indx": [[110, 113], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "coords_and_indx", "(", "self", ")", ":", "\n", "        ", "return", "(", "*", "self", ".", "coords", ",", "self", ".", "indx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy": [[114, 119], ["copy.deepcopy", "kwargs.items", "setattr"], "methods", ["None"], ["", "def", "copy", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self_copy", "=", "deepcopy", "(", "self", ")", "\n", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self_copy", ",", "k", ",", "v", ")", "\n", "", "return", "self_copy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_time_metrics": [[11, 19], ["len", "sum", "map"], "function", ["None"], ["def", "get_time_metrics", "(", "all_ious", ",", "elapsed_time", ")", ":", "\n", "    ", "n_images", "=", "len", "(", "all_ious", ")", "\n", "n_clicks", "=", "sum", "(", "map", "(", "len", ",", "all_ious", ")", ")", "\n", "\n", "mean_spc", "=", "elapsed_time", "/", "n_clicks", "\n", "mean_spi", "=", "elapsed_time", "/", "n_images", "\n", "\n", "return", "mean_spc", ",", "mean_spi", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_is_model": [[21, 34], ["isinstance", "isinstance", "torch.load", "utils.load_single_is_model", "utils.load_single_is_model", "utils.load_single_is_model"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_single_is_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_single_is_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_single_is_model"], ["", "def", "load_is_model", "(", "checkpoint", ",", "device", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "isinstance", "(", "checkpoint", ",", "(", "str", ",", "Path", ")", ")", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "checkpoint", ",", "map_location", "=", "'cpu'", ")", "\n", "", "else", ":", "\n", "        ", "state_dict", "=", "checkpoint", "\n", "\n", "", "if", "isinstance", "(", "state_dict", ",", "list", ")", ":", "\n", "        ", "model", "=", "load_single_is_model", "(", "state_dict", "[", "0", "]", ",", "device", ",", "**", "kwargs", ")", "\n", "models", "=", "[", "load_single_is_model", "(", "x", ",", "device", ",", "**", "kwargs", ")", "for", "x", "in", "state_dict", "]", "\n", "\n", "return", "model", ",", "models", "\n", "", "else", ":", "\n", "        ", "return", "load_single_is_model", "(", "state_dict", ",", "device", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_single_is_model": [[36, 46], ["isegm.utils.serialization.load_model", "isegm.utils.serialization.load_model.load_state_dict", "isegm.utils.serialization.load_model.parameters", "isegm.utils.serialization.load_model.to", "isegm.utils.serialization.load_model.eval"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.serialization.load_model"], ["", "", "def", "load_single_is_model", "(", "state_dict", ",", "device", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "load_model", "(", "state_dict", "[", "'config'", "]", ",", "**", "kwargs", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_dataset": [[48, 67], ["isegm.data.datasets.GrabCutDataset", "isegm.data.datasets.BerkeleyDataset", "isegm.data.datasets.DavisDataset", "isegm.data.datasets.SBDEvaluationDataset", "isegm.data.datasets.SBDEvaluationDataset", "isegm.data.datasets.PascalVocDataset", "isegm.data.datasets.DavisDataset"], "function", ["None"], ["", "def", "get_dataset", "(", "dataset_name", ",", "cfg", ")", ":", "\n", "    ", "if", "dataset_name", "==", "'GrabCut'", ":", "\n", "        ", "dataset", "=", "GrabCutDataset", "(", "cfg", ".", "GRABCUT_PATH", ")", "\n", "", "elif", "dataset_name", "==", "'Berkeley'", ":", "\n", "        ", "dataset", "=", "BerkeleyDataset", "(", "cfg", ".", "BERKELEY_PATH", ")", "\n", "", "elif", "dataset_name", "==", "'DAVIS'", ":", "\n", "        ", "dataset", "=", "DavisDataset", "(", "cfg", ".", "DAVIS_PATH", ")", "\n", "", "elif", "dataset_name", "==", "'SBD'", ":", "\n", "        ", "dataset", "=", "SBDEvaluationDataset", "(", "cfg", ".", "SBD_PATH", ")", "\n", "", "elif", "dataset_name", "==", "'SBD_Train'", ":", "\n", "        ", "dataset", "=", "SBDEvaluationDataset", "(", "cfg", ".", "SBD_PATH", ",", "split", "=", "'train'", ")", "\n", "", "elif", "dataset_name", "==", "'PascalVOC'", ":", "\n", "        ", "dataset", "=", "PascalVocDataset", "(", "cfg", ".", "PASCALVOC_PATH", ",", "split", "=", "'test'", ")", "\n", "", "elif", "dataset_name", "==", "'COCO_MVal'", ":", "\n", "        ", "dataset", "=", "DavisDataset", "(", "cfg", ".", "COCO_MVAL_PATH", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "None", "\n", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_iou": [[69, 77], ["numpy.logical_and().sum", "numpy.logical_and().sum", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_or"], "function", ["None"], ["", "def", "get_iou", "(", "gt_mask", ",", "pred_mask", ",", "ignore_label", "=", "-", "1", ")", ":", "\n", "    ", "ignore_gt_mask_inv", "=", "gt_mask", "!=", "ignore_label", "\n", "obj_gt_mask", "=", "gt_mask", "==", "1", "\n", "\n", "intersection", "=", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "pred_mask", ",", "obj_gt_mask", ")", ",", "ignore_gt_mask_inv", ")", ".", "sum", "(", ")", "\n", "union", "=", "np", ".", "logical_and", "(", "np", ".", "logical_or", "(", "pred_mask", ",", "obj_gt_mask", ")", ",", "ignore_gt_mask_inv", ")", ".", "sum", "(", ")", "\n", "\n", "return", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.compute_noc_metric": [[79, 97], ["numpy.array", "np.array.mean", "noc_list.append", "over_max_list.append", "numpy.any", "numpy.argmax", "utils.compute_noc_metric._get_noc"], "function", ["None"], ["", "def", "compute_noc_metric", "(", "all_ious", ",", "iou_thrs", ",", "max_clicks", "=", "20", ")", ":", "\n", "    ", "def", "_get_noc", "(", "iou_arr", ",", "iou_thr", ")", ":", "\n", "        ", "vals", "=", "iou_arr", ">=", "iou_thr", "\n", "return", "np", ".", "argmax", "(", "vals", ")", "+", "1", "if", "np", ".", "any", "(", "vals", ")", "else", "max_clicks", "\n", "\n", "", "noc_list", "=", "[", "]", "\n", "over_max_list", "=", "[", "]", "\n", "for", "iou_thr", "in", "iou_thrs", ":", "\n", "        ", "scores_arr", "=", "np", ".", "array", "(", "[", "_get_noc", "(", "iou_arr", ",", "iou_thr", ")", "\n", "for", "iou_arr", "in", "all_ious", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "score", "=", "scores_arr", ".", "mean", "(", ")", "\n", "over_max", "=", "(", "scores_arr", "==", "max_clicks", ")", ".", "sum", "(", ")", "\n", "\n", "noc_list", ".", "append", "(", "score", ")", "\n", "over_max_list", ".", "append", "(", "over_max", ")", "\n", "\n", "", "return", "noc_list", ",", "over_max_list", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.find_checkpoint": [[99, 120], ["pathlib.Path", "checkpoint_name.endswith", "str", "checkpoint_name.split", "pathlib.Path().exists", "list", "len", "model_folder.rglob", "len", "pathlib.Path.glob", "x.is_dir", "pathlib.Path"], "function", ["None"], ["", "def", "find_checkpoint", "(", "weights_folder", ",", "checkpoint_name", ")", ":", "\n", "    ", "weights_folder", "=", "Path", "(", "weights_folder", ")", "\n", "if", "':'", "in", "checkpoint_name", ":", "\n", "        ", "model_name", ",", "checkpoint_name", "=", "checkpoint_name", ".", "split", "(", "':'", ")", "\n", "models_candidates", "=", "[", "x", "for", "x", "in", "weights_folder", ".", "glob", "(", "f'{model_name}*'", ")", "if", "x", ".", "is_dir", "(", ")", "]", "\n", "assert", "len", "(", "models_candidates", ")", "==", "1", "\n", "model_folder", "=", "models_candidates", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "model_folder", "=", "weights_folder", "\n", "\n", "", "if", "checkpoint_name", ".", "endswith", "(", "'.pth'", ")", ":", "\n", "        ", "if", "Path", "(", "checkpoint_name", ")", ".", "exists", "(", ")", ":", "\n", "            ", "checkpoint_path", "=", "checkpoint_name", "\n", "", "else", ":", "\n", "            ", "checkpoint_path", "=", "weights_folder", "/", "checkpoint_name", "\n", "", "", "else", ":", "\n", "        ", "model_checkpoints", "=", "list", "(", "model_folder", ".", "rglob", "(", "f'{checkpoint_name}*.pth'", ")", ")", "\n", "assert", "len", "(", "model_checkpoints", ")", "==", "1", "\n", "checkpoint_path", "=", "model_checkpoints", "[", "0", "]", "\n", "\n", "", "return", "str", "(", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_results_table": [[122, 144], ["len", "str", "datetime.timedelta", "len", "len", "len", "len", "int", "str", "str"], "function", ["None"], ["", "def", "get_results_table", "(", "noc_list", ",", "over_max_list", ",", "brs_type", ",", "dataset_name", ",", "mean_spc", ",", "elapsed_time", ",", "\n", "n_clicks", "=", "20", ",", "model_name", "=", "None", ")", ":", "\n", "    ", "table_header", "=", "(", "f'|{\"BRS Type\":^13}|{\"Dataset\":^11}|'", "\n", "f'{\"NoC@80%\":^9}|{\"NoC@85%\":^9}|{\"NoC@90%\":^9}|'", "\n", "f'{\">=\"+str(n_clicks)+\"@85%\":^9}|{\">=\"+str(n_clicks)+\"@90%\":^9}|'", "\n", "f'{\"SPC,s\":^7}|{\"Time\":^9}|'", ")", "\n", "row_width", "=", "len", "(", "table_header", ")", "\n", "\n", "header", "=", "f'Eval results for model: {model_name}\\n'", "if", "model_name", "is", "not", "None", "else", "''", "\n", "header", "+=", "'-'", "*", "row_width", "+", "'\\n'", "\n", "header", "+=", "table_header", "+", "'\\n'", "+", "'-'", "*", "row_width", "\n", "\n", "eval_time", "=", "str", "(", "timedelta", "(", "seconds", "=", "int", "(", "elapsed_time", ")", ")", ")", "\n", "table_row", "=", "f'|{brs_type:^13}|{dataset_name:^11}|'", "\n", "table_row", "+=", "f'{noc_list[0]:^9.2f}|'", "\n", "table_row", "+=", "f'{noc_list[1]:^9.2f}|'", "if", "len", "(", "noc_list", ")", ">", "1", "else", "f'{\"?\":^9}|'", "\n", "table_row", "+=", "f'{noc_list[2]:^9.2f}|'", "if", "len", "(", "noc_list", ")", ">", "2", "else", "f'{\"?\":^9}|'", "\n", "table_row", "+=", "f'{over_max_list[1]:^9}|'", "if", "len", "(", "noc_list", ")", ">", "1", "else", "f'{\"?\":^9}|'", "\n", "table_row", "+=", "f'{over_max_list[2]:^9}|'", "if", "len", "(", "noc_list", ")", ">", "2", "else", "f'{\"?\":^9}|'", "\n", "table_row", "+=", "f'{mean_spc:^7.3f}|{eval_time:^9}|'", "\n", "\n", "return", "header", ",", "table_row", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.evaluation.evaluate_dataset": [[16, 30], ["time.time", "tqdm", "time.time", "range", "dataset.get_sample", "evaluation.evaluate_sample", "all_ious.append", "len"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_sample", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.evaluation.evaluate_sample"], ["", "def", "evaluate_dataset", "(", "dataset", ",", "predictor", ",", "**", "kwargs", ")", ":", "\n", "    ", "all_ious", "=", "[", "]", "\n", "\n", "start_time", "=", "time", "(", ")", "\n", "for", "index", "in", "tqdm", "(", "range", "(", "len", "(", "dataset", ")", ")", ",", "leave", "=", "False", ")", ":", "\n", "        ", "sample", "=", "dataset", ".", "get_sample", "(", "index", ")", "\n", "\n", "_", ",", "sample_ious", ",", "_", "=", "evaluate_sample", "(", "sample", ".", "image", ",", "sample", ".", "gt_mask", ",", "predictor", ",", "\n", "sample_id", "=", "index", ",", "**", "kwargs", ")", "\n", "all_ious", ".", "append", "(", "sample_ious", ")", "\n", "", "end_time", "=", "time", "(", ")", "\n", "elapsed_time", "=", "end_time", "-", "start_time", "\n", "\n", "return", "all_ious", ",", "elapsed_time", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.evaluation.evaluate_sample": [[32, 57], ["isegm.inference.clicker.Clicker", "numpy.zeros_like", "torch.no_grad", "predictor.set_input_image", "range", "isegm.inference.clicker.Clicker.make_next_click", "predictor.get_prediction", "isegm.inference.utils.get_iou", "ious_list.append", "numpy.array", "callback"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_input_image", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.make_next_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_prediction", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_iou"], ["", "def", "evaluate_sample", "(", "image", ",", "gt_mask", ",", "predictor", ",", "max_iou_thr", ",", "\n", "pred_thr", "=", "0.49", ",", "min_clicks", "=", "1", ",", "max_clicks", "=", "20", ",", "\n", "sample_id", "=", "None", ",", "callback", "=", "None", ")", ":", "\n", "    ", "clicker", "=", "Clicker", "(", "gt_mask", "=", "gt_mask", ")", "\n", "pred_mask", "=", "np", ".", "zeros_like", "(", "gt_mask", ")", "\n", "ious_list", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "predictor", ".", "set_input_image", "(", "image", ")", "\n", "\n", "for", "click_indx", "in", "range", "(", "max_clicks", ")", ":", "\n", "            ", "clicker", ".", "make_next_click", "(", "pred_mask", ")", "\n", "pred_probs", "=", "predictor", ".", "get_prediction", "(", "clicker", ")", "\n", "pred_mask", "=", "pred_probs", ">", "pred_thr", "\n", "\n", "if", "callback", "is", "not", "None", ":", "\n", "                ", "callback", "(", "image", ",", "gt_mask", ",", "pred_probs", ",", "sample_id", ",", "click_indx", ",", "clicker", ".", "clicks_list", ")", "\n", "\n", "", "iou", "=", "utils", ".", "get_iou", "(", "gt_mask", ",", "pred_mask", ")", "\n", "ious_list", ".", "append", "(", "iou", ")", "\n", "\n", "if", "iou", ">=", "max_iou_thr", "and", "click_indx", "+", "1", ">=", "min_clicks", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "clicker", ".", "clicks_list", ",", "np", ".", "array", "(", "ious_list", ",", "dtype", "=", "np", ".", "float32", ")", ",", "pred_probs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.__init__": [[8, 37], ["isinstance", "torchvision.transforms.ToTensor", "base.BasePredictor.transforms.append", "base.BasePredictor.transforms.append", "isegm.inference.transforms.SigmoidForPred", "base.BasePredictor.transforms.append", "isegm.inference.transforms.LimitLongestSide", "isegm.inference.transforms.AddHorizontalFlip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "\n", "net_clicks_limit", "=", "None", ",", "\n", "with_flip", "=", "False", ",", "\n", "zoom_in", "=", "None", ",", "\n", "max_size", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "net_clicks_limit", "=", "net_clicks_limit", "\n", "self", ".", "original_image", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "zoom_in", "=", "zoom_in", "\n", "self", ".", "prev_prediction", "=", "None", "\n", "self", ".", "model_indx", "=", "0", "\n", "self", ".", "click_models", "=", "None", "\n", "self", ".", "net_state_dict", "=", "None", "\n", "\n", "if", "isinstance", "(", "model", ",", "tuple", ")", ":", "\n", "            ", "self", ".", "net", ",", "self", ".", "click_models", "=", "model", "\n", "", "else", ":", "\n", "            ", "self", ".", "net", "=", "model", "\n", "\n", "", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n", "self", ".", "transforms", "=", "[", "zoom_in", "]", "if", "zoom_in", "is", "not", "None", "else", "[", "]", "\n", "if", "max_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "LimitLongestSide", "(", "max_size", "=", "max_size", ")", ")", "\n", "", "self", ".", "transforms", ".", "append", "(", "SigmoidForPred", "(", ")", ")", "\n", "if", "with_flip", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "AddHorizontalFlip", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.set_input_image": [[38, 46], ["base.BasePredictor.to_tensor", "base.BasePredictor.to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "transform.reset", "len", "base.BasePredictor.original_image.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.reset"], ["", "", "def", "set_input_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_nd", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "transform", ".", "reset", "(", ")", "\n", "", "self", ".", "original_image", "=", "image_nd", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "len", "(", "self", ".", "original_image", ".", "shape", ")", "==", "3", ":", "\n", "            ", "self", ".", "original_image", "=", "self", ".", "original_image", ".", "unsqueeze", "(", "0", ")", "\n", "", "self", ".", "prev_prediction", "=", "torch", ".", "zeros_like", "(", "self", ".", "original_image", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_prediction": [[47, 77], ["clicker.get_clicks", "base.BasePredictor.apply_transforms", "base.BasePredictor._get_prediction", "torch.interpolate", "torch.interpolate", "reversed", "hasattr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "t.inv_transform", "base.BasePredictor.zoom_in.check_possible_recalculation", "base.BasePredictor.get_prediction", "t.inv_transform.cpu().numpy", "min", "len", "image_nd.size", "t.inv_transform.cpu", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Clicker.get_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.apply_transforms", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.InputBRSPredictor._get_prediction", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.inv_transform", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.check_possible_recalculation", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_prediction"], ["", "def", "get_prediction", "(", "self", ",", "clicker", ",", "prev_mask", "=", "None", ")", ":", "\n", "        ", "clicks_list", "=", "clicker", ".", "get_clicks", "(", ")", "\n", "\n", "if", "self", ".", "click_models", "is", "not", "None", ":", "\n", "            ", "model_indx", "=", "min", "(", "clicker", ".", "click_indx_offset", "+", "len", "(", "clicks_list", ")", ",", "len", "(", "self", ".", "click_models", ")", ")", "-", "1", "\n", "if", "model_indx", "!=", "self", ".", "model_indx", ":", "\n", "                ", "self", ".", "model_indx", "=", "model_indx", "\n", "self", ".", "net", "=", "self", ".", "click_models", "[", "model_indx", "]", "\n", "\n", "", "", "input_image", "=", "self", ".", "original_image", "\n", "if", "prev_mask", "is", "None", ":", "\n", "            ", "prev_mask", "=", "self", ".", "prev_prediction", "\n", "", "if", "hasattr", "(", "self", ".", "net", ",", "'with_prev_mask'", ")", "and", "self", ".", "net", ".", "with_prev_mask", ":", "\n", "            ", "input_image", "=", "torch", ".", "cat", "(", "(", "input_image", ",", "prev_mask", ")", ",", "dim", "=", "1", ")", "\n", "", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "=", "self", ".", "apply_transforms", "(", "\n", "input_image", ",", "[", "clicks_list", "]", "\n", ")", "\n", "\n", "pred_logits", "=", "self", ".", "_get_prediction", "(", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", "\n", "prediction", "=", "F", ".", "interpolate", "(", "pred_logits", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ",", "\n", "size", "=", "image_nd", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "for", "t", "in", "reversed", "(", "self", ".", "transforms", ")", ":", "\n", "            ", "prediction", "=", "t", ".", "inv_transform", "(", "prediction", ")", "\n", "\n", "", "if", "self", ".", "zoom_in", "is", "not", "None", "and", "self", ".", "zoom_in", ".", "check_possible_recalculation", "(", ")", ":", "\n", "            ", "return", "self", ".", "get_prediction", "(", "clicker", ")", "\n", "\n", "", "self", ".", "prev_prediction", "=", "prediction", "\n", "return", "prediction", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._get_prediction": [[78, 81], ["base.BasePredictor.get_points_nd", "base.BasePredictor.net"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_points_nd"], ["", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "return", "self", ".", "net", "(", "image_nd", ",", "points_nd", ")", "[", "'instances'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._get_transform_states": [[82, 84], ["x.get_state"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.get_state"], ["", "def", "_get_transform_states", "(", "self", ")", ":", "\n", "        ", "return", "[", "x", ".", "get_state", "(", ")", "for", "x", "in", "self", ".", "transforms", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._set_transform_states": [[85, 89], ["zip", "len", "len", "transform.set_state"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.set_state"], ["", "def", "_set_transform_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "assert", "len", "(", "states", ")", "==", "len", "(", "self", ".", "transforms", ")", "\n", "for", "state", ",", "transform", "in", "zip", "(", "states", ",", "self", ".", "transforms", ")", ":", "\n", "            ", "transform", ".", "set_state", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.apply_transforms": [[90, 97], ["t.transform"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.transform"], ["", "", "def", "apply_transforms", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "is_image_changed", "=", "False", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "image_nd", ",", "clicks_lists", "=", "t", ".", "transform", "(", "image_nd", ",", "clicks_lists", ")", "\n", "is_image_changed", "|=", "t", ".", "image_changed", "\n", "\n", "", "return", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_points_nd": [[98, 117], ["max", "max", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "sum", "min", "total_clicks.append", "len", "zip", "len", "len"], "methods", ["None"], ["", "def", "get_points_nd", "(", "self", ",", "clicks_lists", ")", ":", "\n", "        ", "total_clicks", "=", "[", "]", "\n", "num_pos_clicks", "=", "[", "sum", "(", "x", ".", "is_positive", "for", "x", "in", "clicks_list", ")", "for", "clicks_list", "in", "clicks_lists", "]", "\n", "num_neg_clicks", "=", "[", "len", "(", "clicks_list", ")", "-", "num_pos", "for", "clicks_list", ",", "num_pos", "in", "zip", "(", "clicks_lists", ",", "num_pos_clicks", ")", "]", "\n", "num_max_points", "=", "max", "(", "num_pos_clicks", "+", "num_neg_clicks", ")", "\n", "if", "self", ".", "net_clicks_limit", "is", "not", "None", ":", "\n", "            ", "num_max_points", "=", "min", "(", "self", ".", "net_clicks_limit", ",", "num_max_points", ")", "\n", "", "num_max_points", "=", "max", "(", "1", ",", "num_max_points", ")", "\n", "\n", "for", "clicks_list", "in", "clicks_lists", ":", "\n", "            ", "clicks_list", "=", "clicks_list", "[", ":", "self", ".", "net_clicks_limit", "]", "\n", "pos_clicks", "=", "[", "click", ".", "coords_and_indx", "for", "click", "in", "clicks_list", "if", "click", ".", "is_positive", "]", "\n", "pos_clicks", "=", "pos_clicks", "+", "(", "num_max_points", "-", "len", "(", "pos_clicks", ")", ")", "*", "[", "(", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "\n", "neg_clicks", "=", "[", "click", ".", "coords_and_indx", "for", "click", "in", "clicks_list", "if", "not", "click", ".", "is_positive", "]", "\n", "neg_clicks", "=", "neg_clicks", "+", "(", "num_max_points", "-", "len", "(", "neg_clicks", ")", ")", "*", "[", "(", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "total_clicks", ".", "append", "(", "pos_clicks", "+", "neg_clicks", ")", "\n", "\n", "", "return", "torch", ".", "tensor", "(", "total_clicks", ",", "device", "=", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_states": [[118, 122], ["base.BasePredictor._get_transform_states", "base.BasePredictor.prev_prediction.clone"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._get_transform_states"], ["", "def", "get_states", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'transform_states'", ":", "self", ".", "_get_transform_states", "(", ")", ",", "\n", "'prev_prediction'", ":", "self", ".", "prev_prediction", ".", "clone", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.set_states": [[124, 127], ["base.BasePredictor._set_transform_states"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._set_transform_states"], ["", "def", "set_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "self", ".", "_set_transform_states", "(", "states", "[", "'transform_states'", "]", ")", "\n", "self", ".", "prev_prediction", "=", "states", "[", "'prev_prediction'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_losses.BRSMaskLoss.__init__": [[7, 10], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_losses.BRSMaskLoss.forward": [[11, 27], ["torch.sum", "torch.sum", "torch.no_grad", "torch.max().item", "torch.max().item", "torch.sum", "torch.sum", "torch.max", "torch.max", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "result", ",", "pos_mask", ",", "neg_mask", ")", ":", "\n", "        ", "pos_diff", "=", "(", "1", "-", "result", ")", "*", "pos_mask", "\n", "pos_target", "=", "torch", ".", "sum", "(", "pos_diff", "**", "2", ")", "\n", "pos_target", "=", "pos_target", "/", "(", "torch", ".", "sum", "(", "pos_mask", ")", "+", "self", ".", "_eps", ")", "\n", "\n", "neg_diff", "=", "result", "*", "neg_mask", "\n", "neg_target", "=", "torch", ".", "sum", "(", "neg_diff", "**", "2", ")", "\n", "neg_target", "=", "neg_target", "/", "(", "torch", ".", "sum", "(", "neg_mask", ")", "+", "self", ".", "_eps", ")", "\n", "\n", "loss", "=", "pos_target", "+", "neg_target", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "f_max_pos", "=", "torch", ".", "max", "(", "torch", ".", "abs", "(", "pos_diff", ")", ")", ".", "item", "(", ")", "\n", "f_max_neg", "=", "torch", ".", "max", "(", "torch", ".", "abs", "(", "neg_diff", ")", ")", ".", "item", "(", ")", "\n", "\n", "", "return", "loss", ",", "f_max_pos", ",", "f_max_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_losses.OracleMaskLoss.__init__": [[30, 36], ["super().__init__", "isegm.model.losses.SigmoidBinaryCrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gt_mask", "=", "None", "\n", "self", ".", "loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", "from_sigmoid", "=", "True", ")", "\n", "self", ".", "predictor", "=", "None", "\n", "self", ".", "history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_losses.OracleMaskLoss.set_gt_mask": [[37, 40], ["None"], "methods", ["None"], ["", "def", "set_gt_mask", "(", "self", ",", "gt_mask", ")", ":", "\n", "        ", "self", ".", "gt_mask", "=", "gt_mask", "\n", "self", ".", "history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_losses.OracleMaskLoss.forward": [[41, 59], ["brs_losses.OracleMaskLoss.gt_mask.to", "brs_losses.OracleMaskLoss.loss", "brs_losses.OracleMaskLoss.history.append", "torch.nn.functional.interpolate", "torch.flip", "torch.cat", "brs_losses.OracleMaskLoss.detach().cpu().numpy", "len", "abs", "result.size", "brs_losses.OracleMaskLoss.detach().cpu", "brs_losses.OracleMaskLoss.detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "result", ",", "pos_mask", ",", "neg_mask", ")", ":", "\n", "        ", "gt_mask", "=", "self", ".", "gt_mask", ".", "to", "(", "result", ".", "device", ")", "\n", "if", "self", ".", "predictor", ".", "object_roi", "is", "not", "None", ":", "\n", "            ", "r1", ",", "r2", ",", "c1", ",", "c2", "=", "self", ".", "predictor", ".", "object_roi", "[", ":", "4", "]", "\n", "gt_mask", "=", "gt_mask", "[", ":", ",", ":", ",", "r1", ":", "r2", "+", "1", ",", "c1", ":", "c2", "+", "1", "]", "\n", "gt_mask", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "gt_mask", ",", "result", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "if", "result", ".", "shape", "[", "0", "]", "==", "2", ":", "\n", "            ", "gt_mask_flipped", "=", "torch", ".", "flip", "(", "gt_mask", ",", "dims", "=", "[", "3", "]", ")", "\n", "gt_mask", "=", "torch", ".", "cat", "(", "[", "gt_mask", ",", "gt_mask_flipped", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "loss", "=", "self", ".", "loss", "(", "result", ",", "gt_mask", ")", "\n", "self", ".", "history", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "\n", "if", "len", "(", "self", ".", "history", ")", ">", "5", "and", "abs", "(", "self", ".", "history", "[", "-", "5", "]", "-", "self", ".", "history", "[", "-", "1", "]", ")", "<", "1e-5", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", "\n", "\n", "", "return", "loss", ",", "1.0", ",", "1.0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.__init__": [[10, 17], ["base.BasePredictor.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "opt_functor", ",", "optimize_after_n_clicks", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "device", ",", "**", "kwargs", ")", "\n", "self", ".", "optimize_after_n_clicks", "=", "optimize_after_n_clicks", "\n", "self", ".", "opt_functor", "=", "opt_functor", "\n", "\n", "self", ".", "opt_data", "=", "None", "\n", "self", ".", "input_data", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_input_image": [[18, 22], ["super().set_input_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_input_image"], ["", "def", "set_input_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "super", "(", ")", ".", "set_input_image", "(", "image", ")", "\n", "self", ".", "opt_data", "=", "None", "\n", "self", ".", "input_data", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor._get_clicks_maps_nd": [[23, 44], ["numpy.zeros", "numpy.zeros", "enumerate", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "len", "len", "int", "int", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "round", "round"], "methods", ["None"], ["", "def", "_get_clicks_maps_nd", "(", "self", ",", "clicks_lists", ",", "image_shape", ",", "radius", "=", "1", ")", ":", "\n", "        ", "pos_clicks_map", "=", "np", ".", "zeros", "(", "(", "len", "(", "clicks_lists", ")", ",", "1", ")", "+", "image_shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "neg_clicks_map", "=", "np", ".", "zeros", "(", "(", "len", "(", "clicks_lists", ")", ",", "1", ")", "+", "image_shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "list_indx", ",", "clicks_list", "in", "enumerate", "(", "clicks_lists", ")", ":", "\n", "            ", "for", "click", "in", "clicks_list", ":", "\n", "                ", "y", ",", "x", "=", "click", ".", "coords", "\n", "y", ",", "x", "=", "int", "(", "round", "(", "y", ")", ")", ",", "int", "(", "round", "(", "x", ")", ")", "\n", "y1", ",", "x1", "=", "y", "-", "radius", ",", "x", "-", "radius", "\n", "y2", ",", "x2", "=", "y", "+", "radius", "+", "1", ",", "x", "+", "radius", "+", "1", "\n", "\n", "if", "click", ".", "is_positive", ":", "\n", "                    ", "pos_clicks_map", "[", "list_indx", ",", "0", ",", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "True", "\n", "", "else", ":", "\n", "                    ", "neg_clicks_map", "[", "list_indx", ",", "0", ",", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "True", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pos_clicks_map", "=", "torch", ".", "from_numpy", "(", "pos_clicks_map", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "neg_clicks_map", "=", "torch", ".", "from_numpy", "(", "neg_clicks_map", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "return", "pos_clicks_map", ",", "neg_clicks_map", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.get_states": [[45, 47], ["brs.BRSBasePredictor._get_transform_states"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._get_transform_states"], ["", "def", "get_states", "(", "self", ")", ":", "\n", "        ", "return", "{", "'transform_states'", ":", "self", ".", "_get_transform_states", "(", ")", ",", "'opt_data'", ":", "self", ".", "opt_data", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor.set_states": [[48, 51], ["brs.BRSBasePredictor._set_transform_states"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor._set_transform_states"], ["", "def", "set_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "self", ".", "_set_transform_states", "(", "states", "[", "'transform_states'", "]", ")", "\n", "self", ".", "opt_data", "=", "states", "[", "'opt_data'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.FeatureBRSPredictor.__init__": [[54, 67], ["brs.BRSBasePredictor.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "opt_functor", ",", "insertion_mode", "=", "'after_deeplab'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "device", ",", "opt_functor", "=", "opt_functor", ",", "**", "kwargs", ")", "\n", "self", ".", "insertion_mode", "=", "insertion_mode", "\n", "self", ".", "_c1_features", "=", "None", "\n", "\n", "if", "self", ".", "insertion_mode", "==", "'after_deeplab'", ":", "\n", "            ", "self", ".", "num_channels", "=", "model", ".", "feature_extractor", ".", "ch", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'after_c4'", ":", "\n", "            ", "self", ".", "num_channels", "=", "model", ".", "feature_extractor", ".", "aspp_in_channels", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'after_aspp'", ":", "\n", "            ", "self", ".", "num_channels", "=", "model", ".", "feature_extractor", ".", "ch", "+", "32", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.FeatureBRSPredictor._get_prediction": [[68, 119], ["brs.FeatureBRSPredictor.get_points_nd", "brs.FeatureBRSPredictor._get_clicks_maps_nd", "len", "brs.FeatureBRSPredictor.opt_functor.init_click", "numpy.zeros", "brs.FeatureBRSPredictor._get_head_input", "scale.repeat.repeat.view", "bias.repeat.repeat.view", "brs.FeatureBRSPredictor.net.head", "torch.interpolate", "torch.interpolate", "scipy.optimize.fmin_l_bfgs_b", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "scale.repeat.repeat.repeat", "bias.repeat.repeat.repeat", "brs.FeatureBRSPredictor.net.feature_extractor.aspp", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "brs.FeatureBRSPredictor.net.feature_extractor.head", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "brs.FeatureBRSPredictor.opt_functor.unpack_opt_params", "brs.FeatureBRSPredictor._get_prediction.get_prediction_logits"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_points_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor._get_clicks_maps_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.init_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.HRNetFeatureBRSPredictor._get_head_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.unpack_opt_params"], ["", "", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "pos_mask", ",", "neg_mask", "=", "self", ".", "_get_clicks_maps_nd", "(", "clicks_lists", ",", "image_nd", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "num_clicks", "=", "len", "(", "clicks_lists", "[", "0", "]", ")", "\n", "bs", "=", "image_nd", ".", "shape", "[", "0", "]", "//", "2", "if", "self", ".", "with_flip", "else", "image_nd", ".", "shape", "[", "0", "]", "\n", "\n", "if", "self", ".", "opt_data", "is", "None", "or", "self", ".", "opt_data", ".", "shape", "[", "0", "]", "//", "(", "2", "*", "self", ".", "num_channels", ")", "!=", "bs", ":", "\n", "            ", "self", ".", "opt_data", "=", "np", ".", "zeros", "(", "(", "bs", "*", "2", "*", "self", ".", "num_channels", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "", "if", "num_clicks", "<=", "self", ".", "net_clicks_limit", "or", "is_image_changed", "or", "self", ".", "input_data", "is", "None", ":", "\n", "            ", "self", ".", "input_data", "=", "self", ".", "_get_head_input", "(", "image_nd", ",", "points_nd", ")", "\n", "\n", "", "def", "get_prediction_logits", "(", "scale", ",", "bias", ")", ":", "\n", "            ", "scale", "=", "scale", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "bias", "=", "bias", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "if", "self", ".", "with_flip", ":", "\n", "                ", "scale", "=", "scale", ".", "repeat", "(", "2", ",", "1", ",", "1", ",", "1", ")", "\n", "bias", "=", "bias", ".", "repeat", "(", "2", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "scaled_backbone_features", "=", "self", ".", "input_data", "*", "scale", "\n", "scaled_backbone_features", "=", "scaled_backbone_features", "+", "bias", "\n", "if", "self", ".", "insertion_mode", "==", "'after_c4'", ":", "\n", "                ", "x", "=", "self", ".", "net", ".", "feature_extractor", ".", "aspp", "(", "scaled_backbone_features", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "mode", "=", "'bilinear'", ",", "size", "=", "self", ".", "_c1_features", ".", "size", "(", ")", "[", "2", ":", "]", ",", "\n", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "_c1_features", ")", ",", "dim", "=", "1", ")", "\n", "scaled_backbone_features", "=", "self", ".", "net", ".", "feature_extractor", ".", "head", "(", "x", ")", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'after_aspp'", ":", "\n", "                ", "scaled_backbone_features", "=", "self", ".", "net", ".", "feature_extractor", ".", "head", "(", "scaled_backbone_features", ")", "\n", "\n", "", "pred_logits", "=", "self", ".", "net", ".", "head", "(", "scaled_backbone_features", ")", "\n", "pred_logits", "=", "F", ".", "interpolate", "(", "pred_logits", ",", "size", "=", "image_nd", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "return", "pred_logits", "\n", "\n", "", "self", ".", "opt_functor", ".", "init_click", "(", "get_prediction_logits", ",", "pos_mask", ",", "neg_mask", ",", "self", ".", "device", ")", "\n", "if", "num_clicks", ">", "self", ".", "optimize_after_n_clicks", ":", "\n", "            ", "opt_result", "=", "fmin_l_bfgs_b", "(", "func", "=", "self", ".", "opt_functor", ",", "x0", "=", "self", ".", "opt_data", ",", "\n", "**", "self", ".", "opt_functor", ".", "optimizer_params", ")", "\n", "self", ".", "opt_data", "=", "opt_result", "[", "0", "]", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "opt_functor", ".", "best_prediction", "is", "not", "None", ":", "\n", "                ", "opt_pred_logits", "=", "self", ".", "opt_functor", ".", "best_prediction", "\n", "", "else", ":", "\n", "                ", "opt_data_nd", "=", "torch", ".", "from_numpy", "(", "self", ".", "opt_data", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "opt_vars", ",", "_", "=", "self", ".", "opt_functor", ".", "unpack_opt_params", "(", "opt_data_nd", ")", "\n", "opt_pred_logits", "=", "get_prediction_logits", "(", "*", "opt_vars", ")", "\n", "\n", "", "", "return", "opt_pred_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.FeatureBRSPredictor._get_head_input": [[120, 148], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "brs.FeatureBRSPredictor.net.prepare_input", "brs.FeatureBRSPredictor.net.get_coord_features", "brs.FeatureBRSPredictor.net.rgb_conv", "hasattr", "brs.FeatureBRSPredictor.net.feature_extractor.backbone", "brs.FeatureBRSPredictor.net.feature_extractor.skip_project", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "brs.FeatureBRSPredictor.net.maps_transform", "brs.FeatureBRSPredictor.net.feature_extractor.aspp", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "brs.FeatureBRSPredictor.net.feature_extractor", "brs.FeatureBRSPredictor.size"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.prepare_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features"], ["", "def", "_get_head_input", "(", "self", ",", "image_nd", ",", "points", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "image_nd", ",", "prev_mask", "=", "self", ".", "net", ".", "prepare_input", "(", "image_nd", ")", "\n", "coord_features", "=", "self", ".", "net", ".", "get_coord_features", "(", "image_nd", ",", "prev_mask", ",", "points", ")", "\n", "\n", "if", "self", ".", "net", ".", "rgb_conv", "is", "not", "None", ":", "\n", "                ", "x", "=", "self", ".", "net", ".", "rgb_conv", "(", "torch", ".", "cat", "(", "(", "image_nd", ",", "coord_features", ")", ",", "dim", "=", "1", ")", ")", "\n", "additional_features", "=", "None", "\n", "", "elif", "hasattr", "(", "self", ".", "net", ",", "'maps_transform'", ")", ":", "\n", "                ", "x", "=", "image_nd", "\n", "additional_features", "=", "self", ".", "net", ".", "maps_transform", "(", "coord_features", ")", "\n", "\n", "", "if", "self", ".", "insertion_mode", "==", "'after_c4'", "or", "self", ".", "insertion_mode", "==", "'after_aspp'", ":", "\n", "                ", "c1", ",", "_", ",", "c3", ",", "c4", "=", "self", ".", "net", ".", "feature_extractor", ".", "backbone", "(", "x", ",", "additional_features", ")", "\n", "c1", "=", "self", ".", "net", ".", "feature_extractor", ".", "skip_project", "(", "c1", ")", "\n", "\n", "if", "self", ".", "insertion_mode", "==", "'after_aspp'", ":", "\n", "                    ", "x", "=", "self", ".", "net", ".", "feature_extractor", ".", "aspp", "(", "c4", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "c1", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c1", ")", ",", "dim", "=", "1", ")", "\n", "backbone_features", "=", "x", "\n", "", "else", ":", "\n", "                    ", "backbone_features", "=", "c4", "\n", "self", ".", "_c1_features", "=", "c1", "\n", "", "", "else", ":", "\n", "                ", "backbone_features", "=", "self", ".", "net", ".", "feature_extractor", "(", "x", ",", "additional_features", ")", "[", "0", "]", "\n", "\n", "", "", "return", "backbone_features", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.HRNetFeatureBRSPredictor.__init__": [[151, 162], ["brs.BRSBasePredictor.__init__", "sum"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "opt_functor", ",", "insertion_mode", "=", "'A'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "device", ",", "opt_functor", "=", "opt_functor", ",", "**", "kwargs", ")", "\n", "self", ".", "insertion_mode", "=", "insertion_mode", "\n", "self", ".", "_c1_features", "=", "None", "\n", "\n", "if", "self", ".", "insertion_mode", "==", "'A'", ":", "\n", "            ", "self", ".", "num_channels", "=", "sum", "(", "k", "*", "model", ".", "feature_extractor", ".", "width", "for", "k", "in", "[", "1", ",", "2", ",", "4", ",", "8", "]", ")", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'C'", ":", "\n", "            ", "self", ".", "num_channels", "=", "2", "*", "model", ".", "feature_extractor", ".", "ocr_width", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.HRNetFeatureBRSPredictor._get_prediction": [[163, 218], ["brs.HRNetFeatureBRSPredictor.get_points_nd", "brs.HRNetFeatureBRSPredictor._get_clicks_maps_nd", "len", "brs.HRNetFeatureBRSPredictor.opt_functor.init_click", "numpy.zeros", "brs.HRNetFeatureBRSPredictor._get_head_input", "scale.repeat.repeat.view", "bias.repeat.repeat.view", "torch.interpolate", "torch.interpolate", "scipy.optimize.fmin_l_bfgs_b", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "scale.repeat.repeat.repeat", "bias.repeat.repeat.repeat", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.cls_head", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "brs.HRNetFeatureBRSPredictor.opt_functor.unpack_opt_params", "brs.HRNetFeatureBRSPredictor._get_prediction.get_prediction_logits"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_points_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor._get_clicks_maps_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.init_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.HRNetFeatureBRSPredictor._get_head_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.unpack_opt_params"], ["", "", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "pos_mask", ",", "neg_mask", "=", "self", ".", "_get_clicks_maps_nd", "(", "clicks_lists", ",", "image_nd", ".", "shape", "[", "2", ":", "]", ")", "\n", "num_clicks", "=", "len", "(", "clicks_lists", "[", "0", "]", ")", "\n", "bs", "=", "image_nd", ".", "shape", "[", "0", "]", "//", "2", "if", "self", ".", "with_flip", "else", "image_nd", ".", "shape", "[", "0", "]", "\n", "\n", "if", "self", ".", "opt_data", "is", "None", "or", "self", ".", "opt_data", ".", "shape", "[", "0", "]", "//", "(", "2", "*", "self", ".", "num_channels", ")", "!=", "bs", ":", "\n", "            ", "self", ".", "opt_data", "=", "np", ".", "zeros", "(", "(", "bs", "*", "2", "*", "self", ".", "num_channels", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "", "if", "num_clicks", "<=", "self", ".", "net_clicks_limit", "or", "is_image_changed", "or", "self", ".", "input_data", "is", "None", ":", "\n", "            ", "self", ".", "input_data", "=", "self", ".", "_get_head_input", "(", "image_nd", ",", "points_nd", ")", "\n", "\n", "", "def", "get_prediction_logits", "(", "scale", ",", "bias", ")", ":", "\n", "            ", "scale", "=", "scale", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "bias", "=", "bias", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "if", "self", ".", "with_flip", ":", "\n", "                ", "scale", "=", "scale", ".", "repeat", "(", "2", ",", "1", ",", "1", ",", "1", ")", "\n", "bias", "=", "bias", ".", "repeat", "(", "2", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "scaled_backbone_features", "=", "self", ".", "input_data", "*", "scale", "\n", "scaled_backbone_features", "=", "scaled_backbone_features", "+", "bias", "\n", "if", "self", ".", "insertion_mode", "==", "'A'", ":", "\n", "                ", "if", "self", ".", "net", ".", "feature_extractor", ".", "ocr_width", ">", "0", ":", "\n", "                    ", "out_aux", "=", "self", ".", "net", ".", "feature_extractor", ".", "aux_head", "(", "scaled_backbone_features", ")", "\n", "feats", "=", "self", ".", "net", ".", "feature_extractor", ".", "conv3x3_ocr", "(", "scaled_backbone_features", ")", "\n", "\n", "context", "=", "self", ".", "net", ".", "feature_extractor", ".", "ocr_gather_head", "(", "feats", ",", "out_aux", ")", "\n", "feats", "=", "self", ".", "net", ".", "feature_extractor", ".", "ocr_distri_head", "(", "feats", ",", "context", ")", "\n", "", "else", ":", "\n", "                    ", "feats", "=", "scaled_backbone_features", "\n", "", "pred_logits", "=", "self", ".", "net", ".", "feature_extractor", ".", "cls_head", "(", "feats", ")", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'C'", ":", "\n", "                ", "pred_logits", "=", "self", ".", "net", ".", "feature_extractor", ".", "cls_head", "(", "scaled_backbone_features", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "pred_logits", "=", "F", ".", "interpolate", "(", "pred_logits", ",", "size", "=", "image_nd", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "return", "pred_logits", "\n", "\n", "", "self", ".", "opt_functor", ".", "init_click", "(", "get_prediction_logits", ",", "pos_mask", ",", "neg_mask", ",", "self", ".", "device", ")", "\n", "if", "num_clicks", ">", "self", ".", "optimize_after_n_clicks", ":", "\n", "            ", "opt_result", "=", "fmin_l_bfgs_b", "(", "func", "=", "self", ".", "opt_functor", ",", "x0", "=", "self", ".", "opt_data", ",", "\n", "**", "self", ".", "opt_functor", ".", "optimizer_params", ")", "\n", "self", ".", "opt_data", "=", "opt_result", "[", "0", "]", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "opt_functor", ".", "best_prediction", "is", "not", "None", ":", "\n", "                ", "opt_pred_logits", "=", "self", ".", "opt_functor", ".", "best_prediction", "\n", "", "else", ":", "\n", "                ", "opt_data_nd", "=", "torch", ".", "from_numpy", "(", "self", ".", "opt_data", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "opt_vars", ",", "_", "=", "self", ".", "opt_functor", ".", "unpack_opt_params", "(", "opt_data_nd", ")", "\n", "opt_pred_logits", "=", "get_prediction_logits", "(", "*", "opt_vars", ")", "\n", "\n", "", "", "return", "opt_pred_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.HRNetFeatureBRSPredictor._get_head_input": [[219, 245], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "brs.HRNetFeatureBRSPredictor.net.prepare_input", "brs.HRNetFeatureBRSPredictor.net.get_coord_features", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.compute_hrnet_feats", "brs.HRNetFeatureBRSPredictor.net.rgb_conv", "hasattr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "brs.HRNetFeatureBRSPredictor.net.maps_transform", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.aux_head", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.conv3x3_ocr", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.ocr_gather_head", "brs.HRNetFeatureBRSPredictor.net.feature_extractor.ocr_distri_head"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.prepare_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.compute_hrnet_feats"], ["", "def", "_get_head_input", "(", "self", ",", "image_nd", ",", "points", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "image_nd", ",", "prev_mask", "=", "self", ".", "net", ".", "prepare_input", "(", "image_nd", ")", "\n", "coord_features", "=", "self", ".", "net", ".", "get_coord_features", "(", "image_nd", ",", "prev_mask", ",", "points", ")", "\n", "\n", "if", "self", ".", "net", ".", "rgb_conv", "is", "not", "None", ":", "\n", "                ", "x", "=", "self", ".", "net", ".", "rgb_conv", "(", "torch", ".", "cat", "(", "(", "image_nd", ",", "coord_features", ")", ",", "dim", "=", "1", ")", ")", "\n", "additional_features", "=", "None", "\n", "", "elif", "hasattr", "(", "self", ".", "net", ",", "'maps_transform'", ")", ":", "\n", "                ", "x", "=", "image_nd", "\n", "additional_features", "=", "self", ".", "net", ".", "maps_transform", "(", "coord_features", ")", "\n", "\n", "", "feats", "=", "self", ".", "net", ".", "feature_extractor", ".", "compute_hrnet_feats", "(", "x", ",", "additional_features", ")", "\n", "\n", "if", "self", ".", "insertion_mode", "==", "'A'", ":", "\n", "                ", "backbone_features", "=", "feats", "\n", "", "elif", "self", ".", "insertion_mode", "==", "'C'", ":", "\n", "                ", "out_aux", "=", "self", ".", "net", ".", "feature_extractor", ".", "aux_head", "(", "feats", ")", "\n", "feats", "=", "self", ".", "net", ".", "feature_extractor", ".", "conv3x3_ocr", "(", "feats", ")", "\n", "\n", "context", "=", "self", ".", "net", ".", "feature_extractor", ".", "ocr_gather_head", "(", "feats", ",", "out_aux", ")", "\n", "backbone_features", "=", "self", ".", "net", ".", "feature_extractor", ".", "ocr_distri_head", "(", "feats", ",", "context", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "", "return", "backbone_features", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.InputBRSPredictor.__init__": [[248, 251], ["brs.BRSBasePredictor.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "opt_functor", ",", "optimize_target", "=", "'rgb'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "device", ",", "opt_functor", "=", "opt_functor", ",", "**", "kwargs", ")", "\n", "self", ".", "optimize_target", "=", "optimize_target", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.InputBRSPredictor._get_prediction": [[252, 308], ["brs.InputBRSPredictor.get_points_nd", "brs.InputBRSPredictor._get_clicks_maps_nd", "len", "brs.InputBRSPredictor.opt_functor.init_click", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "brs.InputBRSPredictor.net.prepare_input", "brs.InputBRSPredictor.net.get_coord_features", "torch.interpolate", "torch.interpolate", "scipy.optimize.fmin_l_bfgs_b", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "brs.InputBRSPredictor.net.rgb_conv", "hasattr", "brs.InputBRSPredictor.net.backbone_forward", "brs.InputBRSPredictor.opt_functor.unpack_opt_params", "brs.InputBRSPredictor._get_prediction.get_prediction_logits"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.base.BasePredictor.get_points_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs.BRSBasePredictor._get_clicks_maps_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.init_click", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.prepare_input", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_model.ISModel.get_coord_features", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.is_deeplab_model.DeeplabModel.backbone_forward", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.unpack_opt_params"], ["", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "pos_mask", ",", "neg_mask", "=", "self", ".", "_get_clicks_maps_nd", "(", "clicks_lists", ",", "image_nd", ".", "shape", "[", "2", ":", "]", ")", "\n", "num_clicks", "=", "len", "(", "clicks_lists", "[", "0", "]", ")", "\n", "\n", "if", "self", ".", "opt_data", "is", "None", "or", "is_image_changed", ":", "\n", "            ", "if", "self", ".", "optimize_target", "==", "'dmaps'", ":", "\n", "                ", "opt_channels", "=", "self", ".", "net", ".", "coord_feature_ch", "-", "1", "if", "self", ".", "net", ".", "with_prev_mask", "else", "self", ".", "net", ".", "coord_feature_ch", "\n", "", "else", ":", "\n", "                ", "opt_channels", "=", "3", "\n", "", "bs", "=", "image_nd", ".", "shape", "[", "0", "]", "//", "2", "if", "self", ".", "with_flip", "else", "image_nd", ".", "shape", "[", "0", "]", "\n", "self", ".", "opt_data", "=", "torch", ".", "zeros", "(", "(", "bs", ",", "opt_channels", ",", "image_nd", ".", "shape", "[", "2", "]", ",", "image_nd", ".", "shape", "[", "3", "]", ")", ",", "\n", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "", "def", "get_prediction_logits", "(", "opt_bias", ")", ":", "\n", "            ", "input_image", ",", "prev_mask", "=", "self", ".", "net", ".", "prepare_input", "(", "image_nd", ")", "\n", "dmaps", "=", "self", ".", "net", ".", "get_coord_features", "(", "input_image", ",", "prev_mask", ",", "points_nd", ")", "\n", "\n", "if", "self", ".", "optimize_target", "==", "'rgb'", ":", "\n", "                ", "input_image", "=", "input_image", "+", "opt_bias", "\n", "", "elif", "self", ".", "optimize_target", "==", "'dmaps'", ":", "\n", "                ", "if", "self", ".", "net", ".", "with_prev_mask", ":", "\n", "                    ", "dmaps", "[", ":", ",", "1", ":", ",", ":", ",", ":", "]", "=", "dmaps", "[", ":", ",", "1", ":", ",", ":", ",", ":", "]", "+", "opt_bias", "\n", "", "else", ":", "\n", "                    ", "dmaps", "=", "dmaps", "+", "opt_bias", "\n", "\n", "", "", "if", "self", ".", "net", ".", "rgb_conv", "is", "not", "None", ":", "\n", "                ", "x", "=", "self", ".", "net", ".", "rgb_conv", "(", "torch", ".", "cat", "(", "(", "input_image", ",", "dmaps", ")", ",", "dim", "=", "1", ")", ")", "\n", "if", "self", ".", "optimize_target", "==", "'all'", ":", "\n", "                    ", "x", "=", "x", "+", "opt_bias", "\n", "", "coord_features", "=", "None", "\n", "", "elif", "hasattr", "(", "self", ".", "net", ",", "'maps_transform'", ")", ":", "\n", "                ", "x", "=", "input_image", "\n", "coord_features", "=", "self", ".", "net", ".", "maps_transform", "(", "dmaps", ")", "\n", "\n", "", "pred_logits", "=", "self", ".", "net", ".", "backbone_forward", "(", "x", ",", "coord_features", "=", "coord_features", ")", "[", "'instances'", "]", "\n", "pred_logits", "=", "F", ".", "interpolate", "(", "pred_logits", ",", "size", "=", "image_nd", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "pred_logits", "\n", "\n", "", "self", ".", "opt_functor", ".", "init_click", "(", "get_prediction_logits", ",", "pos_mask", ",", "neg_mask", ",", "self", ".", "device", ",", "\n", "shape", "=", "self", ".", "opt_data", ".", "shape", ")", "\n", "if", "num_clicks", ">", "self", ".", "optimize_after_n_clicks", ":", "\n", "            ", "opt_result", "=", "fmin_l_bfgs_b", "(", "func", "=", "self", ".", "opt_functor", ",", "x0", "=", "self", ".", "opt_data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", ",", "\n", "**", "self", ".", "opt_functor", ".", "optimizer_params", ")", "\n", "\n", "self", ".", "opt_data", "=", "torch", ".", "from_numpy", "(", "opt_result", "[", "0", "]", ")", ".", "view", "(", "self", ".", "opt_data", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "opt_functor", ".", "best_prediction", "is", "not", "None", ":", "\n", "                ", "opt_pred_logits", "=", "self", ".", "opt_functor", ".", "best_prediction", "\n", "", "else", ":", "\n", "                ", "opt_vars", ",", "_", "=", "self", ".", "opt_functor", ".", "unpack_opt_params", "(", "self", ".", "opt_data", ")", "\n", "opt_pred_logits", "=", "get_prediction_logits", "(", "*", "opt_vars", ")", "\n", "\n", "", "", "return", "opt_pred_logits", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.__init__": [[9, 32], ["brs_losses.BRSMaskLoss"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "optimizer_params", ",", "\n", "prob_thresh", "=", "0.49", ",", "\n", "reg_weight", "=", "1e-3", ",", "\n", "min_iou_diff", "=", "0.01", ",", "\n", "brs_loss", "=", "BRSMaskLoss", "(", ")", ",", "\n", "with_flip", "=", "False", ",", "\n", "flip_average", "=", "False", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "brs_loss", "=", "brs_loss", "\n", "self", ".", "optimizer_params", "=", "optimizer_params", "\n", "self", ".", "prob_thresh", "=", "prob_thresh", "\n", "self", ".", "reg_weight", "=", "reg_weight", "\n", "self", ".", "min_iou_diff", "=", "min_iou_diff", "\n", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "flip_average", "=", "flip_average", "\n", "\n", "self", ".", "best_prediction", "=", "None", "\n", "self", ".", "_get_prediction_logits", "=", "None", "\n", "self", ".", "_opt_shape", "=", "None", "\n", "self", ".", "_best_loss", "=", "None", "\n", "self", ".", "_click_masks", "=", "None", "\n", "self", ".", "_last_mask", "=", "None", "\n", "self", ".", "device", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.init_click": [[33, 40], ["None"], "methods", ["None"], ["", "def", "init_click", "(", "self", ",", "get_prediction_logits", ",", "pos_mask", ",", "neg_mask", ",", "device", ",", "shape", "=", "None", ")", ":", "\n", "        ", "self", ".", "best_prediction", "=", "None", "\n", "self", ".", "_get_prediction_logits", "=", "get_prediction_logits", "\n", "self", ".", "_click_masks", "=", "(", "pos_mask", ",", "neg_mask", ")", "\n", "self", ".", "_opt_shape", "=", "shape", "\n", "self", ".", "_last_mask", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.__call__": [[41, 78], ["torch.from_numpy().float().to", "torch.from_numpy().float().to.requires_grad_", "loss.detach().cpu().numpy", "loss.backward", "torch.from_numpy().float().to.grad.cpu().numpy().ravel().astype", "torch.enable_grad", "brs_functors.BaseOptimizer.unpack_opt_params", "brs_functors.BaseOptimizer._get_prediction_logits", "torch.sigmoid", "brs_functors.BaseOptimizer.brs_loss", "brs_functors.BaseOptimizer.detach", "isegm.model.metrics._compute_iou", "torch.from_numpy().float", "torch.chunk", "loss.detach().cpu", "numpy.zeros_like", "torch.from_numpy().float().to.grad.cpu().numpy().ravel", "len", "isegm.model.metrics._compute_iou.mean", "numpy.zeros_like", "torch.from_numpy", "torch.flip", "loss.detach", "torch.from_numpy().float().to.grad.cpu().numpy", "torch.from_numpy().float().to.grad.cpu"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.unpack_opt_params", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics._compute_iou"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "opt_params", "=", "torch", ".", "from_numpy", "(", "x", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "opt_params", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "opt_vars", ",", "reg_loss", "=", "self", ".", "unpack_opt_params", "(", "opt_params", ")", "\n", "result_before_sigmoid", "=", "self", ".", "_get_prediction_logits", "(", "*", "opt_vars", ")", "\n", "result", "=", "torch", ".", "sigmoid", "(", "result_before_sigmoid", ")", "\n", "\n", "pos_mask", ",", "neg_mask", "=", "self", ".", "_click_masks", "\n", "if", "self", ".", "with_flip", "and", "self", ".", "flip_average", ":", "\n", "                ", "result", ",", "result_flipped", "=", "torch", ".", "chunk", "(", "result", ",", "2", ",", "dim", "=", "0", ")", "\n", "result", "=", "0.5", "*", "(", "result", "+", "torch", ".", "flip", "(", "result_flipped", ",", "dims", "=", "[", "3", "]", ")", ")", "\n", "pos_mask", ",", "neg_mask", "=", "pos_mask", "[", ":", "result", ".", "shape", "[", "0", "]", "]", ",", "neg_mask", "[", ":", "result", ".", "shape", "[", "0", "]", "]", "\n", "\n", "", "loss", ",", "f_max_pos", ",", "f_max_neg", "=", "self", ".", "brs_loss", "(", "result", ",", "pos_mask", ",", "neg_mask", ")", "\n", "loss", "=", "loss", "+", "reg_loss", "\n", "\n", "", "f_val", "=", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "self", ".", "best_prediction", "is", "None", "or", "f_val", "<", "self", ".", "_best_loss", ":", "\n", "            ", "self", ".", "best_prediction", "=", "result_before_sigmoid", ".", "detach", "(", ")", "\n", "self", ".", "_best_loss", "=", "f_val", "\n", "\n", "", "if", "f_max_pos", "<", "(", "1", "-", "self", ".", "prob_thresh", ")", "and", "f_max_neg", "<", "self", ".", "prob_thresh", ":", "\n", "            ", "return", "[", "f_val", ",", "np", ".", "zeros_like", "(", "x", ")", "]", "\n", "\n", "", "current_mask", "=", "result", ">", "self", ".", "prob_thresh", "\n", "if", "self", ".", "_last_mask", "is", "not", "None", "and", "self", ".", "min_iou_diff", ">", "0", ":", "\n", "            ", "diff_iou", "=", "_compute_iou", "(", "current_mask", ",", "self", ".", "_last_mask", ")", "\n", "if", "len", "(", "diff_iou", ")", ">", "0", "and", "diff_iou", ".", "mean", "(", ")", ">", "1", "-", "self", ".", "min_iou_diff", ":", "\n", "                ", "return", "[", "f_val", ",", "np", ".", "zeros_like", "(", "x", ")", "]", "\n", "", "", "self", ".", "_last_mask", "=", "current_mask", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "f_grad", "=", "opt_params", ".", "grad", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "\n", "return", "[", "f_val", ",", "f_grad", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.BaseOptimizer.unpack_opt_params": [[79, 81], ["None"], "methods", ["None"], ["", "def", "unpack_opt_params", "(", "self", ",", "opt_params", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.InputOptimizer.unpack_opt_params": [[84, 92], ["torch.cat.view", "torch.flip", "torch.cat", "torch.sum"], "methods", ["None"], ["    ", "def", "unpack_opt_params", "(", "self", ",", "opt_params", ")", ":", "\n", "        ", "opt_params", "=", "opt_params", ".", "view", "(", "self", ".", "_opt_shape", ")", "\n", "if", "self", ".", "with_flip", ":", "\n", "            ", "opt_params_flipped", "=", "torch", ".", "flip", "(", "opt_params", ",", "dims", "=", "[", "3", "]", ")", "\n", "opt_params", "=", "torch", ".", "cat", "(", "[", "opt_params", ",", "opt_params_flipped", "]", ",", "dim", "=", "0", ")", "\n", "", "reg_loss", "=", "self", ".", "reg_weight", "*", "torch", ".", "sum", "(", "opt_params", "**", "2", ")", "\n", "\n", "return", "(", "opt_params", ",", ")", ",", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.__init__": [[95, 99], ["brs_functors.BaseOptimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "scale_act", "=", "None", ",", "reg_bias_weight", "=", "10.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "scale_act", "=", "scale_act", "\n", "self", ".", "reg_bias_weight", "=", "reg_bias_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.brs_functors.ScaleBiasOptimizer.unpack_opt_params": [[100, 110], ["torch.chunk", "torch.tanh", "torch.sum", "torch.sin", "torch.sum"], "methods", ["None"], ["", "def", "unpack_opt_params", "(", "self", ",", "opt_params", ")", ":", "\n", "        ", "scale", ",", "bias", "=", "torch", ".", "chunk", "(", "opt_params", ",", "2", ",", "dim", "=", "0", ")", "\n", "reg_loss", "=", "self", ".", "reg_weight", "*", "(", "torch", ".", "sum", "(", "scale", "**", "2", ")", "+", "self", ".", "reg_bias_weight", "*", "torch", ".", "sum", "(", "bias", "**", "2", ")", ")", "\n", "\n", "if", "self", ".", "scale_act", "==", "'tanh'", ":", "\n", "            ", "scale", "=", "torch", ".", "tanh", "(", "scale", ")", "\n", "", "elif", "self", ".", "scale_act", "==", "'sin'", ":", "\n", "            ", "scale", "=", "torch", ".", "sin", "(", "scale", ")", "\n", "\n", "", "return", "(", "1", "+", "scale", ",", "bias", ")", ",", "reg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.__init__.get_predictor": [[8, 99], ["dict", "isinstance", "isegm.inference.transforms.ZoomIn", "lbfgs_params_.update", "dict", "base.BasePredictor", "brs_mode.startswith", "predictor_params_.update", "predictor_params_.update", "brs_functors.ScaleBiasOptimizer", "isinstance", "FeaturePredictor", "predictor_params_.update", "predictor_params_.update", "brs_functors.InputOptimizer", "brs.InputBRSPredictor", "predictor_params_.update"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.model.metrics.AdaptiveIoU.update"], []], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.limit_longest_side.LimitLongestSide.__init__": [[5, 7], ["zoom_in.ZoomIn.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_size", "=", "800", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_size", "=", "max_size", ",", "skip_clicks", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.limit_longest_side.LimitLongestSide.transform": [[8, 23], ["max", "zoom_in.get_roi_image_nd", "limit_longest_side.LimitLongestSide._transform_clicks", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_roi_image_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn._transform_clicks"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "image_max_size", "=", "max", "(", "image_nd", ".", "shape", "[", "2", ":", "4", "]", ")", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n", "if", "image_max_size", "<=", "self", ".", "target_size", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "", "self", ".", "_input_image", "=", "image_nd", "\n", "\n", "self", ".", "_object_roi", "=", "(", "0", ",", "image_nd", ".", "shape", "[", "2", "]", "-", "1", ",", "0", ",", "image_nd", ".", "shape", "[", "3", "]", "-", "1", ")", "\n", "self", ".", "_roi_image", "=", "get_roi_image_nd", "(", "image_nd", ",", "self", ".", "_object_roi", ",", "self", ".", "target_size", ")", "\n", "self", ".", "image_changed", "=", "True", "\n", "\n", "tclicks_lists", "=", "[", "self", ".", "_transform_clicks", "(", "clicks_lists", "[", "0", "]", ")", "]", "\n", "return", "self", ".", "_roi_image", ",", "tclicks_lists", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.__init__": [[5, 7], ["None"], "methods", ["None"], ["\n", "\n", "class", "BasePredictor", "(", "object", ")", ":", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.transform": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "device", ",", "\n", "net_clicks_limit", "=", "None", ",", "\n", "with_flip", "=", "False", ",", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.inv_transform": [[11, 13], ["None"], "methods", ["None"], ["zoom_in", "=", "None", ",", "\n", "max_size", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.reset": [[14, 16], ["None"], "methods", ["None"], ["        ", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "net_clicks_limit", "=", "net_clicks_limit", "\n", "self", ".", "original_image", "=", "None", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.get_state": [[17, 19], ["None"], "methods", ["None"], ["self", ".", "device", "=", "device", "\n", "self", ".", "zoom_in", "=", "zoom_in", "\n", "self", ".", "prev_prediction", "=", "None", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.BaseTransform.set_state": [[20, 22], ["None"], "methods", ["None"], ["self", ".", "model_indx", "=", "0", "\n", "self", ".", "click_models", "=", "None", "\n", "self", ".", "net_state_dict", "=", "None", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.SigmoidForPred.transform": [[25, 27], ["None"], "methods", ["None"], ["            ", "self", ".", "net", ",", "self", ".", "click_models", "=", "model", "\n", "", "else", ":", "\n", "            ", "self", ".", "net", "=", "model", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.SigmoidForPred.inv_transform": [[28, 30], ["torch.sigmoid"], "methods", ["None"], ["\n", "", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.SigmoidForPred.reset": [[31, 33], ["None"], "methods", ["None"], ["self", ".", "transforms", "=", "[", "zoom_in", "]", "if", "zoom_in", "is", "not", "None", "else", "[", "]", "\n", "if", "max_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "LimitLongestSide", "(", "max_size", "=", "max_size", ")", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.SigmoidForPred.get_state": [[34, 36], ["None"], "methods", ["None"], ["", "self", ".", "transforms", ".", "append", "(", "SigmoidForPred", "(", ")", ")", "\n", "if", "with_flip", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "AddHorizontalFlip", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.base.SigmoidForPred.set_state": [[37, 39], ["None"], "methods", ["None"], ["\n", "", "", "def", "set_input_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_nd", "=", "self", ".", "to_tensor", "(", "image", ")", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.__init__": [[12, 20], ["base.BaseTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", "=", "(", "320", ",", "480", ")", ",", "min_overlap", "=", "0.2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "crop_height", ",", "self", ".", "crop_width", "=", "crop_size", "\n", "self", ".", "min_overlap", "=", "min_overlap", "\n", "\n", "self", ".", "x_offsets", "=", "None", "\n", "self", ".", "y_offsets", "=", "None", "\n", "self", ".", "_counts", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.transform": [[21, 50], ["crops.get_offsets", "crops.get_offsets", "numpy.zeros", "torch.cat", "torch.tensor", "len", "torch.cat.append", "clicks_lists.append", "x.copy"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.get_offsets", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.get_offsets", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ":", "List", "[", "List", "[", "Click", "]", "]", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "image_height", ",", "image_width", "=", "image_nd", ".", "shape", "[", "2", ":", "4", "]", "\n", "self", ".", "_counts", "=", "None", "\n", "\n", "if", "image_height", "<", "self", ".", "crop_height", "or", "image_width", "<", "self", ".", "crop_width", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "\n", "", "self", ".", "x_offsets", "=", "get_offsets", "(", "image_width", ",", "self", ".", "crop_width", ",", "self", ".", "min_overlap", ")", "\n", "self", ".", "y_offsets", "=", "get_offsets", "(", "image_height", ",", "self", ".", "crop_height", ",", "self", ".", "min_overlap", ")", "\n", "self", ".", "_counts", "=", "np", ".", "zeros", "(", "(", "image_height", ",", "image_width", ")", ")", "\n", "\n", "image_crops", "=", "[", "]", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "self", ".", "_counts", "[", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "self", ".", "crop_width", "]", "+=", "1", "\n", "image_crop", "=", "image_nd", "[", ":", ",", ":", ",", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "self", ".", "crop_width", "]", "\n", "image_crops", ".", "append", "(", "image_crop", ")", "\n", "", "", "image_crops", "=", "torch", ".", "cat", "(", "image_crops", ",", "dim", "=", "0", ")", "\n", "self", ".", "_counts", "=", "torch", ".", "tensor", "(", "self", ".", "_counts", ",", "device", "=", "image_nd", ".", "device", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "clicks_list", "=", "clicks_lists", "[", "0", "]", "\n", "clicks_lists", "=", "[", "]", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "crop_clicks", "=", "[", "x", ".", "copy", "(", "coords", "=", "(", "x", ".", "coords", "[", "0", "]", "-", "dy", ",", "x", ".", "coords", "[", "1", "]", "-", "dx", ")", ")", "for", "x", "in", "clicks_list", "]", "\n", "clicks_lists", ".", "append", "(", "crop_clicks", ")", "\n", "\n", "", "", "return", "image_crops", ",", "clicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.inv_transform": [[51, 66], ["torch.zeros", "torch.div"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "if", "self", ".", "_counts", "is", "None", ":", "\n", "            ", "return", "prob_map", "\n", "\n", "", "new_prob_map", "=", "torch", ".", "zeros", "(", "(", "1", ",", "1", ",", "*", "self", ".", "_counts", ".", "shape", ")", ",", "\n", "dtype", "=", "prob_map", ".", "dtype", ",", "device", "=", "prob_map", ".", "device", ")", "\n", "\n", "crop_indx", "=", "0", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "new_prob_map", "[", "0", ",", "0", ",", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "self", ".", "crop_width", "]", "+=", "prob_map", "[", "crop_indx", ",", "0", "]", "\n", "crop_indx", "+=", "1", "\n", "", "", "new_prob_map", "=", "torch", ".", "div", "(", "new_prob_map", ",", "self", ".", "_counts", ")", "\n", "\n", "return", "new_prob_map", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.get_state": [[67, 69], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "x_offsets", ",", "self", ".", "y_offsets", ",", "self", ".", "_counts", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.set_state": [[70, 72], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "x_offsets", ",", "self", ".", "y_offsets", ",", "self", ".", "_counts", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.Crops.reset": [[73, 77], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "x_offsets", "=", "None", "\n", "self", ".", "y_offsets", "=", "None", "\n", "self", ".", "_counts", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.crops.get_offsets": [[79, 98], ["math.ceil", "int", "range", "offsets.append"], "function", ["None"], ["", "", "def", "get_offsets", "(", "length", ",", "crop_size", ",", "min_overlap_ratio", "=", "0.2", ")", ":", "\n", "    ", "if", "length", "==", "crop_size", ":", "\n", "        ", "return", "[", "0", "]", "\n", "\n", "", "N", "=", "(", "length", "/", "crop_size", "-", "min_overlap_ratio", ")", "/", "(", "1", "-", "min_overlap_ratio", ")", "\n", "N", "=", "math", ".", "ceil", "(", "N", ")", "\n", "\n", "overlap_ratio", "=", "(", "N", "-", "length", "/", "crop_size", ")", "/", "(", "N", "-", "1", ")", "\n", "overlap_width", "=", "int", "(", "crop_size", "*", "overlap_ratio", ")", "\n", "\n", "offsets", "=", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "N", ")", ":", "\n", "        ", "new_offset", "=", "offsets", "[", "-", "1", "]", "+", "crop_size", "-", "overlap_width", "\n", "if", "new_offset", "+", "crop_size", ">", "length", ":", "\n", "            ", "new_offset", "=", "length", "-", "crop_size", "\n", "\n", "", "offsets", ".", "append", "(", "new_offset", ")", "\n", "\n", "", "return", "offsets", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.flip.AddHorizontalFlip.transform": [[9, 22], ["torch.cat", "len", "clicks_lists_flipped.append", "torch.flip", "click.copy"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["    ", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ":", "List", "[", "List", "[", "Click", "]", "]", ")", ":", "\n", "        ", "assert", "len", "(", "image_nd", ".", "shape", ")", "==", "4", "\n", "image_nd", "=", "torch", ".", "cat", "(", "[", "image_nd", ",", "torch", ".", "flip", "(", "image_nd", ",", "dims", "=", "[", "3", "]", ")", "]", ",", "dim", "=", "0", ")", "\n", "\n", "image_width", "=", "image_nd", ".", "shape", "[", "3", "]", "\n", "clicks_lists_flipped", "=", "[", "]", "\n", "for", "clicks_list", "in", "clicks_lists", ":", "\n", "            ", "clicks_list_flipped", "=", "[", "click", ".", "copy", "(", "coords", "=", "(", "click", ".", "coords", "[", "0", "]", ",", "image_width", "-", "click", ".", "coords", "[", "1", "]", "-", "1", ")", ")", "\n", "for", "click", "in", "clicks_list", "]", "\n", "clicks_lists_flipped", ".", "append", "(", "clicks_list_flipped", ")", "\n", "", "clicks_lists", "=", "clicks_lists", "+", "clicks_lists_flipped", "\n", "\n", "return", "image_nd", ",", "clicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.flip.AddHorizontalFlip.inv_transform": [[23, 29], ["len", "torch.flip"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "assert", "len", "(", "prob_map", ".", "shape", ")", "==", "4", "and", "prob_map", ".", "shape", "[", "0", "]", "%", "2", "==", "0", "\n", "num_maps", "=", "prob_map", ".", "shape", "[", "0", "]", "//", "2", "\n", "prob_map", ",", "prob_map_flipped", "=", "prob_map", "[", ":", "num_maps", "]", ",", "prob_map", "[", "num_maps", ":", "]", "\n", "\n", "return", "0.5", "*", "(", "prob_map", "+", "torch", ".", "flip", "(", "prob_map_flipped", ",", "dims", "=", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.flip.AddHorizontalFlip.get_state": [[30, 32], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.flip.AddHorizontalFlip.set_state": [[33, 35], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.flip.AddHorizontalFlip.reset": [[36, 38], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.__init__": [[10, 29], ["base.BaseTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_size", "=", "400", ",", "\n", "skip_clicks", "=", "1", ",", "\n", "expansion_ratio", "=", "1.4", ",", "\n", "min_crop_size", "=", "200", ",", "\n", "recompute_thresh_iou", "=", "0.5", ",", "\n", "prob_thresh", "=", "0.50", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "target_size", "=", "target_size", "\n", "self", ".", "min_crop_size", "=", "min_crop_size", "\n", "self", ".", "skip_clicks", "=", "skip_clicks", "\n", "self", ".", "expansion_ratio", "=", "expansion_ratio", "\n", "self", ".", "recompute_thresh_iou", "=", "recompute_thresh_iou", "\n", "self", ".", "prob_thresh", "=", "prob_thresh", "\n", "\n", "self", ".", "_input_image_shape", "=", "None", "\n", "self", ".", "_prev_probs", "=", "None", "\n", "self", ".", "_object_roi", "=", "None", "\n", "self", ".", "_roi_image", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.transform": [[30, 68], ["zoom_in.get_roi_image_nd", "len", "zoom_in.ZoomIn._transform_clicks", "zoom_in.ZoomIn._roi_image.to", "len", "current_pred_mask.sum", "zoom_in.get_object_roi", "zoom_in.check_object_roi", "isegm.utils.misc.get_bbox_iou"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_roi_image_nd", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn._transform_clicks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_object_roi", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.check_object_roi", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_iou"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ":", "List", "[", "List", "[", "Click", "]", "]", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n", "clicks_list", "=", "clicks_lists", "[", "0", "]", "\n", "if", "len", "(", "clicks_list", ")", "<=", "self", ".", "skip_clicks", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "\n", "", "self", ".", "_input_image_shape", "=", "image_nd", ".", "shape", "\n", "\n", "current_object_roi", "=", "None", "\n", "if", "self", ".", "_prev_probs", "is", "not", "None", ":", "\n", "            ", "current_pred_mask", "=", "(", "self", ".", "_prev_probs", ">", "self", ".", "prob_thresh", ")", "[", "0", ",", "0", "]", "\n", "if", "current_pred_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "                ", "current_object_roi", "=", "get_object_roi", "(", "current_pred_mask", ",", "clicks_list", ",", "\n", "self", ".", "expansion_ratio", ",", "self", ".", "min_crop_size", ")", "\n", "\n", "", "", "if", "current_object_roi", "is", "None", ":", "\n", "            ", "if", "self", ".", "skip_clicks", ">=", "0", ":", "\n", "                ", "return", "image_nd", ",", "clicks_lists", "\n", "", "else", ":", "\n", "                ", "current_object_roi", "=", "0", ",", "image_nd", ".", "shape", "[", "2", "]", "-", "1", ",", "0", ",", "image_nd", ".", "shape", "[", "3", "]", "-", "1", "\n", "\n", "", "", "update_object_roi", "=", "False", "\n", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "", "elif", "not", "check_object_roi", "(", "self", ".", "_object_roi", ",", "clicks_list", ")", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "", "elif", "get_bbox_iou", "(", "current_object_roi", ",", "self", ".", "_object_roi", ")", "<", "self", ".", "recompute_thresh_iou", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "\n", "", "if", "update_object_roi", ":", "\n", "            ", "self", ".", "_object_roi", "=", "current_object_roi", "\n", "self", ".", "image_changed", "=", "True", "\n", "", "self", ".", "_roi_image", "=", "get_roi_image_nd", "(", "image_nd", ",", "self", ".", "_object_roi", ",", "self", ".", "target_size", ")", "\n", "\n", "tclicks_lists", "=", "[", "self", ".", "_transform_clicks", "(", "clicks_list", ")", "]", "\n", "return", "self", ".", "_roi_image", ".", "to", "(", "image_nd", ".", "device", ")", ",", "tclicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.inv_transform": [[69, 88], ["torch.nn.functional.interpolate", "torch.zeros.cpu().numpy", "torch.nn.functional.interpolate.cpu().numpy", "torch.zeros", "torch.zeros.cpu", "torch.nn.functional.interpolate.cpu"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "self", ".", "_prev_probs", "=", "prob_map", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "prob_map", "\n", "\n", "", "assert", "prob_map", ".", "shape", "[", "0", "]", "==", "1", "\n", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "self", ".", "_object_roi", "\n", "prob_map", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "prob_map", ",", "size", "=", "(", "rmax", "-", "rmin", "+", "1", ",", "cmax", "-", "cmin", "+", "1", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "if", "self", ".", "_prev_probs", "is", "not", "None", ":", "\n", "            ", "new_prob_map", "=", "torch", ".", "zeros", "(", "*", "self", ".", "_prev_probs", ".", "shape", ",", "device", "=", "prob_map", ".", "device", ",", "dtype", "=", "prob_map", ".", "dtype", ")", "\n", "new_prob_map", "[", ":", ",", ":", ",", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "=", "prob_map", "\n", "", "else", ":", "\n", "            ", "new_prob_map", "=", "prob_map", "\n", "\n", "", "self", ".", "_prev_probs", "=", "new_prob_map", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "return", "new_prob_map", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.check_possible_recalculation": [[89, 101], ["pred_mask.sum", "zoom_in.get_object_roi", "isegm.utils.misc.get_bbox_iou"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_object_roi", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_iou"], ["", "def", "check_possible_recalculation", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_prev_probs", "is", "None", "or", "self", ".", "_object_roi", "is", "not", "None", "or", "self", ".", "skip_clicks", ">", "0", ":", "\n", "            ", "return", "False", "\n", "\n", "", "pred_mask", "=", "(", "self", ".", "_prev_probs", ">", "self", ".", "prob_thresh", ")", "[", "0", ",", "0", "]", "\n", "if", "pred_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "possible_object_roi", "=", "get_object_roi", "(", "pred_mask", ",", "[", "]", ",", "\n", "self", ".", "expansion_ratio", ",", "self", ".", "min_crop_size", ")", "\n", "image_roi", "=", "(", "0", ",", "self", ".", "_input_image_shape", "[", "2", "]", "-", "1", ",", "0", ",", "self", ".", "_input_image_shape", "[", "3", "]", "-", "1", ")", "\n", "if", "get_bbox_iou", "(", "possible_object_roi", ",", "image_roi", ")", "<", "0.50", ":", "\n", "                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.get_state": [[102, 105], ["zoom_in.ZoomIn._roi_image.cpu"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "roi_image", "=", "self", ".", "_roi_image", ".", "cpu", "(", ")", "if", "self", ".", "_roi_image", "is", "not", "None", "else", "None", "\n", "return", "self", ".", "_input_image_shape", ",", "self", ".", "_object_roi", ",", "self", ".", "_prev_probs", ",", "roi_image", ",", "self", ".", "image_changed", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.set_state": [[106, 108], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "_input_image_shape", ",", "self", ".", "_object_roi", ",", "self", ".", "_prev_probs", ",", "self", ".", "_roi_image", ",", "self", ".", "image_changed", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn.reset": [[109, 115], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_input_image_shape", "=", "None", "\n", "self", ".", "_object_roi", "=", "None", "\n", "self", ".", "_prev_probs", "=", "None", "\n", "self", ".", "_roi_image", "=", "None", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.ZoomIn._transform_clicks": [[116, 129], ["transformed_clicks.append", "click.copy"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "def", "_transform_clicks", "(", "self", ",", "clicks_list", ")", ":", "\n", "        ", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "return", "clicks_list", "\n", "\n", "", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "self", ".", "_object_roi", "\n", "crop_height", ",", "crop_width", "=", "self", ".", "_roi_image", ".", "shape", "[", "2", ":", "]", "\n", "\n", "transformed_clicks", "=", "[", "]", "\n", "for", "click", "in", "clicks_list", ":", "\n", "            ", "new_r", "=", "crop_height", "*", "(", "click", ".", "coords", "[", "0", "]", "-", "rmin", ")", "/", "(", "rmax", "-", "rmin", "+", "1", ")", "\n", "new_c", "=", "crop_width", "*", "(", "click", ".", "coords", "[", "1", "]", "-", "cmin", ")", "/", "(", "cmax", "-", "cmin", "+", "1", ")", "\n", "transformed_clicks", ".", "append", "(", "click", ".", "copy", "(", "coords", "=", "(", "new_r", ",", "new_c", ")", ")", ")", "\n", "", "return", "transformed_clicks", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_object_roi": [[131, 144], ["pred_mask.copy.copy", "isegm.utils.misc.get_bbox_from_mask", "isegm.utils.misc.expand_bbox", "isegm.utils.misc.clamp_bbox", "int", "int"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.expand_bbox", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.clamp_bbox"], ["", "", "def", "get_object_roi", "(", "pred_mask", ",", "clicks_list", ",", "expansion_ratio", ",", "min_crop_size", ")", ":", "\n", "    ", "pred_mask", "=", "pred_mask", ".", "copy", "(", ")", "\n", "\n", "for", "click", "in", "clicks_list", ":", "\n", "        ", "if", "click", ".", "is_positive", ":", "\n", "            ", "pred_mask", "[", "int", "(", "click", ".", "coords", "[", "0", "]", ")", ",", "int", "(", "click", ".", "coords", "[", "1", "]", ")", "]", "=", "1", "\n", "\n", "", "", "bbox", "=", "get_bbox_from_mask", "(", "pred_mask", ")", "\n", "bbox", "=", "expand_bbox", "(", "bbox", ",", "expansion_ratio", ",", "min_crop_size", ")", "\n", "h", ",", "w", "=", "pred_mask", ".", "shape", "[", "0", "]", ",", "pred_mask", ".", "shape", "[", "1", "]", "\n", "bbox", "=", "clamp_bbox", "(", "bbox", ",", "0", ",", "h", "-", "1", ",", "0", ",", "w", "-", "1", ")", "\n", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.get_roi_image_nd": [[146, 165], ["isinstance", "int", "int", "torch.no_grad", "torch.nn.functional.interpolate", "max", "round", "round"], "function", ["None"], ["", "def", "get_roi_image_nd", "(", "image_nd", ",", "object_roi", ",", "target_size", ")", ":", "\n", "    ", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "object_roi", "\n", "\n", "height", "=", "rmax", "-", "rmin", "+", "1", "\n", "width", "=", "cmax", "-", "cmin", "+", "1", "\n", "\n", "if", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "        ", "new_height", ",", "new_width", "=", "target_size", "\n", "", "else", ":", "\n", "        ", "scale", "=", "target_size", "/", "max", "(", "height", ",", "width", ")", "\n", "new_height", "=", "int", "(", "round", "(", "height", "*", "scale", ")", ")", "\n", "new_width", "=", "int", "(", "round", "(", "width", "*", "scale", ")", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "roi_image_nd", "=", "image_nd", "[", ":", ",", ":", ",", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "\n", "roi_image_nd", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "roi_image_nd", ",", "size", "=", "(", "new_height", ",", "new_width", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "return", "roi_image_nd", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.transforms.zoom_in.check_object_roi": [[167, 176], ["None"], "function", ["None"], ["", "def", "check_object_roi", "(", "object_roi", ",", "clicks_list", ")", ":", "\n", "    ", "for", "click", "in", "clicks_list", ":", "\n", "        ", "if", "click", ".", "is_positive", ":", "\n", "            ", "if", "click", ".", "coords", "[", "0", "]", "<", "object_roi", "[", "0", "]", "or", "click", ".", "coords", "[", "0", "]", ">=", "object_roi", "[", "1", "]", ":", "\n", "                ", "return", "False", "\n", "", "if", "click", ".", "coords", "[", "1", "]", "<", "object_roi", "[", "2", "]", "or", "click", ".", "coords", "[", "1", "]", ">=", "object_roi", "[", "3", "]", ":", "\n", "                ", "return", "False", "\n", "\n", "", "", "", "return", "True", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.__init__": [[13, 17], ["albumentations.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale_range", "=", "(", "0.9", ",", "1.1", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "always_apply", "=", "False", ",", "p", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "scale_range", "=", "scale_range", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.get_params_dependent_on_targets": [[18, 23], ["random.uniform", "int", "int", "round", "round"], "methods", ["None"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "scale", "=", "random", ".", "uniform", "(", "*", "self", ".", "scale_range", ")", "\n", "height", "=", "int", "(", "round", "(", "params", "[", "'image'", "]", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "width", "=", "int", "(", "round", "(", "params", "[", "'image'", "]", ".", "shape", "[", "1", "]", "*", "scale", ")", ")", "\n", "return", "{", "'new_height'", ":", "height", ",", "'new_width'", ":", "width", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.apply": [[24, 26], ["albumentations.augmentations.functional.resize"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "img", ",", "new_height", "=", "0", ",", "new_width", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "resize", "(", "img", ",", "height", "=", "new_height", ",", "width", "=", "new_width", ",", "interpolation", "=", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.apply_to_keypoint": [[27, 31], ["albumentations.augmentations.functional.keypoint_scale"], "methods", ["None"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "new_height", "=", "0", ",", "new_width", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "scale_x", "=", "new_width", "/", "params", "[", "\"cols\"", "]", "\n", "scale_y", "=", "new_height", "/", "params", "[", "\"rows\"", "]", "\n", "return", "F", ".", "keypoint_scale", "(", "keypoint", ",", "scale_x", ",", "scale_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.get_transform_init_args_names": [[32, 34], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "\"scale_range\"", ",", "\"interpolation\"", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.UniformRandomResize.targets_as_params": [[35, 38], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.__init__": [[41, 61], ["albumentations.DualTransform.__init__", "albumentations.core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "height", ",", "\n", "width", ",", "\n", "bbox_jitter", "=", "0.1", ",", "\n", "expansion_ratio", "=", "1.4", ",", "\n", "min_crop_size", "=", "200", ",", "\n", "min_area", "=", "100", ",", "\n", "always_resize", "=", "False", ",", "\n", "always_apply", "=", "False", ",", "\n", "p", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "ZoomIn", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "bbox_jitter", "=", "to_tuple", "(", "bbox_jitter", ")", "\n", "self", ".", "expansion_ratio", "=", "expansion_ratio", "\n", "self", ".", "min_crop_size", "=", "min_crop_size", "\n", "self", ".", "min_area", "=", "min_area", "\n", "self", ".", "always_resize", "=", "always_resize", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply": [[62, 73], ["albumentations.augmentations.functional.resize", "albumentations.augmentations.functional.resize"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "img", ",", "selected_object", ",", "bbox", ",", "**", "params", ")", ":", "\n", "        ", "if", "selected_object", "is", "None", ":", "\n", "            ", "if", "self", ".", "always_resize", ":", "\n", "                ", "img", "=", "F", ".", "resize", "(", "img", ",", "height", "=", "self", ".", "height", ",", "width", "=", "self", ".", "width", ")", "\n", "", "return", "img", "\n", "\n", "", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "bbox", "\n", "img", "=", "img", "[", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "\n", "img", "=", "F", ".", "resize", "(", "img", ",", "height", "=", "self", ".", "height", ",", "width", "=", "self", ".", "width", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply_to_mask": [[74, 96], ["isinstance", "albumentations.augmentations.functional.resize", "numpy.zeros_like", "albumentations.augmentations.functional.resize.copy", "albumentations.augmentations.functional.resize", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.clicker.Click.copy"], ["", "def", "apply_to_mask", "(", "self", ",", "mask", ",", "selected_object", ",", "bbox", ",", "**", "params", ")", ":", "\n", "        ", "if", "selected_object", "is", "None", ":", "\n", "            ", "if", "self", ".", "always_resize", ":", "\n", "                ", "mask", "=", "F", ".", "resize", "(", "mask", ",", "height", "=", "self", ".", "height", ",", "width", "=", "self", ".", "width", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "return", "mask", "\n", "\n", "", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "bbox", "\n", "mask", "=", "mask", "[", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "\n", "if", "isinstance", "(", "selected_object", ",", "tuple", ")", ":", "\n", "            ", "layer_indx", ",", "mask_id", "=", "selected_object", "\n", "obj_mask", "=", "mask", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", "\n", "new_mask", "=", "np", ".", "zeros_like", "(", "mask", ")", "\n", "new_mask", "[", ":", ",", ":", ",", "layer_indx", "]", "[", "obj_mask", "]", "=", "mask_id", "\n", "", "else", ":", "\n", "            ", "obj_mask", "=", "mask", "==", "selected_object", "\n", "new_mask", "=", "mask", ".", "copy", "(", ")", "\n", "new_mask", "[", "np", ".", "logical_not", "(", "obj_mask", ")", "]", "=", "0", "\n", "\n", "", "new_mask", "=", "F", ".", "resize", "(", "new_mask", ",", "height", "=", "self", ".", "height", ",", "width", "=", "self", ".", "width", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "return", "new_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.get_params_dependent_on_targets": [[97, 137], ["len", "range", "isegm.utils.misc.get_labels_with_sizes", "random.choice", "isegm.utils.misc.get_bbox_from_mask", "isinstance", "isegm.utils.misc.expand_bbox", "transforms.ZoomIn._jitter_bbox", "isegm.utils.misc.clamp_bbox", "isegm.utils.misc.get_labels_with_sizes", "candidates.extend", "random.uniform", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.expand_bbox", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn._jitter_bbox", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.clamp_bbox", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "instances", "=", "params", "[", "'mask'", "]", "\n", "\n", "is_mask_layer", "=", "len", "(", "instances", ".", "shape", ")", ">", "2", "\n", "candidates", "=", "[", "]", "\n", "if", "is_mask_layer", ":", "\n", "            ", "for", "layer_indx", "in", "range", "(", "instances", ".", "shape", "[", "2", "]", ")", ":", "\n", "                ", "labels", ",", "areas", "=", "get_labels_with_sizes", "(", "instances", "[", ":", ",", ":", ",", "layer_indx", "]", ")", "\n", "candidates", ".", "extend", "(", "[", "(", "layer_indx", ",", "obj_id", ")", "\n", "for", "obj_id", ",", "area", "in", "zip", "(", "labels", ",", "areas", ")", "\n", "if", "area", ">", "self", ".", "min_area", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "labels", ",", "areas", "=", "get_labels_with_sizes", "(", "instances", ")", "\n", "candidates", "=", "[", "obj_id", "for", "obj_id", ",", "area", "in", "zip", "(", "labels", ",", "areas", ")", "\n", "if", "area", ">", "self", ".", "min_area", "]", "\n", "\n", "", "selected_object", "=", "None", "\n", "bbox", "=", "None", "\n", "if", "candidates", ":", "\n", "            ", "selected_object", "=", "random", ".", "choice", "(", "candidates", ")", "\n", "if", "is_mask_layer", ":", "\n", "                ", "layer_indx", ",", "mask_id", "=", "selected_object", "\n", "obj_mask", "=", "instances", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", "\n", "", "else", ":", "\n", "                ", "obj_mask", "=", "instances", "==", "selected_object", "\n", "\n", "", "bbox", "=", "get_bbox_from_mask", "(", "obj_mask", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "expansion_ratio", ",", "tuple", ")", ":", "\n", "                ", "expansion_ratio", "=", "random", ".", "uniform", "(", "*", "self", ".", "expansion_ratio", ")", "\n", "", "else", ":", "\n", "                ", "expansion_ratio", "=", "self", ".", "expansion_ratio", "\n", "\n", "", "bbox", "=", "expand_bbox", "(", "bbox", ",", "expansion_ratio", ",", "self", ".", "min_crop_size", ")", "\n", "bbox", "=", "self", ".", "_jitter_bbox", "(", "bbox", ")", "\n", "bbox", "=", "clamp_bbox", "(", "bbox", ",", "0", ",", "obj_mask", ".", "shape", "[", "0", "]", "-", "1", ",", "0", ",", "obj_mask", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "", "return", "{", "\n", "'selected_object'", ":", "selected_object", ",", "\n", "'bbox'", ":", "bbox", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn._jitter_bbox": [[139, 149], ["int", "int", "int", "int", "random.uniform", "random.uniform", "random.uniform", "random.uniform"], "methods", ["None"], ["", "def", "_jitter_bbox", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "bbox", "\n", "height", "=", "rmax", "-", "rmin", "+", "1", "\n", "width", "=", "cmax", "-", "cmin", "+", "1", "\n", "rmin", "=", "int", "(", "rmin", "+", "random", ".", "uniform", "(", "*", "self", ".", "bbox_jitter", ")", "*", "height", ")", "\n", "rmax", "=", "int", "(", "rmax", "+", "random", ".", "uniform", "(", "*", "self", ".", "bbox_jitter", ")", "*", "height", ")", "\n", "cmin", "=", "int", "(", "cmin", "+", "random", ".", "uniform", "(", "*", "self", ".", "bbox_jitter", ")", "*", "width", ")", "\n", "cmax", "=", "int", "(", "cmax", "+", "random", ".", "uniform", "(", "*", "self", ".", "bbox_jitter", ")", "*", "width", ")", "\n", "\n", "return", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply_to_bbox": [[150, 152], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "**", "params", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply_to_keypoint": [[153, 155], ["None"], "methods", ["None"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "**", "params", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.targets_as_params": [[156, 159], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"mask\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.get_transform_init_args_names": [[160, 163], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"height\"", ",", "\"width\"", ",", "\"bbox_jitter\"", ",", "\n", "\"expansion_ratio\"", ",", "\"min_crop_size\"", ",", "\"min_area\"", ",", "\"always_resize\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.remove_image_only_transforms": [[165, 179], ["keep_transforms.append", "transforms.remove_image_only_transforms", "issubclass", "keep_transforms.append"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.remove_image_only_transforms"], ["", "", "def", "remove_image_only_transforms", "(", "sdict", ")", ":", "\n", "    ", "if", "not", "'transforms'", "in", "sdict", ":", "\n", "        ", "return", "sdict", "\n", "\n", "", "keep_transforms", "=", "[", "]", "\n", "for", "tdict", "in", "sdict", "[", "'transforms'", "]", ":", "\n", "        ", "cls", "=", "SERIALIZABLE_REGISTRY", "[", "tdict", "[", "'__class_fullname__'", "]", "]", "\n", "if", "'transforms'", "in", "tdict", ":", "\n", "            ", "keep_transforms", ".", "append", "(", "remove_image_only_transforms", "(", "tdict", ")", ")", "\n", "", "elif", "not", "issubclass", "(", "cls", ",", "ImageOnlyTransform", ")", ":", "\n", "            ", "keep_transforms", ".", "append", "(", "tdict", ")", "\n", "", "", "sdict", "[", "'transforms'", "]", "=", "keep_transforms", "\n", "\n", "return", "sdict", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.__init__": [[11, 31], ["points_sampler.MultiPointSampler", "super().__init__", "base.ISDataset._load_samples_scores", "torchvision.transforms.ToTensor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset._load_samples_scores"], ["zoom_in", "=", "None", ",", "\n", "max_size", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "net_clicks_limit", "=", "net_clicks_limit", "\n", "self", ".", "original_image", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "zoom_in", "=", "zoom_in", "\n", "self", ".", "prev_prediction", "=", "None", "\n", "self", ".", "model_indx", "=", "0", "\n", "self", ".", "click_models", "=", "None", "\n", "self", ".", "net_state_dict", "=", "None", "\n", "\n", "if", "isinstance", "(", "model", ",", "tuple", ")", ":", "\n", "            ", "self", ".", "net", ",", "self", ".", "click_models", "=", "model", "\n", "", "else", ":", "\n", "            ", "self", ".", "net", "=", "model", "\n", "\n", "", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n", "self", ".", "transforms", "=", "[", "zoom_in", "]", "if", "zoom_in", "is", "not", "None", "else", "[", "]", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.__getitem__": [[32, 58], ["base.ISDataset.get_sample", "base.ISDataset.augment_sample", "base.ISDataset.remove_small_objects", "base.ISDataset.points_sampler.sample_object", "numpy.array", "numpy.random.choice", "base.ISDataset.points_sampler.sample_points", "base.ISDataset.to_tensor", "numpy.array.astype", "random.randrange", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_sample", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.augment_sample", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.remove_small_objects", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler.sample_object", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler.sample_points"], ["if", "max_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "LimitLongestSide", "(", "max_size", "=", "max_size", ")", ")", "\n", "", "self", ".", "transforms", ".", "append", "(", "SigmoidForPred", "(", ")", ")", "\n", "if", "with_flip", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "AddHorizontalFlip", "(", ")", ")", "\n", "\n", "", "", "def", "set_input_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_nd", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "transform", ".", "reset", "(", ")", "\n", "", "self", ".", "original_image", "=", "image_nd", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "len", "(", "self", ".", "original_image", ".", "shape", ")", "==", "3", ":", "\n", "            ", "self", ".", "original_image", "=", "self", ".", "original_image", ".", "unsqueeze", "(", "0", ")", "\n", "", "self", ".", "prev_prediction", "=", "torch", ".", "zeros_like", "(", "self", ".", "original_image", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "def", "get_prediction", "(", "self", ",", "clicker", ",", "prev_mask", "=", "None", ")", ":", "\n", "        ", "clicks_list", "=", "clicker", ".", "get_clicks", "(", ")", "\n", "\n", "if", "self", ".", "click_models", "is", "not", "None", ":", "\n", "            ", "model_indx", "=", "min", "(", "clicker", ".", "click_indx_offset", "+", "len", "(", "clicks_list", ")", ",", "len", "(", "self", ".", "click_models", ")", ")", "-", "1", "\n", "if", "model_indx", "!=", "self", ".", "model_indx", ":", "\n", "                ", "self", ".", "model_indx", "=", "model_indx", "\n", "self", ".", "net", "=", "self", ".", "click_models", "[", "model_indx", "]", "\n", "\n", "", "", "input_image", "=", "self", ".", "original_image", "\n", "if", "prev_mask", "is", "None", ":", "\n", "            ", "prev_mask", "=", "self", ".", "prev_prediction", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.augment_sample": [[59, 71], ["sample.augment", "random.random", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.augment"], ["", "if", "hasattr", "(", "self", ".", "net", ",", "'with_prev_mask'", ")", "and", "self", ".", "net", ".", "with_prev_mask", ":", "\n", "            ", "input_image", "=", "torch", ".", "cat", "(", "(", "input_image", ",", "prev_mask", ")", ",", "dim", "=", "1", ")", "\n", "", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "=", "self", ".", "apply_transforms", "(", "\n", "input_image", ",", "[", "clicks_list", "]", "\n", ")", "\n", "\n", "pred_logits", "=", "self", ".", "_get_prediction", "(", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", "\n", "prediction", "=", "F", ".", "interpolate", "(", "pred_logits", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ",", "\n", "size", "=", "image_nd", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "for", "t", "in", "reversed", "(", "self", ".", "transforms", ")", ":", "\n", "            ", "prediction", "=", "t", ".", "inv_transform", "(", "prediction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.get_sample": [[72, 74], ["None"], "methods", ["None"], ["", "if", "self", ".", "zoom_in", "is", "not", "None", "and", "self", ".", "zoom_in", ".", "check_possible_recalculation", "(", ")", ":", "\n", "            ", "return", "self", ".", "get_prediction", "(", "clicker", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.__len__": [[75, 80], ["base.ISDataset.get_samples_number"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.get_samples_number"], ["", "self", ".", "prev_prediction", "=", "prediction", "\n", "return", "prediction", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", ",", "0", "]", "\n", "\n", "", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "return", "self", ".", "net", "(", "image_nd", ",", "points_nd", ")", "[", "'instances'", "]", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset.get_samples_number": [[81, 83], ["len"], "methods", ["None"], ["\n", "", "def", "_get_transform_states", "(", "self", ")", ":", "\n", "        ", "return", "[", "x", ".", "get_state", "(", ")", "for", "x", "in", "self", ".", "transforms", "]", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.base.ISDataset._load_samples_scores": [[84, 100], ["numpy.array", "numpy.array.sum", "print", "open", "pickle.load", "len"], "methods", ["None"], ["\n", "", "def", "_set_transform_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "assert", "len", "(", "states", ")", "==", "len", "(", "self", ".", "transforms", ")", "\n", "for", "state", ",", "transform", "in", "zip", "(", "states", ",", "self", ".", "transforms", ")", ":", "\n", "            ", "transform", ".", "set_state", "(", "state", ")", "\n", "\n", "", "", "def", "apply_transforms", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "is_image_changed", "=", "False", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "image_nd", ",", "clicks_lists", "=", "t", ".", "transform", "(", "image_nd", ",", "clicks_lists", ")", "\n", "is_image_changed", "|=", "t", ".", "image_changed", "\n", "\n", "", "return", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "\n", "\n", "", "def", "get_points_nd", "(", "self", ",", "clicks_lists", ")", ":", "\n", "        ", "total_clicks", "=", "[", "]", "\n", "num_pos_clicks", "=", "[", "sum", "(", "x", ".", "is_positive", "for", "x", "in", "clicks_list", ")", "for", "clicks_list", "in", "clicks_lists", "]", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.BasePointSampler.__init__": [[10, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_selected_mask", "=", "None", "\n", "self", ".", "_selected_masks", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.BasePointSampler.sample_object": [[14, 16], ["None"], "methods", ["None"], ["", "def", "sample_object", "(", "self", ",", "sample", ":", "DSample", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.BasePointSampler.sample_points": [[17, 19], ["None"], "methods", ["None"], ["", "def", "sample_points", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.BasePointSampler.selected_mask": [[25, 28], ["mask[].astype"], "methods", ["None"], ["", "@", "selected_mask", ".", "setter", "\n", "def", "selected_mask", "(", "self", ",", "mask", ")", ":", "\n", "        ", "self", ".", "_selected_mask", "=", "mask", "[", "np", ".", "newaxis", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler.__init__": [[31, 62], ["points_sampler.BasePointSampler.__init__", "math.isclose", "points_sampler.generate_probs", "points_sampler.generate_probs", "sum"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.generate_probs", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.generate_probs"], ["    ", "def", "__init__", "(", "self", ",", "max_num_points", ",", "prob_gamma", "=", "0.7", ",", "expand_ratio", "=", "0.1", ",", "\n", "positive_erode_prob", "=", "0.9", ",", "positive_erode_iters", "=", "3", ",", "\n", "negative_bg_prob", "=", "0.1", ",", "negative_other_prob", "=", "0.4", ",", "negative_border_prob", "=", "0.5", ",", "\n", "merge_objects_prob", "=", "0.0", ",", "max_num_merged_objects", "=", "2", ",", "\n", "use_hierarchy", "=", "False", ",", "soft_targets", "=", "False", ",", "\n", "first_click_center", "=", "False", ",", "only_one_first_click", "=", "False", ",", "\n", "sfc_inner_k", "=", "1.7", ",", "sfc_full_inner_prob", "=", "0.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_num_points", "=", "max_num_points", "\n", "self", ".", "expand_ratio", "=", "expand_ratio", "\n", "self", ".", "positive_erode_prob", "=", "positive_erode_prob", "\n", "self", ".", "positive_erode_iters", "=", "positive_erode_iters", "\n", "self", ".", "merge_objects_prob", "=", "merge_objects_prob", "\n", "self", ".", "use_hierarchy", "=", "use_hierarchy", "\n", "self", ".", "soft_targets", "=", "soft_targets", "\n", "self", ".", "first_click_center", "=", "first_click_center", "\n", "self", ".", "only_one_first_click", "=", "only_one_first_click", "\n", "self", ".", "sfc_inner_k", "=", "sfc_inner_k", "\n", "self", ".", "sfc_full_inner_prob", "=", "sfc_full_inner_prob", "\n", "\n", "if", "max_num_merged_objects", "==", "-", "1", ":", "\n", "            ", "max_num_merged_objects", "=", "max_num_points", "\n", "", "self", ".", "max_num_merged_objects", "=", "max_num_merged_objects", "\n", "\n", "self", ".", "neg_strategies", "=", "[", "'bg'", ",", "'other'", ",", "'border'", "]", "\n", "self", ".", "neg_strategies_prob", "=", "[", "negative_bg_prob", ",", "negative_other_prob", ",", "negative_border_prob", "]", "\n", "assert", "math", ".", "isclose", "(", "sum", "(", "self", ".", "neg_strategies_prob", ")", ",", "1.0", ")", "\n", "\n", "self", ".", "_pos_probs", "=", "generate_probs", "(", "max_num_points", ",", "gamma", "=", "prob_gamma", ")", "\n", "self", ".", "_neg_probs", "=", "generate_probs", "(", "max_num_points", "+", "1", ",", "gamma", "=", "prob_gamma", ")", "\n", "self", ".", "_neg_masks", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler.sample_object": [[63, 91], ["points_sampler.MultiPointSampler._sample_mask", "numpy.logical_not", "points_sampler.MultiPointSampler._get_border_mask", "len", "sample.get_background_mask", "numpy.zeros_like", "len", "len", "numpy.logical_and", "numpy.logical_not", "numpy.logical_not", "sample.get_background_mask"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._get_border_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_background_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_background_mask"], ["", "def", "sample_object", "(", "self", ",", "sample", ":", "DSample", ")", ":", "\n", "        ", "if", "len", "(", "sample", ")", "==", "0", ":", "\n", "            ", "bg_mask", "=", "sample", ".", "get_background_mask", "(", ")", "\n", "self", ".", "selected_mask", "=", "np", ".", "zeros_like", "(", "bg_mask", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "_selected_masks", "=", "[", "[", "]", "]", "\n", "self", ".", "_neg_masks", "=", "{", "strategy", ":", "bg_mask", "for", "strategy", "in", "self", ".", "neg_strategies", "}", "\n", "self", ".", "_neg_masks", "[", "'required'", "]", "=", "[", "]", "\n", "return", "\n", "\n", "", "gt_mask", ",", "pos_masks", ",", "neg_masks", "=", "self", ".", "_sample_mask", "(", "sample", ")", "\n", "binary_gt_mask", "=", "gt_mask", ">", "0.5", "if", "self", ".", "soft_targets", "else", "gt_mask", ">", "0", "\n", "\n", "self", ".", "selected_mask", "=", "gt_mask", "\n", "self", ".", "_selected_masks", "=", "pos_masks", "\n", "\n", "neg_mask_bg", "=", "np", ".", "logical_not", "(", "binary_gt_mask", ")", "\n", "neg_mask_border", "=", "self", ".", "_get_border_mask", "(", "binary_gt_mask", ")", "\n", "if", "len", "(", "sample", ")", "<=", "len", "(", "self", ".", "_selected_masks", ")", ":", "\n", "            ", "neg_mask_other", "=", "neg_mask_bg", "\n", "", "else", ":", "\n", "            ", "neg_mask_other", "=", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "sample", ".", "get_background_mask", "(", ")", ")", ",", "\n", "np", ".", "logical_not", "(", "binary_gt_mask", ")", ")", "\n", "\n", "", "self", ".", "_neg_masks", "=", "{", "\n", "'bg'", ":", "neg_mask_bg", ",", "\n", "'other'", ":", "neg_mask_other", ",", "\n", "'border'", ":", "neg_mask_border", ",", "\n", "'required'", ":", "neg_masks", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_mask": [[93, 120], ["min", "numpy.random.randint", "random.sample", "points_sampler.MultiPointSampler._sample_from_masks_layer", "pos_segments.extend", "neg_segments.extend", "points_sampler.MultiPointSampler._positive_erode", "points_sampler.MultiPointSampler._positive_erode", "len", "random.random", "len", "random.choice", "numpy.maximum"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_from_masks_layer", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._positive_erode", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._positive_erode"], ["", "def", "_sample_mask", "(", "self", ",", "sample", ":", "DSample", ")", ":", "\n", "        ", "root_obj_ids", "=", "sample", ".", "root_objects", "\n", "\n", "if", "len", "(", "root_obj_ids", ")", ">", "1", "and", "random", ".", "random", "(", ")", "<", "self", ".", "merge_objects_prob", ":", "\n", "            ", "max_selected_objects", "=", "min", "(", "len", "(", "root_obj_ids", ")", ",", "self", ".", "max_num_merged_objects", ")", "\n", "num_selected_objects", "=", "np", ".", "random", ".", "randint", "(", "2", ",", "max_selected_objects", "+", "1", ")", "\n", "random_ids", "=", "random", ".", "sample", "(", "root_obj_ids", ",", "num_selected_objects", ")", "\n", "", "else", ":", "\n", "            ", "random_ids", "=", "[", "random", ".", "choice", "(", "root_obj_ids", ")", "]", "\n", "\n", "", "gt_mask", "=", "None", "\n", "pos_segments", "=", "[", "]", "\n", "neg_segments", "=", "[", "]", "\n", "for", "obj_id", "in", "random_ids", ":", "\n", "            ", "obj_gt_mask", ",", "obj_pos_segments", ",", "obj_neg_segments", "=", "self", ".", "_sample_from_masks_layer", "(", "obj_id", ",", "sample", ")", "\n", "if", "gt_mask", "is", "None", ":", "\n", "                ", "gt_mask", "=", "obj_gt_mask", "\n", "", "else", ":", "\n", "                ", "gt_mask", "=", "np", ".", "maximum", "(", "gt_mask", ",", "obj_gt_mask", ")", "\n", "\n", "", "pos_segments", ".", "extend", "(", "obj_pos_segments", ")", "\n", "neg_segments", ".", "extend", "(", "obj_neg_segments", ")", "\n", "\n", "", "pos_masks", "=", "[", "self", ".", "_positive_erode", "(", "x", ")", "for", "x", "in", "pos_segments", "]", "\n", "neg_masks", "=", "[", "self", ".", "_positive_erode", "(", "x", ")", "for", "x", "in", "neg_segments", "]", "\n", "\n", "return", "gt_mask", ",", "pos_masks", ",", "neg_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_from_masks_layer": [[121, 167], ["points_sampler.MultiPointSampler._sample_from_masks_layer._select_node"], "methods", ["None"], ["", "def", "_sample_from_masks_layer", "(", "self", ",", "obj_id", ",", "sample", ":", "DSample", ")", ":", "\n", "        ", "objs_tree", "=", "sample", ".", "_objects", "\n", "\n", "if", "not", "self", ".", "use_hierarchy", ":", "\n", "            ", "node_mask", "=", "sample", ".", "get_object_mask", "(", "obj_id", ")", "\n", "gt_mask", "=", "sample", ".", "get_soft_object_mask", "(", "obj_id", ")", "if", "self", ".", "soft_targets", "else", "node_mask", "\n", "return", "gt_mask", ",", "[", "node_mask", "]", ",", "[", "]", "\n", "\n", "", "def", "_select_node", "(", "node_id", ")", ":", "\n", "            ", "node_info", "=", "objs_tree", "[", "node_id", "]", "\n", "if", "not", "node_info", "[", "'children'", "]", "or", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "return", "node_id", "\n", "", "return", "_select_node", "(", "random", ".", "choice", "(", "node_info", "[", "'children'", "]", ")", ")", "\n", "\n", "", "selected_node", "=", "_select_node", "(", "obj_id", ")", "\n", "node_info", "=", "objs_tree", "[", "selected_node", "]", "\n", "node_mask", "=", "sample", ".", "get_object_mask", "(", "selected_node", ")", "\n", "gt_mask", "=", "sample", ".", "get_soft_object_mask", "(", "selected_node", ")", "if", "self", ".", "soft_targets", "else", "node_mask", "\n", "pos_mask", "=", "node_mask", ".", "copy", "(", ")", "\n", "\n", "negative_segments", "=", "[", "]", "\n", "if", "node_info", "[", "'parent'", "]", "is", "not", "None", "and", "node_info", "[", "'parent'", "]", "in", "objs_tree", ":", "\n", "            ", "parent_mask", "=", "sample", ".", "get_object_mask", "(", "node_info", "[", "'parent'", "]", ")", "\n", "negative_segments", ".", "append", "(", "np", ".", "logical_and", "(", "parent_mask", ",", "np", ".", "logical_not", "(", "node_mask", ")", ")", ")", "\n", "\n", "", "for", "child_id", "in", "node_info", "[", "'children'", "]", ":", "\n", "            ", "if", "objs_tree", "[", "child_id", "]", "[", "'area'", "]", "/", "node_info", "[", "'area'", "]", "<", "0.10", ":", "\n", "                ", "child_mask", "=", "sample", ".", "get_object_mask", "(", "child_id", ")", "\n", "pos_mask", "=", "np", ".", "logical_and", "(", "pos_mask", ",", "np", ".", "logical_not", "(", "child_mask", ")", ")", "\n", "\n", "", "", "if", "node_info", "[", "'children'", "]", ":", "\n", "            ", "max_disabled_children", "=", "min", "(", "len", "(", "node_info", "[", "'children'", "]", ")", ",", "3", ")", "\n", "num_disabled_children", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "max_disabled_children", "+", "1", ")", "\n", "disabled_children", "=", "random", ".", "sample", "(", "node_info", "[", "'children'", "]", ",", "num_disabled_children", ")", "\n", "\n", "for", "child_id", "in", "disabled_children", ":", "\n", "                ", "child_mask", "=", "sample", ".", "get_object_mask", "(", "child_id", ")", "\n", "pos_mask", "=", "np", ".", "logical_and", "(", "pos_mask", ",", "np", ".", "logical_not", "(", "child_mask", ")", ")", "\n", "if", "self", ".", "soft_targets", ":", "\n", "                    ", "soft_child_mask", "=", "sample", ".", "get_soft_object_mask", "(", "child_id", ")", "\n", "gt_mask", "=", "np", ".", "minimum", "(", "gt_mask", ",", "1.0", "-", "soft_child_mask", ")", "\n", "", "else", ":", "\n", "                    ", "gt_mask", "=", "np", ".", "logical_and", "(", "gt_mask", ",", "np", ".", "logical_not", "(", "child_mask", ")", ")", "\n", "", "negative_segments", ".", "append", "(", "child_mask", ")", "\n", "\n", "", "", "return", "gt_mask", ",", "[", "pos_mask", "]", ",", "negative_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler.sample_points": [[168, 181], ["points_sampler.MultiPointSampler._multi_mask_sample_points", "points_sampler.MultiPointSampler._multi_mask_sample_points", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._multi_mask_sample_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._multi_mask_sample_points"], ["", "def", "sample_points", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "_selected_mask", "is", "not", "None", "\n", "pos_points", "=", "self", ".", "_multi_mask_sample_points", "(", "self", ".", "_selected_masks", ",", "\n", "is_negative", "=", "[", "False", "]", "*", "len", "(", "self", ".", "_selected_masks", ")", ",", "\n", "with_first_click", "=", "self", ".", "first_click_center", ")", "\n", "\n", "neg_strategy", "=", "[", "(", "self", ".", "_neg_masks", "[", "k", "]", ",", "prob", ")", "\n", "for", "k", ",", "prob", "in", "zip", "(", "self", ".", "neg_strategies", ",", "self", ".", "neg_strategies_prob", ")", "]", "\n", "neg_masks", "=", "self", ".", "_neg_masks", "[", "'required'", "]", "+", "[", "neg_strategy", "]", "\n", "neg_points", "=", "self", ".", "_multi_mask_sample_points", "(", "neg_masks", ",", "\n", "is_negative", "=", "[", "False", "]", "*", "len", "(", "self", ".", "_neg_masks", "[", "'required'", "]", ")", "+", "[", "True", "]", ")", "\n", "\n", "return", "pos_points", "+", "neg_points", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._multi_mask_sample_points": [[182, 219], ["points_sampler.MultiPointSampler._sample_points", "len", "len", "points.extend", "enumerate", "len", "enumerate", "points_sampler.MultiPointSampler._sample_points", "len", "points.extend", "points.extend", "isinstance", "isinstance", "aggregated_masks_with_prob.append", "len", "len", "random.sample", "len", "aggregated_masks_with_prob.append", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_points", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_points"], ["", "def", "_multi_mask_sample_points", "(", "self", ",", "selected_masks", ",", "is_negative", ",", "with_first_click", "=", "False", ")", ":", "\n", "        ", "selected_masks", "=", "selected_masks", "[", ":", "self", ".", "max_num_points", "]", "\n", "\n", "each_obj_points", "=", "[", "\n", "self", ".", "_sample_points", "(", "mask", ",", "is_negative", "=", "is_negative", "[", "i", "]", ",", "\n", "with_first_click", "=", "with_first_click", ")", "\n", "for", "i", ",", "mask", "in", "enumerate", "(", "selected_masks", ")", "\n", "]", "\n", "each_obj_points", "=", "[", "x", "for", "x", "in", "each_obj_points", "if", "len", "(", "x", ")", ">", "0", "]", "\n", "\n", "points", "=", "[", "]", "\n", "if", "len", "(", "each_obj_points", ")", "==", "1", ":", "\n", "            ", "points", "=", "each_obj_points", "[", "0", "]", "\n", "", "elif", "len", "(", "each_obj_points", ")", ">", "1", ":", "\n", "            ", "if", "self", ".", "only_one_first_click", ":", "\n", "                ", "each_obj_points", "=", "each_obj_points", "[", ":", "1", "]", "\n", "\n", "", "points", "=", "[", "obj_points", "[", "0", "]", "for", "obj_points", "in", "each_obj_points", "]", "\n", "\n", "aggregated_masks_with_prob", "=", "[", "]", "\n", "for", "indx", ",", "x", "in", "enumerate", "(", "selected_masks", ")", ":", "\n", "                ", "if", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", "and", "x", "and", "isinstance", "(", "x", "[", "0", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                    ", "for", "t", ",", "prob", "in", "x", ":", "\n", "                        ", "aggregated_masks_with_prob", ".", "append", "(", "(", "t", ",", "prob", "/", "len", "(", "selected_masks", ")", ")", ")", "\n", "", "", "else", ":", "\n", "                    ", "aggregated_masks_with_prob", ".", "append", "(", "(", "x", ",", "1.0", "/", "len", "(", "selected_masks", ")", ")", ")", "\n", "\n", "", "", "other_points_union", "=", "self", ".", "_sample_points", "(", "aggregated_masks_with_prob", ",", "is_negative", "=", "True", ")", "\n", "if", "len", "(", "other_points_union", ")", "+", "len", "(", "points", ")", "<=", "self", ".", "max_num_points", ":", "\n", "                ", "points", ".", "extend", "(", "other_points_union", ")", "\n", "", "else", ":", "\n", "                ", "points", ".", "extend", "(", "random", ".", "sample", "(", "other_points_union", ",", "self", ".", "max_num_points", "-", "len", "(", "points", ")", ")", ")", "\n", "\n", "", "", "if", "len", "(", "points", ")", "<", "self", ".", "max_num_points", ":", "\n", "            ", "points", ".", "extend", "(", "[", "(", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", "*", "(", "self", ".", "max_num_points", "-", "len", "(", "points", ")", ")", ")", "\n", "\n", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._sample_points": [[220, 254], ["isinstance", "range", "numpy.random.choice", "numpy.argwhere", "len", "numpy.arange", "numpy.random.choice", "math.isclose", "points_sampler.get_point_candidates", "points.append", "numpy.arange", "numpy.argwhere", "sum", "numpy.random.choice", "point_indices[].tolist", "numpy.arange", "len", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.get_point_candidates"], ["", "def", "_sample_points", "(", "self", ",", "mask", ",", "is_negative", "=", "False", ",", "with_first_click", "=", "False", ")", ":", "\n", "        ", "if", "is_negative", ":", "\n", "            ", "num_points", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "max_num_points", "+", "1", ")", ",", "p", "=", "self", ".", "_neg_probs", ")", "\n", "", "else", ":", "\n", "            ", "num_points", "=", "1", "+", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "max_num_points", ")", ",", "p", "=", "self", ".", "_pos_probs", ")", "\n", "\n", "", "indices_probs", "=", "None", "\n", "if", "isinstance", "(", "mask", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "indices_probs", "=", "[", "x", "[", "1", "]", "for", "x", "in", "mask", "]", "\n", "indices", "=", "[", "(", "np", ".", "argwhere", "(", "x", ")", ",", "prob", ")", "for", "x", ",", "prob", "in", "mask", "]", "\n", "if", "indices_probs", ":", "\n", "                ", "assert", "math", ".", "isclose", "(", "sum", "(", "indices_probs", ")", ",", "1.0", ")", "\n", "", "", "else", ":", "\n", "            ", "indices", "=", "np", ".", "argwhere", "(", "mask", ")", "\n", "\n", "", "points", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_points", ")", ":", "\n", "            ", "first_click", "=", "with_first_click", "and", "j", "==", "0", "and", "indices_probs", "is", "None", "\n", "\n", "if", "first_click", ":", "\n", "                ", "point_indices", "=", "get_point_candidates", "(", "mask", ",", "k", "=", "self", ".", "sfc_inner_k", ",", "full_prob", "=", "self", ".", "sfc_full_inner_prob", ")", "\n", "", "elif", "indices_probs", ":", "\n", "                ", "point_indices_indx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "indices", ")", ")", ",", "p", "=", "indices_probs", ")", "\n", "point_indices", "=", "indices", "[", "point_indices_indx", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "point_indices", "=", "indices", "\n", "\n", "", "num_indices", "=", "len", "(", "point_indices", ")", "\n", "if", "num_indices", ">", "0", ":", "\n", "                ", "point_indx", "=", "0", "if", "first_click", "else", "100", "\n", "click", "=", "point_indices", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "num_indices", ")", "]", ".", "tolist", "(", ")", "+", "[", "point_indx", "]", "\n", "points", ".", "append", "(", "click", ")", "\n", "\n", "", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._positive_erode": [[255, 267], ["numpy.ones", "cv2.erode().astype", "random.random", "cv2.erode().astype.sum", "cv2.erode", "mask.astype"], "methods", ["None"], ["", "def", "_positive_erode", "(", "self", ",", "mask", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "self", ".", "positive_erode_prob", ":", "\n", "            ", "return", "mask", "\n", "\n", "", "kernel", "=", "np", ".", "ones", "(", "(", "3", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "eroded_mask", "=", "cv2", ".", "erode", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "\n", "kernel", ",", "iterations", "=", "self", ".", "positive_erode_iters", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "\n", "if", "eroded_mask", ".", "sum", "(", ")", ">", "10", ":", "\n", "            ", "return", "eroded_mask", "\n", "", "else", ":", "\n", "            ", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.MultiPointSampler._get_border_mask": [[268, 274], ["int", "numpy.ones", "cv2.dilate", "numpy.ceil", "mask.astype", "mask.astype", "numpy.sqrt", "mask.sum"], "methods", ["None"], ["", "", "def", "_get_border_mask", "(", "self", ",", "mask", ")", ":", "\n", "        ", "expand_r", "=", "int", "(", "np", ".", "ceil", "(", "self", ".", "expand_ratio", "*", "np", ".", "sqrt", "(", "mask", ".", "sum", "(", ")", ")", ")", ")", "\n", "kernel", "=", "np", ".", "ones", "(", "(", "3", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "expanded_mask", "=", "cv2", ".", "dilate", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "kernel", ",", "iterations", "=", "expand_r", ")", "\n", "expanded_mask", "[", "mask", ".", "astype", "(", "np", ".", "bool", ")", "]", "=", "0", "\n", "return", "expanded_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.generate_probs": [[276, 288], ["functools.lru_cache", "range", "numpy.array", "np.array.sum", "np.array.append"], "function", ["None"], ["", "", "@", "lru_cache", "(", "maxsize", "=", "None", ")", "\n", "def", "generate_probs", "(", "max_num_points", ",", "gamma", ")", ":", "\n", "    ", "probs", "=", "[", "]", "\n", "last_value", "=", "1", "\n", "for", "i", "in", "range", "(", "max_num_points", ")", ":", "\n", "        ", "probs", ".", "append", "(", "last_value", ")", "\n", "last_value", "*=", "gamma", "\n", "\n", "", "probs", "=", "np", ".", "array", "(", "probs", ")", "\n", "probs", "/=", "probs", ".", "sum", "(", ")", "\n", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.points_sampler.get_point_candidates": [[290, 306], ["numpy.pad", "cv2.distanceTransform", "numpy.argwhere", "dt.flatten", "max", "numpy.random.choice", "numpy.unravel_index", "numpy.array", "random.random", "np.pad.astype", "dt.flatten.sum", "len", "dt.max"], "function", ["None"], ["", "def", "get_point_candidates", "(", "obj_mask", ",", "k", "=", "1.7", ",", "full_prob", "=", "0.0", ")", ":", "\n", "    ", "if", "full_prob", ">", "0", "and", "random", ".", "random", "(", ")", "<", "full_prob", ":", "\n", "        ", "return", "obj_mask", "\n", "\n", "", "padded_mask", "=", "np", ".", "pad", "(", "obj_mask", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "'constant'", ")", "\n", "\n", "dt", "=", "cv2", ".", "distanceTransform", "(", "padded_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "DIST_L2", ",", "0", ")", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "if", "k", ">", "0", ":", "\n", "        ", "inner_mask", "=", "dt", ">", "dt", ".", "max", "(", ")", "/", "k", "\n", "return", "np", ".", "argwhere", "(", "inner_mask", ")", "\n", "", "else", ":", "\n", "        ", "prob_map", "=", "dt", ".", "flatten", "(", ")", "\n", "prob_map", "/=", "max", "(", "prob_map", ".", "sum", "(", ")", ",", "1e-6", ")", "\n", "click_indx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "prob_map", ")", ",", "p", "=", "prob_map", ")", "\n", "click_coords", "=", "np", ".", "unravel_index", "(", "click_indx", ",", "dt", ".", "shape", ")", "\n", "return", "np", ".", "array", "(", "[", "click_coords", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.__init__": [[9, 43], ["len", "dict", "enumerate", "copy.deepcopy", "copy.deepcopy", "isinstance", "isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "encoded_masks", ",", "objects", "=", "None", ",", "\n", "objects_ids", "=", "None", ",", "ignore_ids", "=", "None", ",", "sample_id", "=", "None", ")", ":", "\n", "        ", "self", ".", "image", "=", "image", "\n", "self", ".", "sample_id", "=", "sample_id", "\n", "\n", "if", "len", "(", "encoded_masks", ".", "shape", ")", "==", "2", ":", "\n", "            ", "encoded_masks", "=", "encoded_masks", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "", "self", ".", "_encoded_masks", "=", "encoded_masks", "\n", "self", ".", "_ignored_regions", "=", "[", "]", "\n", "\n", "if", "objects_ids", "is", "not", "None", ":", "\n", "            ", "if", "not", "objects_ids", "or", "not", "isinstance", "(", "objects_ids", "[", "0", "]", ",", "tuple", ")", ":", "\n", "                ", "assert", "encoded_masks", ".", "shape", "[", "2", "]", "==", "1", "\n", "objects_ids", "=", "[", "(", "0", ",", "obj_id", ")", "for", "obj_id", "in", "objects_ids", "]", "\n", "\n", "", "self", ".", "_objects", "=", "dict", "(", ")", "\n", "for", "indx", ",", "obj_mapping", "in", "enumerate", "(", "objects_ids", ")", ":", "\n", "                ", "self", ".", "_objects", "[", "indx", "]", "=", "{", "\n", "'parent'", ":", "None", ",", "\n", "'mapping'", ":", "obj_mapping", ",", "\n", "'children'", ":", "[", "]", "\n", "}", "\n", "\n", "", "if", "ignore_ids", ":", "\n", "                ", "if", "isinstance", "(", "ignore_ids", "[", "0", "]", ",", "tuple", ")", ":", "\n", "                    ", "self", ".", "_ignored_regions", "=", "ignore_ids", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_ignored_regions", "=", "[", "(", "0", ",", "region_id", ")", "for", "region_id", "in", "ignore_ids", "]", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "_objects", "=", "deepcopy", "(", "objects", ")", "\n", "\n", "", "self", ".", "_augmented", "=", "False", "\n", "self", ".", "_soft_mask_aug", "=", "None", "\n", "self", ".", "_original_data", "=", "self", ".", "image", ",", "self", ".", "_encoded_masks", ",", "deepcopy", "(", "self", ".", "_objects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.augment": [[44, 60], ["sample.DSample.reset_augmentation", "augmentator", "augmentator.get", "sample.DSample._compute_objects_areas", "sample.DSample.remove_small_objects", "isegm.data.transforms.remove_image_only_transforms", "albumentations.ReplayCompose._restore_for_replay", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.reset_augmentation", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample._compute_objects_areas", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.remove_small_objects", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.remove_image_only_transforms"], ["", "def", "augment", "(", "self", ",", "augmentator", ")", ":", "\n", "        ", "self", ".", "reset_augmentation", "(", ")", "\n", "aug_output", "=", "augmentator", "(", "image", "=", "self", ".", "image", ",", "mask", "=", "self", ".", "_encoded_masks", ")", "\n", "self", ".", "image", "=", "aug_output", "[", "'image'", "]", "\n", "self", ".", "_encoded_masks", "=", "aug_output", "[", "'mask'", "]", "\n", "\n", "aug_replay", "=", "aug_output", ".", "get", "(", "'replay'", ",", "None", ")", "\n", "if", "aug_replay", ":", "\n", "            ", "assert", "len", "(", "self", ".", "_ignored_regions", ")", "==", "0", "\n", "mask_replay", "=", "remove_image_only_transforms", "(", "aug_replay", ")", "\n", "self", ".", "_soft_mask_aug", "=", "ReplayCompose", ".", "_restore_for_replay", "(", "mask_replay", ")", "\n", "\n", "", "self", ".", "_compute_objects_areas", "(", ")", "\n", "self", ".", "remove_small_objects", "(", "min_area", "=", "1", ")", "\n", "\n", "self", ".", "_augmented", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.reset_augmentation": [[61, 70], ["copy.deepcopy"], "methods", ["None"], ["", "def", "reset_augmentation", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_augmented", ":", "\n", "            ", "return", "\n", "", "orig_image", ",", "orig_masks", ",", "orig_objects", "=", "self", ".", "_original_data", "\n", "self", ".", "image", "=", "orig_image", "\n", "self", ".", "_encoded_masks", "=", "orig_masks", "\n", "self", ".", "_objects", "=", "deepcopy", "(", "orig_objects", ")", "\n", "self", ".", "_augmented", "=", "False", "\n", "self", ".", "_soft_mask_aug", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.remove_small_objects": [[71, 78], ["list", "sample.DSample._compute_objects_areas", "sample.DSample._objects.items", "sample.DSample._remove_object", "list", "sample.DSample._objects.values"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample._compute_objects_areas", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample._remove_object"], ["", "def", "remove_small_objects", "(", "self", ",", "min_area", ")", ":", "\n", "        ", "if", "self", ".", "_objects", "and", "not", "'area'", "in", "list", "(", "self", ".", "_objects", ".", "values", "(", ")", ")", "[", "0", "]", ":", "\n", "            ", "self", ".", "_compute_objects_areas", "(", ")", "\n", "\n", "", "for", "obj_id", ",", "obj_info", "in", "list", "(", "self", ".", "_objects", ".", "items", "(", ")", ")", ":", "\n", "            ", "if", "obj_info", "[", "'area'", "]", "<", "min_area", ":", "\n", "                ", "self", ".", "_remove_object", "(", "obj_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_object_mask": [[79, 88], ["None"], "methods", ["None"], ["", "", "", "def", "get_object_mask", "(", "self", ",", "obj_id", ")", ":", "\n", "        ", "layer_indx", ",", "mask_id", "=", "self", ".", "_objects", "[", "obj_id", "]", "[", "'mapping'", "]", "\n", "obj_mask", "=", "(", "self", ".", "_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "if", "self", ".", "_ignored_regions", ":", "\n", "            ", "for", "layer_indx", ",", "mask_id", "in", "self", ".", "_ignored_regions", ":", "\n", "                ", "ignore_mask", "=", "self", ".", "_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", "\n", "obj_mask", "[", "ignore_mask", "]", "=", "-", "1", "\n", "\n", "", "", "return", "obj_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_soft_object_mask": [[89, 96], ["numpy.clip", "sample.DSample._soft_mask_aug"], "methods", ["None"], ["", "def", "get_soft_object_mask", "(", "self", ",", "obj_id", ")", ":", "\n", "        ", "assert", "self", ".", "_soft_mask_aug", "is", "not", "None", "\n", "original_encoded_masks", "=", "self", ".", "_original_data", "[", "1", "]", "\n", "layer_indx", ",", "mask_id", "=", "self", ".", "_objects", "[", "obj_id", "]", "[", "'mapping'", "]", "\n", "obj_mask", "=", "(", "original_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "obj_mask", "=", "self", ".", "_soft_mask_aug", "(", "image", "=", "obj_mask", ",", "mask", "=", "original_encoded_masks", ")", "[", "'image'", "]", "\n", "return", "np", ".", "clip", "(", "obj_mask", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_background_mask": [[97, 99], ["numpy.max"], "methods", ["None"], ["", "def", "get_background_mask", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "max", "(", "self", ".", "_encoded_masks", ",", "axis", "=", "2", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.objects_ids": [[100, 103], ["list", "sample.DSample._objects.keys"], "methods", ["None"], ["", "@", "property", "\n", "def", "objects_ids", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "_objects", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.gt_mask": [[104, 108], ["sample.DSample.get_object_mask", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.get_object_mask"], ["", "@", "property", "\n", "def", "gt_mask", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "_objects", ")", "==", "1", "\n", "return", "self", ".", "get_object_mask", "(", "self", ".", "objects_ids", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.root_objects": [[109, 112], ["sample.DSample._objects.items"], "methods", ["None"], ["", "@", "property", "\n", "def", "root_objects", "(", "self", ")", ":", "\n", "        ", "return", "[", "obj_id", "for", "obj_id", ",", "obj_info", "in", "self", ".", "_objects", ".", "items", "(", ")", "if", "obj_info", "[", "'parent'", "]", "is", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample._compute_objects_areas": [[113, 133], ["set", "range", "inverse_index.values", "isegm.utils.misc.get_labels_with_sizes", "zip", "sample.DSample._objects.items"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes"], ["", "def", "_compute_objects_areas", "(", "self", ")", ":", "\n", "        ", "inverse_index", "=", "{", "node", "[", "'mapping'", "]", ":", "node_id", "for", "node_id", ",", "node", "in", "self", ".", "_objects", ".", "items", "(", ")", "}", "\n", "ignored_regions_keys", "=", "set", "(", "self", ".", "_ignored_regions", ")", "\n", "\n", "for", "layer_indx", "in", "range", "(", "self", ".", "_encoded_masks", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "objects_ids", ",", "objects_areas", "=", "get_labels_with_sizes", "(", "self", ".", "_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", ")", "\n", "for", "obj_id", ",", "obj_area", "in", "zip", "(", "objects_ids", ",", "objects_areas", ")", ":", "\n", "                ", "inv_key", "=", "(", "layer_indx", ",", "obj_id", ")", "\n", "if", "inv_key", "in", "ignored_regions_keys", ":", "\n", "                    ", "continue", "\n", "", "try", ":", "\n", "                    ", "self", ".", "_objects", "[", "inverse_index", "[", "inv_key", "]", "]", "[", "'area'", "]", "=", "obj_area", "\n", "del", "inverse_index", "[", "inv_key", "]", "\n", "", "except", "KeyError", ":", "\n", "                    ", "layer", "=", "self", ".", "_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", "\n", "layer", "[", "layer", "==", "obj_id", "]", "=", "0", "\n", "self", ".", "_encoded_masks", "[", ":", ",", ":", ",", "layer_indx", "]", "=", "layer", "\n", "\n", "", "", "", "for", "obj_id", "in", "inverse_index", ".", "values", "(", ")", ":", "\n", "            ", "self", ".", "_objects", "[", "obj_id", "]", "[", "'area'", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample._remove_object": [[134, 146], ["None"], "methods", ["None"], ["", "", "def", "_remove_object", "(", "self", ",", "obj_id", ")", ":", "\n", "        ", "obj_info", "=", "self", ".", "_objects", "[", "obj_id", "]", "\n", "obj_parent", "=", "obj_info", "[", "'parent'", "]", "\n", "for", "child_id", "in", "obj_info", "[", "'children'", "]", ":", "\n", "            ", "self", ".", "_objects", "[", "child_id", "]", "[", "'parent'", "]", "=", "obj_parent", "\n", "\n", "", "if", "obj_parent", "is", "not", "None", ":", "\n", "            ", "parent_children", "=", "self", ".", "_objects", "[", "obj_parent", "]", "[", "'children'", "]", "\n", "parent_children", "=", "[", "x", "for", "x", "in", "parent_children", "if", "x", "!=", "obj_id", "]", "\n", "self", ".", "_objects", "[", "obj_parent", "]", "[", "'children'", "]", "=", "parent_children", "+", "obj_info", "[", "'children'", "]", "\n", "\n", "", "del", "self", ".", "_objects", "[", "obj_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.sample.DSample.__len__": [[147, 149], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_objects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.compose.ComposeDataset.__init__": [[7, 14], ["base.ISDataset.__init__", "enumerate", "compose.ComposeDataset.dataset_samples.extend", "range", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ComposeDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "_datasets", "=", "datasets", "\n", "self", ".", "dataset_samples", "=", "[", "]", "\n", "for", "dataset_indx", ",", "dataset", "in", "enumerate", "(", "self", ".", "_datasets", ")", ":", "\n", "            ", "self", ".", "dataset_samples", ".", "extend", "(", "[", "(", "dataset_indx", ",", "i", ")", "for", "i", "in", "range", "(", "len", "(", "dataset", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.compose.ComposeDataset.get_sample": [[15, 18], ["compose.ComposeDataset._datasets[].get_sample"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_sample"], ["", "", "def", "get_sample", "(", "self", ",", "index", ")", ":", "\n", "        ", "dataset_indx", ",", "sample_indx", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "return", "self", ".", "_datasets", "[", "dataset_indx", "]", ".", "get_sample", "(", "sample_indx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.compose.ProportionalComposeDataset.__init__": [[21, 34], ["base.ISDataset.__init__", "math.isclose", "enumerate", "len", "len", "sum", "compose.ProportionalComposeDataset.dataset_samples.extend", "range", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ",", "ratios", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "assert", "len", "(", "ratios", ")", "==", "len", "(", "datasets", ")", ",", "\"The number of datasets must match the number of ratios\"", "\n", "assert", "isclose", "(", "sum", "(", "ratios", ")", ",", "1.0", ")", ",", "\"The sum of ratios must be equal to 1\"", "\n", "\n", "self", ".", "_ratios", "=", "ratios", "\n", "self", ".", "_datasets", "=", "datasets", "\n", "self", ".", "dataset_samples", "=", "[", "]", "\n", "for", "dataset_indx", ",", "dataset", "in", "enumerate", "(", "self", ".", "_datasets", ")", ":", "\n", "            ", "self", ".", "dataset_samples", ".", "extend", "(", "[", "(", "dataset_indx", ",", "i", ")", "for", "i", "in", "range", "(", "len", "(", "dataset", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.compose.ProportionalComposeDataset.get_sample": [[35, 40], ["numpy.random.choice", "numpy.random.choice", "compose.ProportionalComposeDataset._datasets[].get_sample", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_sample"], ["", "", "def", "get_sample", "(", "self", ",", "index", ")", ":", "\n", "        ", "dataset_indx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "_datasets", ")", ",", "p", "=", "self", ".", "_ratios", ")", "\n", "sample_indx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "_datasets", "[", "dataset_indx", "]", ")", ")", "\n", "\n", "return", "self", ".", "_datasets", "[", "dataset_indx", "]", ".", "get_sample", "(", "sample_indx", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.__init__": [[11, 18], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "coco.CocoDataset.load_samples"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.load_samples"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "stuff_prob", "=", "0.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "CocoDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "stuff_prob", "=", "stuff_prob", "\n", "\n", "self", ".", "load_samples", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.load_samples": [[19, 34], ["set", "set", "open", "json.load"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["", "def", "load_samples", "(", "self", ")", ":", "\n", "        ", "annotation_path", "=", "self", ".", "dataset_path", "/", "'annotations'", "/", "f'panoptic_{self.split}.json'", "\n", "self", ".", "labels_path", "=", "self", ".", "dataset_path", "/", "'annotations'", "/", "f'panoptic_{self.split}'", "\n", "self", ".", "images_path", "=", "self", ".", "dataset_path", "/", "self", ".", "split", "\n", "\n", "with", "open", "(", "annotation_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "annotation", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "dataset_samples", "=", "annotation", "[", "'annotations'", "]", "\n", "\n", "self", ".", "_categories", "=", "annotation", "[", "'categories'", "]", "\n", "self", ".", "_stuff_labels", "=", "[", "x", "[", "'id'", "]", "for", "x", "in", "self", ".", "_categories", "if", "x", "[", "'isthing'", "]", "==", "0", "]", "\n", "self", ".", "_things_labels", "=", "[", "x", "[", "'id'", "]", "for", "x", "in", "self", ".", "_categories", "if", "x", "[", "'isthing'", "]", "==", "1", "]", "\n", "self", ".", "_things_labels_set", "=", "set", "(", "self", ".", "_things_labels", ")", "\n", "self", ".", "_stuff_labels_set", "=", "set", "(", "self", ".", "_stuff_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.get_sample": [[35, 71], ["cv2.imread", "cv2.cvtColor", "cv2.imread().astype", "numpy.full_like", "isegm.data.sample.DSample", "coco.CocoDataset.get_image_name", "str", "cv2.imread", "things_ids.append", "stuff_ids.append", "random.random", "str"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.get_image_name"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "dataset_sample", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "\n", "image_path", "=", "self", ".", "images_path", "/", "self", ".", "get_image_name", "(", "dataset_sample", "[", "'file_name'", "]", ")", "\n", "label_path", "=", "self", ".", "labels_path", "/", "dataset_sample", "[", "'file_name'", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "str", "(", "image_path", ")", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "label", "=", "cv2", ".", "imread", "(", "str", "(", "label_path", ")", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "label", "=", "256", "*", "256", "*", "label", "[", ":", ",", ":", ",", "0", "]", "+", "256", "*", "label", "[", ":", ",", ":", ",", "1", "]", "+", "label", "[", ":", ",", ":", ",", "2", "]", "\n", "\n", "instance_map", "=", "np", ".", "full_like", "(", "label", ",", "0", ")", "\n", "things_ids", "=", "[", "]", "\n", "stuff_ids", "=", "[", "]", "\n", "\n", "for", "segment", "in", "dataset_sample", "[", "'segments_info'", "]", ":", "\n", "            ", "class_id", "=", "segment", "[", "'category_id'", "]", "\n", "obj_id", "=", "segment", "[", "'id'", "]", "\n", "if", "class_id", "in", "self", ".", "_things_labels_set", ":", "\n", "                ", "if", "segment", "[", "'iscrowd'", "]", "==", "1", ":", "\n", "                    ", "continue", "\n", "", "things_ids", ".", "append", "(", "obj_id", ")", "\n", "", "else", ":", "\n", "                ", "stuff_ids", ".", "append", "(", "obj_id", ")", "\n", "\n", "", "instance_map", "[", "label", "==", "obj_id", "]", "=", "obj_id", "\n", "\n", "", "if", "self", ".", "stuff_prob", ">", "0", "and", "random", ".", "random", "(", ")", "<", "self", ".", "stuff_prob", ":", "\n", "            ", "instances_ids", "=", "things_ids", "+", "stuff_ids", "\n", "", "else", ":", "\n", "            ", "instances_ids", "=", "things_ids", "\n", "\n", "for", "stuff_id", "in", "stuff_ids", ":", "\n", "                ", "instance_map", "[", "instance_map", "==", "stuff_id", "]", "=", "0", "\n", "\n", "", "", "return", "DSample", "(", "image", ",", "instance_map", ",", "objects_ids", "=", "instances_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.get_image_name": [[72, 75], ["panoptic_name.replace"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "get_image_name", "(", "cls", ",", "panoptic_name", ")", ":", "\n", "        ", "return", "panoptic_name", ".", "replace", "(", "'.png'", ",", "'.jpg'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.grabcut.GrabCutDataset.__init__": [[11, 22], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "sorted", "grabcut.GrabCutDataset._insts_path.glob", "grabcut.GrabCutDataset._images_path.glob"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "\n", "images_dir_name", "=", "'data_GT'", ",", "masks_dir_name", "=", "'boundary_GT'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GrabCutDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "images_dir_name", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "masks_dir_name", "\n", "\n", "self", ".", "dataset_samples", "=", "[", "x", ".", "name", "for", "x", "in", "sorted", "(", "self", ".", "_images_path", ".", "glob", "(", "'*.*'", ")", ")", "]", "\n", "self", ".", "_masks_paths", "=", "{", "x", ".", "stem", ":", "x", "for", "x", "in", "self", ".", "_insts_path", ".", "glob", "(", "'*.*'", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.grabcut.GrabCutDataset.get_sample": [[23, 35], ["str", "str", "cv2.imread", "cv2.cvtColor", "[].astype", "isegm.data.sample.DSample", "cv2.imread", "image_name.split"], "methods", ["None"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_name", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "image_name", ")", "\n", "mask_path", "=", "str", "(", "self", ".", "_masks_paths", "[", "image_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "]", ")", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "instances_mask", "=", "cv2", ".", "imread", "(", "mask_path", ")", "[", ":", ",", ":", ",", "0", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances_mask", "[", "instances_mask", "==", "128", "]", "=", "-", "1", "\n", "instances_mask", "[", "instances_mask", ">", "128", "]", "=", "1", "\n", "\n", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "[", "1", "]", ",", "ignore_ids", "=", "[", "-", "1", "]", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.davis.DavisDataset.__init__": [[11, 22], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "sorted", "davis.DavisDataset._insts_path.glob", "davis.DavisDataset._images_path.glob"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "\n", "images_dir_name", "=", "'img'", ",", "masks_dir_name", "=", "'gt'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DavisDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "images_dir_name", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "masks_dir_name", "\n", "\n", "self", ".", "dataset_samples", "=", "[", "x", ".", "name", "for", "x", "in", "sorted", "(", "self", ".", "_images_path", ".", "glob", "(", "'*.*'", ")", ")", "]", "\n", "self", ".", "_masks_paths", "=", "{", "x", ".", "stem", ":", "x", "for", "x", "in", "self", ".", "_insts_path", ".", "glob", "(", "'*.*'", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.davis.DavisDataset.get_sample": [[23, 34], ["str", "str", "cv2.imread", "cv2.cvtColor", "numpy.max", "isegm.data.sample.DSample", "cv2.imread().astype", "cv2.imread", "image_name.split"], "methods", ["None"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_name", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "image_name", ")", "\n", "mask_path", "=", "str", "(", "self", ".", "_masks_paths", "[", "image_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "]", ")", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "instances_mask", "=", "np", ".", "max", "(", "cv2", ".", "imread", "(", "mask_path", ")", ".", "astype", "(", "np", ".", "int32", ")", ",", "axis", "=", "2", ")", "\n", "instances_mask", "[", "instances_mask", ">", "0", "]", "=", "1", "\n", "\n", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "[", "1", "]", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDDataset.__init__": [[14, 27], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "dict", "open", "x.strip", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "buggy_mask_thresh", "=", "0.08", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SBDDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "dataset_split", "=", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "'img'", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "'inst'", "\n", "self", ".", "_buggy_objects", "=", "dict", "(", ")", "\n", "self", ".", "_buggy_mask_thresh", "=", "buggy_mask_thresh", "\n", "\n", "with", "open", "(", "self", ".", "dataset_path", "/", "f'{split}.txt'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "dataset_samples", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDDataset.get_sample": [[28, 40], ["str", "str", "cv2.imread", "cv2.cvtColor", "[].astype", "sbd.SBDDataset.remove_buggy_masks", "isegm.utils.misc.get_labels_with_sizes", "isegm.data.sample.DSample", "scipy.io.loadmat", "str"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDDataset.remove_buggy_masks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes"], ["", "", "def", "get_sample", "(", "self", ",", "index", ")", ":", "\n", "        ", "image_name", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "f'{image_name}.jpg'", ")", "\n", "inst_info_path", "=", "str", "(", "self", ".", "_insts_path", "/", "f'{image_name}.mat'", ")", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "instances_mask", "=", "loadmat", "(", "str", "(", "inst_info_path", ")", ")", "[", "'GTinst'", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances_mask", "=", "self", ".", "remove_buggy_masks", "(", "index", ",", "instances_mask", ")", "\n", "instances_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "instances_ids", ",", "sample_id", "=", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDDataset.remove_buggy_masks": [[41, 61], ["sbd.SBDDataset._buggy_objects.get", "isegm.utils.misc.get_labels_with_sizes", "obj_mask.sum", "isegm.utils.misc.get_bbox_from_mask", "sbd.SBDDataset.append"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask"], ["", "def", "remove_buggy_masks", "(", "self", ",", "index", ",", "instances_mask", ")", ":", "\n", "        ", "if", "self", ".", "_buggy_mask_thresh", ">", "0.0", ":", "\n", "            ", "buggy_image_objects", "=", "self", ".", "_buggy_objects", ".", "get", "(", "index", ",", "None", ")", "\n", "if", "buggy_image_objects", "is", "None", ":", "\n", "                ", "buggy_image_objects", "=", "[", "]", "\n", "instances_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "for", "obj_id", "in", "instances_ids", ":", "\n", "                    ", "obj_mask", "=", "instances_mask", "==", "obj_id", "\n", "mask_area", "=", "obj_mask", ".", "sum", "(", ")", "\n", "bbox", "=", "get_bbox_from_mask", "(", "obj_mask", ")", "\n", "bbox_area", "=", "(", "bbox", "[", "1", "]", "-", "bbox", "[", "0", "]", "+", "1", ")", "*", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "2", "]", "+", "1", ")", "\n", "obj_area_ratio", "=", "mask_area", "/", "bbox_area", "\n", "if", "obj_area_ratio", "<", "self", ".", "_buggy_mask_thresh", ":", "\n", "                        ", "buggy_image_objects", ".", "append", "(", "obj_id", ")", "\n", "\n", "", "", "self", ".", "_buggy_objects", "[", "index", "]", "=", "buggy_image_objects", "\n", "", "for", "obj_id", "in", "buggy_image_objects", ":", "\n", "                ", "instances_mask", "[", "instances_mask", "==", "obj_id", "]", "=", "0", "\n", "\n", "", "", "return", "instances_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDEvaluationDataset.__init__": [[64, 77], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "sbd.SBDEvaluationDataset.get_sbd_images_and_ids_list", "open", "x.strip", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDEvaluationDataset.get_sbd_images_and_ids_list"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'val'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SBDEvaluationDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "dataset_split", "=", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "'img'", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "'inst'", "\n", "\n", "with", "open", "(", "self", ".", "dataset_path", "/", "f'{split}.txt'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "dataset_samples", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "self", ".", "dataset_samples", "=", "self", ".", "get_sbd_images_and_ids_list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDEvaluationDataset.get_sample": [[78, 90], ["str", "str", "cv2.imread", "cv2.cvtColor", "[].astype", "isegm.data.sample.DSample", "scipy.io.loadmat", "str"], "methods", ["None"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_name", ",", "instance_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "f'{image_name}.jpg'", ")", "\n", "inst_info_path", "=", "str", "(", "self", ".", "_insts_path", "/", "f'{image_name}.mat'", ")", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "instances_mask", "=", "loadmat", "(", "str", "(", "inst_info_path", ")", ")", "[", "'GTinst'", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances_mask", "[", "instances_mask", "!=", "instance_id", "]", "=", "0", "\n", "instances_mask", "[", "instances_mask", ">", "0", "]", "=", "1", "\n", "\n", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "[", "1", "]", ",", "sample_id", "=", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.sbd.SBDEvaluationDataset.get_sbd_images_and_ids_list": [[91, 112], ["pkl_path.exists", "open", "pickle.load", "str", "[].astype", "isegm.utils.misc.get_labels_with_sizes", "open", "pickle.dump", "str", "pickle.load.append", "str", "scipy.io.loadmat", "str"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes"], ["", "def", "get_sbd_images_and_ids_list", "(", "self", ")", ":", "\n", "        ", "pkl_path", "=", "self", ".", "dataset_path", "/", "f'{self.dataset_split}_images_and_ids_list.pkl'", "\n", "\n", "if", "pkl_path", ".", "exists", "(", ")", ":", "\n", "            ", "with", "open", "(", "str", "(", "pkl_path", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "                ", "images_and_ids_list", "=", "pkl", ".", "load", "(", "fp", ")", "\n", "", "", "else", ":", "\n", "            ", "images_and_ids_list", "=", "[", "]", "\n", "\n", "for", "sample", "in", "self", ".", "dataset_samples", ":", "\n", "                ", "inst_info_path", "=", "str", "(", "self", ".", "_insts_path", "/", "f'{sample}.mat'", ")", "\n", "instances_mask", "=", "loadmat", "(", "str", "(", "inst_info_path", ")", ")", "[", "'GTinst'", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "for", "instances_id", "in", "instances_ids", ":", "\n", "                    ", "images_and_ids_list", ".", "append", "(", "(", "sample", ",", "instances_id", ")", ")", "\n", "\n", "", "", "with", "open", "(", "str", "(", "pkl_path", ")", ",", "'wb'", ")", "as", "fp", ":", "\n", "                ", "pkl", ".", "dump", "(", "images_and_ids_list", ",", "fp", ")", "\n", "\n", "", "", "return", "images_and_ids_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.images_dir.ImagesDirDataset.__init__": [[10, 38], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "images_dir.ImagesDirDataset._insts_path.glob", "samples.values", "mask_name.split", "mask_name_split[].isdigit", "sorted", "[].append", "[].append", "len", "sorted", "images_dir.ImagesDirDataset._images_path.glob", "samples.items"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "\n", "images_dir_name", "=", "'images'", ",", "masks_dir_name", "=", "'masks'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ImagesDirDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "images_dir_name", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "masks_dir_name", "\n", "\n", "images_list", "=", "[", "x", "for", "x", "in", "sorted", "(", "self", ".", "_images_path", ".", "glob", "(", "'*.*'", ")", ")", "]", "\n", "\n", "samples", "=", "{", "x", ".", "stem", ":", "{", "'image'", ":", "x", ",", "'masks'", ":", "[", "]", "}", "for", "x", "in", "images_list", "}", "\n", "for", "mask_path", "in", "self", ".", "_insts_path", ".", "glob", "(", "'*.*'", ")", ":", "\n", "            ", "mask_name", "=", "mask_path", ".", "stem", "\n", "if", "mask_name", "in", "samples", ":", "\n", "                ", "samples", "[", "mask_name", "]", "[", "'masks'", "]", ".", "append", "(", "mask_path", ")", "\n", "continue", "\n", "\n", "", "mask_name_split", "=", "mask_name", ".", "split", "(", "'_'", ")", "\n", "if", "mask_name_split", "[", "-", "1", "]", ".", "isdigit", "(", ")", ":", "\n", "                ", "mask_name", "=", "'_'", ".", "join", "(", "mask_name_split", "[", ":", "-", "1", "]", ")", "\n", "assert", "mask_name", "in", "samples", "\n", "samples", "[", "mask_name", "]", "[", "'masks'", "]", ".", "append", "(", "mask_path", ")", "\n", "\n", "", "", "for", "x", "in", "samples", ".", "values", "(", ")", ":", "\n", "            ", "assert", "len", "(", "x", "[", "'masks'", "]", ")", ">", "0", ",", "x", "[", "'image'", "]", "\n", "\n", "", "self", ".", "dataset_samples", "=", "[", "v", "for", "k", ",", "v", "in", "sorted", "(", "samples", ".", "items", "(", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.images_dir.ImagesDirDataset.get_sample": [[39, 60], ["str", "enumerate", "cv2.imread", "cv2.cvtColor", "isegm.data.sample.DSample", "[].astype", "numpy.zeros_like", "masks.append", "objects.append", "ignored_regions.append", "numpy.stack", "cv2.imread", "str"], "methods", ["None"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "sample", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "sample", "[", "'image'", "]", ")", "\n", "\n", "objects", "=", "[", "]", "\n", "ignored_regions", "=", "[", "]", "\n", "masks", "=", "[", "]", "\n", "for", "indx", ",", "mask_path", "in", "enumerate", "(", "sample", "[", "'masks'", "]", ")", ":", "\n", "            ", "gt_mask", "=", "cv2", ".", "imread", "(", "str", "(", "mask_path", ")", ")", "[", ":", ",", ":", ",", "0", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances_mask", "=", "np", ".", "zeros_like", "(", "gt_mask", ")", "\n", "instances_mask", "[", "gt_mask", "==", "128", "]", "=", "2", "\n", "instances_mask", "[", "gt_mask", ">", "128", "]", "=", "1", "\n", "masks", ".", "append", "(", "instances_mask", ")", "\n", "objects", ".", "append", "(", "(", "indx", ",", "1", ")", ")", "\n", "ignored_regions", ".", "append", "(", "(", "indx", ",", "2", ")", ")", "\n", "\n", "", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "return", "DSample", "(", "image", ",", "np", ".", "stack", "(", "masks", ",", "axis", "=", "2", ")", ",", "\n", "objects_ids", "=", "objects", ",", "ignore_ids", "=", "ignored_regions", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.ade20k.ADE20kDataset.__init__": [[15, 32], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "os.path.exists", "list", "RuntimeError", "pickle.load.keys", "anno_path.open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "stuff_prob", "=", "0.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "dataset_split", "=", "split", "\n", "self", ".", "dataset_split_folder", "=", "'training'", "if", "split", "==", "'train'", "else", "'validation'", "\n", "self", ".", "stuff_prob", "=", "stuff_prob", "\n", "\n", "anno_path", "=", "self", ".", "dataset_path", "/", "f'{split}-annotations-object-segmentation.pkl'", "\n", "if", "os", ".", "path", ".", "exists", "(", "anno_path", ")", ":", "\n", "            ", "with", "anno_path", ".", "open", "(", "'rb'", ")", "as", "f", ":", "\n", "                ", "annotations", "=", "pkl", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Can't find annotations at {anno_path}\"", ")", "\n", "", "self", ".", "annotations", "=", "annotations", "\n", "self", ".", "dataset_samples", "=", "list", "(", "annotations", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.ade20k.ADE20kDataset.get_sample": [[33, 56], ["str", "cv2.imread", "cv2.cvtColor", "random.choice", "str", "instances_mask.astype.astype.astype", "isegm.utils.misc.get_labels_with_sizes", "isegm.data.sample.DSample", "cv2.imread", "enumerate", "isegm.utils.misc.get_labels_with_sizes", "random.random"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_labels_with_sizes"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "sample_annos", "=", "self", ".", "annotations", "[", "image_id", "]", "\n", "\n", "image_path", "=", "str", "(", "self", ".", "dataset_path", "/", "sample_annos", "[", "'folder'", "]", "/", "f'{image_id}.jpg'", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "# select random mask for an image", "\n", "layer", "=", "random", ".", "choice", "(", "sample_annos", "[", "'layers'", "]", ")", "\n", "mask_path", "=", "str", "(", "self", ".", "dataset_path", "/", "sample_annos", "[", "'folder'", "]", "/", "layer", "[", "'mask_name'", "]", ")", "\n", "instances_mask", "=", "cv2", ".", "imread", "(", "mask_path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "[", ":", ",", ":", ",", "0", "]", "# the B channel holds instances", "\n", "instances_mask", "=", "instances_mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "object_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "if", "(", "self", ".", "stuff_prob", "<=", "0", ")", "or", "(", "random", ".", "random", "(", ")", ">", "self", ".", "stuff_prob", ")", ":", "\n", "# remove stuff objects", "\n", "            ", "for", "i", ",", "object_id", "in", "enumerate", "(", "object_ids", ")", ":", "\n", "                ", "if", "i", "in", "layer", "[", "'stuff_instances'", "]", ":", "\n", "                    ", "instances_mask", "[", "instances_mask", "==", "object_id", "]", "=", "0", "\n", "", "", "object_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "object_ids", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco_lvis.CocoLvisDataset.__init__": [[13, 34], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "open", "sorted", "set", "pickle.load().items", "open", "json.load", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "stuff_prob", "=", "0.0", ",", "\n", "allow_list_name", "=", "None", ",", "anno_file", "=", "'hannotation.pickle'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "CocoLvisDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_split_path", "=", "dataset_path", "/", "split", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "_split_path", "/", "'images'", "\n", "self", ".", "_masks_path", "=", "self", ".", "_split_path", "/", "'masks'", "\n", "self", ".", "stuff_prob", "=", "stuff_prob", "\n", "\n", "with", "open", "(", "self", ".", "_split_path", "/", "anno_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "dataset_samples", "=", "sorted", "(", "pickle", ".", "load", "(", "f", ")", ".", "items", "(", ")", ")", "\n", "\n", "", "if", "allow_list_name", "is", "not", "None", ":", "\n", "            ", "allow_list_path", "=", "self", ".", "_split_path", "/", "allow_list_name", "\n", "with", "open", "(", "allow_list_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "allow_images_ids", "=", "json", ".", "load", "(", "f", ")", "\n", "", "allow_images_ids", "=", "set", "(", "allow_images_ids", ")", "\n", "\n", "self", ".", "dataset_samples", "=", "[", "sample", "for", "sample", "in", "self", ".", "dataset_samples", "\n", "if", "sample", "[", "0", "]", "in", "allow_images_ids", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco_lvis.CocoLvisDataset.get_sample": [[35, 68], ["cv2.imread", "cv2.cvtColor", "numpy.stack", "copy.deepcopy", "list", "isegm.data.sample.DSample", "str", "open", "pickle.load", "cv2.imdecode", "copy.deepcopy.items", "range", "range", "random.random", "len", "len"], "methods", ["None"], ["", "", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", ",", "sample", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "self", ".", "_images_path", "/", "f'{image_id}.jpg'", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "str", "(", "image_path", ")", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "packed_masks_path", "=", "self", ".", "_masks_path", "/", "f'{image_id}.pickle'", "\n", "with", "open", "(", "packed_masks_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "encoded_layers", ",", "objs_mapping", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "layers", "=", "[", "cv2", ".", "imdecode", "(", "x", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "for", "x", "in", "encoded_layers", "]", "\n", "layers", "=", "np", ".", "stack", "(", "layers", ",", "axis", "=", "2", ")", "\n", "\n", "instances_info", "=", "deepcopy", "(", "sample", "[", "'hierarchy'", "]", ")", "\n", "for", "inst_id", ",", "inst_info", "in", "list", "(", "instances_info", ".", "items", "(", ")", ")", ":", "\n", "            ", "if", "inst_info", "is", "None", ":", "\n", "                ", "inst_info", "=", "{", "'children'", ":", "[", "]", ",", "'parent'", ":", "None", ",", "'node_level'", ":", "0", "}", "\n", "instances_info", "[", "inst_id", "]", "=", "inst_info", "\n", "", "inst_info", "[", "'mapping'", "]", "=", "objs_mapping", "[", "inst_id", "]", "\n", "\n", "", "if", "self", ".", "stuff_prob", ">", "0", "and", "random", ".", "random", "(", ")", "<", "self", ".", "stuff_prob", ":", "\n", "            ", "for", "inst_id", "in", "range", "(", "sample", "[", "'num_instance_masks'", "]", ",", "len", "(", "objs_mapping", ")", ")", ":", "\n", "                ", "instances_info", "[", "inst_id", "]", "=", "{", "\n", "'mapping'", ":", "objs_mapping", "[", "inst_id", "]", ",", "\n", "'parent'", ":", "None", ",", "\n", "'children'", ":", "[", "]", "\n", "}", "\n", "", "", "else", ":", "\n", "            ", "for", "inst_id", "in", "range", "(", "sample", "[", "'num_instance_masks'", "]", ",", "len", "(", "objs_mapping", ")", ")", ":", "\n", "                ", "layer_indx", ",", "mask_id", "=", "objs_mapping", "[", "inst_id", "]", "\n", "layers", "[", ":", ",", ":", ",", "layer_indx", "]", "[", "layers", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", "]", "=", "0", "\n", "\n", "", "", "return", "DSample", "(", "image", ",", "layers", ",", "objects", "=", "instances_info", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.openimages.OpenImagesDataset.__init__": [[14, 32], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "os.path.exists", "RuntimeError", "clean_anno_path.open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", ",", "'test'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_split_path", "=", "self", ".", "dataset_path", "/", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "_split_path", "/", "'images'", "\n", "self", ".", "_masks_path", "=", "self", ".", "_split_path", "/", "'masks'", "\n", "self", ".", "dataset_split", "=", "split", "\n", "\n", "clean_anno_path", "=", "self", ".", "_split_path", "/", "f'{split}-annotations-object-segmentation_clean.pkl'", "\n", "if", "os", ".", "path", ".", "exists", "(", "clean_anno_path", ")", ":", "\n", "            ", "with", "clean_anno_path", ".", "open", "(", "'rb'", ")", "as", "f", ":", "\n", "                ", "annotations", "=", "pkl", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Can't find annotations at {clean_anno_path}\"", ")", "\n", "", "self", ".", "image_id_to_masks", "=", "annotations", "[", "'image_id_to_masks'", "]", "\n", "self", ".", "dataset_samples", "=", "annotations", "[", "'dataset_samples'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.openimages.OpenImagesDataset.get_sample": [[33, 59], ["str", "cv2.imread", "cv2.cvtColor", "str", "cv2.imread", "cv2.cvtColor", "cv2.resize.astype", "min", "min", "isegm.data.sample.DSample", "cv2.resize", "cv2.resize", "random.choice", "cv2.resize.sum"], "methods", ["None"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "f'{image_id}.jpg'", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "mask_paths", "=", "self", ".", "image_id_to_masks", "[", "image_id", "]", "\n", "# select random mask for an image", "\n", "mask_path", "=", "str", "(", "self", ".", "_masks_path", "/", "random", ".", "choice", "(", "mask_paths", ")", ")", "\n", "instances_mask", "=", "cv2", ".", "imread", "(", "mask_path", ")", "\n", "instances_mask", "=", "cv2", ".", "cvtColor", "(", "instances_mask", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "instances_mask", "[", "instances_mask", ">", "0", "]", "=", "1", "\n", "instances_mask", "=", "instances_mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "min_width", "=", "min", "(", "image", ".", "shape", "[", "1", "]", ",", "instances_mask", ".", "shape", "[", "1", "]", ")", "\n", "min_height", "=", "min", "(", "image", ".", "shape", "[", "0", "]", ",", "instances_mask", ".", "shape", "[", "0", "]", ")", "\n", "\n", "if", "image", ".", "shape", "[", "0", "]", "!=", "min_height", "or", "image", ".", "shape", "[", "1", "]", "!=", "min_width", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "min_width", ",", "min_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "if", "instances_mask", ".", "shape", "[", "0", "]", "!=", "min_height", "or", "instances_mask", ".", "shape", "[", "1", "]", "!=", "min_width", ":", "\n", "            ", "instances_mask", "=", "cv2", ".", "resize", "(", "instances_mask", ",", "(", "min_width", ",", "min_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "", "object_ids", "=", "[", "1", "]", "if", "instances_mask", ".", "sum", "(", ")", ">", "0", "else", "[", "]", "\n", "\n", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "object_ids", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.pascalvoc.PascalVocDataset.__init__": [[12, 27], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "open", "pickle.load", "open", "name.strip", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", ",", "'trainval'", ",", "'test'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_images_path", "=", "self", ".", "dataset_path", "/", "\"JPEGImages\"", "\n", "self", ".", "_insts_path", "=", "self", ".", "dataset_path", "/", "\"SegmentationObject\"", "\n", "self", ".", "dataset_split", "=", "split", "\n", "\n", "if", "split", "==", "'test'", ":", "\n", "            ", "with", "open", "(", "self", ".", "dataset_path", "/", "f'ImageSets/Segmentation/test.pickle'", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "self", ".", "dataset_samples", ",", "self", ".", "instance_ids", "=", "pkl", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "open", "(", "self", ".", "dataset_path", "/", "f'ImageSets/Segmentation/{split}.txt'", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "dataset_samples", "=", "[", "name", ".", "strip", "(", ")", "for", "name", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.pascalvoc.PascalVocDataset.get_sample": [[28, 49], ["str", "str", "cv2.imread", "cv2.cvtColor", "cv2.imread", "cv2.cvtColor().astype", "isegm.data.sample.DSample", "numpy.zeros_like", "numpy.unique", "cv2.cvtColor"], "methods", ["None"], ["", "", "", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "sample_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "str", "(", "self", ".", "_images_path", "/", "f'{sample_id}.jpg'", ")", "\n", "mask_path", "=", "str", "(", "self", ".", "_insts_path", "/", "f'{sample_id}.png'", ")", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "instances_mask", "=", "cv2", ".", "imread", "(", "mask_path", ")", "\n", "instances_mask", "=", "cv2", ".", "cvtColor", "(", "instances_mask", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "if", "self", ".", "dataset_split", "==", "'test'", ":", "\n", "            ", "instance_id", "=", "self", ".", "instance_ids", "[", "index", "]", "\n", "mask", "=", "np", ".", "zeros_like", "(", "instances_mask", ")", "\n", "mask", "[", "instances_mask", "==", "220", "]", "=", "220", "# ignored area", "\n", "mask", "[", "instances_mask", "==", "instance_id", "]", "=", "1", "\n", "objects_ids", "=", "[", "1", "]", "\n", "instances_mask", "=", "mask", "\n", "", "else", ":", "\n", "            ", "objects_ids", "=", "np", ".", "unique", "(", "instances_mask", ")", "\n", "objects_ids", "=", "[", "x", "for", "x", "in", "objects_ids", "if", "x", "!=", "0", "and", "x", "!=", "220", "]", "\n", "\n", "", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "objects_ids", ",", "ignore_ids", "=", "[", "220", "]", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.__init__": [[14, 37], ["isegm.data.base.ISDataset.__init__", "pathlib.Path", "collections.defaultdict", "open", "json.loads", "lvis.LvisDataset.annotations[].append", "train_categories_path.exists", "lvis.LvisDataset.generate_train_categories", "f.read", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.generate_train_categories"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "\n", "max_overlap_ratio", "=", "0.5", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "LvisDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "train_categories_path", "=", "dataset_path", "/", "'train_categories.json'", "\n", "self", ".", "_train_path", "=", "dataset_path", "/", "'train'", "\n", "self", ".", "_val_path", "=", "dataset_path", "/", "'val'", "\n", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "max_overlap_ratio", "=", "max_overlap_ratio", "\n", "\n", "with", "open", "(", "dataset_path", "/", "split", "/", "f'lvis_{self.split}.json'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "json_annotation", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "\n", "", "self", ".", "annotations", "=", "defaultdict", "(", "list", ")", "\n", "for", "x", "in", "json_annotation", "[", "'annotations'", "]", ":", "\n", "            ", "self", ".", "annotations", "[", "x", "[", "'image_id'", "]", "]", ".", "append", "(", "x", ")", "\n", "\n", "", "if", "not", "train_categories_path", ".", "exists", "(", ")", ":", "\n", "            ", "self", ".", "generate_train_categories", "(", "dataset_path", ",", "train_categories_path", ")", "\n", "", "self", ".", "dataset_samples", "=", "[", "x", "for", "x", "in", "json_annotation", "[", "'images'", "]", "\n", "if", "len", "(", "self", ".", "annotations", "[", "x", "[", "'id'", "]", "]", ")", ">", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_sample": [[38, 79], ["random.shuffle", "cv2.imread", "cv2.cvtColor", "collections.defaultdict", "enumerate", "isegm.data.sample.DSample", "image_url.split", "str", "lvis.LvisDataset.get_mask_from_polygon", "object_mask.sum", "numpy.bincount", "objects_ids.append", "numpy.zeros_like", "instances_mask[].flatten", "numpy.logical_and().sum", "max", "enumerate", "max", "numpy.logical_and"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_mask_from_polygon"], ["", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_info", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_id", ",", "image_url", "=", "image_info", "[", "'id'", "]", ",", "image_info", "[", "'coco_url'", "]", "\n", "image_filename", "=", "image_url", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "image_annotations", "=", "self", ".", "annotations", "[", "image_id", "]", "\n", "random", ".", "shuffle", "(", "image_annotations", ")", "\n", "\n", "# LVISv1 splits do not match older LVIS splits (some images in val may come from COCO train2017)", "\n", "if", "'train2017'", "in", "image_url", ":", "\n", "            ", "image_path", "=", "self", ".", "_train_path", "/", "'images'", "/", "image_filename", "\n", "", "else", ":", "\n", "            ", "image_path", "=", "self", ".", "_val_path", "/", "'images'", "/", "image_filename", "\n", "", "image", "=", "cv2", ".", "imread", "(", "str", "(", "image_path", ")", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "instances_mask", "=", "None", "\n", "instances_area", "=", "defaultdict", "(", "int", ")", "\n", "objects_ids", "=", "[", "]", "\n", "for", "indx", ",", "obj_annotation", "in", "enumerate", "(", "image_annotations", ")", ":", "\n", "            ", "mask", "=", "self", ".", "get_mask_from_polygon", "(", "obj_annotation", ",", "image", ")", "\n", "object_mask", "=", "mask", ">", "0", "\n", "object_area", "=", "object_mask", ".", "sum", "(", ")", "\n", "\n", "if", "instances_mask", "is", "None", ":", "\n", "                ", "instances_mask", "=", "np", ".", "zeros_like", "(", "object_mask", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "overlap_ids", "=", "np", ".", "bincount", "(", "instances_mask", "[", "object_mask", "]", ".", "flatten", "(", ")", ")", "\n", "overlap_areas", "=", "[", "overlap_area", "/", "instances_area", "[", "inst_id", "]", "for", "inst_id", ",", "overlap_area", "in", "enumerate", "(", "overlap_ids", ")", "\n", "if", "overlap_area", ">", "0", "and", "inst_id", ">", "0", "]", "\n", "overlap_ratio", "=", "np", ".", "logical_and", "(", "object_mask", ",", "instances_mask", ">", "0", ")", ".", "sum", "(", ")", "/", "object_area", "\n", "if", "overlap_areas", ":", "\n", "                ", "overlap_ratio", "=", "max", "(", "overlap_ratio", ",", "max", "(", "overlap_areas", ")", ")", "\n", "", "if", "overlap_ratio", ">", "self", ".", "max_overlap_ratio", ":", "\n", "                ", "continue", "\n", "\n", "", "instance_id", "=", "indx", "+", "1", "\n", "instances_mask", "[", "object_mask", "]", "=", "instance_id", "\n", "instances_area", "[", "instance_id", "]", "=", "object_area", "\n", "objects_ids", ".", "append", "(", "instance_id", ")", "\n", "\n", "", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "objects_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_mask_from_polygon": [[81, 90], ["numpy.zeros", "numpy.array().reshape", "cv2.fillPoly", "numpy.round().astype", "numpy.array", "numpy.round"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_mask_from_polygon", "(", "annotation", ",", "image", ")", ":", "\n", "        ", "mask", "=", "np", ".", "zeros", "(", "image", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "for", "contour_points", "in", "annotation", "[", "'segmentation'", "]", ":", "\n", "            ", "contour_points", "=", "np", ".", "array", "(", "contour_points", ")", ".", "reshape", "(", "(", "-", "1", ",", "2", ")", ")", "\n", "contour_points", "=", "np", ".", "round", "(", "contour_points", ")", ".", "astype", "(", "np", ".", "int32", ")", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "cv2", ".", "fillPoly", "(", "mask", ",", "contour_points", ",", "1", ")", "\n", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.generate_train_categories": [[91, 98], ["open", "json.load", "open", "json.dump"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate_train_categories", "(", "dataset_path", ",", "train_categories_path", ")", ":", "\n", "        ", "with", "open", "(", "dataset_path", "/", "'train/lvis_train.json'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "annotation", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "with", "open", "(", "train_categories_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "annotation", "[", "'categories'", "]", ",", "f", ",", "indent", "=", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__": [[5, 7], ["grabcut.GrabCutDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.berkeley.BerkeleyDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_path", ",", "images_dir_name", "=", "'images'", ",", "masks_dir_name", "=", "'masks'", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.parse_args": [[18, 91], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_mutually_exclusive_group", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_mutually_exclusive_group", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "argparse.ArgumentParser.add_mutually_exclusive_group", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "isegm.utils.exp.load_config_file", "pathlib.Path", "torch.device", "torch.device", "max", "pathlib.Path", "parser.parse_args.gpus.split"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'mode'", ",", "choices", "=", "[", "'NoBRS'", ",", "'RGB-BRS'", ",", "'DistMap-BRS'", ",", "\n", "'f-BRS-A'", ",", "'f-BRS-B'", ",", "'f-BRS-C'", "]", ",", "\n", "help", "=", "''", ")", "\n", "\n", "group_checkpoints", "=", "parser", ".", "add_mutually_exclusive_group", "(", "required", "=", "True", ")", "\n", "group_checkpoints", ".", "add_argument", "(", "'--checkpoint'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'The path to the checkpoint. '", "\n", "'This can be a relative path (relative to cfg.INTERACTIVE_MODELS_PATH) '", "\n", "'or an absolute path. The file extension can be omitted.'", ")", "\n", "group_checkpoints", ".", "add_argument", "(", "'--exp-path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'The relative path to the experiment with checkpoints.'", "\n", "'(relative to cfg.EXPS_PATH)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--datasets'", ",", "type", "=", "str", ",", "default", "=", "'GrabCut,Berkeley,DAVIS,SBD,PascalVOC'", ",", "\n", "help", "=", "'List of datasets on which the model should be tested. '", "\n", "'Datasets are separated by a comma. Possible choices: '", "\n", "'GrabCut, Berkeley, DAVIS, SBD, PascalVOC'", ")", "\n", "\n", "group_device", "=", "parser", ".", "add_mutually_exclusive_group", "(", ")", "\n", "group_device", ".", "add_argument", "(", "'--gpus'", ",", "type", "=", "str", ",", "default", "=", "'0'", ",", "\n", "help", "=", "'ID of used GPU.'", ")", "\n", "group_device", ".", "add_argument", "(", "'--cpu'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'Use only CPU for inference.'", ")", "\n", "\n", "group_iou_thresh", "=", "parser", ".", "add_mutually_exclusive_group", "(", ")", "\n", "group_iou_thresh", ".", "add_argument", "(", "'--target-iou'", ",", "type", "=", "float", ",", "default", "=", "0.90", ",", "\n", "help", "=", "'Target IoU threshold for the NoC metric. (min possible value = 0.8)'", ")", "\n", "group_iou_thresh", ".", "add_argument", "(", "'--iou-analysis'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'Plot mIoU(number of clicks) with target_iou=1.0.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--n-clicks'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "\n", "help", "=", "'Maximum number of clicks for the NoC metric.'", ")", "\n", "parser", ".", "add_argument", "(", "'--min-n-clicks'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Minimum number of clicks for the evaluation.'", ")", "\n", "parser", ".", "add_argument", "(", "'--thresh'", ",", "type", "=", "float", ",", "required", "=", "False", ",", "default", "=", "0.49", ",", "\n", "help", "=", "'The segmentation mask is obtained from the probability outputs using this threshold.'", ")", "\n", "parser", ".", "add_argument", "(", "'--clicks-limit'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--eval-mode'", ",", "type", "=", "str", ",", "default", "=", "'cvpr'", ",", "\n", "help", "=", "'Possible choices: cvpr, fixed<number> (e.g. fixed400, fixed600).'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--save-ious'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--print-ious'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--vis-preds'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--model-name'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "'The model name that is used for making plots.'", ")", "\n", "parser", ".", "add_argument", "(", "'--config-path'", ",", "type", "=", "str", ",", "default", "=", "'./config.yml'", ",", "\n", "help", "=", "'The path to the config file.'", ")", "\n", "parser", ".", "add_argument", "(", "'--logs-path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'The path to the evaluation logs. Default path: cfg.EXPS_PATH/evaluation_logs.'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "cpu", ":", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "f\"cuda:{args.gpus.split(',')[0]}\"", ")", "\n", "\n", "", "if", "(", "args", ".", "iou_analysis", "or", "args", ".", "print_ious", ")", "and", "args", ".", "min_n_clicks", "<=", "1", ":", "\n", "        ", "args", ".", "target_iou", "=", "1.01", "\n", "", "else", ":", "\n", "        ", "args", ".", "target_iou", "=", "max", "(", "0.8", ",", "args", ".", "target_iou", ")", "\n", "\n", "", "cfg", "=", "load_config_file", "(", "args", ".", "config_path", ",", "return_edict", "=", "True", ")", "\n", "cfg", ".", "EXPS_PATH", "=", "Path", "(", "cfg", ".", "EXPS_PATH", ")", "\n", "\n", "if", "args", ".", "logs_path", "==", "''", ":", "\n", "        ", "args", ".", "logs_path", "=", "cfg", ".", "EXPS_PATH", "/", "'evaluation_logs'", "\n", "", "else", ":", "\n", "        ", "args", ".", "logs_path", "=", "Path", "(", "args", ".", "logs_path", ")", "\n", "\n", "", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.main": [[93, 133], ["evaluate_model.parse_args", "evaluate_model.get_checkpoints_list_and_logs_path", "logs_path.mkdir", "args.datasets.split", "len", "isegm.inference.utils.get_dataset", "isegm.inference.utils.load_is_model", "evaluate_model.get_predictor_and_zoomin_params", "isegm.inference.predictors.get_predictor", "isegm.inference.evaluation.evaluate_dataset", "evaluate_model.save_results", "evaluate_model.get_prediction_vis_callback", "evaluate_model.save_iou_analysis_data"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_checkpoints_list_and_logs_path", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_dataset", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.load_is_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_predictor_and_zoomin_params", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.predictors.__init__.get_predictor", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.evaluation.evaluate_dataset", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.save_results", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_prediction_vis_callback", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.save_iou_analysis_data"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "parse_args", "(", ")", "\n", "\n", "checkpoints_list", ",", "logs_path", ",", "logs_prefix", "=", "get_checkpoints_list_and_logs_path", "(", "args", ",", "cfg", ")", "\n", "logs_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "single_model_eval", "=", "len", "(", "checkpoints_list", ")", "==", "1", "\n", "assert", "not", "args", ".", "iou_analysis", "if", "not", "single_model_eval", "else", "True", ",", "\"Can't perform IoU analysis for multiple checkpoints\"", "\n", "print_header", "=", "single_model_eval", "\n", "for", "dataset_name", "in", "args", ".", "datasets", ".", "split", "(", "','", ")", ":", "\n", "        ", "dataset", "=", "utils", ".", "get_dataset", "(", "dataset_name", ",", "cfg", ")", "\n", "\n", "for", "checkpoint_path", "in", "checkpoints_list", ":", "\n", "            ", "model", "=", "utils", ".", "load_is_model", "(", "checkpoint_path", ",", "args", ".", "device", ")", "\n", "\n", "predictor_params", ",", "zoomin_params", "=", "get_predictor_and_zoomin_params", "(", "args", ",", "dataset_name", ")", "\n", "predictor", "=", "get_predictor", "(", "model", ",", "args", ".", "mode", ",", "args", ".", "device", ",", "\n", "prob_thresh", "=", "args", ".", "thresh", ",", "\n", "predictor_params", "=", "predictor_params", ",", "\n", "zoom_in_params", "=", "zoomin_params", ")", "\n", "\n", "vis_callback", "=", "get_prediction_vis_callback", "(", "logs_path", ",", "dataset_name", ",", "args", ".", "thresh", ")", "if", "args", ".", "vis_preds", "else", "None", "\n", "dataset_results", "=", "evaluate_dataset", "(", "dataset", ",", "predictor", ",", "pred_thr", "=", "args", ".", "thresh", ",", "\n", "max_iou_thr", "=", "args", ".", "target_iou", ",", "\n", "min_clicks", "=", "args", ".", "min_n_clicks", ",", "\n", "max_clicks", "=", "args", ".", "n_clicks", ",", "\n", "callback", "=", "vis_callback", ")", "\n", "\n", "row_name", "=", "args", ".", "mode", "if", "single_model_eval", "else", "checkpoint_path", ".", "stem", "\n", "if", "args", ".", "iou_analysis", ":", "\n", "                ", "save_iou_analysis_data", "(", "args", ",", "dataset_name", ",", "logs_path", ",", "\n", "logs_prefix", ",", "dataset_results", ",", "\n", "model_name", "=", "args", ".", "model_name", ")", "\n", "\n", "", "save_results", "(", "args", ",", "row_name", ",", "dataset_name", ",", "logs_path", ",", "logs_prefix", ",", "dataset_results", ",", "\n", "save_ious", "=", "single_model_eval", "and", "args", ".", "save_ious", ",", "\n", "single_model_eval", "=", "single_model_eval", ",", "\n", "print_header", "=", "print_header", ")", "\n", "print_header", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_predictor_and_zoomin_params": [[135, 157], ["args.eval_mode.startswith", "int"], "function", ["None"], ["", "", "", "def", "get_predictor_and_zoomin_params", "(", "args", ",", "dataset_name", ")", ":", "\n", "    ", "predictor_params", "=", "{", "}", "\n", "\n", "if", "args", ".", "clicks_limit", "is", "not", "None", ":", "\n", "        ", "if", "args", ".", "clicks_limit", "==", "-", "1", ":", "\n", "            ", "args", ".", "clicks_limit", "=", "args", ".", "n_clicks", "\n", "", "predictor_params", "[", "'net_clicks_limit'", "]", "=", "args", ".", "clicks_limit", "\n", "\n", "", "if", "args", ".", "eval_mode", "==", "'cvpr'", ":", "\n", "        ", "zoom_in_params", "=", "{", "\n", "'target_size'", ":", "600", "if", "dataset_name", "==", "'DAVIS'", "else", "400", "\n", "}", "\n", "", "elif", "args", ".", "eval_mode", ".", "startswith", "(", "'fixed'", ")", ":", "\n", "        ", "crop_size", "=", "int", "(", "args", ".", "eval_mode", "[", "5", ":", "]", ")", "\n", "zoom_in_params", "=", "{", "\n", "'skip_clicks'", ":", "-", "1", ",", "\n", "'target_size'", ":", "(", "crop_size", ",", "crop_size", ")", "\n", "}", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "predictor_params", ",", "zoom_in_params", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_checkpoints_list_and_logs_path": [[159, 188], ["list", "sorted", "rel_exp_path.split", "exp_path_prefix.parent.glob", "len", "len", "exp_path.relative_to", "pathlib.Path", "len", "isegm.inference.utils.find_checkpoint"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.find_checkpoint"], ["", "def", "get_checkpoints_list_and_logs_path", "(", "args", ",", "cfg", ")", ":", "\n", "    ", "logs_prefix", "=", "''", "\n", "if", "args", ".", "exp_path", ":", "\n", "        ", "rel_exp_path", "=", "args", ".", "exp_path", "\n", "checkpoint_prefix", "=", "''", "\n", "if", "':'", "in", "rel_exp_path", ":", "\n", "            ", "rel_exp_path", ",", "checkpoint_prefix", "=", "rel_exp_path", ".", "split", "(", "':'", ")", "\n", "\n", "", "exp_path_prefix", "=", "cfg", ".", "EXPS_PATH", "/", "rel_exp_path", "\n", "candidates", "=", "list", "(", "exp_path_prefix", ".", "parent", ".", "glob", "(", "exp_path_prefix", ".", "stem", "+", "'*'", ")", ")", "\n", "assert", "len", "(", "candidates", ")", "==", "1", ",", "\"Invalid experiment path.\"", "\n", "exp_path", "=", "candidates", "[", "0", "]", "\n", "checkpoints_list", "=", "sorted", "(", "(", "exp_path", "/", "'checkpoints'", ")", ".", "glob", "(", "checkpoint_prefix", "+", "'*.pth'", ")", ",", "reverse", "=", "True", ")", "\n", "assert", "len", "(", "checkpoints_list", ")", ">", "0", ",", "\"Couldn't find any checkpoints.\"", "\n", "\n", "if", "checkpoint_prefix", ":", "\n", "            ", "if", "len", "(", "checkpoints_list", ")", "==", "1", ":", "\n", "                ", "logs_prefix", "=", "checkpoints_list", "[", "0", "]", ".", "stem", "\n", "", "else", ":", "\n", "                ", "logs_prefix", "=", "f'all_{checkpoint_prefix}'", "\n", "", "", "else", ":", "\n", "            ", "logs_prefix", "=", "'all_checkpoints'", "\n", "\n", "", "logs_path", "=", "args", ".", "logs_path", "/", "exp_path", ".", "relative_to", "(", "cfg", ".", "EXPS_PATH", ")", "\n", "", "else", ":", "\n", "        ", "checkpoints_list", "=", "[", "Path", "(", "utils", ".", "find_checkpoint", "(", "cfg", ".", "INTERACTIVE_MODELS_PATH", ",", "args", ".", "checkpoint", ")", ")", "]", "\n", "logs_path", "=", "args", ".", "logs_path", "/", "'others'", "/", "checkpoints_list", "[", "0", "]", ".", "stem", "\n", "\n", "", "return", "checkpoints_list", ",", "logs_path", ",", "logs_prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.save_results": [[190, 243], ["isegm.inference.utils.get_time_metrics", "numpy.arange().tolist", "isegm.inference.utils.compute_noc_metric", "isegm.inference.utils.get_results_table", "print", "log_path.exists", "min", "numpy.array().mean", "int", "print", "ious_path.mkdir", "numpy.arange", "isegm.inference.utils.compute_noc_metric", "open", "pickle.dump", "open", "f.write", "open", "f.write", "str", "len", "numpy.array", "f.write", "min", "logs_path.relative_to"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_time_metrics", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.compute_noc_metric", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.get_results_table", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.inference.utils.compute_noc_metric", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.write", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.write", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.log.TqdmToLogger.write"], ["", "def", "save_results", "(", "args", ",", "row_name", ",", "dataset_name", ",", "logs_path", ",", "logs_prefix", ",", "dataset_results", ",", "\n", "save_ious", "=", "False", ",", "print_header", "=", "True", ",", "single_model_eval", "=", "False", ")", ":", "\n", "    ", "all_ious", ",", "elapsed_time", "=", "dataset_results", "\n", "mean_spc", ",", "mean_spi", "=", "utils", ".", "get_time_metrics", "(", "all_ious", ",", "elapsed_time", ")", "\n", "\n", "iou_thrs", "=", "np", ".", "arange", "(", "0.8", ",", "min", "(", "0.95", ",", "args", ".", "target_iou", ")", "+", "0.001", ",", "0.05", ")", ".", "tolist", "(", ")", "\n", "noc_list", ",", "over_max_list", "=", "utils", ".", "compute_noc_metric", "(", "all_ious", ",", "iou_thrs", "=", "iou_thrs", ",", "max_clicks", "=", "args", ".", "n_clicks", ")", "\n", "\n", "row_name", "=", "'last'", "if", "row_name", "==", "'last_checkpoint'", "else", "row_name", "\n", "model_name", "=", "str", "(", "logs_path", ".", "relative_to", "(", "args", ".", "logs_path", ")", ")", "+", "':'", "+", "logs_prefix", "if", "logs_prefix", "else", "logs_path", ".", "stem", "\n", "header", ",", "table_row", "=", "utils", ".", "get_results_table", "(", "noc_list", ",", "over_max_list", ",", "row_name", ",", "dataset_name", ",", "\n", "mean_spc", ",", "elapsed_time", ",", "args", ".", "n_clicks", ",", "\n", "model_name", "=", "model_name", ")", "\n", "\n", "if", "args", ".", "print_ious", ":", "\n", "        ", "min_num_clicks", "=", "min", "(", "len", "(", "x", ")", "for", "x", "in", "all_ious", ")", "\n", "mean_ious", "=", "np", ".", "array", "(", "[", "x", "[", ":", "min_num_clicks", "]", "for", "x", "in", "all_ious", "]", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "miou_str", "=", "' '", ".", "join", "(", "[", "f'mIoU@{click_id}={mean_ious[click_id - 1]:.2%};'", "\n", "for", "click_id", "in", "[", "1", ",", "2", ",", "3", ",", "5", ",", "10", ",", "20", "]", "if", "click_id", "<=", "min_num_clicks", "]", ")", "\n", "table_row", "+=", "'; '", "+", "miou_str", "\n", "", "else", ":", "\n", "        ", "target_iou_int", "=", "int", "(", "args", ".", "target_iou", "*", "100", ")", "\n", "if", "target_iou_int", "not", "in", "[", "80", ",", "85", ",", "90", "]", ":", "\n", "            ", "noc_list", ",", "over_max_list", "=", "utils", ".", "compute_noc_metric", "(", "all_ious", ",", "iou_thrs", "=", "[", "args", ".", "target_iou", "]", ",", "\n", "max_clicks", "=", "args", ".", "n_clicks", ")", "\n", "table_row", "+=", "f' NoC@{args.target_iou:.1%} = {noc_list[0]:.2f};'", "\n", "table_row", "+=", "f' >={args.n_clicks}@{args.target_iou:.1%} = {over_max_list[0]}'", "\n", "\n", "", "", "if", "print_header", ":", "\n", "        ", "print", "(", "header", ")", "\n", "", "print", "(", "table_row", ")", "\n", "\n", "if", "save_ious", ":", "\n", "        ", "ious_path", "=", "logs_path", "/", "'ious'", "/", "(", "logs_prefix", "if", "logs_prefix", "else", "''", ")", "\n", "ious_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "ious_path", "/", "f'{dataset_name}_{args.eval_mode}_{args.mode}_{args.n_clicks}.pkl'", ",", "'wb'", ")", "as", "fp", ":", "\n", "            ", "pickle", ".", "dump", "(", "all_ious", ",", "fp", ")", "\n", "\n", "", "", "name_prefix", "=", "''", "\n", "if", "logs_prefix", ":", "\n", "        ", "name_prefix", "=", "logs_prefix", "+", "'_'", "\n", "if", "not", "single_model_eval", ":", "\n", "            ", "name_prefix", "+=", "f'{dataset_name}_'", "\n", "\n", "", "", "log_path", "=", "logs_path", "/", "f'{name_prefix}{args.eval_mode}_{args.mode}_{args.n_clicks}.txt'", "\n", "if", "log_path", ".", "exists", "(", ")", ":", "\n", "        ", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "table_row", "+", "'\\n'", ")", "\n", "", "", "else", ":", "\n", "        ", "with", "open", "(", "log_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "if", "print_header", ":", "\n", "                ", "f", ".", "write", "(", "header", "+", "'\\n'", ")", "\n", "", "f", ".", "write", "(", "table_row", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.save_iou_analysis_data": [[245, 263], ["pkl_path.parent.mkdir", "pkl_path.open", "pickle.dump", "str", "logs_path.relative_to"], "function", ["None"], ["", "", "", "def", "save_iou_analysis_data", "(", "args", ",", "dataset_name", ",", "logs_path", ",", "logs_prefix", ",", "dataset_results", ",", "model_name", "=", "None", ")", ":", "\n", "    ", "all_ious", ",", "_", "=", "dataset_results", "\n", "\n", "name_prefix", "=", "''", "\n", "if", "logs_prefix", ":", "\n", "        ", "name_prefix", "=", "logs_prefix", "+", "'_'", "\n", "", "name_prefix", "+=", "dataset_name", "+", "'_'", "\n", "if", "model_name", "is", "None", ":", "\n", "        ", "model_name", "=", "str", "(", "logs_path", ".", "relative_to", "(", "args", ".", "logs_path", ")", ")", "+", "':'", "+", "logs_prefix", "if", "logs_prefix", "else", "logs_path", ".", "stem", "\n", "\n", "", "pkl_path", "=", "logs_path", "/", "f'plots/{name_prefix}{args.eval_mode}_{args.mode}_{args.n_clicks}.pickle'", "\n", "pkl_path", ".", "parent", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "with", "pkl_path", ".", "open", "(", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "{", "\n", "'dataset_name'", ":", "dataset_name", ",", "\n", "'model_name'", ":", "f'{model_name}_{args.mode}'", ",", "\n", "'all_ious'", ":", "all_ious", "\n", "}", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.evaluate_model.get_prediction_vis_callback": [[265, 276], ["save_path.mkdir", "isegm.utils.vis.draw_probmap", "isegm.utils.vis.draw_with_blend_and_clicks", "cv2.imwrite", "str", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_probmap", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.vis.draw_with_blend_and_clicks"], ["", "", "def", "get_prediction_vis_callback", "(", "logs_path", ",", "dataset_name", ",", "prob_thresh", ")", ":", "\n", "    ", "save_path", "=", "logs_path", "/", "'predictions_vis'", "/", "dataset_name", "\n", "save_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "def", "callback", "(", "image", ",", "gt_mask", ",", "pred_probs", ",", "sample_id", ",", "click_indx", ",", "clicks_list", ")", ":", "\n", "        ", "sample_path", "=", "save_path", "/", "f'{sample_id}_{click_indx}.jpg'", "\n", "prob_map", "=", "draw_probmap", "(", "pred_probs", ")", "\n", "image_with_mask", "=", "draw_with_blend_and_clicks", "(", "image", ",", "pred_probs", ">", "prob_thresh", ",", "clicks_list", "=", "clicks_list", ")", "\n", "cv2", ".", "imwrite", "(", "str", "(", "sample_path", ")", ",", "np", ".", "concatenate", "(", "(", "image_with_mask", ",", "prob_map", ")", ",", "axis", "=", "1", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "\n", "", "return", "callback", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.parse_args": [[16, 61], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_mutually_exclusive_group", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "isegm.utils.exp.load_config_file", "pathlib.Path", "parser.parse_args.datasets.split", "print", "parser.parse_args.plots_path.mkdir", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "group_pkl_path", "=", "parser", ".", "add_mutually_exclusive_group", "(", "required", "=", "True", ")", "\n", "group_pkl_path", ".", "add_argument", "(", "'--folder'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "'Path to folder with .pickle files.'", ")", "\n", "group_pkl_path", ".", "add_argument", "(", "'--files'", ",", "nargs", "=", "'+'", ",", "default", "=", "None", ",", "\n", "help", "=", "'List of paths to .pickle files separated by space.'", ")", "\n", "group_pkl_path", ".", "add_argument", "(", "'--model-dirs'", ",", "nargs", "=", "'+'", ",", "default", "=", "None", ",", "\n", "help", "=", "\"List of paths to model directories with 'plots' folder \"", "\n", "\"containing .pickle files separated by space.\"", ")", "\n", "group_pkl_path", ".", "add_argument", "(", "'--exp-models'", ",", "nargs", "=", "'+'", ",", "default", "=", "None", ",", "\n", "help", "=", "'List of experiments paths suffixes (relative to cfg.EXPS_PATH/evaluation_logs). '", "\n", "'For each experiment, the checkpoint prefix must be specified '", "\n", "'by using the \":\" delimiter at the end.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--mode'", ",", "choices", "=", "[", "'NoBRS'", ",", "'RGB-BRS'", ",", "'DistMap-BRS'", ",", "\n", "'f-BRS-A'", ",", "'f-BRS-B'", ",", "'f-BRS-C'", "]", ",", "\n", "default", "=", "None", ",", "nargs", "=", "'*'", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--datasets'", ",", "type", "=", "str", ",", "default", "=", "'GrabCut,Berkeley,DAVIS,COCO_MVal,SBD'", ",", "\n", "help", "=", "'List of datasets for plotting the iou analysis'", "\n", "'Datasets are separated by a comma. Possible choices: '", "\n", "'GrabCut, Berkeley, DAVIS, COCO_MVal, SBD'", ")", "\n", "parser", ".", "add_argument", "(", "'--config-path'", ",", "type", "=", "str", ",", "default", "=", "'./config.yml'", ",", "\n", "help", "=", "'The path to the config file.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n-clicks'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "\n", "help", "=", "'Maximum number of clicks to plot.'", ")", "\n", "parser", ".", "add_argument", "(", "'--plots-path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "'The path to the evaluation logs. '", "\n", "'Default path: cfg.EXPS_PATH/evaluation_logs/iou_analysis.'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "cfg", "=", "load_config_file", "(", "args", ".", "config_path", ",", "return_edict", "=", "True", ")", "\n", "cfg", ".", "EXPS_PATH", "=", "Path", "(", "cfg", ".", "EXPS_PATH", ")", "\n", "\n", "args", ".", "datasets", "=", "args", ".", "datasets", ".", "split", "(", "','", ")", "\n", "if", "args", ".", "plots_path", "==", "''", ":", "\n", "        ", "args", ".", "plots_path", "=", "cfg", ".", "EXPS_PATH", "/", "'evaluation_logs/iou_analysis'", "\n", "", "else", ":", "\n", "        ", "args", ".", "plots_path", "=", "Path", "(", "args", ".", "plots_path", ")", "\n", "", "print", "(", "args", ".", "plots_path", ")", "\n", "args", ".", "plots_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.main": [[63, 101], ["plot_ious_analysis.parse_args", "plot_ious_analysis.get_files_list", "collections.defaultdict", "collections.defaultdict.items", "numpy.array().mean", "matplotlib.figure", "dataset_results.items", "matplotlib.title", "matplotlib.grid", "matplotlib.legend", "matplotlib.yticks", "matplotlib.xticks", "plot_ious_analysis.get_target_file_path", "matplotlib.savefig", "open", "pickle.load", "len", "max", "print", "matplotlib.plot", "str", "numpy.array", "numpy.arange", "numpy.arange", "len"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.get_files_list", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.CanvasImage.grid", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.get_target_file_path"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "parse_args", "(", ")", "\n", "\n", "files_list", "=", "get_files_list", "(", "args", ",", "cfg", ")", "\n", "\n", "# Dict of dicts with mapping dataset_name -> model_name -> results", "\n", "aggregated_plot_data", "=", "defaultdict", "(", "dict", ")", "\n", "for", "file", "in", "files_list", ":", "\n", "        ", "with", "open", "(", "file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "data", "[", "'all_ious'", "]", "=", "[", "x", "[", ":", "args", ".", "n_clicks", "]", "for", "x", "in", "data", "[", "'all_ious'", "]", "]", "\n", "aggregated_plot_data", "[", "data", "[", "'dataset_name'", "]", "]", "[", "data", "[", "'model_name'", "]", "]", "=", "np", ".", "array", "(", "data", "[", "'all_ious'", "]", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "for", "dataset_name", ",", "dataset_results", "in", "aggregated_plot_data", ".", "items", "(", ")", ":", "\n", "        ", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "7", ")", ")", "\n", "\n", "max_clicks", "=", "0", "\n", "for", "model_name", ",", "model_results", "in", "dataset_results", ".", "items", "(", ")", ":", "\n", "            ", "if", "args", ".", "n_clicks", "!=", "-", "1", ":", "\n", "                ", "model_results", "=", "model_results", "[", ":", "args", ".", "n_clicks", "]", "\n", "\n", "", "n_clicks", "=", "len", "(", "model_results", ")", "\n", "max_clicks", "=", "max", "(", "max_clicks", ",", "n_clicks", ")", "\n", "\n", "miou_str", "=", "' '", ".", "join", "(", "[", "f'mIoU@{click_id}={model_results[click_id-1]:.2%};'", "\n", "for", "click_id", "in", "[", "1", ",", "3", ",", "5", ",", "10", ",", "20", "]", "if", "click_id", "<=", "len", "(", "model_results", ")", "]", ")", "\n", "print", "(", "f'{model_name} on {dataset_name}:\\n{miou_str}\\n'", ")", "\n", "\n", "plt", ".", "plot", "(", "1", "+", "np", ".", "arange", "(", "n_clicks", ")", ",", "model_results", ",", "linewidth", "=", "2", ",", "label", "=", "model_name", ")", "\n", "\n", "", "plt", ".", "title", "(", "f'mIoU after every click for {dataset_name}'", ",", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "4", ",", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "xticks", "(", "1", "+", "np", ".", "arange", "(", "max_clicks", ")", ",", "fontsize", "=", "'x-large'", ")", "\n", "\n", "fig_path", "=", "get_target_file_path", "(", "args", ".", "plots_path", ",", "dataset_name", ")", "\n", "plt", ".", "savefig", "(", "str", "(", "fig_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.get_target_file_path": [[103, 111], ["sorted", "str", "plots_path.glob", "len", "int", "previous_plots[].stem.split"], "function", ["None"], ["", "", "def", "get_target_file_path", "(", "plots_path", ",", "dataset_name", ")", ":", "\n", "    ", "previous_plots", "=", "sorted", "(", "plots_path", ".", "glob", "(", "f'{dataset_name}_*.png'", ")", ")", "\n", "if", "len", "(", "previous_plots", ")", "==", "0", ":", "\n", "        ", "index", "=", "0", "\n", "", "else", ":", "\n", "        ", "index", "=", "int", "(", "previous_plots", "[", "-", "1", "]", ".", "stem", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", "+", "1", "\n", "\n", "", "return", "str", "(", "plots_path", "/", "f'{dataset_name}_{index:03d}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.plot_ious_analysis.get_files_list": [[113, 140], ["pathlib.Path().glob", "any", "pathlib.Path", "any", "Path().glob.extend", "pathlib.Path", "folder.glob", "rel_exp_path.split", "list", "Path().glob.extend", "exp_path_prefix.parent.glob", "len", "sorted"], "function", ["None"], ["", "def", "get_files_list", "(", "args", ",", "cfg", ")", ":", "\n", "    ", "if", "args", ".", "folder", "is", "not", "None", ":", "\n", "        ", "files_list", "=", "Path", "(", "args", ".", "folder", ")", ".", "glob", "(", "'*.pickle'", ")", "\n", "", "elif", "args", ".", "files", "is", "not", "None", ":", "\n", "        ", "files_list", "=", "args", ".", "files", "\n", "", "elif", "args", ".", "model_dirs", "is", "not", "None", ":", "\n", "        ", "files_list", "=", "[", "]", "\n", "for", "folder", "in", "args", ".", "model_dirs", ":", "\n", "            ", "folder", "=", "Path", "(", "folder", ")", "/", "'plots'", "\n", "files_list", ".", "extend", "(", "folder", ".", "glob", "(", "'*.pickle'", ")", ")", "\n", "", "", "elif", "args", ".", "exp_models", "is", "not", "None", ":", "\n", "        ", "files_list", "=", "[", "]", "\n", "for", "rel_exp_path", "in", "args", ".", "exp_models", ":", "\n", "            ", "rel_exp_path", ",", "checkpoint_prefix", "=", "rel_exp_path", ".", "split", "(", "':'", ")", "\n", "exp_path_prefix", "=", "cfg", ".", "EXPS_PATH", "/", "'evaluation_logs'", "/", "rel_exp_path", "\n", "candidates", "=", "list", "(", "exp_path_prefix", ".", "parent", ".", "glob", "(", "exp_path_prefix", ".", "stem", "+", "'*'", ")", ")", "\n", "assert", "len", "(", "candidates", ")", "==", "1", ",", "\"Invalid experiment path.\"", "\n", "exp_path", "=", "candidates", "[", "0", "]", "\n", "files_list", ".", "extend", "(", "sorted", "(", "(", "exp_path", "/", "'plots'", ")", ".", "glob", "(", "checkpoint_prefix", "+", "'*.pickle'", ")", ")", ")", "\n", "\n", "", "", "if", "args", ".", "mode", "is", "not", "None", ":", "\n", "        ", "files_list", "=", "[", "file", "for", "file", "in", "files_list", "\n", "if", "any", "(", "mode", "in", "file", ".", "stem", "for", "mode", "in", "args", ".", "mode", ")", "]", "\n", "", "files_list", "=", "[", "file", "for", "file", "in", "files_list", "\n", "if", "any", "(", "dataset", "in", "file", ".", "stem", "for", "dataset", "in", "args", ".", "datasets", ")", "]", "\n", "\n", "return", "files_list", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args": [[11, 24], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "isegm.utils.exp.load_config_file"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.exp.load_config_file"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'dataset'", ",", "choices", "=", "[", "'openimages'", ",", "'ade20k'", ",", "'coco_lvis'", "]", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--split'", ",", "nargs", "=", "'+'", ",", "choices", "=", "[", "'train'", ",", "'val'", ",", "'test'", "]", ",", "type", "=", "str", ",", "default", "=", "[", "'train'", ",", "'val'", "]", ",", "\n", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--n-jobs'", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "'--config-path'", ",", "type", "=", "str", ",", "default", "=", "'./config.yml'", ",", "\n", "help", "=", "'The path to the config file.'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "cfg", "=", "load_config_file", "(", "args", ".", "config_path", ",", "return_edict", "=", "True", ")", "\n", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.main": [[26, 37], ["multiprocessing.set_start_method", "convert_annotations.parse_args", "scripts.annotations_conversion.openimages.create_annotations", "pathlib.Path", "scripts.annotations_conversion.ade20k.create_annotations", "pathlib.Path", "scripts.annotations_conversion.coco_lvis.create_annotations", "pathlib.Path", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.scripts.convert_annotations.parse_args", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.openimages.create_annotations", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.openimages.create_annotations", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.openimages.create_annotations"], ["", "def", "main", "(", ")", ":", "\n", "    ", "mp", ".", "set_start_method", "(", "'spawn'", ")", "\n", "args", ",", "cfg", "=", "parse_args", "(", ")", "\n", "\n", "for", "split", "in", "args", ".", "split", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'openimages'", ":", "\n", "            ", "openimages", ".", "create_annotations", "(", "Path", "(", "cfg", ".", "OPENIMAGES_PATH", ")", ",", "dataset_split", "=", "split", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ade20k'", "and", "split", "!=", "'test'", ":", "\n", "            ", "ade20k", ".", "create_annotations", "(", "Path", "(", "cfg", ".", "ADE20K_PATH", ")", ",", "dataset_split", "=", "split", ",", "n_jobs", "=", "args", ".", "n_jobs", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'coco_lvis'", ":", "\n", "            ", "coco_lvis", ".", "create_annotations", "(", "Path", "(", "cfg", ".", "LVIS_PATH", ")", ",", "Path", "(", "cfg", ".", "COCO_PATH", ")", ",", "dataset_split", "=", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.parallel_map": [[9, 66], ["enumerate", "dict", "concurrent.futures.ProcessPoolExecutor", "tqdm.tqdm", "len", "concurrent.futures.as_completed", "out.append", "worker", "worker", "pool.submit", "pool.submit", "future.result", "print", "out.append", "worker", "worker", "tqdm.tqdm", "str"], "function", ["None"], ["def", "parallel_map", "(", "array", ",", "worker", ",", "const_args", "=", "None", ",", "n_jobs", "=", "16", ",", "use_kwargs", "=", "False", ",", "front_num", "=", "3", ",", "drop_none", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n        A parallel version of the map function with a progress bar.\n\n        Args:\n            array (array-like): A list to iterate over\n            worker (function): A python function to apply to the elements of array\n            const_args (dict, default=None): Constant arguments, shared between all processes\n            n_jobs (int, default=16): The number of cores to use\n            use_kwargs (boolean, default=False): Whether to consider the elements of array as dictionaries of\n                keyword arguments to function\n            front_num (int, default=3): The number of iterations to run serially before kicking off the parallel job\n            drop_none (boolean, default=False): Whether to drop None values from the list of results or not\n        Returns:\n            [worker(**list[0], **const_args), worker(**list[1], **const_args), ...]\n    \"\"\"", "\n", "# Replace None with empty dict", "\n", "const_args", "=", "dict", "(", ")", "if", "const_args", "is", "None", "else", "const_args", "\n", "# We run the first few iterations serially to catch bugs", "\n", "if", "front_num", ">", "0", ":", "\n", "        ", "front", "=", "[", "worker", "(", "**", "a", ",", "**", "const_args", ")", "if", "use_kwargs", "else", "worker", "(", "a", ",", "**", "const_args", ")", "for", "a", "in", "array", "[", ":", "front_num", "]", "]", "\n", "", "else", ":", "\n", "        ", "front", "=", "[", "]", "\n", "# If we set n_jobs to 1, just run a list comprehension. This is useful for benchmarking and debugging.", "\n", "", "if", "n_jobs", "==", "1", ":", "\n", "        ", "return", "front", "+", "[", "worker", "(", "**", "a", ",", "**", "const_args", ")", "if", "use_kwargs", "else", "\n", "worker", "(", "a", ",", "**", "const_args", ")", "for", "a", "in", "tqdm", "(", "array", "[", "front_num", ":", "]", ")", "]", "\n", "# Assemble the workers", "\n", "", "with", "ProcessPoolExecutor", "(", "max_workers", "=", "n_jobs", ")", "as", "pool", ":", "\n", "# Pass the elements of array into function", "\n", "        ", "if", "use_kwargs", ":", "\n", "            ", "futures", "=", "[", "pool", ".", "submit", "(", "worker", ",", "**", "a", ",", "**", "const_args", ")", "for", "a", "in", "array", "[", "front_num", ":", "]", "]", "\n", "", "else", ":", "\n", "            ", "futures", "=", "[", "pool", ".", "submit", "(", "worker", ",", "a", ",", "**", "const_args", ")", "for", "a", "in", "array", "[", "front_num", ":", "]", "]", "\n", "", "tqdm_kwargs", "=", "{", "\n", "'total'", ":", "len", "(", "futures", ")", ",", "\n", "'unit'", ":", "'it'", ",", "\n", "'unit_scale'", ":", "True", ",", "\n", "'leave'", ":", "True", ",", "\n", "'ncols'", ":", "100", "\n", "}", "\n", "# Print out the progress as tasks complete", "\n", "for", "_", "in", "tqdm", "(", "as_completed", "(", "futures", ")", ",", "**", "tqdm_kwargs", ")", ":", "\n", "            ", "pass", "\n", "", "", "out", "=", "[", "]", "\n", "# Get the results from the futures.", "\n", "for", "i", ",", "future", "in", "enumerate", "(", "futures", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "out", ".", "append", "(", "future", ".", "result", "(", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "f\"Caught {str(e)} on {i}-th input.\"", ")", "\n", "out", ".", "append", "(", "None", ")", "\n", "\n", "", "", "if", "drop_none", ":", "\n", "        ", "return", "[", "v", "for", "v", "in", "front", "+", "out", "if", "v", "is", "not", "None", "]", "\n", "", "else", ":", "\n", "        ", "return", "front", "+", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_masks_hierarchy": [[68, 123], ["collections.defaultdict", "numpy.zeros", "range", "sorted", "common.get_masks_hierarchy.check_inter"], "function", ["None"], ["", "", "def", "get_masks_hierarchy", "(", "masks", ",", "masks_meta", ")", ":", "\n", "    ", "order", "=", "sorted", "(", "list", "(", "enumerate", "(", "masks_meta", ")", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "1", "]", ")", "[", ":", ":", "-", "1", "]", "\n", "hierarchy", "=", "defaultdict", "(", "list", ")", "\n", "\n", "def", "check_inter", "(", "i", ",", "j", ")", ":", "\n", "        ", "assert", "masks_meta", "[", "i", "]", "[", "1", "]", ">=", "masks_meta", "[", "j", "]", "[", "1", "]", "\n", "bbox_i", ",", "bbox_j", "=", "masks_meta", "[", "i", "]", "[", "0", "]", ",", "masks_meta", "[", "j", "]", "[", "0", "]", "\n", "bbox_score", "=", "get_bbox_intersection", "(", "bbox_i", ",", "bbox_j", ")", "/", "get_bbox_area", "(", "bbox_j", ")", "\n", "if", "bbox_score", "<", "0.7", ":", "\n", "            ", "return", "False", "\n", "\n", "", "mask_i", ",", "mask_j", "=", "masks", "[", "i", "]", ",", "masks", "[", "j", "]", "\n", "mask_score", "=", "np", ".", "logical_and", "(", "mask_i", ",", "mask_j", ")", ".", "sum", "(", ")", "/", "masks_meta", "[", "j", "]", "[", "1", "]", "\n", "return", "mask_score", ">", "0.8", "\n", "\n", "", "def", "get_root_indx", "(", "root_indx", ",", "check_indx", ")", ":", "\n", "        ", "children", "=", "hierarchy", "[", "root_indx", "]", "\n", "for", "child_indx", "in", "children", ":", "\n", "            ", "if", "masks_meta", "[", "child_indx", "]", "[", "1", "]", "<", "masks_meta", "[", "check_indx", "]", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "", "result_indx", "=", "get_root_indx", "(", "child_indx", ",", "check_indx", ")", "\n", "if", "result_indx", "is", "not", "None", ":", "\n", "                ", "return", "result_indx", "\n", "\n", "", "", "if", "check_inter", "(", "root_indx", ",", "check_indx", ")", ":", "\n", "            ", "return", "root_indx", "\n", "\n", "", "return", "None", "\n", "\n", "", "used_masks", "=", "np", ".", "zeros", "(", "len", "(", "masks", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "parents", "=", "[", "None", "]", "*", "len", "(", "masks", ")", "\n", "node_level", "=", "[", "0", "]", "*", "len", "(", "masks", ")", "\n", "for", "ti", "in", "range", "(", "len", "(", "masks", ")", "-", "1", ")", ":", "\n", "        ", "for", "tj", "in", "range", "(", "ti", "+", "1", ",", "len", "(", "masks", ")", ")", ":", "\n", "            ", "i", "=", "order", "[", "ti", "]", "[", "0", "]", "\n", "j", "=", "order", "[", "tj", "]", "[", "0", "]", "\n", "\n", "assert", "i", "!=", "j", "\n", "if", "used_masks", "[", "j", "]", "or", "not", "check_inter", "(", "i", ",", "j", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "ni", "=", "get_root_indx", "(", "i", ",", "j", ")", "\n", "assert", "ni", "!=", "j", "and", "parents", "[", "j", "]", "is", "None", "\n", "hierarchy", "[", "ni", "]", ".", "append", "(", "j", ")", "\n", "used_masks", "[", "j", "]", "=", "True", "\n", "parents", "[", "j", "]", "=", "ni", "\n", "node_level", "[", "j", "]", "=", "node_level", "[", "ni", "]", "+", "1", "\n", "\n", "", "", "hierarchy", "=", "[", "hierarchy", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "masks", ")", ")", "]", "\n", "hierarchy", "=", "{", "i", ":", "{", "'children'", ":", "hierarchy", "[", "i", "]", ",", "\n", "'parent'", ":", "parents", "[", "i", "]", ",", "\n", "'node_level'", ":", "node_level", "[", "i", "]", "\n", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "masks", ")", ")", "}", "\n", "return", "hierarchy", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_bbox_intersection": [[125, 129], ["common.get_segments_intersection", "common.get_segments_intersection"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_segments_intersection", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_segments_intersection"], ["", "def", "get_bbox_intersection", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "h_i", "=", "get_segments_intersection", "(", "b1", "[", ":", "2", "]", ",", "b2", "[", ":", "2", "]", ")", "\n", "w_i", "=", "get_segments_intersection", "(", "b1", "[", "2", ":", "4", "]", ",", "b2", "[", "2", ":", "4", "]", ")", "\n", "return", "h_i", "*", "w_i", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_segments_intersection": [[131, 135], ["max", "min", "max"], "function", ["None"], ["", "def", "get_segments_intersection", "(", "s1", ",", "s2", ")", ":", "\n", "    ", "a", ",", "b", "=", "s1", "\n", "c", ",", "d", "=", "s2", "\n", "return", "max", "(", "0", ",", "min", "(", "b", ",", "d", ")", "-", "max", "(", "a", ",", "c", ")", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_bbox_area": [[137, 139], ["None"], "function", ["None"], ["", "def", "get_bbox_area", "(", "bbox", ")", ":", "\n", "    ", "return", "(", "bbox", "[", "1", "]", "-", "bbox", "[", "0", "]", "+", "1", ")", "*", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "2", "]", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_iou": [[141, 145], ["numpy.logical_and().sum", "numpy.logical_or().sum", "numpy.logical_and", "numpy.logical_or"], "function", ["None"], ["", "def", "get_iou", "(", "mask1", ",", "mask2", ")", ":", "\n", "    ", "intersection_area", "=", "np", ".", "logical_and", "(", "mask1", ",", "mask2", ")", ".", "sum", "(", ")", "\n", "union_area", "=", "np", ".", "logical_or", "(", "mask1", ",", "mask2", ")", ".", "sum", "(", ")", "\n", "return", "intersection_area", "/", "union_area", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.encode_masks": [[147, 171], ["numpy.zeros", "len", "sorted", "enumerate", "list", "zip", "numpy.all", "numpy.zeros_like", "layers.append", "layers_objs.append", "cv2.imencode", "enumerate", "len", "layer_objs.append", "len", "len", "x[].sum"], "function", ["None"], ["", "def", "encode_masks", "(", "masks", ")", ":", "\n", "    ", "layers", "=", "[", "np", ".", "zeros", "(", "masks", "[", "0", "]", ".", "shape", ",", "dtype", "=", "np", ".", "uint8", ")", "]", "\n", "layers_objs", "=", "[", "[", "]", "]", "\n", "objs_mapping", "=", "[", "(", "None", ",", "None", ")", "]", "*", "len", "(", "masks", ")", "\n", "ordered_masks", "=", "sorted", "(", "list", "(", "enumerate", "(", "masks", ")", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sum", "(", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "for", "global_id", ",", "obj_mask", "in", "ordered_masks", ":", "\n", "        ", "for", "layer_indx", ",", "(", "layer_mask", ",", "layer_objs", ")", "in", "enumerate", "(", "zip", "(", "layers", ",", "layers_objs", ")", ")", ":", "\n", "            ", "if", "len", "(", "layer_objs", ")", ">=", "255", ":", "\n", "                ", "continue", "\n", "", "if", "np", ".", "all", "(", "layer_mask", "[", "obj_mask", "]", "==", "0", ")", ":", "\n", "                ", "layer_objs", ".", "append", "(", "global_id", ")", "\n", "local_id", "=", "len", "(", "layer_objs", ")", "\n", "layer_mask", "[", "obj_mask", "]", "=", "local_id", "\n", "objs_mapping", "[", "global_id", "]", "=", "(", "layer_indx", ",", "local_id", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "new_layer", "=", "np", ".", "zeros_like", "(", "layers", "[", "-", "1", "]", ")", "\n", "new_layer", "[", "obj_mask", "]", "=", "1", "\n", "objs_mapping", "[", "global_id", "]", "=", "(", "len", "(", "layers", ")", ",", "1", ")", "\n", "layers", ".", "append", "(", "new_layer", ")", "\n", "layers_objs", ".", "append", "(", "[", "global_id", "]", ")", "\n", "\n", "", "", "layers", "=", "[", "cv2", ".", "imencode", "(", "'.png'", ",", "x", ")", "[", "1", "]", "for", "x", "in", "layers", "]", "\n", "return", "layers", ",", "objs_mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.decode_masks": [[173, 180], ["cv2.imdecode", "masks.append"], "function", ["None"], ["", "def", "decode_masks", "(", "packed_data", ")", ":", "\n", "    ", "layers", ",", "objs_mapping", "=", "packed_data", "\n", "layers", "=", "[", "cv2", ".", "imdecode", "(", "x", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "for", "x", "in", "layers", "]", "\n", "masks", "=", "[", "]", "\n", "for", "layer_indx", ",", "obj_id", "in", "objs_mapping", ":", "\n", "        ", "masks", ".", "append", "(", "layers", "[", "layer_indx", "]", "==", "obj_id", ")", "\n", "", "return", "masks", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.ade20k.worker_annotations_loader": [[17, 48], ["len", "list", "line.strip().split.strip().split", "int", "int", "name.strip", "set", "set", "[].append", "[].append", "line.strip().split.strip", "class_names.split", "range"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.interactive_demo.canvas.AutoScrollbar.set"], ["assert", "split", "in", "{", "'train'", ",", "'val'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "dataset_split", "=", "split", "\n", "self", ".", "dataset_split_folder", "=", "'training'", "if", "split", "==", "'train'", "else", "'validation'", "\n", "self", ".", "stuff_prob", "=", "stuff_prob", "\n", "\n", "anno_path", "=", "self", ".", "dataset_path", "/", "f'{split}-annotations-object-segmentation.pkl'", "\n", "if", "os", ".", "path", ".", "exists", "(", "anno_path", ")", ":", "\n", "            ", "with", "anno_path", ".", "open", "(", "'rb'", ")", "as", "f", ":", "\n", "                ", "annotations", "=", "pkl", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Can't find annotations at {anno_path}\"", ")", "\n", "", "self", ".", "annotations", "=", "annotations", "\n", "self", ".", "dataset_samples", "=", "list", "(", "annotations", ".", "keys", "(", ")", ")", "\n", "\n", "", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "sample_annos", "=", "self", ".", "annotations", "[", "image_id", "]", "\n", "\n", "image_path", "=", "str", "(", "self", ".", "dataset_path", "/", "sample_annos", "[", "'folder'", "]", "/", "f'{image_id}.jpg'", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "# select random mask for an image", "\n", "layer", "=", "random", ".", "choice", "(", "sample_annos", "[", "'layers'", "]", ")", "\n", "mask_path", "=", "str", "(", "self", ".", "dataset_path", "/", "sample_annos", "[", "'folder'", "]", "/", "layer", "[", "'mask_name'", "]", ")", "\n", "instances_mask", "=", "cv2", ".", "imread", "(", "mask_path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "[", ":", ",", ":", ",", "0", "]", "# the B channel holds instances", "\n", "instances_mask", "=", "instances_mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "object_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "if", "(", "self", ".", "stuff_prob", "<=", "0", ")", "or", "(", "random", ".", "random", "(", ")", ">", "self", ".", "stuff_prob", ")", ":", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.ade20k.load_and_parse_annotations": [[50, 66], ["scipy.io.loadmat", "scripts.annotations_conversion.common.parallel_map", "pathlib.Path().relative_to", "list", "image_id.split", "zip", "orig_annotations[].item", "pathlib.Path", "orig_annotations[].item"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.parallel_map"], ["            ", "for", "i", ",", "object_id", "in", "enumerate", "(", "object_ids", ")", ":", "\n", "                ", "if", "i", "in", "layer", "[", "'stuff_instances'", "]", ":", "\n", "                    ", "instances_mask", "[", "instances_mask", "==", "object_id", "]", "=", "0", "\n", "", "", "object_ids", ",", "_", "=", "get_labels_with_sizes", "(", "instances_mask", ")", "\n", "\n", "", "return", "DSample", "(", "image", ",", "instances_mask", ",", "objects_ids", "=", "object_ids", ",", "sample_id", "=", "index", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.ade20k.create_annotations": [[68, 84], ["ade20k.load_and_parse_annotations", "enumerate", "anno_path.open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.ade20k.load_and_parse_annotations"], []], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.coco_lvis.create_annotations": [[12, 101], ["isegm.data.datasets.LvisDataset", "isegm.data.datasets.CocoDataset", "enumerate", "output_masks_path.mkdir", "dict", "tqdm.tqdm", "lvis_images.get", "coco_lvis.get_coco_sample", "numpy.zeros", "coco_sample[].keys", "enumerate", "enumerate", "scripts.annotations_conversion.common.get_masks_hierarchy", "list", "numpy.max", "len", "coco_sample[].keys", "open", "pickle.dump", "[].split", "enumerate", "coco_lvis_mapping.append", "[].split", "isegm.data.datasets.LvisDataset.get_mask_from_polygon", "enumerate", "zip", "zip", "scripts.annotations_conversion.common.get_masks_hierarchy.items", "numpy.logical_and", "open", "pickle.dump", "coco_sample[].split", "np.logical_and.sum", "lvis_masks.append", "lvis_bboxes.append", "np.logical_and.sum", "coco_masks.append", "coco_bboxes.append", "masks.append", "isegm.utils.misc.get_bbox_iou", "masks.append", "isegm.utils.misc.get_bbox_from_mask", "x.sum", "numpy.logical_not", "np.logical_and.sum", "masks.append", "scripts.annotations_conversion.common.encode_masks", "isegm.utils.misc.get_bbox_from_mask", "isegm.utils.misc.get_bbox_from_mask", "len", "x[].split", "lvis_info[].split", "isegm.utils.misc.get_bbox_iou", "scripts.annotations_conversion.common.get_iou", "scripts.annotations_conversion.common.get_iou"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.coco_lvis.get_coco_sample", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_masks_hierarchy", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.lvis.LvisDataset.get_mask_from_polygon", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_iou", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.encode_masks", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.utils.misc.get_bbox_iou", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_iou", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.common.get_iou"], ["class", "CocoLvisDataset", "(", "ISDataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "stuff_prob", "=", "0.0", ",", "\n", "allow_list_name", "=", "None", ",", "anno_file", "=", "'hannotation.pickle'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "CocoLvisDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_split_path", "=", "dataset_path", "/", "split", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "_split_path", "/", "'images'", "\n", "self", ".", "_masks_path", "=", "self", ".", "_split_path", "/", "'masks'", "\n", "self", ".", "stuff_prob", "=", "stuff_prob", "\n", "\n", "with", "open", "(", "self", ".", "_split_path", "/", "anno_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "dataset_samples", "=", "sorted", "(", "pickle", ".", "load", "(", "f", ")", ".", "items", "(", ")", ")", "\n", "\n", "", "if", "allow_list_name", "is", "not", "None", ":", "\n", "            ", "allow_list_path", "=", "self", ".", "_split_path", "/", "allow_list_name", "\n", "with", "open", "(", "allow_list_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "allow_images_ids", "=", "json", ".", "load", "(", "f", ")", "\n", "", "allow_images_ids", "=", "set", "(", "allow_images_ids", ")", "\n", "\n", "self", ".", "dataset_samples", "=", "[", "sample", "for", "sample", "in", "self", ".", "dataset_samples", "\n", "if", "sample", "[", "0", "]", "in", "allow_images_ids", "]", "\n", "\n", "", "", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", ",", "sample", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n", "image_path", "=", "self", ".", "_images_path", "/", "f'{image_id}.jpg'", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "str", "(", "image_path", ")", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "packed_masks_path", "=", "self", ".", "_masks_path", "/", "f'{image_id}.pickle'", "\n", "with", "open", "(", "packed_masks_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "encoded_layers", ",", "objs_mapping", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "layers", "=", "[", "cv2", ".", "imdecode", "(", "x", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "for", "x", "in", "encoded_layers", "]", "\n", "layers", "=", "np", ".", "stack", "(", "layers", ",", "axis", "=", "2", ")", "\n", "\n", "instances_info", "=", "deepcopy", "(", "sample", "[", "'hierarchy'", "]", ")", "\n", "for", "inst_id", ",", "inst_info", "in", "list", "(", "instances_info", ".", "items", "(", ")", ")", ":", "\n", "            ", "if", "inst_info", "is", "None", ":", "\n", "                ", "inst_info", "=", "{", "'children'", ":", "[", "]", ",", "'parent'", ":", "None", ",", "'node_level'", ":", "0", "}", "\n", "instances_info", "[", "inst_id", "]", "=", "inst_info", "\n", "", "inst_info", "[", "'mapping'", "]", "=", "objs_mapping", "[", "inst_id", "]", "\n", "\n", "", "if", "self", ".", "stuff_prob", ">", "0", "and", "random", ".", "random", "(", ")", "<", "self", ".", "stuff_prob", ":", "\n", "            ", "for", "inst_id", "in", "range", "(", "sample", "[", "'num_instance_masks'", "]", ",", "len", "(", "objs_mapping", ")", ")", ":", "\n", "                ", "instances_info", "[", "inst_id", "]", "=", "{", "\n", "'mapping'", ":", "objs_mapping", "[", "inst_id", "]", ",", "\n", "'parent'", ":", "None", ",", "\n", "'children'", ":", "[", "]", "\n", "}", "\n", "", "", "else", ":", "\n", "            ", "for", "inst_id", "in", "range", "(", "sample", "[", "'num_instance_masks'", "]", ",", "len", "(", "objs_mapping", ")", ")", ":", "\n", "                ", "layer_indx", ",", "mask_id", "=", "objs_mapping", "[", "inst_id", "]", "\n", "layers", "[", ":", ",", ":", ",", "layer_indx", "]", "[", "layers", "[", ":", ",", ":", ",", "layer_indx", "]", "==", "mask_id", "]", "=", "0", "\n", "\n", "", "", "return", "DSample", "(", "image", ",", "layers", ",", "objects", "=", "instances_info", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.coco_lvis.get_coco_sample": [[103, 141], ["cv2.imread", "cv2.cvtColor", "cv2.imread().astype", "numpy.full_like", "numpy.full_like", "dict", "dict", "dataset.get_image_name", "str", "cv2.imread", "str"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.datasets.coco.CocoDataset.get_image_name"], []], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.annotations_conversion.openimages.create_annotations": [[7, 34], ["pathlib.Path", "list", "collections.defaultdict", "open", "csv.DictReader", "annotations[].keys", "clean_anno_path.open", "pickle.dump", "[].append"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "\n", "from", "isegm", ".", "data", ".", "base", "import", "ISDataset", "\n", "from", "isegm", ".", "data", ".", "sample", "import", "DSample", "\n", "\n", "\n", "class", "OpenImagesDataset", "(", "ISDataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "split", "=", "'train'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "assert", "split", "in", "{", "'train'", ",", "'val'", ",", "'test'", "}", "\n", "\n", "self", ".", "dataset_path", "=", "Path", "(", "dataset_path", ")", "\n", "self", ".", "_split_path", "=", "self", ".", "dataset_path", "/", "split", "\n", "self", ".", "_images_path", "=", "self", ".", "_split_path", "/", "'images'", "\n", "self", ".", "_masks_path", "=", "self", ".", "_split_path", "/", "'masks'", "\n", "self", ".", "dataset_split", "=", "split", "\n", "\n", "clean_anno_path", "=", "self", ".", "_split_path", "/", "f'{split}-annotations-object-segmentation_clean.pkl'", "\n", "if", "os", ".", "path", ".", "exists", "(", "clean_anno_path", ")", ":", "\n", "            ", "with", "clean_anno_path", ".", "open", "(", "'rb'", ")", "as", "f", ":", "\n", "                ", "annotations", "=", "pkl", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Can't find annotations at {clean_anno_path}\"", ")", "\n", "", "self", ".", "image_id_to_masks", "=", "annotations", "[", "'image_id_to_masks'", "]", "\n", "self", ".", "dataset_samples", "=", "annotations", "[", "'dataset_samples'", "]", "\n", "\n", "", "def", "get_sample", "(", "self", ",", "index", ")", "->", "DSample", ":", "\n", "        ", "image_id", "=", "self", ".", "dataset_samples", "[", "index", "]", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet32_cocolvis_itermask_3p.main": [[5, 8], ["hrnet32_cocolvis_itermask_3p.init_model", "hrnet32_cocolvis_itermask_3p.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet32_cocolvis_itermask_3p.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "32", ",", "ocr_width", "=", "128", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ",", "with_prev_mask", "=", "True", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W32", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet32_cocolvis_itermask_3p.train": [[25, 91], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "32", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "200", ",", "220", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "[", "(", "0", ",", "5", ")", ",", "(", "200", ",", "1", ")", "]", ",", "\n", "image_dump_interval", "=", "3000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ",", "\n", "max_num_next_clicks", "=", "3", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "230", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_sbd_itermask_3p.main": [[5, 8], ["hrnet18_sbd_itermask_3p.init_model", "hrnet18_sbd_itermask_3p.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_sbd_itermask_3p.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ",", "with_prev_mask", "=", "True", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_sbd_itermask_3p.train": [[25, 95], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "SBDDataset", "SBDDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "Flip", "RandomRotate90", "ShiftScaleRotate", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "UniformRandomResize", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.25", ")", ")", ",", "\n", "Flip", "(", ")", ",", "\n", "RandomRotate90", "(", ")", ",", "\n", "ShiftScaleRotate", "(", "shift_limit", "=", "0.03", ",", "scale_limit", "=", "0", ",", "\n", "rotate_limit", "=", "(", "-", "3", ",", "3", ")", ",", "border_mode", "=", "0", ",", "p", "=", "0.75", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.25", ")", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.01", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "samples_scores_path", "=", "'./assets/sbd_samples_weights.pkl'", ",", "\n", "samples_scores_gamma", "=", "1.25", "\n", ")", "\n", "\n", "valset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "500", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "200", ",", "215", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "[", "(", "0", ",", "5", ")", ",", "(", "100", ",", "1", ")", "]", ",", "\n", "image_dump_interval", "=", "3000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ",", "\n", "max_num_next_clicks", "=", "3", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "220", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18s_cocolvis_itermask_3p.main": [[5, 8], ["hrnet18s_cocolvis_itermask_3p.init_model", "hrnet18s_cocolvis_itermask_3p.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18s_cocolvis_itermask_3p.init_model": [[10, 24], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "48", ",", "small", "=", "True", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ",", "\n", "with_prev_mask", "=", "True", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18_SMALL", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18s_cocolvis_itermask_3p.train": [[26, 92], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "32", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "200", ",", "220", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "[", "(", "0", ",", "5", ")", ",", "(", "200", ",", "1", ")", "]", ",", "\n", "image_dump_interval", "=", "3000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ",", "\n", "max_num_next_clicks", "=", "3", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "230", ")", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_cocolvis_itermask_3p.main": [[5, 8], ["hrnet18_cocolvis_itermask_3p.init_model", "hrnet18_cocolvis_itermask_3p.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_cocolvis_itermask_3p.init_model": [[10, 24], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ",", "\n", "with_prev_mask", "=", "True", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.iter_mask.hrnet18_cocolvis_itermask_3p.train": [[26, 92], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_v1_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "200", ",", "220", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "[", "(", "0", ",", "5", ")", ",", "(", "200", ",", "1", ")", "]", ",", "\n", "image_dump_interval", "=", "3000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ",", "\n", "max_num_next_clicks", "=", "3", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "230", ")", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_lvis.main": [[5, 8], ["hrnet18_ocr64_lvis.init_model", "hrnet18_ocr64_lvis.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_lvis.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_lvis.train": [[25, 89], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "LvisDataset", "LvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "LvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "LvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_sbd.main": [[5, 8], ["r34_dh128_sbd.init_model", "r34_dh128_sbd.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_sbd.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_sbd.train": [[25, 87], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "SBDDataset", "SBDDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "samples_scores_path", "=", "'./assets/sbd_samples_weights.pkl'", ",", "\n", "samples_scores_gamma", "=", "1.25", "\n", ")", "\n", "\n", "valset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_cocolvis.main": [[5, 8], ["r34_dh128_cocolvis.init_model", "r34_dh128_cocolvis.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_cocolvis.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_cocolvis.train": [[25, 88], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_sbd.main": [[5, 8], ["hrnet18_ocr64_sbd.init_model", "hrnet18_ocr64_sbd.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_sbd.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_sbd.train": [[25, 89], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "SBDDataset", "SBDDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "samples_scores_path", "=", "'./assets/sbd_samples_weights.pkl'", ",", "\n", "samples_scores_gamma", "=", "1.25", "\n", ")", "\n", "\n", "valset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_cocolvis.main": [[5, 8], ["hrnet18_ocr64_cocolvis.init_model", "hrnet18_ocr64_cocolvis.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_cocolvis.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_cocolvis.train": [[25, 90], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "200", ",", "220", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "[", "(", "0", ",", "5", ")", ",", "(", "200", ",", "1", ")", "]", ",", "\n", "image_dump_interval", "=", "3000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "230", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_vocsbd.main": [[5, 8], ["hrnet18_ocr64_vocsbd.init_model", "hrnet18_ocr64_vocsbd.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_vocsbd.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_vocsbd.train": [[25, 94], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "ComposeDataset", "SBDDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "PascalVocDataset", "SBDDataset", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "ComposeDataset", "(", "\n", "[", "\n", "PascalVocDataset", "(", "cfg", ".", "PASCALVOC_PATH", ",", "split", "=", "'train'", ")", ",", "\n", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "samples_scores_path", "=", "'./assets/sbd_samples_weights.pkl'", ",", "\n", "samples_scores_gamma", "=", "1.25", "\n", ")", "\n", "]", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", "\n", ")", "\n", "\n", "valset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_coco.main": [[5, 8], ["r34_dh128_coco.init_model", "r34_dh128_coco.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_coco.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_coco.train": [[25, 89], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "CocoDataset", "CocoDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoDataset", "(", "\n", "cfg", ".", "COCO_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "stuff_prob", "=", "0.30", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "CocoDataset", "(", "\n", "cfg", ".", "COCO_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "120", ",", "135", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "140", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_openimages.main": [[5, 8], ["hrnet18_ocr64_openimages.init_model", "hrnet18_ocr64_openimages.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_openimages.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_openimages.train": [[25, 90], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "OpenImagesDataset", "OpenImagesDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "OpenImagesDataset", "(", "\n", "cfg", ".", "OPENIMAGES_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "OpenImagesDataset", "(", "\n", "cfg", ".", "OPENIMAGES_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "120", ",", "135", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "140", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_openimages.main": [[5, 8], ["r34_dh128_openimages.init_model", "r34_dh128_openimages.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_openimages.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_openimages.train": [[25, 88], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "OpenImagesDataset", "OpenImagesDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "OpenImagesDataset", "(", "\n", "cfg", ".", "OPENIMAGES_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "OpenImagesDataset", "(", "\n", "cfg", ".", "OPENIMAGES_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "120", ",", "135", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "140", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_vocsbd.main": [[5, 8], ["r34_dh128_vocsbd.init_model", "r34_dh128_vocsbd.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_vocsbd.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_vocsbd.train": [[25, 92], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "ComposeDataset", "SBDDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "PascalVocDataset", "SBDDataset", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "ComposeDataset", "(", "\n", "[", "\n", "PascalVocDataset", "(", "cfg", ".", "PASCALVOC_PATH", ",", "split", "=", "'train'", ")", ",", "\n", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "samples_scores_path", "=", "'./assets/sbd_samples_weights.pkl'", ",", "\n", "samples_scores_gamma", "=", "1.25", "\n", ")", "\n", "]", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", "\n", ")", "\n", "\n", "valset", "=", "SBDDataset", "(", "\n", "cfg", ".", "SBD_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_coco.main": [[5, 8], ["hrnet18_ocr64_coco.init_model", "hrnet18_ocr64_coco.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_coco.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_coco.train": [[25, 91], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoDataset", "CocoDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoDataset", "(", "\n", "cfg", ".", "COCO_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "stuff_prob", "=", "0.30", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "CocoDataset", "(", "\n", "cfg", ".", "COCO_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "120", ",", "135", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "140", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_ade20k.main": [[5, 8], ["hrnet18_ocr64_ade20k.init_model", "hrnet18_ocr64_ade20k.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_ade20k.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.hrnet18_ocr64_ade20k.train": [[25, 91], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "ADE20kDataset", "ADE20kDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.80", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "ADE20kDataset", "(", "\n", "cfg", ".", "ADE20K_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "stuff_prob", "=", "0.30", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "ADE20kDataset", "(", "\n", "cfg", ".", "ADE20K_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_lvis.main": [[5, 8], ["r34_dh128_lvis.init_model", "r34_dh128_lvis.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_lvis.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_lvis.train": [[25, 87], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "LvisDataset", "LvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "LvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "LvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "1000", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_ade20k.main": [[5, 8], ["r34_dh128_ade20k.init_model", "r34_dh128_ade20k.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_ade20k.init_model": [[10, 23], ["edict", "DeeplabModel", "DeeplabModel.to", "DeeplabModel.apply", "DeeplabModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "DeeplabModel", "(", "backbone", "=", "'resnet34'", ",", "deeplab_ch", "=", "128", ",", "aspp_dropout", "=", "0.20", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.noniterative_baselines.r34_dh128_ade20k.train": [[25, 89], ["edict", "NormalizedFocalLossSigmoid", "Compose", "Compose", "MultiPointSampler", "ADE20kDataset", "ADE20kDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "ADE20kDataset", "(", "\n", "cfg", ".", "ADE20K_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "stuff_prob", "=", "0.30", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", "\n", ")", "\n", "\n", "valset", "=", "ADE20kDataset", "(", "\n", "cfg", ".", "ADE20K_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.05", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "100", ",", "115", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "120", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_softiou.main": [[5, 8], ["hrnet18_ocr64_softiou.init_model", "hrnet18_ocr64_softiou.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_softiou.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_softiou.train": [[25, 90], ["edict", "SoftIoU", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "SoftIoU", "(", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_bce.main": [[5, 8], ["hrnet18_ocr64_bce.init_model", "hrnet18_ocr64_bce.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_bce.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_bce.train": [[25, 90], ["edict", "SigmoidBinaryCrossEntropyLoss", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_nfl.main": [[5, 8], ["hrnet18_ocr64_nfl.init_model", "hrnet18_ocr64_nfl.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_nfl.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_nfl.train": [[25, 90], ["edict", "NormalizedFocalLossSigmoid", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "NormalizedFocalLossSigmoid", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.main": [[5, 8], ["hrnet18_ocr64_fl.init_model", "hrnet18_ocr64_fl.train"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train"], ["def", "main", "(", "cfg", ")", ":", "\n", "    ", "model", ",", "model_cfg", "=", "init_model", "(", "cfg", ")", "\n", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.init_model": [[10, 23], ["edict", "HRNetModel", "HRNetModel.to", "HRNetModel.apply", "HRNetModel.feature_extractor.load_pretrained_weights", "initializer.XavierGluon"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.data.transforms.ZoomIn.apply", "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.modeling.hrnet_ocr.HighResolutionNet.load_pretrained_weights"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "model_cfg", "=", "edict", "(", ")", "\n", "model_cfg", ".", "crop_size", "=", "(", "320", ",", "480", ")", "\n", "model_cfg", ".", "num_max_points", "=", "24", "\n", "\n", "model", "=", "HRNetModel", "(", "width", "=", "18", ",", "ocr_width", "=", "64", ",", "with_aux_output", "=", "True", ",", "use_leaky_relu", "=", "True", ",", "\n", "use_rgb_conv", "=", "False", ",", "use_disks", "=", "True", ",", "norm_radius", "=", "5", ")", "\n", "\n", "model", ".", "to", "(", "cfg", ".", "device", ")", "\n", "model", ".", "apply", "(", "initializer", ".", "XavierGluon", "(", "rnd_type", "=", "'gaussian'", ",", "magnitude", "=", "2.0", ")", ")", "\n", "model", ".", "feature_extractor", ".", "load_pretrained_weights", "(", "cfg", ".", "IMAGENET_PRETRAINED_MODELS", ".", "HRNETV2_W18", ")", "\n", "\n", "return", "model", ",", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.cocolvis_loss_ablation.hrnet18_ocr64_fl.train": [[25, 90], ["edict", "FocalLoss", "SigmoidBinaryCrossEntropyLoss", "Compose", "Compose", "MultiPointSampler", "CocoLvisDataset", "CocoLvisDataset", "partial", "ISTrainer", "ISTrainer.run", "UniformRandomResize", "HorizontalFlip", "PadIfNeeded", "RandomCrop", "RandomBrightnessContrast", "RGBShift", "PadIfNeeded", "RandomCrop", "AdaptiveIoU"], "function", ["home.repos.pwc.inspect_result.saic-vul_ritm_interactive_segmentation.engine.trainer.ISTrainer.run"], ["", "def", "train", "(", "model", ",", "cfg", ",", "model_cfg", ")", ":", "\n", "    ", "cfg", ".", "batch_size", "=", "28", "if", "cfg", ".", "batch_size", "<", "1", "else", "cfg", ".", "batch_size", "\n", "cfg", ".", "val_batch_size", "=", "cfg", ".", "batch_size", "\n", "crop_size", "=", "model_cfg", ".", "crop_size", "\n", "\n", "loss_cfg", "=", "edict", "(", ")", "\n", "loss_cfg", ".", "instance_loss", "=", "FocalLoss", "(", "alpha", "=", "0.5", ",", "gamma", "=", "2", ")", "\n", "loss_cfg", ".", "instance_loss_weight", "=", "1.0", "\n", "loss_cfg", ".", "instance_aux_loss", "=", "SigmoidBinaryCrossEntropyLoss", "(", ")", "\n", "loss_cfg", ".", "instance_aux_loss_weight", "=", "0.4", "\n", "\n", "train_augmentator", "=", "Compose", "(", "[", "\n", "UniformRandomResize", "(", "scale_range", "=", "(", "0.75", ",", "1.40", ")", ")", ",", "\n", "HorizontalFlip", "(", ")", ",", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", ",", "\n", "RandomBrightnessContrast", "(", "brightness_limit", "=", "(", "-", "0.25", ",", "0.25", ")", ",", "contrast_limit", "=", "(", "-", "0.15", ",", "0.4", ")", ",", "p", "=", "0.75", ")", ",", "\n", "RGBShift", "(", "r_shift_limit", "=", "10", ",", "g_shift_limit", "=", "10", ",", "b_shift_limit", "=", "10", ",", "p", "=", "0.75", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "val_augmentator", "=", "Compose", "(", "[", "\n", "PadIfNeeded", "(", "min_height", "=", "crop_size", "[", "0", "]", ",", "min_width", "=", "crop_size", "[", "1", "]", ",", "border_mode", "=", "0", ")", ",", "\n", "RandomCrop", "(", "*", "crop_size", ")", "\n", "]", ",", "p", "=", "1.0", ")", "\n", "\n", "points_sampler", "=", "MultiPointSampler", "(", "model_cfg", ".", "num_max_points", ",", "prob_gamma", "=", "0.8", ",", "\n", "merge_objects_prob", "=", "0.15", ",", "\n", "max_num_merged_objects", "=", "2", ")", "\n", "\n", "trainset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentator", "=", "train_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "keep_background_prob", "=", "0.0", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "30000", ",", "\n", "stuff_prob", "=", "0.30", "\n", ")", "\n", "\n", "valset", "=", "CocoLvisDataset", "(", "\n", "cfg", ".", "LVIS_PATH", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentator", "=", "val_augmentator", ",", "\n", "min_object_area", "=", "80", ",", "\n", "points_sampler", "=", "points_sampler", ",", "\n", "epoch_len", "=", "2000", "\n", ")", "\n", "\n", "optimizer_params", "=", "{", "\n", "'lr'", ":", "5e-4", ",", "'betas'", ":", "(", "0.9", ",", "0.999", ")", ",", "'eps'", ":", "1e-8", "\n", "}", "\n", "\n", "lr_scheduler", "=", "partial", "(", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", ",", "\n", "milestones", "=", "[", "140", ",", "155", "]", ",", "gamma", "=", "0.1", ")", "\n", "trainer", "=", "ISTrainer", "(", "model", ",", "cfg", ",", "model_cfg", ",", "loss_cfg", ",", "\n", "trainset", ",", "valset", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "optimizer_params", "=", "optimizer_params", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "checkpoint_interval", "=", "5", ",", "\n", "image_dump_interval", "=", "2000", ",", "\n", "metrics", "=", "[", "AdaptiveIoU", "(", ")", "]", ",", "\n", "max_interactive_points", "=", "model_cfg", ".", "num_max_points", ")", "\n", "trainer", ".", "run", "(", "num_epochs", "=", "160", ")", "\n", "", ""]]}