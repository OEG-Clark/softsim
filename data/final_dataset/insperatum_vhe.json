{"home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Px.__init__": [[57, 61], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Softplus", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mu", "=", "nn", ".", "Linear", "(", "c_dim", "+", "z_dim", ",", "x_dim", ")", "\n", "self", ".", "sigma", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "c_dim", "+", "z_dim", ",", "x_dim", ")", ",", "nn", ".", "Softplus", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Px.forward": [[62, 67], ["torch.cat", "torch.distributions.normal.Normal", "example_czx.Px.mu", "example_czx.Px.sigma", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "c", ",", "z", ",", "x", "=", "None", ")", ":", "\n", "        ", "cz", "=", "torch", ".", "cat", "(", "[", "c", ",", "z", "]", ",", "dim", "=", "1", ")", "\n", "dist", "=", "Normal", "(", "self", ".", "mu", "(", "cz", ")", ",", "self", ".", "sigma", "(", "cz", ")", ")", "\n", "if", "x", "is", "None", ":", "x", "=", "dist", ".", "rsample", "(", ")", "\n", "return", "x", ",", "dist", ".", "log_prob", "(", "x", ")", ".", "sum", "(", "dim", "=", "1", ")", "# Return value, score", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Qc.__init__": [[69, 74], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Softplus", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc", "=", "nn", ".", "Linear", "(", "x_dim", ",", "h_dim", ")", "\n", "self", ".", "mu_c", "=", "nn", ".", "Linear", "(", "h_dim", ",", "c_dim", ")", "\n", "self", ".", "sigma_c", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "h_dim", ",", "c_dim", ")", ",", "nn", ".", "Softplus", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Qc.forward": [[75, 84], ["inputs.transpose", "example_czx.Qc.mu_c", "example_czx.Qc.sigma_c", "torch.distributions.normal.Normal", "example_czx.Qc.enc", "sum", "len", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "c", "=", "None", ")", ":", "\n", "        ", "inputs_permuted", "=", "inputs", ".", "transpose", "(", "0", ",", "1", ")", "# |D| * batch * ... ", "\n", "embeddings", "=", "[", "self", ".", "enc", "(", "x", ")", "for", "x", "in", "inputs_permuted", "]", "\n", "mean_embedding", "=", "sum", "(", "embeddings", ")", "/", "len", "(", "embeddings", ")", "\n", "mu_c", "=", "self", ".", "mu_c", "(", "mean_embedding", ")", "\n", "sigma_c", "=", "self", ".", "sigma_c", "(", "mean_embedding", ")", "\n", "dist", "=", "Normal", "(", "mu_c", ",", "sigma_c", ")", "\n", "if", "c", "is", "None", ":", "c", "=", "dist", ".", "rsample", "(", ")", "\n", "return", "c", ",", "dist", ".", "log_prob", "(", "c", ")", ".", "sum", "(", "dim", "=", "1", ")", "# Return value, score", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Qz.__init__": [[86, 90], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Softplus", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mu_z", "=", "nn", ".", "Linear", "(", "x_dim", ",", "z_dim", ")", "\n", "self", ".", "sigma_z", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "x_dim", ",", "z_dim", ")", ",", "nn", ".", "Softplus", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.Qz.forward": [[91, 97], ["example_czx.Qz.mu_z", "example_czx.Qz.sigma_z", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "c", ",", "z", "=", "None", ")", ":", "\n", "        ", "mu_z", "=", "self", ".", "mu_z", "(", "inputs", "[", ":", ",", "0", "]", ")", "\n", "sigma_z", "=", "self", ".", "sigma_z", "(", "inputs", "[", ":", ",", "0", "]", ")", "\n", "dist", "=", "Normal", "(", "mu_z", ",", "sigma_z", ")", "\n", "if", "z", "is", "None", ":", "z", "=", "dist", ".", "rsample", "(", ")", "\n", "return", "z", ",", "dist", ".", "log_prob", "(", "z", ")", ".", "sum", "(", "dim", "=", "1", ")", "# Return value, score", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.generateClass": [[103, 108], ["random.randint", "torch.randn", "torch.randn"], "function", ["None"], ["def", "generateClass", "(", ")", ":", "\n", "    ", "class_size", "=", "random", ".", "randint", "(", "10", ",", "20", ")", "# Randomly sample between 10 and 20 examples of each class", "\n", "mu", "=", "torch", ".", "randn", "(", "1", ",", "x_dim", ")", "+", "3", "\n", "offset", "=", "torch", ".", "randn", "(", "class_size", ",", "1", ")", "\n", "return", "mu", "+", "offset", "\n", "", "classes", "=", "[", "generateClass", "(", ")", "for", "i", "in", "range", "(", "1000", ")", "]", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_czx.pretty": [[134, 135], ["None"], "function", ["None"], ["def", "pretty", "(", "vector", ")", ":", "return", "\"[\"", "+", "\", \"", ".", "join", "(", "\"%2.2f\"", "%", "x", "for", "x", "in", "vector", ")", "+", "\"]\"", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.VHE.__init__": [[12, 33], ["torch.nn.Module.__init__", "vhe.asFactors", "vhe.createFactorFromModule", "torch.nn.ModuleList", "vhe.NormalPrior", "vhe.Factors", "vhe.asFactors", "builtins.super", "set", "set"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.asFactors", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.createFactorFromModule", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.asFactors"], ["    ", "def", "__init__", "(", "self", ",", "encoder", ",", "decoder", ",", "prior", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        encoder can be any of: nn.Module, list[nn.Module], dict(class_name -> nn.Module)\n        decoder is an nn.Module\n        prior defaults to Normal(0,1), or can be any of: nn.Module, list[nn.Module], dict(class_name -> nn.Module)\n        \"\"\"", "\n", "super", "(", "VHE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "asFactors", "(", "encoder", ")", "\n", "self", ".", "decoder", "=", "createFactorFromModule", "(", "decoder", ")", "\n", "\n", "defaults", "=", "{", "k", ":", "NormalPrior", "(", ")", "for", "k", "in", "self", ".", "encoder", ".", "variables", "}", "\n", "if", "prior", "is", "None", ":", "\n", "            ", "self", ".", "prior", "=", "Factors", "(", "**", "defaults", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "prior", "=", "asFactors", "(", "prior", ",", "defaults", "=", "defaults", ")", "\n", "assert", "set", "(", "self", ".", "prior", ".", "variables", ")", "==", "set", "(", "self", ".", "encoder", ".", "variables", ")", "\n", "\n", "", "self", ".", "modules", "=", "nn", ".", "ModuleList", "(", "self", ".", "prior", ".", "modules", "+", "self", ".", "encoder", ".", "modules", "+", "[", "self", ".", "decoder", ".", "module", "]", ")", "\n", "self", ".", "observation", "=", "self", ".", "decoder", ".", "name", "\n", "self", ".", "latents", "=", "self", ".", "prior", ".", "variables", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.VHE.score": [[34, 79], ["isinstance", "vhe.VHE.encoder.factors.items", "vhe.VHE.prior.factors.items", "sampled_reinforce_log_probs.items", "set", "set", "set", "set", "set", "set", "factor", "vhe.VHE.decoder", "sum", "sum", "objective.mean", "inputs.keys", "sizes.keys", "kwargs.keys", "kl_factor.get", "factor", "sampled_vars.items", "objective.mean", "vhe.KL", "sampled_vars.items", "t.new", "t.new", "v.mean", "kl.items"], "methods", ["None"], ["", "def", "score", "(", "self", ",", "inputs", ",", "sizes", ",", "return_kl", "=", "False", ",", "kl_factor", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "assert", "set", "(", "inputs", ".", "keys", "(", ")", ")", "==", "set", "(", "self", ".", "latents", ")", "\n", "assert", "set", "(", "sizes", ".", "keys", "(", ")", ")", "==", "set", "(", "self", ".", "latents", ")", "\n", "assert", "set", "(", "kwargs", ".", "keys", "(", ")", ")", "==", "set", "(", "[", "self", ".", "observation", "]", ")", "\n", "\n", "if", "isinstance", "(", "kl_factor", ",", "numbers", ".", "Number", ")", ":", "kl_factor", "=", "{", "k", ":", "kl_factor", "for", "k", "in", "self", ".", "latents", "}", "\n", "else", ":", "kl_factor", "=", "{", "k", ":", "kl_factor", ".", "get", "(", "k", ",", "1", ")", "for", "k", "in", "self", ".", "latents", "}", "\n", "\n", "# Sample from encoder", "\n", "sampled_vars", "=", "{", "}", "\n", "sampled_log_probs", "=", "{", "}", "\n", "sampled_reinforce_log_probs", "=", "{", "}", "\n", "for", "k", ",", "factor", "in", "self", ".", "encoder", ".", "factors", ".", "items", "(", ")", ":", "\n", "            ", "result", "=", "factor", "(", "inputs", "=", "inputs", "[", "k", "]", ",", "**", "sampled_vars", ")", "\n", "sampled_vars", "[", "k", "]", ",", "sampled_log_probs", "[", "k", "]", "=", "result", ".", "value", ",", "result", ".", "log_prob", "\n", "if", "result", ".", "reinforce_log_prob", "is", "not", "None", ":", "sampled_reinforce_log_probs", "[", "k", "]", "=", "result", ".", "reinforce_log_prob", "\n", "", "sampled_vars", "[", "self", ".", "observation", "]", "=", "kwargs", "[", "self", ".", "observation", "]", "\n", "\n", "# Score under prior", "\n", "priors", "=", "{", "}", "\n", "for", "k", ",", "factor", "in", "self", ".", "prior", ".", "factors", ".", "items", "(", ")", ":", "\n", "            ", "args", "=", "{", "k2", ":", "v", "for", "k2", ",", "v", "in", "sampled_vars", ".", "items", "(", ")", "if", "k2", "==", "k", "or", "k2", "in", "factor", ".", "args", "}", "\n", "priors", "[", "k", "]", "=", "factor", "(", "**", "args", ")", ".", "log_prob", "\n", "\n", "# KL Divergence", "\n", "", "kl", "=", "{", "k", ":", "sampled_log_probs", "[", "k", "]", "-", "priors", "[", "k", "]", "for", "k", "in", "self", ".", "latents", "}", "\n", "\n", "# Log likelihood", "\n", "args", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "sampled_vars", ".", "items", "(", ")", "if", "k", "==", "self", ".", "decoder", ".", "name", "or", "k", "in", "self", ".", "decoder", ".", "args", "}", "\n", "ll", "=", "self", ".", "decoder", "(", "**", "args", ")", ".", "log_prob", "\n", "\n", "# VHE Objective", "\n", "t", "=", "ll", "\n", "lowerbound", "=", "ll", "-", "sum", "(", "kl_factor", "[", "k", "]", "*", "kl", "[", "k", "]", "/", "t", ".", "new", "(", "sizes", "[", "k", "]", ")", "for", "k", "in", "self", ".", "latents", ")", "\n", "\n", "# Reinforce objective", "\n", "objective", "=", "lowerbound", "\n", "for", "k", ",", "v", "in", "sampled_reinforce_log_probs", ".", "items", "(", ")", ":", "\n", "            ", "downstream_kl", "=", "sum", "(", "kl_factor", "[", "k", "]", "*", "kl", "[", "k", "]", "/", "t", ".", "new", "(", "sizes", "[", "k", "]", ")", "for", "k2", "in", "self", ".", "latents", "if", "k", "in", "self", ".", "encoder", ".", "dependencies", "[", "k2", "]", "or", "k2", "==", "k", ")", "\n", "objective", "+=", "v", "*", "(", "ll", "-", "downstream_kl", ")", ".", "data", "\n", "\n", "", "if", "return_kl", ":", "\n", "            ", "return", "objective", ".", "mean", "(", ")", ",", "KL", "(", "**", "{", "k", ":", "v", ".", "mean", "(", ")", "for", "k", ",", "v", "in", "kl", ".", "items", "(", ")", "}", ")", "\n", "", "else", ":", "\n", "            ", "return", "objective", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.VHE.sample": [[80, 101], ["vhe.Vars", "len", "len", "next", "Exception", "list", "len", "inputs.values", "samplers.items", "set", "sampled_vars.keys"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.next"], ["", "", "def", "sample", "(", "self", ",", "inputs", "=", "None", ",", "batch_size", "=", "None", ")", ":", "\n", "        ", "if", "inputs", "is", "None", ":", "\n", "            ", "samplers", "=", "self", ".", "prior", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "len", "(", "list", "(", "inputs", ".", "values", "(", ")", ")", "[", "0", "]", ")", "#First latent ", "\n", "samplers", "=", "{", "k", ":", "self", ".", "encoder", ".", "factors", "[", "k", "]", "if", "k", "in", "inputs", "else", "self", ".", "prior", ".", "factors", "[", "k", "]", "for", "k", "in", "self", ".", "latents", "}", "\n", "samplers", "[", "self", ".", "observation", "]", "=", "self", ".", "decoder", "\n", "\n", "", "sampled_vars", "=", "{", "}", "\n", "try", ":", "\n", "            ", "while", "len", "(", "samplers", ")", ">", "0", ":", "\n", "                ", "k", "=", "next", "(", "k", "for", "k", ",", "v", "in", "samplers", ".", "items", "(", ")", "if", "v", ".", "args", "<=", "set", "(", "sampled_vars", ".", "keys", "(", ")", ")", ")", "\n", "kwargs", "=", "{", "k2", ":", "sampled_vars", "[", "k2", "]", "for", "k2", "in", "samplers", "[", "k", "]", ".", "args", "}", "\n", "if", "k", "in", "inputs", ":", "kwargs", "[", "'inputs'", "]", "=", "inputs", "[", "k", "]", "\n", "if", "len", "(", "kwargs", ")", "==", "0", ":", "kwargs", "[", "'batch_size'", "]", "=", "batch_size", "\n", "sampled_vars", "[", "k", "]", "=", "samplers", "[", "k", "]", "(", "**", "kwargs", ")", ".", "value", "\n", "del", "samplers", "[", "k", "]", "\n", "", "", "except", "StopIteration", ":", "\n", "            ", "raise", "Exception", "(", "\"Can't find a valid sampling path\"", ")", "\n", "\n", "", "return", "Vars", "(", "**", "sampled_vars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.CustomDistribution.make": [[107, 108], ["NotImplementedError"], "methods", ["None"], ["    ", "def", "make", "(", "self", ",", "name", ")", ":", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.NormalPrior.__init__": [[133, 135], ["None"], "methods", ["None"], ["", "", "", "def", "__init__", "(", "self", ",", "sizes", "=", "None", ")", ":", "\n", "        ", "self", ".", "size", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.NormalPrior.make": [[136, 140], ["vhe.NormalPrior.F", "set", "vhe.Factor"], "methods", ["None"], ["", "def", "make", "(", "self", ",", "name", ")", ":", "\n", "        ", "module", "=", "self", ".", "F", "(", "name", ",", "self", ".", "size", ")", "\n", "args", "=", "set", "(", ")", "\n", "return", "Factor", "(", "module", ",", "name", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Result.__init__": [[142, 148], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "value", ",", "reparam_log_prob", "=", "0", ",", "reinforce_log_prob", "=", "None", ")", ":", "\n", "        ", "self", ".", "value", "=", "value", "\n", "self", ".", "reparam_log_prob", "=", "reparam_log_prob", "\n", "self", ".", "reinforce_log_prob", "=", "reinforce_log_prob", "\n", "self", ".", "log_prob", "=", "self", ".", "reparam_log_prob", "\n", "if", "self", ".", "reinforce_log_prob", "is", "not", "None", ":", "self", ".", "log_prob", "+=", "self", ".", "reinforce_log_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.__init__": [[152, 175], ["labels.items", "torch.is_tensor", "list", "torch.is_tensor", "list", "torch.LongTensor", "enumerate", "range", "torch.index_select", "set", "[].append", "len", "torch.LongTensor", "x.item", "enumerate", "range", "len", "j.item"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "batch_size", ",", "labels", ",", "k_shot", ",", "transforms", "=", "[", "]", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "mode", "=", "\"tensor\"", "if", "torch", ".", "is_tensor", "(", "data", ")", "else", "\"list\"", "\n", "if", "self", ".", "mode", "==", "\"tensor\"", ":", "\n", "            ", "self", ".", "select_data", "=", "lambda", "x_idx", ":", "torch", ".", "index_select", "(", "self", ".", "data", ",", "0", ",", "x_idx", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "select_data", "=", "lambda", "x_idx", ":", "[", "self", ".", "data", "[", "i", "]", "for", "i", "in", "x_idx", "]", "\n", "", "self", ".", "labels", "=", "{", "}", "# For each label type, a LongTensor assigning elements to labels", "\n", "self", ".", "label_idxs", "=", "{", "}", "# For each label type, for each label, a list of indices", "\n", "for", "k", ",", "v", "in", "labels", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "list", "(", "v", ")", "\n", "if", "torch", ".", "is_tensor", "(", "v", "[", "0", "]", ")", ":", "v", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "v", "]", "\n", "unique_oldlabels", "=", "list", "(", "set", "(", "v", ")", ")", "\n", "map_label", "=", "{", "oldlabel", ":", "label", "for", "label", ",", "oldlabel", "in", "enumerate", "(", "unique_oldlabels", ")", "}", "\n", "self", ".", "labels", "[", "k", "]", "=", "torch", ".", "LongTensor", "(", "[", "map_label", "[", "oldlabel", "]", "for", "oldlabel", "in", "v", "]", ")", "\n", "self", ".", "label_idxs", "[", "k", "]", "=", "{", "j", ":", "[", "]", "for", "j", "in", "range", "(", "len", "(", "unique_oldlabels", ")", ")", "}", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "self", ".", "labels", "[", "k", "]", ")", ":", "\n", "                ", "self", ".", "label_idxs", "[", "k", "]", "[", "j", ".", "item", "(", ")", "]", ".", "append", "(", "i", ")", "\n", "", "for", "j", "in", "range", "(", "len", "(", "unique_oldlabels", ")", ")", ":", "\n", "                ", "self", ".", "label_idxs", "[", "k", "]", "[", "j", "]", "=", "torch", ".", "LongTensor", "(", "self", ".", "label_idxs", "[", "k", "]", "[", "j", "]", ")", "\n", "", "", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "k_shot", "=", "k_shot", "\n", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.__iter__": [[176, 180], ["torch.randperm", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "next_i", "=", "0", "\n", "self", ".", "x_idx", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "data", ")", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.__next__": [[181, 183], ["vhe.DataLoader.next"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.next"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.next": [[184, 213], ["vhe.DataLoader.select_data", "labels.items", "VHEBatch", "len", "StopIteration", "torch.index_select", "transform.apply", "len", "numpy.random.choice", "vhe.DataLoader.select_data", "torch.cat", "range", "torch.LongTensor", "range", "v[].item", "len", "vhe.DataLoader.unsqueeze", "range", "range", "len"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.apply"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "next_i", "+", "self", ".", "batch_size", ">", "len", "(", "self", ".", "data", ")", ":", "\n", "            ", "raise", "StopIteration", "(", ")", "\n", "", "else", ":", "\n", "            ", "x_idx", "=", "self", ".", "x_idx", "[", "self", ".", "next_i", ":", "self", ".", "next_i", "+", "self", ".", "batch_size", "]", "\n", "self", ".", "next_i", "+=", "self", ".", "batch_size", "\n", "\n", "", "labels", "=", "{", "k", ":", "torch", ".", "index_select", "(", "self", ".", "labels", "[", "k", "]", ",", "0", ",", "x_idx", ")", "for", "k", "in", "self", ".", "labels", "}", "\n", "x", "=", "self", ".", "select_data", "(", "x_idx", ")", "\n", "\n", "inputs", "=", "{", "}", "\n", "sizes", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "labels", ".", "items", "(", ")", ":", "\n", "            ", "possibilities", "=", "[", "self", ".", "label_idxs", "[", "k", "]", "[", "v", "[", "i", "]", ".", "item", "(", ")", "]", "for", "i", "in", "range", "(", "len", "(", "x_idx", ")", ")", "]", "\n", "sizes", "[", "k", "]", "=", "[", "len", "(", "X", ")", "for", "X", "in", "possibilities", "]", "\n", "input_idx", "=", "[", "np", ".", "random", ".", "choice", "(", "X", ",", "size", "=", "self", ".", "k_shot", "[", "k", "]", ")", "for", "X", "in", "possibilities", "]", "\n", "_inputs", "=", "[", "\n", "self", ".", "select_data", "(", "torch", ".", "LongTensor", "(", "[", "I", "[", "j", "]", "for", "I", "in", "input_idx", "]", ")", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "k_shot", "[", "k", "]", ")", "]", "\n", "if", "self", ".", "mode", "==", "\"tensor\"", ":", "\n", "                ", "inputs", "[", "k", "]", "=", "torch", ".", "cat", "(", "[", "x", ".", "unsqueeze", "(", "1", ")", "for", "x", "in", "_inputs", "]", ",", "dim", "=", "1", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"list\"", ":", "\n", "                ", "inputs", "[", "k", "]", "=", "[", "[", "_inputs", "[", "j", "]", "[", "i", "]", "for", "j", "in", "range", "(", "self", ".", "k_shot", "[", "k", "]", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "_inputs", "[", "0", "]", ")", ")", "]", "\n", "\n", "", "", "batch", "=", "VHEBatch", "(", "target", "=", "x", ",", "inputs", "=", "inputs", ",", "sizes", "=", "sizes", ")", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "batch", "=", "transform", ".", "apply", "(", "batch", ")", "\n", "", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.__init__": [[222, 227], ["args.size"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "f", ",", "args", ",", "share_labels", "=", "None", ")", ":", "\n", "        ", "self", ".", "f", "=", "f", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "n_transforms", "=", "args", ".", "size", "(", "0", ")", "\n", "self", ".", "share_labels", "=", "[", "]", "if", "share_labels", "is", "None", "else", "share_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.transform_tensor": [[228, 235], ["t.new_zeros().random_().long", "vhe.Transform.args.index_select", "vhe.Transform.f", "t.new_zeros().random_", "t.new_zeros", "t.size"], "methods", ["None"], ["", "def", "transform_tensor", "(", "self", ",", "t", ")", ":", "\n", "# First dim of t is batch", "\n", "# Applies a random transform to every row of t", "\n", "        ", "transform_idxs", "=", "t", ".", "new_zeros", "(", "t", ".", "size", "(", "0", ")", ")", ".", "random_", "(", "0", ",", "self", ".", "n_transforms", ")", ".", "long", "(", ")", "\n", "transform_args", "=", "self", ".", "args", ".", "index_select", "(", "0", ",", "transform_idxs", ")", "\n", "\n", "return", "self", ".", "f", "(", "t", ",", "transform_args", ")", ",", "transform_args", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.apply": [[236, 252], ["vhe.Transform.transform_tensor", "batch.inputs.items", "VHEBatch", "D.reshape", "vhe.Transform.transform_tensor", "D_transformed.reshape", "torch.zeros", "range", "batch.sizes.items", "D.size", "D.size", "D.size", "D.size", "vhe.Transform.f", "D.size", "D.size", "D.size", "D_transformed.size"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.transform_tensor", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Transform.transform_tensor"], ["", "def", "apply", "(", "self", ",", "batch", ")", ":", "\n", "        ", "target", ",", "transform_args", "=", "self", ".", "transform_tensor", "(", "batch", ".", "target", ")", "\n", "inputs", "=", "{", "}", "\n", "for", "k", ",", "D", "in", "batch", ".", "inputs", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "self", ".", "share_labels", ":", "\n", "                ", "D_unrolled", "=", "D", ".", "reshape", "(", "D", ".", "size", "(", "0", ")", "*", "D", ".", "size", "(", "1", ")", ",", "*", "D", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "D_transformed", ",", "_", "=", "self", ".", "transform_tensor", "(", "D_unrolled", ")", "\n", "inputs", "[", "k", "]", "=", "D_transformed", ".", "reshape", "(", "D", ".", "size", "(", "0", ")", ",", "D", ".", "size", "(", "1", ")", ",", "*", "D_transformed", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "inputs", "[", "k", "]", "=", "torch", ".", "zeros", "(", "D", ".", "size", "(", ")", ")", "\n", "#apply the exact same transform to each row of D that was applied to target", "\n", "for", "i", "in", "range", "(", "D", ".", "size", "(", "1", ")", ")", ":", "\n", "                    ", "inputs", "[", "k", "]", "[", ":", ",", "i", "]", "=", "self", ".", "f", "(", "D", "[", ":", ",", "i", "]", ",", "transform_args", ")", "\n", "", "", "", "sizes", "=", "{", "k", ":", "[", "s", "*", "self", ".", "n_transforms", "for", "s", "in", "v", "]", "if", "k", "in", "self", ".", "share_labels", "else", "v", "\n", "for", "k", ",", "v", "in", "batch", ".", "sizes", ".", "items", "(", ")", "}", "\n", "return", "VHEBatch", "(", "target", "=", "target", ",", "inputs", "=", "inputs", ",", "sizes", "=", "sizes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Factor.__call__": [[257, 263], ["vhe.Factor.module.forward", "Result.__instancecheck__", "vhe.Result"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.forward"], ["    ", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "r", "=", "self", ".", "module", ".", "forward", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "Result", ".", "__instancecheck__", "(", "r", ")", ":", "\n", "            ", "return", "r", "\n", "", "else", ":", "\n", "            ", "return", "Result", "(", "*", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Factors.__init__": [[274, 306], ["kwargs.items", "collections.OrderedDict", "list", "list", "vhe.createFactorFromModule", "unordered_factors.append", "vhe.Factors.factors.keys", "any", "isinstance", "unordered_factors.append", "len", "next", "unordered_factors.remove", "Exception", "f.make", "vhe.createFactorFromModule", "set", "vhe.Factors.factors.values", "set", "collections.OrderedDict.keys"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.createFactorFromModule", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.DataLoader.next", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.NormalPrior.make", "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.createFactorFromModule"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "unordered_factors", "=", "[", "]", "\n", "for", "f", "in", "args", ":", "\n", "            ", "factor", "=", "createFactorFromModule", "(", "f", ")", "\n", "unordered_factors", ".", "append", "(", "factor", ")", "\n", "\n", "", "for", "name", ",", "f", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "any", "(", "f", ".", "name", "==", "name", "for", "f", "in", "unordered_factors", ")", ":", "\n", "                ", "if", "isinstance", "(", "f", ",", "CustomDistribution", ")", ":", "\n", "                    ", "factor", "=", "f", ".", "make", "(", "name", ")", "\n", "", "else", ":", "\n", "                    ", "factor", "=", "createFactorFromModule", "(", "f", ")", "\n", "assert", "factor", ".", "name", "==", "name", "\n", "", "unordered_factors", ".", "append", "(", "factor", ")", "\n", "\n", "", "", "factors", "=", "OrderedDict", "(", ")", "\n", "dependencies", "=", "{", "}", "\n", "try", ":", "\n", "            ", "while", "len", "(", "unordered_factors", ")", ">", "0", ":", "\n", "                ", "factor", "=", "next", "(", "f", "for", "f", "in", "unordered_factors", "if", "f", ".", "args", "<=", "set", "(", "factors", ".", "keys", "(", ")", ")", ")", "\n", "factors", "[", "factor", ".", "name", "]", "=", "factor", "\n", "dependencies", "[", "factor", ".", "name", "]", "=", "factor", ".", "args", "|", "set", "(", "[", "k", "for", "f2", "in", "factor", ".", "args", "for", "k", "in", "dependencies", "[", "f2", "]", "]", ")", "\n", "unordered_factors", ".", "remove", "(", "factor", ")", "\n", "", "", "except", "StopIteration", ":", "\n", "            ", "raise", "Exception", "(", "\"Can't make a tree out of factors: \"", "+", "\n", "\"\"", ".", "join", "(", "\"p(\"", "+", "k", "+", "\"|\"", "+", "\",\"", ".", "join", "(", "v", ".", "args", ")", "+", "\")\"", "for", "k", ",", "v", "in", "unordered_factors", ")", ")", "\n", "\n", "", "self", ".", "factors", "=", "factors", "\n", "self", ".", "dependencies", "=", "dependencies", "\n", "self", ".", "variables", "=", "list", "(", "self", ".", "factors", ".", "keys", "(", ")", ")", "\n", "self", ".", "modules", "=", "list", "(", "f", ".", "module", "for", "f", "in", "self", ".", "factors", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.Vars.__init__": [[319, 322], ["kwargs.items", "setattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "k", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.assert_msg": [[103, 105], ["Exception"], "function", ["None"], ["", "", "def", "assert_msg", "(", "condition", ",", "message", ")", ":", "\n", "    ", "if", "not", "condition", ":", "raise", "Exception", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.createFactorFromModule": [[265, 272], ["inspect.getargspec", "set", "vhe.Factor", "dir"], "function", ["None"], ["", "", "", "def", "createFactorFromModule", "(", "module", ")", ":", "\n", "    ", "assert", "'forward'", "in", "dir", "(", "module", ")", "\n", "spec", "=", "inspect", ".", "getargspec", "(", "module", ".", "forward", ")", "\n", "assert", "spec", ".", "defaults", "==", "(", "None", ",", ")", "\n", "name", "=", "spec", ".", "args", "[", "-", "1", "]", "\n", "args", "=", "set", "(", "[", "k", "for", "k", "in", "spec", ".", "args", "[", "1", ":", "-", "1", "]", "if", "k", "!=", "\"inputs\"", "]", ")", "#Not self, name or inputs ", "\n", "return", "Factor", "(", "module", ",", "name", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.vhe.asFactors": [[307, 317], ["Factors.__instancecheck__", "dict.__instancecheck__", "vhe.Factors", "dir", "vhe.Factors", "vhe.Factors", "defaults.items", "f.items"], "function", ["None"], ["", "", "def", "asFactors", "(", "f", ",", "defaults", "=", "{", "}", ")", ":", "\n", "    ", "if", "Factors", ".", "__instancecheck__", "(", "f", ")", ":", "\n", "        ", "return", "f", "\n", "", "elif", "dict", ".", "__instancecheck__", "(", "f", ")", ":", "\n", "        ", "kwargs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "defaults", ".", "items", "(", ")", "+", "f", ".", "items", "(", ")", "}", "\n", "return", "Factors", "(", "**", "kwargs", ")", "\n", "", "elif", "\"__iter__\"", "in", "dir", "(", "f", ")", ":", "\n", "        ", "return", "Factors", "(", "*", "f", ",", "**", "defaults", ")", "\n", "", "else", ":", "\n", "        ", "return", "Factors", "(", "f", ",", "**", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.__init__": [[109, 135], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "example_pixelcnn.Px.fc_loc[].weight.data.zero_", "example_pixelcnn.Px.fc_loc[].bias.data.copy_", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "pixelcnn.model.PixelCNN", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Regressor for the 3 * 2 affine matrix", "\n", "self", ".", "fc_loc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "10", "*", "3", "*", "3", ",", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "32", ",", "3", "*", "2", ")", "\n", ")", "\n", "# Initialize the weights/bias with identity transformation", "\n", "self", ".", "fc_loc", "[", "2", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "fc_loc", "[", "2", "]", ".", "bias", ".", "data", ".", "copy_", "(", "torch", ".", "tensor", "(", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "]", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "\n", "self", ".", "obs", "=", "(", "1", ",", "28", ",", "28", ")", "\n", "\n", "\n", "self", ".", "kernel", "=", "5", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "self", ".", "kernel", "-", "1", ",", "0", ",", "self", ".", "kernel", "-", "1", ",", "0", ")", ")", "\n", "self", ".", "cond_conv_1", "=", "nn", ".", "Conv2d", "(", "c_dim", ",", "args", ".", "nr_filters", "*", "2", ",", "self", ".", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "cond_conv_2", "=", "nn", ".", "Conv2d", "(", "args", ".", "nr_filters", "*", "2", ",", "args", ".", "nr_filters", "*", "2", ",", "self", ".", "kernel", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "self", ".", "cond_conv_3", "=", "nn", ".", "Conv2d", "(", "args", ".", "nr_filters", "*", "2", ",", "args", ".", "nr_filters", "*", "2", ",", "self", ".", "kernel", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "model", "=", "PixelCNN", "(", "nr_resnet", "=", "args", ".", "nr_resnet", ",", "nr_filters", "=", "args", ".", "nr_filters", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "nr_softmax_bins", "=", "args", ".", "nr_softmax_bins", ",", "mode", "=", "\"softmax\"", ")", "\n", "assert", "args", ".", "mode", "==", "\"softmax\"", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.loss_op": [[137, 138], ["pixelcnn.utils.softmax_loss_1d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.softmax_loss_1d"], ["", "def", "loss_op", "(", "self", ",", "real", ",", "fake", ")", ":", "return", "softmax_loss_1d", "(", "real", ",", "fake", ")", "\n", "def", "sample_op", "(", "self", ",", "x", ")", ":", "return", "sample_from_softmax_1d", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.sample_op": [[138, 139], ["pixelcnn.utils.sample_from_softmax_1d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_softmax_1d"], ["def", "sample_op", "(", "self", ",", "x", ")", ":", "return", "sample_from_softmax_1d", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.sample": [[140, 152], ["model.train", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "data.cuda.cuda.cuda", "range", "range", "Variable", "model", "example_pixelcnn.Px.sample_op"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample_op"], ["def", "sample", "(", "self", ",", "model", ",", "cond_blocks", "=", "None", ")", ":", "\n", "\t\t", "assert", "cond_blocks", "is", "not", "None", "\n", "model", ".", "train", "(", "False", ")", "\n", "data", "=", "torch", ".", "zeros", "(", "sample_batch_size", ",", "self", ".", "obs", "[", "0", "]", ",", "self", ".", "obs", "[", "1", "]", ",", "self", ".", "obs", "[", "2", "]", ")", "\n", "data", "=", "data", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "obs", "[", "1", "]", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "self", ".", "obs", "[", "2", "]", ")", ":", "\n", "\t\t\t\t", "data_v", "=", "Variable", "(", "data", ",", "volatile", "=", "True", ")", "\n", "out", "=", "model", "(", "data_v", ",", "sample", "=", "True", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "out_sample", "=", "self", ".", "sample_op", "(", "out", ")", "\n", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "=", "out_sample", ".", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "\n", "", "", "return", "data", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.stn": [[154, 161], ["z.view", "example_pixelcnn.Px.fc_loc", "theta.view.view.view", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "c.size"], "methods", ["None"], ["", "def", "stn", "(", "self", ",", "z", ",", "c", ")", ":", "\n", "\t\t", "zs", "=", "z", ".", "view", "(", "-", "1", ",", "10", "*", "3", "*", "3", ")", "\n", "theta", "=", "self", ".", "fc_loc", "(", "zs", ")", "\n", "theta", "=", "theta", ".", "view", "(", "-", "1", ",", "2", ",", "3", ")", "\n", "grid", "=", "F", ".", "affine_grid", "(", "theta", ",", "c", ".", "size", "(", ")", ")", "\n", "cond", "=", "F", ".", "grid_sample", "(", "c", ",", "grid", ")", "\n", "return", "cond", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Px.forward": [[162, 177], ["example_pixelcnn.Px.stn", "example_pixelcnn.Px.cond_conv_1", "example_pixelcnn.Px.cond_conv_2", "example_pixelcnn.Px.cond_conv_3", "example_pixelcnn.Px.pad", "example_pixelcnn.Px.pad", "example_pixelcnn.Px.pad", "example_pixelcnn.Px.sample", "example_pixelcnn.Px.loss_op", "example_pixelcnn.Px.loss_op", "example_pixelcnn.Px.model"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qc_stn.stn", "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample", "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.loss_op", "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.loss_op"], ["", "def", "forward", "(", "self", ",", "c", ",", "z", ",", "x", "=", "None", ")", ":", "\n", "\t\t", "cond", "=", "self", ".", "stn", "(", "z", ",", "c", ")", "\n", "\n", "cond_blocks", "=", "{", "}", "\n", "cond_blocks", "[", "(", "28", ",", "28", ")", "]", "=", "self", ".", "cond_conv_1", "(", "self", ".", "pad", "(", "cond", ")", ")", "\n", "cond_blocks", "[", "(", "14", ",", "14", ")", "]", "=", "self", ".", "cond_conv_2", "(", "self", ".", "pad", "(", "cond_blocks", "[", "(", "28", ",", "28", ")", "]", ")", ")", "\n", "cond_blocks", "[", "(", "7", ",", "7", ")", "]", "=", "self", ".", "cond_conv_3", "(", "self", ".", "pad", "(", "cond_blocks", "[", "(", "14", ",", "14", ")", "]", ")", ")", "\n", "\n", "\n", "if", "x", "is", "None", ":", "\n", "\t\t\t", "x", ",", "dist", "=", "self", ".", "sample", "(", "self", ".", "model", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "return", "x", ",", "-", "self", ".", "loss_op", "(", "x", ",", "dist", ")", "\n", "", "else", ":", "\n", "\n", "\t\t\t", "return", "x", ",", "-", "self", ".", "loss_op", "(", "x", ",", "self", ".", "model", "(", "x", ",", "cond_blocks", "=", "cond_blocks", ",", "sample", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qc_stn.__init__": [[179, 214], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "example_pixelcnn.Qc_stn.fc_loc[].weight.data.zero_", "example_pixelcnn.Qc_stn.fc_loc[].bias.data.copy_", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Softplus", "torch.Softplus", "torch.Softplus", "torch.Softplus", "torch.Softplus", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "Qc_stn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "10", ",", "kernel_size", "=", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "10", ",", "20", ",", "kernel_size", "=", "5", ")", "\n", "self", ".", "conv2_drop", "=", "nn", ".", "Dropout2d", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "320", ",", "50", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "50", ",", "10", ")", "\n", "\n", "# Spatial transformer localization-network", "\n", "self", ".", "localization", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "8", ",", "kernel_size", "=", "7", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", ",", "10", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n", "\n", "# Regressor for the 3 * 2 affine matrix", "\n", "self", ".", "fc_loc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "10", "*", "3", "*", "3", ",", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "32", ",", "3", "*", "2", ")", "\n", ")", "\n", "\n", "# Initialize the weights/bias with identity transformation", "\n", "self", ".", "fc_loc", "[", "2", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "fc_loc", "[", "2", "]", ".", "bias", ".", "data", ".", "copy_", "(", "torch", ".", "tensor", "(", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "]", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "\n", "self", ".", "kernel", "=", "5", "\n", "self", ".", "c_dim", "=", "10", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "self", ".", "kernel", "-", "1", ",", "0", ",", "self", ".", "kernel", "-", "1", ",", "0", ")", ")", "\n", "self", ".", "conv_post_stn", "=", "nn", ".", "Sequential", "(", "self", ".", "pad", ",", "nn", ".", "Conv2d", "(", "1", ",", "c_dim", ",", "self", ".", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv_mu", "=", "nn", ".", "Sequential", "(", "self", ".", "pad", ",", "nn", ".", "Conv2d", "(", "c_dim", ",", "c_dim", ",", "self", ".", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "self", ".", "conv_sigma", "=", "nn", ".", "Sequential", "(", "self", ".", "pad", ",", "nn", ".", "Conv2d", "(", "c_dim", ",", "c_dim", ",", "self", ".", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "nn", ".", "Softplus", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qc_stn.stn": [[216, 224], ["example_pixelcnn.Qc_stn.localization", "xs.view.view.view", "example_pixelcnn.Qc_stn.fc_loc", "theta.view.view.view", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample.size"], "methods", ["None"], ["", "def", "stn", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "xs", "=", "self", ".", "localization", "(", "x", ")", "\n", "xs", "=", "xs", ".", "view", "(", "-", "1", ",", "10", "*", "3", "*", "3", ")", "\n", "theta", "=", "self", ".", "fc_loc", "(", "xs", ")", "\n", "theta", "=", "theta", ".", "view", "(", "-", "1", ",", "2", ",", "3", ")", "\n", "grid", "=", "F", ".", "affine_grid", "(", "theta", ",", "x", ".", "size", "(", ")", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qc_stn.forward": [[225, 236], ["example_pixelcnn.Qc_stn.conv_mu", "example_pixelcnn.Qc_stn.conv_sigma", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "example_pixelcnn.Qc_stn.stn", "example_pixelcnn.Qc_stn.conv_post_stn", "sum", "len", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "range", "inputs.size", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qc_stn.stn"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "c", "=", "None", ")", ":", "\n", "# transform the input", "\n", "\t\t", "xs", "=", "[", "self", ".", "stn", "(", "inputs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ")", "for", "i", "in", "range", "(", "inputs", ".", "size", "(", "1", ")", ")", "]", "\n", "\n", "embs", "=", "[", "self", ".", "conv_post_stn", "(", "x", ")", "for", "x", "in", "xs", "]", "\n", "emb", "=", "sum", "(", "embs", ")", "/", "len", "(", "embs", ")", "\n", "mu", "=", "self", ".", "conv_mu", "(", "emb", ")", "\n", "sigma", "=", "self", ".", "conv_sigma", "(", "emb", ")", "\n", "dist", "=", "Normal", "(", "mu", ",", "sigma", ")", "\n", "if", "c", "is", "None", ":", "c", "=", "dist", ".", "rsample", "(", ")", "\n", "return", "c", ",", "dist", ".", "log_prob", "(", "c", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qz.__init__": [[239, 258], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "Qz", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "localization_mu", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "8", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", ",", "10", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "self", ".", "localization_sigma", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "8", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", ",", "10", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Softmax", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Qz.forward": [[260, 269], ["inputs.view.view.view", "example_pixelcnn.Qz.localization_mu", "example_pixelcnn.Qz.localization_sigma", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum().sum", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob().sum", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.log_prob"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "c", ",", "z", "=", "None", ")", ":", "\n", "\t\t", "inputs", "=", "inputs", ".", "view", "(", "-", "1", ",", "1", ",", "28", ",", "28", ")", "#huh?", "\n", "mu", "=", "self", ".", "localization_mu", "(", "inputs", ")", "\n", "sigma", "=", "self", ".", "localization_sigma", "(", "inputs", ")", "\n", "dist", "=", "Normal", "(", "mu", ",", "sigma", ")", "\n", "if", "z", "is", "None", ":", "\n", "\t\t\t", "z", "=", "dist", ".", "rsample", "(", ")", "\n", "", "score", "=", "dist", ".", "log_prob", "(", "z", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "return", "z", ",", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.__init__": [[271, 279], ["torch.Module.__init__", "pixelcnn.model.PixelCNN", "builtins.super", "int", "int"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "Pc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "PixelCNN", "(", "nr_resnet", "=", "int", "(", "args", ".", "nr_resnet", "/", "2", ")", ",", "nr_filters", "=", "int", "(", "args", ".", "nr_filters", "/", "2", ")", ",", "\n", "input_channels", "=", "10", ",", "mode", "=", "\"gaussian\"", ")", "\n", "\n", "\n", "self", ".", "obs", "=", "(", "10", ",", "28", ",", "28", ")", "if", "'mnist'", "in", "args", ".", "dataset", "or", "'omni'", "in", "args", ".", "dataset", "else", "(", "3", ",", "32", ",", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.loss_op": [[280, 281], ["pixelcnn.utils.gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.gaussian_loss"], ["", "def", "loss_op", "(", "self", ",", "real", ",", "fake", ")", ":", "return", "gaussian_loss", "(", "real", ",", "fake", ")", "\n", "def", "sample_op", "(", "self", ",", "x", ")", ":", "return", "sample_from_gaussian", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample_op": [[281, 282], ["pixelcnn.utils.sample_from_gaussian"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_gaussian"], ["def", "sample_op", "(", "self", ",", "x", ")", ":", "return", "sample_from_gaussian", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample": [[283, 295], ["model.train", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "data.cuda.cuda.cuda", "range", "range", "Variable", "model", "example_pixelcnn.Pc.sample_op"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample_op"], ["def", "sample", "(", "self", ",", "model", ")", ":", "\n", "\t\t", "assert", "latents", "is", "not", "None", "\n", "model", ".", "train", "(", "False", ")", "\n", "data", "=", "torch", ".", "zeros", "(", "sample_batch_size", ",", "self", ".", "obs", "[", "0", "]", ",", "self", ".", "obs", "[", "1", "]", ",", "self", ".", "obs", "[", "2", "]", ")", "#TODO: fix sample batch size", "\n", "data", "=", "data", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "obs", "[", "1", "]", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "self", ".", "obs", "[", "2", "]", ")", ":", "\n", "\t\t\t\t", "data_v", "=", "Variable", "(", "data", ",", "volatile", "=", "True", ")", "\n", "out", "=", "model", "(", "data_v", ",", "sample", "=", "True", ")", "\n", "out_sample", "=", "self", ".", "sample_op", "(", "out", ")", "\n", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "=", "out_sample", ".", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "\n", "", "", "return", "data", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.forward": [[297, 303], ["example_pixelcnn.Pc.sample", "example_pixelcnn.Pc.loss_op", "example_pixelcnn.Pc.loss_op", "example_pixelcnn.Pc.model"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.sample", "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.loss_op", "home.repos.pwc.inspect_result.insperatum_vhe.None.example_pixelcnn.Pc.loss_op"], ["", "def", "forward", "(", "self", ",", "c", "=", "None", ")", ":", "\n", "\t\t", "if", "c", "is", "None", ":", "\n", "\t\t\t", "c", ",", "dist", "=", "self", ".", "sample", "(", "self", ".", "model", ")", "\n", "return", "c", ",", "-", "self", ".", "loss_op", "(", "c", ",", "dist", ")", "\n", "", "else", ":", "\n", "\t\t\t", "return", "c", ",", "-", "self", ".", "loss_op", "(", "c", ",", "self", ".", "model", "(", "c", ",", "sample", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.nin.__init__": [[11, 15], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "nin", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lin_a", "=", "wn", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ")", "\n", "self", ".", "dim_out", "=", "dim_out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.nin.forward": [[16, 27], ["x.permute.permute.permute", "layers.nin.lin_a", "out.view.view.view", "out.view.view.permute", "int", "x.permute.permute.contiguous().view", "x.permute.permute.size", "x.permute.permute.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "og_x", "=", "x", "\n", "# assumes pytorch ordering", "\n", "\"\"\" a network in network layer (1x1 CONV) \"\"\"", "\n", "# TODO : try with original ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "shp", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "out", "=", "self", ".", "lin_a", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "shp", "[", "0", "]", "*", "shp", "[", "1", "]", "*", "shp", "[", "2", "]", ",", "shp", "[", "3", "]", ")", ")", "\n", "shp", "[", "-", "1", "]", "=", "self", ".", "dim_out", "\n", "out", "=", "out", ".", "view", "(", "shp", ")", "\n", "return", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_shifted_conv2d.__init__": [[30, 50], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "int", "int", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "utils.down_shift", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__", "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.down_shift"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_down", "=", "False", ",", "norm", "=", "'weight_norm'", ")", ":", "\n", "        ", "super", "(", "down_shifted_conv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm", "in", "[", "None", ",", "'batch_norm'", ",", "'weight_norm'", "]", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", ")", "\n", "self", ".", "shift_output_down", "=", "shift_output_down", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "int", "(", "(", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "# pad left", "\n", "int", "(", "(", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "# pad right", "\n", "filter_size", "[", "0", "]", "-", "1", ",", "# pad top", "\n", "0", ")", ")", "# pad down", "\n", "\n", "if", "norm", "==", "'weight_norm'", ":", "\n", "            ", "self", ".", "conv", "==", "wn", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_filters_out", ")", "\n", "\n", "", "if", "shift_output_down", ":", "\n", "            ", "self", ".", "down_shift", "=", "lambda", "x", ":", "down_shift", "(", "x", ",", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_shifted_conv2d.forward": [[51, 56], ["layers.down_shifted_conv2d.pad", "layers.down_shifted_conv2d.conv", "layers.down_shifted_conv2d.bn", "layers.down_shifted_conv2d.down_shift"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.down_shift"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pad", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "if", "self", ".", "norm", "==", "'batch_norm'", "else", "x", "\n", "return", "self", ".", "down_shift", "(", "x", ")", "if", "self", ".", "shift_output_down", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_shifted_deconv2d.__init__": [[59, 65], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "down_shifted_deconv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv", "=", "wn", "(", "nn", ".", "ConvTranspose2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", ",", "\n", "output_padding", "=", "1", ")", ")", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_shifted_deconv2d.forward": [[66, 71], ["layers.down_shifted_deconv2d.deconv", "int", "layers.down_shifted_deconv2d.size", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv", "(", "x", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "return", "x", "[", ":", ",", ":", ",", ":", "(", "xs", "[", "2", "]", "-", "self", ".", "filter_size", "[", "0", "]", "+", "1", ")", ",", "\n", "int", "(", "(", "self", ".", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ":", "(", "xs", "[", "3", "]", "-", "int", "(", "(", "self", ".", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_right_shifted_conv2d.__init__": [[74, 91], ["torch.Module.__init__", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "utils.right_shift", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__", "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.right_shift"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_right", "=", "False", ",", "norm", "=", "'weight_norm'", ")", ":", "\n", "        ", "super", "(", "down_right_shifted_conv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm", "in", "[", "None", ",", "'batch_norm'", ",", "'weight_norm'", "]", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "filter_size", "[", "1", "]", "-", "1", ",", "0", ",", "filter_size", "[", "0", "]", "-", "1", ",", "0", ")", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "shift_output_right", "=", "shift_output_right", "\n", "self", ".", "norm", "=", "norm", "\n", "\n", "if", "norm", "==", "'weight_norm'", ":", "\n", "            ", "self", ".", "conv", "==", "wn", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_filters_out", ")", "\n", "\n", "", "if", "shift_output_right", ":", "\n", "            ", "self", ".", "right_shift", "=", "lambda", "x", ":", "right_shift", "(", "x", ",", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_right_shifted_conv2d.forward": [[92, 97], ["layers.down_right_shifted_conv2d.pad", "layers.down_right_shifted_conv2d.conv", "layers.down_right_shifted_conv2d.bn", "layers.down_right_shifted_conv2d.right_shift"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.right_shift"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pad", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "if", "self", ".", "norm", "==", "'batch_norm'", "else", "x", "\n", "return", "self", ".", "right_shift", "(", "x", ")", "if", "self", ".", "shift_output_right", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_right_shifted_deconv2d.__init__": [[100, 107], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_right", "=", "False", ")", ":", "\n", "        ", "super", "(", "down_right_shifted_deconv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv", "=", "wn", "(", "nn", ".", "ConvTranspose2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "\n", "stride", ",", "output_padding", "=", "1", ")", ")", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.down_right_shifted_deconv2d.forward": [[108, 113], ["layers.down_right_shifted_deconv2d.deconv", "int", "layers.down_right_shifted_deconv2d.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv", "(", "x", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "(", "xs", "[", "2", "]", "-", "self", ".", "filter_size", "[", "0", "]", "+", "1", ")", ":", ",", ":", "(", "xs", "[", "3", "]", "-", "self", ".", "filter_size", "[", "1", "]", "+", "1", ")", "]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.gated_resnet.__init__": [[121, 132], ["torch.Module.__init__", "conv_op", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "conv_op", "layers.nin"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters", ",", "conv_op", ",", "nonlinearity", "=", "concat_elu", ",", "skip_connection", "=", "0", ")", ":", "\n", "        ", "super", "(", "gated_resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "skip_connection", "=", "skip_connection", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "self", ".", "conv_input", "=", "conv_op", "(", "2", "*", "num_filters", ",", "num_filters", ")", "# cuz of concat elu", "\n", "\n", "if", "skip_connection", "!=", "0", ":", "\n", "            ", "self", ".", "nin_skip", "=", "nin", "(", "2", "*", "skip_connection", "*", "num_filters", ",", "num_filters", ")", "\n", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout2d", "(", "0.5", ")", "\n", "self", ".", "conv_out", "=", "conv_op", "(", "2", "*", "num_filters", ",", "2", "*", "num_filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.layers.gated_resnet.forward": [[134, 150], ["layers.gated_resnet.conv_input", "layers.gated_resnet.nonlinearity", "layers.gated_resnet.dropout", "layers.gated_resnet.conv_out", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "layers.gated_resnet.nonlinearity", "layers.gated_resnet.nin_skip", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "layers.gated_resnet.nonlinearity", "layers.gated_resnet.size", "layers.gated_resnet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "og_x", ",", "a", "=", "None", ",", "cond_blocks", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_input", "(", "self", ".", "nonlinearity", "(", "og_x", ")", ")", "\n", "if", "a", "is", "not", "None", ":", "\n", "            ", "x", "+=", "self", ".", "nin_skip", "(", "self", ".", "nonlinearity", "(", "a", ")", ")", "\n", "", "x", "=", "self", ".", "nonlinearity", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "\n", "if", "cond_blocks", "is", "not", "None", ":", "\n", "            ", "conditioning_block", "=", "cond_blocks", "[", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "]", "\n", "\n", "x", "+=", "conditioning_block", "\n", "\n", "", "a", ",", "b", "=", "torch", ".", "chunk", "(", "x", ",", "2", ",", "dim", "=", "1", ")", "\n", "c3", "=", "a", "*", "F", ".", "sigmoid", "(", "b", ")", "\n", "return", "og_x", "+", "c3", "\n", "", "", ""]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNNLayer_up.__init__": [[11, 23], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.gated_resnet", "layers.gated_resnet", "range", "range"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", ",", "nr_filters", ",", "resnet_nonlinearity", ")", ":", "\n", "        ", "super", "(", "PixelCNNLayer_up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nr_resnet", "=", "nr_resnet", "\n", "# stream from pixels above", "\n", "self", ".", "u_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "0", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n", "# stream from pixels above and to thes left", "\n", "self", ".", "ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_right_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNNLayer_up.forward": [[24, 34], ["range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "u", ",", "ul", ",", "cond_blocks", "=", "None", ")", ":", "\n", "        ", "u_list", ",", "ul_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "nr_resnet", ")", ":", "\n", "            ", "u", "=", "self", ".", "u_stream", "[", "i", "]", "(", "u", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "ul", "=", "self", ".", "ul_stream", "[", "i", "]", "(", "ul", ",", "a", "=", "u", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "u_list", "+=", "[", "u", "]", "\n", "ul_list", "+=", "[", "ul", "]", "\n", "\n", "", "return", "u_list", ",", "ul_list", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNNLayer_down.__init__": [[37, 49], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.gated_resnet", "layers.gated_resnet", "range", "range"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", ",", "nr_filters", ",", "resnet_nonlinearity", ")", ":", "\n", "        ", "super", "(", "PixelCNNLayer_down", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nr_resnet", "=", "nr_resnet", "\n", "# stream from pixels above", "\n", "self", ".", "u_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n", "# stream from pixels above and to thes left", "\n", "self", ".", "ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_right_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "2", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNNLayer_down.forward": [[50, 56], ["range", "u_list.pop", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ul_list.pop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "u", ",", "ul", ",", "u_list", ",", "ul_list", ",", "cond_blocks", "=", "None", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "nr_resnet", ")", ":", "\n", "            ", "u", "=", "self", ".", "u_stream", "[", "i", "]", "(", "u", ",", "a", "=", "u_list", ".", "pop", "(", ")", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "ul", "=", "self", ".", "ul_stream", "[", "i", "]", "(", "ul", ",", "a", "=", "torch", ".", "cat", "(", "(", "u", ",", "ul_list", ".", "pop", "(", ")", ")", ",", "1", ")", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "\n", "", "return", "u", ",", "ul", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__": [[59, 116], ["torch.Module.__init__", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.down_shifted_conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "Exception", "layers.nin", "utils.concat_elu", "model.PixelCNNLayer_down", "model.PixelCNNLayer_up", "layers.down_shifted_conv2d", "layers.down_right_shifted_conv2d", "layers.down_shifted_deconv2d", "layers.down_right_shifted_deconv2d", "layers.down_shifted_conv2d", "layers.down_right_shifted_conv2d", "layers.nin", "range", "range", "range", "range", "range", "range", "layers.nin"], "methods", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.__init__", "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.concat_elu"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", "=", "5", ",", "nr_filters", "=", "80", ",", "mode", "=", "\"logistic_mix\"", ",", "nr_logistic_mix", "=", "None", ",", "nr_softmax_bins", "=", "None", ",", "\n", "resnet_nonlinearity", "=", "'concat_elu'", ",", "input_channels", "=", "3", ")", ":", "\n", "        ", "\"\"\"\n        mode can be 'logistic_mix', 'softmax' or 'gaussian'\n        \"\"\"", "\n", "\n", "super", "(", "PixelCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "if", "resnet_nonlinearity", "==", "'concat_elu'", ":", "\n", "            ", "self", ".", "resnet_nonlinearity", "=", "lambda", "x", ":", "concat_elu", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'right now only concat elu is supported as resnet nonlinearity.'", ")", "\n", "\n", "", "self", ".", "nr_filters", "=", "nr_filters", "\n", "self", ".", "input_channels", "=", "input_channels", "\n", "self", ".", "nr_logistic_mix", "=", "nr_logistic_mix", "\n", "self", ".", "nr_softmax_bins", "=", "nr_softmax_bins", "\n", "self", ".", "right_shift_pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "down_shift_pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n", "down_nr_resnet", "=", "[", "nr_resnet", "]", "+", "[", "nr_resnet", "+", "1", "]", "*", "2", "\n", "self", ".", "down_layers", "=", "nn", ".", "ModuleList", "(", "[", "PixelCNNLayer_down", "(", "down_nr_resnet", "[", "i", "]", ",", "nr_filters", ",", "\n", "self", ".", "resnet_nonlinearity", ")", "for", "i", "in", "range", "(", "3", ")", "]", ")", "\n", "\n", "self", ".", "up_layers", "=", "nn", ".", "ModuleList", "(", "[", "PixelCNNLayer_up", "(", "nr_resnet", ",", "nr_filters", ",", "\n", "self", ".", "resnet_nonlinearity", ")", "for", "_", "in", "range", "(", "3", ")", "]", ")", "\n", "\n", "self", ".", "downsize_u_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_conv2d", "(", "nr_filters", ",", "nr_filters", ",", "\n", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "downsize_ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_right_shifted_conv2d", "(", "nr_filters", ",", "\n", "nr_filters", ",", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "upsize_u_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_deconv2d", "(", "nr_filters", ",", "nr_filters", ",", "\n", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "upsize_ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_right_shifted_deconv2d", "(", "nr_filters", ",", "\n", "nr_filters", ",", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "u_init", "=", "down_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "\n", "shift_output_down", "=", "True", ")", "\n", "\n", "self", ".", "ul_init", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "\n", "filter_size", "=", "(", "1", ",", "3", ")", ",", "shift_output_down", "=", "True", ")", ",", "\n", "down_right_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "\n", "filter_size", "=", "(", "2", ",", "1", ")", ",", "shift_output_right", "=", "True", ")", "]", ")", "\n", "\n", "if", "self", ".", "mode", "==", "\"logistic_mix\"", ":", "\n", "            ", "num_mix", "=", "3", "if", "self", ".", "input_channels", "==", "1", "else", "10", "\n", "self", ".", "nin_out", "=", "nin", "(", "nr_filters", ",", "num_mix", "*", "nr_logistic_mix", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "            ", "self", ".", "nin_out", "=", "nin", "(", "nr_filters", ",", "self", ".", "input_channels", "*", "nr_softmax_bins", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"gaussian\"", ":", "\n", "            ", "self", ".", "nin_out", "=", "nin", "(", "nr_filters", ",", "self", ".", "input_channels", "*", "2", ")", "#mu, sigma", "\n", "", "self", ".", "init_padding", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.model.PixelCNN.forward": [[118, 164], ["range", "u_list.pop", "ul_list.pop", "range", "model.PixelCNN.nin_out", "pdb.set_trace", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.PixelCNN.u_init", "torch.elu", "torch.elu", "torch.elu", "len", "len", "int", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "int", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "cond_blocks", "=", "None", ",", "sample", "=", "False", ")", ":", "\n", "# similar as done in the tf repo :  ", "\n", "        ", "if", "self", ".", "init_padding", "is", "None", "and", "not", "sample", ":", "\n", "            ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "padding", "=", "Variable", "(", "torch", ".", "ones", "(", "xs", "[", "0", "]", ",", "1", ",", "xs", "[", "2", "]", ",", "xs", "[", "3", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "init_padding", "=", "padding", ".", "cuda", "(", ")", "if", "x", ".", "is_cuda", "else", "padding", "\n", "\n", "", "if", "sample", ":", "\n", "            ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "padding", "=", "Variable", "(", "torch", ".", "ones", "(", "xs", "[", "0", "]", ",", "1", ",", "xs", "[", "2", "]", ",", "xs", "[", "3", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "padding", "=", "padding", ".", "cuda", "(", ")", "if", "x", ".", "is_cuda", "else", "padding", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "padding", ")", ",", "1", ")", "\n", "\n", "###      UP PASS    ###", "\n", "", "x", "=", "x", "if", "sample", "else", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "init_padding", ")", ",", "1", ")", "\n", "u_list", "=", "[", "self", ".", "u_init", "(", "x", ")", "]", "\n", "ul_list", "=", "[", "self", ".", "ul_init", "[", "0", "]", "(", "x", ")", "+", "self", ".", "ul_init", "[", "1", "]", "(", "x", ")", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "# resnet block", "\n", "            ", "u_out", ",", "ul_out", "=", "self", ".", "up_layers", "[", "i", "]", "(", "u_list", "[", "-", "1", "]", ",", "ul_list", "[", "-", "1", "]", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "u_list", "+=", "u_out", "\n", "ul_list", "+=", "ul_out", "\n", "\n", "if", "i", "!=", "2", ":", "\n", "# downscale (only twice)", "\n", "                ", "u_list", "+=", "[", "self", ".", "downsize_u_stream", "[", "i", "]", "(", "u_list", "[", "-", "1", "]", ")", "]", "\n", "ul_list", "+=", "[", "self", ".", "downsize_ul_stream", "[", "i", "]", "(", "ul_list", "[", "-", "1", "]", ")", "]", "\n", "\n", "###    DOWN PASS    ###", "\n", "", "", "u", "=", "u_list", ".", "pop", "(", ")", "\n", "ul", "=", "ul_list", ".", "pop", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "# resnet block", "\n", "            ", "u", ",", "ul", "=", "self", ".", "down_layers", "[", "i", "]", "(", "u", ",", "ul", ",", "u_list", ",", "ul_list", ",", "cond_blocks", "=", "cond_blocks", ")", "\n", "\n", "# upscale (only twice)", "\n", "if", "i", "!=", "2", ":", "\n", "                ", "u", "=", "self", ".", "upsize_u_stream", "[", "i", "]", "(", "u", ")", "\n", "ul", "=", "self", ".", "upsize_ul_stream", "[", "i", "]", "(", "ul", ")", "\n", "\n", "", "", "x_out", "=", "self", ".", "nin_out", "(", "F", ".", "elu", "(", "ul", ")", ")", "\n", "\n", "assert", "len", "(", "u_list", ")", "==", "len", "(", "ul_list", ")", "==", "0", ",", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "return", "x_out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.concat_elu": [[8, 13], ["torch.elu", "len", "torch.cat", "torch.cat", "torch.cat", "x.size"], "function", ["None"], ["def", "concat_elu", "(", "x", ")", ":", "\n", "    ", "\"\"\" like concatenated ReLU (http://arxiv.org/abs/1603.05201), but then with ELU \"\"\"", "\n", "# Pytorch ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "3", "\n", "return", "F", ".", "elu", "(", "torch", ".", "cat", "(", "[", "x", ",", "-", "x", "]", ",", "dim", "=", "axis", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_sum_exp": [[15, 22], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "len", "torch.log", "torch.log", "torch.log", "x.size", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "log_sum_exp", "(", "x", ")", ":", "\n", "    ", "\"\"\" numerically stable log_sum_exp implementation that prevents overflow \"\"\"", "\n", "# TF ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "1", "\n", "m", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ")", "\n", "m2", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", "\n", "return", "m", "+", "torch", ".", "log", "(", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "x", "-", "m2", ")", ",", "dim", "=", "axis", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_prob_from_logits": [[23, 29], ["torch.max", "torch.max", "torch.max", "len", "torch.log", "torch.log", "torch.log", "x.size", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "log_prob_from_logits", "(", "x", ")", ":", "\n", "    ", "\"\"\" numerically stable log_softmax implementation that prevents overflow \"\"\"", "\n", "# TF ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "1", "\n", "m", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", "\n", "return", "x", "-", "m", "-", "torch", ".", "log", "(", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "x", "-", "m", ")", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.discretized_mix_logistic_loss": [[30, 98], ["x.contiguous.permute", "l[].contiguous().view.permute", "int", "l[].contiguous().view", "torch.clamp", "torch.clamp", "torch.clamp", "torch.tanh", "x.contiguous.contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "utils.log_sum_exp", "int", "int", "x.contiguous.unsqueeze", "torch.autograd.Variable", "torch.softplus", "torch.softplus", "torch.sum", "torch.sum", "torch.sum", "utils.log_prob_from_logits", "torch.sum", "torch.sum", "torch.sum", "x.contiguous.size", "l[].contiguous().view.size", "l[].contiguous", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "means[].unsqueeze", "torch.softplus", "torch.log", "torch.log", "torch.log", "log_sum_exp.view", "torch.clamp", "torch.clamp", "torch.clamp", "numpy.log", "log_sum_exp.size", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_sum_exp", "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_prob_from_logits"], ["", "def", "discretized_mix_logistic_loss", "(", "x", ",", "l", ")", ":", "\n", "    ", "\"\"\" log-likelihood for mixture of discretized logistics, assumes the data has been rescaled to [-1,1] interval \"\"\"", "\n", "# Pytorch ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "\n", "# here and below: unpacking the params of the mixture of logistics", "\n", "nr_mix", "=", "int", "(", "ls", "[", "-", "1", "]", "/", "10", ")", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "3", "]", ")", "# 3 for mean, scale, coef", "\n", "means", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "# log_scales = torch.max(l[:, :, :, :, nr_mix:2 * nr_mix], -7.)", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", ",", "min", "=", "-", "7.", ")", "\n", "\n", "coeffs", "=", "F", ".", "tanh", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "2", "*", "nr_mix", ":", "3", "*", "nr_mix", "]", ")", "\n", "# here and below: getting the means and adjusting them based on preceding", "\n", "# sub-pixels", "\n", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "unsqueeze", "(", "-", "1", ")", "+", "Variable", "(", "torch", ".", "zeros", "(", "xs", "+", "[", "nr_mix", "]", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "m2", "=", "(", "means", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", "\n", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ")", ".", "view", "(", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", ",", "xs", "[", "2", "]", ",", "1", ",", "nr_mix", ")", "\n", "\n", "m3", "=", "(", "means", "[", ":", ",", ":", ",", ":", ",", "2", ",", ":", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", "+", "\n", "coeffs", "[", ":", ",", ":", ",", ":", ",", "2", ",", ":", "]", "*", "x", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", ")", ".", "view", "(", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", ",", "xs", "[", "2", "]", ",", "1", ",", "nr_mix", ")", "\n", "\n", "means", "=", "torch", ".", "cat", "(", "(", "means", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "3", ")", ",", "m2", ",", "m3", ")", ",", "dim", "=", "3", ")", "\n", "centered_x", "=", "x", "-", "means", "\n", "inv_stdv", "=", "torch", ".", "exp", "(", "-", "log_scales", ")", "\n", "plus_in", "=", "inv_stdv", "*", "(", "centered_x", "+", "1.", "/", "255.", ")", "\n", "cdf_plus", "=", "F", ".", "sigmoid", "(", "plus_in", ")", "\n", "min_in", "=", "inv_stdv", "*", "(", "centered_x", "-", "1.", "/", "255.", ")", "\n", "cdf_min", "=", "F", ".", "sigmoid", "(", "min_in", ")", "\n", "# log probability for edge case of 0 (before scaling)", "\n", "log_cdf_plus", "=", "plus_in", "-", "F", ".", "softplus", "(", "plus_in", ")", "\n", "# log probability for edge case of 255 (before scaling)", "\n", "log_one_minus_cdf_min", "=", "-", "F", ".", "softplus", "(", "min_in", ")", "\n", "cdf_delta", "=", "cdf_plus", "-", "cdf_min", "# probability for all other cases", "\n", "mid_in", "=", "inv_stdv", "*", "centered_x", "\n", "# log probability in the center of the bin, to be used in extreme cases", "\n", "# (not actually used in our code)", "\n", "log_pdf_mid", "=", "mid_in", "-", "log_scales", "-", "2.", "*", "F", ".", "softplus", "(", "mid_in", ")", "\n", "\n", "# now select the right output: left edge case, right edge case, normal", "\n", "# case, extremely low prob case (doesn't actually happen for us)", "\n", "\n", "# this is what we are really doing, but using the robust version below for extreme cases in other applications and to avoid NaN issue with tf.select()", "\n", "# log_probs = tf.select(x < -0.999, log_cdf_plus, tf.select(x > 0.999, log_one_minus_cdf_min, tf.log(cdf_delta)))", "\n", "\n", "# robust version, that still works if probabilities are below 1e-5 (which never happens in our code)", "\n", "# tensorflow backpropagates through tf.select() by multiplying with zero instead of selecting: this requires use to use some ugly tricks to avoid potential NaNs", "\n", "# the 1e-12 in tf.maximum(cdf_delta, 1e-12) is never actually used as output, it's purely there to get around the tf.select() gradient issue", "\n", "# if the probability on a sub-pixel is below 1e-5, we use an approximation", "\n", "# based on the assumption that the log-density is constant in the bin of", "\n", "# the observed sub-pixel value", "\n", "\n", "inner_inner_cond", "=", "(", "cdf_delta", ">", "1e-5", ")", ".", "float", "(", ")", "\n", "inner_inner_out", "=", "inner_inner_cond", "*", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "cdf_delta", ",", "min", "=", "1e-12", ")", ")", "+", "(", "1.", "-", "inner_inner_cond", ")", "*", "(", "log_pdf_mid", "-", "np", ".", "log", "(", "127.5", ")", ")", "\n", "inner_cond", "=", "(", "x", ">", "0.999", ")", ".", "float", "(", ")", "\n", "inner_out", "=", "inner_cond", "*", "log_one_minus_cdf_min", "+", "(", "1.", "-", "inner_cond", ")", "*", "inner_inner_out", "\n", "cond", "=", "(", "x", "<", "-", "0.999", ")", ".", "float", "(", ")", "\n", "log_probs", "=", "cond", "*", "log_cdf_plus", "+", "(", "1.", "-", "cond", ")", "*", "inner_out", "\n", "log_probs", "=", "torch", ".", "sum", "(", "log_probs", ",", "dim", "=", "3", ")", "+", "log_prob_from_logits", "(", "logit_probs", ")", "\n", "\n", "#Don't sum over batch dimension", "\n", "lse", "=", "log_sum_exp", "(", "log_probs", ")", "\n", "return", "-", "torch", ".", "sum", "(", "lse", ".", "view", "(", "lse", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.discretized_mix_logistic_loss_1d": [[100, 147], ["x.contiguous.permute", "l[].contiguous().view.permute", "int", "l[].contiguous().view", "torch.clamp", "torch.clamp", "torch.clamp", "x.contiguous.contiguous", "torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "utils.log_sum_exp", "int", "int", "x.contiguous.unsqueeze", "torch.autograd.Variable", "torch.softplus", "torch.softplus", "torch.sum", "torch.sum", "torch.sum", "utils.log_prob_from_logits", "torch.sum", "torch.sum", "torch.sum", "x.contiguous.size", "l[].contiguous().view.size", "l[].contiguous", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.softplus", "torch.log", "torch.log", "torch.log", "log_sum_exp.view", "torch.clamp", "torch.clamp", "torch.clamp", "numpy.log", "log_sum_exp.size", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_sum_exp", "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.log_prob_from_logits"], ["", "def", "discretized_mix_logistic_loss_1d", "(", "x", ",", "l", ")", ":", "\n", "    ", "\"\"\" log-likelihood for mixture of discretized logistics, assumes the data has been rescaled to [-1,1] interval \"\"\"", "\n", "# Pytorch ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "\n", "# here and below: unpacking the params of the mixture of logistics", "\n", "nr_mix", "=", "int", "(", "ls", "[", "-", "1", "]", "/", "3", ")", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "2", "]", ")", "# 2 for mean, scale", "\n", "means", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", ",", "min", "=", "-", "7.", ")", "\n", "# here and below: getting the means and adjusting them based on preceding", "\n", "# sub-pixels", "\n", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "unsqueeze", "(", "-", "1", ")", "+", "Variable", "(", "torch", ".", "zeros", "(", "xs", "+", "[", "nr_mix", "]", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "# means = torch.cat((means[:, :, :, 0, :].unsqueeze(3), m2, m3), dim=3)", "\n", "centered_x", "=", "x", "-", "means", "\n", "inv_stdv", "=", "torch", ".", "exp", "(", "-", "log_scales", ")", "\n", "plus_in", "=", "inv_stdv", "*", "(", "centered_x", "+", "1.", "/", "255.", ")", "\n", "cdf_plus", "=", "F", ".", "sigmoid", "(", "plus_in", ")", "\n", "min_in", "=", "inv_stdv", "*", "(", "centered_x", "-", "1.", "/", "255.", ")", "\n", "cdf_min", "=", "F", ".", "sigmoid", "(", "min_in", ")", "\n", "# log probability for edge case of 0 (before scaling)", "\n", "log_cdf_plus", "=", "plus_in", "-", "F", ".", "softplus", "(", "plus_in", ")", "\n", "# log probability for edge case of 255 (before scaling)", "\n", "log_one_minus_cdf_min", "=", "-", "F", ".", "softplus", "(", "min_in", ")", "\n", "cdf_delta", "=", "cdf_plus", "-", "cdf_min", "# probability for all other cases", "\n", "mid_in", "=", "inv_stdv", "*", "centered_x", "\n", "# log probability in the center of the bin, to be used in extreme cases", "\n", "# (not actually used in our code)", "\n", "log_pdf_mid", "=", "mid_in", "-", "log_scales", "-", "2.", "*", "F", ".", "softplus", "(", "mid_in", ")", "\n", "\n", "inner_inner_cond", "=", "(", "cdf_delta", ">", "1e-5", ")", ".", "float", "(", ")", "\n", "inner_inner_out", "=", "inner_inner_cond", "*", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "cdf_delta", ",", "min", "=", "1e-12", ")", ")", "+", "(", "1.", "-", "inner_inner_cond", ")", "*", "(", "log_pdf_mid", "-", "np", ".", "log", "(", "127.5", ")", ")", "\n", "inner_cond", "=", "(", "x", ">", "0.999", ")", ".", "float", "(", ")", "\n", "inner_out", "=", "inner_cond", "*", "log_one_minus_cdf_min", "+", "(", "1.", "-", "inner_cond", ")", "*", "inner_inner_out", "\n", "cond", "=", "(", "x", "<", "-", "0.999", ")", ".", "float", "(", ")", "\n", "log_probs", "=", "cond", "*", "log_cdf_plus", "+", "(", "1.", "-", "cond", ")", "*", "inner_out", "\n", "log_probs", "=", "torch", ".", "sum", "(", "log_probs", ",", "dim", "=", "3", ")", "+", "log_prob_from_logits", "(", "logit_probs", ")", "\n", "\n", "#Don't sum over batch dimension", "\n", "lse", "=", "log_sum_exp", "(", "log_probs", ")", "\n", "return", "-", "torch", ".", "sum", "(", "lse", ".", "view", "(", "lse", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.to_one_hot": [[149, 155], ["torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "one_hot.cuda.scatter_", "torch.autograd.Variable", "one_hot.cuda.cuda", "len", "tensor.unsqueeze", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "tensor.size", "tensor.size"], "function", ["None"], ["", "def", "to_one_hot", "(", "tensor", ",", "n", ",", "fill_with", "=", "1.", ")", ":", "\n", "# we perform one hot encore with respect to the last axis", "\n", "    ", "one_hot", "=", "torch", ".", "FloatTensor", "(", "tensor", ".", "size", "(", ")", "+", "(", "n", ",", ")", ")", ".", "zero_", "(", ")", "\n", "if", "tensor", ".", "is_cuda", ":", "one_hot", "=", "one_hot", ".", "cuda", "(", ")", "\n", "one_hot", ".", "scatter_", "(", "len", "(", "tensor", ".", "size", "(", ")", ")", ",", "tensor", ".", "unsqueeze", "(", "-", "1", ")", ",", "fill_with", ")", "\n", "return", "Variable", "(", "one_hot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_discretized_mix_logistic_1d": [[157, 188], ["l[].contiguous().view.permute", "l[].contiguous().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "temp.cuda.uniform_", "temp.cuda.max", "utils.to_one_hot", "to_one_hot.view", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "u.cuda.uniform_", "torch.autograd.Variable", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp.unsqueeze", "int", "logit_probs.size", "temp.cuda.cuda", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum.size", "u.cuda.cuda", "torch.clamp", "torch.clamp", "torch.clamp", "l[].contiguous().view.size", "l[].contiguous", "torch.exp", "torch.exp", "torch.exp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.to_one_hot"], ["", "def", "sample_from_discretized_mix_logistic_1d", "(", "l", ",", "nr_mix", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "xs", "=", "ls", "[", ":", "-", "1", "]", "+", "[", "1", "]", "#[3]", "\n", "\n", "# unpack parameters", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "2", "]", ")", "# for mean, scale", "\n", "\n", "# sample mixture indicator from softmax", "\n", "temp", "=", "torch", ".", "FloatTensor", "(", "logit_probs", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "temp", "=", "temp", ".", "cuda", "(", ")", "\n", "temp", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "temp", "=", "logit_probs", ".", "data", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "temp", ")", ")", "\n", "_", ",", "argmax", "=", "temp", ".", "max", "(", "dim", "=", "3", ")", "\n", "\n", "one_hot", "=", "to_one_hot", "(", "argmax", ",", "nr_mix", ")", "\n", "sel", "=", "one_hot", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", ",", "nr_mix", "]", ")", "\n", "# select logistic parameters", "\n", "means", "=", "torch", ".", "sum", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "torch", ".", "sum", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", ",", "min", "=", "-", "7.", ")", "\n", "u", "=", "torch", ".", "FloatTensor", "(", "means", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "u", "=", "u", ".", "cuda", "(", ")", "\n", "u", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "u", "=", "Variable", "(", "u", ")", "\n", "x", "=", "means", "+", "torch", ".", "exp", "(", "log_scales", ")", "*", "(", "torch", ".", "log", "(", "u", ")", "-", "torch", ".", "log", "(", "1.", "-", "u", ")", ")", "\n", "x0", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "out", "=", "x0", ".", "unsqueeze", "(", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_discretized_mix_logistic": [[190, 231], ["l[].contiguous().view.permute", "l[].contiguous().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "temp.cuda.uniform_", "temp.cuda.max", "utils.to_one_hot", "to_one_hot.view", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sum", "torch.sum", "torch.sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "u.cuda.uniform_", "torch.autograd.Variable", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.cat", "torch.cat", "torch.cat", "out.permute.permute", "int", "logit_probs.size", "temp.cuda.cuda", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum.size", "u.cuda.cuda", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "l[].contiguous().view.size", "l[].contiguous", "torch.tanh", "torch.exp", "torch.exp", "torch.exp", "torch.clamp.view", "torch.clamp.view", "torch.clamp.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.to_one_hot"], ["", "def", "sample_from_discretized_mix_logistic", "(", "l", ",", "nr_mix", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "xs", "=", "ls", "[", ":", "-", "1", "]", "+", "[", "3", "]", "\n", "\n", "# unpack parameters", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "3", "]", ")", "\n", "# sample mixture indicator from softmax", "\n", "temp", "=", "torch", ".", "FloatTensor", "(", "logit_probs", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "temp", "=", "temp", ".", "cuda", "(", ")", "\n", "temp", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "temp", "=", "logit_probs", ".", "data", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "temp", ")", ")", "\n", "_", ",", "argmax", "=", "temp", ".", "max", "(", "dim", "=", "3", ")", "\n", "\n", "one_hot", "=", "to_one_hot", "(", "argmax", ",", "nr_mix", ")", "\n", "sel", "=", "one_hot", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", ",", "nr_mix", "]", ")", "\n", "# select logistic parameters", "\n", "means", "=", "torch", ".", "sum", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "torch", ".", "sum", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", ",", "min", "=", "-", "7.", ")", "\n", "coeffs", "=", "torch", ".", "sum", "(", "F", ".", "tanh", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "2", "*", "nr_mix", ":", "3", "*", "nr_mix", "]", ")", "*", "sel", ",", "dim", "=", "4", ")", "\n", "# sample from logistic & clip to interval", "\n", "# we don't actually round to the nearest 8bit value when sampling", "\n", "u", "=", "torch", ".", "FloatTensor", "(", "means", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "u", "=", "u", ".", "cuda", "(", ")", "\n", "u", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "u", "=", "Variable", "(", "u", ")", "\n", "x", "=", "means", "+", "torch", ".", "exp", "(", "log_scales", ")", "*", "(", "torch", ".", "log", "(", "u", ")", "-", "torch", ".", "log", "(", "1.", "-", "u", ")", ")", "\n", "x0", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "x1", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "\n", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "0", "]", "*", "x0", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "x2", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "\n", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "1", "]", "*", "x0", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "2", "]", "*", "x1", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x0", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", ",", "x1", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", ",", "x2", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", "]", ",", "dim", "=", "3", ")", "\n", "# put back in Pytorch ordering", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.down_shift": [[235, 243], ["pad", "int", "torch.ZeroPad2d", "x.size"], "function", ["None"], ["def", "down_shift", "(", "x", ",", "pad", "=", "None", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "# when downshifting, the last row is removed ", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "xs", "[", "2", "]", "-", "1", ",", ":", "]", "\n", "# padding left, padding right, padding top, padding bottom", "\n", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", "if", "pad", "is", "None", "else", "pad", "\n", "return", "pad", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.right_shift": [[245, 253], ["pad", "int", "torch.ZeroPad2d", "x.size"], "function", ["None"], ["", "def", "right_shift", "(", "x", ",", "pad", "=", "None", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "# when righshifting, the last column is removed ", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", "xs", "[", "3", "]", "-", "1", "]", "\n", "# padding left, padding right, padding top, padding bottom", "\n", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", "if", "pad", "is", "None", "else", "pad", "\n", "return", "pad", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.load_part_of_model": [[255, 267], ["torch.load", "torch.load", "torch.load", "torch.load.items", "print", "model.state_dict().keys", "[].copy_", "float", "model.state_dict", "print", "len", "model.state_dict().keys", "model.state_dict", "model.state_dict"], "function", ["None"], ["", "def", "load_part_of_model", "(", "model", ",", "path", ")", ":", "\n", "    ", "params", "=", "torch", ".", "load", "(", "path", ")", "\n", "added", "=", "0", "\n", "for", "name", ",", "param", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "name", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "model", ".", "state_dict", "(", ")", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "added", "+=", "1", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "print", "(", "e", ")", "\n", "pass", "\n", "", "", "", "print", "(", "'added %s of params:'", "%", "(", "added", "/", "float", "(", "len", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.softmax_loss_1d": [[273, 283], ["torch.cross_entropy", "torch.sum", "torch.sum", "torch.sum", "int", "F.cross_entropy.view", "l.size", "F.cross_entropy.size"], "function", ["None"], ["", "def", "softmax_loss_1d", "(", "x", ",", "l", ")", ":", "\n", "    ", "\"\"\" log-likelihood for mixture of discretized logistics, assumes the data has been rescaled to [-1,1] interval \"\"\"", "\n", "x", "=", "x", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "\n", "nr_softmax_bins", "=", "ls", "[", "1", "]", "\n", "x_quant", "=", "(", "(", "x", "+", "1", ")", "*", "nr_softmax_bins", "/", "2", ")", ".", "long", "(", ")", ".", "clamp", "(", "max", "=", "nr_softmax_bins", "-", "1", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "l", ",", "x_quant", ",", "reduce", "=", "False", ")", "\n", "\n", "return", "torch", ".", "sum", "(", "loss", ".", "view", "(", "loss", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_softmax_1d": [[285, 307], ["l.contiguous().view.permute", "l.contiguous().view.contiguous().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "temp.cuda.uniform_", "temp.cuda.max", "x0.unsqueeze", "int", "logit_probs.size", "temp.cuda.cuda", "torch.log", "torch.log", "torch.log", "l.contiguous().view.size", "l.contiguous().view.contiguous", "torch.log", "torch.log", "torch.log", "argmax.float"], "function", ["None"], ["", "def", "sample_from_softmax_1d", "(", "l", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "nr_softmax_bins", "=", "ls", "[", "-", "1", "]", "\n", "xs", "=", "ls", "[", ":", "-", "1", "]", "+", "[", "1", "]", "#[3]", "\n", "\n", "# unpack parameters", "\n", "logit_probs", "=", "l", "\n", "l", "=", "l", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_softmax_bins", "]", ")", "\n", "\n", "# sample mixture indicator from softmax", "\n", "temp", "=", "torch", ".", "FloatTensor", "(", "logit_probs", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "temp", "=", "temp", ".", "cuda", "(", ")", "\n", "temp", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "temp", "=", "logit_probs", ".", "data", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "temp", ")", ")", "\n", "_", ",", "argmax", "=", "temp", ".", "max", "(", "dim", "=", "3", ")", "\n", "\n", "\n", "x0", "=", "argmax", ".", "float", "(", ")", "*", "2", "/", "(", "nr_softmax_bins", "-", "1", ")", "-", "1", "\n", "out", "=", "x0", ".", "unsqueeze", "(", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.create_gaussian_conditional": [[308, 314], ["int", "torch.softplus", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "torch.distributions.normal.Normal", "l.size"], "function", ["None"], ["", "def", "create_gaussian_conditional", "(", "l", ")", ":", "\n", "    ", "n_channels", "=", "int", "(", "l", ".", "size", "(", "1", ")", "/", "2", ")", "\n", "mu", "=", "l", "[", ":", ",", ":", "n_channels", "]", "\n", "sigma", "=", "F", ".", "softplus", "(", "l", "[", ":", ",", "n_channels", ":", "]", ")", "\n", "dist", "=", "torch", ".", "distributions", ".", "normal", ".", "Normal", "(", "mu", ",", "sigma", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.gaussian_loss": [[315, 320], ["utils.create_gaussian_conditional", "torch.sum", "torch.sum", "torch.sum", "create_gaussian_conditional.log_prob", "loss.view", "loss.size"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.create_gaussian_conditional"], ["", "def", "gaussian_loss", "(", "x", ",", "l", ")", ":", "\n", "    ", "\"\"\" log-likelihood for gaussian \"\"\"", "\n", "dist", "=", "create_gaussian_conditional", "(", "l", ")", "\n", "loss", "=", "-", "dist", ".", "log_prob", "(", "x", ")", "\n", "return", "torch", ".", "sum", "(", "loss", ".", "view", "(", "loss", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.sample_from_gaussian": [[321, 325], ["utils.create_gaussian_conditional", "create_gaussian_conditional.rsample"], "function", ["home.repos.pwc.inspect_result.insperatum_vhe.pixelcnn.utils.create_gaussian_conditional"], ["", "def", "sample_from_gaussian", "(", "l", ")", ":", "\n", "    ", "dist", "=", "create_gaussian_conditional", "(", "l", ")", "\n", "x", "=", "dist", ".", "rsample", "(", ")", "\n", "return", "x", "\n", "", ""]]}