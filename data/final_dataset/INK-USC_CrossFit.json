{"home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_multitask.run": [[15, 66], ["transformers.BartTokenizer.from_pretrained", "utils.get_tasks_list", "logger.info", "utils.get_tasks_list", "logger.info", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataset", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataloader", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataset", "dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataloader", "torch.cuda.is_available", "transformers.AdamW", "transformers.get_linear_schedule_with_warmup", "run_multitask.train", "bart.MyBart.from_pretrained", "bart.MyBart.from_pretrained", "logger.info", "utils.freeze_embeds", "torch.nn.DataParallel", "torch.nn.DataParallel.to", "torch.device", "key.startswith", "_convert"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.get_tasks_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.get_tasks_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_embeds"], ["def", "run", "(", "args", ",", "logger", ")", ":", "\n", "    ", "tokenizer", "=", "BartTokenizer", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "train_tasks", "=", "get_tasks_list", "(", "args", ".", "custom_tasks_splits", ",", "\"train\"", ")", "\n", "logger", ".", "info", "(", "\"Training on the following tasks: {}\"", ".", "format", "(", "train_tasks", ")", ")", "\n", "\n", "dev_tasks", "=", "get_tasks_list", "(", "args", ".", "custom_tasks_splits", ",", "\"dev\"", ")", "\n", "logger", ".", "info", "(", "\"Dev on the following tasks: {}\"", ".", "format", "(", "dev_tasks", ")", ")", "\n", "\n", "train_data", "=", "NLPFewshotGymMultiTaskData", "(", "logger", ",", "args", ",", "args", ".", "train_dir", ",", "tasks", "=", "train_tasks", ",", "data_split", "=", "\"all\"", ",", "data_type", "=", "\"train\"", ",", "is_training", "=", "True", ")", "\n", "dev_data", "=", "NLPFewshotGymMultiTaskData", "(", "logger", ",", "args", ",", "args", ".", "train_dir", ",", "tasks", "=", "dev_tasks", ",", "data_split", "=", "\"all\"", ",", "data_type", "=", "\"dev\"", ",", "is_training", "=", "False", ")", "\n", "\n", "train_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "train_data", ".", "load_dataloader", "(", ")", "\n", "\n", "dev_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "dev_data", ".", "load_dataloader", "(", ")", "\n", "\n", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "args", ".", "checkpoint", "is", "not", "None", ":", "\n", "            ", "def", "convert_to_single_gpu", "(", "state_dict", ")", ":", "\n", "                ", "def", "_convert", "(", "key", ")", ":", "\n", "                    ", "if", "key", ".", "startswith", "(", "'module.'", ")", ":", "\n", "                        ", "return", "key", "[", "7", ":", "]", "\n", "", "return", "key", "\n", "", "return", "{", "_convert", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ",", "\n", "state_dict", "=", "convert_to_single_gpu", "(", "torch", ".", "load", "(", "args", ".", "checkpoint", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "", "if", "args", ".", "freeze_embeds", ":", "\n", "            ", "logger", ".", "info", "(", "\"Freezing embeddings\"", ")", "\n", "freeze_embeds", "(", "model", ")", "\n", "\n", "", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "model", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "\n", "", "no_decay", "=", "[", "'bias'", ",", "'LayerNorm.weight'", "]", "\n", "optimizer_grouped_parameters", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", "}", "\n", "]", "\n", "optimizer", "=", "AdamW", "(", "optimizer_grouped_parameters", ",", "lr", "=", "args", ".", "learning_rate", ",", "eps", "=", "args", ".", "adam_epsilon", ")", "\n", "scheduler", "=", "get_linear_schedule_with_warmup", "(", "optimizer", ",", "\n", "num_warmup_steps", "=", "args", ".", "warmup_steps", ",", "\n", "num_training_steps", "=", "args", ".", "total_steps", ")", "\n", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_multitask.train": [[67, 133], ["model.train", "logger.info", "range", "torch.save", "int", "tqdm.tqdm", "v.cpu", "os.path.join", "torch.cuda.is_available", "utils.trim_batch", "utils.trim_batch", "model", "train_losses.append", "loss.mean.backward", "model.state_dict().items", "loss.mean.mean", "torch.isnan", "logger.info", "loss.mean.detach().cpu", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "scheduler.step", "model.zero_grad", "model.eval", "run_multitask.inference", "logger.info", "model.train", "b.to", "model.parameters", "torch.save", "logger.info", "model.state_dict", "torch.device", "loss.mean.detach", "v.cpu", "os.path.join", "numpy.mean", "model.state_dict().items", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.inference", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train"], ["", "", "def", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "global_step", "=", "0", "\n", "train_losses", "=", "[", "]", "\n", "best_accuracy", "=", "-", "1.0", "\n", "stop_training", "=", "False", "\n", "\n", "logger", ".", "info", "(", "\"Starting training!\"", ")", "\n", "for", "epoch", "in", "range", "(", "int", "(", "args", ".", "num_train_epochs", ")", ")", ":", "\n", "        ", "for", "batch", "in", "tqdm", "(", "train_data", ".", "dataloader", ",", "desc", "=", "\"Epoch {}\"", ".", "format", "(", "epoch", ")", ")", ":", "\n", "            ", "global_step", "+=", "1", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "]", "\n", "\n", "", "pad_token_id", "=", "train_data", ".", "tokenizer", ".", "pad_token_id", "\n", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "batch", "[", "2", "]", ",", "batch", "[", "3", "]", "=", "trim_batch", "(", "batch", "[", "2", "]", ",", "pad_token_id", ",", "batch", "[", "3", "]", ")", "\n", "\n", "loss", "=", "model", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "decoder_input_ids", "=", "batch", "[", "2", "]", ",", "decoder_attention_mask", "=", "batch", "[", "3", "]", ",", "\n", "is_training", "=", "True", ")", "\n", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "                ", "loss", "=", "loss", ".", "mean", "(", ")", "# mean() to average on multi-gpu.", "\n", "", "if", "torch", ".", "isnan", "(", "loss", ")", ".", "data", ":", "\n", "                ", "logger", ".", "info", "(", "\"Stop training because loss=%s\"", "%", "(", "loss", ".", "data", ")", ")", "\n", "stop_training", "=", "True", "\n", "break", "\n", "", "train_losses", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "global_step", "%", "args", ".", "gradient_accumulation_steps", "==", "0", ":", "\n", "                ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "optimizer", ".", "step", "(", ")", "# We have accumulated enough gradients", "\n", "scheduler", ".", "step", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "\n", "", "if", "global_step", "%", "args", ".", "eval_period", "==", "0", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "curr_em", "=", "inference", "(", "model", "if", "args", ".", "n_gpu", "==", "1", "else", "model", ".", "module", ",", "dev_data", ")", "\n", "logger", ".", "info", "(", "\"Step %d Train loss %.2f %s %s on epoch=%d\"", "%", "(", "\n", "global_step", ",", "\n", "np", ".", "mean", "(", "train_losses", ")", ",", "\n", "dev_data", ".", "metric", ",", "\n", "curr_em", ",", "\n", "epoch", ")", ")", "\n", "train_losses", "=", "[", "]", "\n", "if", "best_accuracy", "<", "curr_em", ":", "\n", "                    ", "model_state_dict", "=", "{", "k", ":", "v", ".", "cpu", "(", ")", "for", "(", "k", ",", "v", ")", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", "}", "\n", "torch", ".", "save", "(", "model_state_dict", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "\"best-model.pt\"", ")", ")", "\n", "logger", ".", "info", "(", "\"Saving model with best %s: %s -> %s on epoch=%d, global_step=%d\"", "%", "(", "dev_data", ".", "metric", ",", "best_accuracy", ",", "curr_em", ",", "epoch", ",", "global_step", ")", ")", "\n", "best_accuracy", "=", "curr_em", "\n", "wait_step", "=", "0", "\n", "stop_training", "=", "False", "\n", "", "else", ":", "\n", "                    ", "wait_step", "+=", "1", "\n", "if", "wait_step", ">=", "args", ".", "wait_step", ":", "\n", "                        ", "stop_training", "=", "True", "\n", "break", "\n", "", "", "model", ".", "train", "(", ")", "\n", "", "", "if", "stop_training", ":", "\n", "            ", "break", "\n", "\n", "", "", "model_state_dict", "=", "{", "k", ":", "v", ".", "cpu", "(", ")", "for", "(", "k", ",", "v", ")", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", "}", "\n", "torch", ".", "save", "(", "model_state_dict", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "\"last-model.pt\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_multitask.inference": [[134, 154], ["enumerate", "dev_data.evaluate", "torch.cuda.is_available", "utils.trim_batch", "model.generate", "zip", "dev_data.save_predictions", "dev_data.decode", "predictions.append", "b.to", "torch.device"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.evaluate", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.save_predictions", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "inference", "(", "model", ",", "dev_data", ",", "save_predictions", "=", "False", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "predictions", "=", "[", "]", "\n", "bos_token_id", "=", "dev_data", ".", "tokenizer", ".", "bos_token_id", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_data", ".", "dataloader", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "]", "\n", "", "pad_token_id", "=", "dev_data", ".", "tokenizer", ".", "pad_token_id", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "outputs", "=", "model", ".", "generate", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "\n", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "num_beams", "=", "dev_data", ".", "args", ".", "num_beams", ",", "\n", "max_length", "=", "dev_data", ".", "args", ".", "max_output_length", ",", "\n", "decoder_start_token_id", "=", "model", ".", "config", ".", "bos_token_id", ",", "\n", "early_stopping", "=", "dev_data", ".", "gen_early_stop", ",", ")", "\n", "for", "input_", ",", "output", "in", "zip", "(", "batch", "[", "0", "]", ",", "outputs", ")", ":", "\n", "            ", "pred", "=", "dev_data", ".", "decode", "(", "output", ")", "\n", "predictions", ".", "append", "(", "pred", ")", "\n", "", "", "if", "save_predictions", ":", "\n", "        ", "dev_data", ".", "save_predictions", "(", "predictions", ")", "\n", "", "return", "dev_data", ".", "evaluate", "(", "predictions", ",", "verbose", "=", "verbose", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.tune_hps_singletask.main": [[33, 182], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "logging.basicConfig", "logging.getLogger", "logging.getLogger.info", "logging.getLogger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.device_count", "logging.getLogger.info", "sorted", "logging.getLogger.info", "pandas.DataFrame", "os.path.exists", "os.listdir", "print", "os.path.exists", "os.makedirs", "torch.cuda.manual_seed_all", "ValueError", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "pd.DataFrame.to_csv", "ValueError", "ValueError", "ValueError", "filename.endswith", "prefixes.append", "os.path.join", "logging.FileHandler", "logging.StreamHandler", "filename.split", "logging.getLogger.info", "run_singletask.run", "logging.getLogger.info", "pd.DataFrame.to_csv", "len", "os.path.join", "os.path.join", "len"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "## Basic parameters", "\n", "parser", ".", "add_argument", "(", "\"--task_dir\"", ",", "default", "=", "\"data\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--train_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--dev_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "default", "=", "\"nlp_forest_single\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"facebook/bart-base\"", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_train\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_predict\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"best-model.pt\"", ")", "\n", "\n", "## Model parameters", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_lowercase\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--freeze_embeds\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Preprocessing/decoding-related parameters", "\n", "parser", ".", "add_argument", "(", "'--max_input_length'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--max_output_length'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--num_beams'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"--append_another_bos\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Training-related parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_batch_size\"", ",", "default", "=", "64", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for training.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_batch_size\"", ",", "default", "=", "64", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "default", "=", "3e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "\"The initial learning rate for Adam.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_proportion\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight decay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight deay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adam_epsilon\"", ",", "default", "=", "1e-8", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Epsilon for Adam optimizer.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_grad_norm\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gradient_accumulation_steps\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_train_epochs\"", ",", "default", "=", "100000.0", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Total number of training epochs to perform.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_steps\"", ",", "default", "=", "500", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--total_steps\"", ",", "default", "=", "100000", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--wait_step'", ",", "type", "=", "int", ",", "default", "=", "10000000000", ")", "\n", "\n", "# Other parameters", "\n", "parser", ".", "add_argument", "(", "\"--quiet\"", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"If true, all of the warnings related to data processing will be printed. \"", "\n", "\"A number of warnings are expected for a normal SQuAD evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_period'", ",", "type", "=", "int", ",", "default", "=", "2000", ",", "\n", "help", "=", "\"Evaluate & save model\"", ")", "\n", "parser", ".", "add_argument", "(", "'--prefix'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "\"Prefix for saving predictions\"", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Use a subset of data for debugging\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "42", ",", "\n", "help", "=", "\"random seed for initialization\"", ")", "\n", "\n", "# to tune", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate_list\"", ",", "nargs", "=", "\"*\"", ",", "type", "=", "float", ",", "default", "=", "[", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--bsz_list\"", ",", "nargs", "=", "\"*\"", ",", "type", "=", "int", ",", "default", "=", "[", "]", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", "and", "os", ".", "listdir", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "print", "(", "\"Output directory () already exists and is not empty.\"", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "output_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "##### Start writing logs", "\n", "\n", "", "log_filename", "=", "\"{}log.txt\"", ".", "format", "(", "\"\"", "if", "args", ".", "do_train", "else", "\"eval_\"", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "format", "=", "'%(asctime)s - %(levelname)s - %(name)s - %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d/%Y %H:%M:%S'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "log_filename", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "logger", ".", "info", "(", "args", ".", "output_dir", ")", "\n", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "args", ".", "n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "args", ".", "n_gpu", ">", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n", "", "if", "not", "args", ".", "do_train", "and", "not", "args", ".", "do_predict", ":", "\n", "        ", "raise", "ValueError", "(", "\"At least one of `do_train` or `do_predict` must be True.\"", ")", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "not", "args", ".", "train_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `train_dir` must be specified.\"", ")", "\n", "", "if", "not", "args", ".", "dev_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "if", "args", ".", "do_predict", ":", "\n", "        ", "if", "not", "args", ".", "test_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_predict` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Using {} gpus\"", ".", "format", "(", "args", ".", "n_gpu", ")", ")", "\n", "\n", "files", "=", "sorted", "(", "os", ".", "listdir", "(", "args", ".", "task_dir", ")", ")", "\n", "prefixes", "=", "[", "]", "\n", "for", "filename", "in", "files", ":", "\n", "        ", "if", "not", "filename", ".", "endswith", "(", "\".tsv\"", ")", ":", "\n", "            ", "continue", "\n", "", "prefix", "=", "\"_\"", ".", "join", "(", "filename", ".", "split", "(", "\"_\"", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "prefix", "not", "in", "prefixes", ":", "\n", "            ", "prefixes", ".", "append", "(", "prefix", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Fine-tuning the following samples: {}\"", ".", "format", "(", "prefixes", ")", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"prefix\"", ",", "\"lr\"", ",", "\"bsz\"", ",", "\"dev_performance\"", ",", "\"test_performance\"", "]", ")", "\n", "\n", "for", "prefix", "in", "prefixes", ":", "\n", "        ", "args", ".", "train_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "task_dir", ",", "prefix", "+", "\"_train.tsv\"", ")", "\n", "args", ".", "dev_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "task_dir", ",", "prefix", "+", "\"_dev.tsv\"", ")", "\n", "args", ".", "test_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "task_dir", ",", "prefix", "+", "\"_test.tsv\"", ")", "\n", "\n", "best_dev_performance", "=", "-", "1.0", "\n", "best_config", "=", "None", "\n", "for", "lr", "in", "args", ".", "learning_rate_list", ":", "\n", "            ", "for", "bsz", "in", "args", ".", "bsz_list", ":", "\n", "                ", "logger", ".", "info", "(", "\"Running ... prefix={}, lr={}, bsz={} ...\"", ".", "format", "(", "prefix", ",", "lr", ",", "bsz", ")", ")", "\n", "args", ".", "learning_rate", "=", "lr", "\n", "args", ".", "train_batch_size", "=", "bsz", "\n", "dev_performance", ",", "test_performance", "=", "run", "(", "args", ",", "logger", ")", "\n", "\n", "logger", ".", "info", "(", "\"prefix={}, lr={}, bsz={}, dev_performance={}, test_performance={}\"", ".", "format", "(", "prefix", ",", "lr", ",", "bsz", ",", "dev_performance", ",", "test_performance", ")", ")", "\n", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "[", "prefix", ",", "lr", ",", "bsz", ",", "dev_performance", ",", "test_performance", "]", "\n", "df", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "\"result.csv\"", ")", ")", "\n", "\n", "if", "dev_performance", ">", "best_dev_performance", ":", "\n", "                    ", "best_dev_performance", "=", "dev_performance", "\n", "best_config", "=", "[", "prefix", ",", "lr", ",", "bsz", ",", "dev_performance", ",", "test_performance", "]", "\n", "\n", "", "", "", "best_config", "[", "0", "]", "=", "best_config", "[", "0", "]", "+", "\"_best\"", "\n", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "best_config", "\n", "df", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "\"result.csv\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_singletask.run": [[15, 97], ["transformers.BartTokenizer.from_pretrained", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataset", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataloader", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataset", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataloader", "torch.cuda.is_available", "transformers.AdamW", "transformers.get_linear_schedule_with_warmup", "run_singletask.train", "torch.cuda.is_available", "MyBart.from_pretrained.eval", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataset", "dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataloader", "run_singletask.inference", "logger.info", "bart.MyBart.from_pretrained", "bart.MyBart.from_pretrained", "logger.info", "utils.freeze_embeds", "torch.nn.DataParallel", "MyBart.from_pretrained.to", "bart.MyBart.from_pretrained", "logger.info", "os.path.join", "bart.MyBart.from_pretrained", "logger.info", "MyBart.from_pretrained.to", "torch.device", "torch.device", "key.startswith", "_convert"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.inference", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_embeds"], ["def", "run", "(", "args", ",", "logger", ")", ":", "\n", "    ", "tokenizer", "=", "BartTokenizer", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "train_data", "=", "NLPFewshotGymSingleTaskData", "(", "logger", ",", "args", ",", "args", ".", "train_file", ",", "data_type", "=", "\"train\"", ",", "is_training", "=", "True", ")", "\n", "dev_data", "=", "NLPFewshotGymSingleTaskData", "(", "logger", ",", "args", ",", "args", ".", "dev_file", ",", "data_type", "=", "\"dev\"", ",", "is_training", "=", "False", ")", "\n", "\n", "train_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "train_data", ".", "load_dataloader", "(", ")", "\n", "\n", "dev_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "dev_data", ".", "load_dataloader", "(", ")", "\n", "\n", "best_dev_performance", "=", "None", "\n", "test_performance", "=", "None", "\n", "\n", "best_model_state_dict", "=", "None", "\n", "\n", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "args", ".", "checkpoint", "is", "not", "None", "and", "args", ".", "checkpoint", "!=", "\"None\"", ":", "\n", "            ", "def", "convert_to_single_gpu", "(", "state_dict", ")", ":", "\n", "                ", "def", "_convert", "(", "key", ")", ":", "\n", "                    ", "if", "key", ".", "startswith", "(", "'module.'", ")", ":", "\n", "                        ", "return", "key", "[", "7", ":", "]", "\n", "", "return", "key", "\n", "", "return", "{", "_convert", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ",", "\n", "state_dict", "=", "convert_to_single_gpu", "(", "torch", ".", "load", "(", "args", ".", "checkpoint", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "", "if", "args", ".", "freeze_embeds", ":", "\n", "            ", "logger", ".", "info", "(", "\"Freezing embeddings\"", ")", "\n", "freeze_embeds", "(", "model", ")", "\n", "\n", "", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "model", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "\n", "", "no_decay", "=", "[", "'bias'", ",", "'LayerNorm.weight'", "]", "\n", "optimizer_grouped_parameters", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", "}", "\n", "]", "\n", "optimizer", "=", "AdamW", "(", "optimizer_grouped_parameters", ",", "lr", "=", "args", ".", "learning_rate", ",", "eps", "=", "args", ".", "adam_epsilon", ")", "\n", "scheduler", "=", "get_linear_schedule_with_warmup", "(", "optimizer", ",", "\n", "num_warmup_steps", "=", "args", ".", "warmup_steps", ",", "\n", "num_training_steps", "=", "args", ".", "total_steps", ")", "\n", "best_dev_performance", ",", "best_model_state_dict", "=", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", "\n", "\n", "", "if", "args", ".", "do_predict", ":", "\n", "        ", "if", "args", ".", "do_train", "and", "best_model_state_dict", "is", "not", "None", ":", "\n", "            ", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ",", "\n", "state_dict", "=", "best_model_state_dict", ")", "\n", "logger", ".", "info", "(", "\"Loading checkpoint from CPU\"", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "args", ".", "predict_checkpoint", ")", "\n", "def", "convert_to_single_gpu", "(", "state_dict", ")", ":", "\n", "                ", "def", "_convert", "(", "key", ")", ":", "\n", "                    ", "if", "key", ".", "startswith", "(", "'module.'", ")", ":", "\n", "                        ", "return", "key", "[", "7", ":", "]", "\n", "", "return", "key", "\n", "", "return", "{", "_convert", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ",", "\n", "state_dict", "=", "convert_to_single_gpu", "(", "torch", ".", "load", "(", "checkpoint", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"Loading checkpoint from {}\"", ".", "format", "(", "checkpoint", ")", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "model", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "\n", "data_type", "=", "\"test\"", "if", "\"test\"", "in", "args", ".", "test_file", "else", "\"dev\"", "\n", "test_data", "=", "NLPFewshotGymSingleTaskData", "(", "logger", ",", "args", ",", "args", ".", "test_file", ",", "data_type", "=", "data_type", ",", "is_training", "=", "False", ")", "\n", "\n", "test_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "test_data", ".", "load_dataloader", "(", ")", "\n", "\n", "test_performance", "=", "inference", "(", "model", ",", "test_data", ",", "save_predictions", "=", "True", ",", "verbose", "=", "True", ")", "\n", "logger", ".", "info", "(", "\"%s on %s data: %.2f\"", "%", "(", "test_data", ".", "metric", ",", "test_data", ".", "data_type", ",", "test_performance", ")", ")", "\n", "\n", "", "return", "best_dev_performance", ",", "test_performance", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_singletask.train": [[98, 172], ["model.train", "logger.info", "range", "int", "tqdm.tqdm", "torch.cuda.is_available", "utils.trim_batch", "utils.trim_batch", "model", "train_losses.append", "loss.mean.backward", "loss.mean.mean", "torch.isnan", "logger.info", "loss.mean.detach().cpu", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "scheduler.step", "model.zero_grad", "model.eval", "run_singletask.inference", "logger.info", "model.train", "b.to", "model.parameters", "logger.info", "torch.device", "loss.mean.detach", "v.cpu", "numpy.mean", "model.state_dict().items", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.inference", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train"], ["", "def", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "global_step", "=", "0", "\n", "train_losses", "=", "[", "]", "\n", "best_performance", "=", "-", "1.0", "\n", "stop_training", "=", "False", "\n", "\n", "logger", ".", "info", "(", "\"Starting training!\"", ")", "\n", "for", "epoch", "in", "range", "(", "int", "(", "args", ".", "num_train_epochs", ")", ")", ":", "\n", "        ", "for", "batch", "in", "tqdm", "(", "train_data", ".", "dataloader", ",", "desc", "=", "\"Epoch {}\"", ".", "format", "(", "epoch", ")", ",", "disable", "=", "args", ".", "quiet", ")", ":", "\n", "            ", "global_step", "+=", "1", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "]", "\n", "\n", "", "pad_token_id", "=", "train_data", ".", "tokenizer", ".", "pad_token_id", "\n", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "batch", "[", "2", "]", ",", "batch", "[", "3", "]", "=", "trim_batch", "(", "batch", "[", "2", "]", ",", "pad_token_id", ",", "batch", "[", "3", "]", ")", "\n", "\n", "loss", "=", "model", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "decoder_input_ids", "=", "batch", "[", "2", "]", ",", "decoder_attention_mask", "=", "batch", "[", "3", "]", ",", "\n", "is_training", "=", "True", ")", "\n", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "                ", "loss", "=", "loss", ".", "mean", "(", ")", "# mean() to average on multi-gpu.", "\n", "", "if", "torch", ".", "isnan", "(", "loss", ")", ".", "data", ":", "\n", "                ", "logger", ".", "info", "(", "\"Stop training because loss=%s\"", "%", "(", "loss", ".", "data", ")", ")", "\n", "stop_training", "=", "True", "\n", "break", "\n", "", "train_losses", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "global_step", "%", "args", ".", "gradient_accumulation_steps", "==", "0", ":", "\n", "                ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "optimizer", ".", "step", "(", ")", "# We have accumulated enough gradients", "\n", "scheduler", ".", "step", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "\n", "", "if", "global_step", "%", "args", ".", "eval_period", "==", "0", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "curr_performance", "=", "inference", "(", "model", "if", "args", ".", "n_gpu", "==", "1", "else", "model", ".", "module", ",", "dev_data", ")", "\n", "logger", ".", "info", "(", "\"Step %d Train loss %.2f %s %s on epoch=%d\"", "%", "(", "\n", "global_step", ",", "\n", "np", ".", "mean", "(", "train_losses", ")", ",", "\n", "dev_data", ".", "metric", ",", "\n", "curr_performance", ",", "\n", "epoch", ")", ")", "\n", "train_losses", "=", "[", "]", "\n", "if", "best_performance", "<", "curr_performance", ":", "\n", "                    ", "best_model_state_dict", "=", "{", "k", ":", "v", ".", "cpu", "(", ")", "for", "(", "k", ",", "v", ")", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", "}", "\n", "# model_state_dict = {k:v.cpu() for (k, v) in model.state_dict().items()}", "\n", "# torch.save(model_state_dict, os.path.join(args.output_dir, \"best-model.pt\"))", "\n", "logger", ".", "info", "(", "\"Not saving model with best %s: %s -> %s on epoch=%d, global_step=%d\"", "%", "(", "dev_data", ".", "metric", ",", "best_performance", ",", "curr_performance", ",", "epoch", ",", "global_step", ")", ")", "\n", "best_performance", "=", "curr_performance", "\n", "wait_step", "=", "0", "\n", "stop_training", "=", "False", "\n", "", "else", ":", "\n", "                    ", "wait_step", "+=", "1", "\n", "if", "wait_step", ">=", "args", ".", "wait_step", ":", "\n", "                        ", "stop_training", "=", "True", "\n", "break", "\n", "\n", "", "", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "global_step", ">=", "args", ".", "total_steps", ":", "\n", "                ", "stop_training", "=", "True", "\n", "break", "\n", "\n", "", "", "if", "stop_training", ":", "\n", "            ", "break", "\n", "\n", "# model_state_dict = {k:v.cpu() for (k, v) in model.state_dict().items()}", "\n", "# torch.save(model_state_dict, os.path.join(args.output_dir, \"last-model.pt\"))", "\n", "", "", "return", "best_performance", ",", "best_model_state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_singletask.inference": [[173, 193], ["enumerate", "dev_data.evaluate", "torch.cuda.is_available", "utils.trim_batch", "model.generate", "zip", "dev_data.save_predictions", "dev_data.decode", "predictions.append", "b.to", "torch.device"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.evaluate", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.save_predictions", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "inference", "(", "model", ",", "dev_data", ",", "save_predictions", "=", "False", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "predictions", "=", "[", "]", "\n", "bos_token_id", "=", "dev_data", ".", "tokenizer", ".", "bos_token_id", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_data", ".", "dataloader", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "]", "\n", "", "pad_token_id", "=", "dev_data", ".", "tokenizer", ".", "pad_token_id", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "outputs", "=", "model", ".", "generate", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "\n", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "num_beams", "=", "dev_data", ".", "args", ".", "num_beams", ",", "\n", "max_length", "=", "dev_data", ".", "args", ".", "max_output_length", ",", "\n", "decoder_start_token_id", "=", "model", ".", "config", ".", "bos_token_id", ",", "\n", "early_stopping", "=", "dev_data", ".", "gen_early_stop", ",", ")", "\n", "for", "input_", ",", "output", "in", "zip", "(", "batch", "[", "0", "]", ",", "outputs", ")", ":", "\n", "            ", "pred", "=", "dev_data", ".", "decode", "(", "output", ")", "\n", "predictions", ".", "append", "(", "pred", ")", "\n", "", "", "if", "save_predictions", ":", "\n", "        ", "dev_data", ".", "save_predictions", "(", "predictions", ")", "\n", "", "return", "dev_data", ".", "evaluate", "(", "predictions", ",", "verbose", "=", "verbose", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.cli_multitask.main": [[31, 137], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "logging.basicConfig", "logging.getLogger", "logging.getLogger.info", "logging.getLogger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.device_count", "logging.getLogger.info", "run_multitask.run", "os.path.exists", "os.listdir", "print", "os.path.exists", "os.makedirs", "torch.cuda.manual_seed_all", "ValueError", "ValueError", "ValueError", "ValueError", "logging.FileHandler", "logging.StreamHandler", "os.path.join"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "## Basic parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_dir\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_dir\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"facebook/bart-base\"", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_train\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_predict\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"best-model.pt\"", ")", "\n", "\n", "## Model parameters", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_lowercase\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--freeze_embeds\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Preprocessing/decoding-related parameters", "\n", "parser", ".", "add_argument", "(", "'--max_input_length'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--max_output_length'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--num_beams'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"--append_another_bos\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Training-related parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_batch_size\"", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for training.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_batch_size\"", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "default", "=", "3e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "\"The initial learning rate for Adam.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_proportion\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight decay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight deay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adam_epsilon\"", ",", "default", "=", "1e-8", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Epsilon for Adam optimizer.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_grad_norm\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gradient_accumulation_steps\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_train_epochs\"", ",", "default", "=", "30.0", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Total number of training epochs to perform.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_steps\"", ",", "default", "=", "500", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--total_steps\"", ",", "default", "=", "100000", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--wait_step'", ",", "type", "=", "int", ",", "default", "=", "10000000000", ")", "\n", "\n", "# Other parameters", "\n", "parser", ".", "add_argument", "(", "\"--verbose\"", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"If true, all of the warnings related to data processing will be printed. \"", "\n", "\"A number of warnings are expected for a normal SQuAD evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_period'", ",", "type", "=", "int", ",", "default", "=", "10000000", ",", "\n", "help", "=", "\"Evaluate & save model\"", ")", "\n", "parser", ".", "add_argument", "(", "'--prefix'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "\"Prefix for saving predictions\"", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Use a subset of data for debugging\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "42", ",", "\n", "help", "=", "\"random seed for initialization\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--custom_tasks_splits'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", "and", "os", ".", "listdir", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "print", "(", "\"Output directory () already exists and is not empty.\"", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "output_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "##### Start writing logs", "\n", "\n", "", "log_filename", "=", "\"{}log.txt\"", ".", "format", "(", "\"\"", "if", "args", ".", "do_train", "else", "\"eval_\"", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "format", "=", "'%(asctime)s - %(levelname)s - %(name)s - %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d/%Y %H:%M:%S'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "log_filename", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "logger", ".", "info", "(", "args", ".", "output_dir", ")", "\n", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "args", ".", "n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "args", ".", "n_gpu", ">", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n", "", "if", "not", "args", ".", "do_train", "and", "not", "args", ".", "do_predict", ":", "\n", "        ", "raise", "ValueError", "(", "\"At least one of `do_train` or `do_predict` must be True.\"", ")", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "not", "args", ".", "train_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `train_dir` must be specified.\"", ")", "\n", "", "if", "not", "args", ".", "predict_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "if", "args", ".", "do_predict", ":", "\n", "        ", "if", "not", "args", ".", "predict_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_predict` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Using {} gpus\"", ".", "format", "(", "args", ".", "n_gpu", ")", ")", "\n", "run", "(", "args", ",", "logger", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.cli_maml.main": [[31, 139], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "logging.basicConfig", "logging.getLogger", "logging.getLogger.info", "logging.getLogger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.device_count", "logging.getLogger.info", "run_maml.run", "os.path.exists", "os.listdir", "print", "os.path.exists", "os.makedirs", "torch.cuda.manual_seed_all", "ValueError", "ValueError", "ValueError", "ValueError", "logging.FileHandler", "logging.StreamHandler", "os.path.join"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "## Basic parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_dir\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_dir\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"facebook/bart-base\"", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_train\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_predict\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"best-model.pt\"", ")", "\n", "\n", "## Meta Learn parameters", "\n", "parser", ".", "add_argument", "(", "'--inner_bsz'", ",", "type", "=", "int", ",", "default", "=", "16", ")", "\n", "parser", ".", "add_argument", "(", "'--inner_lr'", ",", "type", "=", "float", ",", "default", "=", "3e-5", ")", "\n", "parser", ".", "add_argument", "(", "'--custom_tasks_splits'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "\n", "## Model parameters", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_lowercase\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--freeze_embeds\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Preprocessing/decoding-related parameters", "\n", "parser", ".", "add_argument", "(", "'--max_input_length'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--max_output_length'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--num_beams'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"--append_another_bos\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Training-related parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_batch_size\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for training.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_batch_size\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "default", "=", "3e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "\"The initial learning rate for Adam.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_proportion\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight decay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight deay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adam_epsilon\"", ",", "default", "=", "1e-8", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Epsilon for Adam optimizer.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_grad_norm\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gradient_accumulation_steps\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_train_epochs\"", ",", "default", "=", "30.0", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Total number of training epochs to perform.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_steps\"", ",", "default", "=", "500", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--total_steps\"", ",", "default", "=", "100000", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--wait_step'", ",", "type", "=", "int", ",", "default", "=", "10000000000", ")", "\n", "\n", "# Other parameters", "\n", "parser", ".", "add_argument", "(", "\"--verbose\"", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"If true, all of the warnings related to data processing will be printed. \"", "\n", "\"A number of warnings are expected for a normal SQuAD evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_period'", ",", "type", "=", "int", ",", "default", "=", "150", ",", "\n", "help", "=", "\"Evaluate & save model\"", ")", "\n", "parser", ".", "add_argument", "(", "'--prefix'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "\"Prefix for saving predictions\"", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Use a subset of data for debugging\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "42", ",", "\n", "help", "=", "\"random seed for initialization\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", "and", "os", ".", "listdir", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "print", "(", "\"Output directory () already exists and is not empty.\"", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "output_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "##### Start writing logs", "\n", "\n", "", "log_filename", "=", "\"{}log.txt\"", ".", "format", "(", "\"\"", "if", "args", ".", "do_train", "else", "\"eval_\"", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "format", "=", "'%(asctime)s - %(levelname)s - %(name)s - %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d/%Y %H:%M:%S'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "log_filename", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "logger", ".", "info", "(", "args", ".", "output_dir", ")", "\n", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "args", ".", "n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "args", ".", "n_gpu", ">", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n", "", "if", "not", "args", ".", "do_train", "and", "not", "args", ".", "do_predict", ":", "\n", "        ", "raise", "ValueError", "(", "\"At least one of `do_train` or `do_predict` must be True.\"", ")", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "not", "args", ".", "train_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `train_dir` must be specified.\"", ")", "\n", "", "if", "not", "args", ".", "predict_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "if", "args", ".", "do_predict", ":", "\n", "        ", "if", "not", "args", ".", "predict_dir", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_predict` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Using {} gpus\"", ".", "format", "(", "args", ".", "n_gpu", ")", ")", "\n", "run", "(", "args", ",", "logger", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run": [[16, 65], ["transformers.BartTokenizer.from_pretrained", "utils.get_tasks_list", "logger.info", "dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData", "dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataset", "dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "torch.cuda.is_available", "transformers.AdamW", "transformers.get_linear_schedule_with_warmup", "run_maml.train", "bart.MyBart.from_pretrained", "bart.MyBart.from_pretrained", "logger.info", "utils.freeze_embeds", "torch.nn.DataParallel", "torch.nn.DataParallel.to", "torch.device", "key.startswith", "_convert"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.get_tasks_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_embeds"], ["def", "run", "(", "args", ",", "logger", ")", ":", "\n", "    ", "tokenizer", "=", "BartTokenizer", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "train_tasks", "=", "get_tasks_list", "(", "args", ".", "custom_tasks_splits", ",", "\"train\"", ")", "\n", "logger", ".", "info", "(", "\"Training on the following tasks: {}\"", ".", "format", "(", "train_tasks", ")", ")", "\n", "\n", "train_data", "=", "NLPFewshotGymMetaLearningData", "(", "logger", ",", "args", ",", "args", ".", "train_dir", ",", "tasks", "=", "train_tasks", ",", "data_type", "=", "\"train\"", ",", "is_training", "=", "True", ")", "\n", "# dev_data = NLPFewshotGymMetaLearningData(logger, args, args.train_dir, tasks=DEFAULT_SPLIT[\"dev\"], data_type=\"dev\", is_training=False)", "\n", "dev_data", "=", "None", "\n", "\n", "train_data", ".", "load_dataset", "(", "tokenizer", ")", "\n", "train_data", ".", "load_dataloader", "(", ")", "\n", "\n", "# dev_data.load_dataset(tokenizer)", "\n", "# dev_data.load_dataloader()", "\n", "\n", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "args", ".", "checkpoint", "is", "not", "None", ":", "\n", "            ", "def", "convert_to_single_gpu", "(", "state_dict", ")", ":", "\n", "                ", "def", "_convert", "(", "key", ")", ":", "\n", "                    ", "if", "key", ".", "startswith", "(", "'module.'", ")", ":", "\n", "                        ", "return", "key", "[", "7", ":", "]", "\n", "", "return", "key", "\n", "", "return", "{", "_convert", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ",", "\n", "state_dict", "=", "convert_to_single_gpu", "(", "torch", ".", "load", "(", "args", ".", "checkpoint", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "MyBart", ".", "from_pretrained", "(", "args", ".", "model", ")", "\n", "\n", "", "if", "args", ".", "freeze_embeds", ":", "\n", "            ", "logger", ".", "info", "(", "\"Freezing embeddings\"", ")", "\n", "freeze_embeds", "(", "model", ")", "\n", "\n", "", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "model", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "\n", "", "no_decay", "=", "[", "'bias'", ",", "'LayerNorm.weight'", "]", "\n", "optimizer_grouped_parameters", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", "}", "\n", "]", "\n", "optimizer", "=", "AdamW", "(", "optimizer_grouped_parameters", ",", "lr", "=", "args", ".", "learning_rate", ",", "eps", "=", "args", ".", "adam_epsilon", ")", "\n", "scheduler", "=", "get_linear_schedule_with_warmup", "(", "optimizer", ",", "\n", "num_warmup_steps", "=", "args", ".", "warmup_steps", ",", "\n", "num_training_steps", "=", "args", ".", "total_steps", ")", "\n", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train": [[66, 161], ["model.train", "logger.info", "range", "torch.save", "int", "tqdm.tqdm", "v.cpu", "os.path.join", "torch.cuda.is_available", "utils.trim_batch", "utils.trim_batch", "utils.trim_batch", "utils.trim_batch", "torch.optim.SGD", "model.state_dict().items", "model.parameters", "higher.innerloop_ctx", "fnet", "train_losses.append", "diffopt.step", "fnet", "dev_losses.append", "fnet.backward", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "scheduler.step", "model.zero_grad", "b.to", "torch.isnan", "logger.info", "fnet.detach().cpu", "fnet.detach().cpu", "model.parameters", "logger.info", "model.state_dict", "torch.device", "fnet.detach", "fnet.detach", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.train", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch"], ["", "", "def", "train", "(", "args", ",", "logger", ",", "model", ",", "train_data", ",", "dev_data", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "global_batch", "=", "0", "\n", "global_step", "=", "0", "\n", "train_losses", "=", "[", "]", "\n", "dev_losses", "=", "[", "]", "\n", "best_accuracy", "=", "-", "1.0", "\n", "stop_training", "=", "False", "\n", "\n", "logger", ".", "info", "(", "\"Starting training!\"", ")", "\n", "for", "epoch", "in", "range", "(", "int", "(", "args", ".", "num_train_epochs", ")", ")", ":", "\n", "        ", "for", "batch", "in", "tqdm", "(", "train_data", ".", "dataloader", ",", "desc", "=", "\"Epoch {}\"", ".", "format", "(", "epoch", ")", ")", ":", "\n", "\n", "            ", "global_batch", "+=", "1", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "[", "0", "]", "]", "\n", "\n", "", "pad_token_id", "=", "train_data", ".", "tokenizer", ".", "pad_token_id", "\n", "\n", "# train batch", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "batch", "[", "2", "]", ",", "batch", "[", "3", "]", "=", "trim_batch", "(", "batch", "[", "2", "]", ",", "pad_token_id", ",", "batch", "[", "3", "]", ")", "\n", "\n", "# dev batch", "\n", "batch", "[", "4", "]", ",", "batch", "[", "5", "]", "=", "trim_batch", "(", "batch", "[", "4", "]", ",", "pad_token_id", ",", "batch", "[", "5", "]", ")", "\n", "batch", "[", "6", "]", ",", "batch", "[", "7", "]", "=", "trim_batch", "(", "batch", "[", "6", "]", ",", "pad_token_id", ",", "batch", "[", "7", "]", ")", "\n", "\n", "inner_opt", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "inner_lr", ")", "\n", "with", "higher", ".", "innerloop_ctx", "(", "\n", "model", ",", "inner_opt", ",", "copy_initial_weights", "=", "False", "\n", ")", "as", "(", "fnet", ",", "diffopt", ")", ":", "\n", "# print(\"train batch\")", "\n", "                ", "train_loss", "=", "fnet", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "decoder_input_ids", "=", "batch", "[", "2", "]", ",", "decoder_attention_mask", "=", "batch", "[", "3", "]", ",", "\n", "is_training", "=", "True", ")", "\n", "\n", "if", "torch", ".", "isnan", "(", "train_loss", ")", ".", "data", ":", "\n", "                    ", "logger", ".", "info", "(", "\"Stop training because loss=%s\"", "%", "(", "train_loss", ".", "data", ")", ")", "\n", "stop_training", "=", "True", "\n", "break", "# does this ever happen?", "\n", "\n", "", "train_losses", ".", "append", "(", "train_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "diffopt", ".", "step", "(", "train_loss", ")", "\n", "\n", "# print(\"dev batch\")", "\n", "dev_loss", "=", "fnet", "(", "input_ids", "=", "batch", "[", "4", "]", ",", "attention_mask", "=", "batch", "[", "5", "]", ",", "\n", "decoder_input_ids", "=", "batch", "[", "6", "]", ",", "decoder_attention_mask", "=", "batch", "[", "7", "]", ",", "\n", "is_training", "=", "True", ")", "\n", "dev_losses", ".", "append", "(", "dev_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "\n", "dev_loss", ".", "backward", "(", ")", "\n", "\n", "", "if", "global_batch", "%", "args", ".", "gradient_accumulation_steps", "==", "0", ":", "\n", "                ", "global_step", "+=", "1", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "optimizer", ".", "step", "(", ")", "# We have accumulated enough gradients", "\n", "scheduler", ".", "step", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "\n", "if", "global_step", "%", "args", ".", "eval_period", "==", "0", ":", "\n", "#     model.eval()", "\n", "#     curr_em = inference(model if args.n_gpu==1 else model.module, dev_data)", "\n", "#     logger.info(\"Step %d Train loss %.2f %s %s on epoch=%d\" % (", "\n", "#             global_step,", "\n", "#             np.mean(train_losses),", "\n", "#             dev_data.metric,", "\n", "#             curr_em,", "\n", "#             epoch))", "\n", "                    ", "logger", ".", "info", "(", "\"train loss: {}; dev loss: {}\"", ".", "format", "(", "np", ".", "mean", "(", "train_losses", ")", ",", "np", ".", "mean", "(", "dev_losses", ")", ")", ")", "\n", "train_losses", "=", "[", "]", "\n", "dev_losses", "=", "[", "]", "\n", "#     if best_accuracy < curr_em:", "\n", "#         model_state_dict = {k:v.cpu() for (k, v) in model.state_dict().items()}", "\n", "#         torch.save(model_state_dict, os.path.join(args.output_dir, \"best-model.pt\"))", "\n", "#         logger.info(\"Saving model with best %s: %s -> %s on epoch=%d, global_step=%d\" % \\", "\n", "#                 (dev_data.metric, best_accuracy, curr_em, epoch, global_step))", "\n", "#         best_accuracy = curr_em", "\n", "#         wait_step = 0", "\n", "#         stop_training = False", "\n", "#     else:", "\n", "#         wait_step += 1", "\n", "#         if wait_step >= args.wait_step:", "\n", "#             stop_training = True", "\n", "#             break", "\n", "#     model.train()", "\n", "\n", "", "", "if", "global_step", ">=", "args", ".", "total_steps", ":", "\n", "                ", "stop_training", "=", "True", "\n", "break", "\n", "\n", "", "", "if", "stop_training", ":", "\n", "            ", "break", "\n", "\n", "", "", "model_state_dict", "=", "{", "k", ":", "v", ".", "cpu", "(", ")", "for", "(", "k", ",", "v", ")", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", "}", "\n", "torch", ".", "save", "(", "model_state_dict", ",", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "\"last-model.pt\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.inference": [[162, 182], ["enumerate", "dev_data.evaluate", "torch.cuda.is_available", "utils.trim_batch", "model.generate", "zip", "dev_data.save_predictions", "dev_data.decode", "predictions.append", "b.to", "torch.device"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.evaluate", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.save_predictions", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "inference", "(", "model", ",", "dev_data", ",", "save_predictions", "=", "False", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "predictions", "=", "[", "]", "\n", "bos_token_id", "=", "dev_data", ".", "tokenizer", ".", "bos_token_id", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_data", ".", "dataloader", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "batch", "=", "[", "b", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "for", "b", "in", "batch", "]", "\n", "", "pad_token_id", "=", "dev_data", ".", "tokenizer", ".", "pad_token_id", "\n", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", "=", "trim_batch", "(", "batch", "[", "0", "]", ",", "pad_token_id", ",", "batch", "[", "1", "]", ")", "\n", "outputs", "=", "model", ".", "generate", "(", "input_ids", "=", "batch", "[", "0", "]", ",", "\n", "attention_mask", "=", "batch", "[", "1", "]", ",", "\n", "num_beams", "=", "dev_data", ".", "args", ".", "num_beams", ",", "\n", "max_length", "=", "dev_data", ".", "args", ".", "max_output_length", ",", "\n", "decoder_start_token_id", "=", "model", ".", "config", ".", "bos_token_id", ",", "\n", "early_stopping", "=", "dev_data", ".", "gen_early_stop", ",", ")", "\n", "for", "input_", ",", "output", "in", "zip", "(", "batch", "[", "0", "]", ",", "outputs", ")", ":", "\n", "            ", "pred", "=", "dev_data", ".", "decode", "(", "output", ")", "\n", "predictions", ".", "append", "(", "pred", ")", "\n", "", "", "if", "save_predictions", ":", "\n", "        ", "dev_data", ".", "save_predictions", "(", "predictions", ")", "\n", "", "return", "dev_data", ".", "evaluate", "(", "predictions", ",", "verbose", "=", "verbose", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.bart.MyBart.forward": [[10, 34], ["bart.MyBart.model", "torch.linear", "torch.linear", "transformers.modeling_bart.shift_tokens_right", "torch.log_softmax", "torch.log_softmax", "utils.label_smoothed_nll_loss"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.label_smoothed_nll_loss"], ["    ", "def", "forward", "(", "self", ",", "input_ids", ",", "attention_mask", "=", "None", ",", "encoder_outputs", "=", "None", ",", "\n", "decoder_input_ids", "=", "None", ",", "decoder_attention_mask", "=", "None", ",", "decoder_cached_states", "=", "None", ",", "\n", "use_cache", "=", "False", ",", "is_training", "=", "False", ")", ":", "\n", "\n", "        ", "if", "is_training", ":", "\n", "            ", "_decoder_input_ids", "=", "shift_tokens_right", "(", "decoder_input_ids", ",", "self", ".", "config", ".", "pad_token_id", ")", "\n", "", "else", ":", "\n", "            ", "_decoder_input_ids", "=", "decoder_input_ids", "\n", "\n", "", "outputs", "=", "self", ".", "model", "(", "\n", "input_ids", ",", "\n", "attention_mask", "=", "attention_mask", ",", "\n", "encoder_outputs", "=", "encoder_outputs", ",", "\n", "decoder_input_ids", "=", "_decoder_input_ids", ",", "\n", "decoder_attention_mask", "=", "decoder_attention_mask", ",", "\n", "decoder_cached_states", "=", "decoder_cached_states", ",", "\n", "use_cache", "=", "use_cache", ",", "\n", ")", "\n", "lm_logits", "=", "F", ".", "linear", "(", "outputs", "[", "0", "]", ",", "self", ".", "model", ".", "shared", ".", "weight", ",", "bias", "=", "self", ".", "final_logits_bias", ")", "\n", "if", "is_training", ":", "\n", "            ", "lprobs", "=", "F", ".", "log_softmax", "(", "lm_logits", ",", "dim", "=", "-", "1", ")", "\n", "loss", ",", "_", "=", "label_smoothed_nll_loss", "(", "lprobs", ",", "decoder_input_ids", ",", "epsilon", "=", "0.1", ",", "ignore_index", "=", "self", ".", "config", ".", "pad_token_id", ")", "\n", "return", "loss", "\n", "", "return", "(", "lm_logits", ",", ")", "+", "outputs", "[", "1", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.label_smoothed_nll_loss": [[5, 24], ["nll_loss.squeeze.sum", "smooth_loss.squeeze.sum", "target.unsqueeze.dim", "target.unsqueeze.unsqueeze", "lprobs.gather", "lprobs.sum", "target.unsqueeze.eq", "nll_loss.squeeze.masked_fill_", "smooth_loss.squeeze.masked_fill_", "nll_loss.squeeze.squeeze", "smooth_loss.squeeze.squeeze", "lprobs.size", "lprobs.dim"], "function", ["None"], ["def", "label_smoothed_nll_loss", "(", "lprobs", ",", "target", ",", "epsilon", "=", "0.1", ",", "ignore_index", "=", "-", "100", ")", ":", "\n", "    ", "\"\"\"From fairseq\"\"\"", "\n", "if", "target", ".", "dim", "(", ")", "==", "lprobs", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "target", "=", "target", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "nll_loss", "=", "-", "lprobs", ".", "gather", "(", "dim", "=", "-", "1", ",", "index", "=", "target", ")", "\n", "smooth_loss", "=", "-", "lprobs", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "ignore_index", "is", "not", "None", ":", "\n", "        ", "pad_mask", "=", "target", ".", "eq", "(", "ignore_index", ")", "\n", "nll_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "smooth_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "", "else", ":", "\n", "        ", "nll_loss", "=", "nll_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "smooth_loss", "=", "smooth_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "nll_loss", "=", "nll_loss", ".", "sum", "(", ")", "\n", "smooth_loss", "=", "smooth_loss", ".", "sum", "(", ")", "\n", "eps_i", "=", "epsilon", "/", "lprobs", ".", "size", "(", "-", "1", ")", "\n", "loss", "=", "(", "1.0", "-", "epsilon", ")", "*", "nll_loss", "+", "eps_i", "*", "smooth_loss", "\n", "return", "loss", ",", "nll_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params": [[25, 29], ["model.parameters"], "function", ["None"], ["", "def", "freeze_params", "(", "model", ":", "nn", ".", "Module", ")", ":", "\n", "    ", "\"\"\"Set requires_grad=False for each of model.parameters()\"\"\"", "\n", "for", "par", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "par", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_embeds": [[31, 48], ["utils.freeze_params", "utils.freeze_params", "utils.freeze_params", "utils.freeze_params", "utils.freeze_params", "utils.freeze_params", "utils.freeze_params"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.freeze_params"], ["", "", "def", "freeze_embeds", "(", "model", ")", ":", "\n", "    ", "\"\"\"Freeze token embeddings and positional embeddings for bart, just token embeddings for t5.\"\"\"", "\n", "model_type", "=", "model", ".", "config", ".", "model_type", "\n", "\n", "if", "model_type", "==", "\"t5\"", ":", "\n", "        ", "freeze_params", "(", "model", ".", "shared", ")", "\n", "for", "d", "in", "[", "model", ".", "encoder", ",", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n", "", "", "elif", "model_type", "==", "\"fsmt\"", ":", "\n", "        ", "for", "d", "in", "[", "model", ".", "model", ".", "encoder", ",", "model", ".", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_positions", ")", "\n", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n", "", "", "else", ":", "\n", "        ", "freeze_params", "(", "model", ".", "model", ".", "shared", ")", "\n", "for", "d", "in", "[", "model", ".", "model", ".", "encoder", ",", "model", ".", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_positions", ")", "\n", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.trim_batch": [[49, 60], ["input_ids.ne().any", "input_ids.ne"], "function", ["None"], ["", "", "", "def", "trim_batch", "(", "\n", "input_ids", ",", "\n", "pad_token_id", ",", "\n", "attention_mask", "=", "None", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Remove columns that are populated exclusively by pad_token_id\"\"\"", "\n", "keep_column_mask", "=", "input_ids", ".", "ne", "(", "pad_token_id", ")", ".", "any", "(", "dim", "=", "0", ")", "\n", "if", "attention_mask", "is", "None", ":", "\n", "        ", "return", "input_ids", "[", ":", ",", "keep_column_mask", "]", "\n", "", "else", ":", "\n", "        ", "return", "(", "input_ids", "[", ":", ",", "keep_column_mask", "]", ",", "attention_mask", "[", ":", ",", "keep_column_mask", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.utils.get_tasks_list": [[61, 65], ["open", "json.load"], "function", ["None"], ["", "", "def", "get_tasks_list", "(", "filename", ",", "split_name", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "fin", ":", "\n", "        ", "split_dict", "=", "json", ".", "load", "(", "fin", ")", "\n", "", "return", "split_dict", "[", "split_name", "]", "", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.cli_singletask.main": [[31, 135], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "logging.basicConfig", "logging.getLogger", "logging.getLogger.info", "logging.getLogger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.device_count", "logging.getLogger.info", "run_singletask.run", "os.path.exists", "os.listdir", "print", "os.path.exists", "os.makedirs", "torch.cuda.manual_seed_all", "ValueError", "ValueError", "ValueError", "ValueError", "logging.FileHandler", "logging.StreamHandler", "os.path.join"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args", "home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "## Basic parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--dev_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_file\"", ",", "default", "=", "\"data\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "default", "=", "\"nlp_forest_single\"", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"facebook/bart-base\"", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_train\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_predict\"", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"best-model.pt\"", ")", "\n", "\n", "## Model parameters", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--do_lowercase\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--freeze_embeds\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Preprocessing/decoding-related parameters", "\n", "parser", ".", "add_argument", "(", "'--max_input_length'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--max_output_length'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--num_beams'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"--append_another_bos\"", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "# Training-related parameters", "\n", "parser", ".", "add_argument", "(", "\"--train_batch_size\"", ",", "default", "=", "64", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for training.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_batch_size\"", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Batch size per GPU/CPU for evaluation.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "default", "=", "3e-5", ",", "type", "=", "float", ",", "\n", "help", "=", "\"The initial learning rate for Adam.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_proportion\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight decay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Weight deay if we apply some.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adam_epsilon\"", ",", "default", "=", "1e-8", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Epsilon for Adam optimizer.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_grad_norm\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gradient_accumulation_steps\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Max gradient norm.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_train_epochs\"", ",", "default", "=", "1000.0", ",", "type", "=", "float", ",", "\n", "help", "=", "\"Total number of training epochs to perform.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup_steps\"", ",", "default", "=", "500", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--total_steps\"", ",", "default", "=", "100000", ",", "type", "=", "int", ",", "\n", "help", "=", "\"Linear warmup over warmup_steps.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--wait_step'", ",", "type", "=", "int", ",", "default", "=", "10000000000", ")", "\n", "\n", "# Other parameters", "\n", "parser", ".", "add_argument", "(", "\"--quiet\"", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"If true, tqdm will not show progress bar\"", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_period'", ",", "type", "=", "int", ",", "default", "=", "2000", ",", "\n", "help", "=", "\"Evaluate & save model\"", ")", "\n", "parser", ".", "add_argument", "(", "'--prefix'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "\n", "help", "=", "\"Prefix for saving predictions\"", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Use a subset of data for debugging\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "42", ",", "\n", "help", "=", "\"random seed for initialization\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", "and", "os", ".", "listdir", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "print", "(", "\"Output directory () already exists and is not empty.\"", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "output_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "##### Start writing logs", "\n", "\n", "", "log_filename", "=", "\"{}log.txt\"", ".", "format", "(", "\"\"", "if", "args", ".", "do_train", "else", "\"eval_\"", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "format", "=", "'%(asctime)s - %(levelname)s - %(name)s - %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d/%Y %H:%M:%S'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "log_filename", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "logger", ".", "info", "(", "args", ".", "output_dir", ")", "\n", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "args", ".", "n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "args", ".", "n_gpu", ">", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n", "", "if", "not", "args", ".", "do_train", "and", "not", "args", ".", "do_predict", ":", "\n", "        ", "raise", "ValueError", "(", "\"At least one of `do_train` or `do_predict` must be True.\"", ")", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "        ", "if", "not", "args", ".", "train_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `train_dir` must be specified.\"", ")", "\n", "", "if", "not", "args", ".", "dev_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_train` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "if", "args", ".", "do_predict", ":", "\n", "        ", "if", "not", "args", ".", "test_file", ":", "\n", "            ", "raise", "ValueError", "(", "\"If `do_predict` is True, then `predict_dir` must be specified.\"", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Using {} gpus\"", ".", "format", "(", "args", ".", "n_gpu", ")", ")", "\n", "run", "(", "args", ",", "logger", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.__init__": [[19, 76], ["sorted", "os.path.join", "sorted", "os.listdir", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.data.append", "filename.endswith", "prefixes.append", "open", "fin.readlines", "line.strip().split", "train_examples.append", "open", "fin.readlines", "line.strip().split", "dev_examples.append", "filename.split", "os.path.join", "os.path.join", "line.strip", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "logger", ",", "args", ",", "data_path", ",", "tasks", ",", "data_split", ",", "data_type", ",", "is_training", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data_type", "=", "data_type", "\n", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n", "# keep \"sorted\" so that things are consistent across machines", "\n", "for", "task", "in", "sorted", "(", "tasks", ")", ":", "\n", "            ", "task_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "task", ")", "\n", "files", "=", "sorted", "(", "os", ".", "listdir", "(", "task_dir", ")", ")", "\n", "prefixes", "=", "[", "]", "\n", "for", "filename", "in", "files", ":", "\n", "                ", "if", "not", "filename", ".", "endswith", "(", "\".tsv\"", ")", ":", "\n", "                    ", "continue", "\n", "", "prefix", "=", "\"_\"", ".", "join", "(", "filename", ".", "split", "(", "\"_\"", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "prefix", "not", "in", "prefixes", ":", "\n", "                    ", "prefixes", ".", "append", "(", "prefix", ")", "\n", "\n", "", "", "for", "prefix", "in", "prefixes", ":", "\n", "                ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "task_dir", ",", "prefix", "+", "\"_train.tsv\"", ")", ")", "as", "fin", ":", "\n", "                    ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "\n", "", "train_examples", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "d", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "train_examples", ".", "append", "(", "(", "d", "[", "0", "]", ",", "d", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "task_dir", ",", "prefix", "+", "\"_dev.tsv\"", ")", ")", "as", "fin", ":", "\n", "                    ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "\n", "", "dev_examples", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "d", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "dev_examples", ".", "append", "(", "(", "d", "[", "0", "]", ",", "d", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "self", ".", "data", ".", "append", "(", "{", "\n", "\"task_name\"", ":", "task", ",", "\n", "\"task_prefix\"", ":", "prefix", ",", "\n", "\"train_examples\"", ":", "train_examples", ",", "\n", "\"dev_examples\"", ":", "dev_examples", "\n", "}", ")", "\n", "\n", "\n", "", "", "self", ".", "data_split", "=", "data_split", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "metric", "=", "\"EM\"", "\n", "self", ".", "tokenizer", "=", "None", "\n", "self", ".", "dataset", "=", "None", "\n", "self", ".", "dataloader", "=", "None", "\n", "self", ".", "cache", "=", "None", "\n", "\n", "self", ".", "load", "=", "not", "args", ".", "debug", "\n", "\n", "self", ".", "gen_early_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.__len__": [[77, 79], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.decode": [[80, 82], ["fewshot_gym_multitask.NLPFewshotGymMultiTaskData.tokenizer.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "self", ".", "tokenizer", ".", "decode", "(", "tokens", ",", "skip_special_tokens", "=", "True", ",", "clean_up_tokenization_spaces", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.decode_batch": [[83, 85], ["fewshot_gym_multitask.NLPFewshotGymMultiTaskData.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode_batch", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "[", "self", ".", "decode", "(", "_tokens", ")", "for", "_tokens", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.flatten": [[86, 92], ["metadata.append", "len", "len", "len"], "methods", ["None"], ["", "def", "flatten", "(", "self", ",", "answers", ")", ":", "\n", "        ", "new_answers", ",", "metadata", "=", "[", "]", ",", "[", "]", "\n", "for", "answer", "in", "answers", ":", "\n", "            ", "metadata", ".", "append", "(", "(", "len", "(", "new_answers", ")", ",", "len", "(", "new_answers", ")", "+", "len", "(", "answer", ")", ")", ")", "\n", "new_answers", "+=", "answer", "\n", "", "return", "new_answers", ",", "metadata", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataset": [[93, 171], ["tokenizer.__class__.__name__.replace", "split_identifier.endswith", "os.path.join", "utils.MyQADataset", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.args.custom_tasks_splits.split", "os.path.exists", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.flatten", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "range", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "tokenizer.batch_encode_plus", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "tokenizer.batch_encode_plus", "open", "json.load", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "len", "len", "input0.lower", "output0.lower", "open", "json.dump", "inputs.append", "outputs.append", "inputs.append", "outputs.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten"], ["", "def", "load_dataset", "(", "self", ",", "tokenizer", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "tokenizer", "=", "tokenizer", "\n", "postfix", "=", "tokenizer", ".", "__class__", ".", "__name__", ".", "replace", "(", "\"zer\"", ",", "\"zed\"", ")", "\n", "split_identifier", "=", "self", ".", "args", ".", "custom_tasks_splits", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "if", "split_identifier", ".", "endswith", "(", "\".json\"", ")", ":", "\n", "            ", "split_identifier", "=", "split_identifier", "[", ":", "-", "5", "]", "\n", "\n", "", "preprocessed_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "data_path", ",", "\n", "self", ".", "data_type", "+", "\"-multi-{}-{}.json\"", ".", "format", "(", "split_identifier", ",", "postfix", ")", "\n", ")", "\n", "\n", "if", "self", ".", "load", "and", "os", ".", "path", ".", "exists", "(", "preprocessed_path", ")", ":", "\n", "# load preprocessed input", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Loading pre-tokenized data from {}\"", ".", "format", "(", "preprocessed_path", ")", ")", "\n", "with", "open", "(", "preprocessed_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "input_ids", ",", "attention_mask", ",", "decoder_input_ids", ",", "decoder_attention_mask", ",", "metadata", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Start tokenizing ... {} instances\"", ".", "format", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "\n", "inputs", "=", "[", "]", "\n", "outputs", "=", "[", "]", "\n", "\n", "for", "task", "in", "self", ".", "data", ":", "\n", "                ", "task_name", "=", "task", "[", "\"task_name\"", "]", "\n", "if", "self", ".", "data_split", "==", "\"train\"", "or", "self", ".", "data_split", "==", "\"all\"", ":", "\n", "                    ", "for", "dp", "in", "task", "[", "\"train_examples\"", "]", ":", "\n", "                        ", "inputs", ".", "append", "(", "\" [{}] {}\"", ".", "format", "(", "task_name", ",", "dp", "[", "0", "]", ")", ")", "\n", "outputs", ".", "append", "(", "[", "\" \"", "+", "item", "for", "item", "in", "dp", "[", "1", "]", "]", ")", "\n", "", "", "if", "self", ".", "data_split", "==", "\"dev\"", "or", "self", ".", "data_split", "==", "\"all\"", ":", "\n", "                    ", "for", "dp", "in", "task", "[", "\"dev_examples\"", "]", ":", "\n", "                        ", "inputs", ".", "append", "(", "\" [{}] {}\"", ".", "format", "(", "task_name", ",", "dp", "[", "0", "]", ")", ")", "\n", "outputs", ".", "append", "(", "[", "\" \"", "+", "item", "for", "item", "in", "dp", "[", "1", "]", "]", ")", "\n", "\n", "", "", "", "outputs", ",", "metadata", "=", "self", ".", "flatten", "(", "outputs", ")", "# what is metadata?", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Printing 3 examples\"", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "inputs", "[", "i", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "outputs", "[", "i", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "do_lowercase", ":", "\n", "                ", "inputs", "=", "[", "input0", ".", "lower", "(", ")", "for", "input0", "in", "inputs", "]", "\n", "outputs", "=", "[", "output0", ".", "lower", "(", ")", "for", "output0", "in", "outputs", "]", "\n", "", "if", "self", ".", "args", ".", "append_another_bos", ":", "\n", "                ", "inputs", "=", "[", "\"<s> \"", "+", "input0", "for", "input0", "in", "inputs", "]", "\n", "outputs", "=", "[", "\"<s> \"", "+", "output0", "for", "output0", "in", "outputs", "]", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Input ...\"", ")", "\n", "tokenized_input", "=", "tokenizer", ".", "batch_encode_plus", "(", "inputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_input_length", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Output ...\"", ")", "\n", "tokenized_output", "=", "tokenizer", ".", "batch_encode_plus", "(", "outputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_output_length", ")", "\n", "\n", "input_ids", ",", "attention_mask", "=", "tokenized_input", "[", "\"input_ids\"", "]", ",", "tokenized_input", "[", "\"attention_mask\"", "]", "\n", "decoder_input_ids", ",", "decoder_attention_mask", "=", "tokenized_output", "[", "\"input_ids\"", "]", ",", "tokenized_output", "[", "\"attention_mask\"", "]", "\n", "if", "self", ".", "load", ":", "\n", "                ", "preprocessed_data", "=", "[", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "metadata", "]", "\n", "with", "open", "(", "preprocessed_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "                    ", "json", ".", "dump", "(", "[", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "metadata", "]", ",", "f", ")", "\n", "\n", "", "", "", "self", ".", "dataset", "=", "MyQADataset", "(", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "in_metadata", "=", "None", ",", "out_metadata", "=", "metadata", ",", "\n", "is_training", "=", "self", ".", "is_training", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Loaded {} examples from {} data\"", ".", "format", "(", "len", "(", "self", ".", "dataset", ")", ",", "self", ".", "data_type", ")", ")", "\n", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.load_dataloader": [[172, 176], ["utils.MyDataLoader"], "methods", ["None"], ["", "", "def", "load_dataloader", "(", "self", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataloader", "=", "MyDataLoader", "(", "self", ".", "args", ",", "self", ".", "dataset", ",", "self", ".", "is_training", ")", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.evaluate": [[177, 180], ["None"], "methods", ["None"], ["", "", "def", "evaluate", "(", "self", ",", "predictions", ",", "verbose", "=", "False", ")", ":", "\n", "# not used", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.NLPFewshotGymMultiTaskData.save_predictions": [[181, 191], ["os.path.join", "fewshot_gym_multitask.NLPFewshotGymMultiTaskData.logger.info", "len", "len", "len", "len", "open", "f.writelines", "prediction.strip", "len", "prediction.strip"], "methods", ["None"], ["", "def", "save_predictions", "(", "self", ",", "predictions", ")", ":", "\n", "        ", "assert", "len", "(", "predictions", ")", "==", "len", "(", "self", ")", ",", "(", "len", "(", "predictions", ")", ",", "len", "(", "self", ")", ")", "\n", "\n", "predictions", "=", "[", "'n/a'", "if", "len", "(", "prediction", ".", "strip", "(", ")", ")", "==", "0", "else", "prediction", "for", "prediction", "in", "predictions", "]", "\n", "prediction_text", "=", "[", "prediction", ".", "strip", "(", ")", "+", "'\\n'", "for", "prediction", "in", "predictions", "]", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "output_dir", ",", "\"{}_predictions.txt\"", ".", "format", "(", "self", ".", "args", ".", "prefix", ")", ")", "\n", "with", "open", "(", "save_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "writelines", "(", "prediction_text", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Saved prediction in {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.f1_score": [[192, 203], ["normalize_answer().split", "normalize_answer().split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len", "fewshot_gym_multitask.normalize_answer", "fewshot_gym_multitask.normalize_answer"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer"], ["", "", "def", "f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "prediction_tokens", "=", "normalize_answer", "(", "prediction", ")", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalize_answer", "(", "ground_truth", ")", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.get_f1_over_list": [[204, 210], ["fewshot_gym_multitask.f1_score", "type", "numpy.max", "len", "fewshot_gym_multitask.f1_score"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score"], ["", "def", "get_f1_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "f1_score", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "f1_score", "(", "prediction", ",", "groundtruth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_multitask.normalize_answer": [[211, 222], ["fewshot_gym_multitask.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_answer", "(", "s", ")", ":", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.evaluate": [[172, 212], ["len", "len", "zip", "numpy.mean", "len", "len", "ems.append", "zip", "numpy.mean", "new_predictions.append", "metrics.get_exact_match_over_list", "accs.append", "zip", "numpy.mean", "float", "new_predictions.append", "metrics.get_accruacy_over_list", "f1s.append", "sklearn.metrics.f1_score", "prediction.strip", "float", "metrics.get_f1_over_list", "metrics.get_matthews_corr", "metrics.evaluate.cast_to_float"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_exact_match_over_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_accruacy_over_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.get_f1_over_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_matthews_corr"], ["def", "evaluate", "(", "predictions", ",", "data", ",", "metric", ")", ":", "\n", "    ", "def", "cast_to_float", "(", "predictions", ")", ":", "\n", "        ", "new_predictions", "=", "[", "]", "\n", "for", "prediction", "in", "predictions", ":", "\n", "            ", "try", ":", "\n", "                ", "new_predictions", ".", "append", "(", "float", "(", "prediction", ".", "strip", "(", ")", ")", ")", "\n", "", "except", ":", "\n", "                ", "new_predictions", ".", "append", "(", "float", "(", "'NaN'", ")", ")", "\n", "", "", "assert", "len", "(", "new_predictions", ")", "==", "len", "(", "predictions", ")", "\n", "return", "new_predictions", "\n", "\n", "", "assert", "len", "(", "predictions", ")", "==", "len", "(", "data", ")", "\n", "\n", "if", "metric", "==", "\"EM\"", ":", "\n", "        ", "ems", "=", "[", "]", "\n", "for", "(", "prediction", ",", "dp", ")", "in", "zip", "(", "predictions", ",", "data", ")", ":", "\n", "            ", "ems", ".", "append", "(", "get_exact_match_over_list", "(", "prediction", ",", "dp", "[", "1", "]", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "ems", ")", "\n", "", "elif", "metric", "==", "\"ACC\"", ":", "\n", "        ", "accs", "=", "[", "]", "\n", "for", "(", "prediction", ",", "dp", ")", "in", "zip", "(", "predictions", ",", "data", ")", ":", "\n", "            ", "accs", ".", "append", "(", "get_accruacy_over_list", "(", "prediction", ",", "dp", "[", "1", "]", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "accs", ")", "\n", "", "elif", "metric", "==", "\"QA-F1\"", ":", "\n", "        ", "f1s", "=", "[", "]", "\n", "for", "(", "prediction", ",", "dp", ")", "in", "zip", "(", "predictions", ",", "data", ")", ":", "\n", "            ", "f1s", ".", "append", "(", "get_f1_over_list", "(", "prediction", ",", "dp", "[", "1", "]", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "f1s", ")", "\n", "", "elif", "metric", "==", "\"Classification-F1\"", ":", "\n", "        ", "return", "f1_score", "(", "[", "dp", "[", "1", "]", "[", "0", "]", "for", "dp", "in", "data", "]", ",", "predictions", ",", "average", "=", "\"macro\"", ")", "\n", "", "elif", "metric", "==", "\"Matthew-Correlation\"", ":", "\n", "        ", "return", "get_matthews_corr", "(", "data", ",", "predictions", ")", "\n", "", "elif", "metric", "==", "\"Pearson-Correlation\"", ":", "\n", "        ", "predictions", "=", "cast_to_float", "(", "predictions", ")", "\n", "return", "pearsonr", "(", "[", "float", "(", "dp", "[", "1", "]", "[", "0", "]", ")", "for", "dp", "in", "data", "]", ",", "predictions", ")", "[", "0", "]", "\n", "", "elif", "metric", "==", "\"Rouge-L\"", ":", "\n", "        ", "rouges", "=", "[", "]", "\n", "for", "(", "prediction", ",", "dp", ")", "in", "zip", "(", "predictions", ",", "data", ")", ":", "\n", "            ", "rouges", ".", "append", "(", "get_rouge_over_list", "(", "prediction", ",", "dp", "[", "1", "]", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "rouges", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_matthews_corr": [[213, 228], ["sklearn.metrics.matthews_corrcoef", "prediction.strip", "new_predictions.append", "new_predictions.append", "new_gold.append", "new_gold.append"], "function", ["None"], ["", "", "def", "get_matthews_corr", "(", "data", ",", "predictions", ")", ":", "\n", "# only cola is using this...?", "\n", "    ", "new_predictions", "=", "[", "]", "\n", "for", "prediction", "in", "predictions", ":", "\n", "        ", "if", "prediction", ".", "strip", "(", ")", "==", "\"acceptable\"", ":", "\n", "            ", "new_predictions", ".", "append", "(", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "new_predictions", ".", "append", "(", "0.0", ")", "\n", "", "", "new_gold", "=", "[", "]", "\n", "for", "dp", "in", "data", ":", "\n", "        ", "if", "dp", "[", "1", "]", "[", "0", "]", "==", "\"acceptable\"", ":", "\n", "            ", "new_gold", ".", "append", "(", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "new_gold", ".", "append", "(", "0.0", ")", "\n", "", "", "return", "matthews_corrcoef", "(", "new_gold", ",", "new_predictions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.qa_f1_score": [[229, 240], ["normalize_answer().split", "normalize_answer().split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len", "metrics.normalize_answer", "metrics.normalize_answer"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer"], ["", "def", "qa_f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "prediction_tokens", "=", "normalize_answer", "(", "prediction", ")", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalize_answer", "(", "ground_truth", ")", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.accuracy": [[241, 243], ["prediction.lower", "ground_truth.lower"], "function", ["None"], ["", "def", "accuracy", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "return", "prediction", ".", "lower", "(", ")", "==", "ground_truth", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_rouge_over_list": [[244, 257], ["rouge.Rouge", "set", "len", "type", "numpy.max", "metrics.get_rouge_over_list.remove_punc"], "function", ["None"], ["", "def", "get_rouge_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "", "if", "len", "(", "remove_punc", "(", "prediction", ")", ")", "==", "0", ":", "\n", "        ", "return", "0.0", "# during early stages, it might generate nothin?", "\n", "# print(prediction)", "\n", "", "rouge", "=", "Rouge", "(", ")", "\n", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "rouge", ".", "get_scores", "(", "prediction", ",", "gt", ",", "avg", "=", "True", ")", "[", "\"rouge-l\"", "]", "[", "\"f\"", "]", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "rouge", ".", "get_scores", "(", "prediction", ",", "groundtruth", ",", "avg", "=", "True", ")", "[", "\"rouge-l\"", "]", "[", "\"f\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_accruacy_over_list": [[258, 264], ["metrics.accuracy", "type", "numpy.max", "len", "metrics.accuracy"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.accuracy", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.accuracy"], ["", "def", "get_accruacy_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "accuracy", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "accuracy", "(", "prediction", ",", "groundtruth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_f1_over_list": [[265, 271], ["metrics.qa_f1_score", "type", "numpy.max", "len", "metrics.qa_f1_score"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.qa_f1_score", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.qa_f1_score"], ["", "def", "get_f1_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "qa_f1_score", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "qa_f1_score", "(", "prediction", ",", "groundtruth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_exact_match_over_list": [[272, 278], ["type", "numpy.max", "metrics.normalize_answer", "metrics.normalize_answer", "len", "metrics.get_exact_match_over_list"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.get_exact_match_over_list"], ["", "def", "get_exact_match_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "get_exact_match_over_list", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "(", "normalize_answer", "(", "prediction", ")", "==", "normalize_answer", "(", "groundtruth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.metrics.normalize_answer": [[279, 290], ["metrics.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_answer", "(", "s", ")", ":", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.__init__": [[20, 51], ["open", "fin.readlines", "line.strip().split", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.data.append", "[].split", "line.strip", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.data_path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "logger", ",", "args", ",", "data_path", ",", "data_type", ",", "is_training", ")", ":", "\n", "# should give the tasks used in this split in the var \"tasks\"", "\n", "        ", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data_type", "=", "data_type", "\n", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n", "self", ".", "task_name", "=", "\"_\"", ".", "join", "(", "self", ".", "data_path", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\"_\"", ")", "[", ":", "-", "3", "]", ")", "\n", "\n", "with", "open", "(", "data_path", ")", "as", "fin", ":", "\n", "            ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "\n", "# train_examples = []", "\n", "", "for", "line", "in", "lines", ":", "\n", "            ", "d", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "self", ".", "data", ".", "append", "(", "(", "d", "[", "0", "]", ",", "d", "[", "1", ":", "]", ")", ")", "\n", "\n", "\n", "", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "load", "=", "not", "args", ".", "debug", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "metric", "=", "METRICS", "[", "self", ".", "task_name", "]", "\n", "# self.max_input_length = self.args.max_input_length", "\n", "self", ".", "tokenizer", "=", "None", "\n", "self", ".", "dataset", "=", "None", "\n", "self", ".", "dataloader", "=", "None", "\n", "self", ".", "cache", "=", "None", "\n", "\n", "self", ".", "gen_early_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.decode": [[55, 57], ["fewshot_gym_singletask.NLPFewshotGymSingleTaskData.tokenizer.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "self", ".", "tokenizer", ".", "decode", "(", "tokens", ",", "skip_special_tokens", "=", "True", ",", "clean_up_tokenization_spaces", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.decode_batch": [[58, 60], ["fewshot_gym_singletask.NLPFewshotGymSingleTaskData.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode_batch", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "[", "self", ".", "decode", "(", "_tokens", ")", "for", "_tokens", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.flatten": [[61, 67], ["metadata.append", "len", "len", "len"], "methods", ["None"], ["", "def", "flatten", "(", "self", ",", "answers", ")", ":", "\n", "        ", "new_answers", ",", "metadata", "=", "[", "]", ",", "[", "]", "\n", "for", "answer", "in", "answers", ":", "\n", "            ", "metadata", ".", "append", "(", "(", "len", "(", "new_answers", ")", ",", "len", "(", "new_answers", ")", "+", "len", "(", "answer", ")", ")", ")", "\n", "new_answers", "+=", "answer", "\n", "", "return", "new_answers", ",", "metadata", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataset": [[68, 136], ["tokenizer.__class__.__name__.replace", "os.path.join", "utils.MyQADataset", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "[].replace", "os.path.exists", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "range", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.flatten", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "tokenizer.batch_encode_plus", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "tokenizer.batch_encode_plus", "open", "json.load", "inputs.append", "outputs.append", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "len", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.data_path.split", "len", "input0.lower", "output0.lower", "open", "json.dump", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.data_path.split"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten"], ["", "def", "load_dataset", "(", "self", ",", "tokenizer", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "tokenizer", "=", "tokenizer", "\n", "postfix", "=", "tokenizer", ".", "__class__", ".", "__name__", ".", "replace", "(", "\"zer\"", ",", "\"zed\"", ")", "\n", "\n", "preprocessed_path", "=", "os", ".", "path", ".", "join", "(", "\n", "\"/\"", ".", "join", "(", "self", ".", "data_path", ".", "split", "(", "\"/\"", ")", "[", ":", "-", "1", "]", ")", ",", "\n", "self", ".", "data_path", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "replace", "(", "\".tsv\"", ",", "\"-{}.json\"", ".", "format", "(", "postfix", ")", ")", ")", "\n", "\n", "\n", "if", "self", ".", "load", "and", "os", ".", "path", ".", "exists", "(", "preprocessed_path", ")", ":", "\n", "# load preprocessed input", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Loading pre-tokenized data from {}\"", ".", "format", "(", "preprocessed_path", ")", ")", "\n", "with", "open", "(", "preprocessed_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "input_ids", ",", "attention_mask", ",", "decoder_input_ids", ",", "decoder_attention_mask", ",", "metadata", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Start tokenizing ... {} instances\"", ".", "format", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "\n", "inputs", "=", "[", "]", "\n", "outputs", "=", "[", "]", "\n", "\n", "for", "dp", "in", "self", ".", "data", ":", "\n", "                ", "inputs", ".", "append", "(", "\" [{}] {}\"", ".", "format", "(", "self", ".", "task_name", ",", "dp", "[", "0", "]", ")", ")", "\n", "outputs", ".", "append", "(", "dp", "[", "1", "]", ")", "# is a list", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Printing 3 examples\"", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "inputs", "[", "i", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "outputs", "[", "i", "]", ")", "\n", "\n", "", "outputs", ",", "metadata", "=", "self", ".", "flatten", "(", "outputs", ")", "# what is metadata?", "\n", "\n", "if", "self", ".", "args", ".", "do_lowercase", ":", "\n", "                ", "inputs", "=", "[", "input0", ".", "lower", "(", ")", "for", "input0", "in", "inputs", "]", "\n", "outputs", "=", "[", "output0", ".", "lower", "(", ")", "for", "output0", "in", "outputs", "]", "\n", "", "if", "self", ".", "args", ".", "append_another_bos", ":", "\n", "                ", "inputs", "=", "[", "\"<s> \"", "+", "input0", "for", "input0", "in", "inputs", "]", "\n", "outputs", "=", "[", "\"<s> \"", "+", "output0", "for", "output0", "in", "outputs", "]", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Input ...\"", ")", "\n", "tokenized_input", "=", "tokenizer", ".", "batch_encode_plus", "(", "inputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_input_length", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Output ...\"", ")", "\n", "tokenized_output", "=", "tokenizer", ".", "batch_encode_plus", "(", "outputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_output_length", ")", "\n", "\n", "input_ids", ",", "attention_mask", "=", "tokenized_input", "[", "\"input_ids\"", "]", ",", "tokenized_input", "[", "\"attention_mask\"", "]", "\n", "decoder_input_ids", ",", "decoder_attention_mask", "=", "tokenized_output", "[", "\"input_ids\"", "]", ",", "tokenized_output", "[", "\"attention_mask\"", "]", "\n", "if", "self", ".", "load", ":", "\n", "                ", "preprocessed_data", "=", "[", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "metadata", "]", "\n", "with", "open", "(", "preprocessed_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "                    ", "json", ".", "dump", "(", "[", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "metadata", "]", ",", "f", ")", "\n", "\n", "", "", "", "self", ".", "dataset", "=", "MyQADataset", "(", "input_ids", ",", "attention_mask", ",", "\n", "decoder_input_ids", ",", "decoder_attention_mask", ",", "\n", "in_metadata", "=", "None", ",", "out_metadata", "=", "metadata", ",", "\n", "is_training", "=", "self", ".", "is_training", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Loaded {} examples from {} data\"", ".", "format", "(", "len", "(", "self", ".", "dataset", ")", ",", "self", ".", "data_type", ")", ")", "\n", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.load_dataloader": [[137, 141], ["utils.MyDataLoader"], "methods", ["None"], ["", "", "def", "load_dataloader", "(", "self", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataloader", "=", "MyDataLoader", "(", "self", ".", "args", ",", "self", ".", "dataset", ",", "self", ".", "is_training", ")", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.evaluate": [[142, 146], ["metrics.evaluate", "len", "len", "len", "len", "prediction.strip"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.evaluate"], ["", "", "def", "evaluate", "(", "self", ",", "predictions", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "assert", "len", "(", "predictions", ")", "==", "len", "(", "self", ")", ",", "(", "len", "(", "predictions", ")", ",", "len", "(", "self", ")", ")", "\n", "predictions", "=", "[", "prediction", ".", "strip", "(", ")", "for", "prediction", "in", "predictions", "]", "\n", "return", "evaluate", "(", "predictions", ",", "self", ".", "data", ",", "self", ".", "metric", ")", "\n", "# ems = []", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.NLPFewshotGymSingleTaskData.save_predictions": [[151, 161], ["os.path.join", "fewshot_gym_singletask.NLPFewshotGymSingleTaskData.logger.info", "len", "len", "len", "len", "open", "f.writelines", "prediction.strip", "len", "prediction.strip"], "methods", ["None"], ["", "def", "save_predictions", "(", "self", ",", "predictions", ")", ":", "\n", "        ", "assert", "len", "(", "predictions", ")", "==", "len", "(", "self", ")", ",", "(", "len", "(", "predictions", ")", ",", "len", "(", "self", ")", ")", "\n", "\n", "predictions", "=", "[", "'n/a'", "if", "len", "(", "prediction", ".", "strip", "(", ")", ")", "==", "0", "else", "prediction", "for", "prediction", "in", "predictions", "]", "\n", "prediction_text", "=", "[", "prediction", ".", "strip", "(", ")", "+", "'\\n'", "for", "prediction", "in", "predictions", "]", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "output_dir", ",", "\"{}_predictions.txt\"", ".", "format", "(", "self", ".", "args", ".", "prefix", ")", ")", "\n", "with", "open", "(", "save_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "writelines", "(", "prediction_text", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Saved prediction in {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.f1_score": [[162, 173], ["normalize_answer().split", "normalize_answer().split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len", "fewshot_gym_singletask.normalize_answer", "fewshot_gym_singletask.normalize_answer"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer"], ["", "", "def", "f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "prediction_tokens", "=", "normalize_answer", "(", "prediction", ")", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalize_answer", "(", "ground_truth", ")", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.get_exact_match": [[174, 180], ["type", "numpy.max", "fewshot_gym_singletask.normalize_answer", "fewshot_gym_singletask.normalize_answer", "len", "fewshot_gym_singletask.get_exact_match"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.get_exact_match"], ["", "def", "get_exact_match", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "get_exact_match", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "(", "normalize_answer", "(", "prediction", ")", "==", "normalize_answer", "(", "groundtruth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.get_f1_over_list": [[181, 187], ["fewshot_gym_singletask.f1_score", "type", "numpy.max", "len", "fewshot_gym_singletask.f1_score"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score"], ["", "def", "get_f1_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "f1_score", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "f1_score", "(", "prediction", ",", "groundtruth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_singletask.normalize_answer": [[188, 199], ["fewshot_gym_singletask.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_answer", "(", "s", ")", ":", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyQADataset.__init__": [[12, 29], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "list", "list", "len", "len", "len", "len", "zip", "zip", "range", "range", "range", "range", "len", "len", "len", "len"], "methods", ["None"], ["        ", "pad_mask", "=", "target", ".", "eq", "(", "ignore_index", ")", "\n", "nll_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "smooth_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "", "else", ":", "\n", "        ", "nll_loss", "=", "nll_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "smooth_loss", "=", "smooth_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "nll_loss", "=", "nll_loss", ".", "sum", "(", ")", "\n", "smooth_loss", "=", "smooth_loss", ".", "sum", "(", ")", "\n", "eps_i", "=", "epsilon", "/", "lprobs", ".", "size", "(", "-", "1", ")", "\n", "loss", "=", "(", "1.0", "-", "epsilon", ")", "*", "nll_loss", "+", "eps_i", "*", "smooth_loss", "\n", "return", "loss", ",", "nll_loss", "\n", "\n", "", "def", "freeze_params", "(", "model", ":", "nn", ".", "Module", ")", ":", "\n", "    ", "\"\"\"Set requires_grad=False for each of model.parameters()\"\"\"", "\n", "for", "par", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "par", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyQADataset.__len__": [[30, 32], ["len"], "methods", ["None"], ["\n", "", "", "def", "freeze_embeds", "(", "model", ")", ":", "\n", "    ", "\"\"\"Freeze token embeddings and positional embeddings for bart, just token embeddings for t5.\"\"\"", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyQADataset.__getitem__": [[33, 42], ["numpy.random.choice", "numpy.random.choice", "range", "range"], "methods", ["None"], ["model_type", "=", "model", ".", "config", ".", "model_type", "\n", "\n", "if", "model_type", "==", "\"t5\"", ":", "\n", "        ", "freeze_params", "(", "model", ".", "shared", ")", "\n", "for", "d", "in", "[", "model", ".", "encoder", ",", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n", "", "", "elif", "model_type", "==", "\"fsmt\"", ":", "\n", "        ", "for", "d", "in", "[", "model", ".", "model", ".", "encoder", ",", "model", ".", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_positions", ")", "\n", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyDataLoader.__init__": [[45, 53], ["torch.utils.data.DataLoader.__init__", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.__init__"], ["for", "d", "in", "[", "model", ".", "model", ".", "encoder", ",", "model", ".", "model", ".", "decoder", "]", ":", "\n", "            ", "freeze_params", "(", "d", ".", "embed_positions", ")", "\n", "freeze_params", "(", "d", ".", "embed_tokens", ")", "\n", "\n", "", "", "", "def", "trim_batch", "(", "\n", "input_ids", ",", "\n", "pad_token_id", ",", "\n", "attention_mask", "=", "None", ",", "\n", ")", ":", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataset.__init__": [[55, 93], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["None"], ["keep_column_mask", "=", "input_ids", ".", "ne", "(", "pad_token_id", ")", ".", "any", "(", "dim", "=", "0", ")", "\n", "if", "attention_mask", "is", "None", ":", "\n", "        ", "return", "input_ids", "[", ":", ",", "keep_column_mask", "]", "\n", "", "else", ":", "\n", "        ", "return", "(", "input_ids", "[", ":", ",", "keep_column_mask", "]", ",", "attention_mask", "[", ":", ",", "keep_column_mask", "]", ")", "\n", "\n", "", "", "def", "get_tasks_list", "(", "filename", ",", "split_name", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "fin", ":", "\n", "        ", "split_dict", "=", "json", ".", "load", "(", "fin", ")", "\n", "", "return", "split_dict", "[", "split_name", "]", "", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataset.__len__": [[94, 96], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataset.__getitem__": [[97, 144], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "numpy.random.choice", "numpy.random.choice", "torch.stack.append", "torch.stack.append", "numpy.random.choice", "torch.stack.append", "torch.stack.append", "numpy.random.choice", "numpy.random.choice", "torch.stack.append", "torch.stack.append", "numpy.random.choice", "torch.stack.append", "torch.stack.append", "range", "range", "range", "range", "range", "range"], "methods", ["None"], []], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataLoader.__init__": [[147, 158], ["torch.utils.data.DataLoader.__init__", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.__init__"], []], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataLoader.dummy_collate": [[159, 161], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.utils.MyMetaLearningDataLoader.inference_dataloader": [[162, 172], ["enumerate", "range", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.__init__": [[19, 76], ["sorted", "os.path.join", "sorted", "os.listdir", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.data.append", "filename.endswith", "prefixes.append", "open", "fin.readlines", "line.strip().split", "train_examples.append", "open", "fin.readlines", "line.strip().split", "dev_examples.append", "filename.split", "os.path.join", "os.path.join", "line.strip", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "logger", ",", "args", ",", "data_path", ",", "tasks", ",", "data_type", ",", "is_training", ")", ":", "\n", "# should give the tasks used in this split in the var \"tasks\"", "\n", "        ", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data_type", "=", "data_type", "\n", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n", "# keep \"sorted\" so that things are consistent across machines", "\n", "for", "task", "in", "sorted", "(", "tasks", ")", ":", "\n", "            ", "task_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "task", ")", "\n", "files", "=", "sorted", "(", "os", ".", "listdir", "(", "task_dir", ")", ")", "\n", "prefixes", "=", "[", "]", "\n", "for", "filename", "in", "files", ":", "\n", "                ", "if", "not", "filename", ".", "endswith", "(", "\".tsv\"", ")", ":", "\n", "                    ", "continue", "\n", "", "prefix", "=", "\"_\"", ".", "join", "(", "filename", ".", "split", "(", "\"_\"", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "prefix", "not", "in", "prefixes", ":", "\n", "                    ", "prefixes", ".", "append", "(", "prefix", ")", "\n", "\n", "", "", "for", "prefix", "in", "prefixes", ":", "\n", "                ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "task_dir", ",", "prefix", "+", "\"_train.tsv\"", ")", ")", "as", "fin", ":", "\n", "                    ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "\n", "", "train_examples", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "d", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "train_examples", ".", "append", "(", "(", "d", "[", "0", "]", ",", "d", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "task_dir", ",", "prefix", "+", "\"_dev.tsv\"", ")", ")", "as", "fin", ":", "\n", "                    ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "\n", "", "dev_examples", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "d", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "dev_examples", ".", "append", "(", "(", "d", "[", "0", "]", ",", "d", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "self", ".", "data", ".", "append", "(", "{", "\n", "\"task_name\"", ":", "task", ",", "\n", "\"task_prefix\"", ":", "prefix", ",", "\n", "\"train_examples\"", ":", "train_examples", ",", "\n", "\"dev_examples\"", ":", "dev_examples", "\n", "}", ")", "\n", "\n", "\n", "", "", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "metric", "=", "\"F1\"", "\n", "self", ".", "tokenizer", "=", "None", "\n", "self", ".", "dataset", "=", "None", "\n", "self", ".", "dataloader", "=", "None", "\n", "self", ".", "cache", "=", "None", "\n", "\n", "self", ".", "load", "=", "not", "args", ".", "debug", "\n", "\n", "self", ".", "gen_early_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.__len__": [[77, 79], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode": [[80, 82], ["fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.tokenizer.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "self", ".", "tokenizer", ".", "decode", "(", "tokens", ",", "skip_special_tokens", "=", "True", ",", "clean_up_tokenization_spaces", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode_batch": [[83, 85], ["fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.decode"], ["", "def", "decode_batch", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "[", "self", ".", "decode", "(", "_tokens", ")", "for", "_tokens", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten": [[86, 92], ["metadata.append", "len", "len", "len"], "methods", ["None"], ["", "def", "flatten", "(", "self", ",", "answers", ")", ":", "\n", "        ", "new_answers", ",", "metadata", "=", "[", "]", ",", "[", "]", "\n", "for", "answer", "in", "answers", ":", "\n", "            ", "metadata", ".", "append", "(", "(", "len", "(", "new_answers", ")", ",", "len", "(", "new_answers", ")", "+", "len", "(", "answer", ")", ")", ")", "\n", "new_answers", "+=", "answer", "\n", "", "return", "new_answers", ",", "metadata", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataset": [[93, 215], ["tokenizer.__class__.__name__.replace", "split_identifier.endswith", "os.path.join", "utils.MyMetaLearningDataset", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.args.custom_tasks_splits.split", "os.path.exists", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "range", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "tokenizer.batch_encode_plus", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "tokenizer.batch_encode_plus", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "tokenizer.batch_encode_plus", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "tokenizer.batch_encode_plus", "open", "json.load", "train_metadata_task.append", "dev_metadata_task.append", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "len", "len", "train_inputs.append", "train_outputs.append", "len", "dev_inputs.append", "dev_outputs.append", "len", "input0.lower", "output0.lower", "input0.lower", "output0.lower", "open", "json.dump"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.flatten"], ["", "def", "load_dataset", "(", "self", ",", "tokenizer", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "tokenizer", "=", "tokenizer", "\n", "postfix", "=", "tokenizer", ".", "__class__", ".", "__name__", ".", "replace", "(", "\"zer\"", ",", "\"zed\"", ")", "\n", "split_identifier", "=", "self", ".", "args", ".", "custom_tasks_splits", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "if", "split_identifier", ".", "endswith", "(", "\".json\"", ")", ":", "\n", "            ", "split_identifier", "=", "split_identifier", "[", ":", "-", "5", "]", "\n", "\n", "", "preprocessed_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "data_path", ",", "\n", "self", ".", "data_type", "+", "\"-meta-{}-{}.json\"", ".", "format", "(", "split_identifier", ",", "postfix", ")", "\n", ")", "\n", "\n", "if", "self", ".", "load", "and", "os", ".", "path", ".", "exists", "(", "preprocessed_path", ")", ":", "\n", "# load preprocessed input", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Loading pre-tokenized data from {}\"", ".", "format", "(", "preprocessed_path", ")", ")", "\n", "with", "open", "(", "preprocessed_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "train_input_ids", ",", "train_attention_mask", ",", "train_decoder_input_ids", ",", "train_decoder_attention_mask", ",", "train_metadata_task", ",", "train_metadata_questions", ",", "dev_input_ids", ",", "dev_attention_mask", ",", "dev_decoder_input_ids", ",", "dev_decoder_attention_mask", ",", "dev_metadata_task", ",", "dev_metadata_questions", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Start tokenizing ... {} instances\"", ".", "format", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "\n", "train_inputs", "=", "[", "]", "\n", "train_outputs", "=", "[", "]", "\n", "dev_inputs", "=", "[", "]", "\n", "dev_outputs", "=", "[", "]", "\n", "train_metadata_task", ",", "train_metadata_questions", "=", "[", "]", ",", "[", "]", "\n", "train_st", ",", "train_ed", "=", "0", ",", "0", "\n", "dev_metadata_task", ",", "dev_metadata_questions", "=", "[", "]", ",", "[", "]", "\n", "dev_st", ",", "dev_ed", "=", "0", ",", "0", "\n", "\n", "for", "task", "in", "self", ".", "data", ":", "\n", "                ", "task_name", "=", "task", "[", "\"task_name\"", "]", "\n", "\n", "for", "dp", "in", "task", "[", "\"train_examples\"", "]", ":", "\n", "                    ", "train_inputs", ".", "append", "(", "\" [{}] {}\"", ".", "format", "(", "task_name", ",", "dp", "[", "0", "]", ")", ")", "\n", "train_outputs", ".", "append", "(", "[", "\" \"", "+", "item", "for", "item", "in", "dp", "[", "1", "]", "]", ")", "\n", "\n", "", "train_st", "=", "train_ed", "\n", "train_ed", "=", "train_ed", "+", "len", "(", "task", "[", "\"train_examples\"", "]", ")", "\n", "train_metadata_task", ".", "append", "(", "(", "train_st", ",", "train_ed", ")", ")", "\n", "\n", "\n", "for", "dp", "in", "task", "[", "\"dev_examples\"", "]", ":", "\n", "                    ", "dev_inputs", ".", "append", "(", "\" [{}] {}\"", ".", "format", "(", "task_name", ",", "dp", "[", "0", "]", ")", ")", "\n", "dev_outputs", ".", "append", "(", "[", "\" \"", "+", "item", "for", "item", "in", "dp", "[", "1", "]", "]", ")", "\n", "\n", "", "dev_st", "=", "dev_ed", "\n", "dev_ed", "=", "dev_ed", "+", "len", "(", "task", "[", "\"dev_examples\"", "]", ")", "\n", "dev_metadata_task", ".", "append", "(", "(", "dev_st", ",", "dev_ed", ")", ")", "\n", "\n", "", "train_outputs", ",", "train_metadata_questions", "=", "self", ".", "flatten", "(", "train_outputs", ")", "\n", "dev_outputs", ",", "dev_metadata_questions", "=", "self", ".", "flatten", "(", "dev_outputs", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Printing 3 examples\"", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "dev_inputs", "[", "i", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "dev_outputs", "[", "i", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "do_lowercase", ":", "\n", "                ", "train_inputs", "=", "[", "input0", ".", "lower", "(", ")", "for", "input0", "in", "train_inputs", "]", "\n", "train_outputs", "=", "[", "output0", ".", "lower", "(", ")", "for", "output0", "in", "train_outputs", "]", "\n", "dev_inputs", "=", "[", "input0", ".", "lower", "(", ")", "for", "input0", "in", "dev_inputs", "]", "\n", "dev_outputs", "=", "[", "output0", ".", "lower", "(", ")", "for", "output0", "in", "dev_outputs", "]", "\n", "", "if", "self", ".", "args", ".", "append_another_bos", ":", "\n", "                ", "train_inputs", "=", "[", "\"<s> \"", "+", "input0", "for", "input0", "in", "train_inputs", "]", "\n", "train_outputs", "=", "[", "\"<s> \"", "+", "output0", "for", "output0", "in", "train_outputs", "]", "\n", "dev_inputs", "=", "[", "\"<s> \"", "+", "input0", "for", "input0", "in", "dev_inputs", "]", "\n", "dev_outputs", "=", "[", "\"<s> \"", "+", "output0", "for", "output0", "in", "dev_outputs", "]", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Train Input ...\"", ")", "\n", "train_tokenized_input", "=", "tokenizer", ".", "batch_encode_plus", "(", "train_inputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_input_length", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Train Output ...\"", ")", "\n", "train_tokenized_output", "=", "tokenizer", ".", "batch_encode_plus", "(", "train_outputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_output_length", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Dev Input ...\"", ")", "\n", "dev_tokenized_input", "=", "tokenizer", ".", "batch_encode_plus", "(", "dev_inputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_input_length", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Tokenizing Dev Output ...\"", ")", "\n", "dev_tokenized_output", "=", "tokenizer", ".", "batch_encode_plus", "(", "dev_outputs", ",", "\n", "pad_to_max_length", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_output_length", ")", "\n", "\n", "train_input_ids", ",", "train_attention_mask", "=", "train_tokenized_input", "[", "\"input_ids\"", "]", ",", "train_tokenized_input", "[", "\"attention_mask\"", "]", "\n", "train_decoder_input_ids", ",", "train_decoder_attention_mask", "=", "train_tokenized_output", "[", "\"input_ids\"", "]", ",", "train_tokenized_output", "[", "\"attention_mask\"", "]", "\n", "\n", "dev_input_ids", ",", "dev_attention_mask", "=", "dev_tokenized_input", "[", "\"input_ids\"", "]", ",", "dev_tokenized_input", "[", "\"attention_mask\"", "]", "\n", "dev_decoder_input_ids", ",", "dev_decoder_attention_mask", "=", "dev_tokenized_output", "[", "\"input_ids\"", "]", ",", "dev_tokenized_output", "[", "\"attention_mask\"", "]", "\n", "\n", "\n", "if", "self", ".", "load", ":", "\n", "\n", "                ", "with", "open", "(", "preprocessed_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "                    ", "json", ".", "dump", "(", "[", "train_input_ids", ",", "train_attention_mask", ",", "\n", "train_decoder_input_ids", ",", "train_decoder_attention_mask", ",", "\n", "train_metadata_task", ",", "train_metadata_questions", ",", "\n", "dev_input_ids", ",", "dev_attention_mask", ",", "\n", "dev_decoder_input_ids", ",", "dev_decoder_attention_mask", ",", "\n", "dev_metadata_task", ",", "dev_metadata_questions", "\n", "]", ",", "f", ")", "\n", "\n", "", "", "", "self", ".", "dataset", "=", "MyMetaLearningDataset", "(", "train_input_ids", ",", "train_attention_mask", ",", "\n", "train_decoder_input_ids", ",", "train_decoder_attention_mask", ",", "\n", "train_metadata_task", ",", "train_metadata_questions", ",", "\n", "dev_input_ids", ",", "dev_attention_mask", ",", "\n", "dev_decoder_input_ids", ",", "dev_decoder_attention_mask", ",", "\n", "dev_metadata_task", ",", "dev_metadata_questions", ",", "\n", "inner_bsz", "=", "self", ".", "args", ".", "inner_bsz", ",", "\n", "is_training", "=", "self", ".", "is_training", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Loaded {} examples from {} data\"", ".", "format", "(", "len", "(", "self", ".", "dataset", ")", ",", "self", ".", "data_type", ")", ")", "\n", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.load_dataloader": [[216, 220], ["utils.MyMetaLearningDataLoader"], "methods", ["None"], ["", "", "def", "load_dataloader", "(", "self", ",", "do_return", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataloader", "=", "MyMetaLearningDataLoader", "(", "self", ".", "args", ",", "self", ".", "dataset", ",", "self", ".", "is_training", ")", "\n", "if", "do_return", ":", "\n", "            ", "return", "self", ".", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.evaluate": [[221, 224], ["None"], "methods", ["None"], ["", "", "def", "evaluate", "(", "self", ",", "predictions", ",", "verbose", "=", "False", ")", ":", "\n", "# not used", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.save_predictions": [[225, 235], ["os.path.join", "fewshot_gym_metalearn.NLPFewshotGymMetaLearningData.logger.info", "len", "len", "len", "len", "open", "f.writelines", "prediction.strip", "len", "prediction.strip"], "methods", ["None"], ["", "def", "save_predictions", "(", "self", ",", "predictions", ")", ":", "\n", "        ", "assert", "len", "(", "predictions", ")", "==", "len", "(", "self", ")", ",", "(", "len", "(", "predictions", ")", ",", "len", "(", "self", ")", ")", "\n", "\n", "predictions", "=", "[", "'n/a'", "if", "len", "(", "prediction", ".", "strip", "(", ")", ")", "==", "0", "else", "prediction", "for", "prediction", "in", "predictions", "]", "\n", "prediction_text", "=", "[", "prediction", ".", "strip", "(", ")", "+", "'\\n'", "for", "prediction", "in", "predictions", "]", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "output_dir", ",", "\"{}_predictions.txt\"", ".", "format", "(", "self", ".", "args", ".", "prefix", ")", ")", "\n", "with", "open", "(", "save_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "writelines", "(", "prediction_text", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Saved prediction in {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score": [[236, 247], ["normalize_answer().split", "normalize_answer().split", "sum", "collections.Counter", "collections.Counter", "common.values", "len", "len", "fewshot_gym_metalearn.normalize_answer", "fewshot_gym_metalearn.normalize_answer"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer"], ["", "", "def", "f1_score", "(", "prediction", ",", "ground_truth", ")", ":", "\n", "    ", "prediction_tokens", "=", "normalize_answer", "(", "prediction", ")", ".", "split", "(", ")", "\n", "ground_truth_tokens", "=", "normalize_answer", "(", "ground_truth", ")", ".", "split", "(", ")", "\n", "common", "=", "Counter", "(", "prediction_tokens", ")", "&", "Counter", "(", "ground_truth_tokens", ")", "\n", "num_same", "=", "sum", "(", "common", ".", "values", "(", ")", ")", "\n", "if", "num_same", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "precision", "=", "1.0", "*", "num_same", "/", "len", "(", "prediction_tokens", ")", "\n", "recall", "=", "1.0", "*", "num_same", "/", "len", "(", "ground_truth_tokens", ")", "\n", "f1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.get_f1_over_list": [[248, 254], ["fewshot_gym_metalearn.f1_score", "type", "numpy.max", "len", "fewshot_gym_metalearn.f1_score"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score", "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.f1_score"], ["", "def", "get_f1_over_list", "(", "prediction", ",", "groundtruth", ")", ":", "\n", "    ", "if", "type", "(", "groundtruth", ")", "==", "list", ":", "\n", "        ", "if", "len", "(", "groundtruth", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "np", ".", "max", "(", "[", "f1_score", "(", "prediction", ",", "gt", ")", "for", "gt", "in", "groundtruth", "]", ")", "\n", "", "return", "f1_score", "(", "prediction", ",", "groundtruth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.dataloader.fewshot_gym_metalearn.normalize_answer": [[255, 266], ["fewshot_gym_metalearn.normalize_answer.white_space_fix"], "function", ["None"], ["", "def", "normalize_answer", "(", "s", ")", ":", "\n", "    ", "def", "remove_articles", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\b(a|an|the)\\b'", ",", "' '", ",", "text", ")", "\n", "", "def", "white_space_fix", "(", "text", ")", ":", "\n", "        ", "return", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "", "def", "remove_punc", "(", "text", ")", ":", "\n", "        ", "exclude", "=", "set", "(", "string", ".", "punctuation", ")", "\n", "return", "''", ".", "join", "(", "ch", "for", "ch", "in", "text", "if", "ch", "not", "in", "exclude", ")", "\n", "", "def", "lower", "(", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", "\n", "", "return", "white_space_fix", "(", "remove_articles", "(", "remove_punc", "(", "lower", "(", "s", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emotion.Emotion.__init__": [[8, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"emotion\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "[", "\"sadness\"", ",", "\"joy\"", ",", "\"love\"", ",", "\"anger\"", ",", "\"fear\"", ",", "\"surprise\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emotion.Emotion.map_hf_dataset_to_list": [[16, 22], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emotion.Emotion.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'emotion'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emotion.main": [[26, 31], ["emotion.Emotion", "Emotion.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Emotion", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_copa.Superglue_COPA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-copa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_copa.Superglue_COPA.get_choices_and_answer_string": [[14, 22], ["None"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"label\"", "]", "\n", "choices_string", "=", "\" (A) \"", "+", "datapoint", "[", "\"choice1\"", "]", "+", "\" (B) \"", "+", "datapoint", "[", "\"choice2\"", "]", "\n", "if", "answer_index", "==", "0", ":", "\n", "            ", "answer_string", "=", "datapoint", "[", "\"choice1\"", "]", "\n", "", "else", ":", "\n", "            ", "answer_string", "=", "datapoint", "[", "\"choice2\"", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_copa.Superglue_COPA.map_hf_dataset_to_list": [[23, 29], ["superglue_copa.Superglue_COPA.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"premise\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_copa.Superglue_COPA.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"super_glue\"", ",", "\"copa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_copa.main": [[33, 38], ["superglue_copa.Superglue_COPA", "Superglue_COPA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_COPA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiki_bio\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"cc-by-3.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.get_train_test_lines": [[14, 26], ["wiki_bio.WikiBio.map_hf_dataset_to_list", "wiki_bio.WikiBio.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"val\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.01", "*", "n", ")", "]", "\n", "# using 1% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.make_input_text": [[27, 34], ["zip", "[].strip", "len", "len", "b.strip().replace", "b.strip"], "methods", ["None"], ["", "def", "make_input_text", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "input_text", "=", "datapoint", "[", "\"input_text\"", "]", "[", "\"context\"", "]", ".", "strip", "(", ")", "+", "\" [SEP] \"", "\n", "if", "len", "(", "datapoint", "[", "\"input_text\"", "]", "[", "\"table\"", "]", "[", "\"column_header\"", "]", ")", "!=", "len", "(", "datapoint", "[", "\"input_text\"", "]", "[", "\"table\"", "]", "[", "\"content\"", "]", ")", ":", "\n", "            ", "return", "None", "\n", "", "for", "a", ",", "b", "in", "zip", "(", "datapoint", "[", "\"input_text\"", "]", "[", "\"table\"", "]", "[", "\"column_header\"", "]", ",", "datapoint", "[", "\"input_text\"", "]", "[", "\"table\"", "]", "[", "\"content\"", "]", ")", ":", "\n", "            ", "input_text", "+=", "\"{}: {} [n] \"", ".", "format", "(", "a", ",", "b", ".", "strip", "(", ")", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", "\n", "", "return", "input_text", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.map_hf_dataset_to_list": [[35, 42], ["wiki_bio.WikiBio.make_input_text", "lines.append", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.make_input_text"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "self", ".", "make_input_text", "(", "datapoint", ")", "\n", "if", "input_text", ":", "\n", "                ", "lines", ".", "append", "(", "(", "input_text", ",", "datapoint", "[", "\"target_text\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.WikiBio.load_dataset": [[43, 45], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wiki_bio\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_bio.main": [[46, 51], ["wiki_bio.WikiBio", "WikiBio.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiBio", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.eli5.ELI5.__init__": [[10, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subreddit", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"eli5-\"", "+", "subreddit", "\n", "self", ".", "subreddit", "=", "subreddit", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.eli5.ELI5.get_train_test_lines": [[16, 27], ["eli5.ELI5.map_hf_dataset_to_list", "eli5.ELI5.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train_{}\"", ".", "format", "(", "self", ".", "subreddit", ")", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation_{}\"", ".", "format", "(", "self", ".", "subreddit", ")", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.1", "*", "n", ")", "]", "\n", "# using 10% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.eli5.ELI5.map_hf_dataset_to_list": [[28, 34], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"title\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"selftext\"", "]", "\n", "lines", ".", "append", "(", "(", "clean", "(", "input_text", ")", ",", "\"\\t\"", ".", "join", "(", "clean", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.eli5.ELI5.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'eli5'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.eli5.main": [[38, 44], ["eli5.ELI5", "ELI5.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "subreddit", "in", "[", "\"eli5\"", ",", "\"asks\"", ",", "\"askh\"", "]", ":", "\n", "        ", "dataset", "=", "ELI5", "(", "subreddit", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quartz.Quartz.__init__": [[9, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"quartz-\"", "+", "mode", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quartz.Quartz.get_choices_and_answer_string": [[15, 23], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answerKey\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", ")", ")", ":", "\n", "            ", "if", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "+", "\") \"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quartz.Quartz.map_hf_dataset_to_list": [[24, 36], ["quartz.Quartz.get_choices_and_answer_string", "lines.append", "Exception"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "if", "self", ".", "mode", "==", "\"with_knowledge\"", ":", "\n", "                ", "input_text", "=", "datapoint", "[", "\"question\"", "]", "+", "datapoint", "[", "\"para\"", "]", "+", "choices_string", "\n", "", "elif", "self", ".", "mode", "==", "\"no_knowledge\"", ":", "\n", "                ", "input_text", "=", "datapoint", "[", "\"question\"", "]", "+", "choices_string", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", ")", "\n", "", "lines", ".", "append", "(", "(", "input_text", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quartz.Quartz.load_dataset": [[37, 39], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"quartz\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quartz.main": [[40, 46], ["quartz.Quartz", "Quartz.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "mode", "in", "[", "\"with_knowledge\"", ",", "\"no_knowledge\"", "]", ":", "\n", "        ", "dataset", "=", "Quartz", "(", "mode", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.adversarial_qa.AdversarialQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"adversarialqa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"cc-by-sa-4.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.adversarial_qa.AdversarialQA.map_hf_dataset_to_list": [[14, 20], ["lines.append", "len"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", "==", "1", "\n", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" context: \"", "+", "datapoint", "[", "\"context\"", "]", ",", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.adversarial_qa.AdversarialQA.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'adversarial_qa'", ",", "\"adversarialQA\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.adversarial_qa.main": [[24, 29], ["adversarial_qa.AdversarialQA", "AdversarialQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AdversarialQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dbpedia_14.DBpedia14.__init__": [[9, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"dbpedia_14\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"cc-by-sa-3.0\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Company\"", ",", "\n", "1", ":", "\"EducationalInstitution\"", ",", "\n", "2", ":", "\"Artist\"", ",", "\n", "3", ":", "\"Athlete\"", ",", "\n", "4", ":", "\"OfficeHolder\"", ",", "\n", "5", ":", "\"MeanOfTransportation\"", ",", "\n", "6", ":", "\"Building\"", ",", "\n", "7", ":", "\"NaturalPlace\"", ",", "\n", "8", ":", "\"Village\"", ",", "\n", "9", ":", "\"Animal\"", ",", "\n", "10", ":", "\"Plant\"", ",", "\n", "11", ":", "\"Album\"", ",", "\n", "12", ":", "\"Film\"", ",", "\n", "13", ":", "\"WrittenWork\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dbpedia_14.DBpedia14.get_train_test_lines": [[32, 43], ["dbpedia_14.DBpedia14.map_hf_dataset_to_list", "dbpedia_14.DBpedia14.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.05", "*", "n", ")", "]", "\n", "# using 10% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dbpedia_14.DBpedia14.map_hf_dataset_to_list": [[44, 50], ["lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"content\"", "]", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dbpedia_14.DBpedia14.load_dataset": [[51, 53], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'dbpedia_14'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dbpedia_14.main": [[54, 59], ["dbpedia_14.DBpedia14", "DBpedia14.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "DBpedia14", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_nq.Kilt_NQ.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_nq\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_nq.Kilt_NQ.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace", "list", "set", "len"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "if", "len", "(", "item", "[", "\"answer\"", "]", ")", ">", "0", "]", ")", ")", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_nq.Kilt_NQ.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'nq'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_nq.main": [[23, 28], ["kilt_nq.Kilt_NQ", "Kilt_NQ.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_NQ", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.lama.LAMA.__init__": [[9, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_name", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"lama-\"", "+", "subset_name", "\n", "self", ".", "subset_name", "=", "subset_name", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.lama.LAMA.get_train_test_lines": [[15, 33], ["lama.LAMA.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "if", "self", ".", "subset_name", "==", "\"trex\"", ":", "# trex is too large", "\n", "            ", "test_lines", "=", "lines", "[", "int", "(", "0.99", "*", "n", ")", ":", "]", "\n", "", "else", ":", "\n", "            ", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "\n", "", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.lama.LAMA.map_hf_dataset_to_list": [[34, 43], ["lines.append", "datapoint[].replace().replace", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "self", ".", "subset_name", "in", "[", "\"trex\"", ",", "\"google_re\"", "]", ":", "\n", "                ", "input_text", "=", "datapoint", "[", "\"template\"", "]", ".", "replace", "(", "\"[X]\"", ",", "datapoint", "[", "\"sub_label\"", "]", ")", ".", "replace", "(", "\"[Y]\"", ",", "\"[MASK]\"", ")", "\n", "", "else", ":", "\n", "                ", "input_text", "=", "datapoint", "[", "\"masked_sentence\"", "]", "\n", "", "lines", ".", "append", "(", "(", "input_text", ",", "datapoint", "[", "\"obj_label\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.lama.LAMA.load_dataset": [[44, 46], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"lama\"", ",", "self", ".", "subset_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.lama.main": [[47, 53], ["lama.LAMA", "LAMA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "subset", "in", "[", "\"trex\"", ",", "\"squad\"", ",", "\"google_re\"", ",", "\"conceptnet\"", "]", ":", "\n", "        ", "dataset", "=", "LAMA", "(", "subset", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.xsum.XSum.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"xsum\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.xsum.XSum.map_hf_dataset_to_list": [[16, 22], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "datapoint", "[", "\"document\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "datapoint", "[", "\"summary\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.xsum.XSum.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"xsum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.xsum.main": [[26, 31], ["xsum.XSum", "XSum.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "XSum", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.CommonsenseQA.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"commonsense_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.CommonsenseQA.get_choices_and_answer_string": [[15, 23], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answerKey\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", ")", ")", ":", "\n", "            ", "if", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "+", "\") \"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.CommonsenseQA.map_hf_dataset_to_list": [[24, 30], ["commonsense_qa.CommonsenseQA.get_choices_and_answer_string", "lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"question\"", "]", ")", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.CommonsenseQA.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"commonsense_qa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.main": [[34, 39], ["commonsense_qa.CommonsenseQA", "CommonsenseQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CommonsenseQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commonsense_qa.main_more_shots": [[40, 46], ["commonsense_qa.CommonsenseQA", "CommonsenseQA.generate_k_shot_data", "str"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main_more_shots", "(", ")", ":", "\n", "    ", "dataset", "=", "CommonsenseQA", "(", ")", "\n", "\n", "for", "shots", "in", "[", "64", ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", "4096", "]", ":", "\n", "        ", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "shots", ",", "seed", "=", "seed", ",", "path", "=", "\"../data_more_shots/{}_shot\"", ".", "format", "(", "str", "(", "shots", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.poem_sentiment.PoemSentiment.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"poem_sentiment\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "2", ":", "\"no_impact\"", ",", "\n", "3", ":", "\"mixed\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.poem_sentiment.PoemSentiment.map_hf_dataset_to_list": [[21, 27], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"verse_text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.poem_sentiment.PoemSentiment.load_dataset": [[28, 30], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'poem_sentiment'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.poem_sentiment.main": [[31, 36], ["poem_sentiment.PoemSentiment", "PoemSentiment.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "PoemSentiment", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.biomrc.BioMRC.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"biomrc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.biomrc.BioMRC.get_train_test_lines": [[14, 26], ["biomrc.BioMRC.map_hf_dataset_to_list", "biomrc.BioMRC.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.1", "*", "n", ")", "]", "\n", "# using 10% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.biomrc.BioMRC.map_hf_dataset_to_list": [[27, 32], ["lines.append", "datapoint[].replace", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"title\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "\" context: \"", "+", "datapoint", "[", "\"abstract\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.biomrc.BioMRC.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'biomrc'", ",", "\"biomrc_large_B\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.biomrc.main": [[36, 41], ["biomrc.BioMRC", "BioMRC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "BioMRC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.break.Break.__init__": [[9, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_identifier", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"break-\"", "+", "subset_identifier", "\n", "self", ".", "subset_identifier", "=", "subset_identifier", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.break.Break.map_hf_dataset_to_list": [[15, 20], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question_text\"", "]", ",", "datapoint", "[", "\"decomposition\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.break.Break.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'break_data'", ",", "self", ".", "subset_identifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.break.main": [[24, 31], ["break.Break", "Break.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "\n", "    ", "for", "subset_identifier", "in", "[", "\"QDMR\"", ",", "\"QDMR-high-level\"", "]", ":", "\n", "        ", "dataset", "=", "Break", "(", "subset_identifier", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_sst2.Glue_SST2.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-sst2\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_sst2.Glue_SST2.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence: \"", "+", "datapoint", "[", "\"sentence\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_sst2.Glue_SST2.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'sst2'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_sst2.main": [[29, 34], ["glue_sst2.Glue_SST2", "Glue_SST2.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_SST2", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aeslc.AESLC.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"aeslc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"cc-by-sa-4.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aeslc.AESLC.map_hf_dataset_to_list": [[15, 20], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "clean", "(", "datapoint", "[", "\"email_body\"", "]", ")", ",", "clean", "(", "datapoint", "[", "\"subject_line\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aeslc.AESLC.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"aeslc\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aeslc.main": [[24, 29], ["aeslc.AESLC", "AESLC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AESLC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sick.Sick.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"sick\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"contradiction\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sick.Sick.map_hf_dataset_to_list": [[20, 26], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence_A\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence_B\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sick.Sick.load_dataset": [[27, 29], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'sick'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sick.main": [[30, 35], ["sick.Sick", "Sick.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Sick", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec.TREC.__init__": [[8, 21], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"trec\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"DESC\"", ",", "\n", "1", ":", "\"ENTY\"", ",", "\n", "2", ":", "\"ABBR\"", ",", "\n", "3", ":", "\"HUM\"", ",", "\n", "4", ":", "\"NUM\"", ",", "\n", "5", ":", "\"LOC\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec.TREC.get_train_test_lines": [[23, 37], ["trec.TREC.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec.TREC.map_hf_dataset_to_list": [[38, 44], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label-coarse\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec.TREC.load_dataset": [[45, 47], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'trec'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec.main": [[48, 53], ["trec.TREC", "TREC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "TREC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.gigaword.Gigaword.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"gigaword\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.gigaword.Gigaword.map_hf_dataset_to_list": [[14, 21], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"document\"", "]", "\n", "output_text", "=", "datapoint", "[", "\"summary\"", "]", "\n", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "input_text", ",", "output_text", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.gigaword.Gigaword.load_dataset": [[22, 24], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'gigaword'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.gigaword.main": [[25, 30], ["gigaword.Gigaword", "Gigaword.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Gigaword", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.winogrande.Winogrande.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wino_grande\"", "\n", "self", ".", "task_type", "=", "\"text-to-text\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.winogrande.Winogrande.map_hf_dataset_to_list": [[13, 22], ["int", "lines.append", "int", "lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "if", "int", "(", "datapoint", "[", "\"answer\"", "]", ")", "==", "1", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", "+", "\" (A) \"", "+", "datapoint", "[", "\"option1\"", "]", "+", "\" (B) \"", "+", "datapoint", "[", "\"option2\"", "]", ",", "datapoint", "[", "\"option1\"", "]", ")", ")", "\n", "", "elif", "int", "(", "datapoint", "[", "\"answer\"", "]", ")", "==", "2", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", "+", "\" (A) \"", "+", "datapoint", "[", "\"option1\"", "]", "+", "\" (B) \"", "+", "datapoint", "[", "\"option2\"", "]", ",", "datapoint", "[", "\"option2\"", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.winogrande.Winogrande.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'winogrande'", ",", "'winogrande_xl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.winogrande.main": [[26, 31], ["winogrande.Winogrande", "Winogrande.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Winogrande", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mocha.Mocha.__init__": [[8, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"mocha\"", "\n", "self", ".", "task_type", "=", "\"regression\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mocha.Mocha.map_hf_dataset_to_list": [[14, 23], ["lines.append", "int"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"score\"", "]", "%", "1", "!=", "0", ":", "\n", "                ", "continue", "\n", "# line[0]: input; line[1]: output", "\n", "", "input_text", "=", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] context: \"", "+", "datapoint", "[", "\"context\"", "]", "+", "\" [SEP] reference: \"", "+", "datapoint", "[", "\"reference\"", "]", "+", "\" [SEP] candidate\"", "+", "datapoint", "[", "\"candidate\"", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "int", "(", "datapoint", "[", "\"score\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mocha.Mocha.load_dataset": [[24, 26], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'mocha'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mocha.main": [[27, 32], ["mocha.Mocha", "Mocha.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Mocha", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_rte.Superglue_RTE.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-rte\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"not_entailment\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_rte.Superglue_RTE.map_hf_dataset_to_list": [[19, 25], ["lines.append", "datapoint[].replace", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"premise: \"", "+", "datapoint", "[", "\"premise\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "\" [SEP] hypothesis: \"", "+", "datapoint", "[", "\"hypothesis\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_rte.Superglue_RTE.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'super_glue'", ",", "\"rte\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_rte.main": [[29, 34], ["superglue_rte.Superglue_RTE", "Superglue_RTE.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_RTE", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sms_spam.SMS_Spam.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"sms_spam\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"ham\"", ",", "\n", "1", ":", "\"spam\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sms_spam.SMS_Spam.get_train_test_lines": [[19, 33], ["sms_spam.SMS_Spam.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sms_spam.SMS_Spam.map_hf_dataset_to_list": [[34, 40], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sms\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sms_spam.SMS_Spam.load_dataset": [[41, 43], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'sms_spam'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sms_spam.main": [[44, 49], ["sms_spam.SMS_Spam", "SMS_Spam.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SMS_Spam", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.boolq.BoolQ.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"boolq\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"no\"", ",", "\n", "1", ":", "\"yes\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.boolq.BoolQ.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] context: \"", "+", "datapoint", "[", "\"passage\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"answer\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.boolq.BoolQ.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'boolq'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.boolq.main": [[29, 34], ["boolq.BoolQ", "BoolQ.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "BoolQ", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_classification.AdeCorpusV2_Classfication.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ade_corpus_v2-classification\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Not Related\"", ",", "\n", "1", ":", "\"Related\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_classification.AdeCorpusV2_Classfication.get_train_test_lines": [[19, 33], ["ade_classification.AdeCorpusV2_Classfication.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_classification.AdeCorpusV2_Classfication.map_hf_dataset_to_list": [[35, 41], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_classification.AdeCorpusV2_Classfication.load_dataset": [[42, 44], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ade_corpus_v2'", ",", "'Ade_corpus_v2_classification'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_classification.main": [[45, 50], ["ade_classification.AdeCorpusV2_Classfication", "AdeCorpusV2_Classfication.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AdeCorpusV2_Classfication", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hatexplain.HatExplain.__init__": [[9, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"hatexplain\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"hatespeech\"", ",", "\n", "1", ":", "\"normal\"", ",", "\n", "2", ":", "\"offensive\"", ",", "\n", "}", "\n", "\n", "self", ".", "license", "=", "\"cc-by-4.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hatexplain.HatExplain.map_hf_dataset_to_list": [[23, 31], ["utils.get_majority", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.get_majority"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "label", "=", "get_majority", "(", "datapoint", "[", "\"annotators\"", "]", "[", "\"label\"", "]", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"post_tokens\"", "]", ")", ",", "self", ".", "label", "[", "label", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hatexplain.HatExplain.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'hatexplain'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hatexplain.main": [[35, 40], ["hatexplain.HatExplain", "HatExplain.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HatExplain", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.jeopardy.Jeopardy.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"jeopardy\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.jeopardy.Jeopardy.get_train_test_lines": [[14, 28], ["jeopardy.Jeopardy.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.jeopardy.Jeopardy.map_hf_dataset_to_list": [[29, 34], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", ".", "strip", "(", "\"'\"", ")", "+", "\" [SEP] category: \"", "+", "datapoint", "[", "\"category\"", "]", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.jeopardy.Jeopardy.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"jeopardy\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.jeopardy.main": [[38, 43], ["jeopardy.Jeopardy", "Jeopardy.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Jeopardy", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args": [[15, 31], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "default", "=", "\"../data\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--task_dir\"", ",", "default", "=", "\"./\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--n_proc\"", ",", "default", "=", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--build'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Construct data from hg datasets.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--verify'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Verify the datafiles with pre-computed MD5\"", ")", "\n", "parser", ".", "add_argument", "(", "'--compute'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Compute MD5\"", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Run 2 tasks per process to test the code\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.process_tasks": [[32, 50], ["print", "print", "subprocess.run", "print", "failed_tasks.append", "print", "open", "open"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.None.run_maml.run"], ["", "def", "process_tasks", "(", "idx", ",", "task_list", ",", "args", ",", "fail_dict", ")", ":", "\n", "\n", "# debug mode, process 2 tasks in each process", "\n", "    ", "if", "args", ".", "debug", ":", "\n", "        ", "task_list", "=", "task_list", "[", ":", "2", "]", "\n", "\n", "", "print", "(", "\"Process {} is handling the following tasks: {}\"", ".", "format", "(", "idx", ",", "task_list", ")", ")", "\n", "\n", "failed_tasks", "=", "[", "]", "\n", "for", "task", "in", "task_list", ":", "\n", "        ", "print", "(", "\"Process {}: Processing {} ...\"", ".", "format", "(", "idx", ",", "task", ")", ")", "\n", "ret_code", "=", "subprocess", ".", "run", "(", "[", "\"python\"", ",", "task", "]", ",", "stdout", "=", "open", "(", "os", ".", "devnull", ",", "'wb'", ")", ",", "stderr", "=", "open", "(", "os", ".", "devnull", ",", "'wb'", ")", ")", "\n", "if", "ret_code", ".", "returncode", "!=", "0", ":", "\n", "            ", "print", "(", "\"Process {}: Processing {} ... [Failed]\"", ".", "format", "(", "idx", ",", "task", ")", ")", "\n", "failed_tasks", ".", "append", "(", "task", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Process {}: Processing {} ... [Success]\"", ".", "format", "(", "idx", ",", "task", ")", ")", "\n", "", "", "fail_dict", "[", "idx", "]", "=", "failed_tasks", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.build_gym": [[51, 89], ["sorted", "print", "multiprocessing.Manager", "multiprocessing.Manager.dict", "manager.dict.values", "os.listdir", "int", "tasks_split.append", "range", "_build_gym.process_tasks", "len", "print", "print", "filename.endswith", "all_tasks.append", "multiprocessing.Process", "mp.Process.start", "processes.append", "proc.join", "filename.startswith", "filename.startswith", "len", "range"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.process_tasks"], ["", "def", "build_gym", "(", "args", ")", ":", "\n", "    ", "successful", "=", "[", "]", "\n", "failed", "=", "[", "]", "\n", "all_tasks", "=", "[", "]", "\n", "for", "filename", "in", "sorted", "(", "os", ".", "listdir", "(", "args", ".", "task_dir", ")", ")", ":", "\n", "        ", "if", "filename", ".", "endswith", "(", "\".py\"", ")", "and", "not", "filename", ".", "startswith", "(", "\"0\"", ")", "and", "not", "filename", ".", "startswith", "(", "\"_\"", ")", ":", "\n", "            ", "all_tasks", ".", "append", "(", "filename", ")", "\n", "\n", "", "", "assert", "all_tasks", "==", "ALL_TASKS", "\n", "print", "(", "\"Passing file checks ...\"", ")", "\n", "\n", "manager", "=", "Manager", "(", ")", "\n", "fail_dict", "=", "manager", ".", "dict", "(", ")", "\n", "\n", "if", "args", ".", "n_proc", ">", "1", ":", "\n", "        ", "tasks_per_proc", "=", "int", "(", "len", "(", "all_tasks", ")", "/", "args", ".", "n_proc", ")", "\n", "tasks_split", "=", "[", "all_tasks", "[", "i", "*", "tasks_per_proc", ":", "(", "i", "+", "1", ")", "*", "tasks_per_proc", "]", "for", "i", "in", "range", "(", "args", ".", "n_proc", "-", "1", ")", "]", "\n", "tasks_split", ".", "append", "(", "all_tasks", "[", "(", "args", ".", "n_proc", "-", "1", ")", "*", "tasks_per_proc", ":", "]", ")", "\n", "\n", "processes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "n_proc", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "process_tasks", ",", "args", "=", "(", "i", "+", "1", ",", "tasks_split", "[", "i", "]", ",", "args", ",", "fail_dict", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "proc", "in", "processes", ":", "\n", "            ", "proc", ".", "join", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "process_tasks", "(", "0", ",", "all_tasks", ",", "args", ",", "fail_dict", ")", "\n", "\n", "", "all_failed_tasks", "=", "[", "]", "\n", "for", "item", "in", "fail_dict", ".", "values", "(", ")", ":", "\n", "        ", "all_failed_tasks", "+=", "item", "\n", "", "if", "len", "(", "all_failed_tasks", ")", ">", "0", ":", "\n", "        ", "print", "(", "\"Please try the following tasks later by running individual files: {}\"", ".", "format", "(", "all_failed_tasks", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Processing finished successfully.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.get_md5": [[90, 98], ["hashlib.md5", "open", "open.read", "hashlib.md5.update", "hashlib.md5.hexdigest"], "function", ["None"], ["", "", "def", "get_md5", "(", "filename", ")", ":", "\n", "# code from https://www.tecmint.com/generate-verify-check-files-md5-checksum-linux/", "\n", "    ", "md5_hash", "=", "hashlib", ".", "md5", "(", ")", "\n", "a_file", "=", "open", "(", "filename", ",", "\"rb\"", ")", "\n", "content", "=", "a_file", ".", "read", "(", ")", "\n", "md5_hash", ".", "update", "(", "content", ")", "\n", "digest", "=", "md5_hash", ".", "hexdigest", "(", ")", "\n", "return", "digest", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.md5_compute": [[99, 116], ["collections.OrderedDict", "sorted", "print", "sorted", "open", "json.dump", "os.listdir", "_build_gym.get_md5", "os.walk", "filename.endswith", "os.path.join"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.get_md5"], ["", "def", "md5_compute", "(", "args", ")", ":", "\n", "    ", "md5_dict", "=", "OrderedDict", "(", ")", "\n", "subdirectories", "=", "sorted", "(", "[", "x", "[", "0", "]", "for", "x", "in", "os", ".", "walk", "(", "args", ".", "output_dir", ")", "]", ")", "\n", "for", "subdirectory", "in", "subdirectories", "[", "1", ":", "]", ":", "\n", "        ", "print", "(", "\"Computing {}\"", ".", "format", "(", "subdirectory", ")", ")", "\n", "\n", "files", "=", "sorted", "(", "os", ".", "listdir", "(", "subdirectory", ")", ")", "\n", "for", "filename", "in", "files", ":", "\n", "            ", "if", "not", "filename", ".", "endswith", "(", "\".tsv\"", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "md5sum", "=", "get_md5", "(", "os", ".", "path", ".", "join", "(", "subdirectory", ",", "filename", ")", ")", "\n", "\n", "md5_dict", "[", "filename", "]", "=", "md5sum", "\n", "\n", "", "", "with", "open", "(", "\"_md5sum.new.txt\"", ",", "\"w\"", ")", "as", "fout", ":", "\n", "        ", "json", ".", "dump", "(", "md5_dict", ",", "fout", ",", "indent", "=", "\"\\t\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.md5_verify": [[118, 152], ["sorted", "print", "print", "os.listdir", "all", "print", "_md5sum.MD5SUM.keys", "_build_gym.get_md5", "len", "flags.values", "len", "print", "print", "print", "os.walk", "filename.endswith", "print", "os.path.join", "print", "failed.append", "flags.items"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.get_md5"], ["", "", "def", "md5_verify", "(", "args", ")", ":", "\n", "    ", "failed", "=", "[", "]", "\n", "flags", "=", "{", "k", ":", "False", "for", "k", "in", "MD5SUM", ".", "keys", "(", ")", "}", "\n", "\n", "subdirectories", "=", "sorted", "(", "[", "x", "[", "0", "]", "for", "x", "in", "os", ".", "walk", "(", "args", ".", "output_dir", ")", "]", ")", "\n", "for", "subdirectory", "in", "subdirectories", "[", "1", ":", "]", ":", "\n", "\n", "        ", "print", "(", "\"Verifying {}\"", ".", "format", "(", "subdirectory", ")", ")", "\n", "\n", "files", "=", "os", ".", "listdir", "(", "subdirectory", ")", "\n", "for", "filename", "in", "files", ":", "\n", "            ", "if", "not", "filename", ".", "endswith", "(", "\".tsv\"", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "filename", "not", "in", "MD5SUM", ":", "\n", "                ", "print", "(", "\"Unexpected file ``{}``\"", ".", "format", "(", "filename", ")", ")", "\n", "continue", "\n", "\n", "", "md5sum", "=", "get_md5", "(", "os", ".", "path", ".", "join", "(", "subdirectory", ",", "filename", ")", ")", "\n", "if", "md5sum", "!=", "MD5SUM", "[", "filename", "]", ":", "\n", "                ", "print", "(", "\"{} is not consistent ...\"", ".", "format", "(", "filename", ")", ")", "\n", "failed", ".", "append", "(", "filename", ")", "\n", "", "else", ":", "\n", "                ", "flags", "[", "filename", "]", "=", "True", "\n", "\n", "", "", "", "print", "(", "\"\\n===== Verification Finished =====\"", ")", "\n", "if", "len", "(", "failed", ")", "==", "0", "and", "all", "(", "flags", ".", "values", "(", ")", ")", ":", "\n", "        ", "print", "(", "\"[Success] All files are consistent.\"", ")", "\n", "", "elif", "len", "(", "failed", ")", "!=", "0", ":", "\n", "        ", "print", "(", "\"[Failed] Some files are not consistent. \\nPlease try re-running individual scripts for these tasks:\\n{}\"", ".", "format", "(", "failed", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"[Failed] Some files are missing. \\nPlease try re-running individual scripts for these tasks:\"", ")", "\n", "missing_files", "=", "[", "k", "for", "k", ",", "v", "in", "flags", ".", "items", "(", ")", "if", "not", "v", "]", "\n", "print", "(", "missing_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.main": [[153, 161], ["_build_gym.parse_args", "_build_gym.build_gym", "_build_gym.md5_verify", "_build_gym.md5_compute"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.build_gym", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.md5_verify", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.md5_compute"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "if", "args", ".", "build", ":", "\n", "        ", "build_gym", "(", "args", ")", "\n", "", "if", "args", ".", "verify", ":", "\n", "        ", "md5_verify", "(", "args", ")", "\n", "", "if", "args", ".", "compute", ":", "\n", "        ", "md5_compute", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.discovery.Discovery.__init__": [[185, 192], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"discovery\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "LABELS", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.discovery.Discovery.get_train_test_lines": [[193, 204], ["discovery.Discovery.map_hf_dataset_to_list", "discovery.Discovery.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.1", "*", "n", ")", "]", "\n", "# using 10% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.discovery.Discovery.map_hf_dataset_to_list": [[205, 211], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.discovery.Discovery.load_dataset": [[212, 214], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'discovery'", ",", "'discovery'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.discovery.main": [[215, 220], ["discovery.Discovery", "Discovery.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Discovery", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mrpc.Glue_MRPC.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-mrpc\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not_equivalent\"", ",", "\n", "1", ":", "\"equivalent\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mrpc.Glue_MRPC.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mrpc.Glue_MRPC.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'mrpc'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mrpc.main": [[29, 34], ["glue_mrpc.Glue_MRPC", "Glue_MRPC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_MRPC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_qa.WikiQA.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiki_qa\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"true\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_qa.WikiQA.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] answer: \"", "+", "datapoint", "[", "\"answer\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_qa.WikiQA.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'wiki_qa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_qa.main": [[29, 34], ["wiki_qa.WikiQA", "WikiQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.paws.PAWS.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"paws\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not_duplicate\"", ",", "\n", "1", ":", "\"duplicate\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.paws.PAWS.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "datapoint", "[", "\"label\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.paws.PAWS.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'paws'", ",", "'labeled_final'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.paws.main": [[29, 34], ["paws.PAWS", "PAWS.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "PAWS", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_trex.Kilt_TREX.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_trex\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_trex.Kilt_TREX.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace", "list", "set", "len"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "if", "len", "(", "item", "[", "\"answer\"", "]", ")", ">", "0", "]", ")", ")", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_trex.Kilt_TREX.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'trex'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_trex.main": [[23, 28], ["kilt_trex.Kilt_TREX", "Kilt_TREX.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_TREX", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quail.QUAIL.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"quail\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quail.QUAIL.get_choices_and_answer_string": [[16, 24], ["enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"correct_answer_id\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "answer", "in", "enumerate", "(", "datapoint", "[", "\"answers\"", "]", ")", ":", "\n", "            ", "if", "i", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"answers\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "id2alphabet", "[", "i", "]", "+", "datapoint", "[", "\"answers\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quail.QUAIL.map_hf_dataset_to_list": [[25, 31], ["quail.QUAIL.get_choices_and_answer_string", "lines.append", "datapoint[].replace", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "choices_string", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"context\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quail.QUAIL.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"quail\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quail.main": [[35, 40], ["quail.QUAIL", "QUAIL.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "QUAIL", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qnli.Glue_QNLI.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-qnli\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"not_entailment\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qnli.Glue_QNLI.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] sentence: \"", "+", "datapoint", "[", "\"sentence\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qnli.Glue_QNLI.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'qnli'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qnli.main": [[29, 34], ["glue_qnli.Glue_QNLI", "Glue_QNLI.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_QNLI", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.medical_questions_pairs.MedicalQuestionPairs.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"medical_questions_pairs\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Similar\"", ",", "\n", "1", ":", "\"Dissimilar\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.medical_questions_pairs.MedicalQuestionPairs.get_train_test_lines": [[19, 33], ["medical_questions_pairs.MedicalQuestionPairs.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.medical_questions_pairs.MedicalQuestionPairs.map_hf_dataset_to_list": [[35, 41], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"question 1: \"", "+", "datapoint", "[", "\"question_1\"", "]", "+", "\" [SEP] question 2: \"", "+", "datapoint", "[", "\"question_2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.medical_questions_pairs.MedicalQuestionPairs.load_dataset": [[42, 44], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'medical_questions_pairs'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.medical_questions_pairs.main": [[45, 50], ["medical_questions_pairs.MedicalQuestionPairs", "MedicalQuestionPairs.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "MedicalQuestionPairs", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_polarity.YelpPolarity.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"yelp_polarity\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_polarity.YelpPolarity.get_train_test_lines": [[19, 32], ["yelp_polarity.YelpPolarity.map_hf_dataset_to_list", "yelp_polarity.YelpPolarity.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.2", "*", "n", ")", "]", "\n", "# using 20% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_polarity.YelpPolarity.map_hf_dataset_to_list": [[33, 38], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "replace", "(", "\"\\\\n\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_polarity.YelpPolarity.load_dataset": [[39, 41], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'yelp_polarity'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_polarity.main": [[42, 47], ["yelp_polarity.YelpPolarity", "YelpPolarity.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "YelpPolarity", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.web_questions.WebQuestions.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"web_questions\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.web_questions.WebQuestions.get_train_test_lines": [[14, 28], ["web_questions.WebQuestions.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.web_questions.WebQuestions.map_hf_dataset_to_list": [[29, 35], ["numpy.random.seed", "lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ",", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.web_questions.WebQuestions.load_dataset": [[36, 38], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"web_questions\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.web_questions.main": [[39, 44], ["web_questions.WebQuestions", "WebQuestions.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WebQuestions", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.imdb.IMDB.__init__": [[9, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"imdb\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.imdb.IMDB.get_train_test_lines": [[20, 25], ["imdb.IMDB.map_hf_dataset_to_list", "imdb.IMDB.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.imdb.IMDB.map_hf_dataset_to_list": [[26, 32], ["lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"text\"", "]", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.imdb.IMDB.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'imdb'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.imdb.main": [[36, 41], ["imdb.IMDB", "IMDB.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "IMDB", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.duorc.DuoRC.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"duorc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.duorc.DuoRC.map_hf_dataset_to_list": [[15, 29], ["datapoint[].startswith", "lines.append", "datapoint[].replace", "utils.clean", "list", "utils.clean", "set"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"no_answer\"", "]", "==", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "datapoint", "[", "\"plot\"", "]", ".", "startswith", "(", "\"This article's plot summary may be too long or excessively detailed. Please help improve it by removing unnecessary details and making it more concise.\"", ")", ":", "\n", "                ", "continue", "\n", "# datapoint[\"plot\"] = datapoint[\"plot\"].replace(\"This article's plot summary may be too long or excessively detailed. Please help improve it by removing unnecessary details and making it more concise.\", \"\").strip(\" \")", "\n", "# assert len(datapoint[\"answers\"]) == 1", "\n", "", "input_text", "=", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" context: \"", "+", "datapoint", "[", "\"plot\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "\n", "answers", "=", "[", "clean", "(", "item", ")", "for", "item", "in", "list", "(", "set", "(", "datapoint", "[", "\"answers\"", "]", ")", ")", "]", "\n", "lines", ".", "append", "(", "(", "clean", "(", "input_text", ")", ",", "\"\\t\"", ".", "join", "(", "answers", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.duorc.DuoRC.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'duorc'", ",", "'SelfRC'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.duorc.main": [[33, 38], ["duorc.DuoRC", "DuoRC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "DuoRC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hellaswag.HellaSwag.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"hellaswag\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hellaswag.HellaSwag.get_choices_and_answer_string": [[16, 24], ["int", "range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "int", "(", "datapoint", "[", "\"label\"", "]", ")", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"endings\"", "]", ")", ")", ":", "\n", "            ", "if", "i", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"endings\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "datapoint", "[", "\"endings\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hellaswag.HellaSwag.map_hf_dataset_to_list": [[25, 31], ["hellaswag.HellaSwag.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"ctx\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hellaswag.HellaSwag.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"hellaswag\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hellaswag.main": [[35, 40], ["hellaswag.HellaSwag", "HellaSwag.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HellaSwag", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.samsum.SAMSum.__init__": [[12, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"samsum\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.samsum.SAMSum.map_hf_dataset_to_list": [[17, 22], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "clean", "(", "datapoint", "[", "\"dialogue\"", "]", ")", ",", "clean", "(", "datapoint", "[", "\"summary\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.samsum.SAMSum.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"samsum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.samsum.main": [[26, 31], ["samsum.SAMSum", "SAMSum.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SAMSum", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sciq.SciQ.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"sciq\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sciq.SciQ.get_choices_and_answer_string": [[16, 25], ["numpy.random.shuffle", "enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_string", "=", "datapoint", "[", "\"correct_answer\"", "]", "\n", "all_answers", "=", "[", "datapoint", "[", "\"distractor1\"", "]", ",", "datapoint", "[", "\"distractor2\"", "]", ",", "datapoint", "[", "\"distractor3\"", "]", ",", "answer_string", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "all_answers", ")", "\n", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "ans", "in", "enumerate", "(", "all_answers", ")", ":", "\n", "            ", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "ans", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sciq.SciQ.map_hf_dataset_to_list": [[26, 37], ["numpy.random.seed", "sciq.SciQ.get_choices_and_answer_string", "lines.append", "len", "datapoint[].replace", "datapoint[].replace", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "\n", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "len", "(", "datapoint", "[", "\"support\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "input_text", "=", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "choices_string", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"support\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sciq.SciQ.load_dataset": [[38, 40], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"sciq\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.sciq.main": [[41, 46], ["sciq.SciQ", "SciQ.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SciQ", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_fever.Kilt_Fever.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_fever\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_fever.Kilt_Fever.map_hf_dataset_to_list": [[15, 20], ["lines.append", "utils.clean", "list", "set"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"input\"", "]", ")", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "]", ")", ")", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_fever.Kilt_Fever.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'fever'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_fever.main": [[24, 29], ["kilt_fever.Kilt_Fever", "Kilt_Fever.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_Fever", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_wow.Kilt_WoW.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_wow\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_wow.Kilt_WoW.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_wow.Kilt_WoW.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'wow'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_wow.main": [[23, 28], ["kilt_wow.Kilt_WoW", "Kilt_WoW.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_WoW", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech18.HateSpeech18.__init__": [[8, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"hate_speech18\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"noHate\"", ",", "\n", "1", ":", "\"hate\"", ",", "\n", "}", "\n", "\n", "self", ".", "license", "=", "\"cc-by-sa-3.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech18.HateSpeech18.get_train_test_lines": [[21, 35], ["hate_speech18.HateSpeech18.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech18.HateSpeech18.map_hf_dataset_to_list": [[36, 44], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "if", "datapoint", "[", "\"label\"", "]", ">", "1", ":", "# only deal with hate/nohate", "\n", "                ", "continue", "\n", "", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech18.HateSpeech18.load_dataset": [[45, 47], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'hate_speech18'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech18.main": [[48, 53], ["hate_speech18.HateSpeech18", "HateSpeech18.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HateSpeech18", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.numer_sense.NumerSense.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"numer_sense\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.numer_sense.NumerSense.get_train_test_lines": [[14, 27], ["numer_sense.NumerSense.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.numer_sense.NumerSense.map_hf_dataset_to_list": [[29, 34], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", ".", "replace", "(", "\"<mask>\"", ",", "\"[MASK]\"", ")", ",", "datapoint", "[", "\"target\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.numer_sense.NumerSense.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'numer_sense'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.numer_sense.main": [[38, 43], ["numer_sense.NumerSense", "NumerSense.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "NumerSense", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ai2_arc.AI2_ARC.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ai2_arc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ai2_arc.AI2_ARC.get_choices_and_answer_string": [[14, 22], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answerKey\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", ")", ")", ":", "\n", "            ", "if", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "+", "\") \"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ai2_arc.AI2_ARC.map_hf_dataset_to_list": [[23, 29], ["ai2_arc.AI2_ARC.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ai2_arc.AI2_ARC.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"ai2_arc\"", ",", "\"ARC-Challenge\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ai2_arc.main": [[33, 38], ["ai2_arc.AI2_ARC", "AI2_ARC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AI2_ARC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.HotpotQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"hotpot_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.HotpotQA.get_context": [[14, 22], ["zip"], "methods", ["None"], ["", "def", "get_context", "(", "self", ",", "dp", ")", ":", "\n", "        ", "counter", "=", "1", "\n", "context", "=", "\"\"", "\n", "titles", "=", "dp", "[", "\"supporting_facts\"", "]", "[", "\"title\"", "]", "\n", "for", "sentences", ",", "title", "in", "zip", "(", "dp", "[", "\"context\"", "]", "[", "\"sentences\"", "]", ",", "dp", "[", "\"context\"", "]", "[", "\"title\"", "]", ")", ":", "\n", "            ", "if", "title", "in", "titles", ":", "\n", "                ", "context", "+=", "\"\"", ".", "join", "(", "sentences", ")", "+", "\" \"", "\n", "", "", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.HotpotQA.map_hf_dataset_to_list": [[23, 29], ["hotpot_qa.HotpotQA.get_context", "lines.append", "hotpot_qa.HotpotQA.strip"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.HotpotQA.get_context"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "context", "=", "self", ".", "get_context", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" context: \"", "+", "context", ".", "strip", "(", ")", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.HotpotQA.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"hotpot_qa\"", ",", "\"distractor\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hotpot_qa.main": [[33, 38], ["hotpot_qa.HotpotQA", "HotpotQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HotpotQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.climate_fever.ClimateFever.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"climate_fever\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Supports\"", ",", "\n", "1", ":", "\"Refutes\"", ",", "\n", "2", ":", "\"Not enough info\"", ",", "\n", "3", ":", "\"Disputed\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.climate_fever.ClimateFever.get_train_test_lines": [[21, 35], ["climate_fever.ClimateFever.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# for some reason it only has a test set?", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.climate_fever.ClimateFever.map_hf_dataset_to_list": [[37, 43], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"claim\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"claim_label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.climate_fever.ClimateFever.load_dataset": [[44, 46], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'climate_fever'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.climate_fever.main": [[47, 52], ["climate_fever.ClimateFever", "ClimateFever.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ClimateFever", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_split.WikiSplit.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiki_split\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_split.WikiSplit.map_hf_dataset_to_list": [[15, 20], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"simple_sentence_1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"simple_sentence_2\"", "]", ",", "datapoint", "[", "\"complex_sentence\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_split.WikiSplit.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wiki_split\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_split.main": [[24, 29], ["wiki_split.WikiSplit", "WikiSplit.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiSplit", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.amazon_polarity.AmazonPolarity.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"amazon_polarity\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.amazon_polarity.AmazonPolarity.get_train_test_lines": [[19, 33], ["amazon_polarity.AmazonPolarity.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "10000", "]", "\n", "test_lines", "=", "lines", "[", "10000", ":", "11000", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.amazon_polarity.AmazonPolarity.map_hf_dataset_to_list": [[34, 42], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "if", "split_name", "==", "\"validation\"", ":", "\n", "            ", "split_name", "=", "\"test\"", "# hg datasets only has train/test", "\n", "", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"title: \"", "+", "datapoint", "[", "\"title\"", "]", "+", "\" [SEP] content: \"", "+", "datapoint", "[", "\"content\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.amazon_polarity.AmazonPolarity.load_dataset": [[43, 45], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'amazon_polarity'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.amazon_polarity.main": [[46, 51], ["amazon_polarity.AmazonPolarity", "AmazonPolarity.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AmazonPolarity", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv": [[5, 9], ["open", "fout.write"], "methods", ["None"], ["    ", "def", "write_to_tsv", "(", "self", ",", "lst", ",", "out_file", ")", ":", "\n", "        ", "with", "open", "(", "out_file", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fout", ":", "\n", "            ", "for", "line", "in", "lst", ":", "\n", "                ", "fout", ".", "write", "(", "\"{}\\t{}\\n\"", ".", "format", "(", "line", "[", "0", "]", ",", "line", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymClassificationDataset.get_train_test_lines": [[12, 16], ["fewshot_gym_dataset.FewshotGymClassificationDataset.map_hf_dataset_to_list", "fewshot_gym_dataset.FewshotGymClassificationDataset.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["    ", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymClassificationDataset.generate_k_shot_data": [[17, 64], ["fewshot_gym_dataset.FewshotGymClassificationDataset.load_dataset", "fewshot_gym_dataset.FewshotGymClassificationDataset.get_train_test_lines", "numpy.random.seed", "numpy.random.shuffle", "os.makedirs", "os.path.join", "fewshot_gym_dataset.FewshotGymClassificationDataset.write_to_tsv", "fewshot_gym_dataset.FewshotGymClassificationDataset.write_to_tsv", "fewshot_gym_dataset.FewshotGymClassificationDataset.write_to_tsv", "label_list[].append", "k_shot_train.append", "k_shot_dev.append", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.get_train_test_lines", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv"], ["", "def", "generate_k_shot_data", "(", "self", ",", "k", ",", "seed", ",", "path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        generate a k-shot (k) dataset using random seed (seed)\n        return train, dev, test\n        \"\"\"", "\n", "\n", "# load dataset", "\n", "dataset", "=", "self", ".", "load_dataset", "(", ")", "\n", "\n", "# formulate into list (for consistency in np.random)", "\n", "train_lines", ",", "test_lines", "=", "self", ".", "get_train_test_lines", "(", "dataset", ")", "\n", "\n", "# shuffle the data", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_lines", ")", "\n", "\n", "# Get label list for balanced sampling", "\n", "label_list", "=", "{", "}", "\n", "for", "line", "in", "train_lines", ":", "\n", "            ", "label", "=", "line", "[", "-", "1", "]", "\n", "if", "label", "not", "in", "label_list", ":", "\n", "                ", "label_list", "[", "label", "]", "=", "[", "line", "]", "\n", "", "else", ":", "\n", "                ", "label_list", "[", "label", "]", ".", "append", "(", "line", ")", "\n", "\n", "# make train, dev, test data", "\n", "", "", "k_shot_train", "=", "[", "]", "\n", "for", "label", "in", "label_list", ":", "\n", "            ", "for", "line", "in", "label_list", "[", "label", "]", "[", ":", "k", "]", ":", "\n", "                ", "k_shot_train", ".", "append", "(", "line", ")", "\n", "\n", "", "", "k_shot_dev", "=", "[", "]", "\n", "for", "label", "in", "label_list", ":", "\n", "            ", "for", "line", "in", "label_list", "[", "label", "]", "[", "k", ":", "2", "*", "k", "]", ":", "\n", "                ", "k_shot_dev", ".", "append", "(", "line", ")", "\n", "\n", "", "", "k_shot_test", "=", "test_lines", "\n", "\n", "# save to path", "\n", "if", "path", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "self", ".", "hf_identifier", ")", ",", "exist_ok", "=", "True", ")", "\n", "prefix", "=", "os", ".", "path", ".", "join", "(", "path", ",", "self", ".", "hf_identifier", ",", "\"{}_{}_{}\"", ".", "format", "(", "self", ".", "hf_identifier", ",", "k", ",", "seed", ")", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_train", ",", "prefix", "+", "\"_train.tsv\"", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_dev", ",", "prefix", "+", "\"_dev.tsv\"", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_test", ",", "prefix", "+", "\"_test.tsv\"", ")", "\n", "\n", "", "return", "k_shot_train", ",", "k_shot_dev", ",", "k_shot_test", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.get_train_test_lines": [[67, 71], ["fewshot_gym_dataset.FewshotGymTextToTextDataset.map_hf_dataset_to_list", "fewshot_gym_dataset.FewshotGymTextToTextDataset.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["    ", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data": [[72, 108], ["fewshot_gym_dataset.FewshotGymTextToTextDataset.load_dataset", "fewshot_gym_dataset.FewshotGymTextToTextDataset.get_train_test_lines", "numpy.random.seed", "numpy.random.shuffle", "k_shot_train.append", "k_shot_dev.append", "os.makedirs", "os.path.join", "fewshot_gym_dataset.FewshotGymTextToTextDataset.write_to_tsv", "fewshot_gym_dataset.FewshotGymTextToTextDataset.write_to_tsv", "fewshot_gym_dataset.FewshotGymTextToTextDataset.write_to_tsv", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.get_train_test_lines", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymDataset.write_to_tsv"], ["", "def", "generate_k_shot_data", "(", "self", ",", "k", ",", "seed", ",", "path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        generate a k-shot (k) dataset using random seed (seed)\n        return train, dev, test\n        \"\"\"", "\n", "\n", "# load dataset", "\n", "dataset", "=", "self", ".", "load_dataset", "(", ")", "\n", "\n", "# formulate into list (for consistency in np.random)", "\n", "train_lines", ",", "test_lines", "=", "self", ".", "get_train_test_lines", "(", "dataset", ")", "\n", "\n", "# shuffle the data", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_lines", ")", "\n", "\n", "# make train, dev, test data", "\n", "k_shot_train", "=", "[", "]", "\n", "for", "line", "in", "train_lines", "[", ":", "k", "]", ":", "\n", "            ", "k_shot_train", ".", "append", "(", "line", ")", "\n", "\n", "", "k_shot_dev", "=", "[", "]", "\n", "for", "line", "in", "train_lines", "[", "k", ":", "2", "*", "k", "]", ":", "\n", "            ", "k_shot_dev", ".", "append", "(", "line", ")", "\n", "\n", "", "k_shot_test", "=", "test_lines", "\n", "\n", "# save to path", "\n", "if", "path", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "self", ".", "hf_identifier", ")", ",", "exist_ok", "=", "True", ")", "\n", "prefix", "=", "os", ".", "path", ".", "join", "(", "path", ",", "self", ".", "hf_identifier", ",", "\"{}_{}_{}\"", ".", "format", "(", "self", ".", "hf_identifier", ",", "k", ",", "seed", ")", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_train", ",", "prefix", "+", "\"_train.tsv\"", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_dev", ",", "prefix", "+", "\"_dev.tsv\"", ")", "\n", "self", ".", "write_to_tsv", "(", "k_shot_test", ",", "prefix", "+", "\"_test.tsv\"", ")", "\n", "\n", "", "return", "k_shot_train", ",", "k_shot_dev", ",", "k_shot_test", "", "", "", ""]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_review_full.YelpReviewFull.__init__": [[8, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"yelp_review_full\"", "\n", "\n", "self", ".", "task_type", "=", "\"regression\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_review_full.YelpReviewFull.get_train_test_lines": [[14, 21], ["yelp_review_full.YelpReviewFull.map_hf_dataset_to_list", "yelp_review_full.YelpReviewFull.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_review_full.YelpReviewFull.map_hf_dataset_to_list": [[22, 27], ["lines.append", "datapoint[].replace", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "replace", "(", "\"\\\\n\"", ",", "\" \"", ")", ",", "str", "(", "datapoint", "[", "\"label\"", "]", "+", "1", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_review_full.YelpReviewFull.load_dataset": [[28, 30], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'yelp_review_full'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yelp_review_full.main": [[31, 36], ["yelp_review_full.YelpReviewFull", "YelpReviewFull.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "YelpReviewFull", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mnli.Glue_MNLI.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-mnli\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"contradiction\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mnli.Glue_MNLI.map_hf_dataset_to_list": [[20, 28], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "if", "split_name", "==", "\"validation\"", ":", "\n", "            ", "split_name", "=", "\"validation_matched\"", "\n", "", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"premise: \"", "+", "datapoint", "[", "\"premise\"", "]", "+", "\" [SEP] hypothesis: \"", "+", "datapoint", "[", "\"hypothesis\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mnli.Glue_MNLI.load_dataset": [[29, 31], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'mnli'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mnli.main": [[32, 37], ["glue_mnli.Glue_MNLI", "Glue_MNLI.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_MNLI", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_mnli.main_more_shots": [[38, 44], ["glue_mnli.Glue_MNLI", "Glue_MNLI.generate_k_shot_data", "str"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main_more_shots", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_MNLI", "(", ")", "\n", "\n", "for", "shots", "in", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", "4096", ",", "8192", "]", ":", "\n", "        ", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "shots", ",", "seed", "=", "seed", ",", "path", "=", "\"../data_more_shots/{}_shot\"", ".", "format", "(", "str", "(", "shots", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_wnli.Glue_WNLI.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-wnli\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not_entailment\"", ",", "\n", "1", ":", "\"entailment\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_wnli.Glue_WNLI.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_wnli.Glue_WNLI.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'wnli'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_wnli.main": [[29, 34], ["glue_wnli.Glue_WNLI", "Glue_WNLI.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_WNLI", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.google_wellformed_query.GoogleWellformedQuery.__init__": [[8, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"google_wellformed_query\"", "\n", "self", ".", "task_type", "=", "\"regression\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not well-formed\"", ",", "\n", "1", ":", "\"well-formed\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.google_wellformed_query.GoogleWellformedQuery.map_hf_dataset_to_list": [[19, 27], ["lines.append", "lines.append", "datapoint[].strip", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"rating\"", "]", "<", "0.4", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"content\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "0", "]", ")", ")", "\n", "", "elif", "datapoint", "[", "\"rating\"", "]", ">", "0.6", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"content\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "1", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.google_wellformed_query.GoogleWellformedQuery.load_dataset": [[28, 30], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'google_wellformed_query'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.google_wellformed_query.main": [[31, 35], ["google_wellformed_query.GoogleWellformedQuery", "GoogleWellformedQuery.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "GoogleWellformedQuery", "(", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_dosage.AdeCorpusV2_Dosage.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ade_corpus_v2-dosage\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_dosage.AdeCorpusV2_Dosage.get_train_test_lines": [[14, 27], ["ade_dosage.AdeCorpusV2_Dosage.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_dosage.AdeCorpusV2_Dosage.map_hf_dataset_to_list": [[28, 33], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"drug\"", "]", ",", "datapoint", "[", "\"dosage\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_dosage.AdeCorpusV2_Dosage.load_dataset": [[34, 36], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ade_corpus_v2'", ",", "\"Ade_corpus_v2_drug_dosage_relation\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_dosage.main": [[37, 42], ["ade_dosage.AdeCorpusV2_Dosage", "AdeCorpusV2_Dosage.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AdeCorpusV2_Dosage", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qa_srl.QA_SRL.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"qa_srl\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qa_srl.QA_SRL.map_hf_dataset_to_list": [[14, 19], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "\" \"", ".", "join", "(", "datapoint", "[", "\"question\"", "]", ")", "+", "\" context: \"", "+", "datapoint", "[", "\"sentence\"", "]", ",", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qa_srl.QA_SRL.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'qa_srl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qa_srl.main": [[23, 28], ["qa_srl.QA_SRL", "QA_SRL.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "QA_SRL", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_ay2.Kilt_AY2.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_ay2\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_ay2.Kilt_AY2.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_ay2.Kilt_AY2.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'aidayago2'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_ay2.main": [[23, 28], ["kilt_ay2.Kilt_AY2", "Kilt_AY2.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_AY2", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aqua_rat.AquaRat.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"aqua_rat\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"apache 2.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aqua_rat.AquaRat.get_choices_and_answer_string": [[15, 23], ["None"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"correct\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "option", "in", "datapoint", "[", "\"options\"", "]", ":", "\n", "            ", "if", "option", "[", "0", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "option", "[", "2", ":", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "option", "[", "0", ":", "2", "]", "+", "\" \"", "+", "option", "[", "2", ":", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aqua_rat.AquaRat.map_hf_dataset_to_list": [[24, 30], ["aqua_rat.AquaRat.get_choices_and_answer_string", "lines.append", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aqua_rat.AquaRat.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"aqua_rat\"", ",", "\"raw\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aqua_rat.main": [[34, 39], ["aqua_rat.AquaRat", "AquaRat.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AquaRat", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ropes.ROPES.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ropes\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ropes.ROPES.map_hf_dataset_to_list": [[14, 21], ["lines.append", "input_text.replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] situation: \"", "+", "datapoint", "[", "\"situation\"", "]", "+", "\" [SEP] background: \"", "+", "datapoint", "[", "\"background\"", "]", "\n", "output_text", "=", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "output_text", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ropes.ROPES.load_dataset": [[22, 24], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"ropes\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ropes.main": [[25, 30], ["ropes.ROPES", "ROPES.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ROPES", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ropes.main_more_shots": [[31, 37], ["ropes.ROPES", "ROPES.generate_k_shot_data", "str"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main_more_shots", "(", ")", ":", "\n", "    ", "dataset", "=", "ROPES", "(", ")", "\n", "\n", "for", "shots", "in", "[", "64", ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", "4096", "]", ":", "\n", "        ", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "shots", ",", "seed", "=", "seed", ",", "path", "=", "\"../data_more_shots/{}_shot\"", ".", "format", "(", "str", "(", "shots", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.openbookqa.OpenbookQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"openbookqa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.openbookqa.OpenbookQA.get_choices_and_answer_string": [[14, 23], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answerKey\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "=", "[", "\"A\"", ",", "\"B\"", ",", "\"C\"", ",", "\"D\"", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", ")", ")", ":", "\n", "            ", "if", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "+", "\") \"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.openbookqa.OpenbookQA.map_hf_dataset_to_list": [[24, 30], ["openbookqa.OpenbookQA.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question_stem\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.openbookqa.OpenbookQA.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"openbookqa\"", ",", "\"main\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.openbookqa.main": [[34, 39], ["openbookqa.OpenbookQA", "OpenbookQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "OpenbookQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cos_e.CoS_E.__init__": [[12, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"cos_e\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"BSD-3\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cos_e.CoS_E.get_choices_and_answer_string": [[17, 23], ["enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_string", "=", "datapoint", "[", "\"answer\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "idx", ",", "candidate", "in", "enumerate", "(", "datapoint", "[", "\"choices\"", "]", ")", ":", "\n", "            ", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "idx", "]", "+", "\" \"", "+", "candidate", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cos_e.CoS_E.map_hf_dataset_to_list": [[25, 31], ["cos_e.CoS_E.get_choices_and_answer_string", "lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"question\"", "]", ")", "+", "choices_string", ",", "datapoint", "[", "\"abstractive_explanation\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cos_e.CoS_E.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"cos_e\"", ",", "\"v1.11\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cos_e.main": [[35, 40], ["cos_e.CoS_E", "CoS_E.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CoS_E", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.limit.Limit.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"limit\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "# ?", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.limit.Limit.get_train_test_lines": [[14, 21], ["limit.Limit.map_hf_dataset_to_list", "limit.Limit.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.limit.Limit.map_hf_dataset_to_list": [[22, 30], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"motion\"", "]", "!=", "\"yes\"", ":", "\n", "                ", "continue", "\n", "", "entities", "=", "[", "item", "[", "\"entity\"", "]", "for", "item", "in", "datapoint", "[", "\"motion_entities\"", "]", "]", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", ".", "strip", "(", ")", ",", "\" [SEP] \"", ".", "join", "(", "entities", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.limit.Limit.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'limit'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.limit.main": [[34, 39], ["limit.Limit", "Limit.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Limit", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_eval.TweetEval.__init__": [[9, 71], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_name", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"tweet_eval-\"", "+", "subset_name", "\n", "self", ".", "subset_name", "=", "subset_name", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "if", "subset_name", "==", "\"emoji\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"\u2764\"", ",", "\n", "1", ":", "\"\ud83d\ude0d\"", ",", "\n", "2", ":", "\"\ud83d\ude02\"", ",", "\n", "3", ":", "\"\ud83d\udc95\"", ",", "\n", "4", ":", "\"\ud83d\udd25\"", ",", "\n", "5", ":", "\"\ud83d\ude0a\"", ",", "\n", "6", ":", "\"\ud83d\ude0e\"", ",", "\n", "7", ":", "\"\u2728\"", ",", "\n", "8", ":", "\"\ud83d\udc99\"", ",", "\n", "9", ":", "\"\ud83d\ude18\"", ",", "\n", "10", ":", "\"\ud83d\udcf7\"", ",", "\n", "11", ":", "\"\ud83c\uddfa\ud83c\uddf8\"", ",", "\n", "12", ":", "\"\u2600\"", ",", "\n", "13", ":", "\"\ud83d\udc9c\"", ",", "\n", "14", ":", "\"\ud83d\ude09\"", ",", "\n", "15", ":", "\"\ud83d\udcaf\"", ",", "\n", "16", ":", "\"\ud83d\ude01\"", ",", "\n", "17", ":", "\"\ud83c\udf84\"", ",", "\n", "18", ":", "\"\ud83d\udcf8\"", ",", "\n", "19", ":", "\"\ud83d\ude1c\"", ",", "\n", "}", "\n", "", "elif", "subset_name", "==", "\"emotion\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"anger\"", ",", "\n", "1", ":", "\"joy\"", ",", "\n", "2", ":", "\"optimism\"", ",", "\n", "3", ":", "\"sadness\"", ",", "\n", "}", "\n", "", "elif", "subset_name", "==", "\"hate\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"non-hate\"", ",", "\n", "1", ":", "\"hate\"", ",", "\n", "}", "\n", "", "elif", "subset_name", "==", "\"irony\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"non-irony\"", ",", "\n", "1", ":", "\"irony\"", ",", "\n", "}", "\n", "", "elif", "subset_name", "==", "\"offensive\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"non-offensive\"", ",", "\n", "1", ":", "\"offensive\"", ",", "\n", "}", "\n", "", "elif", "subset_name", "==", "\"sentiment\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"positive\"", ",", "\n", "}", "\n", "", "else", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"none\"", ",", "\n", "1", ":", "\"against\"", ",", "\n", "2", ":", "\"favor\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_eval.TweetEval.map_hf_dataset_to_list": [[73, 80], ["len", "utils.clean", "lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "if", "len", "(", "clean", "(", "datapoint", "[", "\"text\"", "]", ")", ")", ":", "\n", "                ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"text\"", "]", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_eval.TweetEval.load_dataset": [[81, 83], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'tweet_eval'", ",", "self", ".", "subset_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_eval.main": [[84, 90], ["tweet_eval.TweetEval", "TweetEval.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "subset_name", "in", "[", "'emoji'", ",", "'emotion'", ",", "'hate'", ",", "'irony'", ",", "'offensive'", ",", "'sentiment'", ",", "'stance_abortion'", ",", "'stance_atheism'", ",", "'stance_climate'", ",", "'stance_feminist'", ",", "'stance_hillary'", "]", ":", "\n", "        ", "dataset", "=", "TweetEval", "(", "subset_name", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qasc.QASC.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"qasc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qasc.QASC.get_choices_and_answer_string": [[14, 22], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answerKey\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", ")", ")", ":", "\n", "            ", "if", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "choices_string", "+=", "\" (\"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"label\"", "]", "[", "i", "]", "+", "\") \"", "+", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", "[", "i", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qasc.QASC.map_hf_dataset_to_list": [[23, 29], ["qasc.QASC.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qasc.QASC.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"qasc\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.qasc.main": [[33, 38], ["qasc.QASC", "QASC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "QASC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ethos.Ethos.__init__": [[8, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dimension", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ethos-\"", "+", "dimension", "\n", "self", ".", "dimension", "=", "dimension", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "if", "dimension", "==", "\"violence\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not violent\"", ",", "\n", "1", ":", "\"violent\"", ",", "\n", "}", "\n", "", "elif", "dimension", "==", "\"directed_vs_generalized\"", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"generalied\"", ",", "\n", "1", ":", "\"directed\"", ",", "\n", "}", "\n", "", "else", ":", "\n", "            ", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"true\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ethos.Ethos.get_train_test_lines": [[31, 43], ["ethos.Ethos.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ethos.Ethos.map_hf_dataset_to_list": [[45, 51], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "datapoint", "[", "self", ".", "dimension", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ethos.Ethos.load_dataset": [[52, 54], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ethos'", ",", "'multilabel'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ethos.main": [[55, 60], ["ethos.Ethos", "Ethos.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "dimension", "in", "[", "\"directed_vs_generalized\"", ",", "\"disability\"", ",", "\"gender\"", ",", "\"national_origin\"", ",", "\"race\"", ",", "\"religion\"", ",", "\"sexual_orientation\"", "]", ":", "\n", "        ", "dataset", "=", "Ethos", "(", "dimension", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.search_qa.SearchQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"search_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.search_qa.SearchQA.map_hf_dataset_to_list": [[14, 19], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\"category: \"", "+", "datapoint", "[", "\"category\"", "]", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.search_qa.SearchQA.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"search_qa\"", ",", "\"train_test_val\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.search_qa.main": [[23, 28], ["search_qa.SearchQA", "SearchQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SearchQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commongen.CommonGen.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"common_gen\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"apache-2.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commongen.CommonGen.map_hf_dataset_to_list": [[14, 25], ["d.items", "lines.append", "[].append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "d", "=", "{", "}", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"concept_set_idx\"", "]", "not", "in", "d", ":", "\n", "                ", "d", "[", "datapoint", "[", "\"concept_set_idx\"", "]", "]", "=", "(", "datapoint", "[", "\"concepts\"", "]", ",", "[", "datapoint", "[", "\"target\"", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "d", "[", "datapoint", "[", "\"concept_set_idx\"", "]", "]", "[", "1", "]", ".", "append", "(", "datapoint", "[", "\"target\"", "]", ")", "\n", "", "", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\", \"", ".", "join", "(", "v", "[", "0", "]", ")", ",", "\"\\t\"", ".", "join", "(", "v", "[", "1", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commongen.CommonGen.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'common_gen'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.commongen.main": [[29, 34], ["commongen.CommonGen", "CommonGen.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CommonGen", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scitail.SciTail.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"scitail\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"contradiction\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scitail.SciTail.map_hf_dataset_to_list": [[20, 32], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "if", "datapoint", "[", "\"gold_label\"", "]", "==", "\"entailment\"", ":", "\n", "                ", "label", "=", "0", "\n", "", "elif", "datapoint", "[", "\"gold_label\"", "]", "==", "\"neutral\"", ":", "\n", "                ", "label", "=", "1", "\n", "", "elif", "datapoint", "[", "\"gold_label\"", "]", "==", "\"contradiction\"", ":", "\n", "                ", "label", "=", "2", "\n", "", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "datapoint", "[", "\"gold_label\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scitail.SciTail.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'scitail'", ",", "'snli_format'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scitail.main": [[36, 41], ["scitail.SciTail", "SciTail.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SciTail", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tab_fact.TabFact.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"tab_fact\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"refuted\"", ",", "\n", "1", ":", "\"entailed\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tab_fact.TabFact.map_hf_dataset_to_list": [[19, 25], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"statement: \"", "+", "datapoint", "[", "\"statement\"", "]", "+", "\" [SEP] table_caption: \"", "+", "datapoint", "[", "\"table_caption\"", "]", "+", "\" [SEP] table_text: \"", "+", "datapoint", "[", "\"table_text\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" [n] \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tab_fact.TabFact.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'tab_fact'", ",", "'tab_fact'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tab_fact.main": [[29, 34], ["tab_fact.TabFact", "TabFact.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "TabFact", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech_offensive.HateSpeechOffensive.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"hate_speech_offensive\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"hate speech\"", ",", "\n", "1", ":", "\"offensive language\"", ",", "\n", "2", ":", "\"neither\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech_offensive.HateSpeechOffensive.get_train_test_lines": [[20, 34], ["hate_speech_offensive.HateSpeechOffensive.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech_offensive.HateSpeechOffensive.map_hf_dataset_to_list": [[35, 41], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"tweet\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"class\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech_offensive.HateSpeechOffensive.load_dataset": [[42, 44], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'hate_speech_offensive'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.hate_speech_offensive.main": [[45, 50], ["hate_speech_offensive.HateSpeechOffensive", "HateSpeechOffensive.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HateSpeechOffensive", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qqp.Glue_QQP.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-qqp\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"not_duplicate\"", ",", "\n", "1", ":", "\"duplicate\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qqp.Glue_QQP.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"question 1: \"", "+", "datapoint", "[", "\"question1\"", "]", "+", "\" [SEP] question 2: \"", "+", "datapoint", "[", "\"question2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qqp.Glue_QQP.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'qqp'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qqp.main": [[29, 34], ["glue_qqp.Glue_QQP", "Glue_QQP.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_QQP", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_qqp.main_more_shots": [[35, 41], ["glue_qqp.Glue_QQP", "Glue_QQP.generate_k_shot_data", "str"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main_more_shots", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_QQP", "(", ")", "\n", "\n", "for", "shots", "in", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", "4096", ",", "8192", "]", ":", "\n", "        ", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "shots", ",", "seed", "=", "seed", ",", "path", "=", "\"../data_more_shots/{}_shot\"", ".", "format", "(", "str", "(", "shots", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mc_taco.MC_TACO.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"mc_taco\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"no\"", ",", "\n", "1", ":", "\"yes\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mc_taco.MC_TACO.get_train_test_lines": [[19, 33], ["mc_taco.MC_TACO.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mc_taco.MC_TACO.map_hf_dataset_to_list": [[35, 42], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "input_text", "=", "datapoint", "[", "\"sentence\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"answer\"", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mc_taco.MC_TACO.load_dataset": [[43, 45], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'mc_taco'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.mc_taco.main": [[46, 51], ["mc_taco.MC_TACO", "MC_TACO.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "MC_TACO", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yahoo_answers_topics.YahooAnswersTopics.__init__": [[9, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"yahoo_answers_topics\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Society & Culture\"", ",", "\n", "1", ":", "\"Science & Mathematics\"", ",", "\n", "2", ":", "\"Health\"", ",", "\n", "3", ":", "\"Education & Reference\"", ",", "\n", "4", ":", "\"Computers & Internet\"", ",", "\n", "5", ":", "\"Sports\"", ",", "\n", "6", ":", "\"Business & Finance\"", ",", "\n", "7", ":", "\"Entertainment & Music\"", ",", "\n", "8", ":", "\"Family & Relationships\"", ",", "\n", "9", ":", "\"Politics & Government\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yahoo_answers_topics.YahooAnswersTopics.get_train_test_lines": [[28, 35], ["yahoo_answers_topics.YahooAnswersTopics.map_hf_dataset_to_list", "yahoo_answers_topics.YahooAnswersTopics.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yahoo_answers_topics.YahooAnswersTopics.map_hf_dataset_to_list": [[36, 43], ["lines.append", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "input_text", "=", "\"question_title: \"", "+", "datapoint", "[", "\"question_title\"", "]", "+", "\" [SEP] question_content: \"", "+", "datapoint", "[", "\"question_content\"", "]", "+", "\" [SEP] best_answer: \"", "+", "datapoint", "[", "\"best_answer\"", "]", "\n", "lines", ".", "append", "(", "(", "clean", "(", "input_text", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"topic\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yahoo_answers_topics.YahooAnswersTopics.load_dataset": [[44, 46], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'yahoo_answers_topics'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.yahoo_answers_topics.main": [[47, 52], ["yahoo_answers_topics.YahooAnswersTopics", "YahooAnswersTopics.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "YahooAnswersTopics", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.freebase_qa.FreebaseQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"freebase_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.freebase_qa.FreebaseQA.map_hf_dataset_to_list": [[14, 31], ["sorted", "lines.append", "list", "set", "sorted.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "\"RawQuestion\"", "not", "in", "datapoint", "or", "\"Parses\"", "not", "in", "datapoint", ":", "\n", "                ", "continue", "\n", "", "input_text", "=", "datapoint", "[", "\"RawQuestion\"", "]", "\n", "\n", "all_answers", "=", "[", "]", "\n", "for", "item", "in", "datapoint", "[", "\"Parses\"", "]", "[", "\"Answers\"", "]", ":", "# why the file looks so weird...", "\n", "                ", "for", "answer_name", "in", "item", "[", "\"AnswersName\"", "]", ":", "\n", "                    ", "for", "what", "in", "answer_name", ":", "\n", "                        ", "all_answers", ".", "append", "(", "what", ")", "\n", "", "", "", "all_answers", "=", "sorted", "(", "list", "(", "set", "(", "all_answers", ")", ")", ")", "\n", "\n", "output_text", "=", "datapoint", "[", "\"Parses\"", "]", "[", "\"Answers\"", "]", "[", "0", "]", "[", "\"AnswersName\"", "]", "[", "0", "]", "[", "0", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "\"\\t\"", ".", "join", "(", "all_answers", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.freebase_qa.FreebaseQA.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'freebase_qa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.freebase_qa.main": [[35, 40], ["freebase_qa.FreebaseQA", "FreebaseQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "FreebaseQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.reddit_tifu.Reddit_TIFU.__init__": [[10, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"reddit_tifu-\"", "+", "subset", "\n", "self", ".", "subset", "=", "subset", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.reddit_tifu.Reddit_TIFU.get_train_test_lines": [[16, 30], ["reddit_tifu.Reddit_TIFU.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.reddit_tifu.Reddit_TIFU.map_hf_dataset_to_list": [[31, 36], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "clean", "(", "datapoint", "[", "\"documents\"", "]", ")", ",", "clean", "(", "datapoint", "[", "self", ".", "subset", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.reddit_tifu.Reddit_TIFU.load_dataset": [[37, 39], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"reddit_tifu\"", ",", "\"long\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.reddit_tifu.main": [[40, 50], ["reddit_tifu.Reddit_TIFU", "reddit_tifu.Reddit_TIFU", "Reddit_TIFU.generate_k_shot_data", "Reddit_TIFU.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Reddit_TIFU", "(", "\"tldr\"", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n", "", "dataset", "=", "Reddit_TIFU", "(", "\"title\"", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.financial_phrasebank.FinancialPhrasebank.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"financial_phrasebank\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.financial_phrasebank.FinancialPhrasebank.get_train_test_lines": [[20, 34], ["financial_phrasebank.FinancialPhrasebank.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.financial_phrasebank.FinancialPhrasebank.map_hf_dataset_to_list": [[35, 41], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.financial_phrasebank.FinancialPhrasebank.load_dataset": [[42, 44], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'financial_phrasebank'", ",", "'sentences_allagree'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.financial_phrasebank.main": [[45, 50], ["financial_phrasebank.FinancialPhrasebank", "FinancialPhrasebank.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "FinancialPhrasebank", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crawl_domain.CrawlDomain.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"crawl_domain\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"mit\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crawl_domain.CrawlDomain.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace().lower", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"example\"", "]", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ".", "lower", "(", ")", ",", "datapoint", "[", "\"example\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crawl_domain.CrawlDomain.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'crawl_domain'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crawl_domain.main": [[23, 28], ["crawl_domain.CrawlDomain", "CrawlDomain.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CrawlDomain", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.codah.CODAH.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"codah\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.codah.CODAH.get_choices_and_answer_string": [[16, 24], ["enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"correct_answer_idx\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "idx", ",", "candidate", "in", "enumerate", "(", "datapoint", "[", "\"candidate_answers\"", "]", ")", ":", "\n", "            ", "if", "idx", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "candidate", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "idx", "]", "+", "\" \"", "+", "candidate", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.codah.CODAH.map_hf_dataset_to_list": [[25, 31], ["codah.CODAH.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question_propmt\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.codah.CODAH.load_dataset": [[32, 34], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"codah\"", ",", "\"fold_0\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.codah.main": [[35, 40], ["codah.CODAH", "CODAH.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CODAH", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.app_reviews.AppReviews.__init__": [[8, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"app_reviews\"", "\n", "self", ".", "task_type", "=", "\"regression\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.app_reviews.AppReviews.get_train_test_lines": [[13, 27], ["app_reviews.AppReviews.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.app_reviews.AppReviews.map_hf_dataset_to_list": [[29, 35], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"review: \"", "+", "datapoint", "[", "\"review\"", "]", ",", "datapoint", "[", "\"star\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.app_reviews.AppReviews.load_dataset": [[36, 38], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'app_reviews'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.app_reviews.main": [[39, 44], ["app_reviews.AppReviews", "AppReviews.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AppReviews", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.anli.ANLI.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"anli\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"neutral\"", ",", "\n", "2", ":", "\"contradiction\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.anli.ANLI.map_hf_dataset_to_list": [[20, 29], ["lines.append", "datapoint[].replace", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "if", "split_name", "==", "\"validation\"", ":", "\n", "            ", "split_name", "=", "\"dev\"", "\n", "", "split_name", "=", "split_name", "+", "\"_r1\"", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"premise: \"", "+", "datapoint", "[", "\"premise\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "\" [SEP] hypothesis: \"", "+", "datapoint", "[", "\"hypothesis\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.anli.ANLI.load_dataset": [[30, 32], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'anli'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.anli.main": [[33, 38], ["anli.ANLI", "ANLI.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ANLI", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.AcronymIdentification.__init__": [[11, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"acronym_identification\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"CC BY-NC-SA 4.0\"", "\n", "\n", "self", ".", "labels", "=", "{", "\n", "0", ":", "\"B-long\"", ",", "\n", "1", ":", "\"B-short\"", ",", "\n", "2", ":", "\"I-long\"", ",", "\n", "3", ":", "\"I-short\"", ",", "\n", "4", ":", "\"O\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.AcronymIdentification.get_acronym_and_full_name": [[24, 39], ["labels.index", "labels.index"], "methods", ["None"], ["", "def", "get_acronym_and_full_name", "(", "self", ",", "dp", ")", ":", "\n", "        ", "labels", "=", "dp", "[", "\"labels\"", "]", "\n", "short_st", "=", "labels", ".", "index", "(", "1", ")", "\n", "short_ed", "=", "short_st", "\n", "while", "labels", "[", "short_ed", "+", "1", "]", "==", "3", ":", "\n", "            ", "short_ed", "+=", "1", "\n", "", "acronym", "=", "\" \"", ".", "join", "(", "dp", "[", "\"tokens\"", "]", "[", "short_st", ":", "short_ed", "+", "1", "]", ")", "\n", "\n", "long_st", "=", "labels", ".", "index", "(", "0", ")", "\n", "long_ed", "=", "long_st", "\n", "while", "labels", "[", "long_ed", "+", "1", "]", "==", "2", ":", "\n", "            ", "long_ed", "+=", "1", "\n", "", "full_name", "=", "\" \"", ".", "join", "(", "dp", "[", "\"tokens\"", "]", "[", "long_st", ":", "long_ed", "+", "1", "]", ")", "\n", "\n", "return", "acronym", ",", "full_name", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.AcronymIdentification.map_hf_dataset_to_list": [[40, 49], ["acronym_identification.AcronymIdentification.get_acronym_and_full_name", "lines.append", "len", "len", "datapoint[].count", "datapoint[].count"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.AcronymIdentification.get_acronym_and_full_name"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "\"labels\"", "]", ")", "==", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "\n", "if", "datapoint", "[", "\"labels\"", "]", ".", "count", "(", "1", ")", "!=", "1", "or", "datapoint", "[", "\"labels\"", "]", ".", "count", "(", "0", ")", "!=", "1", ":", "# only contains one acronym", "\n", "                ", "continue", "\n", "", "acronym", ",", "full_name", "=", "self", ".", "get_acronym_and_full_name", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", "+", "\" [SEP] acronym: \"", "+", "acronym", ",", "full_name", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.AcronymIdentification.load_dataset": [[50, 52], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'acronym_identification'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.acronym_identification.main": [[53, 58], ["acronym_identification.AcronymIdentification", "AcronymIdentification.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AcronymIdentification", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_zsre.Kilt_ZSRE.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_zsre\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_zsre.Kilt_ZSRE.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace", "list", "set", "len"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "if", "len", "(", "item", "[", "\"answer\"", "]", ")", ">", "0", "]", ")", ")", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_zsre.Kilt_ZSRE.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'structured_zeroshot'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_zsre.main": [[23, 28], ["kilt_zsre.Kilt_ZSRE", "Kilt_ZSRE.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_ZSRE", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dream.Dream.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"dream\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dream.Dream.get_choices_and_answer_string": [[16, 23], ["range", "len"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_string", "=", "datapoint", "[", "\"answer\"", "]", "\n", "choices_string", "=", "\"\"", "\n", "assert", "len", "(", "datapoint", "[", "\"choice\"", "]", ")", "==", "3", "\n", "for", "idx", "in", "range", "(", "3", ")", ":", "\n", "            ", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "idx", "]", "+", "\" \"", "+", "datapoint", "[", "\"choice\"", "]", "[", "idx", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dream.Dream.map_hf_dataset_to_list": [[24, 32], ["dream.Dream.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "input_text", "=", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] \"", "\n", "input_text", "+=", "\" \"", ".", "join", "(", "datapoint", "[", "\"dialogue\"", "]", ")", "+", "\" [SEP] \"", "\n", "lines", ".", "append", "(", "(", "input_text", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dream.Dream.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"dream\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.dream.main": [[36, 41], ["dream.Dream", "Dream.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Dream", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.e2e_nlg_cleaned.E2E_NLG.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"e2e_nlg_cleaned\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.e2e_nlg_cleaned.E2E_NLG.map_hf_dataset_to_list": [[14, 20], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"meaning_representation\"", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "datapoint", "[", "\"human_reference\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.e2e_nlg_cleaned.E2E_NLG.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'e2e_nlg_cleaned'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.e2e_nlg_cleaned.main": [[24, 29], ["e2e_nlg_cleaned.E2E_NLG", "E2E_NLG.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "E2E_NLG", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emo.Emo.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"emo\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"others\"", ",", "\n", "1", ":", "\"happy\"", ",", "\n", "2", ":", "\"sad\"", ",", "\n", "3", ":", "\"angry\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emo.Emo.get_train_test_lines": [[21, 26], ["emo.Emo.map_hf_dataset_to_list", "emo.Emo.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emo.Emo.map_hf_dataset_to_list": [[27, 33], ["lines.append", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "strip", "(", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emo.Emo.load_dataset": [[34, 36], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'emo'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.emo.main": [[37, 42], ["emo.Emo", "Emo.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Emo", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.circa.Circa.__init__": [[8, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"circa\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"cc-by-4.0\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"Yes\"", ",", "\n", "1", ":", "\"No\"", ",", "\n", "2", ":", "\"In the middle, neither yes nor no\"", ",", "\n", "3", ":", "\"Yes, subject to some conditions\"", ",", "\n", "4", ":", "\"Other\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.circa.Circa.get_train_test_lines": [[22, 36], ["circa.Circa.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.circa.Circa.map_hf_dataset_to_list": [[38, 47], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "if", "datapoint", "[", "\"goldstandard2\"", "]", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "", "input_text", "=", "\"context: \"", "+", "datapoint", "[", "\"context\"", "]", "+", "\" [SEP] question X: \"", "+", "datapoint", "[", "\"question-X\"", "]", "+", "\" [SEP] answer Y: \"", "+", "datapoint", "[", "\"answer-Y\"", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "self", ".", "label", "[", "datapoint", "[", "\"goldstandard2\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.circa.Circa.load_dataset": [[48, 50], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'circa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.circa.main": [[51, 56], ["circa.Circa", "Circa.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Circa", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiqa.WIQA.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiqa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiqa.WIQA.get_choices_and_answer_string": [[16, 25], ["enumerate", "ord", "ord"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_idx", "=", "ord", "(", "datapoint", "[", "\"answer_label_as_choice\"", "]", ")", "-", "ord", "(", "\"A\"", ")", "\n", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "ans", "in", "enumerate", "(", "datapoint", "[", "\"choices\"", "]", "[", "\"text\"", "]", ")", ":", "\n", "            ", "if", "i", "==", "answer_idx", ":", "\n", "                ", "answer_string", "=", "ans", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "ans", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiqa.WIQA.map_hf_dataset_to_list": [[26, 34], ["wiqa.WIQA.get_choices_and_answer_string", "lines.append", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "input_text", "=", "datapoint", "[", "\"question_stem\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "choices_string", "+", "\" [SEP] \"", "+", "\" \"", ".", "join", "(", "datapoint", "[", "\"question_para_step\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiqa.WIQA.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wiqa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiqa.main": [[38, 43], ["wiqa.WIQA", "WIQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WIQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.multi_news.MultiNews.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"multi_news\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.multi_news.MultiNews.map_hf_dataset_to_list": [[14, 21], ["lines.append", "output_text.replace", "input_text.replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"document\"", "]", "\n", "output_text", "=", "datapoint", "[", "\"summary\"", "]", "\n", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "input_text", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "output_text", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.multi_news.MultiNews.load_dataset": [[22, 24], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'multi_news'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.multi_news.main": [[25, 30], ["multi_news.MultiNews", "MultiNews.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "MultiNews", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.agnews.AGNews.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ag_news\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"World\"", ",", "\n", "1", ":", "\"Sports\"", ",", "\n", "2", ":", "\"Business\"", ",", "\n", "3", ":", "\"Sci/Tech\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.agnews.AGNews.get_train_test_lines": [[21, 25], ["agnews.AGNews.map_hf_dataset_to_list", "agnews.AGNews.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.agnews.AGNews.map_hf_dataset_to_list": [[26, 32], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.agnews.AGNews.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ag_news'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.agnews.main": [[36, 41], ["agnews.AGNews", "AGNews.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AGNews", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_qa.TweetQA.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"tweet_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_qa.TweetQA.map_hf_dataset_to_list": [[15, 22], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "\"question: \"", "+", "datapoint", "[", "\"Question\"", "]", "+", "\" context: \"", "+", "datapoint", "[", "\"Tweet\"", "]", "\n", "output_text", "=", "\"\\t\"", ".", "join", "(", "[", "clean", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"Answer\"", "]", "]", ")", "\n", "lines", ".", "append", "(", "(", "clean", "(", "input_text", ")", ",", "output_text", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_qa.TweetQA.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"tweet_qa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.tweet_qa.main": [[26, 31], ["tweet_qa.TweetQA", "TweetQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "TweetQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_record.Superglue_Record.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-record\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_record.Superglue_Record.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"query\"", "]", "+", "\" context: \"", "+", "datapoint", "[", "\"passage\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "datapoint", "[", "\"answers\"", "]", "[", "0", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_record.Superglue_Record.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"super_glue\"", ",", "\"record\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_record.main": [[23, 28], ["superglue_record.Superglue_Record", "Superglue_Record.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_Record", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aslg_pc12.ASLG_PC12.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"aslg_pc12\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aslg_pc12.ASLG_PC12.get_train_test_lines": [[14, 28], ["aslg_pc12.ASLG_PC12.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aslg_pc12.ASLG_PC12.map_hf_dataset_to_list": [[29, 34], ["lines.append", "datapoint[].strip", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ".", "strip", "(", ")", ",", "datapoint", "[", "\"gloss\"", "]", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aslg_pc12.ASLG_PC12.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"aslg_pc12\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.aslg_pc12.main": [[38, 43], ["aslg_pc12.ASLG_PC12", "ASLG_PC12.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ASLG_PC12", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.onestop_english.OneStopEnglish.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"onestop_english\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"elementary\"", ",", "\n", "1", ":", "\"intermediate\"", ",", "\n", "2", ":", "\"advance\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.onestop_english.OneStopEnglish.get_train_test_lines": [[20, 34], ["onestop_english.OneStopEnglish.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.onestop_english.OneStopEnglish.map_hf_dataset_to_list": [[36, 45], ["datapoint[].replace", "datapoint[].startswith", "lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "datapoint", "[", "\"text\"", "]", "=", "datapoint", "[", "\"text\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "\n", "if", "datapoint", "[", "\"text\"", "]", ".", "startswith", "(", "\"Intermediate  \"", ")", ":", "# some bug?", "\n", "                ", "datapoint", "[", "\"text\"", "]", "=", "datapoint", "[", "\"text\"", "]", "[", "14", ":", "]", "\n", "", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.onestop_english.OneStopEnglish.load_dataset": [[46, 48], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'onestop_english'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.onestop_english.main": [[49, 54], ["onestop_english.OneStopEnglish", "OneStopEnglish.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "OneStopEnglish", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.swag.Swag.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"swag\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.swag.Swag.get_choices_and_answer_string": [[16, 25], ["enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"label\"", "]", "\n", "candidates", "=", "[", "datapoint", "[", "\"ending0\"", "]", ",", "datapoint", "[", "\"ending1\"", "]", ",", "datapoint", "[", "\"ending2\"", "]", ",", "datapoint", "[", "\"ending3\"", "]", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "ending", "in", "enumerate", "(", "candidates", ")", ":", "\n", "            ", "if", "i", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "ending", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "ending", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.swag.Swag.map_hf_dataset_to_list": [[26, 32], ["swag.Swag.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"startphrase\"", "]", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.swag.Swag.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"swag\"", ",", "\"regular\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.swag.main": [[36, 41], ["swag.Swag", "Swag.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Swag", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.definite_pronoun_resolution.DefinitePronounResolution.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"definite_pronoun_resolution\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.definite_pronoun_resolution.DefinitePronounResolution.get_train_test_lines": [[14, 19], ["definite_pronoun_resolution.DefinitePronounResolution.map_hf_dataset_to_list", "definite_pronoun_resolution.DefinitePronounResolution.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.definite_pronoun_resolution.DefinitePronounResolution.map_hf_dataset_to_list": [[20, 26], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"sentence\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"pronoun\"", "]", "+", "\" [SEP] (A) \"", "+", "datapoint", "[", "\"candidates\"", "]", "[", "0", "]", "+", "\" (B) \"", "+", "datapoint", "[", "\"candidates\"", "]", "[", "1", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "datapoint", "[", "\"candidates\"", "]", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.definite_pronoun_resolution.DefinitePronounResolution.load_dataset": [[27, 29], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'definite_pronoun_resolution'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.definite_pronoun_resolution.main": [[30, 35], ["definite_pronoun_resolution.DefinitePronounResolution", "DefinitePronounResolution.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "DefinitePronounResolution", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scicite.SciCite.__init__": [[10, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"scicite\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"method\"", ",", "\n", "1", ":", "\"background\"", ",", "\n", "2", ":", "\"result\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scicite.SciCite.map_hf_dataset_to_list": [[21, 27], ["lines.append", "utils.clean", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"string\"", "]", "[", "datapoint", "[", "\"citeStart\"", "]", ":", "datapoint", "[", "\"citeEnd\"", "]", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"string\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"sectionName\"", "]", "\n", "lines", ".", "append", "(", "(", "clean", "(", "input_text", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scicite.SciCite.load_dataset": [[28, 30], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"scicite\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.scicite.main": [[31, 36], ["scicite.SciCite", "SciCite.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SciCite", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.blimp.BLIMP.__init__": [[79, 88], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_identifier", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"blimp-\"", "+", "subset_identifier", "\n", "self", ".", "subset_identifier", "=", "subset_identifier", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"sentence 1\"", ",", "\n", "1", ":", "\"sentence 2\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.blimp.BLIMP.get_train_test_lines": [[90, 104], ["blimp.BLIMP.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.blimp.BLIMP.map_hf_dataset_to_list": [[105, 114], ["numpy.random.seed", "numpy.random.random", "lines.append", "lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence_good\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence_bad\"", "]", ",", "self", ".", "label", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence_bad\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence_good\"", "]", ",", "self", ".", "label", "[", "1", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.blimp.BLIMP.load_dataset": [[115, 117], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'blimp'", ",", "self", ".", "subset_identifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.blimp.main": [[118, 126], ["numpy.random.seed", "numpy.random.choice", "print", "blimp.BLIMP", "BLIMP.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "# select 10 tasks, 64 will take up a large portion of all tasks.", "\n", "for", "subset_identifier", "in", "np", ".", "random", ".", "choice", "(", "ALL_PARADIGMS", ",", "10", ")", ":", "\n", "        ", "print", "(", "subset_identifier", ")", "\n", "dataset", "=", "BLIMP", "(", "subset_identifier", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wsc.Superglue_Wsc.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-wsc\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"true\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wsc.Superglue_Wsc.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"text: \"", "+", "datapoint", "[", "\"text\"", "]", "+", "\" [SEP] span1_text\"", "+", "datapoint", "[", "\"span1_text\"", "]", "+", "\" [SEP] span2_text: \"", "+", "datapoint", "[", "\"span2_text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wsc.Superglue_Wsc.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'super_glue'", ",", "'wsc.fixed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wsc.main": [[29, 34], ["superglue_wsc.Superglue_Wsc", "Superglue_Wsc.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_Wsc", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.social_i_qa.SocialIQA.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"social_i_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.social_i_qa.SocialIQA.get_choices_and_answer_string": [[16, 25], ["int", "enumerate"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_idx", "=", "int", "(", "datapoint", "[", "\"label\"", "]", ")", "\n", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "ans", "in", "enumerate", "(", "[", "datapoint", "[", "\"answerA\"", "]", ",", "datapoint", "[", "\"answerB\"", "]", ",", "datapoint", "[", "\"answerC\"", "]", "]", ")", ":", "\n", "            ", "if", "i", "==", "answer_idx", "-", "1", ":", "\n", "                ", "answer_string", "=", "ans", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "ans", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.social_i_qa.SocialIQA.map_hf_dataset_to_list": [[26, 34], ["social_i_qa.SocialIQA.get_choices_and_answer_string", "lines.append", "datapoint[].replace", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "input_text", "=", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "+", "choices_string", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"context\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.social_i_qa.SocialIQA.load_dataset": [[35, 37], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"social_i_qa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.social_i_qa.main": [[38, 43], ["social_i_qa.SocialIQA", "SocialIQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "SocialIQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.proto_qa.ProtoQA.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"proto_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.proto_qa.ProtoQA.get_train_test_lines": [[16, 30], ["proto_qa.ProtoQA.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.proto_qa.ProtoQA.map_hf_dataset_to_list": [[31, 36], ["lines.append", "[].keys"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", "[", "\"normalized\"", "]", ",", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"raw\"", "]", ".", "keys", "(", ")", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.proto_qa.ProtoQA.load_dataset": [[37, 46], ["os.path.exists", "os.makedirs", "os.path.exists", "wget.download", "open", "fin.readlines", "json.loads"], "methods", ["None"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "\"../data/proto_qa\"", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "\"../data/proto_qa/\"", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "\"../data/proto_qa/train.jsonl\"", ")", ":", "\n", "            ", "wget", ".", "download", "(", "\"https://raw.githubusercontent.com/iesl/protoqa-data/master/data/train/train.jsonl\"", ",", "\"../data/proto_qa/\"", ")", "\n", "", "with", "open", "(", "\"../data/proto_qa/train.jsonl\"", ")", "as", "fin", ":", "\n", "            ", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "dataset", "=", "[", "json", ".", "loads", "(", "line", ")", "for", "line", "in", "lines", "]", "\n", "", "return", "{", "\"train\"", ":", "dataset", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.proto_qa.main": [[47, 52], ["proto_qa.ProtoQA", "ProtoQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ProtoQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.health_fact.HealthFact.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"health_fact\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"mit\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"mixture\"", ",", "\n", "2", ":", "\"true\"", ",", "\n", "3", ":", "\"unproven\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.health_fact.HealthFact.map_hf_dataset_to_list": [[21, 28], ["lines.append", "datapoint[].strip().replace().replace().replace", "datapoint[].strip().replace().replace", "datapoint[].strip().replace", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"label\"", "]", "<", "0", ":", "\n", "                ", "continue", "\n", "", "lines", ".", "append", "(", "(", "datapoint", "[", "\"claim\"", "]", ".", "strip", "(", ")", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.health_fact.HealthFact.load_dataset": [[29, 31], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'health_fact'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.health_fact.main": [[32, 36], ["health_fact.HealthFact", "HealthFact.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "HealthFact", "(", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.race.Race.__init__": [[11, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"race-\"", "+", "subset", "\n", "self", ".", "subset", "=", "subset", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.race.Race.get_choices_and_answer_string": [[17, 25], ["enumerate", "ord", "ord", "ans.replace().replace().replace", "ans.replace().replace().replace", "ans.replace().replace", "ans.replace().replace", "ans.replace", "ans.replace"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "ord", "(", "datapoint", "[", "\"answer\"", "]", ")", "-", "ord", "(", "\"A\"", ")", "\n", "choices_string", "=", "\"\"", "\n", "for", "i", ",", "ans", "in", "enumerate", "(", "datapoint", "[", "\"options\"", "]", ")", ":", "\n", "            ", "if", "i", "==", "answer_index", ":", "\n", "                ", "answer_string", "=", "ans", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", "\n", "", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "i", "]", "+", "\" \"", "+", "ans", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.race.Race.map_hf_dataset_to_list": [[26, 33], ["race.Race.get_choices_and_answer_string", "lines.append", "datapoint[].replace().replace().replace", "datapoint[].replace().replace().replace", "datapoint[].replace().replace", "datapoint[].replace().replace", "datapoint[].replace", "datapoint[].replace"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "input_text", "=", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", "+", "choices_string", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"article\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.race.Race.load_dataset": [[34, 36], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"race\"", ",", "self", ".", "subset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.race.main": [[37, 43], ["race.Race", "Race.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "subset", "in", "[", "\"middle\"", ",", "\"high\"", "]", ":", "\n", "        ", "dataset", "=", "Race", "(", "subset", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.MathQA.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"math_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.MathQA.process_line": [[15, 34], ["dp[].split"], "methods", ["None"], ["", "def", "process_line", "(", "self", ",", "dp", ")", ":", "\n", "        ", "options", "=", "dp", "[", "\"options\"", "]", ".", "split", "(", "\",\"", ")", "\n", "choices", "=", "\" (A) \"", "+", "options", "[", "0", "]", "[", "4", ":", "-", "1", "]", "\n", "if", "dp", "[", "\"correct\"", "]", "==", "\"a\"", ":", "\n", "            ", "answer", "=", "options", "[", "0", "]", "[", "4", ":", "-", "1", "]", "\n", "", "choices", "+=", "\" (B) \"", "+", "options", "[", "1", "]", "[", "5", ":", "-", "1", "]", "\n", "if", "dp", "[", "\"correct\"", "]", "==", "\"b\"", ":", "\n", "            ", "answer", "=", "options", "[", "1", "]", "[", "5", ":", "-", "1", "]", "\n", "", "choices", "+=", "\" (C) \"", "+", "options", "[", "2", "]", "[", "5", ":", "-", "1", "]", "\n", "if", "dp", "[", "\"correct\"", "]", "==", "\"c\"", ":", "\n", "            ", "answer", "=", "options", "[", "2", "]", "[", "5", ":", "-", "1", "]", "\n", "", "choices", "+=", "\" (D) \"", "+", "options", "[", "3", "]", "[", "5", ":", "-", "1", "]", "\n", "if", "dp", "[", "\"correct\"", "]", "==", "\"d\"", ":", "\n", "            ", "answer", "=", "options", "[", "3", "]", "[", "5", ":", "-", "1", "]", "\n", "", "choices", "+=", "\" (E) \"", "+", "options", "[", "4", "]", "[", "5", ":", "]", "\n", "if", "dp", "[", "\"correct\"", "]", "==", "\"e\"", ":", "\n", "            ", "answer", "=", "options", "[", "4", "]", "[", "5", ":", "]", "\n", "\n", "", "return", "choices", ",", "answer", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.MathQA.map_hf_dataset_to_list": [[36, 43], ["math_qa.MathQA.process_line", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.MathQA.process_line"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices", ",", "answer", "=", "self", ".", "process_line", "(", "datapoint", ")", "\n", "if", "answer", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"Problem\"", "]", "+", "choices", ",", "answer", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.MathQA.load_dataset": [[44, 46], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'math_qa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.math_qa.main": [[47, 52], ["math_qa.MathQA", "MathQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "MathQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_effect.AdeCorpusV2_Effect.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ade_corpus_v2-effect\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_effect.AdeCorpusV2_Effect.get_train_test_lines": [[14, 27], ["ade_effect.AdeCorpusV2_Effect.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_effect.AdeCorpusV2_Effect.map_hf_dataset_to_list": [[28, 33], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"drug\"", "]", ",", "datapoint", "[", "\"effect\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_effect.AdeCorpusV2_Effect.load_dataset": [[34, 36], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ade_corpus_v2'", ",", "\"Ade_corpus_v2_drug_ade_relation\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.ade_effect.main": [[37, 42], ["ade_effect.AdeCorpusV2_Effect", "AdeCorpusV2_Effect.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AdeCorpusV2_Effect", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_cola.Glue_Cola.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-cola\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"unacceptable\"", ",", "\n", "1", ":", "\"acceptable\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_cola.Glue_Cola.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"sentence\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_cola.Glue_Cola.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'cola'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_cola.main": [[29, 34], ["glue_cola.Glue_Cola", "Glue_Cola.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_Cola", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.liar.Liar.__init__": [[8, 21], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"liar\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"half-true\"", ",", "\n", "2", ":", "\"mostly-true\"", ",", "\n", "3", ":", "\"true\"", ",", "\n", "4", ":", "\"barely-true\"", ",", "\n", "5", ":", "\"pants-fire\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.liar.Liar.map_hf_dataset_to_list": [[23, 30], ["lines.append", "input_text.replace().replace().replace", "input_text.replace().replace", "input_text.replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "input_text", "=", "\"statement: \"", "+", "datapoint", "[", "\"statement\"", "]", "+", "\" [SEP] speaker: \"", "+", "datapoint", "[", "\"speaker\"", "]", "+", "\" [SEP] context: \"", "+", "datapoint", "[", "\"context\"", "]", "\n", "lines", ".", "append", "(", "(", "input_text", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.liar.Liar.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'liar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.liar.main": [[34, 39], ["liar.Liar", "Liar.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Liar", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_auto.WikiAuto.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiki_auto\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"notAligned\"", ",", "\n", "1", ":", "\"aligned\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_auto.WikiAuto.get_train_test_lines": [[19, 25], ["wiki_auto.WikiAuto.map_hf_dataset_to_list", "wiki_auto.WikiAuto.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"dev\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_auto.WikiAuto.map_hf_dataset_to_list": [[26, 32], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"normal sentence: \"", "+", "datapoint", "[", "\"normal_sentence\"", "]", "+", "\" [SEP] simple_sentence: \"", "+", "datapoint", "[", "\"simple_sentence\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"alignment_label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_auto.WikiAuto.load_dataset": [[33, 35], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'wiki_auto'", ",", "'manual'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wiki_auto.main": [[36, 41], ["wiki_auto.WikiAuto", "WikiAuto.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiAuto", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.Superglue_MultiRC.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-multirc\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.Superglue_MultiRC.get_source_and_target_string": [[16, 34], ["enumerate", "zip", "paragraph[].replace().replace().replace", "paragraph[].replace().replace().replace", "len", "choice.replace().replace().replace", "correct_answers.append", "paragraph[].replace().replace", "paragraph[].replace().replace", "choice.replace().replace", "paragraph[].replace", "paragraph[].replace", "choice.replace"], "methods", ["None"], ["", "def", "get_source_and_target_string", "(", "self", ",", "paragraph", ")", ":", "\n", "        ", "src", "=", "\"question: {}\"", ".", "format", "(", "paragraph", "[", "0", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ")", "\n", "\n", "for", "idx", ",", "choice", "in", "enumerate", "(", "paragraph", "[", "2", "]", ")", ":", "\n", "            ", "src", "+=", "\" \"", "+", "ID2ALPHABET", "[", "idx", "]", "+", "\" \"", "+", "choice", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", "\n", "\n", "", "src", "+=", "\" context: {}\"", ".", "format", "(", "paragraph", "[", "1", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ")", "\n", "\n", "correct_answers", "=", "[", "]", "\n", "for", "answer", ",", "label", "in", "zip", "(", "paragraph", "[", "2", "]", ",", "paragraph", "[", "3", "]", ")", ":", "\n", "            ", "if", "label", "==", "1", ":", "\n", "                ", "correct_answers", ".", "append", "(", "answer", ")", "\n", "", "", "if", "len", "(", "correct_answers", ")", "==", "0", ":", "\n", "            ", "tar", "=", "\"NO ANSWER!\"", "\n", "", "else", ":", "\n", "            ", "tar", "=", "\" [SEP] \"", ".", "join", "(", "correct_answers", ")", "\n", "\n", "", "return", "src", ",", "tar", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.Superglue_MultiRC.map_hf_dataset_to_list": [[35, 49], ["paragraphs.values", "lines.append", "[].append", "[].append", "superglue_multirc.Superglue_MultiRC.get_source_and_target_string"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.Superglue_MultiRC.get_source_and_target_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "\n", "paragraphs", "=", "{", "}", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"idx\"", "]", "[", "\"question\"", "]", "not", "in", "paragraphs", ":", "\n", "                ", "paragraphs", "[", "datapoint", "[", "\"idx\"", "]", "[", "\"question\"", "]", "]", "=", "[", "datapoint", "[", "\"question\"", "]", ",", "datapoint", "[", "\"paragraph\"", "]", ",", "[", "datapoint", "[", "\"answer\"", "]", "]", ",", "[", "datapoint", "[", "\"label\"", "]", "]", "]", "\n", "", "else", ":", "\n", "                ", "paragraphs", "[", "datapoint", "[", "\"idx\"", "]", "[", "\"question\"", "]", "]", "[", "2", "]", ".", "append", "(", "datapoint", "[", "\"answer\"", "]", ")", "\n", "paragraphs", "[", "datapoint", "[", "\"idx\"", "]", "[", "\"question\"", "]", "]", "[", "3", "]", ".", "append", "(", "datapoint", "[", "\"label\"", "]", ")", "\n", "\n", "", "", "for", "paragraph", "in", "paragraphs", ".", "values", "(", ")", ":", "\n", "            ", "lines", ".", "append", "(", "self", ".", "get_source_and_target_string", "(", "paragraph", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.Superglue_MultiRC.load_dataset": [[50, 52], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"super_glue\"", ",", "\"multirc\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_multirc.main": [[53, 58], ["superglue_multirc.Superglue_MultiRC", "Superglue_MultiRC.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_MultiRC", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"cosmos_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string": [[16, 23], ["range", "str", "str"], "methods", ["None"], ["", "def", "get_choices_and_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_key", "=", "\"answer\"", "+", "str", "(", "datapoint", "[", "\"label\"", "]", ")", "\n", "answer_string", "=", "datapoint", "[", "answer_key", "]", "\n", "choices_string", "=", "\"\"", "\n", "for", "idx", "in", "range", "(", "4", ")", ":", "\n", "            ", "choices_string", "+=", "\" \"", "+", "id2alphabet", "[", "idx", "]", "+", "\" \"", "+", "datapoint", "[", "\"answer\"", "+", "str", "(", "idx", ")", "]", "\n", "", "return", "choices_string", ",", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.map_hf_dataset_to_list": [[24, 30], ["cosmos_qa.CosmosQA.get_choices_and_answer_string", "lines.append"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.get_choices_and_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "choices_string", ",", "answer_string", "=", "self", ".", "get_choices_and_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"context\"", "]", "+", "\" [SEP] \"", "+", "choices_string", ",", "answer_string", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.CosmosQA.load_dataset": [[31, 33], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"cosmos_qa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.cosmos_qa.main": [[34, 39], ["cosmos_qa.CosmosQA", "CosmosQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CosmosQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crows_pairs.CrowsPairs.__init__": [[9, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"crows_pairs\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"sentence 1\"", ",", "\n", "1", ":", "\"sentence 2\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crows_pairs.CrowsPairs.get_train_test_lines": [[19, 33], ["crows_pairs.CrowsPairs.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only test set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crows_pairs.CrowsPairs.map_hf_dataset_to_list": [[34, 43], ["numpy.random.seed", "numpy.random.random", "lines.append", "lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sent_more\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sent_less\"", "]", ",", "self", ".", "label", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sent_less\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sent_more\"", "]", ",", "self", ".", "label", "[", "1", "]", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crows_pairs.CrowsPairs.load_dataset": [[44, 46], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'crows_pairs'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.crows_pairs.main": [[47, 51], ["crows_pairs.CrowsPairs", "CrowsPairs.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CrowsPairs", "(", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.piqa.PIQA.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"piqa\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"solution 1\"", ",", "\n", "1", ":", "\"solution 2\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.piqa.PIQA.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"goal: \"", "+", "datapoint", "[", "\"goal\"", "]", "+", "\" [SEP] solution 1\"", "+", "datapoint", "[", "\"sol1\"", "]", "+", "\" [SEP] solution 2\"", "+", "datapoint", "[", "\"sol2\"", "]", ",", "datapoint", "[", "\"label\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.piqa.PIQA.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'piqa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.piqa.main": [[29, 34], ["piqa.PIQA", "PIQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "PIQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wikisql.WikiSQL.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wikisql\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wikisql.WikiSQL.map_hf_dataset_to_list": [[16, 21], ["lines.append", "utils.clean", "[].strip"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"question\"", "]", ")", ",", "datapoint", "[", "\"sql\"", "]", "[", "\"human_readable\"", "]", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wikisql.WikiSQL.load_dataset": [[22, 24], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wikisql\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.wikisql.main": [[25, 30], ["wikisql.WikiSQL", "WikiSQL.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiSQL", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_cb.Superglue_CB.__init__": [[8, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-cb\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"contradiction\"", ",", "\n", "2", ":", "\"neutral\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_cb.Superglue_CB.map_hf_dataset_to_list": [[20, 26], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"premise: \"", "+", "datapoint", "[", "\"premise\"", "]", "+", "\" [SEP] hypothesis: \"", "+", "datapoint", "[", "\"hypothesis\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_cb.Superglue_CB.load_dataset": [[27, 29], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'super_glue'", ",", "'cb'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_cb.main": [[30, 35], ["superglue_cb.Superglue_CB", "Superglue_CB.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_CB", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.get_majority": [[3, 12], ["collections.Counter", "collections.Counter.most_common", "len"], "function", ["None"], ["import", "json", "\n", "\n", "def", "label_smoothed_nll_loss", "(", "lprobs", ",", "target", ",", "epsilon", "=", "0.1", ",", "ignore_index", "=", "-", "100", ")", ":", "\n", "    ", "\"\"\"From fairseq\"\"\"", "\n", "if", "target", ".", "dim", "(", ")", "==", "lprobs", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "target", "=", "target", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "nll_loss", "=", "-", "lprobs", ".", "gather", "(", "dim", "=", "-", "1", ",", "index", "=", "target", ")", "\n", "smooth_loss", "=", "-", "lprobs", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "ignore_index", "is", "not", "None", ":", "\n", "        ", "pad_mask", "=", "target", ".", "eq", "(", "ignore_index", ")", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean": [[13, 19], ["s.strip().replace().replace().replace().replace.strip().replace().replace().replace().replace", "s.strip().replace().replace().replace().replace.split", "s.strip().replace().replace().replace().replace.strip().replace().replace().replace", "s.strip().replace().replace().replace().replace.strip().replace().replace", "s.strip().replace().replace().replace().replace.strip().replace", "s.strip().replace().replace().replace().replace.strip"], "function", ["None"], ["nll_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "smooth_loss", ".", "masked_fill_", "(", "pad_mask", ",", "0.0", ")", "\n", "", "else", ":", "\n", "        ", "nll_loss", "=", "nll_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "smooth_loss", "=", "smooth_loss", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "nll_loss", "=", "nll_loss", ".", "sum", "(", ")", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.art.ART.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"art\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "1", ":", "\"hypothesis 1\"", ",", "\n", "2", ":", "\"hypothesis 2\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.art.ART.map_hf_dataset_to_list": [[19, 26], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "input_line", "=", "\"observation 1: \"", "+", "datapoint", "[", "\"observation_1\"", "]", "+", "\" [SEP] observation 2: \"", "+", "datapoint", "[", "\"observation_2\"", "]", "+", "\" [SEP] hypothesis 1: \"", "+", "datapoint", "[", "\"hypothesis_1\"", "]", "+", "\" [SEP] hypothesis 2: \"", "+", "datapoint", "[", "\"hypothesis_2\"", "]", "\n", "lines", ".", "append", "(", "(", "input_line", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.art.ART.load_dataset": [[27, 29], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'art'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.art.main": [[30, 35], ["art.ART", "ART.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "ART", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_rte.Glue_RTE.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"glue-rte\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"entailment\"", ",", "\n", "1", ":", "\"not_entailment\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_rte.Glue_RTE.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_rte.Glue_RTE.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'glue'", ",", "'rte'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.glue_rte.main": [[29, 34], ["glue_rte.Glue_RTE", "Glue_RTE.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Glue_RTE", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wic.Superglue_Wic.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"superglue-wic\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"false\"", ",", "\n", "1", ":", "\"true\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wic.Superglue_Wic.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "\"word: \"", "+", "datapoint", "[", "\"word\"", "]", "+", "\" [SEP] sentence 1: \"", "+", "datapoint", "[", "\"sentence1\"", "]", "+", "\" [SEP] sentence 2: \"", "+", "datapoint", "[", "\"sentence2\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wic.Superglue_Wic.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'super_glue'", ",", "'wic'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.superglue_wic.main": [[29, 34], ["superglue_wic.Superglue_Wic", "Superglue_Wic.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Superglue_Wic", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.empathetic_dialogues.EmpatheticDialogues.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"empathetic_dialogues\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.empathetic_dialogues.EmpatheticDialogues.get_train_test_lines": [[14, 26], ["empathetic_dialogues.EmpatheticDialogues.map_hf_dataset_to_list", "empathetic_dialogues.EmpatheticDialogues.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"validation\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_lines", ")", "\n", "n", "=", "len", "(", "test_lines", ")", "\n", "test_lines", "=", "test_lines", "[", ":", "int", "(", "0.2", "*", "n", ")", "]", "\n", "# using 20% of test cases, otherwise it's too slow to do evaluation", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.empathetic_dialogues.EmpatheticDialogues.map_hf_dataset_to_list": [[27, 49], ["d.items", "lines.append", "lines.append", "d[].append", "datapoint[].replace", "datapoint[].replace().replace().replace().replace", "datapoint[].replace().replace().replace", "datapoint[].replace().replace", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "datapoint", "[", "\"prompt\"", "]", ".", "replace", "(", "\"_comma_\"", ",", "\",\"", ")", "+", "\" [SEP] \"", "+", "datapoint", "[", "\"context\"", "]", "\n", "\n", "if", "\"hit:\"", "in", "datapoint", "[", "\"utterance\"", "]", ":", "\n", "                ", "continue", "# some bad lines", "\n", "", "lines", ".", "append", "(", "(", "input_text", ",", "datapoint", "[", "\"utterance\"", "]", ".", "replace", "(", "\"_comma_\"", ",", "\",\"", ")", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\t\"", ",", "\" \"", ")", ".", "replace", "(", "\"\\r\"", ",", "\" \"", ")", ")", ")", "\n", "\n", "# merge same prompts", "\n", "", "d", "=", "{", "}", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "if", "line", "[", "0", "]", "in", "d", ":", "\n", "                ", "d", "[", "line", "[", "0", "]", "]", ".", "append", "(", "line", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "d", "[", "line", "[", "0", "]", "]", "=", "[", "line", "[", "1", "]", "]", "\n", "\n", "", "", "lines", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "lines", ".", "append", "(", "(", "k", ",", "\"\\t\"", ".", "join", "(", "v", ")", ")", ")", "\n", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.empathetic_dialogues.EmpatheticDialogues.load_dataset": [[50, 52], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'empathetic_dialogues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.empathetic_dialogues.main": [[53, 58], ["empathetic_dialogues.EmpatheticDialogues", "EmpatheticDialogues.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "EmpatheticDialogues", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.spider.Spider.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"spider\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.spider.Spider.map_hf_dataset_to_list": [[15, 20], ["lines.append", "utils.clean", "utils.clean"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean", "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "clean", "(", "datapoint", "[", "\"question\"", "]", ")", ",", "clean", "(", "datapoint", "[", "\"query\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.spider.Spider.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"spider\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.spider.main": [[24, 29], ["spider.Spider", "Spider.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Spider", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.QUAREL.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"quarel\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.QUAREL.get_answer_string": [[14, 28], ["datapoint[].find", "datapoint[].find", "answer_string.endswith"], "methods", ["None"], ["", "def", "get_answer_string", "(", "self", ",", "datapoint", ")", ":", "\n", "        ", "answer_index", "=", "datapoint", "[", "\"answer_index\"", "]", "\n", "st1", "=", "datapoint", "[", "\"question\"", "]", ".", "find", "(", "\"(A)\"", ")", "\n", "st2", "=", "datapoint", "[", "\"question\"", "]", ".", "find", "(", "\"(B)\"", ")", "\n", "\n", "if", "answer_index", "==", "0", ":", "\n", "            ", "answer_string", "=", "datapoint", "[", "\"question\"", "]", "[", "st1", "+", "4", ":", "st2", "]", "\n", "", "else", ":", "\n", "            ", "answer_string", "=", "datapoint", "[", "\"question\"", "]", "[", "st2", "+", "4", ":", "]", "\n", "\n", "", "if", "answer_string", ".", "endswith", "(", "\"or \"", ")", ":", "\n", "            ", "answer_string", "=", "answer_string", "[", ":", "-", "3", "]", "\n", "\n", "", "return", "answer_string", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.QUAREL.map_hf_dataset_to_list": [[30, 36], ["quarel.QUAREL.get_answer_string", "lines.append", "quarel.QUAREL.strip"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.QUAREL.get_answer_string"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "answer_string", "=", "self", ".", "get_answer_string", "(", "datapoint", ")", "\n", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ",", "answer_string", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.QUAREL.load_dataset": [[37, 39], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"quarel\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quarel.main": [[40, 45], ["quarel.QUAREL", "QUAREL.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "QUAREL", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec_finegrained.TREC_Finegrained.__init__": [[8, 62], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"trec-finegrained\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"manner\"", ",", "\n", "1", ":", "\"cremat\"", ",", "\n", "2", ":", "\"animal\"", ",", "\n", "3", ":", "\"exp\"", ",", "\n", "4", ":", "\"ind\"", ",", "\n", "5", ":", "\"gr\"", ",", "\n", "6", ":", "\"title\"", ",", "\n", "7", ":", "\"def\"", ",", "\n", "8", ":", "\"date\"", ",", "\n", "9", ":", "\"reason\"", ",", "\n", "10", ":", "\"event\"", ",", "\n", "11", ":", "\"state\"", ",", "\n", "12", ":", "\"desc\"", ",", "\n", "13", ":", "\"count\"", ",", "\n", "14", ":", "\"other\"", ",", "\n", "15", ":", "\"letter\"", ",", "\n", "16", ":", "\"religion\"", ",", "\n", "17", ":", "\"food\"", ",", "\n", "18", ":", "\"country\"", ",", "\n", "19", ":", "\"color\"", ",", "\n", "20", ":", "\"termeq\"", ",", "\n", "21", ":", "\"city\"", ",", "\n", "22", ":", "\"body\"", ",", "\n", "23", ":", "\"dismed\"", ",", "\n", "24", ":", "\"mount\"", ",", "\n", "25", ":", "\"money\"", ",", "\n", "26", ":", "\"product\"", ",", "\n", "27", ":", "\"period\"", ",", "\n", "28", ":", "\"substance\"", ",", "\n", "29", ":", "\"sport\"", ",", "\n", "30", ":", "\"plant\"", ",", "\n", "31", ":", "\"techmeth\"", ",", "\n", "32", ":", "\"volsize\"", ",", "\n", "33", ":", "\"instru\"", ",", "\n", "34", ":", "\"abb\"", ",", "\n", "35", ":", "\"speed\"", ",", "\n", "36", ":", "\"word\"", ",", "\n", "37", ":", "\"lang\"", ",", "\n", "38", ":", "\"perc\"", ",", "\n", "39", ":", "\"code\"", ",", "\n", "40", ":", "\"dist\"", ",", "\n", "41", ":", "\"temp\"", ",", "\n", "42", ":", "\"symbol\"", ",", "\n", "43", ":", "\"ord\"", ",", "\n", "44", ":", "\"veh\"", ",", "\n", "45", ":", "\"weight\"", ",", "\n", "46", ":", "\"currency\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec_finegrained.TREC_Finegrained.get_train_test_lines": [[64, 78], ["trec_finegrained.TREC_Finegrained.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec_finegrained.TREC_Finegrained.map_hf_dataset_to_list": [[79, 85], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label-fine\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec_finegrained.TREC_Finegrained.load_dataset": [[86, 88], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'trec'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.trec_finegrained.main": [[89, 94], ["trec_finegrained.TREC_Finegrained", "TREC_Finegrained.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "TREC_Finegrained", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_hotpotqa.Kilt_NQ.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_hotpotqa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_hotpotqa.Kilt_NQ.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "\"\\t\"", ".", "join", "(", "[", "item", "[", "\"answer\"", "]", "for", "item", "in", "datapoint", "[", "\"output\"", "]", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_hotpotqa.Kilt_NQ.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'hotpotqa'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.kilt_hotpotqa.main": [[23, 28], ["kilt_hotpotqa.Kilt_NQ", "Kilt_NQ.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_NQ", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.rotten_tomatoes.RottenTomatos.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"rotten_tomatoes\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"negative\"", ",", "\n", "1", ":", "\"positive\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.rotten_tomatoes.RottenTomatos.map_hf_dataset_to_list": [[19, 25], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "self", ".", "label", "[", "datapoint", "[", "\"label\"", "]", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.rotten_tomatoes.RottenTomatos.load_dataset": [[26, 28], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'rotten_tomatoes'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.rotten_tomatoes.main": [[29, 34], ["rotten_tomatoes.RottenTomatos", "RottenTomatos.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "RottenTomatos", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quoref.Quoref.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"quoref\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quoref.Quoref.map_hf_dataset_to_list": [[15, 22], ["lines.append", "input_text.replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" context: \"", "+", "datapoint", "[", "\"context\"", "]", "\n", "output_text", "=", "\"\\t\"", ".", "join", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "output_text", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quoref.Quoref.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"quoref\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.quoref.main": [[26, 31], ["quoref.Quoref", "Quoref.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Quoref", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.squad.SQuAD.__init__": [[10, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"squad-\"", "+", "mode", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.squad.SQuAD.map_hf_dataset_to_list": [[16, 24], ["lines.append", "lines.append", "utils.clean", "list", "list", "set", "set"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.utils.clean"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "self", ".", "mode", "==", "\"with_context\"", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", "+", "\" context: \"", "+", "clean", "(", "datapoint", "[", "\"context\"", "]", ")", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "lines", ".", "append", "(", "(", "\"question: \"", "+", "datapoint", "[", "\"question\"", "]", ",", "\"\\t\"", ".", "join", "(", "list", "(", "set", "(", "datapoint", "[", "\"answers\"", "]", "[", "\"text\"", "]", ")", ")", ")", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.squad.SQuAD.load_dataset": [[25, 27], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"squad\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.squad.main": [[28, 34], ["squad.SQuAD", "SQuAD.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "mode", "in", "[", "\"with_context\"", ",", "\"no_context\"", "]", ":", "\n", "        ", "dataset", "=", "SQuAD", "(", "mode", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wiki_movies.WikiMovies.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wiki_movies\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wiki_movies.WikiMovies.map_hf_dataset_to_list": [[14, 19], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wiki_movies.WikiMovies.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wiki_movies\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wiki_movies.main": [[23, 28], ["0wiki_movies.WikiMovies", "WikiMovies.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WikiMovies", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_eli5.Kilt_ELI5.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_eli5\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_eli5.Kilt_ELI5.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace", "[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "datapoint", "[", "\"output\"", "]", "[", "0", "]", "[", "\"answer\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_eli5.Kilt_ELI5.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'eli5'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_eli5.main": [[23, 28], ["0kilt_eli5.Kilt_ELI5", "Kilt_ELI5.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_ELI5", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ambig_qa.AmbigQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ambig_qa\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"cc-by-sa-3.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ambig_qa.AmbigQA.map_hf_dataset_to_list": [[14, 28], ["lines.append", "len", "len", "datapoint[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "len", "(", "datapoint", "[", "\"annotations\"", "]", "[", "\"qaPairs\"", "]", ")", "!=", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "concat_answer", "=", "\"\"", "\n", "if", "len", "(", "datapoint", "[", "\"annotations\"", "]", "[", "\"qaPairs\"", "]", "[", "0", "]", "[", "\"answer\"", "]", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "for", "ans", "in", "datapoint", "[", "\"annotations\"", "]", "[", "\"qaPairs\"", "]", "[", "0", "]", "[", "\"answer\"", "]", ":", "\n", "                ", "concat_answer", "+=", "ans", "[", "0", "]", "+", "\" [SEP] \"", "\n", "\n", "", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "concat_answer", "[", ":", "-", "7", "]", ")", ")", "# remove the last [SEP]", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ambig_qa.AmbigQA.load_dataset": [[29, 31], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"ambig_qa\"", ",", "\"light\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ambig_qa.main": [[32, 37], ["0ambig_qa.AmbigQA", "AmbigQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "AmbigQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wnut_17.WNut17.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"wnut_17\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wnut_17.WNut17.map_hf_dataset_to_list": [[16, 24], ["lines.append", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "input_text", "=", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", "\n", "output_text", "=", "\" \"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"ner_tags\"", "]", "]", ")", "\n", "lines", ".", "append", "(", "(", "input_text", ",", "output_text", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wnut_17.WNut17.load_dataset": [[25, 27], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "\"wnut_17\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0wnut_17.main": [[28, 33], ["0wnut_17.WNut17", "WNut17.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WNut17", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0math_dataset.Math.__init__": [[68, 73], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_name", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"math_dataset-\"", "+", "subset_name", "\n", "self", ".", "subset_name", "=", "subset_name", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0math_dataset.Math.get_train_test_lines": [[74, 81], ["0math_dataset.Math.map_hf_dataset_to_list", "0math_dataset.Math.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"test\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0math_dataset.Math.map_hf_dataset_to_list": [[82, 87], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ",", "datapoint", "[", "\"answer\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0math_dataset.Math.load_dataset": [[88, 90], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'math_dataset'", ",", "self", ".", "subset_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0math_dataset.main": [[91, 97], ["0math_dataset.Math", "Math.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "subset", "in", "SUBSETS", ":", "\n", "        ", "dataset", "=", "Math", "(", "subset", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0cnn_dailymail.CNNDailyMail.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"cnn_dailymail\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"apache-2.0\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0cnn_dailymail.CNNDailyMail.map_hf_dataset_to_list": [[14, 19], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "\"summarize: \"", "+", "datapoint", "[", "\"article\"", "]", ",", "datapoint", "[", "\"highlights\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0cnn_dailymail.CNNDailyMail.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'cnn_dailymail'", ",", "'3.0.0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0cnn_dailymail.main": [[23, 28], ["0cnn_dailymail.CNNDailyMail", "CNNDailyMail.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "CNNDailyMail", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0jnlpba.JNLPBA.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"jnlpba\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0jnlpba.JNLPBA.map_hf_dataset_to_list": [[16, 22], ["lines.append", "len", "len"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", "==", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", ",", "\" \"", ".", "join", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0jnlpba.JNLPBA.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'jnlpba'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0jnlpba.main": [[26, 31], ["0jnlpba.JNLPBA", "JNLPBA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "JNLPBA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_triviaqa.Kilt_TriviaQA.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"kilt_trivia\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_triviaqa.Kilt_TriviaQA.map_hf_dataset_to_list": [[14, 19], ["lines.append", "datapoint[].replace", "[].replace"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"input\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ",", "datapoint", "[", "\"output\"", "]", "[", "0", "]", "[", "\"answer\"", "]", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_triviaqa.Kilt_TriviaQA.load_dataset": [[20, 22], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'kilt_tasks'", ",", "'triviaqa_support_only'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0kilt_triviaqa.main": [[23, 28], ["0kilt_triviaqa.Kilt_TriviaQA", "Kilt_TriviaQA.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Kilt_TriviaQA", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ncbi_disease.NCBI_Disease.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"ncbi_disease\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ncbi_disease.NCBI_Disease.map_hf_dataset_to_list": [[14, 20], ["lines.append", "len", "len", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", "==", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", ",", "\" \"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"ner_tags\"", "]", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ncbi_disease.NCBI_Disease.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'ncbi_disease'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0ncbi_disease.main": [[24, 29], ["0ncbi_disease.NCBI_Disease", "NCBI_Disease.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "NCBI_Disease", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0nq_open.NQOpen.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"nq_open\"", "\n", "self", ".", "task_type", "=", "\"text to text\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0nq_open.NQOpen.map_hf_dataset_to_list": [[14, 20], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "for", "answer", "in", "datapoint", "[", "\"answer\"", "]", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"question\"", "]", ",", "answer", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0nq_open.NQOpen.load_dataset": [[21, 23], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'nq_open'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0nq_open.main": [[24, 29], ["0nq_open.NQOpen", "NQOpen.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "NQOpen", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0web_of_science.WebOfScience.__init__": [[8, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"web_of_science\"", "\n", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "# unknown?", "\n", "self", ".", "label", "=", "{", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0web_of_science.WebOfScience.get_train_test_lines": [[18, 32], ["0web_of_science.WebOfScience.map_hf_dataset_to_list", "numpy.random.seed", "numpy.random.shuffle", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "# only train set, manually split 20% data as test", "\n", "\n", "        ", "lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "n", "=", "len", "(", "lines", ")", "\n", "\n", "train_lines", "=", "lines", "[", ":", "int", "(", "0.8", "*", "n", ")", "]", "\n", "test_lines", "=", "lines", "[", "int", "(", "0.8", "*", "n", ")", ":", "]", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0web_of_science.WebOfScience.map_hf_dataset_to_list": [[33, 39], ["lines.append"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "# line[0]: input; line[1]: output", "\n", "            ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"text\"", "]", ",", "datapoint", "[", "\"label_level_1\"", "]", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0web_of_science.WebOfScience.load_dataset": [[40, 42], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'web_of_science'", ",", "'WOS46985'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0web_of_science.main": [[43, 48], ["0web_of_science.WebOfScience", "WebOfScience.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "WebOfScience", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0bc2gm_corpus.BC2GM_Corpus.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"bc2gm_corpus\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0bc2gm_corpus.BC2GM_Corpus.map_hf_dataset_to_list": [[16, 23], ["lines.append", "len", "len", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "==", "len", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", "\n", "datapoint", "[", "\"ner_tags\"", "]", "=", "[", "str", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"ner_tags\"", "]", "]", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", ",", "\" \"", ".", "join", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0bc2gm_corpus.BC2GM_Corpus.load_dataset": [[24, 26], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'bc2gm_corpus'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0bc2gm_corpus.main": [[27, 32], ["0bc2gm_corpus.BC2GM_Corpus", "BC2GM_Corpus.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "BC2GM_Corpus", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0linnaeus.Linnaeus.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"linnaeus\"", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0linnaeus.Linnaeus.map_hf_dataset_to_list": [[14, 23], ["lines.append", "len", "len", "len", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "<", "10", ":", "\n", "                ", "continue", "\n", "", "assert", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "==", "len", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", "\n", "datapoint", "[", "\"ner_tags\"", "]", "=", "[", "str", "(", "item", ")", "for", "item", "in", "datapoint", "[", "\"ner_tags\"", "]", "]", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", ",", "\" \"", ".", "join", "(", "datapoint", "[", "\"ner_tags\"", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0linnaeus.Linnaeus.load_dataset": [[24, 26], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'linnaeus'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0linnaeus.main": [[27, 32], ["0linnaeus.Linnaeus", "Linnaeus.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Linnaeus", "(", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"fever\"", "\n", "self", ".", "task_type", "=", "\"classification\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n", "# for classification tasks, specify the meaning of each label", "\n", "self", ".", "label", "=", "{", "\n", "0", ":", "\"REFUTES\"", ",", "\n", "1", ":", "\"SUPPORTS\"", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.get_train_test_lines": [[19, 24], ["0fever.Fever.map_hf_dataset_to_list", "0fever.Fever.map_hf_dataset_to_list"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list", "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list"], ["", "def", "get_train_test_lines", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "train_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"train\"", ")", "\n", "test_lines", "=", "self", ".", "map_hf_dataset_to_list", "(", "dataset", ",", "\"labelled_dev\"", ")", "\n", "\n", "return", "train_lines", ",", "test_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.map_hf_dataset_to_list": [[26, 35], ["lines.append", "lines.append", "datapoint[].strip", "datapoint[].strip"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "if", "datapoint", "[", "\"label\"", "]", "==", "\"SUPPORTS\"", ":", "\n", "# line[0]: input; line[1]: output", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"claim\"", "]", ".", "strip", "(", ")", ",", "\"Supports\"", ")", ")", "\n", "", "elif", "datapoint", "[", "\"label\"", "]", "==", "\"REFUTES\"", ":", "\n", "                ", "lines", ".", "append", "(", "(", "datapoint", "[", "\"claim\"", "]", ".", "strip", "(", ")", ",", "\"Refutes\"", ")", ")", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.Fever.load_dataset": [[36, 38], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'fever'", ",", "'v1.0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0fever.main": [[39, 43], ["0fever.Fever", "Fever.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "dataset", "=", "Fever", "(", ")", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "        ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "16", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.__init__": [[9, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset_identifier", ")", ":", "\n", "        ", "self", ".", "hf_identifier", "=", "\"conll2003-\"", "+", "subset_identifier", "\n", "self", ".", "subset_identifier", "=", "subset_identifier", "\n", "self", ".", "task_type", "=", "\"sequence tagging\"", "\n", "self", ".", "license", "=", "\"unknown\"", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.map_hf_dataset_to_list": [[15, 22], ["lines.append", "len", "len", "str"], "methods", ["None"], ["", "def", "map_hf_dataset_to_list", "(", "self", ",", "hf_dataset", ",", "split_name", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "key", "=", "self", ".", "subset_identifier", "+", "\"_tags\"", "\n", "for", "datapoint", "in", "hf_dataset", "[", "split_name", "]", ":", "\n", "            ", "assert", "len", "(", "datapoint", "[", "key", "]", ")", "==", "len", "(", "datapoint", "[", "\"tokens\"", "]", ")", "\n", "lines", ".", "append", "(", "(", "\" \"", ".", "join", "(", "datapoint", "[", "\"tokens\"", "]", ")", ",", "\" \"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "datapoint", "[", "key", "]", "]", ")", ")", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset": [[23, 25], ["datasets.load_dataset"], "methods", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.CoNLL2003.load_dataset"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "        ", "return", "datasets", ".", "load_dataset", "(", "'conll2003'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.not_used.0conll2003.main": [[26, 32], ["0conll2003.CoNLL2003", "CoNLL2003.generate_k_shot_data"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks.fewshot_gym_dataset.FewshotGymTextToTextDataset.generate_k_shot_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "for", "tag", "in", "[", "\"ner\"", ",", "\"pos\"", ",", "\"chunk\"", "]", ":", "\n", "        ", "dataset", "=", "CoNLL2003", "(", "tag", ")", "\n", "\n", "for", "seed", "in", "[", "100", ",", "13", ",", "21", ",", "42", ",", "87", "]", ":", "\n", "            ", "train", ",", "dev", ",", "test", "=", "dataset", ".", "generate_k_shot_data", "(", "k", "=", "32", ",", "seed", "=", "seed", ",", "path", "=", "\"../data/\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.INK-USC_CrossFit.example_scripts.collect_results.main": [[7, 45], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pandas.DataFrame", "os.listdir", "sorted", "pd.DataFrame.to_csv", "directory.startswith", "pandas.read_csv", "pd.read_csv.iterrows", "os.path.exists", "print", "os.path.join", "row[].endswith", "len", "os.path.join", "devs.append", "tests.append", "numpy.mean", "numpy.mean", "numpy.std", "numpy.std", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.INK-USC_CrossFit.tasks._build_gym.parse_args"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--logs_dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--output_file\"", ",", "default", "=", "None", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"task\"", ",", "\"entry\"", ",", "\"dev_performance\"", ",", "\"test_performance\"", "]", ")", "\n", "\n", "directories", "=", "os", ".", "listdir", "(", "args", ".", "logs_dir", ")", "\n", "for", "directory", "in", "sorted", "(", "directories", ")", ":", "\n", "        ", "if", "directory", ".", "startswith", "(", "\"singletask\"", ")", ":", "\n", "            ", "task", "=", "directory", "[", "11", ":", "]", "\n", "", "else", ":", "\n", "            ", "task", "=", "directory", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "logs_dir", ",", "directory", ",", "\"result.csv\"", ")", ")", ":", "\n", "            ", "print", "(", "\"Something wrong with task {}\\n\\n\"", ".", "format", "(", "task", ")", ")", "\n", "continue", "\n", "\n", "", "df0", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "logs_dir", ",", "directory", ",", "\"result.csv\"", ")", ")", "\n", "\n", "devs", ",", "tests", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "idx", ",", "row", "in", "df0", ".", "iterrows", "(", ")", ":", "\n", "            ", "if", "row", "[", "\"prefix\"", "]", ".", "endswith", "(", "\"_best\"", ")", ":", "\n", "                ", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "[", "task", ",", "row", "[", "\"prefix\"", "]", "[", ":", "-", "5", "]", ",", "row", "[", "\"dev_performance\"", "]", ",", "row", "[", "\"test_performance\"", "]", "]", "\n", "# print(row[\"prefix\"], row[\"dev_performance\"], row[\"test_performance\"])", "\n", "devs", ".", "append", "(", "row", "[", "\"dev_performance\"", "]", ")", "\n", "tests", ".", "append", "(", "row", "[", "\"test_performance\"", "]", ")", "\n", "\n", "", "", "if", "len", "(", "devs", ")", ">", "0", ":", "\n", "            ", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "[", "task", ",", "\"mean\"", ",", "np", ".", "mean", "(", "devs", ")", ",", "np", ".", "mean", "(", "tests", ")", "]", "\n", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "[", "task", ",", "\"std\"", ",", "np", ".", "std", "(", "devs", ")", ",", "np", ".", "std", "(", "tests", ")", "]", "\n", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")", "]", "=", "[", "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", "]", "\n", "\n", "", "", "df", ".", "to_csv", "(", "args", ".", "output_file", ")", "\n", "# print(directories)", "\n"]]}