{"home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.click": [[21, 30], ["random.uniform"], "function", ["None"], ["def", "click", "(", "x", ",", "k", ",", "item_ctr", ",", "r_t", ")", ":", "\n", "    ", "\"return the reward for impression\"", "\n", "if", "r_t", "==", "\"click\"", ":", "\n", "        ", "t", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "if", "item_ctr", "[", "x", "]", "[", "k", "]", ">", "t", ":", "\n", "            ", "return", "1", "\n", "", "return", "0", "\n", "", "else", ":", "\n", "        ", "return", "item_ctr", "[", "x", "]", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.process_batch": [[32, 46], ["t.extend", "data.append", "policy.recommend_batch", "policy.recommend_batch"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.recommend_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.recommend_batch"], ["", "", "def", "process_batch", "(", "features_list", ",", "memory", ",", "policy", ",", "item_ctr", ")", ":", "\n", "    ", "\"recommend items under current policy\"", "\n", "# data: the impression items in current batch", "\n", "data", "=", "[", "]", "\n", "for", "x", "in", "memory", ":", "\n", "        ", "t", "=", "[", "x", "]", "\n", "t", ".", "extend", "(", "features_list", "[", "x", "]", ")", "\n", "data", ".", "append", "(", "t", ")", "\n", "# policy recommend creative", "\n", "", "if", "policy", ".", "name", "==", "'Greedy'", ":", "\n", "        ", "res", "=", "policy", ".", "recommend_batch", "(", "data", ",", "item_ctr", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "policy", ".", "recommend_batch", "(", "data", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.evaluate": [[48, 133], ["open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "len", "pandas.read_pickle", "list", "print", "len", "pd.read_pickle.to_numpy", "memory.append", "list", "auc_reward.append", "simulate.process_batch", "range", "memory.clear", "torch.utils.data.WeightedRandomSampler", "len", "policy.update", "len", "len", "f_list[].copy", "f_list[].copy.extend", "simulate.click", "f_list[].copy.append", "record.append", "eg_ind.append", "len", "logger.debug", "print", "ctr_reward.append"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.process_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.click", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "evaluate", "(", "policy", ",", "params", ")", ":", "\n", "    ", "\"process of simulation\"", "\n", "\n", "# initial reward recorder var", "\n", "record_arr", "=", "[", "0.5", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "12", ",", "14", ",", "16", ",", "18", ",", "20", ",", "22", ",", "24", ",", "26", ",", "28", ",", "30", ",", "32", ",", "36", ",", "40", ",", "45", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "\n", "100", ",", "110", ",", "120", ",", "130", ",", "140", ",", "150", ",", "160", ",", "170", ",", "180", ",", "190", ",", "200", ",", "210", ",", "220", ",", "230", ",", "240", ",", "250", ",", "\n", "260", ",", "280", ",", "300", ",", "330", ",", "360", ",", "400", ",", "500", "]", "\n", "score", ",", "impressions", "=", "0.0", ",", "1.0", "\n", "ctr_reward", ",", "auc_reward", "=", "[", "]", ",", "[", "]", "\n", "\n", "# initial data recorder var", "\n", "memory", ",", "record", ",", "r_list", ",", "eg_ind", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "cnt", "=", "0", "\n", "initial", "=", "0", "\n", "\n", "# initial background information", "\n", "f", "=", "open", "(", "params", "[", "\"feature_list\"", "]", ",", "'rb'", ")", "\n", "f_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", "=", "open", "(", "params", "[", "\"pro_list\"", "]", ",", "'rb'", ")", "\n", "pro_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", "=", "open", "(", "params", "[", "'creative_list'", "]", ",", "'rb'", ")", "\n", "c_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", "=", "open", "(", "params", "[", "'item_candidates'", "]", ",", "'rb'", ")", "\n", "item_candi", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", "=", "open", "(", "params", "[", "'item_ctr'", "]", ",", "'rb'", ")", "\n", "item_ctr", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f_len", "=", "len", "(", "f_list", "[", "0", "]", ")", "\n", "leng", "=", "f_len", "+", "len", "(", "c_list", "[", "0", "]", ")", "\n", "item_cnt", "=", "params", "[", "'batch'", "]", "\n", "df", "=", "pd", ".", "read_pickle", "(", "params", "[", "\"random_file\"", "]", ")", "\n", "warm_start", "=", "list", "(", "df", ".", "to_numpy", "(", ")", ")", "\n", "record", "=", "warm_start", "[", "200000", ":", "202000", "]", "\n", "\n", "# the main process of simulation", "\n", "while", "impressions", "<=", "params", "[", "\"iter\"", "]", ":", "\n", "        ", "cnt", "+=", "1", "\n", "item_cnt", "+=", "1", "\n", "# decide which item to display", "\n", "if", "item_cnt", ">=", "params", "[", "'batch'", "]", ":", "\n", "            ", "item_list", "=", "list", "(", "WeightedRandomSampler", "(", "pro_list", ",", "params", "[", "'batch'", "]", ")", ")", "\n", "item_cnt", "=", "0", "\n", "", "x", "=", "item_list", "[", "item_cnt", "]", "\n", "\n", "# if cnt < params[\"batch\"]:", "\n", "#     line = f_list[x].copy()", "\n", "#     k = np.random.randint(0, len(item_candi[x]))", "\n", "#     line.extend(c_list[item_candi[x][k]])", "\n", "#     line.append(click(x, k, item_ctr, params[\"simulate_type\"]))", "\n", "#     record.append(line)", "\n", "#     eg_ind.append(x)", "\n", "#     continue", "\n", "\n", "# update policy with batch data", "\n", "if", "len", "(", "record", ")", ">=", "params", "[", "'batch'", "]", "-", "3", "or", "initial", "==", "0", ":", "\n", "            ", "initial", "=", "1", "\n", "auc_reward", ".", "append", "(", "policy", ".", "update", "(", "record", ",", "eg_ind", ")", ")", "\n", "record", "=", "[", "]", "\n", "eg_ind", "=", "[", "]", "\n", "\n", "# collect reward in current batch", "\n", "", "memory", ".", "append", "(", "x", ")", "\n", "if", "len", "(", "memory", ")", "%", "params", "[", "'s_batch'", "]", "==", "0", "and", "len", "(", "memory", ")", ">", "0", ":", "\n", "            ", "r_list", "=", "process_batch", "(", "f_list", ",", "memory", ",", "policy", ",", "item_ctr", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "r_list", ")", ")", ":", "\n", "                ", "line", "=", "f_list", "[", "memory", "[", "i", "]", "]", ".", "copy", "(", ")", "\n", "t", "=", "item_candi", "[", "memory", "[", "i", "]", "]", "[", "r_list", "[", "i", "]", "]", "\n", "line", ".", "extend", "(", "c_list", "[", "t", "]", ")", "\n", "reward", "=", "click", "(", "memory", "[", "i", "]", ",", "r_list", "[", "i", "]", ",", "item_ctr", ",", "params", "[", "\"simulate_type\"", "]", ")", "\n", "line", ".", "append", "(", "reward", ")", "\n", "record", ".", "append", "(", "line", ")", "\n", "eg_ind", ".", "append", "(", "memory", "[", "i", "]", ")", "\n", "score", "+=", "reward", "\n", "impressions", "+=", "1", "\n", "if", "impressions", "%", "10000", "==", "0", ":", "\n", "                    ", "logger", ".", "debug", "(", "'{} behaviour has been generated, Ctr is {}!!!'", ".", "format", "(", "impressions", ",", "score", "/", "(", "impressions", ")", ")", ")", "\n", "print", "(", "ctr_reward", ")", "\n", "", "if", "impressions", "/", "10000", "in", "record_arr", ":", "\n", "                    ", "ctr_reward", ".", "append", "(", "score", "/", "impressions", ")", "\n", "# if impressions%1000000 == 0:", "\n", "#     policy.update_in_log()", "\n", "", "", "memory", ".", "clear", "(", ")", "\n", "# policy.print()", "\n", "", "", "score", "/=", "impressions", "\n", "print", "(", "\"CTR achieved by the policy: %.5f\"", "%", "score", ")", "\n", "return", "ctr_reward", ",", "auc_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.run": [[135, 156], ["simulate.evaluate", "policy.FmEGreedy", "policy.FmGreedy", "policy.Random", "policy.Greedy", "policy.TS", "policy.LinUCB", "policy.FmThompson", "print"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.simulate.evaluate", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "run", "(", "params", ")", ":", "\n", "    ", "model", "=", "params", "[", "'model_ee'", "]", "\n", "if", "model", "==", "'fmeg'", ":", "\n", "        ", "policy", "=", "FmEGreedy", "(", "params", ")", "\n", "", "elif", "model", "==", "'fmgreedy'", ":", "\n", "        ", "policy", "=", "FmGreedy", "(", "params", ")", "\n", "", "elif", "model", "==", "'random'", ":", "\n", "        ", "policy", "=", "Random", "(", "params", ")", "\n", "", "elif", "model", "==", "'greedy'", ":", "\n", "        ", "policy", "=", "Greedy", "(", "params", ")", "\n", "", "elif", "model", "==", "'ts'", ":", "\n", "        ", "policy", "=", "TS", "(", "params", ")", "\n", "", "elif", "model", "==", "'linucb'", ":", "\n", "        ", "policy", "=", "LinUCB", "(", "params", ")", "\n", "", "elif", "model", "==", "\"fmts\"", ":", "\n", "        ", "policy", "=", "FmThompson", "(", "params", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No model named \"", ",", "model", ",", "\" !!!\"", ")", "\n", "return", "\n", "", "res", ",", "auc_res", "=", "evaluate", "(", "policy", ",", "params", ")", "\n", "return", "res", ",", "auc_res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.__init__": [[27, 47], ["policy.get_creative", "len", "len", "range", "str"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.get_creative"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "f_list", ",", "self", ".", "c_list", ",", "self", ".", "item_candi", "=", "get_creative", "(", "params", ")", "\n", "self", ".", "name", "=", "'Base'", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "c_len", "=", "len", "(", "self", ".", "c_list", "[", "0", "]", ")", "\n", "self", ".", "f_len", "=", "len", "(", "self", ".", "f_list", "[", "0", "]", ")", "\n", "self", ".", "t_len", "=", "self", ".", "f_len", "+", "self", ".", "c_len", "\n", "self", ".", "params", "[", "\"c_len\"", "]", "=", "self", ".", "c_len", "\n", "self", ".", "params", "[", "\"f_len\"", "]", "=", "self", ".", "f_len", "\n", "self", ".", "log_file", "=", "None", "\n", "self", ".", "log_data", "=", "[", "]", "\n", "self", ".", "batch_data", "=", "[", "]", "\n", "self", ".", "fea_index", "=", "{", "}", "\n", "self", ".", "c_index", "=", "{", "}", "\n", "self", ".", "cnt", "=", "0", "\n", "cnt", "=", "0", "\n", "for", "cre", "in", "self", ".", "c_list", ":", "\n", "            ", "self", ".", "c_index", "[", "','", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "cre", ")", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "", "self", ".", "clock", "=", "[", "0", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.update": [[48, 54], ["policy.Base.log_data.extend", "len"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "lines", ",", "size", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "log_data", ".", "extend", "(", "lines", ")", "\n", "self", ".", "batch_data", "=", "lines", "\n", "if", "size", "!=", "-", "1", "and", "len", "(", "self", ".", "log_data", ")", ">", "size", ":", "\n", "            ", "self", ".", "log_data", "=", "self", ".", "log_data", "[", "-", "size", ":", "]", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.update_in_log": [[55, 61], ["pandas.DataFrame", "pandas.DataFrame.to_pickle", "len"], "methods", ["None"], ["", "def", "update_in_log", "(", "self", ")", ":", "\n", "        ", "\"\"\"write log into file\"\"\"", "\n", "if", "len", "(", "self", ".", "log_data", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", "self", ".", "log_data", ")", "\n", "df", ".", "to_pickle", "(", "self", ".", "log_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.get_recommend_info": [[62, 106], ["len", "numpy.zeros", "numpy.zeros", "offset.append", "policy.Base.fea_index.keys", "feas.append", "len", "len", "numpy.array", "numpy.array", "len", "len", "numpy.float32"], "methods", ["None"], ["", "def", "get_recommend_info", "(", "self", ",", "features_list", ",", "flag", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n            Return several array for calculate\n            feas: distinct feature list which have not been displayed\n            offset: record the beginning of feature creatives\n            candidates: creatives of all features waiting for ranking\n        \"\"\"", "\n", "feas", "=", "[", "]", "\n", "num", "=", "0", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "ind", "=", "features", "[", "0", "]", "\n", "if", "ind", "not", "in", "self", ".", "fea_index", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "fea_index", "[", "ind", "]", "=", "self", ".", "cnt", "\n", "self", ".", "cnt", "+=", "1", "\n", "feas", ".", "append", "(", "features", ")", "\n", "num", "+=", "len", "(", "self", ".", "item_candi", "[", "ind", "]", ")", "\n", "", "", "cnt", "=", "0", "\n", "f_len", "=", "len", "(", "features_list", "[", "0", "]", "[", "1", ":", "]", ")", "\n", "# print(len(self.c_list[0]))", "\n", "if", "flag", "==", "0", ":", "\n", "            ", "leng", "=", "f_len", "+", "len", "(", "self", ".", "c_list", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "leng", "=", "f_len", "+", "len", "(", "self", ".", "c_list", "[", "0", "]", ")", "+", "1", "\n", "", "candidates", "=", "np", ".", "zeros", "(", "(", "num", ",", "leng", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "offset", "=", "[", "0", "]", "\n", "last", "=", "0", "\n", "for", "features", "in", "feas", ":", "\n", "            ", "t", "=", "np", ".", "zeros", "(", "leng", ")", "\n", "if", "flag", "==", "0", ":", "\n", "                ", "t", "[", "0", ":", "f_len", "]", "=", "np", ".", "array", "(", "features", "[", "1", ":", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "c_feature", "in", "self", ".", "item_candi", "[", "features", "[", "0", "]", "]", ":", "\n", "                    ", "t", "[", "f_len", ":", "]", "=", "self", ".", "c_list", "[", "c_feature", "]", "\n", "candidates", "[", "cnt", "]", "=", "t", "\n", "cnt", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "t", "[", "1", ":", "1", "+", "f_len", "]", "=", "np", ".", "array", "(", "features", "[", "1", ":", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "c_feature", "in", "self", ".", "item_candi", "[", "features", "[", "0", "]", "]", ":", "\n", "                    ", "t", "[", "0", "]", "=", "np", ".", "float32", "(", "c_feature", ")", "\n", "t", "[", "1", "+", "f_len", ":", "]", "=", "self", ".", "c_list", "[", "c_feature", "]", "\n", "candidates", "[", "cnt", "]", "=", "t", "\n", "cnt", "+=", "1", "\n", "", "", "last", "=", "last", "+", "len", "(", "self", ".", "item_candi", "[", "features", "[", "0", "]", "]", ")", "\n", "offset", ".", "append", "(", "last", ")", "\n", "", "return", "feas", ",", "offset", ",", "candidates", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Random.__init__": [[109, 113], ["policy.Base.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "Random", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "name", "=", "'Random'", "\n", "self", ".", "log_file", "=", "self", ".", "params", "[", "\"random_file\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Random.update": [[114, 117], ["policy.Base.update"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update"], ["", "def", "update", "(", "self", ",", "lines", ",", "ind", "=", "None", ")", ":", "\n", "        ", "super", "(", "Random", ",", "self", ")", ".", "update", "(", "lines", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Random.recommend_batch": [[118, 124], ["len", "res.append", "numpy.random.randint"], "methods", ["None"], ["", "def", "recommend_batch", "(", "self", ",", "features_list", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "leng", "=", "len", "(", "self", ".", "item_candi", "[", "features", "[", "0", "]", "]", ")", "\n", "res", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "leng", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Greedy.__init__": [[127, 130], ["policy.Base.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "Greedy", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "name", "=", "'Greedy'", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Greedy.update": [[131, 133], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "lines", ",", "ind", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Greedy.recommend_batch": [[134, 139], ["res.append", "item_ctr[].index", "max"], "methods", ["None"], ["", "def", "recommend_batch", "(", "self", ",", "features_list", ",", "item_ctr", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "res", ".", "append", "(", "item_ctr", "[", "features", "[", "0", "]", "]", ".", "index", "(", "max", "(", "item_ctr", "[", "features", "[", "0", "]", "]", ")", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmEGreedy.__init__": [[142, 164], ["policy.Base.__init__", "train_arch.Train_Arch", "train.Core", "policy.FmEGreedy.framework.set_dataloader"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "FmEGreedy", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "log_file", "=", "'data/log/fm_log.pkl'", "\n", "self", ".", "name", "=", "'FmEGreedy'", "\n", "self", ".", "fea_index", "=", "{", "}", "\n", "self", ".", "res", "=", "[", "]", "\n", "self", ".", "flag", "=", "0", "\n", "self", ".", "update_cnt", "=", "0", "\n", "self", ".", "greedy_flag", "=", "0", "\n", "self", ".", "epsilon", "=", "self", ".", "params", "[", "\"alpha\"", "]", "\n", "self", ".", "model_nas", "=", "self", ".", "params", "[", "\"model_nas\"", "]", "\n", "self", ".", "model_struct", "=", "self", ".", "params", "[", "\"model_struct\"", "]", "\n", "\n", "# intial model if nas model, use Train_Arch() , else use Core()", "\n", "if", "self", ".", "model_nas", "not", "in", "[", "\"fm\"", ",", "\"fm_ts\"", "]", ":", "\n", "            ", "self", ".", "framework", "=", "Train_Arch", "(", "dim", "=", "self", ".", "params", "[", "\"dim\"", "]", ",", "epoch", "=", "self", ".", "params", "[", "\"epoch\"", "]", ",", "weight_decay", "=", "self", ".", "params", "[", "\"decay\"", "]", ",", "data_size", "=", "self", ".", "params", "[", "\"data_size\"", "]", ",", "train_scale", "=", "1", ",", "valid_scale", "=", "0", ",", "device", "=", "self", ".", "params", "[", "\"device\"", "]", ",", "params", "=", "self", ".", "params", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "framework", "=", "Core", "(", "dim", "=", "self", ".", "params", "[", "\"dim\"", "]", ",", "epoch", "=", "self", ".", "params", "[", "\"epoch\"", "]", ",", "weight_decay", "=", "self", ".", "params", "[", "\"decay\"", "]", ",", "data_size", "=", "self", ".", "params", "[", "\"data_size\"", "]", ",", "train_scale", "=", "1", ",", "valid_scale", "=", "0", ",", "device", "=", "self", ".", "params", "[", "\"device\"", "]", ",", "params", "=", "self", ".", "params", ")", "\n", "\n", "# get test dateset to calculate auc", "\n", "", "if", "self", ".", "params", "[", "\"auc_record\"", "]", "==", "1", ":", "\n", "            ", "_", ",", "_", ",", "self", ".", "test_data", "=", "self", ".", "framework", ".", "set_dataloader", "(", "dataset_path", "=", "self", ".", "params", "[", "\"random_file\"", "]", ",", "data_size", "=", "100000", ",", "train_scale", "=", "0", ",", "valid_scale", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmEGreedy.update": [[166, 208], ["len", "print", "policy.Base.update", "policy.FmEGreedy.framework.set_dataloader", "policy.FmEGreedy.framework.initial_model", "policy.FmEGreedy.framework.run", "policy.FmEGreedy.framework.test", "int", "policy.Base.update", "policy.FmEGreedy.framework.set_dataloader", "policy.FmEGreedy.framework.initial_model", "policy.FmEGreedy.framework.run", "policy.FmEGreedy.framework.set_dataloader", "policy.FmEGreedy.framework.initial_model", "policy.FmEGreedy.framework.run", "[].argmax().item", "len", "len", "range", "[].argmax", "len", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.initial_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.run", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.initial_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.run", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.initial_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.run"], ["", "", "def", "update", "(", "self", ",", "lines", ",", "ind", "=", "None", ")", ":", "\n", "        ", "self", ".", "update_cnt", "+=", "len", "(", "lines", ")", "\n", "if", "self", ".", "name", "==", "\"FmTS\"", ":", "\n", "            ", "self", ".", "framework", ".", "epoch", "=", "self", ".", "framework", ".", "params", "[", "\"epoch\"", "]", "-", "int", "(", "(", "len", "(", "self", ".", "log_data", ")", "/", "len", "(", "lines", ")", ")", "*", "3.5", ")", "\n", "print", "(", "\"epoch:\"", ",", "self", ".", "framework", ".", "epoch", ")", "\n", "\n", "# update == 0, the struct of model will update frequently", "\n", "", "if", "self", ".", "params", "[", "\"update\"", "]", "==", "0", ":", "\n", "            ", "super", "(", "FmEGreedy", ",", "self", ")", ".", "update", "(", "lines", ")", "\n", "self", ".", "framework", ".", "set_dataloader", "(", "dataset", "=", "self", ".", "log_data", ",", "dataset_path", "=", "self", ".", "log_file", ")", "\n", "self", ".", "framework", ".", "initial_model", "(", "self", ".", "model_nas", ",", "self", ".", "model_struct", ",", "optimizer", "=", "self", ".", "params", "[", "\"optimizer\"", "]", ")", "\n", "self", ".", "framework", ".", "run", "(", ")", "\n", "\n", "# update == 1, the struct of model will update several batch a time", "\n", "", "elif", "self", ".", "params", "[", "\"update\"", "]", "==", "1", ":", "\n", "            ", "super", "(", "FmEGreedy", ",", "self", ")", ".", "update", "(", "lines", ")", "\n", "if", "self", ".", "update_cnt", ">", "49999", "or", "self", ".", "flag", "==", "0", ":", "\n", "                ", "self", ".", "framework", ".", "params", "[", "\"trick\"", "]", "=", "1", "\n", "self", ".", "framework", ".", "epoch", "=", "self", ".", "framework", ".", "params", "[", "\"epoch\"", "]", "\n", "self", ".", "framework", ".", "set_dataloader", "(", "dataset", "=", "self", ".", "log_data", ",", "dataset_path", "=", "self", ".", "log_file", ")", "\n", "self", ".", "framework", ".", "initial_model", "(", "self", ".", "model_nas", ",", "self", ".", "model_struct", ",", "optimizer", "=", "self", ".", "params", "[", "\"optimizer\"", "]", ")", "\n", "self", ".", "framework", ".", "run", "(", ")", "\n", "self", ".", "framework", ".", "params", "[", "\"arch\"", "]", "=", "[", "self", ".", "framework", ".", "model", ".", "_arch_parameters", "[", "'binary'", "]", "[", "i", ",", ":", "]", ".", "argmax", "(", ")", ".", "item", "(", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "framework", ".", "model", ".", "_arch_parameters", "[", "'binary'", "]", ")", ")", "]", "\n", "self", ".", "flag", ",", "self", ".", "update_cnt", "=", "1", ",", "0", "\n", "", "else", ":", "\n", "                ", "self", ".", "framework", ".", "epoch", "=", "200", "\n", "self", ".", "framework", ".", "params", "[", "\"trick\"", "]", "=", "0", "\n", "if", "self", ".", "name", "==", "\"FmTS\"", ":", "\n", "                    ", "self", ".", "framework", ".", "epoch", "=", "180", "-", "int", "(", "len", "(", "self", ".", "log_data", ")", "/", "len", "(", "lines", ")", ")", "*", "6", "\n", "", "self", ".", "framework", ".", "set_dataloader", "(", "dataset", "=", "self", ".", "log_data", ",", "dataset_path", "=", "self", ".", "log_file", ")", "\n", "self", ".", "framework", ".", "initial_model", "(", "self", ".", "model_nas", ",", "self", ".", "model_struct", ",", "optimizer", "=", "self", ".", "params", "[", "\"optimizer\"", "]", ")", "\n", "# if self.flag == 0:", "\n", "#     self.framework.params[\"arch\"] = [1 for i in range(len(self.framework.model._arch_parameters['binary']))]", "\n", "self", ".", "framework", ".", "run", "(", ")", "\n", "\n", "", "", "self", ".", "fea_index", "=", "{", "}", "\n", "self", ".", "res", "=", "[", "]", "\n", "self", ".", "cnt", "=", "0", "\n", "if", "self", ".", "params", "[", "\"auc_record\"", "]", "==", "1", ":", "\n", "            ", "return", "(", "self", ".", "framework", ".", "test", "(", "self", ".", "test_data", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmEGreedy.recommend_batch": [[209, 224], ["policy.Base.get_recommend_info", "len", "policy.FmEGreedy.framework.result", "range", "len", "numpy.argmax", "policy.FmEGreedy.res.append", "numpy.random.rand", "final.append", "len", "final.append", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.get_recommend_info", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.result"], ["", "", "def", "recommend_batch", "(", "self", ",", "features_list", ")", ":", "\n", "        ", "feas", ",", "offset", ",", "candidates", "=", "super", "(", ")", ".", "get_recommend_info", "(", "features_list", ")", "\n", "if", "len", "(", "candidates", ")", "!=", "0", ":", "\n", "            ", "rank", "=", "self", ".", "framework", ".", "result", "(", "candidates", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feas", ")", ")", ":", "\n", "                ", "k", "=", "np", ".", "argmax", "(", "rank", "[", "offset", "[", "i", "]", ":", "offset", "[", "i", "+", "1", "]", "]", ")", "\n", "self", ".", "res", ".", "append", "(", "k", ")", "\n", "", "", "final", "=", "[", "]", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "epsilon", ":", "\n", "                ", "final", ".", "append", "(", "self", ".", "res", "[", "self", ".", "fea_index", "[", "features", "[", "0", "]", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "leng", "=", "len", "(", "self", ".", "item_candi", "[", "features", "[", "0", "]", "]", ")", "\n", "final", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "leng", ")", ")", "\n", "", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmThompson.__init__": [[227, 234], ["policy.FmEGreedy.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "if", "\"_ts\"", "not", "in", "params", "[", "\"model_nas\"", "]", ":", "\n", "            ", "params", "[", "\"model_nas\"", "]", "=", "params", "[", "\"model_nas\"", "]", "+", "\"_ts\"", "\n", "", "super", "(", "FmThompson", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "log_file", "=", "'data/log/fmTS_log.pkl'", "\n", "self", ".", "name", "=", "'FmTS'", "\n", "self", ".", "epsilon", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmThompson.update": [[235, 237], ["policy.FmEGreedy.update"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update"], ["", "def", "update", "(", "self", ",", "lines", ",", "ind", "=", "None", ")", ":", "\n", "        ", "return", "super", "(", "FmThompson", ",", "self", ")", ".", "update", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmThompson.recommend_batch": [[238, 240], ["policy.FmEGreedy.recommend_batch"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.recommend_batch"], ["", "def", "recommend_batch", "(", "self", ",", "features", ")", ":", "\n", "        ", "return", "super", "(", "FmThompson", ",", "self", ")", ".", "recommend_batch", "(", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.FmGreedy.update": [[243, 257], ["policy.FmGreedy.framework.set_dataloader", "policy.FmGreedy.framework.initial_model", "policy.FmGreedy.framework.run", "policy.FmGreedy.framework.set_dataloader", "policy.FmGreedy.framework.test"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.initial_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.run", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test"], ["    ", "def", "update", "(", "self", ",", "lines", ",", "ind", ")", ":", "\n", "        ", "if", "self", ".", "greedy_flag", "==", "1", ":", "\n", "            ", "return", "0", "\n", "", "self", ".", "log_file", "=", "self", ".", "params", "[", "\"random_file\"", "]", "\n", "self", ".", "greedy_flag", "=", "1", "\n", "self", ".", "framework", ".", "set_dataloader", "(", "dataset", "=", "None", ",", "dataset_path", "=", "self", ".", "log_file", ")", "\n", "self", ".", "framework", ".", "initial_model", "(", "self", ".", "model_nas", ",", "self", ".", "model_struct", ",", "optimizer", "=", "self", ".", "params", "[", "\"optimizer\"", "]", ")", "\n", "self", ".", "framework", ".", "run", "(", ")", "\n", "\n", "_", ",", "_", ",", "self", ".", "test_data", "=", "self", ".", "framework", ".", "set_dataloader", "(", "dataset_path", "=", "self", ".", "params", "[", "\"random_file\"", "]", ",", "data_size", "=", "100000", ",", "train_scale", "=", "0", ",", "valid_scale", "=", "0", ",", "flag", "=", "1", ")", "\n", "if", "self", ".", "params", "[", "\"auc_record\"", "]", "==", "1", ":", "\n", "            ", "return", "(", "self", ".", "framework", ".", "test", "(", "self", ".", "test_data", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.LinUCB.__init__": [[260, 283], ["policy.Base.__init__", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "model.Linucb", "numpy.identity", "numpy.identity", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "LinUCB", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "log_file", "=", "'data/log/linucb_log.pkl'", "\n", "self", ".", "name", "=", "'Linucb'", "\n", "self", ".", "device", "=", "params", "[", "'device'", "]", "\n", "self", ".", "r_index", "=", "{", "}", "\n", "self", ".", "c_num", "=", "len", "(", "self", ".", "c_list", ")", "\n", "self", ".", "leng", "=", "self", ".", "t_len", "\n", "self", ".", "alpha", "=", "self", ".", "params", "[", "\"alpha\"", "]", "\n", "self", ".", "cnt", "=", "0", "\n", "self", ".", "t", "=", "0", "\n", "\n", "self", ".", "Aa", "=", "np", ".", "zeros", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ",", "self", ".", "leng", ")", ")", "\n", "self", ".", "Aa_inv", "=", "np", ".", "zeros", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ",", "self", ".", "leng", ")", ")", "\n", "self", ".", "ba", "=", "np", ".", "zeros", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ",", "1", ")", ")", "\n", "self", ".", "theta", "=", "np", ".", "zeros", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ",", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "c_num", ")", ":", "\n", "            ", "self", ".", "Aa", "[", "i", "]", "=", "np", ".", "identity", "(", "self", ".", "leng", ")", "\n", "self", ".", "Aa_inv", "[", "i", "]", "=", "np", ".", "identity", "(", "self", ".", "leng", ")", "\n", "self", ".", "ba", "[", "i", "]", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "self", ".", "theta", "[", "i", "]", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "\n", "", "self", ".", "model", "=", "Linucb", "(", "self", ".", "leng", ",", "self", ".", "c_num", ",", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.LinUCB.update": [[284, 310], ["numpy.zeros", "range", "enumerate", "numpy.array().reshape", "numpy.outer", "policy.LinUCB.model.named_parameters", "policy.LinUCB.Aa_inv[].dot", "torch.from_numpy().to", "torch.from_numpy().to", "numpy.array", "numpy.matmul", "policy.LinUCB.Aa_inv[].dot", "numpy.array().reshape.T.dot", "numpy.matmul", "torch.from_numpy", "torch.from_numpy", "str", "policy.LinUCB.Aa_inv[].dot", "policy.LinUCB.theta.reshape().astype", "policy.LinUCB.Aa_inv.astype", "float", "policy.LinUCB.theta.reshape"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "lines", ",", "ind", "=", "None", ")", ":", "\n", "# super(LinUCB, self).update(lines)", "\n", "        ", "used", "=", "np", ".", "zeros", "(", "self", ".", "c_num", ")", "\n", "# print(self.c_index)", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "curr", "=", "self", ".", "c_index", "[", "','", ".", "join", "(", "str", "(", "float", "(", "x", ")", ")", "for", "x", "in", "line", "[", "-", "1", "-", "self", ".", "c_len", ":", "-", "1", "]", ")", "]", "\n", "used", "[", "curr", "]", "=", "1", "\n", "x", "=", "np", ".", "array", "(", "line", "[", "0", ":", "-", "1", "]", ")", ".", "reshape", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "# print(x)", "\n", "reward", "=", "line", "[", "-", "1", "]", "\n", "t", "=", "np", ".", "outer", "(", "x", ",", "x", ")", "\n", "self", ".", "Aa", "[", "curr", "]", "+=", "t", "\n", "self", ".", "ba", "[", "curr", "]", "+=", "reward", "*", "x", "\n", "self", ".", "Aa_inv", "[", "curr", "]", "=", "self", ".", "Aa_inv", "[", "curr", "]", "-", "np", ".", "matmul", "(", "self", ".", "Aa_inv", "[", "curr", "]", ".", "dot", "(", "x", ")", ",", "x", ".", "T", ".", "dot", "(", "self", ".", "Aa_inv", "[", "curr", "]", ")", ")", "/", "(", "1", "+", "np", ".", "matmul", "(", "x", ".", "T", ",", "self", ".", "Aa_inv", "[", "curr", "]", ".", "dot", "(", "x", ")", ")", ")", "\n", "", "for", "curr", "in", "range", "(", "self", ".", "c_num", ")", ":", "\n", "            ", "if", "used", "[", "curr", "]", "==", "1", ":", "\n", "# self.Aa_inv[curr] = np.linalg.inv(self.Aa[curr])", "\n", "                ", "self", ".", "theta", "[", "curr", "]", "=", "self", ".", "Aa_inv", "[", "curr", "]", ".", "dot", "(", "self", ".", "ba", "[", "curr", "]", ")", "\n", "", "", "for", "i", ",", "(", "_", ",", "param", ")", "in", "enumerate", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "param", ".", "data", "=", "torch", ".", "from_numpy", "(", "self", ".", "theta", ".", "reshape", "(", "self", ".", "c_num", ",", "self", ".", "leng", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "                ", "param", ".", "data", "=", "torch", ".", "from_numpy", "(", "self", ".", "Aa_inv", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "", "self", ".", "r_index", "=", "{", "}", "\n", "self", ".", "fea_index", "=", "{", "}", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.LinUCB.recommend_batch": [[311, 322], ["policy.Base.get_recommend_info", "policy.LinUCB.model", "rank.detach().cpu().numpy().reshape.detach().cpu().numpy().reshape.detach().cpu().numpy().reshape", "range", "torch.from_numpy().to", "len", "len", "numpy.argmax", "final.append", "rank.detach().cpu().numpy().reshape.detach().cpu().numpy().reshape.detach().cpu().numpy", "torch.from_numpy", "rank.detach().cpu().numpy().reshape.detach().cpu().numpy().reshape.detach().cpu", "rank.detach().cpu().numpy().reshape.detach().cpu().numpy().reshape.detach"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.get_recommend_info"], ["", "def", "recommend_batch", "(", "self", ",", "features_list", ")", ":", "\n", "        ", "feas", ",", "offset", ",", "candidates", "=", "super", "(", ")", ".", "get_recommend_info", "(", "features_list", ",", "1", ")", "\n", "rank", "=", "self", ".", "model", "(", "torch", ".", "from_numpy", "(", "candidates", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "rank", "=", "rank", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "len", "(", "rank", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feas", ")", ")", ":", "\n", "            ", "k", "=", "np", ".", "argmax", "(", "rank", "[", "offset", "[", "i", "]", ":", "offset", "[", "i", "+", "1", "]", "]", ")", "\n", "self", ".", "r_index", "[", "feas", "[", "i", "]", "[", "0", "]", "]", "=", "k", "\n", "", "final", "=", "[", "]", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "final", ".", "append", "(", "self", ".", "r_index", "[", "features", "[", "0", "]", "]", ")", "\n", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.__init__": [[325, 332], ["policy.LinUCB.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "TS", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "log_file", "=", "'data/log/ts_log.pkl'", "\n", "self", ".", "name", "=", "'ts'", "\n", "self", ".", "mean", "=", "None", "\n", "self", ".", "std", "=", "None", "\n", "self", ".", "alpha", "=", "self", ".", "params", "[", "\"alpha\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.update": [[333, 349], ["torch.from_numpy().reshape", "numpy.array", "torch.from_numpy", "numpy.array().reshape", "numpy.outer", "policy.TS.Aa_inv[].dot", "numpy.array.reshape", "torch.from_numpy", "numpy.diag", "numpy.array", "numpy.matmul", "policy.TS.Aa_inv[].dot", "numpy.array().reshape.T.dot", "numpy.array().reshape.T.dot().dot", "str", "float", "numpy.array().reshape.T.dot"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "lines", ",", "ind", "=", "None", ")", ":", "\n", "        ", "for", "line", "in", "lines", ":", "\n", "            ", "curr", "=", "self", ".", "c_index", "[", "','", ".", "join", "(", "str", "(", "float", "(", "x", ")", ")", "for", "x", "in", "line", "[", "-", "1", "-", "self", ".", "c_len", ":", "-", "1", "]", ")", "]", "\n", "x", "=", "np", ".", "array", "(", "line", "[", "0", ":", "-", "1", "]", ")", ".", "reshape", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "reward", "=", "line", "[", "-", "1", "]", "\n", "t", "=", "np", ".", "outer", "(", "x", ",", "x", ")", "\n", "self", ".", "Aa", "[", "curr", "]", "+=", "t", "\n", "self", ".", "ba", "[", "curr", "]", "+=", "reward", "*", "x", "\n", "self", ".", "Aa_inv", "[", "curr", "]", "=", "self", ".", "Aa_inv", "[", "curr", "]", "-", "np", ".", "matmul", "(", "self", ".", "Aa_inv", "[", "curr", "]", ".", "dot", "(", "x", ")", ",", "x", ".", "T", ".", "dot", "(", "self", ".", "Aa_inv", "[", "curr", "]", ")", ")", "/", "(", "1", "+", "x", ".", "T", ".", "dot", "(", "self", ".", "Aa_inv", "[", "curr", "]", ")", ".", "dot", "(", "x", ")", ")", "\n", "t", "=", "self", ".", "Aa_inv", "[", "curr", "]", ".", "dot", "(", "self", ".", "ba", "[", "curr", "]", ")", "\n", "self", ".", "theta", "[", "curr", "]", "=", "t", "\n", "", "self", ".", "r_index", "=", "{", "}", "\n", "self", ".", "fea_index", "=", "{", "}", "\n", "self", ".", "mean", "=", "torch", ".", "from_numpy", "(", "self", ".", "theta", ")", ".", "reshape", "(", "self", ".", "c_num", ",", "self", ".", "leng", ")", "\n", "temp", "=", "np", ".", "array", "(", "[", "np", ".", "diag", "(", "a", ")", "for", "a", "in", "self", ".", "Aa_inv", "]", ")", "\n", "self", ".", "std", "=", "torch", ".", "from_numpy", "(", "temp", ".", "reshape", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.TS.recommend_batch": [[350, 365], ["torch.normal().numpy().reshape", "policy.Base.get_recommend_info", "range", "len", "len", "numpy.zeros", "range", "numpy.argmax", "final.append", "torch.normal().numpy", "theta[].T.dot", "torch.normal"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.Base.get_recommend_info"], ["", "def", "recommend_batch", "(", "self", ",", "features_list", ")", ":", "\n", "        ", "theta", "=", "torch", ".", "normal", "(", "self", ".", "mean", ",", "self", ".", "alpha", "*", "self", ".", "std", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "(", "self", ".", "c_num", ",", "self", ".", "leng", ")", ")", "\n", "feas", ",", "offset", ",", "candidates", "=", "super", "(", ")", ".", "get_recommend_info", "(", "features_list", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feas", ")", ")", ":", "\n", "            ", "ind", "=", "feas", "[", "i", "]", "[", "0", "]", "\n", "c_num", "=", "len", "(", "self", ".", "item_candi", "[", "ind", "]", ")", "\n", "res", "=", "np", ".", "zeros", "(", "c_num", ")", "\n", "for", "j", "in", "range", "(", "c_num", ")", ":", "\n", "                ", "res", "[", "j", "]", "=", "theta", "[", "self", ".", "item_candi", "[", "ind", "]", "[", "j", "]", "]", ".", "T", ".", "dot", "(", "candidates", "[", "offset", "[", "i", "]", "+", "j", "]", ")", "\n", "", "k", "=", "np", ".", "argmax", "(", "res", ")", "\n", "self", ".", "r_index", "[", "ind", "]", "=", "k", "\n", "", "final", "=", "[", "]", "\n", "for", "features", "in", "features_list", ":", "\n", "            ", "final", ".", "append", "(", "self", ".", "r_index", "[", "features", "[", "0", "]", "]", ")", "\n", "", "return", "final", "", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.policy.get_creative": [[14, 24], ["numpy.array", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load"], "function", ["None"], ["def", "get_creative", "(", "params", ")", ":", "\n", "    ", "\"return global creative list, and item-creatives dict\"", "\n", "with", "open", "(", "params", "[", "'creative_list'", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "c_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "c_list", "=", "np", ".", "array", "(", "c_list", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "with", "open", "(", "params", "[", "'item_candidates'", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "item_candi", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "params", "[", "\"feature_list\"", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "f_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return", "f_list", ",", "c_list", ",", "item_candi", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.__init__": [[26, 55], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "print", "open", "pickle.load", "range"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", "=", "20", ",", "\n", "weight_decay", "=", "0.001", ",", "\n", "data_size", "=", "-", "1", ",", "\n", "epoch", "=", "30", ",", "\n", "train_scale", "=", "0.4", ",", "\n", "valid_scale", "=", "0.4", ",", "\n", "learning_rate", "=", "0.001", ",", "\n", "batch_size", "=", "1024", ",", "\n", "device", "=", "'cuda'", ",", "\n", "params", "=", "None", ")", ":", "\n", "        ", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "model_nas", "=", "None", "\n", "self", ".", "data_size", "=", "data_size", "\n", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "valid_scale", "=", "valid_scale", "\n", "with", "open", "(", "params", "[", "'feature_size'", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "feature_size", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "print", "(", "self", ".", "feature_size", ")", "\n", "self", ".", "clock", "=", "[", "0", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "self", ".", "run_first", "=", "0", "\n", "self", ".", "last_arch", "=", "None", "\n", "self", ".", "model_path", "=", "self", ".", "params", "[", "\"model_path\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.set_dataloader": [[56, 79], ["int", "int", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_arch.get_dataset", "train_arch.get_dataset", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.get_dataset", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.get_dataset"], ["", "def", "set_dataloader", "(", "self", ",", "dataset", "=", "None", ",", "dataset_path", "=", "None", ",", "data_size", "=", "-", "1", ",", "train_scale", "=", "-", "1", ",", "valid_scale", "=", "-", "1", ",", "flag", "=", "0", ")", ":", "\n", "        ", "if", "train_scale", "==", "-", "1", ":", "\n", "            ", "data_size", "=", "self", ".", "data_size", "\n", "train_scale", "=", "self", ".", "train_scale", "\n", "valid_scale", "=", "self", ".", "valid_scale", "\n", "", "self", ".", "log_data", "=", "dataset", "\n", "self", ".", "data_path", "=", "dataset_path", "\n", "if", "dataset", "==", "None", ":", "\n", "            ", "self", ".", "dataset", "=", "get_dataset", "(", "dataset_path", ",", "'embedded'", ",", "data_size", ",", "flag", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "get_dataset", "(", "dataset", ",", "'direct'", ")", "\n", "", "train_length", "=", "int", "(", "len", "(", "self", ".", "dataset", ")", "*", "train_scale", ")", "\n", "valid_length", "=", "int", "(", "len", "(", "self", ".", "dataset", ")", "*", "valid_scale", ")", "\n", "test_length", "=", "len", "(", "self", ".", "dataset", ")", "-", "train_length", "-", "valid_length", "\n", "train_dataset", ",", "temp_dataset", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "self", ".", "dataset", ",", "(", "train_length", ",", "len", "(", "self", ".", "dataset", ")", "-", "train_length", ")", ")", "\n", "valid_dataset", ",", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "temp_dataset", ",", "(", "valid_length", ",", "test_length", ")", ")", "\n", "self", ".", "train_data_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "# valid_size = int(len(valid_dataset)/len(train_data_loader))+1", "\n", "self", ".", "valid_data_loader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "self", ".", "test_data_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "return", "self", ".", "train_data_loader", ",", "self", ".", "valid_data_loader", ",", "self", ".", "test_data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.get_model": [[80, 100], ["print", "exit", "model.NAS", "model.SNAS", "model.DSNAS", "model.NAS_TS", "model.SNAS_TS", "model.DSNAS_TS", "print", "exit"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "get_model", "(", "self", ",", "model_nas", ",", "model_struct", ")", ":", "\n", "        ", "if", "model_struct", "not", "in", "[", "0", ",", "1", ",", "2", ",", "3", "]", ":", "\n", "            ", "print", "(", "\"no model struct %s in model nas %s class!!!\"", ",", "model_struct", ",", "model_nas", ")", "\n", "exit", "(", ")", "\n", "\n", "", "if", "model_nas", "==", "\"nas\"", ":", "\n", "            ", "return", "NAS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "elif", "model_nas", "==", "\"snas\"", ":", "\n", "            ", "return", "SNAS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "elif", "model_nas", "==", "\"dsnas\"", ":", "\n", "            ", "return", "DSNAS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "elif", "model_nas", "==", "\"nas_ts\"", ":", "\n", "            ", "return", "NAS_TS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "elif", "model_nas", "==", "\"snas_ts\"", ":", "\n", "            ", "return", "SNAS_TS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "elif", "model_nas", "==", "\"dsnas_ts\"", ":", "\n", "            ", "return", "DSNAS_TS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"no model named %s in nas train class!!!\"", ",", "model_nas", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.initial_model": [[101, 117], ["train_arch.Train_Arch.get_model().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "train_arch.Train_Arch.get_model", "train_arch.Train_Arch.model.parameters", "train_arch.Train_Arch.model.arch_parameters"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.get_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.arch_parameters"], ["", "", "def", "initial_model", "(", "self", ",", "model_nas", ",", "model_struct", ",", "optimizer", "=", "'adam'", ")", ":", "\n", "        ", "self", ".", "model_nas", "=", "model_nas", "\n", "self", ".", "model", "=", "self", ".", "get_model", "(", "model_nas", ",", "model_struct", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "# print(1)", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "self", ".", "learning_rate", ",", "\n", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "# self.optimizer = torch.optim.Adagrad(params=self.model.parameters(),lr=self.learning_rate, weight_decay=self.weight_decay)", "\n", "self", ".", "arch_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "self", ".", "model", ".", "arch_parameters", "(", ")", ",", "\n", "lr", "=", "self", ".", "learning_rate", ",", "\n", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "if", "self", ".", "params", "[", "\"simulate_type\"", "]", "==", "\"click\"", ":", "\n", "            ", "self", ".", "criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "#reduction=\"sum\"", "\n", "", "else", ":", "\n", "# self.criterion = torch.nn.MSELoss()", "\n", "            ", "self", ".", "criterion", "=", "F", ".", "binary_cross_entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.train_arch": [[118, 191], ["train_arch.Train_Arch.model.train", "utils.DataPrefetcher", "time.time", "time.time", "print", "print", "numpy.mean", "time.time", "utils.DataPrefetcher.next", "time.time", "print", "numpy.mean", "range", "numpy.exp", "time.time", "fields.to", "target.to", "losses.append", "train_arch.Train_Arch.optimizer.zero_grad", "train_arch.Train_Arch.arch_optimizer.zero_grad", "train_arch.Train_Arch.backward", "train_arch.Train_Arch.model.recover", "train_arch.Train_Arch.optimizer.step", "losses.append", "round", "range", "train_arch.Train_Arch.model.step_ts", "train_arch.Train_Arch.model.step", "train_arch.Train_Arch.cpu().detach().item", "train_arch.Train_Arch.model.binarize", "train_arch.Train_Arch.model", "train_arch.Train_Arch.criterion", "train_arch.Train_Arch.cpu().detach().item", "total_y[].item", "len", "total_y[].item", "len", "target.float", "train_arch.Train_Arch.model.binarize", "train_arch.Train_Arch.model.binarize", "train_arch.Train_Arch.criterion", "train_arch.Train_Arch.cpu().detach", "train_arch.Train_Arch.model.forward_ts", "train_arch.Train_Arch.criterion", "len", "train_arch.Train_Arch.model", "target.float", "train_arch.Train_Arch.cpu().detach", "train_arch.Train_Arch.model.forward_ts", "target.float", "train_arch.Train_Arch.model", "train_arch.Train_Arch.cpu", "train_arch.Train_Arch.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.next", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS_TS.step_ts", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts"], ["", "", "def", "train_arch", "(", "self", ",", "train_type", "=", "0", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "prefetcher", "=", "DataPrefetcher", "(", "self", ".", "train_data_loader", ",", "self", ".", "device", ")", "\n", "total_y", "=", "[", "0", ",", "0", "]", "\n", "clock", "=", "[", "0", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "clock", "[", "0", "]", "-=", "time", ".", "time", "(", ")", "\n", "step", "=", "0", "\n", "while", "1", ":", "\n", "            ", "t", "=", "1", "\n", "clock", "[", "1", "]", "-=", "time", ".", "time", "(", ")", "\n", "train_data", "=", "prefetcher", ".", "next", "(", ")", "\n", "temperature", "=", "2.5", "*", "np", ".", "exp", "(", "-", "0.036", "*", "step", ")", "\n", "if", "train_data", "==", "None", ":", "\n", "                ", "clock", "[", "1", "]", "+=", "time", ".", "time", "(", ")", "\n", "break", "\n", "", "(", "fields", ",", "target", ")", "=", "train_data", "\n", "fields", ",", "target", "=", "fields", ".", "to", "(", "self", ".", "device", ")", ",", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "clock", "[", "1", "]", "+=", "time", ".", "time", "(", ")", "\n", "if", "train_type", "==", "0", ":", "\n", "                ", "if", "\"dsnas\"", "in", "self", ".", "model_nas", ":", "\n", "                    ", "others", "=", "self", ".", "optimizer", "\n", "", "elif", "\"snas\"", "in", "self", ".", "model_nas", ":", "\n", "                    ", "others", "=", "temperature", "\n", "", "else", ":", "\n", "                    ", "others", "=", "0", "\n", "", "if", "\"_ts\"", "in", "self", ".", "model_nas", ":", "\n", "                    ", "loss", "=", "self", ".", "model", ".", "step_ts", "(", "fields", ",", "target", ",", "self", ".", "criterion", ",", "self", ".", "arch_optimizer", ",", "others", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "self", ".", "model", ".", "step", "(", "fields", ",", "target", ",", "self", ".", "criterion", ",", "self", ".", "arch_optimizer", ",", "others", ")", "\n", "", "losses", ".", "append", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "model_nas", "==", "\"snas\"", ":", "\n", "                    ", "self", ".", "model", ".", "binarize", "(", "temperature", ")", "\n", "y", "=", "self", ".", "model", "(", "fields", ",", "1", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "y", ",", "target", ".", "float", "(", ")", ")", "\n", "", "elif", "\"_ts\"", "in", "self", ".", "model_nas", ":", "\n", "                    ", "self", ".", "model", ".", "binarize", "(", ")", "\n", "if", "train_type", "==", "1", ":", "\n", "                        ", "k", ",", "y", "=", "self", ".", "model", ".", "forward_ts", "(", "fields", ",", "1", ")", "\n", "", "elif", "train_type", "==", "2", ":", "\n", "                        ", "k", ",", "y", "=", "self", ".", "model", ".", "forward_ts", "(", "fields", ",", "0", ")", "\n", "# loss_t =  F.binary_cross_entropy(input=y,target=target,reduction='sum')", "\n", "", "loss_t", "=", "self", ".", "criterion", "(", "y", ",", "target", ".", "float", "(", ")", ")", "*", "self", ".", "batch_size", "\n", "alpha", "=", "1", "/", "len", "(", "self", ".", "train_data_loader", ")", "\n", "loss", "=", "alpha", "*", "k", "+", "loss_t", "\n", "total_y", "[", "0", "]", "+=", "k", "\n", "total_y", "[", "1", "]", "+=", "loss_t", "\n", "", "else", ":", "\n", "                    ", "self", ".", "model", ".", "binarize", "(", ")", "\n", "if", "train_type", "==", "1", ":", "\n", "                        ", "y", "=", "self", ".", "model", "(", "fields", ",", "1", ")", "\n", "", "elif", "train_type", "==", "2", ":", "\n", "                        ", "y", "=", "self", ".", "model", "(", "fields", ",", "0", ")", "\n", "", "loss", "=", "self", ".", "criterion", "(", "y", ",", "target", ".", "float", "(", ")", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "self", ".", "model", ".", "recover", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "losses", ".", "append", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "", "clock", "[", "0", "]", "+=", "time", ".", "time", "(", ")", "\n", "print", "(", "'cost:'", ",", "[", "round", "(", "c", ",", "5", ")", "for", "c", "in", "clock", "[", "0", ":", "7", "]", "]", ")", "\n", "# print(\"model cost:\", [round(c, 5) for c in self.model.cost])", "\n", "self", ".", "model", ".", "cost", "=", "[", "0", "for", "_", "in", "range", "(", "6", ")", "]", "\n", "# g, gp = self.model.genotype()", "\n", "# print('genotype: %s' % g)", "\n", "# print('genotype_p: %s' % gp)", "\n", "if", "\"nas_ts\"", "in", "self", ".", "model_nas", ":", "\n", "            ", "print", "(", "'kl distance '", ",", "total_y", "[", "0", "]", ".", "item", "(", ")", "/", "len", "(", "self", ".", "train_data_loader", ")", ",", "'bce loss '", ",", "total_y", "[", "1", "]", ".", "item", "(", ")", "/", "len", "(", "self", ".", "train_data_loader", ")", ")", "\n", "", "print", "(", "'---- loss:'", ",", "np", ".", "mean", "(", "losses", ")", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.run": [[192, 239], ["print", "range", "train_arch.Train_Arch.model.genotype", "range", "train_arch.Train_Arch.load_model", "len", "print", "train_arch.Train_Arch.train_arch", "len", "train_arch.Train_Arch.test", "range", "range", "train_arch.Train_Arch.load_model", "len", "train_arch.Train_Arch.test", "train_arch.Train_Arch.save_model", "print", "train_arch.Train_Arch.train_arch", "train_arch.Train_Arch.model.genotype", "train_arch.Train_Arch.train_arch", "print", "train_arch.Train_Arch.train_arch", "len", "train_arch.Train_Arch.test", "train_arch.Train_Arch.save_model"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.load_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.train_arch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.load_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.save_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.train_arch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.train_arch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.train_arch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.save_model"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"run!!!!!!\"", ")", "\n", "if", "self", ".", "params", "[", "\"trick\"", "]", "==", "0", ":", "\n", "            ", "arch", "=", "self", ".", "params", "[", "\"arch\"", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "model", ".", "_arch_parameters", "[", "\"binary\"", "]", ")", ")", ":", "\n", "                ", "self", ".", "model", ".", "_arch_parameters", "[", "\"binary\"", "]", ".", "data", "[", "j", ",", "arch", "[", "j", "]", "]", "=", "1", "\n", "", "best_loss", "=", "1000000", "\n", "stop_cnt", "=", "0", "\n", "self", ".", "model", ".", "genotype", "(", ")", "\n", "for", "epoch_i", "in", "range", "(", "self", ".", "epoch", ")", ":", "\n", "                ", "print", "(", "epoch_i", ",", "end", "=", "' '", ")", "\n", "loss", "=", "self", ".", "train_arch", "(", "train_type", "=", "2", ")", "\n", "if", "len", "(", "self", ".", "test_data_loader", ")", ">", "10", ":", "\n", "                    ", "self", ".", "test", "(", "self", ".", "test_data_loader", ")", "\n", "", "if", "best_loss", "-", "0.000001", "<", "loss", ":", "\n", "                    ", "stop_cnt", "+=", "1", "\n", "if", "stop_cnt", ">", "6", ":", "\n", "                        ", "break", "\n", "", "", "else", ":", "\n", "                    ", "best_loss", "=", "loss", "\n", "self", ".", "save_model", "(", "self", ".", "model_path", ")", "\n", "stop_cnt", "=", "0", "\n", "", "", "self", ".", "load_model", "(", "self", ".", "model_path", ")", "\n", "if", "len", "(", "self", ".", "test_data_loader", ")", ">", "10", ":", "\n", "                ", "self", ".", "test", "(", "self", ".", "test_data_loader", ")", "\n", "", "", "elif", "self", ".", "params", "[", "\"trick\"", "]", "==", "1", ":", "\n", "            ", "for", "epoch_i", "in", "range", "(", "self", ".", "epoch", ")", ":", "\n", "                ", "print", "(", "epoch_i", ",", "end", "=", "' '", ")", "\n", "self", ".", "train_arch", "(", ")", "\n", "self", ".", "model", ".", "genotype", "(", ")", "\n", "self", ".", "train_arch", "(", "train_type", "=", "2", ")", "\n", "if", "len", "(", "self", ".", "test_data_loader", ")", ">", "10", ":", "\n", "                    ", "self", ".", "test", "(", "self", ".", "test_data_loader", ")", "\n", "", "", "best_loss", "=", "1000000", "\n", "stop_cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ")", ":", "\n", "                ", "print", "(", "i", ",", "end", "=", "' '", ")", "\n", "loss", "=", "self", ".", "train_arch", "(", "train_type", "=", "2", ")", "\n", "if", "best_loss", "-", "0.000001", "<", "loss", ":", "\n", "                    ", "stop_cnt", "+=", "1", "\n", "if", "stop_cnt", ">", "6", ":", "\n", "                        ", "break", "\n", "", "", "else", ":", "\n", "                    ", "best_loss", "=", "loss", "\n", "self", ".", "save_model", "(", "self", ".", "model_path", ")", "\n", "stop_cnt", "=", "0", "\n", "", "", "self", ".", "load_model", "(", "self", ".", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.test": [[241, 259], ["train_arch.Train_Arch.model.eval", "train_arch.Train_Arch.model.binarize", "train_arch.Train_Arch.model.recover", "sklearn.metrics.roc_auc_score", "print", "list", "list", "list", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "train_arch.Train_Arch.model", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "targets.extend", "predicts.extend", "fields.to", "target.to", "target.tolist", "train_arch.Train_Arch.tolist"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "", "def", "test", "(", "self", ",", "data_loader", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "model", ".", "binarize", "(", ")", "\n", "targets", ",", "predicts", ",", "id_list", "=", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", "\n", "loss", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "fields", ",", "target", "in", "data_loader", ":", "\n", "                ", "fields", ",", "target", "=", "fields", ".", "to", "(", "self", ".", "device", ")", ",", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "y", "=", "self", ".", "model", "(", "fields", ",", "0", ")", "\n", "loss", "+=", "F", ".", "binary_cross_entropy", "(", "input", "=", "y", ",", "target", "=", "target", ",", "reduction", "=", "'mean'", ")", "\n", "targets", ".", "extend", "(", "target", ".", "tolist", "(", ")", ")", "\n", "predicts", ".", "extend", "(", "y", ".", "tolist", "(", ")", ")", "\n", "", "", "self", ".", "model", ".", "recover", "(", ")", "\n", "auc", "=", "roc_auc_score", "(", "targets", ",", "predicts", ")", "\n", "# print(\"loss: \", loss.item()/len(data_loader))", "\n", "print", "(", "\"auc: \"", ",", "auc", ")", "#, \"  g_auc:\", cal_group_auc(targets, predicts, id_list)", "\n", "# print(\"bce:\",  torch.nn.functional.binary_cross_entropy(input=predicts,target=target,reduction='mean'))", "\n", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.result": [[260, 270], ["train_arch.Train_Arch.model.eval", "train_arch.Train_Arch.model.binarize", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "train_arch.Train_Arch.model.recover", "train_arch.Train_Arch.detach().cpu().numpy", "train_arch.Train_Arch.model.forward_ts", "train_arch.Train_Arch.model", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "train_arch.Train_Arch.detach().cpu", "train_arch.Train_Arch.detach"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts"], ["", "def", "result", "(", "self", ",", "candidates", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "model", ".", "binarize", "(", ")", "\n", "candidates", "=", "torch", ".", "from_numpy", "(", "candidates", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "\"_ts\"", "in", "self", ".", "model_nas", ":", "\n", "            ", "_", ",", "ranking", "=", "self", ".", "model", ".", "forward_ts", "(", "candidates", ",", "0", ",", "cal_kl", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "ranking", "=", "self", ".", "model", "(", "candidates", ",", "0", ")", "\n", "", "self", ".", "model", ".", "recover", "(", ")", "\n", "return", "ranking", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.save_model": [[271, 273], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "model", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.load_model": [[274, 277], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "model_nas", "=", "self", ".", "params", "[", "\"model_nas\"", "]", "\n", "self", ".", "model", "=", "torch", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.Train_Arch.print_w": [[278, 280], ["train_arch.Train_Arch.model.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "print_w", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train_arch.get_dataset": [[17, 24], ["ctr.TfsDataset", "ctr.DirectDataset", "ctr.DenseDataset"], "function", ["None"], ["def", "get_dataset", "(", "path", ",", "name", ",", "num", "=", "-", "1", ",", "flag", "=", "0", ")", ":", "\n", "    ", "if", "name", "==", "'tfs'", ":", "\n", "        ", "return", "TfsDataset", "(", "path", ",", "num", ")", "\n", "", "if", "name", "==", "'direct'", ":", "\n", "        ", "return", "DirectDataset", "(", "path", ")", "\n", "", "if", "name", "==", "'embedded'", ":", "\n", "        ", "return", "DenseDataset", "(", "path", ",", "num", ",", "flag", "=", "flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DirectDataset.__init__": [[39, 45], ["numpy.array", "print", "dataset[].astype", "len", "dataset[].astype", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["    ", "def", "__init__", "(", "self", ",", "dataset_r", ")", ":", "\n", "        ", "dataset", "=", "np", ".", "array", "(", "dataset_r", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "self", ".", "items", "=", "dataset", "[", ":", ",", "0", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "n", "=", "len", "(", "self", ".", "items", "[", "0", "]", ")", "\n", "self", ".", "targets", "=", "dataset", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DirectDataset.__len__": [[46, 48], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "targets", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DirectDataset.__getitem__": [[49, 51], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "items", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.TfsDataset.__init__": [[54, 67], ["pandas.read_pickle", "pandas.read_pickle.to_numpy", "data[].astype", "numpy.shape", "print", "print", "ctr.TfsDataset.__preprocess_target().astype", "numpy.array", "numpy.array", "ctr.TfsDataset.__preprocess_target", "data[].astype"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.TfsDataset.__preprocess_target"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "df", "=", "pd", ".", "read_pickle", "(", "dataset_path", ")", "\n", "data", "=", "df", ".", "to_numpy", "(", ")", "\n", "self", ".", "items", "=", "data", "[", ":", "num", ",", "0", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "(", "a", ",", "b", ")", "=", "np", ".", "shape", "(", "self", ".", "items", ")", "\n", "print", "(", "a", ",", "b", ")", "\n", "self", ".", "n", "=", "b", "\n", "print", "(", "data", "[", ":", ",", "-", "1", "]", ")", "\n", "self", ".", "targets", "=", "self", ".", "__preprocess_target", "(", "data", "[", ":", "num", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# self.field_dims = np.max(self.items, axis50=0) + 1", "\n", "# self.field_dims = np.array([2]*b)", "\n", "self", ".", "user_field_idx", "=", "np", ".", "array", "(", "(", "0", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "item_field_idx", "=", "np", ".", "array", "(", "(", "1", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.TfsDataset.__len__": [[68, 70], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "targets", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.TfsDataset.__getitem__": [[71, 73], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "items", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.TfsDataset.__preprocess_target": [[74, 78], ["None"], "methods", ["None"], ["", "def", "__preprocess_target", "(", "self", ",", "target", ")", ":", "\n", "        ", "target", "[", "target", "<=", "0", "]", "=", "0", "\n", "target", "[", "target", ">", "0", "]", "=", "1", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DenseDataset.__init__": [[81, 95], ["print", "pandas.read_pickle", "pandas.read_pickle.to_numpy", "numpy.shape", "print", "print", "data[].astype", "data[].astype", "data[].astype", "data[].astype"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "num", "=", "-", "1", ",", "dense", "=", "[", "10", ",", "6", ",", "0", "]", ",", "flag", "=", "0", ")", ":", "\n", "        ", "print", "(", "dataset_path", ")", "\n", "df", "=", "pd", ".", "read_pickle", "(", "dataset_path", ")", "\n", "data", "=", "df", ".", "to_numpy", "(", ")", "\n", "# np.random.shuffle(data)", "\n", "if", "flag", "==", "0", ":", "\n", "            ", "self", ".", "items", "=", "data", "[", ":", "num", ",", "0", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "targets", "=", "data", "[", ":", "num", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "items", "=", "data", "[", "-", "1", "-", "num", ":", "-", "1", ",", "0", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "targets", "=", "data", "[", "-", "1", "-", "num", ":", "-", "1", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "(", "a", ",", "b", ")", "=", "np", ".", "shape", "(", "self", ".", "items", ")", "\n", "print", "(", "a", ",", "b", ")", "\n", "print", "(", "data", "[", ":", ",", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DenseDataset.__len__": [[107, 109], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "targets", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.DenseDataset.__getitem__": [[110, 112], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "items", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.get_index": [[9, 25], ["range", "len", "emb_index.append", "len", "dict", "dataset[].value_counts"], "function", ["None"], ["def", "get_index", "(", "dataset", ",", "dense_list", "=", "None", ")", ":", "\n", "    ", "emb_index", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "dim", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "dataset", ")", ")", ":", "\n", "        ", "emb_index", ".", "append", "(", "dict", "(", ")", ")", "\n", "if", "i", "in", "dense_list", ":", "\n", "            ", "dim", "+=", "1", "\n", "continue", "\n", "", "ind", "=", "dataset", "[", "i", "]", ".", "value_counts", "(", ")", ".", "index", "\n", "size", "=", "len", "(", "ind", ")", "\n", "for", "key", "in", "ind", ":", "\n", "            ", "emb_index", "[", "i", "]", "[", "key", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "dim", "+=", "1", "\n", "", "", "return", "emb_index", ",", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.ctr.get_field_info": [[26, 37], ["range", "print", "len", "feature_size.append", "feature_size.append", "dataset[].value_counts"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "get_field_info", "(", "dataset", ",", "dense", "=", "[", "0", ",", "0", "]", ")", ":", "\n", "    ", "feature_size", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "dense", "[", "1", "]", "+", "dense", "[", "0", "]", ")", ":", "\n", "        ", "if", "i", "<", "dense", "[", "0", "]", ":", "\n", "            ", "feature_size", ".", "append", "(", "1", ")", "\n", "continue", "\n", "", "ind", "=", "dataset", "[", "i", "]", ".", "value_counts", "(", ")", ".", "index", "\n", "print", "(", "ind", ")", "\n", "size", "=", "len", "(", "ind", ")", "\n", "feature_size", ".", "append", "(", "size", ")", "\n", "", "return", "feature_size", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.__init__": [[28, 53], ["torch.device", "torch.device", "torch.device", "torch.device", "open", "pickle.load", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", "=", "20", ",", "\n", "weight_decay", "=", "0.001", ",", "\n", "data_size", "=", "-", "1", ",", "\n", "epoch", "=", "30", ",", "\n", "train_scale", "=", "0.4", ",", "\n", "valid_scale", "=", "0.4", ",", "\n", "learning_rate", "=", "0.001", ",", "\n", "batch_size", "=", "1024", ",", "\n", "device", "=", "'cuda'", ",", "\n", "params", "=", "None", ")", ":", "\n", "        ", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "model_nas", "=", "None", "\n", "self", ".", "data_size", "=", "data_size", "\n", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "valid_scale", "=", "valid_scale", "\n", "with", "open", "(", "params", "[", "'feature_size'", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "feature_size", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "self", ".", "clock", "=", "[", "0", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.set_dataloader": [[54, 78], ["int", "int", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train.get_dataset", "train.get_dataset", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.get_dataset", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.get_dataset"], ["", "def", "set_dataloader", "(", "self", ",", "dataset", "=", "None", ",", "dataset_path", "=", "None", ",", "data_size", "=", "-", "1", ",", "train_scale", "=", "-", "1", ",", "valid_scale", "=", "-", "1", ",", "flag", "=", "0", ")", ":", "\n", "        ", "\"split data into 3 part, train, test, valid\"", "\n", "if", "train_scale", "==", "-", "1", ":", "\n", "            ", "data_size", "=", "self", ".", "data_size", "\n", "train_scale", "=", "self", ".", "train_scale", "\n", "valid_scale", "=", "self", ".", "valid_scale", "\n", "", "self", ".", "log_data", "=", "dataset", "\n", "self", ".", "data_path", "=", "dataset_path", "\n", "if", "dataset", "==", "None", ":", "\n", "            ", "self", ".", "dataset", "=", "get_dataset", "(", "dataset_path", ",", "'embedded'", ",", "data_size", ",", "flag", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "get_dataset", "(", "dataset", ",", "'direct'", ")", "\n", "", "train_length", "=", "int", "(", "len", "(", "self", ".", "dataset", ")", "*", "train_scale", ")", "\n", "valid_length", "=", "int", "(", "len", "(", "self", ".", "dataset", ")", "*", "valid_scale", ")", "\n", "test_length", "=", "len", "(", "self", ".", "dataset", ")", "-", "train_length", "-", "valid_length", "\n", "train_dataset", ",", "temp_dataset", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "self", ".", "dataset", ",", "(", "train_length", ",", "len", "(", "self", ".", "dataset", ")", "-", "train_length", ")", ")", "\n", "valid_dataset", ",", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "temp_dataset", ",", "(", "valid_length", ",", "test_length", ")", ")", "\n", "self", ".", "train_data_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "# valid_size = int(len(valid_dataset)/len(train_data_loader))+1", "\n", "self", ".", "valid_data_loader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "self", ".", "test_data_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "32", ")", "\n", "return", "self", ".", "train_data_loader", ",", "self", ".", "valid_data_loader", ",", "self", ".", "test_data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.get_model": [[79, 95], ["print", "exit", "model.OFM_TS.OFM", "model.OFM_TS.OFM_TS.setotype", "model.OFM_TS.OFM_TS", "model.OFM_TS.OFM_TS.setotype", "print", "exit"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.setotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.setotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "get_model", "(", "self", ",", "model_nas", ",", "model_struct", ")", ":", "\n", "        ", "if", "model_struct", "not", "in", "[", "0", ",", "2", "]", ":", "\n", "            ", "print", "(", "\"no model struct %s in model nas %s class!!!\"", ",", "model_struct", ",", "model_nas", ")", "\n", "exit", "(", ")", "\n", "\n", "", "if", "model_nas", "==", "\"fm\"", ":", "\n", "            ", "model", "=", "OFM", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "model", ".", "setotype", "(", "self", ".", "params", "[", "\"operator\"", "]", ")", "\n", "return", "model", "\n", "", "elif", "model_nas", "==", "\"fm_ts\"", ":", "\n", "            ", "model", "=", "OFM_TS", "(", "self", ".", "feature_size", ",", "self", ".", "dim", ",", "self", ".", "params", ",", "m_type", "=", "model_struct", ")", "\n", "model", ".", "setotype", "(", "self", ".", "params", "[", "\"operator\"", "]", ")", "\n", "return", "model", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"no model named %s in train class!!!\"", ",", "model_nas", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.initial_model": [[96, 111], ["train.Core.get_model().to", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "train.Core.get_model", "utils.FTRL", "train.Core.model.parameters", "train.Core.model.parameters"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.get_model"], ["", "", "def", "initial_model", "(", "self", ",", "model_nas", ",", "model_struct", ",", "optimizer", "=", "'adam'", ")", ":", "\n", "        ", "self", ".", "model_nas", "=", "model_nas", "\n", "self", ".", "model", "=", "self", ".", "get_model", "(", "model_nas", ",", "model_struct", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "# print(1)", "\n", "if", "self", ".", "params", "[", "\"simulate_type\"", "]", "==", "\"click\"", ":", "\n", "            ", "self", ".", "criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "#reduction=\"sum\"", "\n", "", "else", ":", "\n", "            ", "self", ".", "criterion", "=", "F", ".", "binary_cross_entropy", "\n", "# self.criterion = torch.nn.MSELoss()", "\n", "", "if", "optimizer", "==", "'adam'", ":", "\n", "            ", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "self", ".", "learning_rate", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "", "elif", "optimizer", "==", "'ftrl'", ":", "\n", "            ", "self", ".", "optimizer", "=", "FTRL", "(", "params", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "alpha", "=", "1.0", ",", "beta", "=", "1.0", ",", "l1", "=", "0.001", ",", "l2", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.train": [[112, 154], ["train.Core.model.train", "len", "time.time", "enumerate", "time.time", "print", "print", "time.time", "time.time", "time.time", "time.time", "time.time", "train.Core.model.zero_grad", "train.Core.backward", "time.time", "time.time", "train.Core.optimizer.step", "time.time", "train.Core.item", "print", "len", "fields.to", "target.to", "train.Core.model.forward_ts", "train.Core.model", "train.Core.criterion", "len", "round", "range", "range", "train.Core.criterion", "len", "target.float", "total_y[].item", "len", "total_y[].item", "len", "target.float"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts"], ["", "", "def", "train", "(", "self", ",", "data_loader", ",", "flag", "=", "0", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "total_loss", "=", "0", "\n", "total_y", "=", "[", "0", ",", "0", "]", "\n", "M", "=", "len", "(", "data_loader", ")", "\n", "self", ".", "clock", "[", "0", "]", "-=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "fields", ",", "target", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "self", ".", "clock", "[", "1", "]", "-=", "time", ".", "time", "(", ")", "\n", "fields", ",", "target", "=", "fields", ".", "to", "(", "self", ".", "device", ")", ",", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "clock", "[", "1", "]", "+=", "time", ".", "time", "(", ")", "\n", "self", ".", "clock", "[", "2", "]", "-=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "model_nas", "==", "\"fm_ts\"", ":", "\n", "                ", "k", ",", "y", "=", "self", ".", "model", ".", "forward_ts", "(", "fields", ",", "0", ")", "\n", "# loss_t = F.binary_cross_entropy(input=y,target=target,reduction='sum')", "\n", "loss_t", "=", "self", ".", "criterion", "(", "y", ",", "target", ".", "float", "(", ")", ")", "*", "self", ".", "batch_size", "\n", "alpha", "=", "1", "/", "len", "(", "data_loader", ")", "\n", "loss", "=", "alpha", "*", "k", "+", "loss_t", "\n", "\n", "total_y", "[", "0", "]", "+=", "k", "\n", "total_y", "[", "1", "]", "+=", "loss_t", "\n", "", "else", ":", "\n", "                ", "y", "=", "self", ".", "model", "(", "fields", ",", "0", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "y", ",", "target", ".", "float", "(", ")", ")", "\n", "", "self", ".", "clock", "[", "2", "]", "+=", "time", ".", "time", "(", ")", "\n", "self", ".", "clock", "[", "3", "]", "-=", "time", ".", "time", "(", ")", "\n", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "clock", "[", "3", "]", "+=", "time", ".", "time", "(", ")", "\n", "self", ".", "clock", "[", "4", "]", "-=", "time", ".", "time", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "clock", "[", "4", "]", "+=", "time", ".", "time", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "", "self", ".", "clock", "[", "0", "]", "+=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "model_nas", "==", "\"fm_ts\"", ":", "\n", "            ", "print", "(", "'kl distance '", ",", "total_y", "[", "0", "]", ".", "item", "(", ")", "/", "len", "(", "data_loader", ")", ",", "'bce loss '", ",", "total_y", "[", "1", "]", ".", "item", "(", ")", "/", "len", "(", "data_loader", ")", ")", "\n", "", "print", "(", "'------ loss:'", ",", "total_loss", "/", "len", "(", "data_loader", ")", ")", "\n", "\n", "print", "(", "[", "round", "(", "c", ",", "5", ")", "for", "c", "in", "self", ".", "clock", "[", "0", ":", "7", "]", "]", ")", "\n", "# print(self.model.cost)", "\n", "self", ".", "model", ".", "cost", "=", "[", "0", "for", "_", "in", "range", "(", "6", ")", "]", "\n", "self", ".", "clock", "=", "[", "0", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "return", "total_loss", "/", "len", "(", "data_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test": [[155, 176], ["train.Core.model.eval", "sklearn.metrics.roc_auc_score", "print", "list", "list", "list", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy", "targets.extend", "predicts.extend", "fields.tolist", "fields.to", "target.to", "train.Core.model.forward_ts", "train.Core.model", "target.tolist", "train.Core.tolist", "id_list.append", "str"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts"], ["", "def", "test", "(", "self", ",", "data_loader", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "targets", ",", "predicts", ",", "id_list", "=", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", "\n", "loss", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "fields", ",", "target", "in", "data_loader", ":", "\n", "                ", "fields", ",", "target", "=", "fields", ".", "to", "(", "self", ".", "device", ")", ",", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "model_nas", "==", "\"fm_ts\"", ":", "\n", "                    ", "_", ",", "y", "=", "self", ".", "model", ".", "forward_ts", "(", "fields", ",", "0", ",", "cal_kl", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "y", "=", "self", ".", "model", "(", "fields", ",", "0", ")", "\n", "", "loss", "+=", "torch", ".", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "input", "=", "y", ",", "target", "=", "target", ",", "reduction", "=", "'sum'", ")", "\n", "targets", ".", "extend", "(", "target", ".", "tolist", "(", ")", ")", "\n", "predicts", ".", "extend", "(", "y", ".", "tolist", "(", ")", ")", "\n", "for", "i", "in", "fields", ".", "tolist", "(", ")", ":", "\n", "                    ", "id_list", ".", "append", "(", "\",\"", ".", "join", "(", "[", "str", "(", "s", ")", "for", "s", "in", "i", "[", ":", "68", "]", "]", ")", ")", "\n", "# print(\"loss: \", loss.item()/len(data_loader))", "\n", "", "", "", "auc", "=", "roc_auc_score", "(", "targets", ",", "predicts", ")", "\n", "print", "(", "\"auc: \"", ",", "auc", ")", "#, \"  g_auc:\", cal_group_auc(targets, predicts, id_list)", "\n", "# print(\"bce:\",  torch.nn.functional.binary_cross_entropy(input=predicts,target=target,reduction='mean'))", "\n", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.run": [[177, 200], ["time.time", "range", "print", "print", "print", "train.Core.train", "len", "len", "train.Core.test", "time.time"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.test"], ["", "def", "run", "(", "self", ",", "flag", "=", "0", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "epoch", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "stop_cnt", "=", "0", "\n", "best_loss", "=", "10000000", "\n", "for", "i", "in", "range", "(", "epoch", ")", ":", "\n", "            ", "print", "(", "i", ",", "end", "=", "\" \"", ")", "\n", "loss", "=", "self", ".", "train", "(", "self", ".", "train_data_loader", ")", "\n", "if", "best_loss", "-", "0.000001", "<", "loss", ":", "\n", "                ", "stop_cnt", "+=", "1", "\n", "if", "stop_cnt", ">", "6", ":", "\n", "                    ", "break", "\n", "", "", "else", ":", "\n", "                ", "best_loss", "=", "loss", "\n", "stop_cnt", "=", "0", "\n", "", "", "print", "(", "len", "(", "self", ".", "test_data_loader", ")", ")", "\n", "if", "len", "(", "self", ".", "test_data_loader", ")", ">", "10", ":", "\n", "            ", "self", ".", "test", "(", "self", ".", "test_data_loader", ")", "\n", "# if i%10==0 or epoch-i<4:", "\n", "#     self.print_w()", "\n", "# if i%10 == 9:", "\n", "#     print('epoch:', i + 1)", "\n", "", "print", "(", "\"cost time: \"", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.result": [[201, 209], ["train.Core.model.eval", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "train.Core.detach().cpu().numpy", "train.Core.model.forward_ts", "train.Core.model", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "train.Core.detach().cpu", "train.Core.detach"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts"], ["", "def", "result", "(", "self", ",", "candidates", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "candidates", "=", "torch", ".", "from_numpy", "(", "candidates", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "model_nas", "==", "\"fm_ts\"", ":", "\n", "            ", "_", ",", "ranking", "=", "self", ".", "model", ".", "forward_ts", "(", "candidates", ",", "0", ",", "cal_kl", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "ranking", "=", "self", ".", "model", "(", "candidates", ",", "0", ")", "\n", "", "return", "ranking", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.print_w": [[211, 213], ["train.Core.model.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "print_w", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.save_model": [[214, 216], ["torch.save", "torch.save", "torch.save", "torch.save"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "model", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.load_model": [[217, 219], ["torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "model", "=", "torch", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.get_dataset": [[18, 25], ["ctr.TfsDataset", "ctr.DirectDataset", "ctr.DenseDataset"], "function", ["None"], ["def", "get_dataset", "(", "path", ",", "name", ",", "num", "=", "-", "1", ",", "flag", "=", "0", ")", ":", "\n", "    ", "if", "name", "==", "'tfs'", ":", "\n", "        ", "return", "TfsDataset", "(", "path", ",", "num", ")", "\n", "", "if", "name", "==", "'direct'", ":", "\n", "        ", "return", "DirectDataset", "(", "path", ")", "\n", "", "if", "name", "==", "'embedded'", ":", "\n", "        ", "return", "DenseDataset", "(", "path", ",", "num", ",", "flag", "=", "flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils_gen.gen_simulation_ctr": [[10, 113], ["numpy.array", "train_arch.Train_Arch", "train_arch.Train_Arch.load_model", "train_arch.Train_Arch.model.genotype", "print", "train_arch.Train_Arch.model.genotype", "len", "range", "numpy.zeros", "range", "train_arch.Train_Arch.result", "range", "sorted", "print", "print", "range", "len", "print", "train_arch.Train_Arch.model.named_parameters", "train_arch.Train_Arch.result", "range", "sorted", "print", "print", "range", "len", "print", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "[].argmax().item", "len", "len", "len", "len", "len", "numpy.zeros", "numpy.array", "len", "len", "sorted", "res.append", "len", "len", "sorted", "range", "item_ctr[].append", "sorted.append", "item_ctr[].append", "sorted.append", "[].argmax", "len", "int", "int", "len", "len"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.load_model", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.result", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.train.Core.result", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["def", "gen_simulation_ctr", "(", ")", ":", "\n", "    ", "c_list", "=", "None", "\n", "with", "open", "(", "\"raw_data/\"", "+", "dataset_name", "+", "\"/creative_list.pkl\"", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "c_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "c_list", "=", "np", ".", "array", "(", "c_list", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "item_candi", "=", "None", "\n", "with", "open", "(", "\"/raw_data/\"", "+", "dataset_name", "+", "\"/item_candidates.pkl\"", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "item_candi", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "f_list", "=", "None", "\n", "with", "open", "(", "\"raw_data/\"", "+", "dataset_name", "+", "\"/feature_list.pkl\"", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "f_list", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "params", "=", "{", "\"device\"", ":", "\"cuda\"", ",", "\n", "\"alpha\"", ":", "0.0", ",", "\n", "\"feature_size\"", ":", "\"raw_data/\"", "+", "dataset_name", "+", "\"/feature_size.pkl\"", ",", "\n", "\"model_struct\"", ":", "3", ",", "\n", "\"model_nas\"", ":", "\"nas\"", ",", "\n", "}", "\n", "\n", "framework", "=", "Train_Arch", "(", "dim", "=", "8", ",", "\n", "weight_decay", "=", "0.001", ",", "\n", "data_size", "=", "-", "1", ",", "\n", "device", "=", "\"cuda\"", ",", "\n", "epoch", "=", "50", ",", "\n", "params", "=", "params", ")", "\n", "model_path", "=", "\"raw_data/data_nas/rand_0.15_3/model/fm_nas.pt\"", "\n", "framework", ".", "load_model", "(", "model_path", ")", "\n", "framework", ".", "model", ".", "genotype", "(", ")", "\n", "# print(framework.model.named_parameters)", "\n", "# for i in range(len(framework.model._arch_parameters[\"binary\"])):", "\n", "#     framework.model._arch_parameters[\"binary\"][i, np.random.randint(0,5)] = 1", "\n", "arch", "=", "[", "framework", ".", "model", ".", "_arch_parameters", "[", "'binary'", "]", "[", "i", ",", ":", "]", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "framework", ".", "model", ".", "_arch_parameters", "[", "'binary'", "]", ")", ")", "]", "\n", "print", "(", "arch", ")", "\n", "framework", ".", "model", ".", "genotype", "(", ")", "\n", "f_len", "=", "len", "(", "f_list", "[", "0", "]", ")", "\n", "leng", "=", "len", "(", "f_list", "[", "0", "]", ")", "+", "len", "(", "c_list", "[", "0", "]", ")", "\n", "num", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "        ", "num", "+=", "len", "(", "item_candi", "[", "ind", "]", ")", "\n", "", "candidates", "=", "np", ".", "zeros", "(", "(", "num", ",", "leng", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cnt", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "        ", "t", "=", "np", ".", "zeros", "(", "leng", ")", "\n", "t", "[", "0", ":", "f_len", "]", "=", "np", ".", "array", "(", "f_list", "[", "ind", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# print(item_candi[ind])", "\n", "for", "c_feature", "in", "item_candi", "[", "ind", "]", ":", "\n", "            ", "t", "[", "f_len", ":", "]", "=", "c_list", "[", "c_feature", "]", "\n", "candidates", "[", "cnt", "]", "=", "t", "\n", "cnt", "+=", "1", "\n", "# print(candidates.shape)", "\n", "", "", "rank", "=", "framework", ".", "result", "(", "candidates", ")", "\n", "# print(rank)", "\n", "# for name,par in framework.model.named_parameters():", "\n", "#     print(name,par)", "\n", "ctr_list", "=", "[", "]", "\n", "item_ctr", "=", "{", "}", "\n", "cnt", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "        ", "item_ctr", "[", "ind", "]", "=", "[", "]", "\n", "for", "c_feature", "in", "item_candi", "[", "ind", "]", ":", "\n", "            ", "item_ctr", "[", "ind", "]", ".", "append", "(", "rank", "[", "cnt", "]", ")", "\n", "ctr_list", ".", "append", "(", "rank", "[", "cnt", "]", ")", "\n", "cnt", "+=", "1", "\n", "", "", "ctr_list", "=", "sorted", "(", "ctr_list", ")", "\n", "print", "(", "'low: '", ",", "ctr_list", "[", ":", "10", "]", ")", "\n", "print", "(", "'high: '", ",", "ctr_list", "[", "-", "10", ":", "]", ")", "\n", "radio", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "# print(item_ctr[ind])", "\n", "        ", "c", "=", "sorted", "(", "item_ctr", "[", "ind", "]", ")", "\n", "a", "=", "c", "[", "-", "1", "]", "/", "c", "[", "int", "(", "len", "(", "c", ")", "/", "2", ")", "]", "-", "1", "\n", "radio", "+=", "a", "\n", "", "radio", "/=", "len", "(", "f_list", ")", "\n", "print", "(", "radio", ")", "\n", "\n", "k", "=", "2", "\n", "cnt", "=", "0", "\n", "res", "=", "[", "]", "\n", "for", "name", ",", "parameter", "in", "framework", ".", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "parameter", "[", ":", "]", "=", "parameter", "*", "1.3", "\n", "cnt", "+=", "1", "\n", "res", ".", "append", "(", "parameter", ")", "\n", "", "rank", "=", "framework", ".", "result", "(", "candidates", ")", "\n", "ctr_list", "=", "[", "]", "\n", "item_ctr", "=", "{", "}", "\n", "cnt", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "        ", "item_ctr", "[", "ind", "]", "=", "[", "]", "\n", "for", "c_feature", "in", "item_candi", "[", "ind", "]", ":", "\n", "            ", "item_ctr", "[", "ind", "]", ".", "append", "(", "rank", "[", "cnt", "]", ")", "\n", "ctr_list", ".", "append", "(", "rank", "[", "cnt", "]", ")", "\n", "cnt", "+=", "1", "\n", "", "", "ctr_list", "=", "sorted", "(", "ctr_list", ")", "\n", "print", "(", "'low: '", ",", "ctr_list", "[", "0", ":", "10", "]", ")", "\n", "print", "(", "'high: '", ",", "ctr_list", "[", "-", "10", ":", "]", ")", "\n", "radio", "=", "0", "\n", "for", "ind", "in", "range", "(", "len", "(", "f_list", ")", ")", ":", "\n", "        ", "c", "=", "sorted", "(", "item_ctr", "[", "ind", "]", ")", "\n", "a", "=", "c", "[", "-", "1", "]", "/", "c", "[", "int", "(", "len", "(", "c", ")", "/", "2", ")", "]", "-", "1", "\n", "radio", "+=", "a", "\n", "", "radio", "/=", "len", "(", "f_list", ")", "\n", "print", "(", "radio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.__init__": [[72, 147], ["torch.Module.__init__", "print", "len", "print", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend().append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.OFM._arch_parameters[].data.add_", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend().append", "int", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend", "int", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "range", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend", "len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "len", "model.OFM._FC.append", "model.OFM._FC.append", "len", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "model.OFM._FC.append", "model.OFM._FC.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "print", "(", "feature_size", ")", "\n", "self", ".", "name", "=", "\"OFM\"", "\n", "self", ".", "field_size", "=", "len", "(", "feature_size", ")", "\n", "print", "(", "feature_size", ")", "\n", "self", ".", "feature_sizes", "=", "feature_size", "\n", "self", ".", "dim", "=", "k", "\n", "self", ".", "device", "=", "params", "[", "\"device\"", "]", "\n", "self", ".", "dense", "=", "params", "[", "\"dense\"", "]", "\n", "self", ".", "first_order", "=", "params", "[", "\"first_order\"", "]", "\n", "self", ".", "type", "=", "m_type", "\n", "self", ".", "f_len", "=", "params", "[", "\"f_len\"", "]", "\n", "self", ".", "alpha", "=", "params", "[", "\"alpha\"", "]", "\n", "# self.nas_flag = nas_flag", "\n", "# init bias", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "normal", "(", "torch", ".", "ones", "(", "1", ")", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "params", "=", "params", "\n", "# init first order", "\n", "if", "self", ".", "first_order", "==", "1", ":", "\n", "            ", "fm_first_order_Linears", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Linear", "(", "feature_size", ",", "1", ",", "bias", "=", "False", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", ":", "self", ".", "dense", "[", "0", "]", "]", "]", ")", "\n", "fm_first_order_embeddings", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Embedding", "(", "feature_size", ",", "1", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", "self", ".", "dense", "[", "0", "]", ":", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", "]", "]", ")", "\n", "fm_first_order_multi", "=", "nn", ".", "Embedding", "(", "self", ".", "dense", "[", "2", "]", ",", "1", ")", "\n", "self", ".", "fm_first_order_models", "=", "fm_first_order_Linears", ".", "extend", "(", "fm_first_order_embeddings", ")", ".", "append", "(", "fm_first_order_multi", ")", "\n", "# self.bias = 0", "\n", "\n", "# init second order", "\n", "", "self", ".", "_FC", "=", "None", "\n", "if", "self", ".", "type", "==", "0", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "\n", "", "elif", "self", ".", "type", "==", "1", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "*", "len", "(", "PRIMITIVES", ")", "\n", "", "elif", "self", ".", "type", "==", "2", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "\n", "# leng = self.dim", "\n", "self", ".", "_FC", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES", ":", "\n", "                ", "if", "primitive", "==", "\"concat\"", ":", "\n", "                    ", "self", ".", "_FC", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "self", ".", "dim", ",", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_FC", ".", "append", "(", "nn", ".", "Linear", "(", "self", ".", "dim", ",", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "", "", "elif", "self", ".", "type", "==", "3", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "*", "len", "(", "PRIMITIVES", ")", "\n", "# leng = self.dim", "\n", "self", ".", "_FC", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES", ":", "\n", "                ", "if", "primitive", "==", "\"concat\"", ":", "\n", "                    ", "self", ".", "_FC", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "self", ".", "dim", ",", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_FC", ".", "append", "(", "nn", ".", "Linear", "(", "self", ".", "dim", ",", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "", "", "", "fm_second_order_Linears", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Linear", "(", "feature_size", ",", "leng", ",", "bias", "=", "False", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", ":", "self", ".", "dense", "[", "0", "]", "]", "]", ")", "\n", "fm_second_order_embeddings", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Embedding", "(", "feature_size", ",", "leng", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", "self", ".", "dense", "[", "0", "]", ":", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", "]", "]", ")", "\n", "fm_second_order_multi", "=", "nn", ".", "Embedding", "(", "self", ".", "dense", "[", "2", "]", ",", "leng", ")", "\n", "self", ".", "fm_second_order_models", "=", "fm_second_order_Linears", ".", "extend", "(", "fm_second_order_embeddings", ")", ".", "append", "(", "fm_second_order_multi", ")", "\n", "\n", "# calcu the num of operation", "\n", "if", "self", ".", "dense", "[", "2", "]", "!=", "0", ":", "\n", "            ", "self", ".", "multi_len", "=", "int", "(", "self", ".", "dense", "[", "1", "]", "*", "(", "self", ".", "dense", "[", "1", "]", "+", "1", ")", "/", "2", ")", "+", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "multi_len", "=", "int", "(", "self", ".", "dense", "[", "1", "]", "*", "(", "self", ".", "dense", "[", "1", "]", "-", "1", ")", "/", "2", ")", "\n", "\n", "# init arch parameters", "\n", "", "self", ".", "inter_arr", "=", "[", "i", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", "]", "\n", "self", ".", "_arch_parameters", "=", "{", "}", "\n", "self", ".", "_arch_parameters", "[", "'binary'", "]", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "self", ".", "multi_len", ",", "len", "(", "PRIMITIVES", ")", ")", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "params", "[", "'device'", "]", ")", "/", "2", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", ".", "add_", "(", "\n", "torch", ".", "randn_like", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", ")", "*", "1e-3", ")", "\n", "\n", "\n", "self", ".", "cost", "=", "[", "0", "for", "_", "in", "range", "(", "6", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.arch_parameters": [[148, 150], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_arch_parameters", "[", "'binary'", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.set_rand": [[151, 153], ["random.sample"], "methods", ["None"], ["", "def", "set_rand", "(", "self", ",", "num", ")", ":", "\n", "        ", "self", ".", "inter_arr", "=", "random", ".", "sample", "(", "self", ".", "inter_arr", ",", "num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward": [[154, 237], ["x.reshape", "time.time", "enumerate", "time.time", "range", "time.time", "time.time", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "enumerate", "len", "range", "out.squeeze", "X[].to", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "X[].to", "X_vector.append", "time.time", "X[].to", "X_vector.append", "time.time", "time.time", "range", "time.time", "model.MixedBinary", "emb().unsqueeze", "time.time", "X[].to", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "time.time", "time.time", "range", "time.time", "emb().unsqueeze", "emb", "X[].to", "X_vector.append", "len", "model.MixedBinary", "model.MixedBinary", "emb", "X[].to", "len", "emb", "emb", "emb", "len", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "emb", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["", "def", "forward", "(", "self", ",", "x", ",", "flag", ",", "weights", "=", "None", ")", ":", "\n", "        ", "if", "weights", "==", "None", ":", "\n", "            ", "weights", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", "\n", "", "X", "=", "x", ".", "reshape", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "self", ".", "cost", "[", "0", "]", "-=", "time", ".", "time", "(", ")", "\n", "\n", "# calcu first order", "\n", "out_first_order", "=", "0", "\n", "if", "self", ".", "first_order", "==", "1", ":", "\n", "            ", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_first_order_models", ")", ":", "\n", "                ", "if", "i", "<", "self", ".", "dense", "[", "0", "]", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "out_first_order", "+=", "torch", ".", "sum", "(", "emb", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "", "elif", "i", "<", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", ":", "\n", "                    ", "self", ".", "cost", "[", "1", "]", "-=", "time", ".", "time", "(", ")", "\n", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "# print(i, Xi_tem, emb, self.feature_sizes)", "\n", "out_first_order", "+=", "torch", ".", "sum", "(", "emb", "(", "Xi_tem", ")", ",", "1", ")", "\n", "self", ".", "cost", "[", "1", "]", "+=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "cost", "[", "2", "]", "-=", "time", ".", "time", "(", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "dense", "[", "2", "]", ")", ":", "\n", "                        ", "Xi_tem", "=", "X", "[", ":", ",", "i", "+", "j", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "out_first_order", "+=", "Xi_tem", "*", "emb", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "", "self", ".", "cost", "[", "2", "]", "+=", "time", ".", "time", "(", ")", "\n", "\n", "# record second order embedding", "\n", "", "", "", "X_vector", "=", "[", "]", "\n", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_second_order_models", ")", ":", "\n", "            ", "if", "i", "<", "self", ".", "dense", "[", "0", "]", ":", "\n", "                ", "if", "self", ".", "params", "[", "\"calcu_dense\"", "]", "==", "0", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "X_vector", ".", "append", "(", "emb", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "", "elif", "i", "<", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", ":", "\n", "                ", "self", ".", "cost", "[", "3", "]", "-=", "time", ".", "time", "(", ")", "\n", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "X_vector", ".", "append", "(", "emb", "(", "Xi_tem", ")", ")", "\n", "# print(X_vector[-1].shape)", "\n", "self", ".", "cost", "[", "3", "]", "+=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "cost", "[", "4", "]", "-=", "time", ".", "time", "(", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "dense", "[", "2", "]", ")", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", "+", "j", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "X_vector", ".", "append", "(", "(", "Xi_tem", "*", "emb", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "# print(X_vector[-1].shape)", "\n", "", "self", ".", "cost", "[", "4", "]", "+=", "time", ".", "time", "(", ")", "\n", "\n", "# calcu second order", "\n", "", "", "out_second_order", "=", "0", "\n", "self", ".", "cost", "[", "5", "]", "-=", "time", ".", "time", "(", ")", "\n", "cnt", "=", "0", "\n", "multi_hot_len", "=", "0", "\n", "if", "self", ".", "dense", "[", "2", "]", "!=", "0", ":", "\n", "            ", "multi_hot_len", "=", "1", "\n", "", "for", "i", "in", "range", "(", "len", "(", "X_vector", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                ", "if", "i", "<", "len", "(", "self", ".", "feature_sizes", ")", "-", "multi_hot_len", ":", "\n", "                    ", "tmp", "=", "cnt", "\n", "", "elif", "j", "<", "len", "(", "self", ".", "feature_sizes", ")", "-", "multi_hot_len", ":", "\n", "                    ", "tmp", "=", "self", ".", "multi_len", "-", "len", "(", "self", ".", "feature_sizes", ")", "+", "j", "\n", "", "else", ":", "\n", "                    ", "tmp", "=", "self", ".", "multi_len", "-", "1", "\n", "", "cnt", "+=", "1", "\n", "if", "tmp", "not", "in", "self", ".", "inter_arr", ":", "\n", "                    ", "continue", "\n", "# if self.name != \"SNAS\":", "\n", "#     out_second_order += MixedBinary(X_vector[i], X_vector[j], weights[tmp,:], flag, dim=self.dim, FC=self._FC, o_type=self.type)", "\n", "# else:", "\n", "#     out_second_order += MixedBinary(X_vector[i], X_vector[j], weights[tmp], flag, dim=self.dim, FC=self._FC, o_type=self.type)", "\n", "", "if", "self", ".", "name", "==", "\"SNAS\"", ":", "\n", "                    ", "out_second_order", "+=", "MixedBinary", "(", "X_vector", "[", "i", "]", ",", "X_vector", "[", "j", "]", ",", "weights", "[", "tmp", "]", ",", "flag", ",", "dim", "=", "self", ".", "dim", ",", "FC", "=", "self", ".", "_FC", ",", "o_type", "=", "self", ".", "type", ")", "\n", "", "elif", "self", ".", "name", "==", "\"DSNAS\"", ":", "\n", "                    ", "out_second_order", "+=", "MixedBinary", "(", "X_vector", "[", "i", "]", ",", "X_vector", "[", "j", "]", ",", "weights", "[", "tmp", ",", ":", "]", ",", "flag", ",", "dim", "=", "self", ".", "dim", ",", "FC", "=", "self", ".", "_FC", ",", "o_type", "=", "self", ".", "type", ",", "others", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "out_second_order", "+=", "MixedBinary", "(", "X_vector", "[", "i", "]", ",", "X_vector", "[", "j", "]", ",", "weights", "[", "tmp", ",", ":", "]", ",", "flag", ",", "dim", "=", "self", ".", "dim", ",", "FC", "=", "self", ".", "_FC", ",", "o_type", "=", "self", ".", "type", ")", "\n", "# print(out_second_order)", "\n", "", "", "", "self", ".", "cost", "[", "5", "]", "+=", "time", ".", "time", "(", ")", "\n", "self", ".", "cost", "[", "0", "]", "+=", "time", ".", "time", "(", ")", "\n", "out", "=", "out_second_order", "+", "out_first_order", "+", "self", ".", "bias", "\n", "\n", "return", "torch", ".", "sigmoid", "(", "out", ".", "squeeze", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.genotype": [[238, 246], ["range", "print", "range", "[].argmax().item", "[].argmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "genotype", "=", "[", "PRIMITIVES", "[", "self", ".", "_arch_parameters", "[", "'binary'", "]", "[", "i", ",", ":", "]", ".", "argmax", "(", ")", ".", "item", "(", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", ":", "\n", "            ", "if", "i", "not", "in", "self", ".", "inter_arr", ":", "\n", "                ", "genotype", "[", "i", "]", "=", "\"None\"", "\n", "", "", "print", "(", "genotype", ")", "\n", "return", "genotype", "\n", "# return genotype, genotype_p.cpu().detach()", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.setotype": [[248, 257], ["len", "range", "range"], "methods", ["None"], ["", "def", "setotype", "(", "self", ",", "ops", ")", ":", "\n", "        ", "self", ".", "ops", "=", "ops", "\n", "leng", "=", "len", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", "[", "0", ",", ":", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "leng", ")", ":", "\n", "                ", "if", "PRIMITIVES", "[", "j", "]", "==", "self", ".", "ops", ":", "\n", "                    ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", ",", "j", "]", "=", "1.0", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", ",", "j", "]", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.TS_initial": [[258, 279], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend().append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend().append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend", "len", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList.extend"], "methods", ["None"], ["", "", "", "", "def", "TS_initial", "(", "self", ")", ":", "\n", "        ", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "10000000", ")", "\n", "self", ".", "ts_trick", "=", "self", ".", "params", "[", "\"ts_trick\"", "]", "\n", "if", "self", ".", "type", "==", "0", "or", "self", ".", "type", "==", "2", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "\n", "", "elif", "self", ".", "type", "==", "1", "or", "self", ".", "type", "==", "3", ":", "\n", "            ", "leng", "=", "self", ".", "dim", "*", "len", "(", "PRIMITIVES", ")", "\n", "", "if", "self", ".", "first_order", "==", "1", ":", "\n", "            ", "fm_first_std_Linears", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Linear", "(", "feature_size", ",", "1", ",", "bias", "=", "False", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", ":", "self", ".", "dense", "[", "0", "]", "]", "]", ")", "\n", "fm_first_std_embeddings", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Embedding", "(", "feature_size", ",", "1", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", "self", ".", "dense", "[", "0", "]", ":", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", "]", "]", ")", "\n", "fm_first_std_multi", "=", "nn", ".", "Embedding", "(", "self", ".", "dense", "[", "2", "]", ",", "1", ")", "\n", "self", ".", "fm_first_std_models", "=", "fm_first_std_Linears", ".", "extend", "(", "fm_first_std_embeddings", ")", ".", "append", "(", "fm_first_std_multi", ")", "\n", "\n", "", "fm_second_std_Linears", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Linear", "(", "feature_size", ",", "leng", ",", "bias", "=", "False", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", ":", "self", ".", "dense", "[", "0", "]", "]", "]", ")", "\n", "fm_second_std_embeddings", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Embedding", "(", "feature_size", ",", "leng", ")", "for", "feature_size", "in", "self", ".", "feature_sizes", "[", "self", ".", "dense", "[", "0", "]", ":", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", "]", "]", ")", "\n", "fm_second_std_multi", "=", "nn", ".", "Embedding", "(", "self", ".", "dense", "[", "2", "]", ",", "leng", ")", "\n", "self", ".", "fm_second_std_models", "=", "fm_second_std_Linears", ".", "extend", "(", "fm_second_std_embeddings", ")", ".", "append", "(", "fm_second_std_multi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.reparameterize": [[280, 285], ["torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "torch.log().to", "model.OFM.rand_array[].reshape().to", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "model.OFM.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log().to.numel", "torch.log().to.numel", "torch.log().to.numel", "torch.log().to.numel"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ",", "alpha", ")", ":", "\n", "        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "# v = torch.randn(batch, mu.shape[0], mu.shape[1]).to(self.device)", "\n", "v", "=", "self", ".", "rand_array", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "(", "mu", "+", "alpha", "*", "std", "*", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.KL_distance": [[286, 289], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n", "        ", "a", "=", "torch", ".", "log", "(", "std2", "/", "std1", ")", "+", "(", "std1", "*", "std1", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", ")", "/", "2", "/", "std2", "/", "std2", "-", "1.0", "/", "2.0", "\n", "return", "torch", ".", "sum", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts": [[290, 392], ["x.reshape", "enumerate", "range", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "enumerate", "enumerate", "enumerate", "len", "range", "model.OFM.KL_distance", "model.OFM.KL_distance", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "X[].to", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "X[].to", "emb().unsqueeze", "X[].to", "emb", "range", "model.MixedBinary", "model.MixedBinary", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "emb().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "model.OFM.reparameterize", "X[].to", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "range", "X_vector.append", "X_vector.append", "X_vector.append", "X_vector.append", "X[].to", "len", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "emb", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "model.OFM.reparameterize", "X[].to", "emb", "model.OFM.reparameterize", "model.OFM.reparameterize", "X_vector.append", "X_vector.append", "len", "emb", "emb", "model.OFM.reparameterize", "model.OFM.reparameterize", "len", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "emb", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["", "def", "forward_ts", "(", "self", ",", "x", ",", "flag", ",", "weights", "=", "None", ",", "cal_kl", "=", "1", ")", ":", "\n", "        ", "if", "weights", "==", "None", ":", "\n", "            ", "weights", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", "\n", "", "X", "=", "x", ".", "reshape", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "# if cal_kl==1:", "\n", "#     alpha = 1", "\n", "# else:", "\n", "#     alpha = self.alpha", "\n", "alpha", "=", "self", ".", "alpha", "\n", "out_first_order", "=", "0", "\n", "if", "self", ".", "first_order", "==", "1", ":", "\n", "            ", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_first_order_models", ")", ":", "\n", "                ", "if", "i", "<", "self", ".", "dense", "[", "0", "]", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "X_mean", "=", "torch", ".", "sum", "(", "emb", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                        ", "out_first_order", "+=", "X_mean", "\n", "", "else", ":", "\n", "                        ", "X_std", "=", "torch", ".", "sum", "(", "self", ".", "fm_first_std_models", "[", "i", "]", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "out_first_order", "+=", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", "\n", "", "", "elif", "i", "<", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "# print(Xi_tem.shape)", "\n", "X_mean", "=", "torch", ".", "sum", "(", "emb", "(", "Xi_tem", ")", ",", "1", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                        ", "out_first_order", "+=", "X_mean", "\n", "", "else", ":", "\n", "                        ", "X_std", "=", "torch", ".", "sum", "(", "self", ".", "fm_first_std_models", "[", "i", "]", "(", "Xi_tem", ")", ",", "1", ")", "\n", "out_first_order", "+=", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "j", "in", "range", "(", "self", ".", "dense", "[", "2", "]", ")", ":", "\n", "                        ", "Xi_tem", "=", "X", "[", ":", ",", "i", "+", "j", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "X_mean", "=", "Xi_tem", "*", "emb", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                            ", "out_first_order", "+=", "X_mean", "\n", "", "else", ":", "\n", "                            ", "X_std", "=", "Xi_tem", "*", "self", ".", "fm_first_std_models", "[", "i", "]", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "out_first_order", "+=", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", "\n", "", "", "", "", "", "X_vector", "=", "[", "]", "\n", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_second_order_models", ")", ":", "\n", "            ", "if", "i", "<", "self", ".", "dense", "[", "0", "]", ":", "\n", "                ", "if", "self", ".", "params", "[", "\"calcu_dense\"", "]", "==", "0", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "X_mean", "=", "emb", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                         ", "X_vector", ".", "append", "(", "X_mean", ")", "\n", "", "else", ":", "\n", "                        ", "X_std", "=", "self", ".", "fm_second_std_models", "[", "i", "]", "(", "Xi_tem", ")", ".", "unsqueeze", "(", "1", ")", "\n", "X_vector", ".", "append", "(", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", ")", "\n", "", "", "", "elif", "i", "<", "self", ".", "dense", "[", "0", "]", "+", "self", ".", "dense", "[", "1", "]", ":", "\n", "                ", "Xi_tem", "=", "X", "[", ":", ",", "i", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "X_mean", "=", "emb", "(", "Xi_tem", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                    ", "X_vector", ".", "append", "(", "X_mean", ")", "\n", "", "else", ":", "\n", "                    ", "X_std", "=", "self", ".", "fm_second_std_models", "[", "i", "]", "(", "Xi_tem", ")", "\n", "X_vector", ".", "append", "(", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "dense", "[", "2", "]", ")", ":", "\n", "                        ", "Xi_tem", "=", "X", "[", ":", ",", "i", "+", "j", ",", ":", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "X_mean", "=", "(", "Xi_tem", "*", "emb", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "if", "i", "<", "self", ".", "f_len", "and", "self", ".", "ts_trick", "==", "0", ":", "\n", "                            ", "X_vector", ".", "append", "(", "X_mean", ")", "\n", "", "else", ":", "\n", "                            ", "X_std", "=", "(", "Xi_tem", "*", "self", ".", "fm_second_std_models", "[", "i", "]", "(", "torch", ".", "Tensor", "(", "[", "j", "]", ")", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "X_vector", ".", "append", "(", "self", ".", "reparameterize", "(", "X_mean", ",", "X_std", ",", "alpha", ")", ")", "\n", "", "", "", "", "out_second_order", "=", "0", "\n", "cnt", "=", "0", "\n", "multi_hot_len", "=", "0", "\n", "if", "self", ".", "dense", "[", "2", "]", "!=", "0", ":", "\n", "            ", "multi_hot_len", "=", "1", "\n", "", "for", "i", "in", "range", "(", "len", "(", "X_vector", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                ", "if", "i", "<", "len", "(", "self", ".", "feature_sizes", ")", "-", "multi_hot_len", ":", "\n", "                    ", "tmp", "=", "cnt", "\n", "", "elif", "j", "<", "len", "(", "self", ".", "feature_sizes", ")", "-", "multi_hot_len", ":", "\n", "                    ", "tmp", "=", "-", "len", "(", "self", ".", "feature_sizes", ")", "+", "j", "\n", "", "else", ":", "\n", "                    ", "tmp", "=", "-", "1", "\n", "", "if", "self", ".", "name", "!=", "\"SNAS\"", ":", "\n", "                    ", "out_second_order", "+=", "MixedBinary", "(", "X_vector", "[", "i", "]", ",", "X_vector", "[", "j", "]", ",", "weights", "[", "tmp", ",", ":", "]", ",", "flag", ",", "dim", "=", "self", ".", "dim", ",", "FC", "=", "self", ".", "_FC", ",", "o_type", "=", "self", ".", "type", ")", "\n", "", "else", ":", "\n", "                    ", "out_second_order", "+=", "MixedBinary", "(", "X_vector", "[", "i", "]", ",", "X_vector", "[", "j", "]", ",", "weights", "[", "tmp", "]", ",", "flag", ",", "dim", "=", "self", ".", "dim", ",", "FC", "=", "self", ".", "_FC", ",", "o_type", "=", "self", ".", "type", ")", "\n", "", "cnt", "+=", "1", "\n", "\n", "", "", "out", "=", "torch", ".", "sigmoid", "(", "(", "out_second_order", "+", "out_first_order", "+", "self", ".", "bias", ")", ".", "squeeze", "(", "1", ")", ")", "\n", "if", "cal_kl", "==", "0", ":", "\n", "            ", "return", "0", ",", "out", "\n", "# print(out.shape,out_second_order.shape,out_first_order.shape)", "\n", "", "k", "=", "0", "\n", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_first_order_models", ")", ":", "\n", "            ", "if", "i", "<", "self", ".", "f_len", ":", "\n", "                ", "continue", "\n", "", "k", "+=", "self", ".", "KL_distance", "(", "emb", ".", "weight", ",", "0", "*", "torch", ".", "ones_like", "(", "emb", ".", "weight", ")", ",", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "fm_first_std_models", "[", "i", "]", ".", "weight", ")", ")", ",", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "fm_first_std_models", "[", "i", "]", ".", "weight", ")", ")", "\n", "", "for", "i", ",", "emb", "in", "enumerate", "(", "self", ".", "fm_second_order_models", ")", ":", "\n", "            ", "if", "i", "<", "self", ".", "f_len", ":", "\n", "                ", "continue", "\n", "", "k", "+=", "self", ".", "KL_distance", "(", "emb", ".", "weight", ",", "0", "*", "torch", ".", "ones_like", "(", "emb", ".", "weight", ")", ",", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "fm_second_std_models", "[", "i", "]", ".", "weight", ")", ")", ",", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "fm_second_std_models", "[", "i", "]", ".", "weight", ")", ")", "\n", "# print(k.shape)", "\n", "", "return", "k", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS.__init__": [[395, 398], ["model.OFM.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "name", "=", "\"NAS\"", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS.binarize": [[399, 410], ["model.NAS._arch_parameters[].clone", "len", "range", "[].argmax().item", "range", "range", "[].argmax"], "methods", ["None"], ["", "def", "binarize", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cache", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "clone", "(", ")", "\n", "max_index", "=", "[", "self", ".", "_arch_parameters", "[", "'binary'", "]", "[", "i", ",", ":", "]", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", "]", "\n", "leng", "=", "len", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", "[", "0", ",", ":", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "leng", ")", ":", "\n", "                ", "if", "j", "==", "max_index", "[", "i", "]", ":", "\n", "                    ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", ",", "j", "]", "=", "1.0", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", ",", "j", "]", "=", "0.0", "\n", "# print(self._arch_parameters['binary'])", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS.recover": [[412, 415], ["None"], "methods", ["None"], ["", "", "", "", "def", "recover", "(", "self", ")", ":", "\n", "        ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "=", "self", ".", "_cache", "\n", "del", "self", ".", "_cache", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS.step": [[416, 430], ["model.NAS.zero_grad", "arch_optimizer.zero_grad", "model.NAS.binarize", "model.NAS.", "criterion", "criterion.backward", "model.NAS.recover", "arch_optimizer.step"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step", "(", "self", ",", "x", ",", "labels_valid", ",", "criterion", ",", "arch_optimizer", ",", "other", ")", ":", "\n", "# print(len(x),len(labels_valid))", "\n", "        ", "self", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "# binarize before forward propagation", "\n", "self", ".", "binarize", "(", ")", "\n", "inferences", "=", "self", "(", "x", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "inferences", ",", "labels_valid", ")", "\n", "# loss = F.binary_cross_entropy(input=inferences,target=labels_valid,reduction='mean')", "\n", "loss", ".", "backward", "(", ")", "\n", "# restore weight before updating", "\n", "self", ".", "recover", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS.print": [[431, 435], ["model.NAS.named_parameters", "model.NAS.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "i", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "print", "(", "name", ",", "i", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.__init__": [[438, 445], ["model.OFM.__init__", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", "DSNAS", ",", "self", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "log_alpha", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ")", "\n", "self", ".", "fix_arch_index", "=", "{", "}", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "\"DSNAS\"", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.binarize": [[446, 448], ["None"], "methods", ["None"], ["", "def", "binarize", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.recover": [[449, 451], ["None"], "methods", ["None"], ["", "def", "recover", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.fix_arch": [[452, 463], ["torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "range", "len", "model.DSNAS.fix_arch_index.items", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "argmax_index.size", "model.DSNAS.fix_arch_index.keys", "model.DSNAS.fix_arch_index.keys", "[].item", "model.DSNAS.log_alpha.detach().clone", "model.DSNAS.log_alpha.detach"], "methods", ["None"], ["", "def", "fix_arch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "params", "[", "\"early_fix_arch\"", "]", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "log_alpha", ".", "data", "[", "key", ",", ":", "]", "=", "value_lst", "[", "1", "]", "\n", "", "", "sort_log_alpha", "=", "torch", ".", "topk", "(", "F", ".", "softmax", "(", "self", ".", "log_alpha", ".", "data", ",", "dim", "=", "-", "1", ")", ",", "2", ")", "\n", "argmax_index", "=", "(", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "0", "]", "-", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "1", "]", ">=", "0.3", ")", "\n", "for", "id", "in", "range", "(", "argmax_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                ", "if", "argmax_index", "[", "id", "]", "==", "1", "and", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                    ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "sort_log_alpha", "[", "1", "]", "[", "id", ",", "0", "]", ".", "item", "(", ")", ",", "\n", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.forward": [[465, 469], ["model.OFM.forward", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ",", "flag", ",", "weights", "=", "None", ")", ":", "\n", "        ", "if", "weights", "==", "None", ":", "\n", "            ", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "", "return", "super", "(", ")", ".", "forward", "(", "x", ",", "flag", ",", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.step": [[471, 502], ["model.DSNAS.fix_arch", "arch_optimizer.zero_grad", "optimizer.zero_grad", "model.DSNAS._get_weights", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax.clone().detach", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "model.DSNAS.weights.requires_grad_", "model.DSNAS.", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model.DSNAS.weights.grad.data.sum", "model.DSNAS.log_alpha.grad.data.mul_", "arch_optimizer.step", "optimizer.step", "labels.float", "model.DSNAS.block_reward.view", "len", "model.DSNAS.fix_arch_index.items", "torch.softmax.clone", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "model.DSNAS.fix_arch_index.keys", "model.DSNAS.weights[].zero_", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS.fix_arch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v._get_weights", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step", "(", "self", ",", "x", ",", "labels", ",", "criterion", ",", "arch_optimizer", ",", "optimizer", ")", ":", "\n", "        ", "error_loss", "=", "0", "\n", "loss_alpha", "=", "0", "\n", "self", ".", "fix_arch", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "self", ".", "params", "[", "\"early_fix_arch\"", "]", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n", "self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "\n", "", "", "", "self", ".", "weights", "=", "self", ".", "_get_weights", "(", "self", ".", "log_alpha", ")", "\n", "cate_prob", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "self", ".", "cate_prob", "=", "cate_prob", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "loss_alpha", "=", "torch", ".", "log", "(", "\n", "(", "self", ".", "weights", "*", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", ".", "sum", "(", "-", "1", ")", ")", ".", "sum", "(", ")", "\n", "self", ".", "weights", ".", "requires_grad_", "(", ")", "\n", "\n", "inference", "=", "self", "(", "x", ",", "1", ",", "self", ".", "weights", ")", "\n", "\n", "error_loss", "=", "F", ".", "binary_cross_entropy", "(", "inference", ",", "labels", ".", "float", "(", ")", ")", "\n", "\n", "self", ".", "weights", ".", "grad", "=", "torch", ".", "zeros_like", "(", "self", ".", "weights", ")", "\n", "(", "error_loss", "+", "loss_alpha", ")", ".", "backward", "(", ")", "\n", "self", ".", "block_reward", "=", "self", ".", "weights", ".", "grad", ".", "data", ".", "sum", "(", "-", "1", ")", "\n", "self", ".", "log_alpha", ".", "grad", ".", "data", ".", "mul_", "(", "self", ".", "block_reward", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "error_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS._get_weights": [[503, 510], ["torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_get_weights", "(", "self", ",", "log_alpha", ")", ":", "\n", "# if self.args.random_sample:", "\n", "#     uni = torch.ones_like(log_alpha)", "\n", "#     m = torch.distributions.one_hot_categorical.OneHotCategorical(uni)", "\n", "# else:", "\n", "        ", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", "=", "F", ".", "softmax", "(", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", "\n", "return", "m", ".", "sample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.__init__": [[513, 517], ["model.OFM.__init__", "range"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "arch_prob", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "multi_len", ")", "]", "\n", "self", ".", "name", "=", "\"SNAS\"", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.binarize": [[518, 520], ["model.SNAS.g_softmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.g_softmax"], ["", "def", "binarize", "(", "self", ",", "temperature", "=", "0.00001", ")", ":", "\n", "        ", "self", ".", "g_softmax", "(", "temperature", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.recover": [[521, 523], ["None"], "methods", ["None"], ["", "def", "recover", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.forward": [[524, 526], ["model.OFM.forward"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "flag", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "forward", "(", "x", ",", "flag", ",", "self", ".", "arch_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.g_softmax": [[527, 536], ["range", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.gumbel_softmax"], "methods", ["None"], ["", "def", "g_softmax", "(", "self", ",", "temperature", ")", ":", "\n", "        ", "self", ".", "temp", "=", "temperature", "\n", "for", "i", "in", "range", "(", "self", ".", "multi_len", ")", ":", "\n", "# alpha = self._arch_parameters['binary'].data[i, :]", "\n", "# m = torch.nn.functional.gumbel_softmax(alpha, tau=temperature, hard=False, eps=1e-10, dim=-1)", "\n", "# m = torch.distributions.relaxed_categorical.RelaxedOneHotCategorical(", "\n", "#     torch.tensor([temperature]).to(self.device) , alpha)", "\n", "# print(\"sam\",m.sample(),\"raw\",self._arch_parameters['binary'].data[i, :])", "\n", "            ", "self", ".", "arch_prob", "[", "i", "]", "=", "torch", ".", "nn", ".", "functional", ".", "gumbel_softmax", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", "[", "i", ",", ":", "]", ",", "tau", "=", "temperature", ",", "hard", "=", "False", ",", "eps", "=", "1e-10", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.step": [[537, 549], ["model.SNAS.zero_grad", "arch_optimizer.zero_grad", "model.SNAS.g_softmax", "model.SNAS.", "criterion", "criterion.backward", "arch_optimizer.step"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS.g_softmax", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "", "def", "step", "(", "self", ",", "x", ",", "labels_valid", ",", "criterion", ",", "arch_optimizer", ",", "temperature", ")", ":", "\n", "        ", "self", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_softmax", "(", "temperature", ")", "\n", "inferences", "=", "self", "(", "x", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "inferences", ",", "labels_valid", ")", "\n", "# loss = F.binary_cross_entropy(input=inferences,target=labels_valid,reduction='mean')", "\n", "loss", ".", "backward", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "# for parms in self.arch_parameters():\t", "\n", "#     print(parms,'-->grad_requirs:',parms.requires_grad,' -->grad_value:',parms.grad)", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM_TS.__init__": [[552, 555], ["model.OFM.__init__", "model.OFM_TS.TS_initial"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.TS_initial"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "TS_initial", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS_TS.__init__": [[558, 561], ["model.NAS.__init__", "model.NAS_TS.TS_initial"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.TS_initial"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "TS_initial", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.NAS_TS.step_ts": [[562, 576], ["model.NAS_TS.zero_grad", "arch_optimizer.zero_grad", "model.NAS_TS.binarize", "model.NAS_TS.forward_ts", "criterion", "criterion.backward", "model.NAS_TS.recover", "arch_optimizer.step"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.forward_ts", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step_ts", "(", "self", ",", "x", ",", "labels_valid", ",", "criterion", ",", "arch_optimizer", ",", "other", ")", ":", "\n", "# print(len(x),len(labels_valid))", "\n", "        ", "self", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "# binarize before forward propagation", "\n", "self", ".", "binarize", "(", ")", "\n", "_", ",", "inferences", "=", "self", ".", "forward_ts", "(", "x", ",", "1", ",", "cal_kl", "=", "0", ")", "\n", "loss", "=", "criterion", "(", "inferences", ",", "labels_valid", ")", "\n", "# loss = F.binary_cross_entropy(input=inferences,target=labels_valid,reduction='mean')", "\n", "loss", ".", "backward", "(", ")", "\n", "# restore weight before updating", "\n", "self", ".", "recover", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.SNAS_TS.__init__": [[578, 581], ["model.SNAS.__init__", "model.SNAS_TS.TS_initial"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.TS_initial"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "TS_initial", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.DSNAS_TS.__init__": [[584, 587], ["model.DSNAS.__init__", "model.DSNAS_TS.TS_initial"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.OFM.TS_initial"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", "=", "None", ",", "k", "=", "None", ",", "params", "=", "None", ",", "m_type", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "feature_size", ",", "k", ",", "params", ",", "m_type", ")", "\n", "self", ".", "TS_initial", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.__init__": [[590, 596], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n", "=", "1", ",", "cnum", "=", "1", ",", "device", "=", "'cuda'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "0.1", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "theta", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "cnum", ",", "n", ")", ".", "to", "(", "device", ")", ")", "\n", "self", ".", "A_inv", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "cnum", ",", "n", ",", "n", ")", ".", "to", "(", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.forward": [[597, 605], ["x[].cpu().numpy().astype", "x[].reshape", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "x[].reshape.reshape", "x[].reshape.reshape", "len", "len", "len", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "x[].cpu().numpy", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "torch.bmm().reshape", "len", "x[].cpu", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ind", "=", "x", "[", ":", ",", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "int", ")", "\n", "feature", "=", "x", "[", ":", ",", "1", ":", "]", ".", "reshape", "(", "len", "(", "x", ")", ",", "self", ".", "n", ")", "\n", "mean", "=", "torch", ".", "mul", "(", "feature", ",", "self", ".", "theta", "[", "ind", "]", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "fe1", "=", "feature", ".", "reshape", "(", "len", "(", "x", ")", ",", "1", ",", "self", ".", "n", ")", "\n", "fe2", "=", "feature", ".", "reshape", "(", "len", "(", "x", ")", ",", "self", ".", "n", ",", "1", ")", "\n", "std", "=", "self", ".", "alpha", "*", "torch", ".", "sqrt", "(", "torch", ".", "bmm", "(", "torch", ".", "bmm", "(", "fe1", ",", "self", ".", "A_inv", "[", "ind", "]", ")", ",", "fe2", ")", ".", "reshape", "(", "len", "(", "x", ")", ",", "1", ")", ")", "\n", "return", "mean", "+", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print": [[606, 608], ["None"], "methods", ["None"], ["", "def", "print", "(", ")", ":", "\n", "        ", "return", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.MixedBinary": [[32, 69], ["weights.argmax().item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "weights.argmax", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "range", "len", "range", "len", "range", "zip", "len"], "function", ["None"], ["def", "MixedBinary", "(", "embedding_p", ",", "embedding_q", ",", "weights", ",", "flag", ",", "dim", "=", "1", ",", "FC", "=", "None", ",", "o_type", "=", "0", ",", "others", "=", "0", ")", ":", "\n", "# print(weights)", "\n", "# embedding_p = MLP[0](embedding_p.view(-1,1)).view(embedding_p.size())", "\n", "# embedding_q = MLP[1](embedding_q.view(-1,1)).view(embedding_q.size())", "\n", "    ", "if", "flag", "==", "0", ":", "\n", "        ", "max_ind", "=", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "if", "o_type", "==", "0", ":", "\n", "            ", "t", "=", "OPS", "[", "PRIMITIVES", "[", "max_ind", "]", "]", "(", "embedding_p", ",", "embedding_q", ")", "\n", "", "elif", "o_type", "==", "1", ":", "\n", "            ", "begin", ",", "end", "=", "max_ind", "*", "dim", ",", "max_ind", "*", "dim", "+", "dim", "\n", "t", "=", "OPS", "[", "PRIMITIVES", "[", "max_ind", "]", "]", "(", "embedding_p", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ",", "embedding_q", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ")", "\n", "", "elif", "o_type", "==", "2", ":", "\n", "            ", "t", "=", "(", "FC", "[", "max_ind", "]", "(", "OPS_V", "[", "PRIMITIVES", "[", "max_ind", "]", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "", "elif", "o_type", "==", "3", ":", "\n", "            ", "begin", ",", "end", "=", "max_ind", "*", "dim", ",", "max_ind", "*", "dim", "+", "dim", "\n", "t", "=", "(", "FC", "[", "max_ind", "]", "(", "OPS_V", "[", "PRIMITIVES", "[", "max_ind", "]", "]", "(", "embedding_p", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ",", "embedding_q", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ")", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "", "if", "others", "==", "1", ":", "\n", "            ", "t", "=", "t", "*", "weights", "[", "max_ind", "]", "\n", "", "", "else", ":", "\n", "        ", "if", "o_type", "==", "0", ":", "\n", "            ", "t", "=", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", "in", "zip", "(", "weights", ",", "PRIMITIVES", ")", "]", ")", ",", "0", ")", "\n", "", "elif", "o_type", "==", "1", ":", "\n", "            ", "t", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "PRIMITIVES", ")", ")", ":", "\n", "                ", "begin", ",", "end", "=", "i", "*", "dim", ",", "i", "*", "dim", "+", "dim", "\n", "t", "+=", "weights", "[", "i", "]", "*", "(", "OPS", "[", "PRIMITIVES", "[", "i", "]", "]", "(", "embedding_p", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ",", "embedding_q", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ")", ")", "\n", "", "", "elif", "o_type", "==", "2", ":", "\n", "            ", "t", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "PRIMITIVES", ")", ")", ":", "\n", "                ", "t", "+=", "weights", "[", "i", "]", "*", "(", "FC", "[", "i", "]", "(", "OPS_V", "[", "PRIMITIVES", "[", "i", "]", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "", "", "elif", "o_type", "==", "3", ":", "\n", "            ", "t", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "PRIMITIVES", ")", ")", ":", "\n", "                ", "begin", ",", "end", "=", "i", "*", "dim", ",", "i", "*", "dim", "+", "dim", "\n", "t", "+=", "weights", "[", "i", "]", "*", "(", "FC", "[", "i", "]", "(", "OPS_V", "[", "PRIMITIVES", "[", "i", "]", "]", "(", "embedding_p", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ",", "embedding_q", "[", ":", ",", ":", ",", "begin", ":", "end", "]", ")", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "\n", "", "", "", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.FTRL.__init__": [[20, 32], ["dict", "torch.optim.optimizer.Optimizer.__init__", "ValueError", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["def", "__init__", "(", "self", ",", "params", ",", "alpha", "=", "1.0", ",", "beta", "=", "1.0", ",", "l1", "=", "1.0", ",", "l2", "=", "1.0", ")", ":", "\n", "        ", "if", "not", "0.0", "<", "alpha", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid alpha parameter: {}\"", ".", "format", "(", "alpha", ")", ")", "\n", "", "if", "not", "0.0", "<", "beta", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter: {}\"", ".", "format", "(", "beta", ")", ")", "\n", "", "if", "not", "0.0", "<=", "l1", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid l1 parameter: {}\"", ".", "format", "(", "l1", ")", ")", "\n", "", "if", "not", "0.0", "<=", "l2", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid l2 parameter: {}\"", ".", "format", "(", "l2", ")", ")", "\n", "\n", "", "defaults", "=", "dict", "(", "alpha", "=", "alpha", ",", "beta", "=", "beta", ",", "l1", "=", "l1", ",", "l2", "=", "l2", ")", "\n", "super", "(", "FTRL", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.FTRL.step": [[33, 69], ["closure", "z.add_", "n.add_", "len", "torch.zeros_like", "torch.zeros_like", "n.sqrt", "z.sign", "z.abs", "n.sqrt"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments:\n            closure (callable, optional): A closure that reevaluates the model\n                and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "\"z\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "state", "[", "\"n\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "\n", "", "z", ",", "n", "=", "state", "[", "\"z\"", "]", ",", "state", "[", "\"n\"", "]", "\n", "\n", "theta", "=", "(", "n", "+", "grad", "**", "2", ")", ".", "sqrt", "(", ")", "/", "group", "[", "\"alpha\"", "]", "-", "n", ".", "sqrt", "(", ")", "\n", "z", ".", "add_", "(", "grad", "-", "theta", "*", "p", ".", "data", ")", "\n", "n", ".", "add_", "(", "grad", "**", "2", ")", "\n", "\n", "p", ".", "data", "=", "(", "\n", "-", "1", "\n", "/", "(", "group", "[", "\"l2\"", "]", "+", "(", "group", "[", "\"beta\"", "]", "+", "n", ".", "sqrt", "(", ")", ")", "/", "group", "[", "\"alpha\"", "]", ")", "\n", "*", "(", "z", "-", "group", "[", "\"l1\"", "]", "*", "z", ".", "sign", "(", ")", ")", "\n", ")", "\n", "p", ".", "data", "[", "z", ".", "abs", "(", ")", "<", "group", "[", "\"l1\"", "]", "]", "=", "0", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.__init__": [[71, 80], ["iter", "torch.cuda.Stream", "utils.DataPrefetcher.preload"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.preload"], ["    ", "def", "__init__", "(", "self", ",", "loader", ",", "device", ")", ":", "\n", "        ", "self", ".", "loader", "=", "iter", "(", "loader", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "stream", "=", "torch", ".", "cuda", ".", "Stream", "(", ")", "\n", "# With Amp, it isn't necessary to manually convert data to half.", "\n", "# if args.fp16:", "\n", "#     self.mean = self.mean.half()", "\n", "#     self.std = self.std.half()", "\n", "self", ".", "preload", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.preload": [[81, 91], ["utils.DataPrefetcher.next"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.next"], ["", "def", "preload", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "batch", "=", "next", "(", "self", ".", "loader", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "batch", "=", "None", "\n", "return", "\n", "", "with", "torch", ".", "cuda", ".", "stream", "(", "self", ".", "stream", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "len", "(", "self", ".", "batch", ")", ")", ":", "\n", "                ", "if", "k", "!=", "'meta'", ":", "\n", "                    ", "self", ".", "batch", "[", "k", "]", "=", "self", ".", "batch", "[", "k", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.next": [[98, 103], ["torch.cuda.current_stream().wait_stream", "utils.DataPrefetcher.preload", "torch.cuda.current_stream"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.preload"], ["", "", "", "", "def", "next", "(", "self", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "current_stream", "(", ")", ".", "wait_stream", "(", "self", ".", "stream", ")", "\n", "batch", "=", "self", ".", "batch", "\n", "self", ".", "preload", "(", ")", "\n", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.cal_group_auc": [[104, 139], ["collections.defaultdict", "collections.defaultdict", "enumerate", "collections.defaultdict", "set", "round", "len", "len", "ValueError", "group_score[].append", "group_truth[].append", "range", "float", "roc_auc_score", "len", "len", "len", "np.asarray", "np.asarray", "len"], "function", ["None"], ["", "", "def", "cal_group_auc", "(", "labels", ",", "preds", ",", "user_id_list", ")", ":", "\n", "    ", "if", "len", "(", "user_id_list", ")", "!=", "len", "(", "labels", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"impression id num should equal to the sample num,\"", "\"impression id num is {0}\"", ".", "format", "(", "len", "(", "user_id_list", ")", ")", ")", "\n", "", "group_score", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "group_truth", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "for", "idx", ",", "truth", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "user_id", "=", "user_id_list", "[", "idx", "]", "\n", "score", "=", "preds", "[", "idx", "]", "\n", "truth", "=", "labels", "[", "idx", "]", "\n", "group_score", "[", "user_id", "]", ".", "append", "(", "score", ")", "\n", "group_truth", "[", "user_id", "]", ".", "append", "(", "truth", ")", "\n", "\n", "", "group_flag", "=", "defaultdict", "(", "lambda", ":", "False", ")", "\n", "for", "user_id", "in", "set", "(", "user_id_list", ")", ":", "\n", "        ", "truths", "=", "group_truth", "[", "user_id", "]", "\n", "flag", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "truths", ")", "-", "1", ")", ":", "\n", "            ", "if", "truths", "[", "i", "]", "!=", "truths", "[", "i", "+", "1", "]", ":", "\n", "                ", "flag", "=", "True", "\n", "break", "\n", "", "", "group_flag", "[", "user_id", "]", "=", "flag", "\n", "\n", "", "impression_total", "=", "0", "\n", "total_auc", "=", "0", "\n", "#", "\n", "for", "user_id", "in", "group_flag", ":", "\n", "        ", "if", "group_flag", "[", "user_id", "]", ":", "\n", "            ", "auc", "=", "roc_auc_score", "(", "np", ".", "asarray", "(", "group_truth", "[", "user_id", "]", ")", ",", "np", ".", "asarray", "(", "group_score", "[", "user_id", "]", ")", ")", "\n", "total_auc", "+=", "auc", "*", "len", "(", "group_truth", "[", "user_id", "]", ")", "\n", "impression_total", "+=", "len", "(", "group_truth", "[", "user_id", "]", ")", "\n", "", "", "group_auc", "=", "float", "(", "total_auc", ")", "/", "impression_total", "\n", "group_auc", "=", "round", "(", "group_auc", ",", "4", ")", "\n", "return", "group_auc", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Virtue.__init__": [[38, 56], ["torch.Module.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "embedding_num", "=", "12", ",", "ofm", "=", "False", ")", ":", "\n", "        ", "super", "(", "Virtue", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "reg", "=", "reg", "\n", "self", ".", "embedding_all", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "self", ".", "columns", "=", "[", "\"cap-shape\"", ",", "\"cap-surface\"", ",", "\"cap-color\"", ",", "\"bruises\"", ",", "\"odor\"", ",", "\"gill-attachment\"", ",", "\n", "\"gill-spacing\"", ",", "\"gill-size\"", ",", "\"gill-color\"", ",", "\"stalk-shape\"", ",", "\"stalk-root\"", ",", "\"stalk-surface-above-ring\"", ",", "\n", "\"stalk-surface-below-ring\"", ",", "\"stalk-color-above-ring\"", ",", "\"stalk-color-below-ring\"", ",", "\"veil-type\"", ",", "\n", "\"veil-color\"", ",", "\"ring-number\"", ",", "\"ring-type\"", ",", "\"spore-print-color\"", ",", "\"population\"", ",", "\"habitat\"", "]", "\n", "if", "not", "ofm", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "self", ".", "embedding_all", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "temp", ".", "append", "(", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", ")", "\n", "", "self", ".", "embedding_all", "[", "name", "]", "=", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Virtue.compute_loss": [[57, 62], ["torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.reshape.float", "torch.reshape.float", "torch.reshape.float"], "methods", ["None"], ["", "", "", "def", "compute_loss", "(", "self", ",", "inferences", ",", "labels", ",", "regs", ")", ":", "\n", "        ", "labels", "=", "torch", ".", "reshape", "(", "labels", ",", "[", "-", "1", ",", "1", "]", ")", "\n", "loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "inferences", ",", "labels", ".", "float", "(", ")", ")", "\n", "#loss = F.mse_loss(inferences, labels)", "\n", "return", "loss", "+", "regs", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network.__init__": [[65, 78], ["models.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "arch", ",", "reg", ")", ":", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ")", "\n", "self", ".", "arch", "=", "arch", "\n", "self", ".", "mlp_p", "=", "arch", "[", "'mlp'", "]", "[", "'p'", "]", "\n", "self", ".", "mlp_q", "=", "arch", "[", "'mlp'", "]", "[", "'q'", "]", "\n", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "if", "arch", "[", "'binary'", "]", "==", "'concat'", ":", "\n", "                    ", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "nn", ".", "Linear", "(", "embedding_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network.forward": [[79, 93], ["models.Network.FC.values", "models.constrain", "next", "models.Network.mlp_p().view", "models.Network.mlp_p().view", "value.parameters", "name1_embedding.size", "name2_embedding.size", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "models.Network.mlp_p", "models.Network.mlp_p", "name1_embedding.view", "name2_embedding.view"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.constrain", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.utils.DataPrefetcher.next"], ["", "", "", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "for", "value", "in", "self", ".", "FC", ".", "values", "(", ")", ":", "\n", "            ", "constrain", "(", "next", "(", "value", ".", "parameters", "(", ")", ")", ")", "\n", "", "inferences", "=", "0", "\n", "regs", "=", "0", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "regs", "+=", "self", ".", "reg", "*", "(", "torch", ".", "norm", "(", "name1_embedding", ")", "+", "torch", ".", "norm", "(", "name2_embedding", ")", ")", "\n", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_p", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "inferences", "+=", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "(", "OPS", "[", "self", ".", "arch", "[", "'binary'", "]", "]", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ")", ")", "\n", "", "", "return", "inferences", ",", "regs", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.__init__": [[96, 109], ["models.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "models.Network_Search._initialize_alphas", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ")", ":", "\n", "        ", "super", "(", "Network_Search", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "if", "primitive", "==", "'concat'", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search._initialize_alphas": [[110, 128], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "models.Network_Search._arch_parameters[].data.add_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "len"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "_arch_parameters", "=", "{", "}", "\n", "self", ".", "_arch_parameters", "[", "'mlp'", "]", "=", "{", "}", "\n", "self", ".", "_arch_parameters", "[", "'mlp'", "]", "[", "'p'", "]", "=", "self", ".", "mlp_p", "\n", "self", ".", "_arch_parameters", "[", "'mlp'", "]", "[", "'q'", "]", "=", "self", ".", "mlp_q", "\n", "self", ".", "_arch_parameters", "[", "'binary'", "]", "=", "Variable", "(", "torch", ".", "ones", "(", "len", "(", "PRIMITIVES_BINARY", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "device", "=", "'cpu'", ")", "/", "2", ",", "requires_grad", "=", "True", ")", "\n", "#self._arch_parameters['binary'] = Variable(torch.Tensor([1.0,1.0,1.0,1.0,1.0]), requires_grad=True)", "\n", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", ".", "add_", "(", "\n", "torch", ".", "randn_like", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", ")", "*", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.arch_parameters": [[129, 132], ["list", "list", "[].parameters", "[].parameters"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "_arch_parameters", "[", "'mlp'", "]", "[", "'p'", "]", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "_arch_parameters", "[", "'mlp'", "]", "[", "'q'", "]", ".", "parameters", "(", ")", ")", "+", "[", "self", ".", "_arch_parameters", "[", "'binary'", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.new": [[133, 138], ["models.Network_Search", "zip", "models.Network_Search.arch_parameters", "models.Network_Search.arch_parameters", "y.data.clone"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.arch_parameters", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.arch_parameters"], ["", "def", "new", "(", "self", ")", ":", "\n", "        ", "model_new", "=", "Network_Search", "(", "self", ".", "num_users", ",", "self", ".", "num_items", ",", "self", ".", "embedding_dim", ",", "self", ".", "reg", ")", "\n", "for", "x", ",", "y", "in", "zip", "(", "model_new", ".", "arch_parameters", "(", ")", ",", "self", ".", "arch_parameters", "(", ")", ")", ":", "\n", "            ", "x", ".", "data", "=", "y", ".", "data", ".", "clone", "(", ")", "\n", "", "return", "model_new", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.clip": [[139, 142], ["torch.Hardtanh", "torch.Hardtanh", "torch.Hardtanh", "torch.Hardtanh."], "methods", ["None"], ["", "def", "clip", "(", "self", ")", ":", "\n", "        ", "m", "=", "nn", ".", "Hardtanh", "(", "0", ",", "1", ")", "\n", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "=", "m", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize": [[143, 151], ["models.Network_Search._arch_parameters[].clone", "models.Network_Search._arch_parameters[].argmax().item", "range", "models.Network_Search._arch_parameters[].size", "models.Network_Search._arch_parameters[].argmax"], "methods", ["None"], ["", "def", "binarize", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cache", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "clone", "(", ")", "\n", "max_index", "=", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "if", "i", "==", "max_index", ":", "\n", "                ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", "]", "=", "1.0", "\n", "", "else", ":", "\n", "                ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "[", "i", "]", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover": [[152, 155], ["None"], "methods", ["None"], ["", "", "", "def", "recover", "(", "self", ")", ":", "\n", "        ", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "data", "=", "self", ".", "_cache", "\n", "del", "self", ".", "_cache", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.forward": [[156, 170], ["models.Network_Search.mlp_p().view", "models.Network_Search.mlp_p().view", "models.MixedBinary", "name1_embedding.size", "name2_embedding.size", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "models.Network_Search.mlp_p", "models.Network_Search.mlp_p", "name1_embedding.view", "name2_embedding.view"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "# for i in range(len(PRIMITIVES_BINARY)):", "\n", "#     constrain(next(self._FC[i].parameters()))", "\n", "        ", "inferences", "=", "0", "\n", "regs", "=", "0", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "regs", "+=", "self", ".", "reg", "*", "(", "torch", ".", "norm", "(", "name1_embedding", ")", "+", "torch", ".", "norm", "(", "name2_embedding", ")", ")", "\n", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_p", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "self", ".", "_arch_parameters", "[", "'binary'", "]", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "", "", "return", "inferences", ",", "regs", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.genotype": [[171, 175], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax.cpu().detach", "models.Network_Search._arch_parameters[].argmax().cpu().numpy", "torch.softmax.cpu", "models.Network_Search._arch_parameters[].argmax().cpu", "models.Network_Search._arch_parameters[].argmax"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "genotype", "=", "PRIMITIVES_BINARY", "[", "self", ".", "_arch_parameters", "[", "'binary'", "]", ".", "argmax", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "_arch_parameters", "[", "'binary'", "]", ",", "dim", "=", "-", "1", ")", "\n", "return", "genotype", ",", "genotype_p", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.step": [[176, 186], ["models.Network_Search.zero_grad", "arch_optimizer.zero_grad", "models.Network_Search.binarize", "models.Network_Search._backward_step", "models.Network_Search.recover", "arch_optimizer.step"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.binarize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search._backward_step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search.recover", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step", "(", "self", ",", "features", ",", "features_valid", ",", "lr", ",", "arch_optimizer", ",", "unrolled", ")", ":", "\n", "        ", "self", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "# binarize before forward propagation", "\n", "self", ".", "binarize", "(", ")", "\n", "loss", "=", "self", ".", "_backward_step", "(", "features_valid", ")", "\n", "# restore weight before updating", "\n", "self", ".", "recover", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Network_Search._backward_step": [[187, 192], ["models.Network_Search.", "models.Network_Search.compute_loss", "models.Network_Search.backward"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Virtue.compute_loss"], ["", "def", "_backward_step", "(", "self", ",", "features_valid", ")", ":", "\n", "        ", "inferences", ",", "regs", "=", "self", "(", "features_valid", ")", "\n", "loss", "=", "self", ".", "compute_loss", "(", "inferences", ",", "features_valid", "[", "\"label\"", "]", ",", "regs", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.__init__": [[195, 213], ["models.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "models.DSNAS._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "DSNAS", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "if", "primitive", "==", "'concat'", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS._initialize_alphas": [[214, 232], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "len", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "len"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "num_op", "=", "len", "(", "self", ".", "columns", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "num_op", "*", "num_op", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "1", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "self", ".", "_arch_parameters", "=", "[", "self", ".", "log_alpha", "]", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "self", ".", "fix_arch_index", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.recommend": [[233, 274], ["models.DSNAS.eval", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "models.DSNAS.weights.argmax().item", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "range", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "models.DSNAS.add_batch", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "len", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "models.DSNAS.fix_arch_index.items", "models.DSNAS.weights.argmax", "models.MixedBinary", "numpy.random.random", "simulate_index.append", "simulate_index.append", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "models.DSNAS.fix_arch_index.keys", "models.DSNAS.weights[].zero_", "cur_weights.argmax().item", "cur_weights.view", "numpy.random.randint", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "cur_weights.argmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n", "self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "", "", "", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                    ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "else", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "name1_embedding_trans", "=", "name1_embedding", "#self.mlp_p(name1_embedding.view(-1, 1)).view(name1_embedding.size())", "\n", "name2_embedding_trans", "=", "name2_embedding", "#self.mlp_p(name2_embedding.view(-1, 1)).view(name2_embedding.size())", "\n", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "#ipdb.set_trace()", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "simulate_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "max_index", ")", ")", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "args", ".", "epsion", ":", "\n", "                ", "simulate_index", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "                ", "simulate_index", ".", "append", "(", "max_index", "[", "i", "]", ")", "\n", "", "", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "simulate_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.add_batch": [[275, 283], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.step": [[284, 313], ["models.DSNAS.train", "utils.get_data_queue_bandit", "enumerate", "print", "print", "print", "print", "numpy.mean", "time.time", "optimizer.zero_grad", "arch_optimizer.zero_grad", "models.DSNAS.forward", "losses.append", "time.time", "optimizer.step", "arch_optimizer.step", "time.time", "time.time", "error_loss.cpu().detach().item", "time.time", "time.time", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "cnt", "=", "0", "\n", "time_data", "=", "0", "\n", "time_forward", "=", "0", "\n", "time_update", "=", "0", "\n", "end", "=", "-", "1", "\n", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "            ", "if", "end", "!=", "-", "1", ":", "\n", "                ", "time_data", "+=", "time", ".", "time", "(", ")", "-", "end", "\n", "", "begin", "=", "time", ".", "time", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "time_forward", "+=", "time", ".", "time", "(", ")", "-", "begin", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "begin2", "=", "time", ".", "time", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "time_update", "+=", "time", ".", "time", "(", ")", "-", "begin2", "\n", "cnt", "+=", "1", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "", "print", "(", "\"time_data: \"", ",", "time_data", ")", "\n", "print", "(", "\"time_forward: \"", ",", "time_forward", ")", "\n", "print", "(", "\"time_update: \"", ",", "time_update", ")", "\n", "print", "(", "\"cnt: \"", ",", "cnt", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.revised_arch_index": [[314, 324], ["torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "range", "models.DSNAS.fix_arch_index.items", "torch.softmax", "torch.softmax", "torch.softmax", "argmax_index.size", "models.DSNAS.fix_arch_index.keys", "[].item", "models.DSNAS.log_alpha.detach().clone", "models.DSNAS.log_alpha.detach"], "methods", ["None"], ["", "def", "revised_arch_index", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "sort_log_alpha", "=", "torch", ".", "topk", "(", "F", ".", "softmax", "(", "self", ".", "log_alpha", ".", "data", ",", "dim", "=", "-", "1", ")", ",", "2", ")", "\n", "argmax_index", "=", "(", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "0", "]", "-", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "1", "]", ">=", "0.01", ")", "\n", "for", "id", "in", "range", "(", "argmax_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                ", "if", "argmax_index", "[", "id", "]", "==", "1", "and", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                    ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "sort_log_alpha", "[", "1", "]", "[", "id", ",", "0", "]", ".", "item", "(", ")", ",", "\n", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "", "", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "log_alpha", ".", "data", "[", "key", ",", ":", "]", "=", "value_lst", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.forward": [[325, 388], ["models.DSNAS._get_weights", "models.DSNAS.revised_arch_index", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax.clone().detach", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "models.DSNAS.weights.requires_grad_", "models.DSNAS.weights.argmax().item", "sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "models.DSNAS.weights.grad.data.sum", "models.DSNAS.log_alpha.grad.data.mul_", "Parallel", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "models.DSNAS.block_reward.view", "len", "models.DSNAS.fix_arch_index.items", "torch.softmax.clone", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "models.DSNAS.weights.argmax", "names_all.append", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "models.DSNAS.fix_arch_index.keys", "models.DSNAS.weights[].zero_", "cur_weights.argmax().item", "delayed", "cur_weights.view", "cur_weights.argmax", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v._get_weights", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.revised_arch_index"], ["", "", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "regs", "=", "0", "\n", "self", ".", "weights", "=", "self", ".", "_get_weights", "(", "self", ".", "log_alpha", ")", "\n", "\n", "self", ".", "revised_arch_index", "(", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n", "self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "\n", "", "", "", "cate_prob", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "self", ".", "cate_prob", "=", "cate_prob", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "loss_alpha", "=", "torch", ".", "log", "(", "\n", "(", "self", ".", "weights", "*", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", ".", "sum", "(", "-", "1", ")", ")", ".", "sum", "(", ")", "\n", "self", ".", "weights", ".", "requires_grad_", "(", ")", "\n", "\n", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "from", "sklearn", ".", "externals", ".", "joblib", "import", "Parallel", ",", "delayed", "\n", "names_all", "=", "[", "]", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                    ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "else", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "names_all", ".", "append", "(", "[", "name1_embedding", ",", "name2_embedding", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "delayed", "(", "MixedBinary", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "inferences", "=", "sum", "(", "res", ")", "\n", "# for name1 in self.columns:", "\n", "#     for name2 in self.columns:", "\n", "#         if self.args.multi_operation:", "\n", "#             cur_weights = self.weights[cur_index]", "\n", "#             max_index = cur_weights.argmax().item()", "\n", "#             cur_index += 1", "\n", "#         if self.args.ofm:", "\n", "#             name1_embedding = self.embedding_all[name1][max_index](features[name1])", "\n", "#             name2_embedding = self.embedding_all[name2][max_index](features[name2])", "\n", "#         else:", "\n", "#             name1_embedding = self.embedding_all[name1](features[name1])", "\n", "#             name2_embedding = self.embedding_all[name2](features[name2])", "\n", "#         regs += self.reg * (torch.norm(name1_embedding) + torch.norm(name2_embedding))", "\n", "#         name1_embedding_trans = self.mlp_p(name1_embedding.view(-1, 1)).view(name1_embedding.size())", "\n", "#         name2_embedding_trans = self.mlp_p(name2_embedding.view(-1, 1)).view(name2_embedding.size())", "\n", "#         inferences += MixedBinary(name1_embedding_trans, name2_embedding_trans, cur_weights.view(-1,), self.FC[name1 + \":\" + name2])", "\n", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "self", ".", "weights", ".", "grad", "=", "torch", ".", "zeros_like", "(", "self", ".", "weights", ")", "\n", "(", "weighted_loss", "+", "loss_alpha", ")", ".", "backward", "(", ")", "\n", "self", ".", "block_reward", "=", "self", ".", "weights", ".", "grad", ".", "data", ".", "sum", "(", "-", "1", ")", "\n", "self", ".", "log_alpha", ".", "grad", ".", "data", ".", "mul_", "(", "self", ".", "block_reward", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "return", "inferences", ",", "weighted_loss", ",", "loss_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS._get_weights": [[389, 396], ["torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_get_weights", "(", "self", ",", "log_alpha", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "random_sample", ":", "\n", "            ", "uni", "=", "torch", ".", "ones_like", "(", "log_alpha", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "uni", ")", "\n", "", "else", ":", "\n", "            ", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", "=", "F", ".", "softmax", "(", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", "\n", "", "return", "m", ".", "sample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.arch_parameters": [[397, 399], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_arch_parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.DSNAS.genotype": [[400, 411], ["torch.softmax", "torch.softmax", "torch.softmax", "models.DSNAS.log_alpha.argmax().cpu().numpy", "torch.softmax.cpu().detach", "genotype.append", "torch.softmax", "torch.softmax", "torch.softmax", "models.DSNAS.log_alpha.argmax().cpu().numpy", "models.DSNAS.log_alpha.argmax().cpu", "torch.softmax.cpu", "models.DSNAS.log_alpha.argmax().cpu", "models.DSNAS.log_alpha.argmax", "models.DSNAS.log_alpha.argmax"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "genotype", "=", "PRIMITIVES_BINARY", "[", "self", ".", "log_alpha", ".", "argmax", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "genotype", "=", "[", "]", "\n", "for", "index", "in", "self", ".", "log_alpha", ".", "argmax", "(", "axis", "=", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "genotype", ".", "append", "(", "PRIMITIVES_BINARY", "[", "index", "]", ")", "\n", "", "genotype", "=", "\":\"", ".", "join", "(", "genotype", "[", ":", "10", "]", ")", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "[", ":", "10", "]", "\n", "", "return", "genotype", ",", "genotype_p", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Uniform.__init__": [[413, 415], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Uniform.recommend": [[416, 423], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.random.randint", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Uniform.step": [[424, 426], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Uniform.genotype": [[427, 429], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"uniform\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Egreedy.__init__": [[431, 436], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "self", ".", "epsion", "=", "0.2", "\n", "self", ".", "action_rewards", "=", "{", "0", ":", "[", "0", ",", "1.0", "]", ",", "1", ":", "[", "0", ",", "1.0", "]", "}", "#total reward, action_num", "\n", "self", ".", "max_action", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Egreedy.recommend": [[437, 464], ["numpy.float", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.random.randint", "range", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "action_rewards[].cpu().detach().item", "action_nums[].cpu().detach().item", "numpy.random.random", "simulate_index.append", "simulate_index.append", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "enumerate", "action_rewards[].cpu().detach", "action_nums[].cpu().detach", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "action_rewards[].cpu", "action_nums[].cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "max_reward", "=", "np", ".", "float", "(", "\"-inf\"", ")", "\n", "for", "key", "in", "self", ".", "action_rewards", ":", "\n", "            ", "if", "self", ".", "action_rewards", "[", "key", "]", "[", "0", "]", "/", "self", ".", "action_rewards", "[", "key", "]", "[", "1", "]", ">", "max_reward", ":", "\n", "                ", "max_reward", "=", "self", ".", "action_rewards", "[", "key", "]", "[", "0", "]", "/", "self", ".", "action_rewards", "[", "key", "]", "[", "1", "]", "\n", "self", ".", "max_action", "=", "key", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", "\n", "simulate_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "max_index", ")", ")", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "epsion", ":", "\n", "                ", "simulate_index", ".", "append", "(", "max_index", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "simulate_index", ".", "append", "(", "self", ".", "max_action", ")", "\n", "\n", "", "", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "simulate_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "\n", "action_rewards", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ",", "dim", "=", "0", ")", "\n", "action_nums", "=", "torch", ".", "sum", "(", "pos_weights", ",", "dim", "=", "0", ")", "\n", "for", "key", "in", "self", ".", "action_rewards", ":", "\n", "            ", "temp", "=", "self", ".", "action_rewards", "[", "key", "]", "\n", "temp", "[", "0", "]", "+=", "action_rewards", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "temp", "[", "1", "]", "+=", "action_nums", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "action_rewards", "[", "key", "]", "=", "temp", "\n", "", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Egreedy.step": [[465, 467], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Egreedy.genotype": [[468, 470], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"uniform\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.__init__": [[473, 491], ["models.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "models.FM._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "FM", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "if", "primitive", "==", "'concat'", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                        ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM._initialize_alphas": [[492, 503], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1.0", "]", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.recommend": [[504, 532], ["models.FM.eval", "models.FM.weights.argmax().item", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "models.FM.add_batch", "models.FM.weights.argmax", "models.MixedBinary", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "cur_weights.argmax().item", "cur_weights.view", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "cur_weights.argmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                    ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "else", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "name1_embedding_trans", "=", "name1_embedding", "#self.mlp_p(name1_embedding.view(-1, 1)).view(name1_embedding.size())", "\n", "name2_embedding_trans", "=", "name2_embedding", "#self.mlp_p(name2_embedding.view(-1, 1)).view(name2_embedding.size())", "\n", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.add_batch": [[533, 541], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.step": [[542, 555], ["models.FM.train", "utils.get_data_queue_bandit", "enumerate", "print", "numpy.mean", "optimizer.zero_grad", "models.FM.forward", "losses.append", "optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "cnt", "=", "0", "\n", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "cnt", "+=", "1", "\n", "", "print", "(", "\"cnt: \"", ",", "cnt", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.forward": [[556, 582], ["models.FM.weights.argmax().item", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean.backward", "torch.mean.backward", "torch.mean.backward", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "models.FM.weights.argmax", "models.FM.mlp_p().view", "models.FM.mlp_p().view", "models.MixedBinary", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "cur_weights.argmax().item", "name1_embedding.size", "name2_embedding.size", "cur_weights.view", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "models.FM.mlp_p", "models.FM.mlp_p", "cur_weights.argmax", "name1_embedding.view", "name2_embedding.view"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "regs", "=", "0", "\n", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "for", "name2", "in", "self", ".", "columns", ":", "\n", "                ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                    ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "else", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "regs", "+=", "self", ".", "reg", "*", "(", "torch", ".", "norm", "(", "name1_embedding", ")", "+", "torch", ".", "norm", "(", "name2_embedding", ")", ")", "\n", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_p", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "", "", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "weighted_loss", ".", "backward", "(", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.FM.genotype": [[583, 585], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"FM\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Plus.__init__": [[587, 590], ["models.FM.__init__", "models.Plus._initialize_alphas"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "Plus", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Plus._initialize_alphas": [[591, 601], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Plus.genotype": [[602, 604], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Plus\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Max.__init__": [[607, 610], ["models.FM.__init__", "models.Max._initialize_alphas"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "Max", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Max._initialize_alphas": [[611, 621], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Max.genotype": [[622, 624], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Max\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Min.__init__": [[626, 629], ["models.FM.__init__", "models.Min._initialize_alphas"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "Min", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Min._initialize_alphas": [[630, 640], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Min.genotype": [[641, 643], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Min\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Concat.__init__": [[645, 648], ["models.FM.__init__", "models.Concat._initialize_alphas"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "FM", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Concat._initialize_alphas": [[649, 659], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.Concat.genotype": [[660, 662], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Concat\"", ",", "0", "", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.constrain": [[27, 31], ["torch.norm", "torch.norm", "torch.norm", "p.data.div_"], "function", ["None"], ["def", "constrain", "(", "p", ")", ":", "\n", "    ", "c", "=", "torch", ".", "norm", "(", "p", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "c", "[", "c", "<", "1", "]", "=", "1.0", "\n", "p", ".", "data", ".", "div_", "(", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.models.MixedBinary": [[32, 35], ["torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "function", ["None"], ["", "def", "MixedBinary", "(", "embedding_p", ",", "embedding_q", ",", "weights", ",", "FC", ")", ":", "\n", "    ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ")", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train": [[4, 18], ["enumerate", "model.genotype", "model.recommend", "rewards_all.append", "model.step", "losses_all.append", "print", "logging.info", "print", "numpy.mean", "sum", "sum"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.recommend", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["import", "pickle", "\n", "\n", "import", "numpy", "as", "np", "\n", "import", "torch", ".", "nn", ".", "functional", "as", "F", "\n", "from", "sklearn", ".", "metrics", "import", "roc_auc_score", ",", "log_loss", "\n", "from", "torch", ".", "utils", ".", "data", "import", "DataLoader", "\n", "\n", "from", "ctr", "import", "TfsDataset", ",", "DirectDataset", ",", "DenseDataset", "\n", "from", "model", "import", "OFM", ",", "OFM_TS", "\n", "from", "utils", "import", "cal_group_auc", ",", "FTRL", "\n", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\"1\"", "\n", "\n", "\n", "def", "get_dataset", "(", "path", ",", "name", ",", "num", "=", "-", "1", ",", "flag", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.Virtue.__init__": [[32, 55], ["torch.Module.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["", "def", "MixedBinary", "(", "embedding_p", ",", "embedding_q", ",", "weights", ",", "FC", ")", ":", "\n", "# return torch.sum(torch.stack([w * fc(OPS[primitive](embedding_p, embedding_q)) \\", "\n", "#                               for w, primitive, fc in zip(weights, PRIMITIVES_BINARY, FC)]), 0)", "\n", "    ", "pos", "=", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "return", "weights", "[", "pos", "]", "*", "FC", "[", "pos", "]", "(", "OPS", "[", "PRIMITIVES_BINARY", "[", "pos", "]", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "\n", "\n", "", "class", "Virtue", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "embedding_num", "=", "12", ",", "ofm", "=", "False", ")", ":", "\n", "        ", "super", "(", "Virtue", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "reg", "=", "reg", "\n", "self", ".", "embedding_mean", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "self", ".", "embedding_std", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "#self.embedding_first_order = nn.ModuleDict({})", "\n", "self", ".", "columns", "=", "[", "\"workclass\"", ",", "\"education\"", ",", "\"marital-status\"", ",", "\"occupation\"", ",", "\"relationship\"", ",", "\"race\"", ",", "\"sex\"", ",", "\"native-country\"", "]", "\n", "\n", "# for name in self.columns:", "\n", "#     self.embedding_first_order[name] = nn.Embedding(embedding_num, 2)", "\n", "\n", "if", "not", "ofm", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "self", ".", "embedding_mean", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n", "self", ".", "embedding_std", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.Virtue2.__init__": [[58, 77], ["torch.Module.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["                ", "temp_mean", "=", "nn", ".", "ModuleList", "(", ")", "\n", "temp_std", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "temp_mean", ".", "append", "(", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", ")", "\n", "temp_std", ".", "append", "(", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", ")", "\n", "", "self", ".", "embedding_mean", "[", "name", "]", "=", "temp_mean", "\n", "self", ".", "embedding_std", "[", "name", "]", "=", "temp_std", "\n", "\n", "", "", "", "", "class", "Virtue2", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "embedding_num", "=", "12", ",", "ofm", "=", "False", ")", ":", "\n", "        ", "super", "(", "Virtue2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "reg", "=", "reg", "\n", "self", ".", "embedding_all", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "self", ".", "columns", "=", "[", "\"workclass\"", ",", "\"education\"", ",", "\"marital-status\"", ",", "\"occupation\"", ",", "\"relationship\"", ",", "\"race\"", ",", "\"sex\"", ",", "\"native-country\"", "]", "\n", "\n", "if", "not", "ofm", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "self", ".", "embedding_all", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.__init__": [[80, 98], ["vartional_model.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "vartional_model.DSNAS_v._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["                ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                    ", "temp", ".", "append", "(", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", ")", "\n", "", "self", ".", "embedding_all", "[", "name", "]", "=", "temp", "\n", "\n", "", "", "", "", "class", "DSNAS_v", "(", "Virtue", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "DSNAS_v", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                        ", "if", "primitive", "==", "'concat'", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v._initialize_alphas": [[99, 118], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "len", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "len"], "methods", ["None"], ["", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "num_op", "=", "len", "(", "self", ".", "columns", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "int", "(", "num_op", "*", "(", "num_op", "-", "1", ")", "/", "2", ")", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.reparameterize": [[119, 123], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "vartional_model.DSNAS_v.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log.numel", "torch.log.numel", "torch.log.numel"], "methods", ["None"], ["", "else", ":", "\n", "            ", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "1", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "self", ".", "_arch_parameters", "=", "[", "self", ".", "log_alpha", "]", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.KL_distance": [[124, 127], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["            ", "self", ".", "fix_arch_index", "=", "{", "}", "\n", "", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.recommend": [[128, 173], ["vartional_model.DSNAS_v.eval", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "vartional_model.DSNAS_v.weights.argmax().item", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "vartional_model.DSNAS_v.add_batch", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "vartional_model.DSNAS_v.fix_arch_index.items", "vartional_model.DSNAS_v.weights.argmax", "vartional_model.MixedBinary", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "vartional_model.DSNAS_v.fix_arch_index.keys", "vartional_model.DSNAS_v.weights[].zero_", "cur_weights.argmax().item", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "cur_weights.view", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "cur_weights.argmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", "\n", "#v = self.rand_array[:std.numel()].reshape(std.shape)", "\n", "v", "=", "torch", ".", "randn", "(", "3000000", ")", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", "\n", "return", "(", "mu", "+", "std", "*", "v", "*", "0.01", ")", "\n", "\n", "# def KL_distance(self, mean1, mean2, std1, std2):", "\n", "#     a = torch.log(std2 / std1) + (std1 * std1 + (mean1 - mean2) * (mean1 - mean2)) / 2 / std2 / std2 - 1.0 / 2.0", "\n", "#     return torch.sum(a)", "\n", "\n", "", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n", "        ", "a", "=", "1", "/", "2", "*", "(", "torch", ".", "log", "(", "torch", ".", "det", "(", "std2", ")", "/", "torch", ".", "det", "(", "std1", ")", ")", "-", "std1", ".", "numel", "(", ")", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", "/", "torch", ".", "square", "(", "std2", ")", "+", "\n", "torch", ".", "sum", "(", "torch", ".", "square", "(", "std1", ")", "/", "torch", ".", "square", "(", "std2", ")", ")", ")", "\n", "return", "a", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n", "self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "", "", "", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.add_batch": [[174, 182], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.step": [[183, 197], ["vartional_model.DSNAS_v.train", "utils.get_data_queue_bandit", "enumerate", "numpy.mean", "optimizer.zero_grad", "vartional_model.DSNAS_v.forward", "losses.append", "optimizer.step", "arch_optimizer.zero_grad", "error_loss.cpu().detach().item", "arch_optimizer.step", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.revised_arch_index": [[198, 216], ["vartional_model.DSNAS_v.fix_arch_index.items", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "range", "torch.softmax", "torch.softmax", "torch.softmax", "argmax_index.size", "torch.argmax.size", "torch.argmax.size", "torch.argmax.size", "vartional_model.DSNAS_v.fix_arch_index.keys", "vartional_model.DSNAS_v.fix_arch_index.keys", "[].item", "max_index[].item", "vartional_model.DSNAS_v.log_alpha.detach().clone", "vartional_model.DSNAS_v.log_alpha.detach().clone", "vartional_model.DSNAS_v.log_alpha.detach", "vartional_model.DSNAS_v.log_alpha.detach"], "methods", ["None"], ["                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "#if epoch < self.args.search_epoch:", "\n", "#    train_epoch = (epoch+1)*5", "\n", "#else:", "\n", "train_epoch", "=", "5", "\n", "for", "k", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "                    ", "arch_optimizer", ".", "zero_grad", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.forward": [[217, 289], ["vartional_model.DSNAS_v._get_weights", "vartional_model.DSNAS_v.revised_arch_index", "vartional_model.DSNAS_v.weights.argmax().item", "sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax.clone().detach", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "vartional_model.DSNAS_v.weights.requires_grad_", "Parallel", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "vartional_model.DSNAS_v.weights.grad.data.sum", "vartional_model.DSNAS_v.log_alpha.grad.data.mul_", "len", "vartional_model.DSNAS_v.fix_arch_index.items", "vartional_model.DSNAS_v.weights.argmax", "names_all.append", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "vartional_model.DSNAS_v.KL_distance", "range", "vartional_model.DSNAS_v.block_reward.view", "vartional_model.DSNAS_v.fix_arch_index.keys", "vartional_model.DSNAS_v.weights[].zero_", "torch.softmax.clone", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "cur_weights.argmax().item", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "vartional_model.DSNAS_v.reparameterize", "delayed", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "len", "vartional_model.DSNAS_v.KL_distance", "cur_weights.view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "cur_weights.argmax", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v._get_weights", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.revised_arch_index", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance"], ["output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ",", "epoch", ",", "search", "=", "True", ")", "\n", "", "else", ":", "\n", "                    ", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ",", "epoch", ",", "search", "=", "False", ")", "\n", "", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "                    ", "arch_optimizer", ".", "step", "(", ")", "\n", "", "", "", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "revised_arch_index", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "                ", "sort_log_alpha", "=", "torch", ".", "topk", "(", "F", ".", "softmax", "(", "self", ".", "log_alpha", ".", "data", ",", "dim", "=", "-", "1", ")", ",", "2", ")", "\n", "argmax_index", "=", "(", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "0", "]", "-", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "1", "]", ">=", "0.10", ")", "\n", "for", "id", "in", "range", "(", "argmax_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "if", "argmax_index", "[", "id", "]", "==", "1", "and", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                        ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "sort_log_alpha", "[", "1", "]", "[", "id", ",", "0", "]", ".", "item", "(", ")", ",", "\n", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "", "", "", "if", "epoch", ">=", "self", ".", "args", ".", "search_epoch", ":", "\n", "#fix the arch\u3002", "\n", "                ", "max_index", "=", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "for", "id", "in", "range", "(", "max_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "if", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                        ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "max_index", "[", "id", "]", ".", "item", "(", ")", ",", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "\n", "", "", "", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "log_alpha", ".", "data", "[", "key", ",", ":", "]", "=", "value_lst", "[", "1", "]", "\n", "\n", "", "", "", "def", "forward", "(", "self", ",", "features", ",", "epoch", ",", "search", ")", ":", "\n", "#self.weights = self._get_weights(self.log_alpha)", "\n", "        ", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "# self.revised_arch_index(epoch)", "\n", "# if self.args.early_fix_arch:", "\n", "#     if len(self.fix_arch_index.keys()) > 0:", "\n", "#         for key, value_lst in self.fix_arch_index.items():", "\n", "#             self.weights[key, :].zero_()", "\n", "#             self.weights[key, value_lst[0]] = 1", "\n", "if", "search", ":", "\n", "            ", "cate_prob", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "self", ".", "cate_prob", "=", "cate_prob", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "loss_alpha", "=", "torch", ".", "log", "(", "\n", "(", "self", ".", "weights", "*", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", ".", "sum", "(", "-", "1", ")", ")", ".", "sum", "(", ")", "\n", "self", ".", "weights", ".", "requires_grad_", "(", ")", "\n", "\n", "", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "from", "sklearn", ".", "externals", ".", "joblib", "import", "Parallel", ",", "delayed", "\n", "names_all", "=", "[", "]", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v._get_weights": [[290, 297], ["torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "names_all", ".", "append", "(", "\n", "[", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "", "", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "MixedBinary", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.arch_parameters": [[298, 300], ["None"], "methods", ["None"], ["inferences", "=", "sum", "(", "res", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.DSNAS_v.genotype": [[301, 312], ["torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.DSNAS_v.log_alpha.argmax().cpu().numpy", "torch.softmax.cpu().detach", "genotype.append", "torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.DSNAS_v.log_alpha.argmax().cpu().numpy", "vartional_model.DSNAS_v.log_alpha.argmax().cpu", "torch.softmax.cpu", "vartional_model.DSNAS_v.log_alpha.argmax().cpu", "vartional_model.DSNAS_v.log_alpha.argmax", "vartional_model.DSNAS_v.log_alpha.argmax"], "methods", ["None"], ["                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "", "", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "kl", "=", "0", "\n", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "if", "not", "self", ".", "args", ".", "ofm", ":", "\n", "                ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.__init__": [[315, 333], ["vartional_model.Virtue2.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "enumerate", "vartional_model.NASP._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ")", "\n", "", "", "", "if", "search", ":", "\n", "            ", "self", ".", "weights", ".", "grad", "=", "torch", ".", "zeros_like", "(", "self", ".", "weights", ")", "\n", "(", "weighted_loss", "+", "loss_alpha", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "self", ".", "block_reward", "=", "self", ".", "weights", ".", "grad", ".", "data", ".", "sum", "(", "-", "1", ")", "\n", "self", ".", "log_alpha", ".", "grad", ".", "data", ".", "mul_", "(", "self", ".", "block_reward", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "loss_alpha", "\n", "", "else", ":", "\n", "            ", "(", "weighted_loss", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n", "", "", "def", "_get_weights", "(", "self", ",", "log_alpha", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "random_sample", ":", "\n", "            ", "uni", "=", "torch", ".", "ones_like", "(", "log_alpha", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "uni", ")", "\n", "", "else", ":", "\n", "            ", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", "=", "F", ".", "softmax", "(", "log_alpha", ",", "dim", "=", "-", "1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP._initialize_alphas": [[334, 353], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "len", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "int", "len", "len"], "methods", ["None"], ["", "return", "m", ".", "sample", "(", ")", "\n", "\n", "", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_arch_parameters", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "genotype", "=", "PRIMITIVES_BINARY", "[", "self", ".", "log_alpha", ".", "argmax", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "genotype", "=", "[", "]", "\n", "for", "index", "in", "self", ".", "log_alpha", ".", "argmax", "(", "axis", "=", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "genotype", ".", "append", "(", "PRIMITIVES_BINARY", "[", "index", "]", ")", "\n", "", "genotype", "=", "\":\"", ".", "join", "(", "genotype", "[", ":", "10", "]", ")", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "[", ":", "10", "]", "\n", "", "return", "genotype", ",", "genotype_p", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n", "", "", "class", "NASP", "(", "Virtue2", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.recommend": [[354, 398], ["vartional_model.NASP.eval", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "vartional_model.NASP.weights.argmax().item", "enumerate", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "vartional_model.NASP.add_batch", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "enumerate", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "vartional_model.NASP.fix_arch_index.items", "vartional_model.NASP.weights.argmax", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "vartional_model.NASP.fix_arch_index.keys", "vartional_model.NASP.weights[].zero_", "vartional_model.MixedBinary", "enumerate", "cur_weights.argmax().item", "vartional_model.NASP.mlp_p().view", "vartional_model.NASP.mlp_q().view", "cur_weights.view", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "name1_embedding.size", "name2_embedding.size", "cur_weights.argmax", "vartional_model.NASP.mlp_p", "vartional_model.NASP.mlp_q", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "name1_embedding.view", "name2_embedding.view", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary"], ["        ", "super", "(", "NASP", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                        ", "if", "primitive", "==", "'concat'", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "num_op", "=", "len", "(", "self", ".", "columns", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "int", "(", "num_op", "*", "(", "num_op", "-", "1", ")", "/", "2", ")", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "1", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "self", ".", "_arch_parameters", "=", "[", "self", ".", "log_alpha", "]", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "self", ".", "fix_arch_index", "=", "{", "}", "\n", "", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.add_batch": [[399, 407], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "", "", "", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.MixedBinary_ofm": [[408, 411], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "methods", ["None"], ["                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.MixedBinary_all": [[412, 415], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "methods", ["None"], ["", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.step": [[416, 433], ["vartional_model.NASP.train", "utils.get_data_queue_bandit", "range", "numpy.mean", "enumerate", "optimizer.zero_grad", "arch_optimizer.zero_grad", "vartional_model.NASP.forward", "losses.append", "optimizer.step", "arch_optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["                        ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.forward": [[434, 494], ["torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "vartional_model.NASP.weights.requires_grad_", "vartional_model.NASP.weights.argmax().item", "enumerate", "sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean.backward", "torch.mean.backward", "torch.mean.backward", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "enumerate", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "vartional_model.NASP.weights.argmax", "Parallel", "Parallel", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "cur_weights.argmax().item", "range", "names_all.append", "names_all.append", "delayed", "delayed", "len", "embedding_name1_all.append", "embedding_name2_all.append", "range", "vartional_model.NASP.mlp_p().view", "vartional_model.NASP.mlp_q().view", "cur_weights.argmax", "len", "embedding_name1_all_temp.append", "embedding_name2_all_temp.append", "vartional_model.NASP.size", "vartional_model.NASP.size", "cur_weights.view", "cur_weights.view", "vartional_model.NASP.mlp_p().view", "vartional_model.NASP.mlp_p().view", "vartional_model.NASP.mlp_p", "vartional_model.NASP.mlp_q", "embedding_name1_all[].size", "embedding_name2_all[].size", "vartional_model.NASP.view", "vartional_model.NASP.view", "vartional_model.NASP.mlp_p", "vartional_model.NASP.mlp_p", "embedding_name1_all[].view", "embedding_name2_all[].view"], "methods", ["None"], ["self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "MixedBinary_ofm", "(", "self", ",", "embedding_p_all", ",", "embedding_q_all", ",", "weights", ",", "FC", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", ",", "embedding_p", ",", "embedding_q", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ",", "embedding_p_all", ",", "embedding_q_all", ")", "]", ")", ",", "0", ")", "\n", "\n", "", "def", "MixedBinary_all", "(", "self", ",", "embedding_p", ",", "embedding_q", ",", "weights", ",", "FC", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ")", "]", ")", ",", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "            ", "train_epoch", "=", "(", "epoch", "+", "1", ")", "*", "5", "\n", "", "else", ":", "\n", "            ", "train_epoch", "=", "1", "\n", "", "for", "k", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ",", "epoch", ",", "search", "=", "True", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "", "", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ",", "epoch", ",", "search", ")", ":", "\n", "        ", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "self", ".", "weights", ".", "requires_grad_", "(", ")", "\n", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "from", "sklearn", ".", "externals", ".", "joblib", "import", "Parallel", ",", "delayed", "\n", "names_all", "=", "[", "]", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "embedding_name1_all", "=", "[", "]", "\n", "embedding_name2_all", "=", "[", "]", "\n", "for", "index_name", "in", "range", "(", "len", "(", "PRIMITIVES_BINARY", ")", ")", ":", "\n", "                            ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "[", "index_name", "]", "(", "features", "[", "name1", "]", ")", "\n", "embedding_name1_all", ".", "append", "(", "name1_embedding", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.arch_parameters": [[495, 497], ["None"], "methods", ["None"], ["name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "[", "index_name", "]", "(", "features", "[", "name2", "]", ")", "\n", "embedding_name2_all", ".", "append", "(", "name2_embedding", ")", "\n", "", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP.genotype": [[498, 509], ["torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.NASP.log_alpha.argmax().cpu().numpy", "torch.softmax.cpu().detach", "genotype.append", "torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.NASP.log_alpha.argmax().cpu().numpy", "vartional_model.NASP.log_alpha.argmax().cpu", "torch.softmax.cpu", "vartional_model.NASP.log_alpha.argmax().cpu", "vartional_model.NASP.log_alpha.argmax", "vartional_model.NASP.log_alpha.argmax"], "methods", ["None"], ["                        ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                            ", "embedding_name1_all_temp", "=", "[", "]", "\n", "embedding_name2_all_temp", "=", "[", "]", "\n", "for", "index_temp", "in", "range", "(", "len", "(", "embedding_name1_all", ")", ")", ":", "\n", "                                ", "embedding_name1_all_temp", ".", "append", "(", "self", ".", "mlp_p", "(", "embedding_name1_all", "[", "index_temp", "]", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "embedding_name1_all", "[", "index_temp", "]", ".", "size", "(", ")", ")", ")", "\n", "embedding_name2_all_temp", ".", "append", "(", "self", ".", "mlp_p", "(", "embedding_name2_all", "[", "index_temp", "]", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "embedding_name2_all", "[", "index_temp", "]", ".", "size", "(", ")", ")", ")", "\n", "", "embedding_name1_all", "=", "embedding_name1_all_temp", "\n", "embedding_name2_all", "=", "embedding_name2_all_temp", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.__init__": [[512, 531], ["vartional_model.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "enumerate", "vartional_model.NASP_v._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "names_all", ".", "append", "(", "[", "embedding_name1_all", ",", "embedding_name2_all", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "names_all", ".", "append", "(", "\n", "[", "name1_embedding", ",", "name2_embedding", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "", "", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "            ", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "self", ".", "MixedBinary_ofm", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "", "else", ":", "\n", "            ", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "self", ".", "MixedBinary_all", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "", "inferences", "=", "sum", "(", "res", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "", "", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "weighted_loss", ".", "backward", "(", ")", "\n", "self", ".", "log_alpha", ".", "grad", "=", "self", ".", "weights", ".", "grad", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v._initialize_alphas": [[532, 551], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "len", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_().requires_grad_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros().normal_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "int", "len", "len"], "methods", ["None"], ["\n", "", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_arch_parameters", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "genotype", "=", "PRIMITIVES_BINARY", "[", "self", ".", "log_alpha", ".", "argmax", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "genotype", "=", "[", "]", "\n", "for", "index", "in", "self", ".", "log_alpha", ".", "argmax", "(", "axis", "=", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "genotype", ".", "append", "(", "PRIMITIVES_BINARY", "[", "index", "]", ")", "\n", "", "genotype", "=", "\":\"", ".", "join", "(", "genotype", "[", ":", "10", "]", ")", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "[", ":", "10", "]", "\n", "", "return", "genotype", ",", "genotype_p", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n", "\n", "", "", "class", "NASP_v", "(", "Virtue", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.reparameterize": [[552, 556], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "vartional_model.NASP_v.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log.numel", "torch.log.numel", "torch.log.numel"], "methods", ["None"], ["        ", "super", "(", "NASP_v", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.KL_distance": [[557, 560], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["                    ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                        ", "if", "primitive", "==", "'concat'", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.recommend": [[561, 608], ["vartional_model.NASP_v.eval", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "vartional_model.NASP_v.weights.argmax().item", "enumerate", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "vartional_model.NASP_v.add_batch", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "enumerate", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "vartional_model.NASP_v.weights.argmax", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "vartional_model.MixedBinary", "enumerate", "cur_weights.argmax().item", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.mlp_p().view", "vartional_model.NASP_v.mlp_q().view", "cur_weights.view", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "vartional_model.NASP_v.size", "vartional_model.NASP_v.size", "cur_weights.argmax", "vartional_model.NASP_v.mlp_p", "vartional_model.NASP_v.mlp_q", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "vartional_model.NASP_v.view", "vartional_model.NASP_v.view", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["", "else", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "num_op", "=", "len", "(", "self", ".", "columns", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "int", "(", "num_op", "*", "(", "num_op", "-", "1", ")", "/", "2", ")", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "log_alpha", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "1", ",", "len", "(", "PRIMITIVES_BINARY", ")", ")", ")", ".", "normal_", "(", "self", ".", "args", ".", "loc_mean", ",", "self", ".", "args", ".", "loc_std", ")", ".", "requires_grad_", "(", ")", ")", "\n", "", "self", ".", "_arch_parameters", "=", "[", "self", ".", "log_alpha", "]", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "self", ".", "fix_arch_index", "=", "{", "}", "\n", "", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ")", ":", "\n", "        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", "\n", "v", "=", "self", ".", "rand_array", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", "\n", "return", "(", "mu", "+", "std", "*", "v", "*", "0.01", ")", "\n", "\n", "", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n", "        ", "a", "=", "torch", ".", "log", "(", "std2", "/", "std1", ")", "+", "(", "std1", "*", "std1", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", ")", "/", "2", "/", "std2", "/", "std2", "-", "1.0", "/", "2.0", "\n", "return", "torch", ".", "sum", "(", "a", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "len", "(", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "                ", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "weights", "[", "key", ",", ":", "]", ".", "zero_", "(", ")", "\n", "self", ".", "weights", "[", "key", ",", "value_lst", "[", "0", "]", "]", "=", "1", "\n", "", "", "", "inferences", "=", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.add_batch": [[609, 617], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.MixedBinary_ofm": [[662, 665], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "methods", ["None"], ["", "def", "MixedBinary_ofm", "(", "self", ",", "embedding_p_all", ",", "embedding_q_all", ",", "weights", ",", "FC", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", ",", "embedding_p", ",", "embedding_q", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ",", "embedding_p_all", ",", "embedding_q_all", ")", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.MixedBinary_all": [[618, 621], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "methods", ["None"], ["max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.step": [[622, 646], ["vartional_model.NASP_v.train", "utils.get_data_queue_bandit", "range", "numpy.mean", "enumerate", "optimizer.zero_grad", "arch_optimizer.zero_grad", "vartional_model.NASP_v.forward", "losses.append", "optimizer.step", "arch_optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.revised_arch_index": [[647, 665], ["vartional_model.NASP_v.fix_arch_index.items", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "range", "torch.softmax", "torch.softmax", "torch.softmax", "argmax_index.size", "torch.argmax.size", "torch.argmax.size", "torch.argmax.size", "vartional_model.NASP_v.fix_arch_index.keys", "vartional_model.NASP_v.fix_arch_index.keys", "[].item", "max_index[].item", "vartional_model.NASP_v.log_alpha.detach().clone", "vartional_model.NASP_v.log_alpha.detach().clone", "vartional_model.NASP_v.log_alpha.detach", "vartional_model.NASP_v.log_alpha.detach"], "methods", ["None"], ["a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "MixedBinary_ofm", "(", "self", ",", "embedding_p_all", ",", "embedding_q_all", ",", "weights", ",", "FC", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", ",", "embedding_p", ",", "embedding_q", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ",", "embedding_p_all", ",", "embedding_q_all", ")", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.forward": [[666, 731], ["torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "vartional_model.NASP_v.weights.requires_grad_", "vartional_model.NASP_v.weights.argmax().item", "enumerate", "sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "torch.argmax().view", "enumerate", "Parallel", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "vartional_model.NASP_v.weights.argmax", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "vartional_model.NASP_v.KL_distance", "range", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "names_all.append", "delayed", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "len", "vartional_model.NASP_v.KL_distance", "cur_weights.argmax().item", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.reparameterize", "vartional_model.NASP_v.mlp_p().view", "vartional_model.NASP_v.mlp_q().view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "vartional_model.NASP_v.size", "vartional_model.NASP_v.size", "cur_weights.view", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "cur_weights.argmax", "vartional_model.NASP_v.mlp_p", "vartional_model.NASP_v.mlp_q", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "vartional_model.NASP_v.view", "vartional_model.NASP_v.view"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["", "def", "MixedBinary_all", "(", "self", ",", "embedding_p", ",", "embedding_q", ",", "weights", ",", "FC", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "[", "w", "*", "fc", "(", "OPS", "[", "primitive", "]", "(", "embedding_p", ",", "embedding_q", ")", ")", "for", "w", ",", "primitive", ",", "fc", "in", "zip", "(", "weights", ",", "PRIMITIVES_BINARY", ",", "FC", ")", "]", ")", ",", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "            ", "train_epoch", "=", "(", "epoch", "+", "1", ")", "*", "5", "\n", "", "else", ":", "\n", "            ", "train_epoch", "=", "1", "\n", "", "for", "k", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "arch_optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ",", "epoch", ",", "search", "=", "True", ")", "\n", "# if epoch < self.args.search_epoch:", "\n", "#     arch_optimizer.zero_grad()", "\n", "#     output, error_loss, loss_alpha = self.forward(features, epoch, search=True)", "\n", "# else:", "\n", "#     output, error_loss, loss_alpha = self.forward(features, epoch, search=False)", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "arch_optimizer", ".", "step", "(", ")", "\n", "# if epoch < self.args.search_epoch:", "\n", "#     arch_optimizer.step()", "\n", "", "", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "revised_arch_index", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "early_fix_arch", ":", "\n", "            ", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "                ", "sort_log_alpha", "=", "torch", ".", "topk", "(", "F", ".", "softmax", "(", "self", ".", "log_alpha", ".", "data", ",", "dim", "=", "-", "1", ")", ",", "2", ")", "\n", "argmax_index", "=", "(", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "0", "]", "-", "sort_log_alpha", "[", "0", "]", "[", ":", ",", "1", "]", ">=", "0.10", ")", "\n", "for", "id", "in", "range", "(", "argmax_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "if", "argmax_index", "[", "id", "]", "==", "1", "and", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                        ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "sort_log_alpha", "[", "1", "]", "[", "id", ",", "0", "]", ".", "item", "(", ")", ",", "\n", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "", "", "", "if", "epoch", ">=", "self", ".", "args", ".", "search_epoch", ":", "\n", "#fix the arch\u3002", "\n", "                ", "max_index", "=", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "for", "id", "in", "range", "(", "max_index", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "if", "id", "not", "in", "self", ".", "fix_arch_index", ".", "keys", "(", ")", ":", "\n", "                        ", "self", ".", "fix_arch_index", "[", "id", "]", "=", "[", "max_index", "[", "id", "]", ".", "item", "(", ")", ",", "self", ".", "log_alpha", ".", "detach", "(", ")", ".", "clone", "(", ")", "[", "id", ",", ":", "]", "]", "\n", "\n", "", "", "", "for", "key", ",", "value_lst", "in", "self", ".", "fix_arch_index", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "log_alpha", ".", "data", "[", "key", ",", ":", "]", "=", "value_lst", "[", "1", "]", "\n", "\n", "", "", "", "def", "forward", "(", "self", ",", "features", ",", "epoch", ",", "search", ")", ":", "\n", "        ", "self", ".", "weights", "=", "torch", ".", "zeros_like", "(", "self", ".", "log_alpha", ")", ".", "scatter_", "(", "1", ",", "torch", ".", "argmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "self", ".", "weights", ".", "requires_grad_", "(", ")", "\n", "regs", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "from", "sklearn", ".", "externals", ".", "joblib", "import", "Parallel", ",", "delayed", "\n", "names_all", "=", "[", "]", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.arch_parameters": [[732, 734], ["None"], "methods", ["None"], ["                        ", "embedding_name1_all", "=", "[", "]", "\n", "embedding_name2_all", "=", "[", "]", "\n", "for", "index_name", "in", "range", "(", "len", "(", "PRIMITIVES_BINARY", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.NASP_v.genotype": [[735, 746], ["torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.NASP_v.log_alpha.argmax().cpu().numpy", "torch.softmax.cpu().detach", "genotype.append", "torch.softmax", "torch.softmax", "torch.softmax", "vartional_model.NASP_v.log_alpha.argmax().cpu().numpy", "vartional_model.NASP_v.log_alpha.argmax().cpu", "torch.softmax.cpu", "vartional_model.NASP_v.log_alpha.argmax().cpu", "vartional_model.NASP_v.log_alpha.argmax", "vartional_model.NASP_v.log_alpha.argmax"], "methods", ["None"], ["                            ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "index_name", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "index_name", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "embedding_name1_all", ".", "append", "(", "name1_embedding", ")", "\n", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "index_name", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "index_name", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "embedding_name2_all", ".", "append", "(", "name2_embedding", ")", "\n", "", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.__init__": [[750, 769], ["vartional_model.Virtue.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "enumerate", "vartional_model.MULTIPLY_v._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "regs", "+=", "1e-5", "*", "(", "torch", ".", "norm", "(", "name1_embedding", ")", "+", "torch", ".", "norm", "(", "name2_embedding", ")", ")", "\n", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                            ", "embedding_name1_all_temp", "=", "[", "]", "\n", "embedding_name2_all_temp", "=", "[", "]", "\n", "for", "index_temp", "in", "range", "(", "len", "(", "embedding_name1_all", ")", ")", ":", "\n", "                                ", "embedding_name1_all_temp", ".", "append", "(", "self", ".", "mlp_p", "(", "embedding_name1_all", "[", "index_temp", "]", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "embedding_name1_all", "[", "index_temp", "]", ".", "size", "(", ")", ")", ")", "\n", "embedding_name2_all_temp", ".", "append", "(", "self", ".", "mlp_p", "(", "embedding_name2_all", "[", "index_temp", "]", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "embedding_name2_all", "[", "index_temp", "]", ".", "size", "(", ")", ")", ")", "\n", "", "embedding_name1_all", "=", "embedding_name1_all_temp", "\n", "embedding_name2_all", "=", "embedding_name2_all_temp", "\n", "", "else", ":", "\n", "                            ", "name1_embedding", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "names_all", ".", "append", "(", "[", "embedding_name1_all", ",", "embedding_name2_all", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "names_all", ".", "append", "(", "\n", "[", "name1_embedding", ",", "name2_embedding", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "", "", "", "if", "self", ".", "args", ".", "ofm", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v._initialize_alphas": [[770, 782], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["            ", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "self", ".", "MixedBinary_ofm", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "", "else", ":", "\n", "            ", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "self", ".", "MixedBinary_all", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "", "inferences", "=", "sum", "(", "res", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "for", "name", "in", "self", ".", "columns", ":", "\n", "                ", "inferences", "+=", "self", ".", "embedding_first_order", "[", "name", "]", "(", "features", "[", "name", "]", ")", "\n", "", "", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "kl", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.reparameterize": [[783, 787], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "vartional_model.MULTIPLY_v.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log.numel", "torch.log.numel", "torch.log.numel"], "methods", ["None"], ["for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "if", "not", "self", ".", "args", ".", "ofm", ":", "\n", "                ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.KL_distance": [[788, 791], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "", "else", ":", "\n", "                ", "for", "index", "in", "range", "(", "len", "(", "PRIMITIVES_BINARY", ")", ")", ":", "\n", "                    ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", "[", "index", "]", ".", "weight", ",", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.recommend": [[792, 832], ["vartional_model.MULTIPLY_v.eval", "vartional_model.MULTIPLY_v.weights.argmax().item", "enumerate", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "vartional_model.MULTIPLY_v.add_batch", "enumerate", "vartional_model.MULTIPLY_v.weights.argmax", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "vartional_model.MixedBinary", "enumerate", "cur_weights.argmax().item", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "cur_weights.view", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "cur_weights.argmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", "[", "index", "]", ".", "weight", ")", ")", "\n", "\n", "", "", "", "(", "weighted_loss", "+", "regs", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "self", ".", "log_alpha", ".", "grad", "=", "self", ".", "weights", ".", "grad", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n", "", "def", "arch_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_arch_parameters", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "args", ".", "multi_operation", ":", "\n", "            ", "genotype", "=", "PRIMITIVES_BINARY", "[", "self", ".", "log_alpha", ".", "argmax", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "genotype", "=", "[", "]", "\n", "for", "index", "in", "self", ".", "log_alpha", ".", "argmax", "(", "axis", "=", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "genotype", ".", "append", "(", "PRIMITIVES_BINARY", "[", "index", "]", ")", "\n", "", "genotype", "=", "\":\"", ".", "join", "(", "genotype", "[", ":", "10", "]", ")", "\n", "genotype_p", "=", "F", ".", "softmax", "(", "self", ".", "log_alpha", ",", "dim", "=", "-", "1", ")", "[", ":", "10", "]", "\n", "", "return", "genotype", ",", "genotype_p", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n", "", "", "class", "MULTIPLY_v", "(", "Virtue", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "MULTIPLY_v", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ")", "\n", "self", ".", "FC", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "temp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "PRIMITIVES_BINARY", ":", "\n", "                        ", "if", "primitive", "==", "'concat'", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                            ", "temp", ".", "append", "(", "nn", ".", "Linear", "(", "embedding_dim", ",", "2", ",", "bias", "=", "False", ")", ")", "\n", "", "", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "temp", "\n", "\n", "", "", "", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.add_batch": [[833, 841], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.step": [[842, 857], ["vartional_model.MULTIPLY_v.train", "utils.get_data_queue_bandit", "range", "numpy.mean", "enumerate", "optimizer.zero_grad", "vartional_model.MULTIPLY_v.forward", "losses.append", "optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ")", ":", "\n", "        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", "\n", "v", "=", "self", ".", "rand_array", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", "\n", "return", "(", "mu", "+", "std", "*", "v", "*", "0.01", ")", "\n", "\n", "", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n", "        ", "a", "=", "torch", ".", "log", "(", "std2", "/", "std1", ")", "+", "(", "std1", "*", "std1", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", ")", "/", "2", "/", "std2", "/", "std2", "-", "1.0", "/", "2.0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.forward": [[858, 912], ["vartional_model.MULTIPLY_v.weights.argmax().item", "enumerate", "sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "enumerate", "Parallel", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "vartional_model.MULTIPLY_v.weights.argmax", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "vartional_model.MULTIPLY_v.KL_distance", "vartional_model.MULTIPLY_v.KL_distance", "names_all.append", "delayed", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "cur_weights.argmax().item", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "vartional_model.MULTIPLY_v.reparameterize", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "cur_weights.view", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "cur_weights.argmax"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["return", "torch", ".", "sum", "(", "a", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n", "cur_index", "=", "0", "\n", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "inferences", "+=", "MixedBinary", "(", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", ")", "\n", "# if self.args.first_order:", "\n", "#     for name in self.columns:", "\n", "#         inferences += self.embedding_first_order[name](features[name])", "\n", "", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MULTIPLY_v.genotype": [[913, 915], ["None"], "methods", ["None"], ["", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MAX_v.__init__": [[917, 919], ["vartional_model.MULTIPLY_v.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "if", "epoch", "<", "10", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MAX_v._initialize_alphas": [[920, 932], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["            ", "train_epoch", "=", "(", "epoch", "+", "1", ")", "*", "5", "\n", "", "else", ":", "\n", "            ", "train_epoch", "=", "1", "\n", "", "for", "i", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "regs", "=", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MAX_v.genotype": [[933, 935], ["None"], "methods", ["None"], ["inferences", "=", "0", "\n", "max_index", "=", "self", ".", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_weights", "=", "self", ".", "weights", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.PLUS_v.__init__": [[937, 939], ["vartional_model.MULTIPLY_v.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["\n", "from", "sklearn", ".", "externals", ".", "joblib", "import", "Parallel", ",", "delayed", "\n", "names_all", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.PLUS_v._initialize_alphas": [[940, 952], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "if", "self", ".", "args", ".", "multi_operation", ":", "\n", "                        ", "cur_weights", "=", "self", ".", "weights", "[", "cur_index", "]", "\n", "max_index", "=", "cur_weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "cur_index", "+=", "1", "\n", "", "if", "self", ".", "args", ".", "ofm", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "[", "max_index", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "[", "max_index", "]", "(", "features", "[", "name2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.PLUS_v.genotype": [[953, 955], ["None"], "methods", ["None"], ["name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MIN_v.__init__": [[957, 959], ["vartional_model.MULTIPLY_v.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MIN_v._initialize_alphas": [[960, 972], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "", "if", "self", ".", "args", ".", "trans", ":", "\n", "                        ", "name1_embedding_trans", "=", "self", ".", "mlp_p", "(", "name1_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name1_embedding", ".", "size", "(", ")", ")", "\n", "name2_embedding_trans", "=", "self", ".", "mlp_q", "(", "name2_embedding", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "view", "(", "name2_embedding", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "name1_embedding_trans", "=", "name1_embedding", "\n", "name2_embedding_trans", "=", "name2_embedding", "\n", "", "names_all", ".", "append", "(", "\n", "[", "name1_embedding_trans", ",", "name2_embedding_trans", ",", "cur_weights", ".", "view", "(", "-", "1", ",", ")", ",", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "]", ")", "\n", "", "", "", "res", "=", "Parallel", "(", "n_jobs", "=", "8", ",", "backend", "=", "\"threading\"", ")", "(", "\n", "delayed", "(", "MixedBinary", ")", "(", "para1", ",", "para2", ",", "para3", ",", "para4", ")", "for", "para1", ",", "para2", ",", "para3", ",", "para4", "in", "names_all", ")", "\n", "inferences", "=", "sum", "(", "res", ")", "\n", "# if self.args.first_order:", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MIN_v.genotype": [[973, 975], ["None"], "methods", ["None"], ["#     for name in self.columns:", "\n", "#         inferences += self.embedding_first_order[name](features[name])", "\n", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.CONCAT_v.__init__": [[977, 979], ["vartional_model.MULTIPLY_v.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["kl", "=", "0", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "if", "not", "self", ".", "args", ".", "ofm", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.CONCAT_v._initialize_alphas": [[980, 992], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["                ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "", "else", ":", "\n", "                ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "\n", "", "", "(", "weighted_loss", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.CONCAT_v.genotype": [[993, 995], ["None"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"FM_v\"", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.constrain": [[27, 31], ["torch.norm", "torch.norm", "torch.norm", "p.data.div_"], "function", ["None"], ["def", "constrain", "(", "p", ")", ":", "\n", "    ", "c", "=", "torch", ".", "norm", "(", "p", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "c", "[", "c", "<", "1", "]", "=", "1.0", "\n", "p", ".", "data", ".", "div_", "(", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.vartional_model.MixedBinary": [[26, 29], ["torch.sum", "torch.sum", "torch.sum", "torch.stack", "torch.stack", "torch.stack", "fc", "zip"], "function", ["None"], ["\n", "def", "constrain", "(", "p", ")", ":", "\n", "    ", "c", "=", "torch", ".", "norm", "(", "p", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "c", "[", "c", "<", "1", "]", "=", "1.0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Virtue_v.__init__": [[30, 52], ["torch.Module.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "embedding_num", "=", "12", ",", "ofm", "=", "False", ",", "first_order", "=", "False", ")", ":", "\n", "        ", "super", "(", "Virtue_v", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "reg", "=", "reg", "\n", "self", ".", "embedding_mean", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "self", ".", "embedding_std", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "if", "first_order", ":", "\n", "            ", "self", ".", "embedding_first_order", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "", "self", ".", "columns", "=", "[", "\"workclass\"", ",", "\"education\"", ",", "\"marital-status\"", ",", "\"occupation\"", ",", "\"relationship\"", ",", "\"race\"", ",", "\"sex\"", ",", "\"native-country\"", "]", "\n", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "self", ".", "embedding_mean", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n", "self", ".", "embedding_std", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n", "if", "first_order", ":", "\n", "                ", "self", ".", "embedding_first_order", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "1", ")", "\n", "\n", "", "", "self", ".", "embedding_action", "=", "nn", ".", "Embedding", "(", "2", ",", "embedding_dim", ")", "\n", "if", "first_order", ":", "\n", "            ", "self", ".", "embedding_action_first_order", "=", "nn", ".", "Embedding", "(", "2", ",", "1", ")", "\n", "\n", "", "", "", "class", "Virtue", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "embedding_num", "=", "12", ",", "ofm", "=", "False", ",", "first_order", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Virtue.__init__": [[55, 75], ["torch.Module.__init__", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__"], ["self", ".", "reg", "=", "reg", "\n", "self", ".", "embedding_all", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "if", "first_order", ":", "\n", "            ", "self", ".", "embedding_first_order", "=", "nn", ".", "ModuleDict", "(", "{", "}", ")", "\n", "", "self", ".", "columns", "=", "[", "\"workclass\"", ",", "\"education\"", ",", "\"marital-status\"", ",", "\"occupation\"", ",", "\"relationship\"", ",", "\"race\"", ",", "\"sex\"", ",", "\"native-country\"", "]", "\n", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "self", ".", "embedding_all", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "embedding_dim", ")", "\n", "if", "first_order", ":", "\n", "                ", "self", ".", "embedding_first_order", "[", "name", "]", "=", "nn", ".", "Embedding", "(", "embedding_num", ",", "1", ")", "\n", "\n", "", "", "self", ".", "embedding_action", "=", "nn", ".", "Embedding", "(", "2", ",", "embedding_dim", ")", "\n", "if", "first_order", ":", "\n", "            ", "self", ".", "embedding_action_first_order", "=", "nn", ".", "Embedding", "(", "2", ",", "1", ")", "\n", "\n", "", "", "", "class", "FM_v", "(", "Virtue_v", ")", ":", "\n", "    ", "\"\"\"\n    FM with EE\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.__init__": [[81, 89], ["baseline.Virtue_v.__init__", "baseline.FM_v._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1.0", "]", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v._initialize_alphas": [[90, 94], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", "\n", "v", "=", "self", ".", "rand_array", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", "\n", "return", "(", "mu", "+", "std", "*", "v", "*", "0.01", ")", "\n", "\n", "", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.reparameterize": [[95, 99], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "baseline.FM_v.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log.numel", "torch.log.numel", "torch.log.numel"], "methods", ["None"], ["        ", "a", "=", "torch", ".", "log", "(", "std2", "/", "std1", ")", "+", "(", "std1", "*", "std1", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", ")", "/", "2", "/", "std2", "/", "std2", "-", "1.0", "/", "2.0", "\n", "return", "torch", ".", "sum", "(", "a", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.KL_distance": [[100, 103], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["inferences", "=", "0", "\n", "inferences_0", "=", "0", "\n", "inferences_1", "=", "0", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.recommend": [[104, 143], ["baseline.FM_v.eval", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "baseline.FM_v.add_batch", "enumerate", "baseline.FM_v.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v.embedding_action_first_order", "baseline.FM_v.embedding_action_first_order", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "baseline.FM_v.reparameterize", "baseline.FM_v.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v.embedding_action", "baseline.FM_v.embedding_action", "enumerate", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "#inferences_0 += torch.sum(name1_embedding*name2_embedding, dim=1, keepdim=True)", "\n", "#inferences_1 += torch.sum(name1_embedding*name2_embedding, dim=1, keepdim=True)", "\n", "inferences", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "name2_embedding", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "", "", "inferences_0", "=", "0", "# inferences.clone()  # action 0", "\n", "inferences_1", "=", "0", "# inferences.clone()  # action_1", "\n", "#features with action", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.add_batch": [[144, 152], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.step": [[153, 168], ["baseline.FM_v.train", "utils.get_data_queue_bandit", "range", "numpy.mean", "enumerate", "optimizer.zero_grad", "baseline.FM_v.forward", "losses.append", "optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "            ", "train_epoch", "=", "(", "epoch", "+", "1", ")", "*", "5", "\n", "", "else", ":", "\n", "            ", "train_epoch", "=", "1", "\n", "", "for", "k", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "", "print", "(", "self", ".", "embedding_mean", "[", "\"workclass\"", "]", "(", "torch", ".", "LongTensor", "(", "[", "[", "1", "]", "]", ")", ")", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.forward": [[169, 214], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "enumerate", "baseline.FM_v.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v.embedding_action_first_order", "baseline.FM_v.embedding_action_first_order", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v.KL_distance", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "baseline.FM_v.reparameterize", "baseline.FM_v.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v.embedding_action", "baseline.FM_v.embedding_action", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["        ", "regs", "=", "0", "\n", "inferences", "=", "0", "\n", "inferences_0", "=", "0", "\n", "inferences_1", "=", "0", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "#inferences_0 += torch.sum(name1_embedding * name2_embedding, dim=1, keepdim=True)", "\n", "#inferences_1 += torch.sum(name1_embedding * name2_embedding, dim=1, keepdim=True)", "\n", "inferences", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "name2_embedding", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "# features with action", "\n", "", "", "", "inferences_0", "=", "0", "# inferences.clone()  # action 0", "\n", "inferences_1", "=", "0", "# inferences.clone()  # action_1", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "kl", "=", "0", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "\n", "", "(", "weighted_loss", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v.genotype": [[215, 217], ["None"], "methods", ["None"], ["return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.__init__": [[224, 232], ["baseline.Virtue.__init__", "baseline.FM._initialize_alphas", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["\n", "\n", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "super", "(", "FM", ",", "self", ")", ".", "__init__", "(", "embedding_dim", ",", "reg", ",", "ofm", "=", "args", ".", "ofm", ",", "embedding_num", "=", "args", ".", "embedding_num", ",", "first_order", "=", "args", ".", "first_order", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "#initialize contextual infos", "\n", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM._initialize_alphas": [[233, 237], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1.0", "]", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.recommend": [[238, 275], ["baseline.FM.eval", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "baseline.FM.add_batch", "enumerate", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM.embedding_action_first_order", "baseline.FM.embedding_action_first_order", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM.embedding_action", "baseline.FM.embedding_action", "enumerate", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch"], ["self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "inferences", "=", "0", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "inferences", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "name2_embedding", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "", "", "inferences_0", "=", "0", "#inferences.clone()  # action 0", "\n", "inferences_1", "=", "0", "#inferences.clone()  # action_1", "\n", "\n", "#features with action", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.add_batch": [[276, 284], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.step": [[285, 300], ["baseline.FM.train", "utils.get_data_queue_bandit", "range", "numpy.mean", "enumerate", "optimizer.zero_grad", "baseline.FM.forward", "losses.append", "optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "if", "epoch", "<", "self", ".", "args", ".", "search_epoch", ":", "\n", "            ", "train_epoch", "=", "(", "epoch", "+", "1", ")", "*", "5", "\n", "", "else", ":", "\n", "            ", "train_epoch", "=", "1", "\n", "", "for", "k", "in", "range", "(", "train_epoch", ")", ":", "\n", "            ", "for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "", "print", "(", "self", ".", "embedding_all", "[", "\"workclass\"", "]", "(", "torch", ".", "LongTensor", "(", "[", "[", "1", "]", "]", ")", ")", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.forward": [[301, 336], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean.backward", "torch.mean.backward", "torch.mean.backward", "enumerate", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM.embedding_action_first_order", "baseline.FM.embedding_action_first_order", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM.embedding_action", "baseline.FM.embedding_action", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["        ", "regs", "=", "0", "\n", "inferences", "=", "0", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name2_embedding", "=", "self", ".", "embedding_all", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "inferences", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "name2_embedding", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "# features with action", "\n", "", "", "", "inferences_0", "=", "0", "#inferences.clone()  # action 0", "\n", "inferences_1", "=", "0", "#inferences.clone()  # action_1", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding", "=", "self", ".", "embedding_all", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "weighted_loss", ".", "backward", "(", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"FM\"", ",", "0", "\n", "\n", "", "", "class", "FM_v2", "(", "Virtue_v", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM.genotype": [[337, 339], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.__init__": [[344, 357], ["baseline.Virtue_v.__init__", "baseline.FM_v2._initialize_alphas", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "enumerate", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas"], ["for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "=", "nn", ".", "Linear", "(", "embedding_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "#initialize contextual infos", "\n", "", "", "", "self", ".", "contexts", "=", "{", "}", "\n", "self", ".", "pos_weights", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "\n", "", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1.0", "]", ")", "\n", "self", ".", "mlp_p", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2._initialize_alphas": [[358, 370], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "mlp_q", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "8", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "8", ",", "1", ")", ")", "\n", "self", ".", "weights", "=", "Variable", "(", "torch", ".", "Tensor", "(", "[", "0.0", ",", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ")", "\n", "self", ".", "rand_array", "=", "torch", ".", "randn", "(", "3000000", ")", "\n", "\n", "", "def", "reparameterize", "(", "self", ",", "mu", ",", "std", ")", ":", "\n", "        ", "std", "=", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "std", ")", ")", "\n", "v", "=", "self", ".", "rand_array", "[", ":", "std", ".", "numel", "(", ")", "]", ".", "reshape", "(", "std", ".", "shape", ")", "\n", "return", "(", "mu", "+", "std", "*", "v", "*", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize": [[371, 375], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "baseline.FM_v2.rand_array[].reshape", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log.numel", "torch.log.numel", "torch.log.numel"], "methods", ["None"], ["", "def", "KL_distance", "(", "self", ",", "mean1", ",", "mean2", ",", "std1", ",", "std2", ")", ":", "\n", "        ", "a", "=", "torch", ".", "log", "(", "std2", "/", "std1", ")", "+", "(", "std1", "*", "std1", "+", "(", "mean1", "-", "mean2", ")", "*", "(", "mean1", "-", "mean2", ")", ")", "/", "2", "/", "std2", "/", "std2", "-", "1.0", "/", "2.0", "\n", "return", "torch", ".", "sum", "(", "a", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance": [[376, 379], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["        ", "self", ".", "eval", "(", ")", "\n", "inferences", "=", "0", "\n", "inferences_0", "=", "0", "\n", "inferences_1", "=", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.recommend": [[380, 421], ["baseline.FM_v2.eval", "enumerate", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "baseline.FM_v2.add_batch", "enumerate", "baseline.FM_v2.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v2.embedding_action_first_order", "baseline.FM_v2.embedding_action_first_order", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "baseline.FM_v2.reparameterize", "baseline.FM_v2.reparameterize", "baseline.FM_v2.embedding_action", "baseline.FM_v2.embedding_action", "enumerate", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "inferences", "+=", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "(", "name1_embedding", "*", "name2_embedding", ")", "\n", "", "", "", "inferences_0", "=", "inferences", ".", "clone", "(", ")", "# action 0", "\n", "inferences_1", "=", "inferences", ".", "clone", "(", ")", "# action_1", "\n", "#features with action", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "torch", ".", "argmax", "(", "inferences", ",", "dim", "=", "1", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "add_batch", "(", "features", ",", "pos_weights", ")", "\n", "return", "reward", "\n", "\n", "", "def", "add_batch", "(", "self", ",", "features", ",", "pos_weights", ")", ":", "\n", "        ", "for", "index", "in", "features", ":", "\n", "            ", "if", "index", "in", "self", ".", "contexts", ":", "\n", "                ", "temp", "=", "self", ".", "contexts", "[", "index", "]", "\n", "self", ".", "contexts", "[", "index", "]", "=", "torch", ".", "cat", "(", "[", "temp", ",", "features", "[", "index", "]", "]", ",", "dim", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.add_batch": [[422, 430], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "else", ":", "\n", "                ", "self", ".", "contexts", "[", "index", "]", "=", "features", "[", "index", "]", "\n", "", "", "self", ".", "pos_weights", "=", "torch", ".", "cat", "(", "[", "self", ".", "pos_weights", ",", "pos_weights", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "step", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "losses", "=", "[", "]", "\n", "train_bandit", "=", "utils", ".", "get_data_queue_bandit", "(", "self", ".", "args", ",", "self", ".", "contexts", ",", "self", ".", "pos_weights", ")", "\n", "cnt", "=", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.step": [[431, 444], ["baseline.FM_v2.train", "utils.get_data_queue_bandit", "enumerate", "print", "numpy.mean", "optimizer.zero_grad", "baseline.FM_v2.forward", "losses.append", "optimizer.step", "error_loss.cpu().detach().item", "error_loss.cpu().detach", "error_loss.cpu"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step"], ["for", "step", ",", "features", "in", "enumerate", "(", "train_bandit", ")", ":", "\n", "            ", "cnt", "+=", "1", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "error_loss", ",", "loss_alpha", "=", "self", ".", "forward", "(", "features", ")", "\n", "losses", ".", "append", "(", "error_loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "print", "(", "\"cnt: \"", ",", "cnt", ")", "\n", "return", "np", ".", "mean", "(", "losses", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "regs", "=", "0", "\n", "inferences", "=", "0", "\n", "for", "index1", ",", "name1", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "for", "index2", ",", "name2", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.forward": [[445, 490], ["enumerate", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "enumerate", "baseline.FM_v2.reparameterize", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v2.embedding_action_first_order", "baseline.FM_v2.embedding_action_first_order", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "baseline.FM_v2.KL_distance", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "baseline.FM_v2.reparameterize", "baseline.FM_v2.reparameterize", "baseline.FM_v2.embedding_action", "baseline.FM_v2.embedding_action", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.zeros_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.KL_distance", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.reparameterize"], ["                ", "if", "index1", "<", "index2", ":", "\n", "                    ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "name2_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding_std", "=", "self", ".", "embedding_std", "[", "name2", "]", "(", "features", "[", "name2", "]", ")", "\n", "name2_embedding", "=", "self", ".", "reparameterize", "(", "name2_embedding_mean", ",", "name2_embedding_std", ")", "\n", "inferences", "+=", "self", ".", "FC", "[", "name1", "+", "\":\"", "+", "name2", "]", "(", "name1_embedding", "*", "name2_embedding", ")", "\n", "\n", "# features with action", "\n", "", "", "", "inferences_0", "=", "inferences", ".", "clone", "(", ")", "# action 0", "\n", "inferences_1", "=", "inferences", ".", "clone", "(", ")", "# action_1", "\n", "for", "name1", "in", "self", ".", "columns", ":", "\n", "            ", "name1_embedding_mean", "=", "self", ".", "embedding_mean", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding_std", "=", "self", ".", "embedding_std", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "name1_embedding", "=", "self", ".", "reparameterize", "(", "name1_embedding_mean", ",", "name1_embedding_std", ")", "\n", "inferences_0", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "inferences_1", "+=", "torch", ".", "sum", "(", "name1_embedding", "*", "self", ".", "embedding_action", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "self", ".", "args", ".", "first_order", ":", "\n", "                ", "name1_embedding_first_order", "=", "self", ".", "embedding_first_order", "[", "name1", "]", "(", "features", "[", "name1", "]", ")", "\n", "inferences_0", "+=", "name1_embedding_first_order", "\n", "inferences_1", "+=", "name1_embedding_first_order", "\n", "", "", "if", "self", ".", "args", ".", "first_order", ":", "\n", "            ", "inferences_0", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "zeros_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "inferences_1", "+=", "self", ".", "embedding_action_first_order", "(", "torch", ".", "ones_like", "(", "features", "[", "name1", "]", ")", ".", "long", "(", ")", ")", "\n", "", "inferences", "=", "torch", ".", "cat", "(", "[", "inferences_0", ",", "inferences_1", "]", ",", "dim", "=", "1", ")", "\n", "loss", "=", "(", "inferences", "-", "features", "[", "\"label\"", "]", ")", "**", "2", "\n", "weighted_loss", "=", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"pos_weights\"", "]", ",", "loss", ")", ",", "dim", "=", "1", ")", ")", "\n", "kl", "=", "0", "\n", "for", "name", "in", "self", ".", "columns", ":", "\n", "            ", "kl", "+=", "self", ".", "KL_distance", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ",", "\n", "0", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_mean", "[", "name", "]", ".", "weight", ")", ",", "\n", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", ",", "\n", "0.1", "*", "torch", ".", "ones_like", "(", "self", ".", "embedding_std", "[", "name", "]", ".", "weight", ")", ")", "\n", "\n", "", "(", "weighted_loss", "+", "kl", "/", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "return", "inferences", ",", "weighted_loss", ",", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"FM_v2\"", ",", "0", "\n", "\n", "", "", "class", "Random", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.FM_v2.genotype": [[491, 493], ["None"], "methods", ["None"], ["        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Random.__init__": [[495, 497], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["max_index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Random.recommend": [[498, 505], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.random.randint", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Random\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Random.step": [[506, 508], ["None"], "methods", ["None"], ["\n", "", "", "class", "Egreedy", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Random.genotype": [[509, 511], ["None"], "methods", ["None"], ["        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "self", ".", "epsion", "=", "0.2", "\n", "self", ".", "action_rewards", "=", "{", "0", ":", "[", "0", ",", "1.0", "]", ",", "1", ":", "[", "0.1", ",", "1.0", "]", "}", "#total reward, action_num", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Egreedy.__init__": [[513, 518], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "max_reward", "=", "np", ".", "float", "(", "\"-inf\"", ")", "\n", "for", "key", "in", "self", ".", "action_rewards", ":", "\n", "            ", "if", "self", ".", "action_rewards", "[", "key", "]", "[", "0", "]", "/", "self", ".", "action_rewards", "[", "key", "]", "[", "1", "]", ">", "max_reward", ":", "\n", "                ", "max_reward", "=", "self", ".", "action_rewards", "[", "key", "]", "[", "0", "]", "/", "self", ".", "action_rewards", "[", "key", "]", "[", "1", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Egreedy.recommend": [[519, 546], ["numpy.float", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.random.randint", "range", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "action_rewards[].cpu().detach().item", "action_nums[].cpu().detach().item", "numpy.random.random", "simulate_index.append", "simulate_index.append", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "enumerate", "action_rewards[].cpu().detach", "action_nums[].cpu().detach", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "action_rewards[].cpu", "action_nums[].cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["self", ".", "max_action", "=", "key", "\n", "", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "max_index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", "\n", "simulate_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "max_index", ")", ")", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "epsion", ":", "\n", "                ", "simulate_index", ".", "append", "(", "max_index", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "simulate_index", ".", "append", "(", "self", ".", "max_action", ")", "\n", "\n", "", "", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "simulate_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "\n", "action_rewards", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ",", "dim", "=", "0", ")", "\n", "action_nums", "=", "torch", ".", "sum", "(", "pos_weights", ",", "dim", "=", "0", ")", "\n", "for", "key", "in", "self", ".", "action_rewards", ":", "\n", "            ", "temp", "=", "self", ".", "action_rewards", "[", "key", "]", "\n", "temp", "[", "0", "]", "+=", "action_rewards", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "temp", "[", "1", "]", "+=", "action_nums", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "action_rewards", "[", "key", "]", "=", "temp", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Egreedy\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Egreedy.step": [[547, 549], ["None"], "methods", ["None"], ["\n", "", "", "class", "Thompson", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Egreedy.genotype": [[550, 552], ["None"], "methods", ["None"], ["        ", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "self", ".", "epsion", "=", "0.2", "\n", "self", ".", "action_rewards", "=", "{", "0", ":", "[", "0", ",", "0", "]", ",", "1", ":", "[", "0", ",", "0", "]", "}", "#total reward, action_num", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Thompson.__init__": [[554, 559], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "#Thompson sampling", "\n", "        ", "values", "=", "[", "]", "\n", "num", "=", "2", "\n", "N", "=", "10000", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Thompson.recommend": [[560, 590], ["range", "numpy.vstack", "collections.Counter", "range", "range", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "numpy.random.beta", "values.append", "numpy.vstack.argmax", "action_percentage.append", "simulate_index.append", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "action_rewards[].cpu().detach().item", "action_nums[].cpu().detach().item", "numpy.random.choice", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "int", "int", "range", "enumerate", "action_rewards[].cpu().detach", "action_nums[].cpu().detach", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "action_rewards[].cpu", "action_nums[].cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["for", "index", "in", "range", "(", "num", ")", ":", "\n", "            ", "pos", "=", "np", ".", "random", ".", "beta", "(", "1", "+", "int", "(", "self", ".", "action_rewards", "[", "index", "]", "[", "0", "]", ")", ",", "2", "+", "int", "(", "self", ".", "action_rewards", "[", "index", "]", "[", "1", "]", ")", ",", "N", ")", "\n", "values", ".", "append", "(", "pos", ")", "\n", "", "action_pos", "=", "np", ".", "vstack", "(", "values", ")", "\n", "action_num", "=", "Counter", "(", "action_pos", ".", "argmax", "(", "axis", "=", "0", ")", ")", "\n", "action_percentage", "=", "[", "]", "\n", "for", "index", "in", "range", "(", "num", ")", ":", "\n", "            ", "action_percentage", ".", "append", "(", "action_num", "[", "index", "]", "/", "N", ")", "\n", "", "simulate_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "simulate_index", ".", "append", "(", "np", ".", "random", ".", "choice", "(", "range", "(", "num", ")", ",", "p", "=", "action_percentage", ")", ")", "\n", "\n", "", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "simulate_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "\n", "action_rewards", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ",", "dim", "=", "0", ")", "\n", "action_nums", "=", "torch", ".", "sum", "(", "pos_weights", ",", "dim", "=", "0", ")", "\n", "for", "key", "in", "self", ".", "action_rewards", ":", "\n", "            ", "temp", "=", "self", ".", "action_rewards", "[", "key", "]", "\n", "temp", "[", "0", "]", "+=", "action_rewards", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "temp", "[", "1", "]", "+=", "action_nums", "[", "key", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "action_rewards", "[", "key", "]", "=", "temp", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"Thompson\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Thompson.step": [[591, 593], ["None"], "methods", ["None"], ["\n", "", "", "class", "LinUCB2", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.Thompson.genotype": [[594, 596], ["None"], "methods", ["None"], ["        ", "self", ".", "Aa", "=", "torch", ".", "eye", "(", "104", ")", "\n", "self", ".", "ba", "=", "torch", ".", "zeros", "(", "104", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "self", ".", "alpha", "=", "0.05", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB2.__init__": [[598, 603], ["torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "action1_features", "=", "torch", ".", "zeros", "(", "(", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n", "action1_features", "[", ":", ",", "0", "]", "=", "1.0", "\n", "\n", "action2_features", "=", "torch", ".", "zeros", "(", "(", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB2.recommend": [[604, 636], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "range", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "collections.Counter", "max_index[].item", "[].item", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.cat.argmax.numpy", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "cur_feature.view", "cur_feature.view", "cur_feature.view", "enumerate", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["action2_features", "[", ":", ",", "1", "]", "=", "1.0", "\n", "\n", "action1_input", "=", "torch", ".", "cat", "(", "[", "features", "[", "\"feature\"", "]", ",", "action1_features", "]", ",", "dim", "=", "1", ")", "\n", "action2_input", "=", "torch", ".", "cat", "(", "[", "features", "[", "\"feature\"", "]", ",", "action2_features", "]", ",", "dim", "=", "1", ")", "\n", "\n", "inputs_all", "=", "[", "action1_input", ",", "action2_input", "]", "\n", "theta", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "self", ".", "Aa", ")", ",", "self", ".", "ba", ")", "\n", "\n", "action1_score", "=", "torch", ".", "matmul", "(", "action1_input", ",", "theta", ")", "+", "self", ".", "alpha", "*", "torch", ".", "sqrt", "(", "\n", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "matmul", "(", "action1_input", ",", "torch", ".", "inverse", "(", "self", ".", "Aa", ")", ")", ",", "action1_input", ")", ",", "dim", "=", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "action2_score", "=", "torch", ".", "matmul", "(", "action2_input", ",", "theta", ")", "+", "self", ".", "alpha", "*", "torch", ".", "sqrt", "(", "\n", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "matmul", "(", "action2_input", ",", "torch", ".", "inverse", "(", "self", ".", "Aa", ")", ")", ",", "action2_input", ")", ",", "dim", "=", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "score_all", "=", "torch", ".", "cat", "(", "[", "action1_score", ",", "action2_score", "]", ",", "dim", "=", "1", ")", "\n", "max_index", "=", "score_all", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "print", "(", "Counter", "(", "max_index", ".", "numpy", "(", ")", ")", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "#update Aa and ba", "\n", "for", "i", "in", "range", "(", "max_index", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cur_action", "=", "max_index", "[", "i", "]", ".", "item", "(", ")", "\n", "cur_reward", "=", "features", "[", "\"label\"", "]", "[", "i", ",", "cur_action", "]", ".", "item", "(", ")", "\n", "cur_feature", "=", "inputs_all", "[", "cur_action", "]", "[", "i", "]", "\n", "self", ".", "Aa", "+=", "torch", ".", "matmul", "(", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", ",", "cur_feature", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "self", ".", "ba", "+=", "cur_reward", "*", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"LinUCB2\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB2.step": [[637, 639], ["None"], "methods", ["None"], ["\n", "#", "\n", "", "", "class", "LinUCB", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB2.genotype": [[640, 642], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n", "        ", "self", ".", "action_num", "=", "2", "\n", "self", ".", "feature_dim", "=", "102", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB.__init__": [[645, 655], ["range", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "baseline.LinUCB.Aa.append", "baseline.LinUCB.ba.append", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["for", "i", "in", "range", "(", "self", ".", "action_num", ")", ":", "\n", "            ", "self", ".", "Aa", ".", "append", "(", "torch", ".", "eye", "(", "self", ".", "feature_dim", ")", ")", "\n", "self", ".", "ba", ".", "append", "(", "torch", ".", "zeros", "(", "self", ".", "feature_dim", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "", "self", ".", "alpha", "=", "1.0", "\n", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "score_all", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "action_num", ")", ":", "\n", "            ", "Aa", "=", "self", ".", "Aa", "[", "i", "]", "\n", "ba", "=", "self", ".", "ba", "[", "i", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB.recommend": [[656, 686], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "range", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat.append", "torch.cat.append", "torch.cat.append", "collections.Counter", "max_index[].item", "[].item", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat.argmax.numpy", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "cur_feature.view", "cur_feature.view", "cur_feature.view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "enumerate", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["theta", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "Aa", ")", ",", "ba", ")", "\n", "score", "=", "torch", ".", "matmul", "(", "features", "[", "\"feature\"", "]", ",", "theta", ")", "+", "self", ".", "alpha", "*", "torch", ".", "sqrt", "(", "\n", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "matmul", "(", "features", "[", "\"feature\"", "]", ",", "torch", ".", "inverse", "(", "Aa", ")", ")", ",", "features", "[", "\"feature\"", "]", ")", ",", "dim", "=", "-", "1", ")", "\n", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "score_all", ".", "append", "(", "score", ")", "\n", "", "score_all", "=", "torch", ".", "cat", "(", "score_all", ",", "dim", "=", "1", ")", "\n", "\n", "max_index", "=", "score_all", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "print", "(", "Counter", "(", "max_index", ".", "numpy", "(", ")", ")", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "#update Aa and ba", "\n", "for", "i", "in", "range", "(", "max_index", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cur_action", "=", "max_index", "[", "i", "]", ".", "item", "(", ")", "\n", "cur_reward", "=", "features", "[", "\"label\"", "]", "[", "i", ",", "cur_action", "]", ".", "item", "(", ")", "\n", "cur_feature", "=", "features", "[", "\"feature\"", "]", "[", "i", "]", "\n", "Aa", "=", "self", ".", "Aa", "[", "cur_action", "]", "\n", "ba", "=", "self", ".", "ba", "[", "cur_action", "]", "\n", "Aa", "+=", "torch", ".", "matmul", "(", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", ",", "cur_feature", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "ba", "+=", "cur_reward", "*", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "self", ".", "Aa", "[", "cur_action", "]", "=", "Aa", "\n", "self", ".", "ba", "[", "cur_action", "]", "=", "ba", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"LinUCB\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB.step": [[687, 689], ["None"], "methods", ["None"], ["\n", "", "", "class", "LinThompson", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinUCB.genotype": [[690, 692], ["None"], "methods", ["None"], ["        ", "self", ".", "action_num", "=", "2", "\n", "self", ".", "feature_dim", "=", "102", "\n", "self", ".", "Aa", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinThompson.__init__": [[694, 704], ["range", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "baseline.LinThompson.Aa.append", "baseline.LinThompson.ba.append", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["for", "i", "in", "range", "(", "self", ".", "action_num", ")", ":", "\n", "            ", "self", ".", "Aa", ".", "append", "(", "torch", ".", "eye", "(", "self", ".", "feature_dim", ")", ")", "\n", "self", ".", "ba", ".", "append", "(", "torch", ".", "zeros", "(", "self", ".", "feature_dim", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "", "self", ".", "alpha", "=", "1.0", "\n", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "score_all", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "action_num", ")", ":", "\n", "            ", "Aa", "=", "self", ".", "Aa", "[", "i", "]", "\n", "ba", "=", "self", ".", "ba", "[", "i", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinThompson.recommend": [[705, 741], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "range", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.cat.append", "torch.cat.append", "torch.cat.append", "collections.Counter", "max_index[].item", "[].item", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.distributions.multivariate_normal.MultivariateNormal().sample().view", "torch.distributions.multivariate_normal.MultivariateNormal().sample().view", "torch.distributions.multivariate_normal.MultivariateNormal().sample().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat.argmax.numpy", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "cur_feature.view", "cur_feature.view", "cur_feature.view", "print", "torch.matmul.view", "torch.matmul.view", "torch.matmul.view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "torch.sqrt().view", "enumerate", "torch.distributions.multivariate_normal.MultivariateNormal().sample", "torch.distributions.multivariate_normal.MultivariateNormal().sample", "torch.distributions.multivariate_normal.MultivariateNormal().sample", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.distributions.multivariate_normal.MultivariateNormal", "torch.distributions.multivariate_normal.MultivariateNormal", "torch.distributions.multivariate_normal.MultivariateNormal", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.matmul.view", "torch.matmul.view", "torch.matmul.view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["mu", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "Aa", ")", ",", "ba", ")", "\n", "variance", "=", "torch", ".", "inverse", "(", "Aa", ")", "\n", "try", ":", "\n", "                ", "theta", "=", "MultivariateNormal", "(", "loc", "=", "mu", ".", "view", "(", "-", "1", ")", ",", "covariance_matrix", "=", "self", ".", "alpha", "*", "variance", ")", ".", "sample", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Error here!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"", ")", "\n", "theta", "=", "mu", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "score", "=", "torch", ".", "matmul", "(", "features", "[", "\"feature\"", "]", ",", "theta", ")", "+", "self", ".", "alpha", "*", "torch", ".", "sqrt", "(", "\n", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "matmul", "(", "features", "[", "\"feature\"", "]", ",", "torch", ".", "inverse", "(", "Aa", ")", ")", ",", "features", "[", "\"feature\"", "]", ")", ",", "dim", "=", "-", "1", ")", "\n", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "score_all", ".", "append", "(", "score", ")", "\n", "", "score_all", "=", "torch", ".", "cat", "(", "score_all", ",", "dim", "=", "1", ")", "\n", "\n", "max_index", "=", "score_all", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "print", "(", "Counter", "(", "max_index", ".", "numpy", "(", ")", ")", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "# update Aa and ba", "\n", "for", "i", "in", "range", "(", "max_index", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cur_action", "=", "max_index", "[", "i", "]", ".", "item", "(", ")", "\n", "cur_reward", "=", "features", "[", "\"label\"", "]", "[", "i", ",", "cur_action", "]", ".", "item", "(", ")", "\n", "cur_feature", "=", "features", "[", "\"feature\"", "]", "[", "i", "]", "\n", "Aa", "=", "self", ".", "Aa", "[", "cur_action", "]", "\n", "ba", "=", "self", ".", "ba", "[", "cur_action", "]", "\n", "Aa", "+=", "torch", ".", "matmul", "(", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", ",", "cur_feature", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "ba", "+=", "cur_reward", "*", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "self", ".", "Aa", "[", "cur_action", "]", "=", "Aa", "\n", "self", ".", "ba", "[", "cur_action", "]", "=", "ba", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"LinThompson\"", ",", "0", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinThompson.step": [[742, 744], ["None"], "methods", ["None"], ["\n", "", "", "class", "LinEGreedy", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "reg", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinThompson.genotype": [[745, 747], ["None"], "methods", ["None"], ["        ", "self", ".", "Aa", "=", "torch", ".", "eye", "(", "104", ")", "\n", "self", ".", "ba", "=", "torch", ".", "zeros", "(", "104", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "self", ".", "log_alpha", "=", "torch", ".", "Tensor", "(", "[", "1.0", ",", "2.0", ",", "3.0", ",", "4.0", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.__init__": [[749, 755], ["torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.zeros().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["self", ".", "turn", "=", "True", "\n", "\n", "", "def", "recommend", "(", "self", ",", "features", ")", ":", "\n", "        ", "action1_features", "=", "torch", ".", "zeros", "(", "(", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n", "action1_features", "[", ":", ",", "0", "]", "=", "1.0", "\n", "\n", "action2_features", "=", "torch", ".", "zeros", "(", "(", "features", "[", "\"label\"", "]", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.recommend": [[756, 795], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "numpy.array", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "torch.sum().cpu().detach().item", "range", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "range", "collections.Counter", "len", "[].item", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "len", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "torch.sum().cpu().detach", "cur_feature.view", "cur_feature.view", "cur_feature.view", "numpy.random.random", "simulate_index.append", "simulate_index.append", "enumerate", "max_index[].item", "numpy.random.randint", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum().cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["action2_features", "[", ":", ",", "1", "]", "=", "1.0", "\n", "\n", "action1_input", "=", "torch", ".", "cat", "(", "[", "features", "[", "\"feature\"", "]", ",", "action1_features", "]", ",", "dim", "=", "1", ")", "\n", "action2_input", "=", "torch", ".", "cat", "(", "[", "features", "[", "\"feature\"", "]", ",", "action2_features", "]", ",", "dim", "=", "1", ")", "\n", "\n", "inputs_all", "=", "[", "action1_input", ",", "action2_input", "]", "\n", "theta", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "self", ".", "Aa", ")", ",", "self", ".", "ba", ")", "\n", "\n", "action1_score", "=", "torch", ".", "matmul", "(", "action1_input", ",", "theta", ")", "\n", "action2_score", "=", "torch", ".", "matmul", "(", "action2_input", ",", "theta", ")", "\n", "score_all", "=", "torch", ".", "cat", "(", "[", "action1_score", ",", "action2_score", "]", ",", "dim", "=", "1", ")", "\n", "max_index", "=", "score_all", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "if", "self", ".", "turn", ":", "\n", "            ", "simulate_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "max_index", ")", ")", ":", "\n", "                ", "if", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "epsion", ":", "\n", "                    ", "simulate_index", ".", "append", "(", "max_index", "[", "i", "]", ".", "item", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "simulate_index", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ")", ")", "\n", "", "", "max_index", "=", "simulate_index", "\n", "self", ".", "turn", "=", "False", "\n", "", "print", "(", "Counter", "(", "max_index", ")", ")", "\n", "pos_weights", "=", "torch", ".", "zeros_like", "(", "features", "[", "\"label\"", "]", ")", "\n", "a_ind", "=", "np", ".", "array", "(", "[", "(", "i", ",", "val", ")", "for", "i", ",", "val", "in", "enumerate", "(", "max_index", ")", "]", ")", "\n", "pos_weights", "[", "a_ind", "[", ":", ",", "0", "]", ",", "a_ind", "[", ":", ",", "1", "]", "]", "=", "1.0", "\n", "reward", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "features", "[", "\"label\"", "]", ",", "pos_weights", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "item", "(", ")", "\n", "#update Aa and ba", "\n", "for", "i", "in", "range", "(", "len", "(", "max_index", ")", ")", ":", "\n", "            ", "cur_action", "=", "max_index", "[", "i", "]", "\n", "cur_reward", "=", "features", "[", "\"label\"", "]", "[", "i", ",", "cur_action", "]", ".", "item", "(", ")", "\n", "cur_feature", "=", "inputs_all", "[", "cur_action", "]", "[", "i", "]", "\n", "self", ".", "Aa", "+=", "torch", ".", "matmul", "(", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", ",", "cur_feature", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "self", ".", "ba", "+=", "cur_reward", "*", "cur_feature", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "return", "reward", "\n", "\n", "", "def", "step", "(", "self", ",", "optimizer", ",", "arch_optimizer", ",", "epoch", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "return", "\"LinEGreedy\"", ",", "0", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.step": [[796, 798], ["None"], "methods", ["None"], ["", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype": [[799, 801], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult.__init__": [[42, 45], ["pandas.read_csv"], "methods", ["None"], ["\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult.__len__": [[46, 48], ["None"], "methods", ["None"], ["                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult.one_hot": [[49, 56], ["pandas.concat", "pandas.get_dummies", "res.append"], "methods", ["None"], ["state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "\"z\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "state", "[", "\"n\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "\n", "", "z", ",", "n", "=", "state", "[", "\"z\"", "]", ",", "state", "[", "\"n\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult.__getitem__": [[57, 80], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "utils.Adult.one_hot", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.one_hot"], ["theta", "=", "(", "n", "+", "grad", "**", "2", ")", ".", "sqrt", "(", ")", "/", "group", "[", "\"alpha\"", "]", "-", "n", ".", "sqrt", "(", ")", "\n", "z", ".", "add_", "(", "grad", "-", "theta", "*", "p", ".", "data", ")", "\n", "n", ".", "add_", "(", "grad", "**", "2", ")", "\n", "\n", "p", ".", "data", "=", "(", "\n", "-", "1", "\n", "/", "(", "group", "[", "\"l2\"", "]", "+", "(", "group", "[", "\"beta\"", "]", "+", "n", ".", "sqrt", "(", ")", ")", "/", "group", "[", "\"alpha\"", "]", ")", "\n", "*", "(", "z", "-", "group", "[", "\"l1\"", "]", "*", "z", ".", "sign", "(", ")", ")", "\n", ")", "\n", "p", ".", "data", "[", "z", ".", "abs", "(", ")", "<", "group", "[", "\"l1\"", "]", "]", "=", "0", "\n", "\n", "", "", "return", "loss", "\n", "\n", "", "", "class", "DataPrefetcher", "(", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "loader", ",", "device", ")", ":", "\n", "        ", "self", ".", "loader", "=", "iter", "(", "loader", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "stream", "=", "torch", ".", "cuda", ".", "Stream", "(", ")", "\n", "# With Amp, it isn't necessary to manually convert data to half.", "\n", "# if args.fp16:", "\n", "#     self.mean = self.mean.half()", "\n", "#     self.std = self.std.half()", "\n", "self", ".", "preload", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult2.__init__": [[92, 95], ["None"], "methods", ["None"], ["# With Amp, it isn't necessary to manually convert data to half.", "\n", "# if args.fp16:", "\n", "#     self.next_input = self.next_input.half()", "\n", "# else:", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult2.__len__": [[96, 98], ["None"], "methods", ["None"], ["#     self.next_input = self.next_input.float()", "\n", "\n", "", "", "", "", "def", "next", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Adult2.__getitem__": [[99, 112], ["None"], "methods", ["None"], ["        ", "torch", ".", "cuda", ".", "current_stream", "(", ")", ".", "wait_stream", "(", "self", ".", "stream", ")", "\n", "batch", "=", "self", ".", "batch", "\n", "self", ".", "preload", "(", ")", "\n", "return", "batch", "\n", "\n", "", "", "def", "cal_group_auc", "(", "labels", ",", "preds", ",", "user_id_list", ")", ":", "\n", "    ", "if", "len", "(", "user_id_list", ")", "!=", "len", "(", "labels", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"impression id num should equal to the sample num,\"", "\"impression id num is {0}\"", ".", "format", "(", "len", "(", "user_id_list", ")", ")", ")", "\n", "", "group_score", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "group_truth", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "for", "idx", ",", "truth", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "user_id", "=", "user_id_list", "[", "idx", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.create_exp_dir": [[16, 26], ["print", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "os.mkdir", "os.mkdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "shutil.copyfile", "os.path.basename", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["\n", "\n", "def", "__init__", "(", "self", ",", "params", ",", "alpha", "=", "1.0", ",", "beta", "=", "1.0", ",", "l1", "=", "1.0", ",", "l2", "=", "1.0", ")", ":", "\n", "        ", "if", "not", "0.0", "<", "alpha", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid alpha parameter: {}\"", ".", "format", "(", "alpha", ")", ")", "\n", "", "if", "not", "0.0", "<", "beta", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter: {}\"", ".", "format", "(", "beta", ")", ")", "\n", "", "if", "not", "0.0", "<=", "l1", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid l1 parameter: {}\"", ".", "format", "(", "l1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.sample_arch": [[27, 40], ["torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Linear", "numpy.random.randint", "len"], "function", ["None"], ["", "if", "not", "0.0", "<=", "l2", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid l2 parameter: {}\"", ".", "format", "(", "l2", ")", ")", "\n", "\n", "", "defaults", "=", "dict", "(", "alpha", "=", "alpha", ",", "beta", "=", "beta", ",", "l1", "=", "l1", ",", "l2", "=", "l2", ")", "\n", "super", "(", "FTRL", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n", "", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments:\n            closure (callable, optional): A closure that reevaluates the model\n                and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue": [[96, 105], ["print", "utils.Mushroom", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.fm_nas.model.Linucb.print"], ["#     self.next_input = self.next_input.float()", "\n", "\n", "", "", "", "", "def", "next", "(", "self", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "current_stream", "(", ")", ".", "wait_stream", "(", "self", ".", "stream", ")", "\n", "batch", "=", "self", ".", "batch", "\n", "self", ".", "preload", "(", ")", "\n", "return", "batch", "\n", "\n", "", "", "def", "cal_group_auc", "(", "labels", ",", "preds", ",", "user_id_list", ")", ":", "\n", "    ", "if", "len", "(", "user_id_list", ")", "!=", "len", "(", "labels", ")", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue_bandit": [[142, 146], ["utils.Mushroom2", "torch.utils.data.DataLoader"], "function", ["None"], []], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.main.main": [[70, 269], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "logging.info", "time.time", "logging.info", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "utils.get_data_queue", "utils.get_data_queue", "vartional_model.DSNAS_v", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "train.train", "logging.info", "logging.info", "vartional_model.NASP_v", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "time.time", "train.train", "logging.info", "logging.info", "vartional_model.NASP", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "vartional_model.CONCAT_v.named_parameters", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "logging.info", "baseline.Random", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "vartional_model.CONCAT_v.named_parameters", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "baseline.Egreedy", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "vartional_model.CONCAT_v.named_parameters", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "baseline.Thompson", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "train.train", "logging.info", "baseline.LinUCB", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "train.train", "logging.info", "baseline.LinThompson", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "train.train", "logging.info", "baseline.LinEGreedy", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "range", "train.train", "logging.info", "baseline.FM", "vartional_model.CONCAT_v.genotype", "logging.info", "logging.info", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "train.train", "logging.info", "baseline.FM_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "train.train", "logging.info", "vartional_model.MULTIPLY_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "vartional_model.MAX_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "vartional_model.MIN_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "vartional_model.PLUS_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "vartional_model.CONCAT_v", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "torch.optim.Adagrad", "range", "ValueError", "vartional_model.CONCAT_v.named_parameters", "train.train", "logging.info", "vartional_model.CONCAT_v.named_parameters", "vartional_model.CONCAT_v.named_parameters"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.get_data_queue", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.baseline.LinEGreedy.genotype", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train", "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.train.train"], ["def", "main", "(", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "# torch.cuda.set_device(args.gpu)", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "# torch.cuda.manual_seed(args.seed)", "\n", "# logging.info('gpu device = %d' % args.gpu)", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "data_start", "=", "time", ".", "time", "(", ")", "\n", "if", "args", ".", "mode", "==", "\"LinUCB\"", "or", "args", ".", "mode", "==", "\"LinEGreedy\"", "or", "args", ".", "mode", "==", "\"LinThompson\"", ":", "\n", "        ", "train_queue", "=", "utils", ".", "get_data_queue", "(", "args", ",", "True", ")", "\n", "", "else", ":", "\n", "        ", "train_queue", "=", "utils", ".", "get_data_queue", "(", "args", ",", "False", ")", "\n", "", "logging", ".", "info", "(", "'prepare data finish! [%f]'", "%", "(", "time", ".", "time", "(", ")", "-", "data_start", ")", ")", "\n", "\n", "if", "args", ".", "mode", "==", "\"DSNAS_v\"", ":", "\n", "        ", "model", "=", "DSNAS_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "==", "'log_alpha'", "]", ",", "\n", "lr", "=", "args", ".", "arch_lr", ",", "\n", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "\n", "weight_decay", "=", "0.0", "\n", ")", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"NASP_v\"", ":", "\n", "        ", "model", "=", "NASP_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "==", "'log_alpha'", "]", ",", "\n", "lr", "=", "args", ".", "arch_lr", ",", "\n", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "\n", "weight_decay", "=", "0.0", "\n", ")", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"NASP\"", ":", "\n", "        ", "model", "=", "NASP", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "==", "'log_alpha'", "]", ",", "\n", "lr", "=", "args", ".", "arch_lr", ",", "\n", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "\n", "weight_decay", "=", "0.0", "\n", ")", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"Random\"", ":", "\n", "        ", "model", "=", "Random", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"Egreedy\"", ":", "\n", "        ", "model", "=", "Egreedy", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"Thompson\"", ":", "\n", "        ", "model", "=", "Thompson", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"LinUCB\"", ":", "\n", "        ", "model", "=", "LinUCB", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"LinThompson\"", ":", "\n", "        ", "model", "=", "LinThompson", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"LinEGreedy\"", ":", "\n", "        ", "model", "=", "LinEGreedy", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "None", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"FM\"", ":", "\n", "        ", "model", "=", "FM", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "g", ",", "gp", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype: %s'", "%", "g", ")", "\n", "logging", ".", "info", "(", "'genotype_p: %s'", "%", "gp", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"FM_v\"", ":", "\n", "        ", "model", "=", "FM_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"MULTIPLY_v\"", ":", "\n", "        ", "model", "=", "MULTIPLY_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"MAX_v\"", ":", "\n", "        ", "model", "=", "MAX_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"MIN_v\"", ":", "\n", "        ", "model", "=", "MIN_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"PLUS_v\"", ":", "\n", "        ", "model", "=", "PLUS_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "elif", "args", ".", "mode", "==", "\"CONCAT_v\"", ":", "\n", "        ", "model", "=", "CONCAT_v", "(", "args", ".", "embedding_dim", ",", "args", ".", "weight_decay", ",", "args", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "if", "name", "!=", "'log_alpha'", "]", ",", "\n", "args", ".", "lr", ")", "\n", "arch_optimizer", "=", "None", "\n", "for", "search_epoch", "in", "range", "(", "1", ")", ":", "\n", "            ", "g", ",", "gp", ",", "loss", ",", "rewards", "=", "train", "(", "train_queue", ",", "model", ",", "optimizer", ",", "arch_optimizer", ",", "logging", ")", "\n", "logging", ".", "info", "(", "\"total reward: %s\"", "%", "rewards", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"bad choice!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.__init__": [[42, 45], ["pandas.read_csv"], "methods", ["None"], ["\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.__len__": [[45, 47], ["None"], "methods", ["None"], ["                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.one_hot": [[48, 55], ["pandas.concat", "pandas.get_dummies", "res.append"], "methods", ["None"], ["\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "\"z\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "state", "[", "\"n\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "\n", "", "z", ",", "n", "=", "state", "[", "\"z\"", "]", ",", "state", "[", "\"n\"", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.__getitem__": [[56, 95], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "list", "list.remove", "list.remove", "utils.Mushroom.one_hot", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom.one_hot"], ["\n", "theta", "=", "(", "n", "+", "grad", "**", "2", ")", ".", "sqrt", "(", ")", "/", "group", "[", "\"alpha\"", "]", "-", "n", ".", "sqrt", "(", ")", "\n", "z", ".", "add_", "(", "grad", "-", "theta", "*", "p", ".", "data", ")", "\n", "n", ".", "add_", "(", "grad", "**", "2", ")", "\n", "\n", "p", ".", "data", "=", "(", "\n", "-", "1", "\n", "/", "(", "group", "[", "\"l2\"", "]", "+", "(", "group", "[", "\"beta\"", "]", "+", "n", ".", "sqrt", "(", ")", ")", "/", "group", "[", "\"alpha\"", "]", ")", "\n", "*", "(", "z", "-", "group", "[", "\"l1\"", "]", "*", "z", ".", "sign", "(", ")", ")", "\n", ")", "\n", "p", ".", "data", "[", "z", ".", "abs", "(", ")", "<", "group", "[", "\"l1\"", "]", "]", "=", "0", "\n", "\n", "", "", "return", "loss", "\n", "\n", "", "", "class", "DataPrefetcher", "(", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "loader", ",", "device", ")", ":", "\n", "        ", "self", ".", "loader", "=", "iter", "(", "loader", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "stream", "=", "torch", ".", "cuda", ".", "Stream", "(", ")", "\n", "# With Amp, it isn't necessary to manually convert data to half.", "\n", "# if args.fp16:", "\n", "#     self.mean = self.mean.half()", "\n", "#     self.std = self.std.half()", "\n", "self", ".", "preload", "(", ")", "\n", "\n", "", "def", "preload", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "batch", "=", "next", "(", "self", ".", "loader", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "batch", "=", "None", "\n", "return", "\n", "", "with", "torch", ".", "cuda", ".", "stream", "(", "self", ".", "stream", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "len", "(", "self", ".", "batch", ")", ")", ":", "\n", "                ", "if", "k", "!=", "'meta'", ":", "\n", "                    ", "self", ".", "batch", "[", "k", "]", "=", "self", ".", "batch", "[", "k", "]", ".", "to", "(", "device", "=", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# With Amp, it isn't necessary to manually convert data to half.", "\n", "# if args.fp16:", "\n", "#     self.next_input = self.next_input.half()", "\n", "# else:", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__init__": [[107, 110], ["None"], "methods", ["None"], ["\"impression id num should equal to the sample num,\"", "\"impression id num is {0}\"", ".", "format", "(", "len", "(", "user_id_list", ")", ")", ")", "\n", "", "group_score", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "group_truth", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__len__": [[111, 113], ["None"], "methods", ["None"], ["for", "idx", ",", "truth", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "user_id", "=", "user_id_list", "[", "idx", "]", "\n", "score", "=", "preds", "[", "idx", "]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.simulate.utils.Mushroom2.__getitem__": [[114, 141], ["None"], "methods", ["None"], ["truth", "=", "labels", "[", "idx", "]", "\n", "group_score", "[", "user_id", "]", ".", "append", "(", "score", ")", "\n", "group_truth", "[", "user_id", "]", ".", "append", "(", "truth", ")", "\n", "\n", "", "group_flag", "=", "defaultdict", "(", "lambda", ":", "False", ")", "\n", "for", "user_id", "in", "set", "(", "user_id_list", ")", ":", "\n", "        ", "truths", "=", "group_truth", "[", "user_id", "]", "\n", "flag", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "truths", ")", "-", "1", ")", ":", "\n", "            ", "if", "truths", "[", "i", "]", "!=", "truths", "[", "i", "+", "1", "]", ":", "\n", "                ", "flag", "=", "True", "\n", "break", "\n", "", "", "group_flag", "[", "user_id", "]", "=", "flag", "\n", "\n", "", "impression_total", "=", "0", "\n", "total_auc", "=", "0", "\n", "#", "\n", "for", "user_id", "in", "group_flag", ":", "\n", "        ", "if", "group_flag", "[", "user_id", "]", ":", "\n", "            ", "auc", "=", "roc_auc_score", "(", "np", ".", "asarray", "(", "group_truth", "[", "user_id", "]", ")", ",", "np", ".", "asarray", "(", "group_score", "[", "user_id", "]", ")", ")", "\n", "total_auc", "+=", "auc", "*", "len", "(", "group_truth", "[", "user_id", "]", ")", "\n", "impression_total", "+=", "len", "(", "group_truth", "[", "user_id", "]", ")", "\n", "", "", "group_auc", "=", "float", "(", "total_auc", ")", "/", "impression_total", "\n", "group_auc", "=", "round", "(", "group_auc", ",", "4", ")", "\n", "return", "group_auc", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.data.process.encode": [[15, 20], ["sorted", "list", "dict", "data[].map", "data[].unique", "range", "zip", "len"], "function", ["None"], ["def", "encode", "(", "data", ",", "column", ")", ":", "\n", "    ", "label", "=", "sorted", "(", "data", "[", "column", "]", ".", "unique", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", ")", "\n", "label_indices", "=", "list", "(", "range", "(", "len", "(", "label", ")", ")", ")", "\n", "label_dict", "=", "dict", "(", "zip", "(", "label", ",", "label_indices", ")", ")", "\n", "data", "[", "column", "]", "=", "data", "[", "column", "]", ".", "map", "(", "label_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.data.simulate_process.encode": [[14, 19], ["sorted", "list", "dict", "data[].map", "data[].unique", "range", "zip", "len"], "function", ["None"], ["def", "encode", "(", "data", ",", "column", ")", ":", "\n", "    ", "label", "=", "sorted", "(", "data", "[", "column", "]", ".", "unique", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", ")", "\n", "label_indices", "=", "list", "(", "range", "(", "len", "(", "label", ")", ")", ")", "\n", "label_dict", "=", "dict", "(", "zip", "(", "label", ",", "label_indices", ")", ")", "\n", "data", ".", "loc", "[", ":", ",", "column", "]", "=", "data", "[", "column", "]", ".", "map", "(", "label_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AutoCO.data.simulate_process.reward": [[23, 33], ["numpy.random.random"], "function", ["None"], ["", "def", "reward", "(", "x", ")", ":", "\n", "    ", "if", "x", "==", "0", ":", "\n", "        ", "return", "5", "\n", "", "elif", "x", "==", "1", ":", "\n", "        ", "if", "np", ".", "random", ".", "random", "(", ")", ">=", "0.5", ":", "\n", "            ", "return", "5", "\n", "", "else", ":", "\n", "            ", "return", "-", "35", "\n", "", "", "else", ":", "\n", "        ", "return", "-", "1", "\n", "\n"]]}