{"home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.eval_psnr_ssim.rgb2ycbcr": [[11, 33], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.eval_psnr_ssim.calc_psnr": [[35, 46], ["img1.astype.astype", "img2.astype.astype", "numpy.array", "numpy.array", "numpy.mean", "float", "math.log10", "math.sqrt"], "function", ["None"], ["", "def", "calc_psnr", "(", "img1", ",", "img2", ")", ":", "\n", "# img1 and img2 have range [0, 255]", "\n", "#", "\n", "    ", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img1_np", "=", "np", ".", "array", "(", "img1", ")", "\n", "img2_np", "=", "np", ".", "array", "(", "img2", ")", "\n", "mse", "=", "np", ".", "mean", "(", "(", "img1_np", "-", "img2_np", ")", "**", "2", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "mse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.eval_psnr_ssim.calc_metrics_common": [[48, 72], ["print", "eval_psnr_ssim.calc_psnr", "skimage.measure.compare_ssim", "eval_psnr_ssim.rgb2ycbcr", "eval_psnr_ssim.rgb2ycbcr", "ValueError"], "function", ["home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.eval_psnr_ssim.calc_psnr", "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.rgb2ycbcr", "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.rgb2ycbcr"], ["", "def", "calc_metrics_common", "(", "img1", ",", "img2", ",", "crop_border", "=", "8", ",", "test_Y", "=", "True", ")", ":", "\n", "#", "\n", "    ", "if", "test_Y", "and", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "# evaluate on Y channel in YCbCr color space", "\n", "        ", "im1_in", "=", "rgb2ycbcr", "(", "img1", ")", "\n", "im2_in", "=", "rgb2ycbcr", "(", "img2", ")", "\n", "", "else", ":", "\n", "        ", "im1_in", "=", "img1", "\n", "im2_in", "=", "img2", "\n", "\n", "", "if", "im1_in", ".", "ndim", "==", "3", ":", "\n", "        ", "cropped_im1", "=", "im1_in", "[", ":", ",", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "cropped_im2", "=", "im2_in", "[", ":", ",", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "", "elif", "im1_in", ".", "ndim", "==", "2", ":", "\n", "        ", "cropped_im1", "=", "im1_in", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "cropped_im2", "=", "im2_in", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong image dimension: {}. Should be 2 or 3.'", ".", "format", "(", "im1_in", ".", "ndim", ")", ")", "\n", "\n", "", "print", "(", "\"cropped: \"", ",", "cropped_im1", ".", "shape", ",", "cropped_im2", ".", "shape", ")", "\n", "psnr", "=", "calc_psnr", "(", "cropped_im1", ",", "cropped_im2", ")", "\n", "\n", "ssim", "=", "measure", ".", "compare_ssim", "(", "cropped_im1", ",", "cropped_im2", ",", "data_range", "=", "255", ")", "\n", "\n", "return", "psnr", ",", "ssim", "\n", "\n"]], "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.rgb2ycbcr": [[9, 31], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.calc_metrics_common": [[32, 61], ["torch.from_numpy", "torch.from_numpy", "cropped_im1.type.type", "cropped_im2.type.type", "loss_fn_alex", "calc_lpips.rgb2ycbcr", "calc_lpips.rgb2ycbcr", "ValueError"], "function", ["home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.rgb2ycbcr", "home.repos.pwc.inspect_result.junjun-jiang_Face-Hallucination-Benchmark.None.calc_lpips.rgb2ycbcr"], ["", "def", "calc_metrics_common", "(", "img1", ",", "img2", ",", "crop_border", "=", "8", ",", "test_Y", "=", "True", ")", ":", "\n", "\n", "    ", "if", "test_Y", "and", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "# evaluate on Y channel in YCbCr color space", "\n", "        ", "im1_in", "=", "rgb2ycbcr", "(", "img1", ")", "\n", "im2_in", "=", "rgb2ycbcr", "(", "img2", ")", "\n", "", "else", ":", "\n", "        ", "im1_in", "=", "img1", "\n", "im2_in", "=", "img2", "\n", "\n", "\n", "", "if", "im1_in", ".", "ndim", "==", "3", ":", "\n", "# cropped_im1 = im1_in[crop_border:-crop_border, crop_border:-crop_border, :]", "\n", "# cropped_im2 = im2_in[crop_border:-crop_border, crop_border:-crop_border, :]", "\n", "        ", "cropped_im1", "=", "im1_in", "[", ":", ",", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "cropped_im2", "=", "im2_in", "[", ":", ",", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "", "elif", "im1_in", ".", "ndim", "==", "2", ":", "\n", "        ", "cropped_im1", "=", "im1_in", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "cropped_im2", "=", "im2_in", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong image dimension: {}. Should be 2 or 3.'", ".", "format", "(", "im1_in", ".", "ndim", ")", ")", "\n", "\n", "\n", "", "cropped_im2", "=", "torch", ".", "from_numpy", "(", "cropped_im2", ")", "\n", "cropped_im1", "=", "torch", ".", "from_numpy", "(", "cropped_im1", ")", "\n", "cropped_im1", "=", "cropped_im1", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "cropped_im2", "=", "cropped_im2", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "d", "=", "loss_fn_alex", "(", "cropped_im1", ",", "cropped_im2", ")", "\n", "\n", "return", "d", "\n", "", "if", "__name__", "==", "\"__main__\"", ":", "\n"]]}