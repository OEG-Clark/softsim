{"home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.main_selfonn.main": [[17, 86], ["argparse.ArgumentParser", "utils.lit_module.LitDenoiser.add_model_specific_args", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.add_argument", "LitDenoiser.add_model_specific_args.parse_args", "utils.lit_module.WandbLogger", "utils.lit_module.ModelCheckpoint", "utils.lit_module.LearningRateMonitor", "callbacks.append", "utils.lit_module.Trainer", "utils.lit_module.Trainer.fit", "callbacks.append", "print", "utils.lit_module.LitDenoiser.load_from_checkpoint", "utils.lit_module.LitDenoiser", "str"], "function", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.add_model_specific_args"], ["def", "main", "(", ")", ":", "\n", "# Injection of arguments", "\n", "    ", "parser", "=", "ArgumentParser", "(", ")", "\n", "parser", "=", "LitDenoiser", ".", "add_model_specific_args", "(", "parser", ")", "\n", "\n", "# training args", "\n", "parser", ".", "add_argument", "(", "'--max_epochs'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "'--gpus'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu_id'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--overfit_batches'", ",", "type", "=", "float", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--fast_dev_run'", ",", "type", "=", "bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpointing'", ",", "type", "=", "bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--resume_from_checkpoint'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--load_from_checkpoint'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "\n", "# wandb args", "\n", "parser", ".", "add_argument", "(", "'--log_to_wandb'", ",", "type", "=", "bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--project'", ",", "type", "=", "str", ",", "default", "=", "'debugging'", ")", "\n", "parser", ".", "add_argument", "(", "'--version'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "\n", "# data args", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'C:/Users/PA_hm17901/'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# Init", "\n", "wandb_logger", "=", "WandbLogger", "(", "\n", "name", "=", "args", ".", "name", ",", "\n", "project", "=", "args", ".", "project", ",", "\n", "log_model", "=", "False", "\n", ")", "\n", "\n", "callbacks", "=", "[", "]", "\n", "checkpoint_callback", "=", "ModelCheckpoint", "(", "\n", "monitor", "=", "'val_psnr'", ",", "\n", "save_top_k", "=", "1", ",", "\n", "mode", "=", "'max'", ",", "\n", "verbose", "=", "False", "\n", ")", "\n", "\n", "lr_callback", "=", "LearningRateMonitor", "(", "logging_interval", "=", "'epoch'", ")", "\n", "\n", "if", "args", ".", "checkpointing", ":", "callbacks", ".", "append", "(", "checkpoint_callback", ")", "\n", "callbacks", ".", "append", "(", "lr_callback", ")", "\n", "\n", "\n", "\n", "trainer", "=", "Trainer", "(", "\n", "max_epochs", "=", "args", ".", "max_epochs", ",", "# maximum number of epochs", "\n", "gpus", "=", "args", ".", "gpus", "if", "args", ".", "gpu_id", "is", "None", "else", "str", "(", "args", ".", "gpu_id", ")", ",", "# gpus", "\n", "overfit_batches", "=", "args", ".", "overfit_batches", ",", "# for debugging", "\n", "fast_dev_run", "=", "args", ".", "fast_dev_run", ",", "# for debugging", "\n", "logger", "=", "wandb_logger", "if", "args", ".", "log_to_wandb", "else", "True", ",", "# logger", "\n", "checkpoint_callback", "=", "args", ".", "checkpointing", ",", "# if checkpointing is enabled", "\n", "callbacks", "=", "callbacks", ",", "# checkpoint callback to use", "\n", "distributed_backend", "=", "'dp'", "if", "args", ".", "gpu_id", "is", "None", "else", "None", ",", "# callback", "\n", "resume_from_checkpoint", "=", "args", ".", "resume_from_checkpoint", ",", "# resume checkpoing", "\n", ")", "\n", "\n", "if", "args", ".", "load_from_checkpoint", "is", "not", "None", ":", "\n", "        ", "print", "(", "\"Loading from checkpoint..\"", ")", "\n", "denoiser", "=", "LitDenoiser", ".", "load_from_checkpoint", "(", "args", ".", "load_from_checkpoint", ")", "\n", "denoiser", ".", "hparams", ".", "args", "=", "args", "\n", "", "else", ":", "\n", "        ", "denoiser", "=", "LitDenoiser", "(", "args", ")", "\n", "\n", "# Start training", "\n", "", "trainer", ".", "fit", "(", "denoiser", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.__init__": [[11, 33], ["torch.nn.Module.__init__", "torch.nn.Parameter", "selfonn.SelfONNLayer.SelfONNLayer.reset_parameters", "torch.Tensor", "torch.nn.Parameter", "selfonn.SelfONNLayer.SelfONNLayer.register_parameter", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__", "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "q", "=", "1", ",", "sampling_factor", "=", "1", ",", "idx", "=", "-", "1", ",", "dir", "=", "[", "]", ",", "debug", "=", "False", ",", "output", "=", "False", ",", "vis", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "q", "=", "q", "\n", "self", ".", "sampling_factor", "=", "sampling_factor", "\n", "self", ".", "weights", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "q", ",", "out_channels", ",", "in_channels", ",", "kernel_size", ",", "kernel_size", ")", ")", "# Q x C x K x D", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "q", "=", "q", "\n", "self", ".", "dir", "=", "dir", "\n", "self", ".", "debug", "=", "debug", "\n", "self", ".", "idx", "=", "idx", "#deprecated", "\n", "self", ".", "output", "=", "output", "#deprecated", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.reset_parameters": [[35, 40], ["range", "torch.nn.init.uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "#print('xavier')", "\n", "        ", "bound", "=", "0.01", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "for", "q", "in", "range", "(", "self", ".", "q", ")", ":", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weights", "[", "q", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.reset_parameters_q": [[41, 47], ["range", "torch.nn.init.uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["None"], ["", "def", "reset_parameters_q", "(", "self", ")", ":", "\n", "#print('xavier-q')", "\n", "        ", "bound", "=", "0.01", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "for", "q", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "            ", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weights", "[", "q", "]", ")", "\n", "#self.weights[q].data.div_(self.q)", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.reset_parameters_like_torch": [[49, 58], ["range", "torch.nn.init.kaiming_uniform_", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_", "selfonn.SelfONNLayer.SelfONNLayer.weights[].data.mul_", "math.sqrt", "math.sqrt"], "methods", ["None"], ["", "", "def", "reset_parameters_like_torch", "(", "self", ")", ":", "\n", "#print('kaiming')", "\n", "        ", "for", "q", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "self", ".", "weights", "[", "q", "]", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "if", "q", ">", "0", ":", "self", ".", "weights", "[", "q", "]", ".", "data", ".", "mul_", "(", "0", ")", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "fan_in", ",", "_", "=", "nn", ".", "init", ".", "_calculate_fan_in_and_fan_out", "(", "self", ".", "weights", "[", "q", "]", ")", "\n", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.None.selfonn.SelfONNLayer.forward": [[59, 66], ["torch.cat", "selfonn.SelfONNLayer.SelfONNLayer.weights.transpose().reshape", "torch.nn.functional.conv2d", "selfonn.SelfONNLayer.SelfONNLayer.weights.transpose", "range"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Input to layer", "\n", "#x = torch.tanh(x)", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "[", "(", "x", "**", "i", ")", "for", "i", "in", "range", "(", "1", ",", "self", ".", "q", "+", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "w", "=", "self", ".", "weights", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "self", ".", "out_channels", ",", "self", ".", "q", "*", "self", ".", "in_channels", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "conv2d", "(", "x", ",", "w", ",", "bias", "=", "self", ".", "bias", ",", "padding", "=", "self", ".", "padding", ",", "dilation", "=", "self", ".", "dilation", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.SelfDnCNN.__init__": [[14, 30], ["torch.nn.Module.__init__", "layers.append", "layers.append", "range", "layers.append", "layers.append", "torch.nn.Sequential", "models.SelfDnCNN.SelfONNLayer", "torch.nn.Tanh", "layers.append", "layers.append", "layers.append", "models.SelfDnCNN.SelfONNLayer", "torch.nn.Tanh", "models.SelfDnCNN.SelfONNLayer", "torch.nn.BatchNorm2d", "torch.nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "3", ",", "num_of_layers", "=", "17", ",", "q", "=", "3", ")", ":", "\n", "        ", "super", "(", "SelfDnCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#print(\"SelfDNCNN initialized with q\",q,num_of_layers)", "\n", "kernel_size", "=", "3", "\n", "padding", "=", "1", "\n", "features", "=", "64", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "SelfONNLayer", "(", "in_channels", "=", "channels", ",", "out_channels", "=", "features", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "q", "=", "q", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Tanh", "(", ")", ")", "\n", "for", "_", "in", "range", "(", "num_of_layers", "-", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "SelfONNLayer", "(", "in_channels", "=", "features", ",", "out_channels", "=", "features", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "q", "=", "q", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "features", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "layers", ".", "append", "(", "SelfONNLayer", "(", "in_channels", "=", "features", ",", "out_channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "q", "=", "q", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Tanh", "(", ")", ")", "\n", "self", ".", "dncnn", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.SelfDnCNN.forward": [[30, 34], ["models.SelfDnCNN.dncnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "\n", "out", "=", "self", ".", "dncnn", "(", "x", ")", "\n", "return", "y", "-", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.DnCNN.__init__": [[36, 50], ["torch.nn.Module.__init__", "layers.append", "layers.append", "range", "layers.append", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "layers.append", "layers.append", "layers.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "3", ",", "num_of_layers", "=", "17", ")", ":", "\n", "        ", "super", "(", "DnCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "3", "\n", "padding", "=", "1", "\n", "features", "=", "64", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", "=", "channels", ",", "out_channels", "=", "features", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "_", "in", "range", "(", "num_of_layers", "-", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", "=", "features", ",", "out_channels", "=", "features", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "features", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", "=", "features", ",", "out_channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "dncnn", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.DnCNN.forward": [[50, 54], ["models.DnCNN.dncnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "\n", "out", "=", "self", ".", "dncnn", "(", "x", ")", "\n", "return", "y", "-", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.get_model": [[7, 10], ["models.DnCNN", "models.SelfDnCNN"], "function", ["None"], ["def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", "==", "'dncnn'", ":", "return", "DnCNN", "(", "num_of_layers", "=", "args", ".", "num_layers", ")", "\n", "elif", "args", ".", "model", "==", "'selfdncnn'", ":", "return", "SelfDnCNN", "(", "num_of_layers", "=", "args", ".", "num_layers", ",", "q", "=", "args", ".", "q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchPSNR.__init__": [[6, 11], ["pytorch_lightning.metrics.Metric.__init__", "metrics.BatchPSNR.add_state", "metrics.BatchPSNR.add_state", "torch.tensor().float", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dist_sync_on_step", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dist_sync_on_step", "=", "dist_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"correct\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ".", "float", "(", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchPSNR.update": [[12, 17], ["torch.no_grad", "x.data.view().sub().pow().mean", "x.data.view().sub().pow", "x.data.view().sub", "y.data.view", "x.data.view"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "y", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "==", "y", ".", "shape", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "losses", "=", "x", ".", "data", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sub", "(", "y", ".", "data", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", "-", "1", ")", "\n", "self", ".", "correct", "+=", "(", "1", "/", "losses", ")", ".", "log10", "(", ")", ".", "mul", "(", "10", ")", ".", "sum", "(", ")", "\n", "self", ".", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchPSNR.compute": [[18, 20], ["metrics.BatchPSNR.correct.float"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "correct", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.__init__": [[30, 35], ["pytorch_lightning.metrics.Metric.__init__", "metrics.BatchSSIM.add_state", "metrics.BatchSSIM.add_state", "torch.tensor().float", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ddp_sync_on_step", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ddp_sync_on_step", "=", "ddp_sync_on_step", ")", "\n", "\n", "self", ".", "add_state", "(", "\"correct\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ".", "float", "(", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.update": [[36, 42], ["torch.no_grad", "zip", "skimage.measure.compare_ssim", "x_now.detach().cpu().numpy", "y_now.detach().cpu().numpy", "x_now.detach().cpu", "y_now.detach().cpu", "x_now.detach", "y_now.detach"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "y", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "==", "y", ".", "shape", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "(", "x_now", ",", "y_now", ")", "in", "zip", "(", "x", ",", "y", ")", ":", "\n", "                ", "self", ".", "correct", "+=", "compare_ssim", "(", "x_now", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "y_now", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "self", ".", "total", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.compute": [[43, 45], ["metrics.BatchSSIM.correct.float"], "methods", ["None"], ["", "", "", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "correct", ".", "float", "(", ")", "/", "self", ".", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.calc_batch_psnr": [[21, 28], ["torch.no_grad", "x.data.view().sub().pow().mean", "x.data.view().sub().pow", "x.data.view().sub", "y.data.view", "x.data.view"], "function", ["None"], ["", "", "def", "calc_batch_psnr", "(", "x", ",", "y", ")", ":", "\n", "    ", "correct", "=", "0", "\n", "total", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "losses", "=", "x", ".", "data", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sub", "(", "y", ".", "data", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", "-", "1", ")", "\n", "correct", "+=", "(", "1", "/", "losses", ")", ".", "log10", "(", ")", ".", "mul", "(", "10", ")", ".", "sum", "(", ")", "\n", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "return", "correct", ",", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.calc_batch_ssim": [[47, 55], ["torch.no_grad", "zip", "skimage.measure.compare_ssim", "x_now.detach().permute().cpu().numpy", "y_now.detach().permute().cpu().numpy", "x_now.detach().permute().cpu", "y_now.detach().permute().cpu", "x_now.detach().permute", "y_now.detach().permute", "x_now.detach", "y_now.detach"], "function", ["None"], ["", "", "def", "calc_batch_ssim", "(", "x", ",", "y", ")", ":", "\n", "    ", "correct", "=", "0", "\n", "total", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "(", "x_now", ",", "y_now", ")", "in", "zip", "(", "x", ",", "y", ")", ":", "\n", "            ", "correct", "+=", "compare_ssim", "(", "x_now", ".", "detach", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "y_now", ".", "detach", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "multichannel", "=", "True", ")", "\n", "total", "+=", "1", "\n", "", "", "return", "(", "correct", ",", "total", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.__init__": [[31, 36], ["pytorch_lightning.LightningModule.__init__", "models.get_model", "metrics.BatchPSNR", "lit_module.LitDenoiser.save_hyperparameters"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__", "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.models.get_model"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "get_model", "(", "args", ")", "\n", "self", ".", "psnr", "=", "BatchPSNR", "(", ")", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.add_model_specific_args": [[37, 53], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "add_model_specific_args", "(", "parent_parser", ")", ":", "\n", "        ", "parser", "=", "ArgumentParser", "(", "parents", "=", "[", "parent_parser", "]", ",", "add_help", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'selfdncnn'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_layers'", ",", "type", "=", "int", ",", "default", "=", "17", ")", "\n", "parser", ".", "add_argument", "(", "'--num_rrg'", ",", "type", "=", "int", ",", "default", "=", "4", "//", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--num_dab'", ",", "type", "=", "int", ",", "default", "=", "8", "//", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--nfeats'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "nargs", "=", "3", ",", "default", "=", "[", "4", ",", "4", ",", "16", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "'--patch_size'", ",", "type", "=", "int", ",", "default", "=", "80", ")", "\n", "parser", ".", "add_argument", "(", "'--patches_per_image'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "# 512 => 160k training patches, 3200 => 1M training patches", "\n", "parser", ".", "add_argument", "(", "'--patches_per_batch'", ",", "type", "=", "int", ",", "default", "=", "32", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.001", ")", "\n", "parser", ".", "add_argument", "(", "'--q'", ",", "type", "=", "int", ",", "default", "=", "3", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.setup": [[54, 71], ["datasets.SIDDDataset", "round", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.utils.data.random_split", "torch.utils.data.random_split", "datasets.SIDDValidDataset", "print", "print", "print", "len", "len", "len"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "stage", ")", ":", "\n", "        ", "self", ".", "train_ds", "=", "SIDDDataset", "(", "\n", "path", "=", "self", ".", "hparams", ".", "args", ".", "data_path", ",", "\n", "patches_per_batch", "=", "self", ".", "hparams", ".", "args", ".", "patches_per_batch", ",", "\n", "patches_per_image", "=", "self", ".", "hparams", ".", "args", ".", "patches_per_image", ",", "\n", "patch_size", "=", "self", ".", "hparams", ".", "args", ".", "patch_size", "\n", ")", "\n", "train_len", "=", "round", "(", "len", "(", "self", ".", "train_ds", ")", "*", "0.9", ")", "\n", "val_len", "=", "len", "(", "self", ".", "train_ds", ")", "-", "train_len", "\n", "torch", ".", "manual_seed", "(", "27", ")", "\n", "self", ".", "train_ds", ",", "self", ".", "val_ds", "=", "random_split", "(", "self", ".", "train_ds", ",", "[", "train_len", ",", "val_len", "]", ")", "\n", "self", ".", "test_ds", "=", "SIDDValidDataset", "(", "path", "=", "self", ".", "hparams", ".", "args", ".", "data_path", ")", "\n", "print", "(", "\"Train:\"", ",", "train_len", "*", "self", ".", "hparams", ".", "args", ".", "patches_per_batch", ")", "\n", "print", "(", "\"Val:\"", ",", "val_len", "*", "self", ".", "hparams", ".", "args", ".", "patches_per_batch", ")", "\n", "print", "(", "\"Test:\"", ",", "len", "(", "self", ".", "test_ds", ")", ")", "\n", "\n", "self", ".", "top_val", "=", "-", "1e9", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.configure_optimizers": [[72, 79], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiplicativeLR", "torch.optim.lr_scheduler.MultiplicativeLR", "lit_module.LitDenoiser.parameters"], "methods", ["None"], ["", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "hparams", ".", "args", ".", "lr", ")", "#,momentum=0.9)", "\n", "lmbda", "=", "lambda", "epoch", ":", "1.05", "\n", "scheduler", "=", "MultiplicativeLR", "(", "optimizer", ",", "lr_lambda", "=", "lmbda", ")", "\n", "return", "{", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'lr_scheduler'", ":", "scheduler", "\n", "#'monitor': 'train_loss'", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.train_dataloader": [[82, 85], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "num_workers", "=", "self", ".", "hparams", ".", "args", ".", "num_workers", "if", "self", ".", "hparams", ".", "args", ".", "overfit_batches", "==", "0", "else", "0", "\n", "return", "DataLoader", "(", "self", ".", "train_ds", ",", "batch_size", "=", "self", ".", "hparams", ".", "args", ".", "batch_size", "[", "0", "]", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ",", "shuffle", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.val_dataloader": [[86, 89], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "num_workers", "=", "self", ".", "hparams", ".", "args", ".", "num_workers", "if", "self", ".", "hparams", ".", "args", ".", "overfit_batches", "==", "0", "else", "0", "\n", "return", "DataLoader", "(", "self", ".", "val_ds", ",", "batch_size", "=", "self", ".", "hparams", ".", "args", ".", "batch_size", "[", "1", "]", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.test_dataloader": [[90, 93], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "num_workers", "=", "self", ".", "hparams", ".", "args", ".", "num_workers", "if", "self", ".", "hparams", ".", "args", ".", "overfit_batches", "==", "0", "else", "0", "\n", "return", "DataLoader", "(", "self", ".", "test_ds", ",", "batch_size", "=", "self", ".", "hparams", ".", "args", ".", "batch_size", "[", "2", "]", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.forward": [[94, 95], ["lit_module.LitDenoiser.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.training_step": [[96, 104], ["noisy.view.view.size", "noisy.view.view.view", "clean.view.view.view", "lit_module.LitDenoiser.model", "torch.mse_loss", "torch.mse_loss"], "methods", ["None"], ["def", "training_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "noisy", ",", "clean", "=", "batch", "\n", "_", ",", "_", ",", "c", ",", "h", ",", "w", "=", "noisy", ".", "size", "(", ")", "\n", "noisy", "=", "noisy", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "clean", "=", "clean", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "cleaned", "=", "self", ".", "model", "(", "noisy", ")", "\n", "loss", "=", "F", ".", "mse_loss", "(", "cleaned", ",", "clean", ",", "reduction", "=", "'sum'", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.training_epoch_end": [[105, 111], ["torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "hasattr", "lit_module.LitDenoiser.logger.experiment.log", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "def", "training_epoch_end", "(", "self", ",", "losses", ")", ":", "\n", "        ", "loss_epoch", "=", "torch", ".", "stack", "(", "[", "x", "[", "'loss'", "]", "for", "x", "in", "losses", "]", ")", ".", "mean", "(", ")", "\n", "if", "hasattr", "(", "self", ".", "logger", ".", "experiment", ",", "'log'", ")", ":", "self", ".", "logger", ".", "experiment", ".", "log", "(", "{", "\n", "'loss'", ":", "loss_epoch", ",", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'global_step'", ":", "self", ".", "global_step", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.validation_step": [[113, 123], ["noisy.view.view.size", "noisy.view.view.view", "clean.view.view.view", "lit_module.LitDenoiser.model", "lit_module.LitDenoiser.psnr.update", "cleaned[].permute().detach().cpu().numpy", "cleaned[].permute().detach().cpu", "cleaned[].permute().detach", "cleaned[].permute"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.update"], ["", "def", "validation_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "noisy", ",", "clean", "=", "batch", "\n", "_", ",", "_", ",", "c", ",", "h", ",", "w", "=", "noisy", ".", "size", "(", ")", "\n", "noisy", "=", "noisy", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "clean", "=", "clean", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "cleaned", "=", "self", ".", "model", "(", "noisy", ")", "\n", "self", ".", "psnr", ".", "update", "(", "cleaned", ",", "clean", ")", "\n", "\n", "cleaned_img", "=", "cleaned", "[", "0", ",", "...", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "cleaned_img", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.validation_epoch_end": [[126, 141], ["lit_module.LitDenoiser.psnr.compute", "max", "lit_module.LitDenoiser.log", "hasattr", "lit_module.LitDenoiser.psnr.reset", "lit_module.LitDenoiser.logger.experiment.log"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.compute"], ["", "def", "validation_epoch_end", "(", "self", ",", "outs", ")", ":", "\n", "# log epoch metric", "\n", "        ", "val_psnr", "=", "self", ".", "psnr", ".", "compute", "(", ")", "\n", "self", ".", "top_val", "=", "max", "(", "val_psnr", ",", "self", ".", "top_val", ")", "\n", "self", ".", "log", "(", "'val_psnr'", ",", "val_psnr", ",", "prog_bar", "=", "True", ")", "\n", "if", "hasattr", "(", "self", ".", "logger", ".", "experiment", ",", "'log'", ")", ":", "\n", "            ", "self", ".", "logger", ".", "experiment", ".", "log", "(", "{", "\n", "'val_psnr'", ":", "val_psnr", ",", "\n", "'epoch'", ":", "self", ".", "current_epoch", ",", "\n", "'global_step'", ":", "self", ".", "global_step", ",", "\n", "'best_val_psnr'", ":", "self", ".", "top_val", ",", "\n", "#'examples': [wandb.Image(outs[0], caption=\"Cleaned\")]", "\n", "}", ")", "\n", "\n", "", "self", ".", "psnr", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.test_step": [[142, 152], ["lit_module.LitDenoiser.model", "lit_module.LitDenoiser.psnr.update", "metrics.calc_batch_ssim", "noisy.view.view.dim", "noisy.view.view.size", "noisy.view.view.view", "clean.view.view.view"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.update", "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.calc_batch_ssim"], ["", "def", "test_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "noisy", ",", "clean", "=", "batch", "\n", "if", "noisy", ".", "dim", "(", ")", ">", "4", ":", "\n", "            ", "_", ",", "_", ",", "c", ",", "h", ",", "w", "=", "noisy", ".", "size", "(", ")", "\n", "noisy", "=", "noisy", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "clean", "=", "clean", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "", "cleaned", "=", "self", ".", "model", "(", "noisy", ")", "\n", "self", ".", "psnr", ".", "update", "(", "cleaned", ",", "clean", ")", "\n", "return", "calc_batch_ssim", "(", "cleaned", ",", "clean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.lit_module.LitDenoiser.test_epoch_end": [[153, 160], ["lit_module.LitDenoiser.psnr.compute", "lit_module.LitDenoiser.psnr.reset", "print"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.metrics.BatchSSIM.compute"], ["", "def", "test_epoch_end", "(", "self", ",", "outs", ")", ":", "\n", "        ", "test_psnr", "=", "self", ".", "psnr", ".", "compute", "(", ")", "\n", "self", ".", "psnr", ".", "reset", "(", ")", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "for", "(", "c", ",", "t", ")", "in", "outs", ":", "correct", "+=", "c", ";", "total", "+=", "t", ";", "\n", "print", "(", "test_psnr", ",", "correct", "/", "total", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDValidDataset.__init__": [[11, 16], ["h5py.File", "h5py.File.close", "h5py.File.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", "=", "None", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "+", "'sidd_valid_patches.h5'", "\n", "hf", "=", "h5py", ".", "File", "(", "self", ".", "path", ",", "'r'", ")", "\n", "self", ".", "keys", "=", "[", "key", "for", "key", "in", "hf", ".", "keys", "(", ")", "]", "\n", "hf", ".", "close", "(", ")", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDValidDataset.__len__": [[16, 18], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDValidDataset.__getitem__": [[19, 26], ["h5py.File", "numpy.array", "h5py.File.close", "torch.tensor().float().div().permute", "torch.tensor().float().div().permute", "torch.tensor().float().div", "torch.tensor().float().div", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "hf", "=", "h5py", ".", "File", "(", "self", ".", "path", ",", "'r'", ")", "\n", "data", "=", "np", ".", "array", "(", "hf", "[", "self", ".", "keys", "[", "index", "]", "]", ")", "\n", "hf", ".", "close", "(", ")", "\n", "return", "(", "\n", "torch", ".", "tensor", "(", "data", "[", "0", "]", ")", ".", "float", "(", ")", ".", "div", "(", "255", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ",", "\n", "torch", ".", "tensor", "(", "data", "[", "1", "]", ")", ".", "float", "(", ")", ".", "div", "(", "255", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDDataset.__init__": [[29, 35], ["print"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "patches_per_batch", "=", "32", ",", "patches_per_image", "=", "3200", ",", "patch_size", "=", "80", ",", "path", "=", "None", ")", ":", "\n", "        ", "print", "(", "'Initializing dataset'", ")", "\n", "self", ".", "path", "=", "path", "+", "'/sidd_medium_80_{0}/part{1}.h5'", "\n", "self", ".", "patches_per_batch", "=", "patches_per_batch", "\n", "self", ".", "patches_per_image", "=", "patches_per_image", "\n", "self", ".", "image_to_batch_ratio", "=", "self", ".", "patches_per_image", "//", "self", ".", "patches_per_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDDataset.__len__": [[36, 38], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "(", "320", "*", "self", ".", "patches_per_image", ")", "//", "self", ".", "patches_per_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.SIDDDataset.__getitem__": [[39, 53], ["h5py.File", "numpy.asarray", "h5py.File.close", "torch.tensor", "datasets.SIDDDataset.path.format", "noisy.float().div().permute", "clean.float().div().permute", "noisy.float().div", "clean.float().div", "noisy.float", "clean.float"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "hf", "=", "h5py", ".", "File", "(", "self", ".", "path", ".", "format", "(", "self", ".", "patches_per_image", ",", "index", "//", "self", ".", "image_to_batch_ratio", ")", ",", "'r'", ")", "\n", "#except: print(index,self.patches_per_image,self.patches_per_batch)", "\n", "data", "=", "np", ".", "asarray", "(", "hf", "[", "'patches'", "]", ")", "\n", "hf", ".", "close", "(", ")", "\n", "\n", "#indices = np.random.randint(low=0,high=self.patches_per_image,size=(self.patches_per_batch,))", "\n", "start", ",", "stop", "=", "(", "index", "%", "self", ".", "image_to_batch_ratio", ")", "*", "self", ".", "patches_per_batch", ",", "(", "index", "%", "self", ".", "image_to_batch_ratio", "+", "1", ")", "*", "self", ".", "patches_per_batch", "\n", "data", "=", "torch", ".", "tensor", "(", "data", "[", "start", ":", "stop", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "noisy", ",", "clean", "=", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", "\n", "\n", "return", "(", "\n", "noisy", ".", "float", "(", ")", ".", "div", "(", "255", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "clean", ".", "float", "(", ")", ".", "div", "(", "255", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RENOIRDataset.__init__": [[56, 78], ["print", "range", "parent_dir.format", "clean_images.append", "noisy_images.append", "camera_assign.append", "glob.glob", "glob.glob"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "parent_dir", "=", "\"D:\\\\malik\\\\DATASETS\\\\RENOIR\\\\\"", ",", "\n", "cameras", "=", "[", "'Mi3_Aligned'", ",", "'S90_Aligned'", ",", "'T3i_Aligned'", "]", ",", "\n", "camera_info", "=", "False", "\n", ")", ":", "\n", "        ", "parent_dir", "+=", "\"{camera}\\\\{camera}\\\\Batch_{batch:03d}\\\\\"", "\n", "camera_assign", "=", "[", "]", "\n", "clean_images", "=", "[", "]", "\n", "noisy_images", "=", "[", "]", "\n", "for", "camera", "in", "cameras", ":", "\n", "            ", "print", "(", "\"[RENOIR]:\"", ",", "camera", ")", "\n", "for", "batch_idx", "in", "range", "(", "1", ",", "41", ")", ":", "\n", "                ", "parent_dir_now", "=", "parent_dir", ".", "format", "(", "camera", "=", "camera", ",", "batch", "=", "batch_idx", ")", "\n", "clean_images", ".", "append", "(", "glob", ".", "glob", "(", "parent_dir_now", "+", "\"*Reference.bmp\"", ")", "[", "0", "]", ")", "\n", "noisy_images", ".", "append", "(", "glob", ".", "glob", "(", "parent_dir_now", "+", "\"*Noisy.bmp\"", ")", "[", "0", "]", ")", "\n", "camera_assign", ".", "append", "(", "camera", ")", "\n", "\n", "", "", "self", ".", "clean_images", "=", "clean_images", "\n", "self", ".", "noisy_images", "=", "noisy_images", "\n", "self", ".", "camera_assign", "=", "camera_assign", "\n", "self", ".", "camera_info", "=", "camera_info", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RENOIRDataset.__len__": [[79, 80], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "return", "len", "(", "self", ".", "clean_images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RENOIRDataset.__getitem__": [[81, 87], ["torchvision.to_tensor", "torchvision.to_tensor", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "noisy", "=", "TF", ".", "to_tensor", "(", "Image", ".", "open", "(", "self", ".", "noisy_images", "[", "index", "]", ")", ")", "\n", "clean", "=", "TF", ".", "to_tensor", "(", "Image", ".", "open", "(", "self", ".", "clean_images", "[", "index", "]", ")", ")", "\n", "camera", "=", "self", ".", "camera_assign", "[", "index", "]", "\n", "if", "self", ".", "camera_info", ":", "return", "noisy", ",", "clean", ",", "camera", "\n", "else", ":", "return", "noisy", ",", "clean", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__init__": [[89, 110], ["print", "parent_dir.format", "glob.glob", "range", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "parent_dir", "=", "\"D:\\\\malik\\\\DATASETS\\\\RIN\\\\\"", ",", "\n", "cameras", "=", "[", "'Canon_EOS_5D_Mark3'", ",", "'Nikon_D600'", ",", "'Nikon_D800'", "]", ",", "\n", "camera_info", "=", "False", ",", "\n", "crop_size", "=", "None", ",", "\n", ")", ":", "\n", "        ", "parent_dir", "+=", "\"{camera}\\\\*\\\\\"", "\n", "camera_assign", "=", "[", "]", "\n", "mat_paths", "=", "[", "]", "\n", "for", "camera", "in", "cameras", ":", "\n", "            ", "print", "(", "camera", ")", "\n", "parent_dir_now", "=", "parent_dir", ".", "format", "(", "camera", "=", "camera", ")", "\n", "file_list", "=", "glob", ".", "glob", "(", "parent_dir_now", "+", "\"*.mat\"", ")", "\n", "mat_paths", "+=", "file_list", "\n", "camera_assign", "+=", "[", "camera", "for", "_", "in", "range", "(", "len", "(", "file_list", ")", ")", "]", "\n", "\n", "", "self", ".", "mat_paths", "=", "mat_paths", "\n", "self", ".", "camera_assign", "=", "camera_assign", "\n", "self", ".", "camera_info", "=", "camera_info", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__len__": [[112, 113], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "return", "len", "(", "self", ".", "mat_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset._crop": [[114, 118], ["None"], "methods", ["None"], ["def", "_crop", "(", "self", ",", "image", ")", ":", "\n", "        ", "_", ",", "W", ",", "H", "=", "image", ".", "shape", "\n", "w", "=", "W", "//", "2", ";", "h", "=", "H", "//", "2", ";", "c", "=", "self", ".", "crop_size", "//", "2", "\n", "return", "image", "[", ":", ",", "(", "w", "-", "c", ")", ":", "(", "w", "+", "c", ")", ",", "(", "h", "-", "c", ")", ":", "(", "h", "+", "c", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset.__getitem__": [[119, 129], ["scipy.io.loadmat", "torchvision.to_tensor().float", "torchvision.to_tensor().float", "datasets.RINDataset._crop", "datasets.RINDataset._crop", "torchvision.to_tensor", "torchvision.to_tensor"], "methods", ["home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset._crop", "home.repos.pwc.inspect_result.junaidmalik09_rwdenoise.utils.datasets.RINDataset._crop"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "data", "=", "loadmat", "(", "self", ".", "mat_paths", "[", "index", "]", ")", "\n", "clean", "=", "TF", ".", "to_tensor", "(", "data", "[", "'img_mean'", "]", ")", ".", "float", "(", ")", "\n", "noisy", "=", "TF", ".", "to_tensor", "(", "data", "[", "'img_noisy'", "]", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "crop_size", "is", "not", "None", ":", "\n", "            ", "noisy", "=", "self", ".", "_crop", "(", "noisy", ")", "\n", "clean", "=", "self", ".", "_crop", "(", "clean", ")", "\n", "", "camera", "=", "self", ".", "camera_assign", "[", "index", "]", "\n", "if", "self", ".", "camera_info", ":", "return", "noisy", ",", "clean", ",", "camera", "\n", "else", ":", "return", "noisy", ",", "clean", "", "", "", ""]]}