{"home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.EarlyStopping.__init__": [[31, 54], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "patience", "=", "7", ",", "verbose", "=", "False", ",", "delta", "=", "0", ",", "path", "=", "'checkpoint.pt'", ",", "trace_func", "=", "print", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            patience (int): How long to wait after last time validation loss improved.\n                            Default: 7\n            verbose (bool): If True, prints a message for each validation loss improvement. \n                            Default: False\n            delta (float): Minimum change in the monitored quantity to qualify as an improvement.\n                            Default: 0\n            path (str): Path for the checkpoint to be saved to.\n                            Default: 'checkpoint.pt'\n            trace_func (function): trace print function.\n                            Default: print            \n        \"\"\"", "\n", "self", ".", "patience", "=", "patience", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "counter", "=", "0", "\n", "self", ".", "best_score", "=", "None", "\n", "self", ".", "early_stop", "=", "False", "\n", "self", ".", "val_loss_min", "=", "np", ".", "Inf", "\n", "self", ".", "delta", "=", "delta", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "trace_func", "=", "trace_func", "\n", "", "def", "__call__", "(", "self", ",", "val_loss", ",", "model", ")", ":", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.EarlyStopping.__call__": [[54, 70], ["training_tools.EarlyStopping.trace_func"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "val_loss", ",", "model", ")", ":", "\n", "\n", "        ", "score", "=", "-", "val_loss", "\n", "\n", "if", "self", ".", "best_score", "is", "None", ":", "\n", "            ", "self", ".", "best_score", "=", "score", "\n", "# self.save_checkpoint(val_loss, model)", "\n", "", "elif", "score", "<", "self", ".", "best_score", "+", "self", ".", "delta", ":", "\n", "            ", "self", ".", "counter", "+=", "1", "\n", "self", ".", "trace_func", "(", "f'EarlyStopping counter: {self.counter} out of {self.patience}'", ")", "\n", "if", "self", ".", "counter", ">=", "self", ".", "patience", ":", "\n", "                ", "self", ".", "early_stop", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "best_score", "=", "score", "\n", "# self.save_checkpoint(val_loss, model)", "\n", "self", ".", "counter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.EarlyStopping.save_checkpoint": [[71, 77], ["torch.save", "training_tools.EarlyStopping.trace_func", "model.state_dict"], "methods", ["None"], ["", "", "def", "save_checkpoint", "(", "self", ",", "val_loss", ",", "model", ")", ":", "\n", "        ", "'''Saves model when validation loss decrease.'''", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "self", ".", "trace_func", "(", "f'Validation loss decreased ({self.val_loss_min:.6f} --> {val_loss:.6f}).  Saving model ...'", ")", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "self", ".", "path", ")", "\n", "self", ".", "val_loss_min", "=", "val_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.setup_seed": [[15, 21], ["torch.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed"], "function", ["None"], ["def", "setup_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.seed_worker": [[23, 27], ["numpy.random.seed", "random.seed", "torch.initial_seed"], "function", ["None"], ["", "def", "seed_worker", "(", "worker_id", ")", ":", "\n", "    ", "worker_seed", "=", "torch", ".", "initial_seed", "(", ")", "%", "2", "**", "32", "\n", "np", ".", "random", ".", "seed", "(", "worker_seed", ")", "\n", "random", ".", "seed", "(", "worker_seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.result_summary": [[79, 101], ["range", "sklearn.metrics.accuracy_score", "sklearn.metrics.recall_score", "numpy.round", "numpy.mean", "len", "print", "print", "len", "range", "loss_list.append", "len", "y_true.append", "y_pred.append", "sklearn.metrics.confusion_matrix", "numpy.mean"], "function", ["None"], ["", "", "def", "result_summary", "(", "step_outputs", ",", "mode", ",", "epoch", ")", ":", "\n", "    ", "loss_list", ",", "y_true", ",", "y_pred", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "step", "in", "range", "(", "len", "(", "step_outputs", ")", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", ")", ")", ":", "\n", "            ", "y_true", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'truth'", "]", "[", "idx", "]", ")", "\n", "y_pred", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", "[", "idx", "]", ")", "\n", "", "loss_list", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'loss'", "]", ")", "\n", "\n", "", "result_dict", "=", "{", "}", "\n", "acc_score", "=", "accuracy_score", "(", "y_true", ",", "y_pred", ")", "\n", "rec_score", "=", "recall_score", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "confusion_matrix_arr", "=", "np", ".", "round", "(", "confusion_matrix", "(", "y_true", ",", "y_pred", ",", "normalize", "=", "'true'", ")", "*", "100", ",", "decimals", "=", "2", ")", "\n", "\n", "result_dict", "[", "'acc'", "]", "=", "acc_score", "\n", "result_dict", "[", "'uar'", "]", "=", "rec_score", "\n", "result_dict", "[", "'conf'", "]", "=", "confusion_matrix_arr", "\n", "result_dict", "[", "'loss'", "]", "=", "np", ".", "mean", "(", "loss_list", ")", "\n", "result_dict", "[", "'num_samples'", "]", "=", "len", "(", "y_pred", ")", "\n", "\n", "print", "(", "'%s accuracy %.3f / recall %.3f / loss %.3f after %d'", "%", "(", "mode", ",", "acc_score", ",", "rec_score", ",", "np", ".", "mean", "(", "loss_list", ")", ",", "epoch", ")", ")", "\n", "print", "(", "confusion_matrix_arr", ")", "\n", "return", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.utils.training_tools.get_class_weight": [[103, 120], ["sum", "max", "dict", "labels_dict.items", "labels_dict.values", "labels_dict.values", "math.log", "float"], "function", ["None"], ["", "def", "get_class_weight", "(", "labels_dict", ")", ":", "\n", "    ", "\"\"\"Calculate the weights of different categories\n\n    >>> get_class_weight({0: 633, 1: 898, 2: 641, 3: 699, 4: 799})\n    {0: 1.0, 1: 1.0, 2: 1.0, 3: 1.0, 4: 1.0}\n    >>> get_class_weight({0: 5, 1: 78, 2: 2814, 3: 7914})\n    {0: 7.366950709511269, 1: 4.619679795255778, 2: 1.034026384271035, 3: 1.0}\n    \"\"\"", "\n", "total", "=", "sum", "(", "labels_dict", ".", "values", "(", ")", ")", "\n", "max_num", "=", "max", "(", "labels_dict", ".", "values", "(", ")", ")", "\n", "mu", "=", "1.0", "/", "(", "total", "/", "max_num", ")", "\n", "class_weight", "=", "dict", "(", ")", "\n", "for", "key", ",", "value", "in", "labels_dict", ".", "items", "(", ")", ":", "\n", "        ", "score", "=", "math", ".", "log", "(", "mu", "*", "total", "/", "float", "(", "value", ")", ")", "\n", "# score = total / (float(value) * len(labels_dict))", "\n", "class_weight", "[", "key", "]", "=", "score", "if", "score", ">", "1.0", "else", "1.0", "\n", "", "return", "class_weight", "\n", "", ""]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.feature_extraction.pretrained_audio_feature_extraction.pretrained_feature": [[13, 29], ["save_feature.append", "save_feature.append", "save_feature.append", "range", "numpy.mean", "numpy.std", "numpy.max", "torch.inference_mode", "model.extract_features", "len", "save_feature.append", "features.detach().cpu().numpy", "features.detach().cpu().numpy", "features.detach().cpu().numpy", "numpy.mean", "model", "model", "features[].detach().cpu().numpy", "features.detach().cpu", "features.detach().cpu", "features.detach().cpu", "features[].detach().cpu", "features.detach", "features.detach", "features.detach", "features[].detach"], "function", ["None"], ["def", "pretrained_feature", "(", "audio", ")", ":", "\n", "\n", "    ", "save_feature", "=", "[", "]", "\n", "if", "args", ".", "feature_type", "==", "'wav2vec'", ":", "\n", "        ", "with", "torch", ".", "inference_mode", "(", ")", ":", "\n", "            ", "features", ",", "_", "=", "model", ".", "extract_features", "(", "audio", ")", "\n", "", "for", "idx", "in", "range", "(", "len", "(", "features", ")", ")", ":", "save_feature", ".", "append", "(", "np", ".", "mean", "(", "features", "[", "idx", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", ")", "\n", "", "elif", "args", ".", "feature_type", "==", "'distilhubert'", "or", "args", ".", "feature_type", "==", "'wav2vec2'", "or", "args", ".", "feature_type", "==", "'vq_wav2vec'", "or", "args", ".", "feature_type", "==", "'cpc'", ":", "\n", "        ", "features", "=", "model", "(", "[", "audio", "[", "0", "]", "]", ")", "[", "'last_hidden_state'", "]", "\n", "", "else", ":", "\n", "        ", "features", "=", "model", "(", "audio", ")", "[", "'last_hidden_state'", "]", "\n", "", "save_feature", ".", "append", "(", "np", ".", "mean", "(", "features", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", ")", "\n", "save_feature", ".", "append", "(", "np", ".", "std", "(", "features", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", ")", "\n", "save_feature", ".", "append", "(", "np", ".", "max", "(", "features", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", ")", "\n", "del", "features", "\n", "return", "save_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.feature_extraction.spectrogram_feature_extraction.mfcc": [[14, 26], ["torchaudio.transforms.MFCC", "torchaudio.transforms.MFCC.detach", "numpy.expand_dims", "numpy.expand_dims", "torchaudio.transforms.MFCC.detach", "torchaudio.transforms.MFCC.detach", "numpy.concatenate", "numpy.gradient", "numpy.gradient", "torchaudio.transforms.MFCC.", "torchaudio.transforms.MFCC.", "torchaudio.transforms.MFCC.", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["def", "mfcc", "(", "audio", ")", ":", "\n", "\n", "    ", "audio_transform", "=", "torchaudio", ".", "transforms", ".", "MFCC", "(", "sample_rate", "=", "16000", ",", "n_mfcc", "=", "40", ",", "melkwargs", "=", "{", "\"n_fft\"", ":", "1600", ",", "\"hop_length\"", ":", "160", ",", "\"power\"", ":", "2", "}", ")", "\n", "mfcc", "=", "audio_transform", "(", "audio", ")", ".", "detach", "(", ")", "\n", "\n", "der1", "=", "np", ".", "expand_dims", "(", "np", ".", "gradient", "(", "audio", "[", "0", "]", ")", ",", "axis", "=", "0", ")", "\n", "der2", "=", "np", ".", "expand_dims", "(", "np", ".", "gradient", "(", "audio", "[", "0", "]", ",", "2", ")", ",", "axis", "=", "0", ")", "\n", "\n", "delta", "=", "audio_transform", "(", "torch", ".", "from_numpy", "(", "der1", ")", ")", ".", "detach", "(", ")", "\n", "ddelta", "=", "audio_transform", "(", "torch", ".", "from_numpy", "(", "der2", ")", ")", ".", "detach", "(", ")", "\n", "\n", "return", "np", ".", "concatenate", "(", "(", "mfcc", ",", "delta", ",", "ddelta", ")", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.feature_extraction.spectrogram_feature_extraction.mel_spectrogram": [[28, 46], ["torchaudio.transforms.MelSpectrogram", "torchaudio.transforms.AmplitudeToDB", "torchaudio.transforms.AmplitudeToDB.", "torchaudio.transforms.MelSpectrogram.detach", "int", "int", "torchaudio.transforms.MelSpectrogram."], "function", ["None"], ["", "def", "mel_spectrogram", "(", "audio", ",", "n_fft", "=", "1024", ",", "feature_len", "=", "128", ")", ":", "\n", "\n", "    ", "window_size", "=", "n_fft", "\n", "window_hop", "=", "160", "\n", "n_mels", "=", "feature_len", "\n", "window_fn", "=", "torch", ".", "hann_window", "\n", "\n", "audio_transform", "=", "torchaudio", ".", "transforms", ".", "MelSpectrogram", "(", "\n", "sample_rate", "=", "16000", ",", "\n", "n_mels", "=", "n_mels", ",", "\n", "n_fft", "=", "n_fft", ",", "\n", "win_length", "=", "int", "(", "window_size", ")", ",", "\n", "hop_length", "=", "int", "(", "window_hop", ")", ",", "\n", "window_fn", "=", "window_fn", ",", "\n", ")", "\n", "\n", "audio_amp_to_db", "=", "torchaudio", ".", "transforms", ".", "AmplitudeToDB", "(", ")", "\n", "return", "audio_amp_to_db", "(", "audio_transform", "(", "audio", ")", ".", "detach", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.feature_extraction.spectrogram_feature_extraction.create_folder": [[48, 51], ["pathlib.Path.exists", "pathlib.Path.mkdir"], "function", ["None"], ["", "def", "create_folder", "(", "folder", ")", ":", "\n", "    ", "if", "Path", ".", "exists", "(", "folder", ")", "is", "False", ":", "\n", "        ", "Path", ".", "mkdir", "(", "folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.model.dnn_models.dnn_classifier.__init__": [[17, 32], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "dnn_models.dnn_classifier.init_weight"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.DatasetGenerator.__init__", "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.model.dnn_models.dnn_classifier.init_weight"], ["    ", "def", "__init__", "(", "self", ",", "pred", ",", "input_spec", ",", "dropout", ")", ":", "\n", "\n", "        ", "super", "(", "dnn_classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout_p", "=", "dropout", "\n", "self", ".", "num_classes", "=", "class_dict", "[", "pred", "]", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "dropout_p", ")", "\n", "self", ".", "dense_relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dense_relu2", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "dense1", "=", "nn", ".", "Linear", "(", "input_spec", ",", "256", ")", "\n", "self", ".", "dense2", "=", "nn", ".", "Linear", "(", "256", ",", "128", ")", "\n", "\n", "self", ".", "pred_layer", "=", "nn", ".", "Linear", "(", "128", ",", "self", ".", "num_classes", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.model.dnn_models.dnn_classifier.init_weight": [[33, 38], ["type", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "m.bias.data.fill_"], "methods", ["None"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "_modules", ":", "\n", "            ", "if", "type", "(", "m", ")", "==", "nn", ".", "Linear", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "m", ".", "weight", ",", "nonlinearity", "=", "'relu'", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.model.dnn_models.dnn_classifier.forward": [[39, 52], ["input_var.float", "dnn_models.dnn_classifier.dense1", "dnn_models.dnn_classifier.dense_relu1", "dnn_models.dnn_classifier.dropout", "dnn_models.dnn_classifier.dense2", "dnn_models.dnn_classifier.dense_relu2", "dnn_models.dnn_classifier.dropout", "dnn_models.dnn_classifier.pred_layer"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "input_var", ")", ":", "\n", "\n", "        ", "x", "=", "input_var", ".", "float", "(", ")", "\n", "x", "=", "self", ".", "dense1", "(", "x", ")", "\n", "x", "=", "self", ".", "dense_relu1", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dense2", "(", "x", ")", "\n", "x", "=", "self", ".", "dense_relu2", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "preds", "=", "self", ".", "pred_layer", "(", "x", ")", "\n", "return", "preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.preprocess_data.preprocess_federate_data.save_data_dict": [[16, 32], ["[].append", "[].append", "save_data.copy", "[].append", "[].append", "save_data.copy"], "function", ["None"], ["def", "save_data_dict", "(", "save_data", ",", "label", ",", "gender", ",", "speaker_id", ")", ":", "\n", "    ", "if", "speaker_id", "in", "test_speaker_id_arr", ":", "\n", "        ", "if", "speaker_id", "not", "in", "test_dict", ":", "\n", "            ", "test_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "test_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "[", "]", "\n", "test_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "[", "]", "\n", "", "test_dict", "[", "speaker_id", "]", "[", "'data'", "]", ".", "append", "(", "save_data", ".", "copy", "(", ")", ")", "\n", "test_dict", "[", "speaker_id", "]", "[", "'label'", "]", ".", "append", "(", "emo_dict", "[", "label", "]", ")", "\n", "", "elif", "speaker_id", "in", "train_speaker_id_arr", ":", "\n", "        ", "if", "speaker_id", "not", "in", "training_dict", ":", "\n", "            ", "training_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "training_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "[", "]", "\n", "training_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "[", "]", "\n", "\n", "", "training_dict", "[", "speaker_id", "]", "[", "'data'", "]", ".", "append", "(", "save_data", ".", "copy", "(", ")", ")", "\n", "training_dict", "[", "speaker_id", "]", "[", "'label'", "]", ".", "append", "(", "emo_dict", "[", "label", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.preprocess_data.preprocess_federate_data.save_non_iid": [[33, 128], ["list", "data_dict.keys", "numpy.arange", "numpy.vstack", "range", "len", "numpy.extract", "len", "range", "range", "numpy.nanmean", "numpy.nanstd", "range", "len", "numpy.random.choice", "list", "pathlib.Path.mkdir", "open", "pickle.dump", "open.close", "pathlib.Path.mkdir", "open", "pickle.dump", "open.close", "numpy.array", "range", "numpy.nanmean", "numpy.nanstd", "range", "numpy.random.choice", "list", "pathlib.Path.mkdir", "open", "pickle.dump", "open.close", "pathlib.Path.mkdir", "open", "pickle.dump", "open.close", "len", "sub_client_data_dict[].append", "sub_client_data_dict[].append", "numpy.array", "numpy.array", "len", "numpy.arange", "int", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "preprocess_path.joinpath", "str", "preprocess_path.joinpath", "str", "idxs_labels[].argsort", "numpy.random.choice", "numpy.array", "sub_client_data_dict[].append", "sub_client_data_dict[].append", "numpy.array", "numpy.array", "len", "numpy.arange", "int", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "preprocess_path.joinpath", "str", "preprocess_path.joinpath", "str", "numpy.array", "set", "set", "preprocess_path.joinpath", "preprocess_path.joinpath", "len", "list", "list", "numpy.array", "len", "set", "set", "preprocess_path.joinpath", "preprocess_path.joinpath", "numpy.arange", "len", "int", "len", "numpy.arange", "str", "str", "int", "set", "set", "len", "str", "str", "str", "str"], "function", ["None"], ["", "", "def", "save_non_iid", "(", "data_dict", ",", "type", "=", "'non'", ")", ":", "\n", "    ", "speaker_ids", "=", "list", "(", "data_dict", ".", "keys", "(", ")", ")", "\n", "for", "speaker_id", "in", "speaker_ids", ":", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "len", "(", "data_dict", "[", "speaker_id", "]", "[", "'label'", "]", ")", ")", "\n", "idxs_labels", "=", "np", ".", "vstack", "(", "(", "idxs", ",", "np", ".", "array", "(", "data_dict", "[", "speaker_id", "]", "[", "'label'", "]", ")", ")", ")", "\n", "idxs_labels", "=", "idxs_labels", "[", ":", ",", "idxs_labels", "[", "1", ",", ":", "]", ".", "argsort", "(", ")", "]", "\n", "\n", "idxs", ",", "labels", "=", "idxs_labels", "[", "0", "]", ",", "idxs_labels", "[", "1", "]", "\n", "class_dist", "=", "{", "}", "\n", "specific_class_dict", "=", "{", "}", "\n", "for", "class_idx", "in", "range", "(", "4", ")", ":", "\n", "            ", "specific_class", "=", "np", ".", "extract", "(", "labels", "==", "class_idx", ",", "idxs", ")", "\n", "class_dist", "[", "class_idx", "]", "=", "len", "(", "specific_class", ")", "\n", "specific_class_dict", "[", "class_idx", "]", "=", "specific_class", "\n", "\n", "# we split each client's data to four shards, and each shard is with 3 labels", "\n", "", "if", "args", ".", "dataset", "!=", "'crema-d'", ":", "\n", "            ", "num_sub_clients", "=", "4", "\n", "for", "sub_client_idx", "in", "range", "(", "num_sub_clients", ")", ":", "\n", "                ", "train_idx", "=", "[", "]", "\n", "sub_client_data_dict", "=", "{", "}", "\n", "sub_client_data_dict", "[", "'data'", "]", ",", "sub_client_data_dict", "[", "'label'", "]", "=", "[", "]", ",", "[", "]", "\n", "for", "class_idx", "in", "range", "(", "4", ")", ":", "\n", "# skip the class", "\n", "                    ", "if", "class_idx", "==", "sub_client_idx", ":", "continue", "\n", "num_samples", "=", "len", "(", "specific_class_dict", "[", "class_idx", "]", ")", "if", "len", "(", "specific_class_dict", "[", "class_idx", "]", ")", "<", "int", "(", "class_dist", "[", "class_idx", "]", "/", "3", ")", "+", "1", "else", "int", "(", "class_dist", "[", "class_idx", "]", "/", "3", ")", "+", "1", "\n", "train_tmp", "=", "np", ".", "random", ".", "choice", "(", "specific_class_dict", "[", "class_idx", "]", ",", "num_samples", ",", "replace", "=", "False", ")", "\n", "train_idx", "=", "train_idx", "+", "list", "(", "train_tmp", ")", "\n", "specific_class_dict", "[", "class_idx", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "specific_class_dict", "[", "class_idx", "]", ")", "-", "set", "(", "train_tmp", ")", ")", ")", "\n", "\n", "# append data", "\n", "", "for", "idx", "in", "train_idx", ":", "\n", "                    ", "sub_client_data_dict", "[", "'data'", "]", ".", "append", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", "[", "idx", "]", ")", "\n", "sub_client_data_dict", "[", "'label'", "]", ".", "append", "(", "data_dict", "[", "speaker_id", "]", "[", "'label'", "]", "[", "idx", "]", ")", "\n", "\n", "# z-normalization per client", "\n", "", "speaker_mean", "=", "np", ".", "nanmean", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "speaker_std", "=", "np", ".", "nanstd", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ")", ")", ":", "\n", "                    ", "sub_client_data_dict", "[", "'data'", "]", "[", "idx", "]", "=", "(", "sub_client_data_dict", "[", "'data'", "]", "[", "idx", "]", "-", "speaker_mean", ")", "/", "(", "speaker_std", "+", "1e-5", ")", "\n", "\n", "", "client_val_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "train_idx", ")", ")", ",", "int", "(", "len", "(", "train_idx", ")", "*", "0.2", ")", ",", "replace", "=", "False", ")", "\n", "client_train_idx", "=", "list", "(", "set", "(", "np", ".", "arange", "(", "len", "(", "train_idx", ")", ")", ")", "-", "set", "(", "client_val_idx", ")", ")", "\n", "sub_client_train_dict", ",", "sub_client_val_dict", "=", "{", "}", ",", "{", "}", "\n", "\n", "sub_client_train_dict", "[", "'data'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", "[", "client_train_idx", "]", "\n", "sub_client_train_dict", "[", "'label'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'label'", "]", ")", "[", "client_train_idx", "]", "\n", "sub_client_val_dict", "[", "'data'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", "[", "client_val_idx", "]", "\n", "sub_client_val_dict", "[", "'label'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'label'", "]", ")", "[", "client_val_idx", "]", "\n", "\n", "# dump the data", "\n", "Path", ".", "mkdir", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'train'", ")", ",", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "str", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'train'", ",", "str", "(", "speaker_id", ")", "+", "'_'", "+", "str", "(", "sub_client_idx", ")", "+", "'.pkl'", ")", ")", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "sub_client_train_dict", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "Path", ".", "mkdir", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'validation'", ")", ",", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "str", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'validation'", ",", "str", "(", "speaker_id", ")", "+", "'_'", "+", "str", "(", "sub_client_idx", ")", "+", "'.pkl'", ")", ")", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "sub_client_val_dict", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "sub_client_data_dict", "=", "{", "}", "\n", "sub_client_data_dict", "[", "'data'", "]", ",", "sub_client_data_dict", "[", "'label'", "]", "=", "[", "]", ",", "[", "]", "\n", "\n", "# append data", "\n", "for", "idx", "in", "range", "(", "len", "(", "data_dict", "[", "speaker_id", "]", "[", "'label'", "]", ")", ")", ":", "\n", "                ", "sub_client_data_dict", "[", "'data'", "]", ".", "append", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", "[", "idx", "]", ")", "\n", "sub_client_data_dict", "[", "'label'", "]", ".", "append", "(", "data_dict", "[", "speaker_id", "]", "[", "'label'", "]", "[", "idx", "]", ")", "\n", "\n", "# z-normalization per client", "\n", "", "speaker_mean", "=", "np", ".", "nanmean", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "speaker_std", "=", "np", ".", "nanstd", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", ")", ")", ":", "\n", "                ", "sub_client_data_dict", "[", "'data'", "]", "[", "idx", "]", "=", "(", "sub_client_data_dict", "[", "'data'", "]", "[", "idx", "]", "-", "speaker_mean", ")", "/", "(", "speaker_std", "+", "1e-5", ")", "\n", "\n", "", "data_len", "=", "len", "(", "sub_client_data_dict", "[", "'data'", "]", ")", "\n", "client_val_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "data_len", ")", ",", "int", "(", "data_len", "*", "0.2", ")", ",", "replace", "=", "False", ")", "\n", "client_train_idx", "=", "list", "(", "set", "(", "np", ".", "arange", "(", "data_len", ")", ")", "-", "set", "(", "client_val_idx", ")", ")", "\n", "sub_client_train_dict", ",", "sub_client_val_dict", "=", "{", "}", ",", "{", "}", "\n", "\n", "sub_client_train_dict", "[", "'data'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", "[", "client_train_idx", "]", "\n", "sub_client_train_dict", "[", "'label'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'label'", "]", ")", "[", "client_train_idx", "]", "\n", "sub_client_val_dict", "[", "'data'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'data'", "]", ")", "[", "client_val_idx", "]", "\n", "sub_client_val_dict", "[", "'label'", "]", "=", "np", ".", "array", "(", "sub_client_data_dict", "[", "'label'", "]", ")", "[", "client_val_idx", "]", "\n", "\n", "# dump the data", "\n", "Path", ".", "mkdir", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'train'", ")", ",", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "str", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'train'", ",", "str", "(", "speaker_id", ")", "+", "'.pkl'", ")", ")", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "sub_client_train_dict", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "Path", ".", "mkdir", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'validation'", ")", ",", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "str", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'validation'", ",", "str", "(", "speaker_id", ")", "+", "'.pkl'", ")", ")", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "sub_client_val_dict", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.preprocess_data.preprocess_federate_data.save_test": [[129, 143], ["list", "data_dict.keys", "numpy.nanmean", "numpy.nanstd", "range", "pathlib.Path.mkdir", "open", "pickle.dump", "open.close", "numpy.array", "numpy.array", "len", "preprocess_path.joinpath", "str", "numpy.array", "preprocess_path.joinpath", "str"], "function", ["None"], ["", "", "", "def", "save_test", "(", "data_dict", ")", ":", "\n", "    ", "speaker_ids", "=", "list", "(", "data_dict", ".", "keys", "(", ")", ")", "\n", "for", "speaker_id", "in", "speaker_ids", ":", "\n", "# z-normalization per client", "\n", "        ", "speaker_mean", "=", "np", ".", "nanmean", "(", "np", ".", "array", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "speaker_std", "=", "np", ".", "nanstd", "(", "np", ".", "array", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "np", ".", "array", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", ")", ")", ")", ":", "\n", "            ", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", "[", "idx", "]", "=", "(", "data_dict", "[", "speaker_id", "]", "[", "'data'", "]", "[", "idx", "]", "-", "speaker_mean", ")", "/", "(", "speaker_std", "+", "1e-5", ")", "\n", "\n", "# dump the data", "\n", "", "Path", ".", "mkdir", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'test'", ")", ",", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "str", "(", "preprocess_path", ".", "joinpath", "(", "data_set_str", ",", "test_fold", ",", "'test'", ",", "str", "(", "speaker_id", ")", "+", "'.pkl'", ")", ")", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "data_dict", "[", "speaker_id", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_semi_ser_classifier.DatasetGenerator.__init__": [[36, 38], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_semi_ser_classifier.DatasetGenerator.__len__": [[39, 41], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", "[", "'data'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_semi_ser_classifier.DatasetGenerator.__getitem__": [[42, 46], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "data", "=", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", "\n", "label", "=", "self", ".", "dataset", "[", "'label'", "]", "[", "item", "]", "\n", "return", "torch", ".", "tensor", "(", "data", ")", ",", "torch", ".", "tensor", "(", "int", "(", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_semi_ser_classifier.save_result": [[30, 34], ["pandas.DataFrame"], "function", ["None"], ["def", "save_result", "(", "save_index", ",", "acc", ",", "uar", ",", "best_epoch", ",", "dataset", ")", ":", "\n", "    ", "row_df", "=", "pd", ".", "DataFrame", "(", "index", "=", "[", "save_index", "]", ")", "\n", "row_df", "[", "'acc'", "]", ",", "row_df", "[", "'uar'", "]", ",", "row_df", "[", "'epoch'", "]", ",", "row_df", "[", "'dataset'", "]", "=", "acc", ",", "uar", ",", "best_epoch", ",", "dataset", "\n", "return", "row_df", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_semi_ser_classifier.read_data_dict_by_client": [[47, 82], ["os.listdir", "os.listdir", "os.listdir", "preprocess_path.joinpath", "numpy.random.RandomState().permutation", "preprocess_path.joinpath", "pickle.load.copy", "preprocess_path.joinpath", "pickle.load.copy", "file_name.split", "open", "pickle.load", "len", "file_name.split", "open", "pickle.load", "file_name.split", "open", "pickle.load", "str", "preprocess_path.joinpath", "numpy.random.RandomState", "str", "preprocess_path.joinpath", "str", "preprocess_path.joinpath", "int", "int", "int", "str", "int", "int", "int", "int", "str", "str", "int", "int", "int", "float", "len", "float", "len", "float", "len", "float", "len"], "function", ["None"], ["", "", "def", "read_data_dict_by_client", "(", "fold_idx", ")", ":", "\n", "    ", "return_labeled_train_dict", ",", "return_unlabeled_train_dict", ",", "return_val_dict", ",", "return_test_dict", "=", "{", "}", ",", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "# prepare the data for the training", "\n", "file_idx", "=", "0", "\n", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'train'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'train'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "# how many data we have for training", "\n", "", "perm_array", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "file_idx", ")", ".", "permutation", "(", "len", "(", "data_dict", "[", "'label'", "]", ")", ")", "\n", "file_idx", "+=", "1", "\n", "x", ",", "y", "=", "data_dict", "[", "'data'", "]", ",", "data_dict", "[", "'label'", "]", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "x", "[", "perm_array", "[", ":", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", "]", "]", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "y", "[", "perm_array", "[", ":", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", "]", "]", "\n", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "x", "[", "perm_array", "[", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", ":", "]", "]", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "y", "[", "perm_array", "[", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", ":", "]", "]", "\n", "\n", "", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'validation'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'validation'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return_val_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_val_dict", "[", "speaker_id", "]", "=", "data_dict", ".", "copy", "(", ")", "\n", "\n", "", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'test'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'test'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return_test_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_test_dict", "[", "speaker_id", "]", "=", "data_dict", ".", "copy", "(", ")", "\n", "", "return", "return_labeled_train_dict", ",", "return_unlabeled_train_dict", ",", "return_val_dict", ",", "return_test_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.local_trainer.__init__": [[60, 66], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "device", ",", "criterion", ",", "model_type", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "model_type", "=", "model_type", "\n", "self", ".", "dataloader", "=", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.local_trainer.update_weights": [[67, 94], ["model.train", "torch.optim.Adam", "range", "update.result_summary", "model.parameters", "int", "enumerate", "model.state_dict", "float", "model.zero_grad", "torch.optim.Adam.zero_grad", "model", "torch.log_softmax", "update.local_trainer.criterion", "update.local_trainer.backward", "torch.optim.Adam.step", "numpy.argmax", "step_outputs.append", "x.to", "y.to", "x.float", "torch.log_softmax.detach().cpu().numpy", "range", "y.detach().cpu().numpy", "range", "update.local_trainer.item", "torch.log_softmax.detach().cpu", "len", "len", "y.detach().cpu", "torch.log_softmax.detach", "y.detach"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary"], ["", "def", "update_weights", "(", "self", ",", "model", ",", "clip", "=", "None", ")", ":", "\n", "# Set mode to train model", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "step_outputs", "=", "[", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "float", "(", "self", ".", "args", ".", "learning_rate", ")", ",", "weight_decay", "=", "1e-04", ",", "betas", "=", "(", "0.9", ",", "0.98", ")", ",", "eps", "=", "1e-9", ")", "\n", "\n", "for", "iter", "in", "range", "(", "int", "(", "self", ".", "args", ".", "local_epochs", ")", ")", ":", "\n", "            ", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "                ", "x", ",", "y", "=", "batch_data", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "self", ".", "device", ")", ",", "y", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "model", ".", "zero_grad", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "logits", "=", "torch", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "predictions", "=", "np", ".", "argmax", "(", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", "\n", "pred_list", "=", "[", "predictions", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "truth_list", "=", "[", "y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "step_outputs", ".", "append", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'pred'", ":", "pred_list", ",", "'truth'", ":", "truth_list", "}", ")", "\n", "\n", "", "", "result_dict", ",", "_", ",", "_", "=", "result_summary", "(", "step_outputs", ")", "\n", "return", "model", ".", "state_dict", "(", ")", ",", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.local_trainer.update_weights_scaffold": [[96, 168], ["c_global.state_dict", "c_local.state_dict", "torch.optim.Adam", "copy.deepcopy", "collections.Counter", "min", "range", "torch.FloatTensor().to", "torch.nn.NLLLoss().to", "range", "c_local.state_dict", "copy.deepcopy", "copy.deepcopy.cpu().state_dict", "model.cpu().state_dict", "c_local.load_state_dict", "update.result_summary", "float", "numpy.power", "model.parameters", "numpy.power", "numpy.array", "len", "int", "model.to", "model.train", "enumerate", "c_local.state_dict", "model.state_dict", "int", "cls_num_list.append", "cls_num_list.append", "numpy.sum", "torch.FloatTensor", "torch.nn.NLLLoss", "model.to", "model.zero_grad", "torch.optim.Adam.zero_grad", "model", "torch.log_softmax", "torch.nn.NLLLoss().to.", "torch.optim.Adam.zero_grad", "nn.NLLLoss().to.backward", "torch.optim.Adam.step", "model.cpu().state_dict().copy", "model.load_state_dict", "numpy.argmax", "step_outputs.append", "copy.deepcopy.cpu", "model.cpu", "x.to", "y.to", "x.float", "torch.log_softmax.detach().cpu().numpy", "model.cpu().state_dict", "range", "y.detach().cpu().numpy", "range", "nn.NLLLoss().to.item", "torch.log_softmax.detach().cpu", "len", "len", "model.cpu", "y.detach().cpu", "torch.log_softmax.detach", "y.detach"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary"], ["", "def", "update_weights_scaffold", "(", "self", ",", "model", ",", "c_global", ",", "c_local", ",", "current_epoch", ",", "label_list", ")", ":", "\n", "        ", "step_outputs", "=", "[", "]", "\n", "\n", "c_global_para", "=", "c_global", ".", "state_dict", "(", ")", "\n", "c_local_para", "=", "c_local", ".", "state_dict", "(", ")", "\n", "cnt", "=", "0", "\n", "lr", "=", "float", "(", "self", ".", "args", ".", "learning_rate", ")", "/", "np", ".", "power", "(", "2", ",", "(", "int", "(", "current_epoch", "/", "100", ")", ")", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "1e-04", ",", "betas", "=", "(", "0.9", ",", "0.98", ")", ",", "eps", "=", "1e-9", ")", "\n", "global_model", "=", "copy", ".", "deepcopy", "(", "model", ")", "\n", "\n", "class_dict", "=", "collections", ".", "Counter", "(", "label_list", ")", "\n", "minimum", "=", "min", "(", "class_dict", ",", "key", "=", "class_dict", ".", "get", ")", "\n", "cls_num_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "if", "i", "in", "class_dict", ":", "cls_num_list", ".", "append", "(", "class_dict", "[", "i", "]", ")", "\n", "else", ":", "cls_num_list", ".", "append", "(", "class_dict", "[", "minimum", "]", ")", "\n", "\n", "", "beta", "=", "0.9999", "\n", "effective_num", "=", "1.0", "-", "np", ".", "power", "(", "beta", ",", "cls_num_list", ")", "\n", "per_cls_weights", "=", "(", "1.0", "-", "beta", ")", "/", "np", ".", "array", "(", "effective_num", ")", "\n", "per_cls_weights", "=", "per_cls_weights", "/", "np", ".", "sum", "(", "per_cls_weights", ")", "*", "len", "(", "cls_num_list", ")", "\n", "per_cls_weights", "=", "torch", ".", "FloatTensor", "(", "per_cls_weights", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "criterion", "=", "nn", ".", "NLLLoss", "(", "per_cls_weights", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "# pdb.set_trace()", "\n", "\n", "for", "iter", "in", "range", "(", "int", "(", "self", ".", "args", ".", "local_epochs", ")", ")", ":", "\n", "\n", "            ", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "\n", "# training the model", "\n", "                ", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "x", ",", "y", "=", "batch_data", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "self", ".", "device", ")", ",", "y", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "logits", "=", "torch", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "y", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "cnt", "+=", "1", "\n", "\n", "# scaffold", "\n", "model_para", "=", "model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", ".", "copy", "(", ")", "\n", "for", "key", "in", "model_para", ":", "\n", "                    ", "model_para", "[", "key", "]", "=", "model_para", "[", "key", "]", "-", "lr", "*", "(", "c_global_para", "[", "key", "]", "-", "c_local_para", "[", "key", "]", ")", "\n", "", "model", ".", "load_state_dict", "(", "model_para", ")", "\n", "\n", "# obtain results", "\n", "predictions", "=", "np", ".", "argmax", "(", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", "\n", "pred_list", "=", "[", "predictions", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "truth_list", "=", "[", "y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "step_outputs", ".", "append", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'pred'", ":", "pred_list", ",", "'truth'", ":", "truth_list", "}", ")", "\n", "\n", "", "", "c_new_para", "=", "c_local", ".", "state_dict", "(", ")", "\n", "c_delta_para", "=", "copy", ".", "deepcopy", "(", "c_local", ".", "state_dict", "(", ")", ")", "\n", "global_model_para", "=", "global_model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", "\n", "local_model_para", "=", "model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", "\n", "\n", "for", "key", "in", "local_model_para", ":", "\n", "            ", "c_new_para", "[", "key", "]", "=", "c_new_para", "[", "key", "]", "-", "c_global_para", "[", "key", "]", "+", "(", "global_model_para", "[", "key", "]", "-", "local_model_para", "[", "key", "]", ")", "/", "(", "cnt", "*", "lr", ")", "\n", "c_delta_para", "[", "key", "]", "=", "c_new_para", "[", "key", "]", "-", "c_local_para", "[", "key", "]", "\n", "", "c_local", ".", "load_state_dict", "(", "c_new_para", ")", "\n", "result_dict", ",", "_", ",", "_", "=", "result_summary", "(", "step_outputs", ")", "\n", "return", "model", ".", "state_dict", "(", ")", ",", "c_delta_para", ",", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.local_trainer.inference": [[169, 186], ["model.eval", "enumerate", "update.result_summary", "model", "update.local_trainer.criterion", "numpy.argmax", "step_outputs.append", "x.to", "y.to", "x.float", "model.detach().cpu().numpy", "range", "y.detach().cpu().numpy", "range", "update.local_trainer.item", "model.detach().cpu", "len", "len", "y.detach().cpu", "model.detach", "y.detach"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary"], ["", "def", "inference", "(", "self", ",", "model", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "step_outputs", "=", "[", "]", "\n", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "            ", "x", ",", "y", "=", "batch_data", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "self", ".", "device", ")", ",", "y", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "y", ")", "\n", "\n", "predictions", "=", "np", ".", "argmax", "(", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", "\n", "pred_list", "=", "[", "predictions", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "truth_list", "=", "[", "y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "step_outputs", ".", "append", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'pred'", ":", "pred_list", ",", "'truth'", ":", "truth_list", "}", ")", "\n", "", "result_dict", ",", "y_true", ",", "y_pred", "=", "result_summary", "(", "step_outputs", ")", "\n", "return", "result_dict", ",", "y_true", ",", "y_pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.average_weights": [[13, 26], ["numpy.sum", "copy.deepcopy", "copy.deepcopy.keys", "copy.deepcopy.keys", "range", "len", "torch.div"], "function", ["None"], ["def", "average_weights", "(", "w", ",", "num_samples_list", ")", ":", "\n", "    ", "\"\"\"\n    Returns the average of the weights.\n    \"\"\"", "\n", "total_num_samples", "=", "np", ".", "sum", "(", "num_samples_list", ")", "\n", "w_avg", "=", "copy", ".", "deepcopy", "(", "w", "[", "0", "]", ")", "\n", "\n", "for", "key", "in", "w_avg", ".", "keys", "(", ")", ":", "\n", "        ", "w_avg", "[", "key", "]", "=", "w", "[", "0", "]", "[", "key", "]", "*", "(", "num_samples_list", "[", "0", "]", "/", "total_num_samples", ")", "\n", "", "for", "key", "in", "w_avg", ".", "keys", "(", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "len", "(", "w", ")", ")", ":", "\n", "            ", "w_avg", "[", "key", "]", "+=", "torch", ".", "div", "(", "w", "[", "i", "]", "[", "key", "]", "*", "num_samples_list", "[", "i", "]", ",", "total_num_samples", ")", "\n", "", "", "return", "w_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.result_summary": [[27, 46], ["range", "sklearn.metrics.accuracy_score", "sklearn.metrics.recall_score", "numpy.round", "numpy.mean", "len", "len", "range", "loss_list.append", "len", "y_true.append", "y_pred.append", "sklearn.metrics.confusion_matrix"], "function", ["None"], ["", "def", "result_summary", "(", "step_outputs", ")", ":", "\n", "    ", "loss_list", ",", "y_true", ",", "y_pred", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "step", "in", "range", "(", "len", "(", "step_outputs", ")", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", ")", ")", ":", "\n", "            ", "y_true", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'truth'", "]", "[", "idx", "]", ")", "\n", "y_pred", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", "[", "idx", "]", ")", "\n", "", "loss_list", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'loss'", "]", ")", "\n", "\n", "", "result_dict", "=", "{", "}", "\n", "acc_score", "=", "accuracy_score", "(", "y_true", ",", "y_pred", ")", "\n", "rec_score", "=", "recall_score", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "confusion_matrix_arr", "=", "np", ".", "round", "(", "confusion_matrix", "(", "y_true", ",", "y_pred", ",", "normalize", "=", "'true'", ")", "*", "100", ",", "decimals", "=", "2", ")", "\n", "\n", "result_dict", "[", "'acc'", "]", "=", "acc_score", "\n", "result_dict", "[", "'uar'", "]", "=", "rec_score", "\n", "result_dict", "[", "'conf'", "]", "=", "confusion_matrix_arr", "\n", "result_dict", "[", "'loss'", "]", "=", "np", ".", "mean", "(", "loss_list", ")", "\n", "result_dict", "[", "'num_samples'", "]", "=", "len", "(", "y_pred", ")", "\n", "return", "result_dict", ",", "y_true", ",", "y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update.pred_summary": [[47, 57], ["sklearn.metrics.accuracy_score", "sklearn.metrics.recall_score", "numpy.round", "sklearn.metrics.confusion_matrix"], "function", ["None"], ["", "def", "pred_summary", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "result_dict", "=", "{", "}", "\n", "acc_score", "=", "accuracy_score", "(", "y_true", ",", "y_pred", ")", "\n", "rec_score", "=", "recall_score", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "confusion_matrix_arr", "=", "np", ".", "round", "(", "confusion_matrix", "(", "y_true", ",", "y_pred", ",", "normalize", "=", "'true'", ")", "*", "100", ",", "decimals", "=", "2", ")", "\n", "\n", "result_dict", "[", "'acc'", "]", "=", "acc_score", "\n", "result_dict", "[", "'uar'", "]", "=", "rec_score", "\n", "result_dict", "[", "'conf'", "]", "=", "confusion_matrix_arr", "\n", "return", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.DatasetGenerator.__init__": [[17, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.DatasetGenerator.__len__": [[20, 22], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", "[", "'data'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.DatasetGenerator.__getitem__": [[23, 27], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "data", "=", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", "\n", "label", "=", "self", ".", "dataset", "[", "'label'", "]", "[", "item", "]", "\n", "return", "torch", ".", "tensor", "(", "data", ")", ",", "torch", ".", "tensor", "(", "int", "(", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.PeudoDatasetGenerator.__init__": [[30, 34], ["numpy.arange", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "index", "=", "np", ".", "arange", "(", "len", "(", "dataset", "[", "'data'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.PeudoDatasetGenerator.__len__": [[35, 37], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", "[", "'data'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.PeudoDatasetGenerator.__getitem__": [[38, 45], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "[].copy", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "data", "=", "torch", ".", "tensor", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "copy", "(", ")", ")", "\n", "noise1", "=", "torch", ".", "empty", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "shape", ")", ".", "normal_", "(", "mean", "=", "1", ",", "std", "=", "0.25", ")", "\n", "noise2", "=", "torch", ".", "empty", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "shape", ")", ".", "normal_", "(", "mean", "=", "0", ",", "std", "=", "0.1", ")", "\n", "label", "=", "self", ".", "dataset", "[", "'label'", "]", "[", "item", "]", "\n", "data", "=", "data", "*", "noise1", "+", "noise2", "\n", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.WeakUnlabelDatasetGenerator.__init__": [[47, 51], ["numpy.arange", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "index", "=", "np", ".", "arange", "(", "len", "(", "dataset", "[", "'data'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.WeakUnlabelDatasetGenerator.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", "[", "'data'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.WeakUnlabelDatasetGenerator.__getitem__": [[55, 62], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "torch.empty().normal_", "[].copy", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "data", "=", "torch", ".", "tensor", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "copy", "(", ")", ")", "\n", "noise1", "=", "torch", ".", "empty", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "shape", ")", ".", "normal_", "(", "mean", "=", "1", ",", "std", "=", "0.1", ")", "\n", "noise2", "=", "torch", ".", "empty", "(", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", ".", "shape", ")", ".", "normal_", "(", "mean", "=", "0", ",", "std", "=", "0.1", ")", "\n", "label", "=", "self", ".", "dataset", "[", "'label'", "]", "[", "item", "]", "\n", "data", "=", "data", "*", "noise1", "+", "noise2", "\n", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.local_trainer.__init__": [[110, 116], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "device", ",", "criterion", ",", "model_type", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "dataloader", "=", "dataloader", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "model_type", "=", "model_type", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.local_trainer.update_weights_scaffold_fixmatch": [[117, 290], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "copy.deepcopy", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "range", "c_local.state_dict", "copy.deepcopy", "copy.deepcopy.cpu().state_dict", "model.cpu().state_dict", "c_local.load_state_dict", "update_semi.result_summary", "data_list.append", "data_list.append", "data_list.append", "float", "numpy.power", "model.parameters", "c_global.state_dict", "c_local.state_dict", "int", "model.to", "model.eval", "collections.Counter", "min", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.nn.NLLLoss().to", "torch.nn.NLLLoss().to", "update_semi.WeakUnlabelDatasetGenerator", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.train", "enumerate", "c_local.state_dict", "model.state_dict", "int", "torch.nn.MSELoss", "torch.nn.MSELoss", "numpy.zeros", "range", "enumerate", "numpy.array", "collections.Counter", "range", "print", "numpy.power", "numpy.array", "len", "len", "update_semi.PeudoDatasetGenerator", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "model.to", "model.zero_grad", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.nn.NLLLoss().to.", "nn.NLLLoss().to.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "model.cpu().state_dict().copy", "model.load_state_dict", "numpy.argmax", "step_outputs.append", "copy.deepcopy.cpu", "model.cpu", "len", "update_semi.WeakUnlabelDatasetGenerator", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "numpy.array", "numpy.array", "numpy.std", "numpy.mean", "numpy.max", "numpy.argmax", "numpy.array.append", "numpy.where", "len", "range", "cls_num_list.append", "cls_num_list.append", "numpy.sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.nn.NLLLoss", "torch.nn.NLLLoss", "pseudo_x_list.append", "pseudo_y_list.append", "x.to.to.to", "y.to", "x.to.to.float", "len", "torch.softmax.detach().cpu().numpy", "len", "x.to.to.to", "model", "torch.softmax", "torch.softmax", "torch.softmax.detach().cpu().numpy", "range", "numpy.where", "numpy.delete", "numpy.delete", "len", "model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "model.cpu().state_dict", "range", "y.detach().cpu().numpy", "range", "nn.NLLLoss().to.item", "x.to.to.float", "len", "logit_list.append", "numpy.array.append", "len", "numpy.argsort", "pseudo_x_list[].to", "torch.softmax.detach().cpu", "len", "len", "torch.softmax.detach().cpu", "pseudo_data_dict[].append", "pseudo_data_dict[].append", "pseudo_dict[].append", "pseudo_dict[].append", "print", "final_pseudo_list.append", "torch.nn.NLLLoss().to.", "len", "model.cpu", "y.detach().cpu", "numpy.where", "pseudo_y_list[].to", "torch.softmax.detach", "torch.softmax.detach", "y.detach"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary"], ["", "def", "update_weights_scaffold_fixmatch", "(", "self", ",", "model", ",", "history_model", ",", "c_global", ",", "c_local", ",", "labeled_data_dict", ",", "unlabeled_data_dict", ",", "u", ",", "logit_threshold", ",", "current_epoch", ",", "pseudo_data_dict", ",", "pseudo_dict", ",", "T", ")", ":", "\n", "        ", "lr", "=", "float", "(", "self", ".", "args", ".", "learning_rate", ")", "/", "np", ".", "power", "(", "2", ",", "(", "int", "(", "current_epoch", "/", "100", ")", ")", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "1e-04", ",", "betas", "=", "(", "0.9", ",", "0.98", ")", ",", "eps", "=", "1e-9", ")", "\n", "global_model", "=", "copy", ".", "deepcopy", "(", "model", ")", "\n", "mse_criterion", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "c_global_para", ",", "c_local_para", "=", "c_global", ".", "state_dict", "(", ")", ",", "c_local", ".", "state_dict", "(", ")", "\n", "cnt", ",", "step_outputs", "=", "0", ",", "[", "]", "\n", "\n", "# generate pseudo", "\n", "for", "iter", "in", "range", "(", "int", "(", "self", ".", "args", ".", "local_epochs", ")", ")", ":", "\n", "# generate logits", "\n", "            ", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# ----------------------------------------------", "\n", "# ----------------- multiview ------------------", "\n", "if", "iter", "==", "0", "and", "history_model", "and", "len", "(", "unlabeled_data_dict", "[", "'data'", "]", ")", "!=", "0", ":", "\n", "                ", "pseudo_label_arr", "=", "np", ".", "zeros", "(", "[", "10", ",", "len", "(", "unlabeled_data_dict", "[", "'data'", "]", ")", ",", "4", "]", ")", "\n", "for", "aug_idx", "in", "range", "(", "10", ")", ":", "\n", "                    ", "dataset_unlabeled", "=", "WeakUnlabelDatasetGenerator", "(", "unlabeled_data_dict", ")", "\n", "unlabeled_dataloader", "=", "DataLoader", "(", "dataset_unlabeled", ",", "batch_size", "=", "16", ",", "num_workers", "=", "0", ",", "shuffle", "=", "False", ")", "\n", "logit_list", ",", "pseudo_real_label", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "unlabeled_dataloader", ")", ":", "\n", "                        ", "x", ",", "y", "=", "batch_data", "\n", "x", "=", "x", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "logits", "=", "F", ".", "softmax", "(", "logits", "/", "T", ",", "dim", "=", "1", ")", "\n", "logit_arr", "=", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "tmp_arr_idx", "in", "range", "(", "len", "(", "logits", ")", ")", ":", "\n", "                            ", "logit_list", ".", "append", "(", "logit_arr", "[", "tmp_arr_idx", "]", ")", "\n", "pseudo_real_label", ".", "append", "(", "y", "[", "tmp_arr_idx", "]", ")", "\n", "\n", "", "", "pseudo_label_arr", "[", "aug_idx", ",", ":", ",", ":", "]", "=", "np", ".", "array", "(", "logit_list", ")", "\n", "pseudo_real_label", "=", "np", ".", "array", "(", "pseudo_real_label", ")", "\n", "\n", "# ----------------------------------------------", "\n", "# -------------------- ups ---------------------", "\n", "", "if", "current_epoch", ">=", "300", ":", "\n", "                    ", "tau_p", "=", "logit_threshold", "\n", "", "else", ":", "\n", "                    ", "tau_p", "=", "0.5", "+", "(", "logit_threshold", "-", "0.5", ")", "*", "(", "(", "current_epoch", ")", "/", "300", ")", "\n", "\n", "", "kappa_p", "=", "0.005", "\n", "out_std", ",", "out_prob", "=", "np", ".", "std", "(", "pseudo_label_arr", ",", "axis", "=", "0", ")", ",", "np", ".", "mean", "(", "pseudo_label_arr", ",", "axis", "=", "0", ")", "\n", "max_value", ",", "max_idx", "=", "np", ".", "max", "(", "out_prob", ",", "axis", "=", "1", ")", ",", "np", ".", "argmax", "(", "out_prob", ",", "axis", "=", "1", ")", "\n", "max_std", "=", "[", "]", "\n", "for", "idx", ",", "item", "in", "enumerate", "(", "max_idx", ")", ":", "max_std", ".", "append", "(", "out_std", "[", "idx", "]", "[", "item", "]", ")", "\n", "max_std", "=", "np", ".", "array", "(", "max_std", ")", "\n", "\n", "selected_idx", "=", "(", "max_value", ">=", "tau_p", ")", "*", "(", "max_std", "<", "kappa_p", ")", "\n", "pseudo_target", ",", "pseudo_maxstd", "=", "max_idx", "[", "selected_idx", "]", ",", "max_std", "[", "selected_idx", "]", "\n", "pseudo_idx", "=", "np", ".", "where", "(", "selected_idx", "==", "True", ")", "[", "0", "]", "\n", "\n", "# ----------------------------------------------", "\n", "class_dict", "=", "collections", ".", "Counter", "(", "labeled_data_dict", "[", "'label'", "]", ")", "\n", "\n", "# control how many samples we trust per class per pseudo-labeling", "\n", "sample_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "sample_dict", "[", "key", "]", "=", "1", "\n", "\n", "print", "(", "sample_dict", ",", "class_dict", ")", "\n", "if", "len", "(", "pseudo_target", ")", ">", "0", ":", "\n", "                    ", "final_pseudo_list", "=", "[", "]", "\n", "for", "class_idx", "in", "range", "(", "4", ")", ":", "\n", "                        ", "current_class_idx", "=", "np", ".", "where", "(", "pseudo_target", "==", "class_idx", ")", "\n", "if", "len", "(", "np", ".", "where", "(", "pseudo_target", "==", "class_idx", ")", "[", "0", "]", ")", ">", "0", ":", "\n", "                            ", "current_class_maxstd", "=", "pseudo_maxstd", "[", "current_class_idx", "]", "\n", "sorted_maxstd_idx", "=", "np", ".", "argsort", "(", "current_class_maxstd", ")", "\n", "if", "sample_dict", "[", "class_idx", "]", "==", "0", ":", "continue", "\n", "sorted_maxstd_idx", "=", "sorted_maxstd_idx", "[", ":", "sample_dict", "[", "class_idx", "]", "]", "\n", "\n", "for", "idx", "in", "sorted_maxstd_idx", ":", "\n", "                                ", "pseudo_data_dict", "[", "'data'", "]", ".", "append", "(", "unlabeled_data_dict", "[", "'data'", "]", "[", "pseudo_idx", "[", "idx", "]", "]", ")", "\n", "pseudo_data_dict", "[", "'label'", "]", ".", "append", "(", "class_idx", ")", "\n", "\n", "pseudo_dict", "[", "'pseudo'", "]", ".", "append", "(", "class_idx", ")", "\n", "pseudo_dict", "[", "'true'", "]", ".", "append", "(", "pseudo_real_label", "[", "pseudo_idx", "[", "idx", "]", "]", ")", "\n", "print", "(", "'add a new hard pseudo label'", ")", "\n", "final_pseudo_list", ".", "append", "(", "pseudo_idx", "[", "idx", "]", ")", "\n", "\n", "", "", "", "if", "final_pseudo_list", ":", "\n", "                        ", "unlabeled_data_dict", "[", "'data'", "]", "=", "np", ".", "delete", "(", "unlabeled_data_dict", "[", "'data'", "]", ",", "final_pseudo_list", ",", "axis", "=", "0", ")", "\n", "unlabeled_data_dict", "[", "'label'", "]", "=", "np", ".", "delete", "(", "unlabeled_data_dict", "[", "'label'", "]", ",", "final_pseudo_list", ")", "\n", "\n", "# add local weights to the training samples based on the class distribution", "\n", "", "", "", "class_dict", "=", "collections", ".", "Counter", "(", "labeled_data_dict", "[", "'label'", "]", ")", "\n", "minimum", "=", "min", "(", "class_dict", ",", "key", "=", "class_dict", ".", "get", ")", "\n", "cls_num_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "                ", "if", "i", "in", "class_dict", ":", "cls_num_list", ".", "append", "(", "class_dict", "[", "i", "]", ")", "\n", "else", ":", "cls_num_list", ".", "append", "(", "class_dict", "[", "minimum", "]", ")", "\n", "\n", "", "beta", "=", "0.9999", "\n", "effective_num", "=", "1.0", "-", "np", ".", "power", "(", "beta", ",", "cls_num_list", ")", "\n", "per_cls_weights", "=", "(", "1.0", "-", "beta", ")", "/", "np", ".", "array", "(", "effective_num", ")", "\n", "per_cls_weights", "=", "per_cls_weights", "/", "np", ".", "sum", "(", "per_cls_weights", ")", "*", "len", "(", "cls_num_list", ")", "\n", "per_cls_weights", "=", "torch", ".", "FloatTensor", "(", "per_cls_weights", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "criterion", "=", "nn", ".", "NLLLoss", "(", "per_cls_weights", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# training data loader", "\n", "dataset_train", "=", "WeakUnlabelDatasetGenerator", "(", "labeled_data_dict", ")", "\n", "train_dataloaders", "=", "DataLoader", "(", "dataset_train", ",", "batch_size", "=", "16", ",", "num_workers", "=", "0", ",", "shuffle", "=", "True", ")", "\n", "\n", "# unlabeled training data loader", "\n", "if", "len", "(", "pseudo_data_dict", "[", "'label'", "]", ")", ">", "0", ":", "\n", "                ", "dataset_peudo", "=", "PeudoDatasetGenerator", "(", "pseudo_data_dict", ")", "\n", "peudo_dataloader", "=", "DataLoader", "(", "dataset_peudo", ",", "batch_size", "=", "16", ",", "num_workers", "=", "0", ",", "shuffle", "=", "False", ")", "\n", "pseudo_x_list", ",", "pseudo_y_list", "=", "[", "]", ",", "[", "]", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "peudo_dataloader", ")", ":", "\n", "                    ", "pseudo_x", ",", "pseudo_y", "=", "batch_data", "\n", "pseudo_x_list", ".", "append", "(", "pseudo_x", ")", "\n", "pseudo_y_list", ".", "append", "(", "pseudo_y", ")", "\n", "\n", "", "", "model", ".", "train", "(", ")", "\n", "# first training", "\n", "label_dist", "=", "[", "]", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "train_dataloaders", ")", ":", "\n", "\n", "# training the model", "\n", "                ", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "x", ",", "y", "=", "batch_data", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "self", ".", "device", ")", ",", "y", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "logits", "=", "torch", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "y", ")", "\n", "\n", "if", "len", "(", "pseudo_data_dict", "[", "'label'", "]", ")", ">", "0", ":", "\n", "                    ", "if", "batch_idx", "<", "len", "(", "peudo_dataloader", ")", ":", "\n", "                        ", "logits1", "=", "model", "(", "pseudo_x_list", "[", "batch_idx", "]", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "logits1", "=", "torch", ".", "log_softmax", "(", "logits1", ",", "dim", "=", "1", ")", "\n", "loss", "+=", "criterion", "(", "logits1", ",", "pseudo_y_list", "[", "batch_idx", "]", ".", "to", "(", "self", ".", "device", ")", ")", "*", "len", "(", "logits1", ")", "/", "16", "\n", "\n", "", "", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "cnt", "+=", "1", "\n", "\n", "# scaffold", "\n", "model_para", "=", "model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", ".", "copy", "(", ")", "\n", "for", "key", "in", "model_para", ":", "\n", "                    ", "model_para", "[", "key", "]", "=", "model_para", "[", "key", "]", "-", "lr", "*", "(", "c_global_para", "[", "key", "]", "-", "c_local_para", "[", "key", "]", ")", "\n", "", "model", ".", "load_state_dict", "(", "model_para", ")", "\n", "\n", "# obtain results", "\n", "predictions", "=", "np", ".", "argmax", "(", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", "\n", "pred_list", "=", "[", "predictions", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "truth_list", "=", "[", "y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "label_dist", "=", "label_dist", "+", "truth_list", "\n", "step_outputs", ".", "append", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'pred'", ":", "pred_list", ",", "'truth'", ":", "truth_list", "}", ")", "\n", "\n", "# scaffold", "\n", "", "", "c_new_para", "=", "c_local", ".", "state_dict", "(", ")", "\n", "c_delta_para", "=", "copy", ".", "deepcopy", "(", "c_local", ".", "state_dict", "(", ")", ")", "\n", "global_model_para", "=", "global_model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", "\n", "local_model_para", "=", "model", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", "\n", "\n", "for", "key", "in", "local_model_para", ":", "\n", "            ", "c_new_para", "[", "key", "]", "=", "c_new_para", "[", "key", "]", "-", "c_global_para", "[", "key", "]", "+", "(", "global_model_para", "[", "key", "]", "-", "local_model_para", "[", "key", "]", ")", "/", "(", "cnt", "*", "lr", ")", "\n", "c_delta_para", "[", "key", "]", "=", "c_new_para", "[", "key", "]", "-", "c_local_para", "[", "key", "]", "\n", "", "c_local", ".", "load_state_dict", "(", "c_new_para", ")", "\n", "result_dict", ",", "_", ",", "_", "=", "result_summary", "(", "step_outputs", ")", "\n", "data_list", "=", "[", "]", "\n", "data_list", ".", "append", "(", "labeled_data_dict", ")", "\n", "data_list", ".", "append", "(", "unlabeled_data_dict", ")", "\n", "data_list", ".", "append", "(", "pseudo_data_dict", ")", "\n", "return", "model", ".", "state_dict", "(", ")", ",", "c_delta_para", ",", "result_dict", ",", "data_list", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.local_trainer.inference": [[291, 309], ["model.eval", "enumerate", "update_semi.result_summary", "model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "update_semi.local_trainer.criterion", "numpy.argmax", "step_outputs.append", "x.to", "y.to", "x.float", "torch.log_softmax.detach().cpu().numpy", "torch.log_softmax.detach().cpu().numpy", "range", "y.detach().cpu().numpy", "range", "update_semi.local_trainer.item", "torch.log_softmax.detach().cpu", "torch.log_softmax.detach().cpu", "len", "len", "y.detach().cpu", "torch.log_softmax.detach", "torch.log_softmax.detach", "y.detach"], "methods", ["home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary"], ["", "def", "inference", "(", "self", ",", "model", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "step_outputs", "=", "[", "]", "\n", "\n", "for", "batch_idx", ",", "batch_data", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "            ", "x", ",", "y", "=", "batch_data", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "self", ".", "device", ")", ",", "y", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "logits", "=", "model", "(", "x", ".", "float", "(", ")", ")", "\n", "logits", "=", "torch", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "y", ")", "\n", "\n", "predictions", "=", "np", ".", "argmax", "(", "logits", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "axis", "=", "1", ")", "\n", "pred_list", "=", "[", "predictions", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "truth_list", "=", "[", "y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "pred_idx", "]", "for", "pred_idx", "in", "range", "(", "len", "(", "predictions", ")", ")", "]", "\n", "step_outputs", ".", "append", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'pred'", ":", "pred_list", ",", "'truth'", ":", "truth_list", "}", ")", "\n", "", "result_dict", ",", "y_true", ",", "y_pred", "=", "result_summary", "(", "step_outputs", ")", "\n", "return", "result_dict", ",", "y_true", ",", "y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.pred_summary": [[63, 73], ["sklearn.metrics.accuracy_score", "sklearn.metrics.recall_score", "numpy.round", "sklearn.metrics.confusion_matrix"], "function", ["None"], ["", "", "def", "pred_summary", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "result_dict", "=", "{", "}", "\n", "acc_score", "=", "accuracy_score", "(", "y_true", ",", "y_pred", ")", "\n", "rec_score", "=", "recall_score", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "confusion_matrix_arr", "=", "np", ".", "round", "(", "confusion_matrix", "(", "y_true", ",", "y_pred", ",", "normalize", "=", "'true'", ")", "*", "100", ",", "decimals", "=", "2", ")", "\n", "\n", "result_dict", "[", "'acc'", "]", "=", "acc_score", "\n", "result_dict", "[", "'uar'", "]", "=", "rec_score", "\n", "result_dict", "[", "'conf'", "]", "=", "confusion_matrix_arr", "\n", "return", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.average_weights": [[74, 87], ["numpy.sum", "copy.deepcopy", "copy.deepcopy.keys", "copy.deepcopy.keys", "range", "len", "torch.div", "torch.div"], "function", ["None"], ["", "def", "average_weights", "(", "w", ",", "num_samples_list", ")", ":", "\n", "    ", "\"\"\"\n    Returns the average of the weights.\n    \"\"\"", "\n", "total_num_samples", "=", "np", ".", "sum", "(", "num_samples_list", ")", "\n", "w_avg", "=", "copy", ".", "deepcopy", "(", "w", "[", "0", "]", ")", "\n", "\n", "for", "key", "in", "w_avg", ".", "keys", "(", ")", ":", "\n", "        ", "w_avg", "[", "key", "]", "=", "w", "[", "0", "]", "[", "key", "]", "*", "(", "num_samples_list", "[", "0", "]", "/", "total_num_samples", ")", "\n", "", "for", "key", "in", "w_avg", ".", "keys", "(", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "len", "(", "w", ")", ")", ":", "\n", "            ", "w_avg", "[", "key", "]", "+=", "torch", ".", "div", "(", "w", "[", "i", "]", "[", "key", "]", "*", "num_samples_list", "[", "i", "]", ",", "total_num_samples", ")", "\n", "", "", "return", "w_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.update_semi.result_summary": [[88, 108], ["range", "sklearn.metrics.accuracy_score", "sklearn.metrics.recall_score", "numpy.round", "numpy.mean", "len", "len", "range", "loss_list.append", "len", "y_true.append", "y_pred.append", "sklearn.metrics.confusion_matrix"], "function", ["None"], ["", "def", "result_summary", "(", "step_outputs", ")", ":", "\n", "    ", "loss_list", ",", "y_true", ",", "y_pred", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "step", "in", "range", "(", "len", "(", "step_outputs", ")", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", ")", ")", ":", "\n", "            ", "y_true", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'truth'", "]", "[", "idx", "]", ")", "\n", "y_pred", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'pred'", "]", "[", "idx", "]", ")", "\n", "", "loss_list", ".", "append", "(", "step_outputs", "[", "step", "]", "[", "'loss'", "]", ")", "\n", "\n", "", "result_dict", "=", "{", "}", "\n", "acc_score", "=", "accuracy_score", "(", "y_true", ",", "y_pred", ")", "\n", "rec_score", "=", "recall_score", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "confusion_matrix_arr", "=", "np", ".", "round", "(", "confusion_matrix", "(", "y_true", ",", "y_pred", ",", "normalize", "=", "'true'", ")", "*", "100", ",", "decimals", "=", "2", ")", "\n", "\n", "result_dict", "[", "'acc'", "]", "=", "acc_score", "\n", "result_dict", "[", "'uar'", "]", "=", "rec_score", "\n", "result_dict", "[", "'conf'", "]", "=", "confusion_matrix_arr", "\n", "result_dict", "[", "'loss'", "]", "=", "np", ".", "mean", "(", "loss_list", ")", "\n", "result_dict", "[", "'num_samples'", "]", "=", "len", "(", "y_pred", ")", "\n", "result_dict", "[", "'y_true'", "]", "=", "y_true", "\n", "return", "result_dict", ",", "y_true", ",", "y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.DatasetGenerator.__init__": [[32, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.DatasetGenerator.__len__": [[35, 37], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", "[", "'data'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.DatasetGenerator.__getitem__": [[38, 42], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "data", "=", "self", ".", "dataset", "[", "'data'", "]", "[", "item", "]", "\n", "label", "=", "self", ".", "dataset", "[", "'label'", "]", "[", "item", "]", "\n", "return", "torch", ".", "tensor", "(", "data", ")", ",", "torch", ".", "tensor", "(", "int", "(", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.save_result": [[26, 30], ["pandas.DataFrame"], "function", ["None"], ["def", "save_result", "(", "save_index", ",", "acc", ",", "uar", ",", "best_epoch", ",", "dataset", ")", ":", "\n", "    ", "row_df", "=", "pd", ".", "DataFrame", "(", "index", "=", "[", "save_index", "]", ")", "\n", "row_df", "[", "'acc'", "]", ",", "row_df", "[", "'uar'", "]", ",", "row_df", "[", "'epoch'", "]", ",", "row_df", "[", "'dataset'", "]", "=", "acc", ",", "uar", ",", "best_epoch", ",", "dataset", "\n", "return", "row_df", "\n", "\n"]], "home.repos.pwc.inspect_result.usc-sail_fed-ser-semi.train.federated_ser_classifier.read_data_dict_by_client": [[43, 78], ["os.listdir", "os.listdir", "os.listdir", "preprocess_path.joinpath", "numpy.random.RandomState().permutation", "preprocess_path.joinpath", "pickle.load.copy", "preprocess_path.joinpath", "pickle.load.copy", "file_name.split", "open", "pickle.load", "len", "file_name.split", "open", "pickle.load", "file_name.split", "open", "pickle.load", "str", "preprocess_path.joinpath", "numpy.random.RandomState", "str", "preprocess_path.joinpath", "str", "preprocess_path.joinpath", "int", "int", "int", "str", "int", "int", "int", "int", "str", "str", "int", "int", "int", "float", "len", "float", "len", "float", "len", "float", "len"], "function", ["None"], ["", "", "def", "read_data_dict_by_client", "(", "fold_idx", ")", ":", "\n", "    ", "return_labeled_train_dict", ",", "return_unlabeled_train_dict", ",", "return_val_dict", ",", "return_test_dict", "=", "{", "}", ",", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "# prepare the data for the training", "\n", "file_idx", "=", "0", "\n", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'train'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'train'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "# how many data we have for training", "\n", "", "perm_array", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "file_idx", ")", ".", "permutation", "(", "len", "(", "data_dict", "[", "'label'", "]", ")", ")", "\n", "file_idx", "+=", "1", "\n", "x", ",", "y", "=", "data_dict", "[", "'data'", "]", ",", "data_dict", "[", "'label'", "]", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "x", "[", "perm_array", "[", ":", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", "]", "]", "\n", "return_labeled_train_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "y", "[", "perm_array", "[", ":", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", "]", "]", "\n", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "[", "'data'", "]", "=", "x", "[", "perm_array", "[", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", ":", "]", "]", "\n", "return_unlabeled_train_dict", "[", "speaker_id", "]", "[", "'label'", "]", "=", "y", "[", "perm_array", "[", "int", "(", "float", "(", "args", ".", "client_label_rate", ")", "*", "len", "(", "y", ")", ")", ":", "]", "]", "\n", "\n", "", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'validation'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'validation'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return_val_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_val_dict", "[", "speaker_id", "]", "=", "data_dict", ".", "copy", "(", ")", "\n", "\n", "", "for", "file_name", "in", "os", ".", "listdir", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'test'", ")", ")", ":", "\n", "        ", "speaker_id", "=", "file_name", ".", "split", "(", "'.pkl'", ")", "[", "0", "]", "\n", "with", "open", "(", "preprocess_path", ".", "joinpath", "(", "args", ".", "dataset", ",", "'fold'", "+", "str", "(", "int", "(", "fold_idx", "+", "1", ")", ")", ",", "'test'", ",", "file_name", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "data_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return_test_dict", "[", "speaker_id", "]", "=", "{", "}", "\n", "return_test_dict", "[", "speaker_id", "]", "=", "data_dict", ".", "copy", "(", ")", "\n", "", "return", "return_labeled_train_dict", ",", "return_unlabeled_train_dict", ",", "return_val_dict", ",", "return_test_dict", "\n", "\n"]]}