{"home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_for_training_with_ood": [[7, 30], ["len", "len", "numpy.ceil", "np.ceil.is_integer", "torch.utils.data.ConcatDataset", "len", "len", "numpy.ceil", "np.ceil.is_integer", "torch.utils.data.ConcatDataset", "len", "len", "int", "int", "len", "len", "torch.utils.data.Subset", "float", "float", "float", "float", "numpy.arange", "len", "len", "len", "len", "len"], "function", ["None"], ["def", "prepare_for_training_with_ood", "(", "train_dataset", ",", "ood_dataset", ")", ":", "\n", "    ", "if", "len", "(", "train_dataset", ")", "<", "len", "(", "ood_dataset", ")", ":", "\n", "        ", "id_ratio", "=", "np", ".", "ceil", "(", "float", "(", "len", "(", "ood_dataset", ")", ")", "/", "float", "(", "len", "(", "train_dataset", ")", ")", ")", "\n", "assert", "id_ratio", ".", "is_integer", "(", ")", "\n", "dataset_list", "=", "[", "\n", "train_dataset", ",", "\n", "]", "*", "int", "(", "id_ratio", ")", "\n", "train_dataset", "=", "data", ".", "ConcatDataset", "(", "dataset_list", ")", "\n", "\n", "", "if", "len", "(", "train_dataset", ")", ">", "len", "(", "ood_dataset", ")", ":", "\n", "        ", "ratio", "=", "np", ".", "ceil", "(", "float", "(", "len", "(", "train_dataset", ")", ")", "/", "float", "(", "len", "(", "ood_dataset", ")", ")", ")", "\n", "assert", "ratio", ".", "is_integer", "(", ")", "\n", "dataset_list", "=", "[", "\n", "ood_dataset", ",", "\n", "]", "*", "int", "(", "ratio", ")", "\n", "ood_dataset", "=", "data", ".", "ConcatDataset", "(", "dataset_list", ")", "\n", "\n", "if", "len", "(", "ood_dataset", ")", ">", "len", "(", "train_dataset", ")", ":", "\n", "            ", "ood_dataset", "=", "data", ".", "Subset", "(", "ood_dataset", ",", "np", ".", "arange", "(", "0", ",", "len", "(", "train_dataset", ")", ")", ")", "\n", "\n", "", "", "assert", "len", "(", "train_dataset", ")", "==", "len", "(", "ood_dataset", ")", "\n", "\n", "return", "train_dataset", ",", "ood_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_data_fashion": [[32, 85], ["torchvision.transforms.Compose", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.KMNIST", "dataprep.prepare_for_training_with_ood", "dataprep.prepare_for_training_with_ood", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_for_training_with_ood", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_for_training_with_ood"], ["", "def", "prepare_data_fashion", "(", "batch_size", ",", "iscuda", ")", ":", "\n", "    ", "kwargs", "=", "{", "\"num_workers\"", ":", "1", ",", "\"pin_memory\"", ":", "True", "}", "if", "iscuda", "else", "{", "}", "\n", "\n", "trafos", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "# transforms.Normalize(mean=(0.2860,), std=(0.3530,))", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "datadir", "=", "\"~/Documents/data/\"", "\n", "\n", "train_data", "=", "datasets", ".", "FashionMNIST", "(", "\n", "datadir", "+", "\"fashion\"", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "trafos", "\n", ")", "\n", "test_data", "=", "datasets", ".", "FashionMNIST", "(", "\n", "datadir", "+", "\"fashion\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "trafos", "\n", ")", "\n", "ood_data", "=", "datasets", ".", "MNIST", "(", "\n", "datadir", "+", "\"mnist\"", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "trafos", "\n", ")", "\n", "test_ood_data", "=", "datasets", ".", "MNIST", "(", "\n", "datadir", "+", "\"mnist\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "trafos", "\n", ")", "\n", "post_test_ood_data", "=", "datasets", ".", "KMNIST", "(", "\n", "datadir", "+", "\"kmnist\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "trafos", "\n", ")", "\n", "\n", "train_data", ",", "ood_data", "=", "prepare_for_training_with_ood", "(", "train_data", ",", "ood_data", ")", "\n", "test_data", ",", "test_ood_data", "=", "prepare_for_training_with_ood", "(", "test_data", ",", "test_ood_data", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "**", "kwargs", "\n", ")", "\n", "test_loader", "=", "DataLoader", "(", "\n", "test_data", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "**", "kwargs", "\n", ")", "\n", "ood_loader", "=", "DataLoader", "(", "\n", "ood_data", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "**", "kwargs", "\n", ")", "\n", "test_ood_loader", "=", "DataLoader", "(", "\n", "test_ood_data", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "**", "kwargs", "\n", ")", "\n", "post_test_ood_loader", "=", "DataLoader", "(", "\n", "post_test_ood_data", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "drop_last", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "train_loader", ",", "test_loader", ",", "ood_loader", ",", "test_ood_loader", ",", "post_test_ood_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_data": [[87, 111], ["print", "dataprep.prepare_data_fashion"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_data_fashion"], ["", "def", "prepare_data", "(", "data_set", ",", "batch_size", ",", "iscuda", ")", ":", "\n", "    ", "print", "(", "data_set", ")", "\n", "# Pick data set", "\n", "if", "data_set", "==", "\"fashion\"", ":", "\n", "        ", "(", "\n", "train_loader", ",", "\n", "test_loader", ",", "\n", "ood_loader", ",", "\n", "test_ood_loader", ",", "\n", "post_test_ood_loader", ",", "\n", ")", "=", "prepare_data_fashion", "(", "batch_size", "=", "batch_size", ",", "iscuda", "=", "iscuda", ")", "\n", "n_channel", "=", "1", "\n", "n_classes", "=", "10", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "(", "\n", "train_loader", ",", "\n", "test_loader", ",", "\n", "ood_loader", ",", "\n", "test_ood_loader", ",", "\n", "post_test_ood_loader", ",", "\n", "n_channel", ",", "\n", "n_classes", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.__init__": [[11, 23], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "VBLayer.VBLinear.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.__init__", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "prior_prec", "=", "10", ",", "map", "=", "True", ")", ":", "\n", "        ", "super", "(", "VBLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_in", "=", "in_features", "\n", "self", ".", "n_out", "=", "out_features", "\n", "\n", "self", ".", "prior_prec", "=", "prior_prec", "\n", "self", ".", "map", "=", "map", "\n", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "th", ".", "Tensor", "(", "out_features", ")", ")", "\n", "self", ".", "mu_w", "=", "Parameter", "(", "th", ".", "Tensor", "(", "out_features", ",", "in_features", ")", ")", "\n", "self", ".", "logsig2_w", "=", "nn", ".", "Parameter", "(", "th", ".", "Tensor", "(", "out_features", ",", "in_features", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.reset_parameters": [[24, 29], ["VBLayer.VBLinear.mu_w.data.normal_", "VBLayer.VBLinear.logsig2_w.data.zero_().normal_", "VBLayer.VBLinear.bias.data.zero_", "math.sqrt", "VBLayer.VBLinear.mu_w.size", "VBLayer.VBLinear.logsig2_w.data.zero_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "mu_w", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "mu_w", ".", "data", ".", "normal_", "(", "0", ",", "stdv", ")", "\n", "self", ".", "logsig2_w", ".", "data", ".", "zero_", "(", ")", ".", "normal_", "(", "-", "9", ",", "0.001", ")", "# var init via Louizos", "\n", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.KL": [[30, 51], ["VBLayer.VBLinear.logsig2_w.clamp", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "VBLayer.VBLinear.mu_w.abs", "numpy.log", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.softplus", "torch.softplus", "torch.softplus", "VBLayer.VBLinear.mu_w.pow", "VBLayer.VBLinear.exp"], "methods", ["None"], ["", "def", "KL", "(", "self", ",", "loguniform", "=", "False", ")", ":", "\n", "        ", "if", "loguniform", ":", "\n", "            ", "k1", "=", "0.63576", "\n", "k2", "=", "1.87320", "\n", "k3", "=", "1.48695", "\n", "log_alpha", "=", "self", ".", "logsig2_w", "-", "2", "*", "th", ".", "log", "(", "self", ".", "mu_w", ".", "abs", "(", ")", "+", "1e-8", ")", "\n", "kl", "=", "-", "th", ".", "sum", "(", "\n", "k1", "*", "th", ".", "sigmoid", "(", "k2", "+", "k3", "*", "log_alpha", ")", "-", "0.5", "*", "F", ".", "softplus", "(", "-", "log_alpha", ")", "-", "k1", "\n", ")", "\n", "", "else", ":", "\n", "            ", "logsig2_w", "=", "self", ".", "logsig2_w", ".", "clamp", "(", "-", "11", ",", "11", ")", "\n", "kl", "=", "(", "\n", "0.5", "\n", "*", "(", "\n", "self", ".", "prior_prec", "*", "(", "self", ".", "mu_w", ".", "pow", "(", "2", ")", "+", "logsig2_w", ".", "exp", "(", ")", ")", "\n", "-", "logsig2_w", "\n", "-", "1", "\n", "-", "np", ".", "log", "(", "self", ".", "prior_prec", ")", "\n", ")", ".", "sum", "(", ")", "\n", ")", "\n", "", "return", "kl", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.forward": [[52, 62], ["torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "VBLayer.VBLinear.logsig2_w.clamp", "VBLayer.VBLinear.exp", "torch.linear", "torch.linear", "torch.linear", "input.pow", "var_out.sqrt", "torch.randn_like", "torch.randn_like", "torch.randn_like"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# Sampling free forward pass only if MAP prediction and no training rounds", "\n", "        ", "if", "self", ".", "map", "and", "not", "self", ".", "training", ":", "\n", "            ", "return", "F", ".", "linear", "(", "input", ",", "self", ".", "mu_w", ",", "self", ".", "bias", ")", "\n", "", "else", ":", "\n", "            ", "mu_out", "=", "F", ".", "linear", "(", "input", ",", "self", ".", "mu_w", ",", "self", ".", "bias", ")", "\n", "logsig2_w", "=", "self", ".", "logsig2_w", ".", "clamp", "(", "-", "11", ",", "11", ")", "\n", "s2_w", "=", "logsig2_w", ".", "exp", "(", ")", "\n", "var_out", "=", "F", ".", "linear", "(", "input", ".", "pow", "(", "2", ")", ",", "s2_w", ")", "+", "1e-8", "\n", "return", "mu_out", "+", "var_out", ".", "sqrt", "(", ")", "*", "th", ".", "randn_like", "(", "mu_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.VBLayer.VBLinear.__repr__": [[63, 71], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "self", ".", "__class__", ".", "__name__", "\n", "+", "\" (\"", "\n", "+", "str", "(", "self", ".", "n_in", ")", "\n", "+", "\" -> \"", "\n", "+", "str", "(", "self", ".", "n_out", ")", "\n", "+", "\")\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.nll": [[7, 13], ["torch.log"], "function", ["None"], ["def", "nll", "(", "preds", ",", "target", ",", "minibatch", "=", "True", ")", ":", "\n", "    ", "logpred", "=", "th", ".", "log", "(", "preds", "+", "1e-8", ")", "\n", "if", "minibatch", ":", "\n", "        ", "return", "-", "(", "logpred", "*", "target", ")", ".", "sum", "(", "1", ")", "\n", "", "else", ":", "\n", "        ", "return", "-", "(", "logpred", "*", "target", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.err": [[15, 22], ["preds.argmax.argmax", "target.argmax.argmax"], "function", ["None"], ["", "", "def", "err", "(", "preds", ",", "target", ",", "minibatch", "=", "True", ")", ":", "\n", "    ", "preds", "=", "preds", ".", "argmax", "(", "1", ")", "\n", "target", "=", "target", ".", "argmax", "(", "1", ")", "\n", "if", "minibatch", ":", "\n", "        ", "return", "(", "(", "preds", "!=", "target", ")", "*", "1.0", ")", ".", "sum", "(", ")", "*", "100", "\n", "", "else", ":", "\n", "        ", "return", "(", "(", "preds", "!=", "target", ")", "*", "1.0", ")", ".", "mean", "(", ")", "*", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.auroc": [[24, 27], ["sklearn.metrics.roc_auc_score"], "function", ["None"], ["", "", "def", "auroc", "(", "preds", ",", "target", ",", "minibatch", "=", "True", ")", ":", "\n", "    ", "score", "=", "roc_auc_score", "(", "target", ",", "preds", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.entropy": [[29, 34], ["torch.log", "torch.log"], "function", ["None"], ["", "def", "entropy", "(", "preds", ",", "target", ",", "minibatch", "=", "True", ")", ":", "\n", "    ", "if", "minibatch", ":", "\n", "        ", "return", "-", "(", "preds", "*", "th", ".", "log", "(", "preds", "+", "1e-8", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "-", "(", "preds", "*", "th", ".", "log", "(", "preds", "+", "1e-8", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.ece": [[36, 56], ["torch.max", "torch.max", "predictions.eq", "torch.linspace", "torch.zeros", "zip", "th.zeros.item", "in_bin.float().mean", "confidences.gt", "confidences.le", "in_bin.float().mean.item", "accuracies[].float().mean", "confidences[].mean", "bin_lower.item", "bin_upper.item", "in_bin.float", "accuracies[].float", "torch.abs"], "function", ["None"], ["", "", "def", "ece", "(", "preds", ",", "target", ",", "minibatch", "=", "True", ")", ":", "\n", "    ", "confidences", ",", "predictions", "=", "th", ".", "max", "(", "preds", ",", "1", ")", "\n", "_", ",", "target_cls", "=", "th", ".", "max", "(", "target", ",", "1", ")", "\n", "accuracies", "=", "predictions", ".", "eq", "(", "target_cls", ")", "\n", "n_bins", "=", "100", "# 30000", "\n", "bin_boundaries", "=", "th", ".", "linspace", "(", "0", ",", "1", ",", "n_bins", "+", "1", ")", "\n", "bin_lowers", "=", "bin_boundaries", "[", ":", "-", "1", "]", "\n", "bin_uppers", "=", "bin_boundaries", "[", "1", ":", "]", "\n", "\n", "ece", "=", "th", ".", "zeros", "(", "1", ",", "device", "=", "\"cuda\"", ")", "\n", "for", "bin_lower", ",", "bin_upper", "in", "zip", "(", "bin_lowers", ",", "bin_uppers", ")", ":", "\n", "# Calculated |confidence - accuracy| in each bin", "\n", "        ", "in_bin", "=", "confidences", ".", "gt", "(", "bin_lower", ".", "item", "(", ")", ")", "*", "confidences", ".", "le", "(", "bin_upper", ".", "item", "(", ")", ")", "\n", "prop_in_bin", "=", "in_bin", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "if", "prop_in_bin", ".", "item", "(", ")", ">", "0", ":", "\n", "            ", "accuracy_in_bin", "=", "accuracies", "[", "in_bin", "]", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "avg_confidence_in_bin", "=", "confidences", "[", "in_bin", "]", ".", "mean", "(", ")", "\n", "ece", "+=", "th", ".", "abs", "(", "avg_confidence_in_bin", "-", "accuracy_in_bin", ")", "*", "prop_in_bin", "*", "100", "\n", "\n", "", "", "return", "ece", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score_ood": [[58, 99], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.zeros", "numpy.ones", "numpy.concatenate", "score", "print", "torch.no_grad", "torch.no_grad", "model.ood_predict", "np.concatenate.append", "model.ood_predict", "np.concatenate.append", "data.cuda.cuda", "model._forward", "model.ood_predict.cpu().numpy", "data.cuda.cuda", "model._forward", "model.ood_predict.cpu().numpy", "model.forward", "model.forward", "model.ood_predict.cpu", "model.ood_predict.cpu"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.ood_predict", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.ood_predict", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.forward", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.forward"], ["", "def", "compute_score_ood", "(", "\n", "model", ",", "loader_in", ",", "loader_out", ",", "score", ",", "name_score", "=", "\"foo\"", ",", "name_data", "=", "\"bar\"", ",", "iscuda", "=", "False", "\n", ")", ":", "\n", "    ", "preds_in", "=", "[", "]", "\n", "preds_ood", "=", "[", "]", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "loader_in", ":", "\n", "            ", "if", "iscuda", ":", "\n", "                ", "data", "=", "data", ".", "cuda", "(", ")", "\n", "", "try", ":", "\n", "# for ts", "\n", "                ", "pred_prob", "=", "model", ".", "_forward", "(", "data", ")", "\n", "", "except", ":", "\n", "                ", "pred_prob", "=", "model", ".", "forward", "(", "data", ")", "\n", "", "ood_pred_prob", "=", "model", ".", "ood_predict", "(", "data", ",", "pred_prob", ")", "\n", "preds_in", ".", "append", "(", "ood_pred_prob", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "loader_out", ":", "\n", "            ", "if", "iscuda", ":", "\n", "                ", "data", "=", "data", ".", "cuda", "(", ")", "\n", "", "try", ":", "\n", "# for ts", "\n", "                ", "pred_prob", "=", "model", ".", "_forward", "(", "data", ")", "\n", "", "except", ":", "\n", "                ", "pred_prob", "=", "model", ".", "forward", "(", "data", ")", "\n", "", "ood_pred_prob", "=", "model", ".", "ood_predict", "(", "data", ",", "pred_prob", ")", "\n", "preds_ood", ".", "append", "(", "ood_pred_prob", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "preds_in", "=", "np", ".", "concatenate", "(", "preds_in", ",", "axis", "=", "0", ")", "\n", "preds_ood", "=", "np", ".", "concatenate", "(", "preds_ood", ",", "axis", "=", "0", ")", "\n", "logits", "=", "np", ".", "concatenate", "(", "[", "preds_in", ",", "preds_ood", "]", ",", "axis", "=", "0", ")", "\n", "\n", "in_domain", "=", "np", ".", "zeros", "(", "shape", "=", "[", "preds_in", ".", "shape", "[", "0", "]", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "ood_domain", "=", "np", ".", "ones", "(", "shape", "=", "[", "preds_ood", ".", "shape", "[", "0", "]", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "domain_labels", "=", "np", ".", "concatenate", "(", "[", "in_domain", ",", "ood_domain", "]", ",", "axis", "=", "0", ")", "\n", "\n", "result", "=", "score", "(", "logits", ",", "domain_labels", ",", "minibatch", "=", "False", ")", "\n", "\n", "print", "(", "f\"The {name_score} score on the {name_data} set is: {result:.04f}\"", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score": [[101, 122], ["torch.cat().cuda", "torch.cat().cuda", "score", "print", "torch.no_grad", "torch.one_hot", "model.predict", "th.cat().cuda.append", "th.cat().cuda.append", "torch.cat", "torch.cat", "data.cuda", "F.one_hot.cuda"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.predict"], ["", "def", "compute_score", "(", "\n", "model", ",", "loader", ",", "score", ",", "name_score", "=", "\"foo\"", ",", "name_data", "=", "\"bar\"", ",", "iscuda", "=", "False", "\n", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "targets", "=", "[", "]", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "loader", ":", "\n", "            ", "if", "iscuda", ":", "\n", "                ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "\n", "", "target", "=", "F", ".", "one_hot", "(", "target", ",", "model", ".", "arch", ".", "n_classes", ")", "\n", "_", ",", "pred_prob", "=", "model", ".", "predict", "(", "data", ")", "\n", "preds", ".", "append", "(", "pred_prob", ")", "\n", "targets", ".", "append", "(", "target", ")", "\n", "\n", "", "", "targets", "=", "th", ".", "cat", "(", "targets", ")", ".", "cuda", "(", ")", "\n", "preds", "=", "th", ".", "cat", "(", "preds", ")", ".", "cuda", "(", ")", "\n", "result", "=", "score", "(", "preds", ",", "targets", ",", "minibatch", "=", "False", ")", "\n", "\n", "print", "(", "f\"The {name_score} score on the {name_data} set is: {result:.04f}\"", ")", "\n", "return", "result", "\n", "", ""]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.ETPHyperParams.__init__": [[13, 19], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", "=", "None", ")", ":", "\n", "        ", "super", "(", "ETPHyperParams", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "memory_learning_rate", "=", "0.99", "\n", "self", ".", "memory_size", "=", "20", "\n", "self", ".", "anneal_factor", "=", "1e-3", "\n", "self", ".", "memo_variance", "=", "0.1", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.__init__": [[22, 41], ["torch.nn.Module.__init__", "copy.deepcopy", "etp.ETPHyperParams", "torch.nn.Parameter().cuda", "torch.nn.Parameter().cuda", "etp.EvidentialTuringProcess.memory.data.normal_", "etp.EvidentialTuringProcess.memory.data.pow_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.__init__"], ["    ", "def", "__init__", "(", "self", ",", "arch", "=", "None", ")", ":", "\n", "        ", "super", "(", "EvidentialTuringProcess", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "arch", "=", "deepcopy", "(", "arch", ")", "\n", "self", ".", "hyperparams", "=", "ETPHyperParams", "(", "self", ".", "arch", ".", "n_classes", ")", "\n", "\n", "x_dim", "=", "[", "28", ",", "32", "]", "[", "self", ".", "arch", ".", "n_channels", "==", "3", "]", ";", "\n", "y_dim", "=", "x_dim", "\n", "self", ".", "x_dim", "=", "x_dim", ";", "\n", "self", ".", "y_dim", "=", "y_dim", ";", "\n", "self", ".", "n_channels", "=", "self", ".", "arch", ".", "n_channels", "\n", "\n", "self", ".", "memory", "=", "nn", ".", "Parameter", "(", "th", ".", "Tensor", "(", "self", ".", "hyperparams", ".", "memory_size", ",", "self", ".", "arch", ".", "n_classes", ")", ",", "\n", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "memory", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "memory", ".", "data", ".", "pow_", "(", "2", ")", "\n", "\n", "self", ".", "fc1_enc_to_pred", "=", "nn", ".", "Linear", "(", "self", ".", "arch", ".", "n_classes", "*", "2", ",", "self", ".", "arch", ".", "n_classes", ")", "\n", "self", ".", "fc1_key", "=", "nn", ".", "Linear", "(", "self", ".", "arch", ".", "n_classes", ",", "self", ".", "arch", ".", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.KL": [[42, 44], ["sum", "l.KL", "hasattr", "etp.EvidentialTuringProcess.arch.parameters"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.KL"], ["", "def", "KL", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "l", ".", "KL", "(", ")", "for", "l", "in", "[", "self", ".", "arch", ".", "parameters", "(", ")", "]", "if", "hasattr", "(", "l", ",", "\"KL\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.update_memory": [[45, 62], ["numpy.random.randint", "y[].view", "etp.EvidentialTuringProcess.get_memory_sample", "etp.EvidentialTuringProcess.get_attention_weights", "torch.mm", "torch.mm", "etp.EvidentialTuringProcess.memory.data.add_", "etp.EvidentialTuringProcess.memory.data.tanh_", "torch.one_hot().view", "torch.one_hot().view", "torch.softmax", "torch.softmax", "etp.EvidentialTuringProcess.transpose", "torch.one_hot", "torch.one_hot"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_memory_sample", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention_weights"], ["", "def", "update_memory", "(", "self", ",", "x_embed", ",", "y", ",", "max_size", "=", "50", ")", ":", "\n", "        ", "n_context", "=", "np", ".", "random", ".", "randint", "(", "3", ",", "max_size", ")", "\n", "x_given_embed", "=", "x_embed", "[", ":", "n_context", ",", ":", "]", "\n", "y_given", "=", "y", "[", ":", "n_context", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "mem_sample", "=", "self", ".", "get_memory_sample", "(", ")", "\n", "\n", "new_element", "=", "F", ".", "one_hot", "(", "y_given", ",", "self", ".", "arch", ".", "n_classes", ")", ".", "view", "(", "-", "1", ",", "self", ".", "arch", ".", "n_classes", ")", "+", "th", ".", "softmax", "(", "x_given_embed", ",", "\n", "1", ")", "\n", "weight_new_element", "=", "self", ".", "get_attention_weights", "(", "x_given_embed", ",", "mem_sample", ")", "\n", "add_new_element", "=", "th", ".", "mm", "(", "weight_new_element", ".", "transpose", "(", "0", ",", "1", ")", ",", "new_element", ")", "\n", "gamma", "=", "self", ".", "hyperparams", ".", "memory_learning_rate", "\n", "\n", "mem_offset", "=", "self", ".", "memory", "*", "(", "gamma", "-", "1", ")", "+", "add_new_element", "*", "(", "1", "-", "gamma", ")", "\n", "\n", "self", ".", "memory", ".", "data", ".", "add_", "(", "mem_offset", ")", "\n", "self", ".", "memory", ".", "data", ".", "tanh_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_memory_sample": [[63, 67], ["torch.distributions.Normal().rsample", "torch.distributions.Normal().rsample", "torch.ones().cuda", "torch.ones().cuda", "torch.distributions.Normal", "torch.distributions.Normal", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "get_memory_sample", "(", "self", ")", ":", "\n", "        ", "sig2", "=", "self", ".", "hyperparams", ".", "memo_variance", "\n", "sig2_vec", "=", "th", ".", "ones", "(", "self", ".", "memory", ".", "shape", ")", ".", "cuda", "(", ")", "*", "sig2", "\n", "return", "Normal", "(", "self", ".", "memory", ",", "sig2_vec", ")", ".", "rsample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention_weights": [[68, 72], ["etp.EvidentialTuringProcess.fc1_key", "torch.softmax", "torch.softmax", "torch.mm", "torch.mm", "numpy.sqrt", "etp.EvidentialTuringProcess.transpose"], "methods", ["None"], ["", "def", "get_attention_weights", "(", "self", ",", "x_embed", ",", "mem_sample", ")", ":", "\n", "        ", "keys", "=", "self", ".", "fc1_key", "(", "mem_sample", ")", "\n", "kq", "=", "th", ".", "mm", "(", "x_embed", ",", "keys", ".", "transpose", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "self", ".", "arch", ".", "n_classes", ")", "\n", "return", "F", ".", "softmax", "(", "kq", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention": [[73, 77], ["etp.EvidentialTuringProcess.get_memory_sample", "etp.EvidentialTuringProcess.get_attention_weights", "torch.mm", "torch.mm"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_memory_sample", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention_weights"], ["", "def", "get_attention", "(", "self", ",", "x_embed", ")", ":", "\n", "        ", "mem_sample", "=", "self", ".", "get_memory_sample", "(", ")", "\n", "weights", "=", "self", ".", "get_attention_weights", "(", "x_embed", ",", "mem_sample", ")", "\n", "return", "th", ".", "mm", "(", "weights", ",", "mem_sample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.ood_predict": [[78, 85], ["torch.exp", "torch.exp", "torch.exp.sum", "sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.softmax", "torch.log", "torch.log", "range", "torch.digamma", "torch.digamma", "torch.digamma", "torch.digamma"], "methods", ["None"], ["", "def", "ood_predict", "(", "self", ",", "data", ",", "logits", ")", ":", "\n", "        ", "probs", "=", "sum", "(", "F", ".", "softmax", "(", "logits", ",", "1", ")", "for", "_", "in", "range", "(", "self", ".", "arch", ".", "n_samples", ")", ")", "/", "self", ".", "arch", ".", "n_samples", "\n", "entropy_of_exp", "=", "-", "th", ".", "sum", "(", "probs", "*", "th", ".", "log", "(", "probs", "+", "1e-8", ")", ",", "axis", "=", "1", ")", "\n", "alpha", "=", "th", ".", "exp", "(", "logits", ")", "\n", "S", "=", "alpha", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", "\n", "expected_entropy", "=", "-", "th", ".", "sum", "(", "(", "alpha", "/", "S", ")", "*", "(", "th", ".", "digamma", "(", "alpha", "+", "1", ")", "-", "th", ".", "digamma", "(", "S", "+", "1.0", ")", ")", ",", "axis", "=", "1", ")", "\n", "return", "entropy_of_exp", "# - expected_entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.predict": [[86, 93], ["etp.EvidentialTuringProcess.forward", "torch.exp", "torch.exp", "torch.exp.sum", "probs.max"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.forward"], ["", "def", "predict", "(", "self", ",", "data", ")", ":", "\n", "        ", "x_embed", "=", "self", ".", "forward", "(", "data", ")", "\n", "alpha", "=", "th", ".", "exp", "(", "x_embed", ")", "\n", "S", "=", "alpha", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", "\n", "probs", "=", "alpha", "/", "S", "\n", "classes", "=", "probs", ".", "max", "(", "1", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "return", "classes", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.forward": [[94, 99], ["etp.EvidentialTuringProcess.arch", "etp.EvidentialTuringProcess.get_attention", "etp.EvidentialTuringProcess.fc1_enc_to_pred", "etp.EvidentialTuringProcess.clamp", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x_embed", "=", "self", ".", "arch", "(", "input", ")", "\n", "attention", "=", "self", ".", "get_attention", "(", "x_embed", ")", "\n", "logit", "=", "self", ".", "fc1_enc_to_pred", "(", "th", ".", "cat", "(", "(", "x_embed", ",", "attention", ")", ",", "dim", "=", "1", ")", ")", "\n", "return", "logit", ".", "clamp", "(", "max", "=", "15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.kl_dirichlet": [[100, 104], ["torch.distributions.Dirichlet", "torch.distributions.Dirichlet", "torch.distributions.Dirichlet", "torch.distributions.Dirichlet", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence"], "methods", ["None"], ["", "def", "kl_dirichlet", "(", "self", ",", "alpha", ",", "beta", ")", ":", "\n", "        ", "q", "=", "Dirichlet", "(", "alpha", ")", "\n", "p", "=", "Dirichlet", "(", "beta", ")", "\n", "return", "kl_divergence", "(", "q", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.loss": [[105, 122], ["torch.one_hot().view", "torch.one_hot().view", "etp.EvidentialTuringProcess.arch", "etp.EvidentialTuringProcess.get_attention", "etp.EvidentialTuringProcess.fc1_enc_to_pred", "etp.EvidentialTuringProcess.clamp", "etp.EvidentialTuringProcess.update_memory", "torch.exp", "torch.exp", "torch.exp.sum", "etp.EvidentialTuringProcess.kl_dirichlet", "torch.cat", "torch.cat", "torch.exp", "torch.exp", "etp.EvidentialTuringProcess.KL", "torch.one_hot", "torch.one_hot", "torch.digamma", "torch.digamma", "torch.digamma", "torch.digamma"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.get_attention", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.update_memory", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.kl_dirichlet", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.KL"], ["", "def", "loss", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "y_one_hot", "=", "F", ".", "one_hot", "(", "y", ",", "self", ".", "arch", ".", "n_classes", ")", ".", "view", "(", "-", "1", ",", "self", ".", "arch", ".", "n_classes", ")", "\n", "x_embed_pre", "=", "self", ".", "arch", "(", "x", ")", "\n", "attention", "=", "self", ".", "get_attention", "(", "x_embed_pre", ")", "\n", "logit", "=", "self", ".", "fc1_enc_to_pred", "(", "th", ".", "cat", "(", "(", "x_embed_pre", ",", "attention", ")", ",", "dim", "=", "1", ")", ")", "\n", "x_embed", "=", "logit", ".", "clamp", "(", "max", "=", "15", ")", "\n", "\n", "self", ".", "update_memory", "(", "x_embed_pre", ",", "y", ")", "\n", "\n", "alpha", "=", "th", ".", "exp", "(", "x_embed", ")", "\n", "S", "=", "alpha", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", "\n", "fit_term", "=", "(", "y_one_hot", "*", "(", "th", ".", "digamma", "(", "S", "+", "1e-8", ")", "-", "th", ".", "digamma", "(", "alpha", "+", "1e-8", ")", ")", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "reg_term", "=", "self", ".", "kl_dirichlet", "(", "alpha", ",", "th", ".", "exp", "(", "attention", ")", ")", "\n", "loss", "=", "(", "fit_term", "+", "reg_term", "*", "self", ".", "hyperparams", ".", "anneal_factor", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "self", ".", "KL", "(", ")", "/", "self", ".", "arch", ".", "dataset_size", "\n", "\n", "return", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.train": [[15, 35], ["model.train", "zip", "opt.zero_grad", "model.loss", "model.loss.backward", "model.loss.item", "opt.step", "print", "data.cuda", "target.cuda", "ood_data.cuda", "ood_target.cuda", "len"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.train", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.loss"], ["def", "train", "(", "model", ",", "train_loader", ",", "ood_loader", ",", "epoch", ",", "opt", ",", "iscuda", "=", "False", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "\n", "total_loss", "=", "0.0", "\n", "for", "(", "data", ",", "target", ")", ",", "(", "ood_data", ",", "ood_target", ")", "in", "zip", "(", "train_loader", ",", "ood_loader", ")", ":", "\n", "        ", "if", "iscuda", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "ood_data", ",", "ood_target", "=", "ood_data", ".", "cuda", "(", ")", ",", "ood_target", ".", "cuda", "(", ")", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "loss", "=", "model", ".", "loss", "(", "data", ",", "target", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "", "if", "verbose", ":", "\n", "        ", "print", "(", "f\"{epoch}: AvgLoss = {total_loss / len(train_loader):.010f}\"", ")", "\n", "\n", "", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.test_acc": [[37, 54], ["model.eval", "print", "torch.no_grad", "numpy.mod", "utils.get_results", "model.predict", "pred_cls.eq().sum().item", "len", "data.cuda", "target.cuda", "pred_cls.eq().sum", "len", "pred_cls.eq", "len", "target.view_as"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.utils.get_results", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.etp.EvidentialTuringProcess.predict"], ["", "def", "test_acc", "(", "model", ",", "loader", ",", "post_test_ood_loader", ",", "epoch", ",", "label", "=", "\"Test\"", ",", "iscuda", "=", "False", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", "=", "0", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "loader", ":", "\n", "            ", "if", "iscuda", ":", "\n", "                ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "", "pred_cls", ",", "pred_probs", "=", "model", ".", "predict", "(", "data", ")", "\n", "correct", "+=", "pred_cls", ".", "eq", "(", "target", ".", "view_as", "(", "pred_cls", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "", "", "print", "(", "\n", "f\"{epoch}: {label} set: \"", "\n", "f\"Accuracy: {correct}/{len(loader.dataset)} ({100. * correct / len(loader.dataset):.02f}%) \"", "\n", "f\"Error(%) = {100 * (1 - correct / len(loader.dataset)):.02f}\"", "\n", ")", "\n", "\n", "if", "np", ".", "mod", "(", "epoch", ",", "5", ")", "==", "0", ":", "\n", "        ", "get_results", "(", "model", ",", "loader", ",", "None", ",", "None", ",", "post_test_ood_loader", ",", "True", ",", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.main": [[56, 122], ["dataprep.prepare_data", "architectures.LeNet5", "len", "etp.EvidentialTuringProcess", "torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "range", "utils.get_results", "datetime.timedelta", "etp.EvidentialTuringProcess.parameters", "etp.EvidentialTuringProcess.cuda", "time.time", "script.train", "script.test_acc", "th.optim.lr_scheduler.CosineAnnealingLR.step", "time.time"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.dataprep.prepare_data", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.utils.get_results", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.train", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.script.test_acc"], ["", "", "def", "main", "(", "\n", "model_name", "=", "\"mcdrop\"", ",", "\n", "arch_name", "=", "\"lenet5\"", ",", "\n", "max_epochs", "=", "20", ",", "\n", "data_set", "=", "\"mnist\"", ",", "\n", "exp_num", "=", "0", ",", "\n", ")", ":", "\n", "    ", "batch_size", "=", "128", "\n", "(", "\n", "train_loader", ",", "\n", "test_loader", ",", "\n", "ood_loader", ",", "\n", "test_ood_loader", ",", "\n", "post_test_ood_loader", ",", "\n", "n_channel", ",", "\n", "n_classes", ",", "\n", ")", "=", "prepare_data", "(", "data_set", ",", "batch_size", ",", "iscuda", ")", "\n", "result", "=", "{", "\"train\"", ":", "{", "\"epoch_time\"", ":", "0", "}", ",", "\"test\"", ":", "{", "}", "}", "\n", "\n", "# Pick architecture", "\n", "arch", "=", "LeNet5", "(", "\n", "n_channel", ",", "\n", "n_classes", ",", "\n", "isvb", "=", "True", ",", "\n", "has_context", "=", "False", ",", "\n", ")", "\n", "\n", "n_data", "=", "len", "(", "train_loader", ".", "dataset", ")", "\n", "arch", ".", "dataset_size", "=", "n_data", "\n", "\n", "# Pick model", "\n", "model", "=", "EvidentialTuringProcess", "(", "arch", ")", "\n", "\n", "lrate", "=", "1e-3", "\n", "opt", "=", "th", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lrate", ")", "\n", "\n", "# Pick device", "\n", "if", "iscuda", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "\n", "", "scheduler", "=", "th", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "opt", ",", "T_max", "=", "max_epochs", ")", "\n", "\n", "# Training routine", "\n", "for", "epoch", "in", "range", "(", "1", ",", "max_epochs", "+", "1", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "opt", "=", "train", "(", "\n", "model", ",", "train_loader", ",", "ood_loader", ",", "epoch", ",", "opt", ",", "iscuda", "=", "iscuda", ",", "verbose", "=", "True", "\n", ")", "\n", "result", "[", "\"train\"", "]", "[", "\"epoch_time\"", "]", "+=", "time", ".", "time", "(", ")", "-", "start", "\n", "test_acc", "(", "model", ",", "test_loader", ",", "post_test_ood_loader", ",", "epoch", ",", "iscuda", "=", "iscuda", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "result", "[", "\"test\"", "]", "=", "get_results", "(", "\n", "model", ",", "\n", "test_loader", ",", "\n", "ood_loader", ",", "\n", "test_ood_loader", ",", "\n", "post_test_ood_loader", ",", "\n", "iscuda", ",", "\n", "batch_size", ",", "\n", ")", "\n", "result", "[", "\"train\"", "]", "[", "\"epoch_time\"", "]", "=", "timedelta", "(", "\n", "seconds", "=", "result", "[", "\"train\"", "]", "[", "\"epoch_time\"", "]", "/", "max_epochs", "\n", ")", "\n", "\n", "return", "result", ",", "model", ",", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.__init__": [[10, 60], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "VBLayer.VBLinear", "VBLayer.VBLinear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "NotImplementedError", "VBLayer.VBLinear", "VBLayer.VBLinear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "n_channels", "=", "1", ",", "\n", "n_classes", "=", "10", ",", "\n", "mcdrop", "=", "True", ",", "\n", "isvb", "=", "False", ",", "\n", "has_context", "=", "False", ",", "\n", "prior_precision", "=", "10", ",", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Basic LeNet5 architecture for now following the details from Louizos\n        :param n_channels: 1 creates MNIST arch, 3 creates Cifar arch\n        :param n_classes: 10 target classes\n        :param drop: true/false switches between deterministic and dropout based version\n        \"\"\"", "\n", "super", "(", "LeNet5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "isbnn", "=", "isvb", "\n", "self", ".", "drop_rate", "=", "0.25", "\n", "self", ".", "n_samples", "=", "10", "\n", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "dataset_size", "=", "None", "# will be initialized", "\n", "\n", "if", "n_channels", "==", "1", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "20", ",", "5", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "20", ",", "50", ",", "5", ",", "bias", "=", "True", ")", "\n", "dim_cf", "=", "4", "*", "4", "*", "50", "\n", "if", "self", ".", "isbnn", ":", "\n", "                ", "self", ".", "fc1", "=", "VBLinear", "(", "dim_cf", ",", "500", ",", "prior_prec", "=", "prior_precision", ")", "\n", "self", ".", "fc2", "=", "VBLinear", "(", "500", ",", "n_classes", ",", "prior_prec", "=", "prior_precision", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "dim_cf", ",", "500", ",", "bias", "=", "True", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "500", ",", "n_classes", ")", "\n", "\n", "", "", "elif", "n_channels", "==", "3", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "192", ",", "5", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "5", ",", "bias", "=", "True", ")", "\n", "\n", "dim_cf", "=", "5", "*", "5", "*", "192", "\n", "\n", "if", "self", ".", "isbnn", ":", "\n", "                ", "self", ".", "fc1", "=", "VBLinear", "(", "dim_cf", ",", "1000", ",", "prior_prec", "=", "prior_precision", ")", "\n", "self", ".", "fc2", "=", "VBLinear", "(", "1000", ",", "n_classes", ",", "prior_prec", "=", "prior_precision", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "dim_cf", ",", "1000", ",", "bias", "=", "True", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1000", ",", "n_classes", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Sorry {n_channels} is currently not possible\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.architectures.LeNet5.forward": [[61, 72], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.flatten", "torch.flatten", "torch.relu", "torch.relu", "architectures.LeNet5.fc2", "architectures.LeNet5.conv1", "architectures.LeNet5.conv2", "architectures.LeNet5.fc1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "context", "=", "None", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "input", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "th", ".", "flatten", "(", "out", ",", "1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.utils.get_results": [[4, 31], ["scores.compute_score().item", "scores.compute_score().item", "scores.compute_score", "scores.compute_score_ood", "scores.compute_score", "scores.compute_score"], "function", ["home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score_ood", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score", "home.repos.pwc.inspect_result.ituvisionlab_evidentialturingprocess.None.scores.compute_score"], ["def", "get_results", "(", "\n", "model", ",", "\n", "test_loader", ",", "\n", "ood_loader", ",", "\n", "test_ood_loader", ",", "\n", "post_test_ood_loader", ",", "\n", "iscuda", ",", "\n", "batch_size", "=", "200", ",", "\n", ")", ":", "\n", "    ", "_err", "=", "compute_score", "(", "model", ",", "test_loader", ",", "err", ",", "\"Error\"", ",", "\"test\"", ",", "iscuda", ")", ".", "item", "(", ")", "\n", "_nll", "=", "compute_score", "(", "model", ",", "test_loader", ",", "nll", ",", "\"NLL\"", ",", "\"test\"", ",", "iscuda", ")", ".", "item", "(", ")", "\n", "_ece", "=", "compute_score", "(", "model", ",", "test_loader", ",", "ece", ",", "\"ECE\"", ",", "\"test\"", ",", "iscuda", ")", "\n", "_auroc", "=", "compute_score_ood", "(", "\n", "model", ",", "\n", "test_loader", ",", "\n", "post_test_ood_loader", ",", "\n", "auroc", ",", "\n", "\"AU-ROC\"", ",", "\n", "\"ood post test\"", ",", "\n", "iscuda", ",", "\n", ")", "\n", "\n", "return", "{", "\n", "\"err\"", ":", "_err", ",", "\n", "\"nll\"", ":", "_nll", ",", "\n", "\"ece\"", ":", "_ece", ",", "\n", "\"auroc\"", ":", "_auroc", ",", "\n", "}", "\n"]]}