{"home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.None.test.val_augment": [[49, 52], ["dataset.transforms.resizeN"], "function", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.transforms.resizeN"], ["def", "val_augment", "(", "img", ",", "label", ")", ":", "\n", "    ", "img", ",", "label", "=", "resizeN", "(", "[", "img", ",", "label", "]", ",", "resized_shape", ")", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.tsne.inference": [[43, 104], ["os.makedirs", "os.makedirs", "KidneyData", "DataLoader", "UNet", "print", "UNet.load_state_dict", "UNet.cuda", "UNet.eval", "glob", "tqdm", "dices.items", "print", "resizeN", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "resizeN", "imread", "imread", "tsne.inference.val_augment"], "function", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.transforms.resizeN", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.transforms.resizeN", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.None.test.val_augment"], ["def", "inference", "(", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "out_dir", "+", "'/whole_seg'", ",", "exist_ok", "=", "True", ")", "\n", "\n", "def", "test_augment", "(", "img", ",", "label", ")", ":", "\n", "        ", "img", ",", "label", "=", "resizeN", "(", "[", "img", ",", "label", "]", ",", "resized_shape", ")", "\n", "return", "img", ",", "label", "\n", "\n", "", "test_dataset", "=", "KidneyData", "(", "test_path", ",", "transforms", "=", "[", "lambda", "x", ",", "y", ":", "test_augment", "(", "x", ",", "y", ")", ",", "]", ",", "mode", "=", "'train'", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# network setting", "\n", "net", "=", "UNet", "(", "in_shape", ",", "is_bn", ")", "\n", "model_file", "=", "out_dir", "+", "'snap/final'", "+", "'.pth'", "\n", "print", "(", "model_file", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_file", ")", ")", "\n", "net", ".", "cuda", "(", ")", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "names", "=", "glob", "(", "test_path", "+", "'*.jpg'", ")", "\n", "names", "=", "[", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "name", "in", "names", "]", "\n", "\n", "dices", "=", "{", "}", "\n", "\n", "def", "val_augment", "(", "img", ",", "label", ")", ":", "\n", "        ", "img", ",", "label", "=", "resizeN", "(", "[", "img", ",", "label", "]", ",", "resized_shape", ")", "\n", "return", "img", ",", "label", "\n", "\n", "# start prediction", "\n", "", "for", "name", "in", "tqdm", "(", "names", ")", ":", "\n", "        ", "img", "=", "imread", "(", "test_path", "+", "name", "+", "'.jpg'", ")", "\n", "gt_label", "=", "imread", "(", "test_path", "+", "name", "+", "'_1.bmp'", ")", "\n", "\n", "img", ",", "label", "=", "val_augment", "(", "img", ",", "gt_label", ")", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "label", "=", "label", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "img", "=", "img", ".", "reshape", "(", "(", "1", ",", "256", ",", "256", ")", ")", "\n", "label", "=", "label", ".", "reshape", "(", "(", "1", ",", "256", ",", "256", ")", ")", "\n", "img", "=", "img_to_tensor", "(", "img", ")", "\n", "label", "=", "label_to_tensor", "(", "label", ")", "\n", "img", "=", "Variable", "(", "img", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "label", "=", "Variable", "(", "label", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "\n", "logits", "=", "net", "(", "img", ")", "\n", "probs", "=", "F", ".", "sigmoid", "(", "logits", ")", "\n", "masks", "=", "(", "probs", ">", "0.5", ")", ".", "float", "(", ")", "\n", "dice_acc", "=", "dice_loss", "(", "masks", ",", "label", ")", "\n", "dices", "[", "name", "]", "=", "dice_acc", ".", "data", "[", "0", "]", "\n", "masks", "=", "masks", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "masks", "=", "masks", ".", "squeeze", "(", ")", "\n", "masks", "=", "resize", "(", "masks", ",", "(", "296", ",", "296", ")", ",", "mode", "=", "'reflect'", ",", "preserve_range", "=", "True", ")", "\n", "imsave", "(", "out_dir", "+", "'whole_seg/'", "+", "name", "+", "'.bmp'", ",", "masks", ")", "\n", "result_img", "=", "visulize_gt", "(", "masks", ".", "astype", "(", "np", ".", "uint8", ")", "*", "255", ",", "gt_label", ")", "\n", "imsave", "(", "out_dir", "+", "'whole_seg/'", "+", "name", "+", "'_1.bmp'", ",", "result_img", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "", "total", "=", "0", "\n", "for", "key", ",", "value", "in", "dices", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "key", "+", "'   '", "+", "str", "(", "value", ")", ")", "\n", "total", "+=", "value", "\n", "", "print", "(", "total", "/", "len", "(", "dices", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.tsne.tsne": [[106, 165], ["torch.Sequential", "nn.Sequential.cuda", "nn.Sequential.eval", "torchvision.Normalize", "torch.DataLoader", "enumerate", "numpy.asarray", "numpy.reshape", "numpy.asarray", "labels.flatten.flatten", "print", "time.time", "sklearn.manifold.TSNE", "sklearn.manifold.TSNE.fit_transform", "time.time", "print", "matplotlib.figure", "matplotlib.scatter", "matplotlib.savefig", "torch.Linear", "torch.Linear", "model.load_state_dict", "torchvision.ImageFolder", "target.cpu().numpy.cpu().numpy", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "nn.Sequential.", "np.reshape.data.cpu().numpy", "numpy.reshape", "np.reshape.append", "labels.flatten.append", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torchvision.Compose", "list", "target.cpu().numpy.cpu", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "np.reshape.data.cpu", "model.children", "torchvision.Scale", "torchvision.CenterCrop", "torchvision.ToTensor"], "function", ["None"], ["", "def", "tsne", "(", "model_file", ",", "test_data_dir", ",", "out_dir", ")", ":", "\n", "    ", "if", "model_file", "is", "None", ":", "\n", "        ", "model", "=", "models", ".", "__dict__", "[", "'resnet50'", "]", "(", "pretrained", "=", "True", ")", "\n", "model", ".", "fc", "=", "nn", ".", "Linear", "(", "2048", ",", "2", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "models", ".", "__dict__", "[", "'resnet50'", "]", "(", ")", "\n", "model", ".", "fc", "=", "nn", ".", "Linear", "(", "2048", ",", "2", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_file", ")", ")", "\n", "\n", "", "new_model", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "model", ".", "children", "(", ")", ")", "[", ":", "-", "1", "]", ")", "\n", "new_model", ".", "cuda", "(", ")", "\n", "new_model", ".", "eval", "(", ")", "\n", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.3", ",", "0.6", ",", "0.4", "]", ",", "std", "=", "[", "0.129", ",", "0.1", ",", "0.125", "]", ")", "\n", "\n", "test_loader", "=", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "test_data_dir", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Scale", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "vectors", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "i", ",", "(", "images", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "# measure data loading time", "\n", "\n", "        ", "target", "=", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "image_var", "=", "torch", ".", "autograd", ".", "Variable", "(", "images", ")", ".", "cuda", "(", ")", "\n", "\n", "vector", "=", "new_model", "(", "image_var", ")", "\n", "vector", "=", "vector", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "vector", "=", "np", ".", "reshape", "(", "vector", ",", "(", "batch_size", ",", "-", "1", ")", ")", "\n", "vectors", ".", "append", "(", "vector", ")", "\n", "labels", ".", "append", "(", "target", ")", "\n", "\n", "", "vectors", "=", "np", ".", "asarray", "(", "vectors", ")", "\n", "vectors", "=", "np", ".", "reshape", "(", "vectors", ",", "(", "-", "1", ",", "2048", ")", ")", "\n", "labels", "=", "np", ".", "asarray", "(", "labels", ")", "\n", "labels", "=", "labels", ".", "flatten", "(", ")", "\n", "\n", "print", "(", "'start tsne'", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "tsne", "=", "TSNE", "(", "perplexity", "=", "30", ",", "n_components", "=", "2", ",", "init", "=", "'pca'", ",", "random_state", "=", "0", ")", "\n", "Y", "=", "tsne", ".", "fit_transform", "(", "vectors", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "t1", "-", "t0", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "# colors = ['r']*2000", "\n", "# colors[:1000] = ['y']*1000", "\n", "plt", ".", "scatter", "(", "Y", "[", ":", ",", "0", "]", "/", "8", ",", "Y", "[", ":", ",", "1", "]", "/", "8", ",", "c", "=", "labels", ",", "cmap", "=", "plt", ".", "cm", ".", "Spectral", ")", "\n", "# plt.show()", "\n", "plt", ".", "savefig", "(", "'vis_superior.eps'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.statistic.dice_loss": [[1, 18], ["labels.size", "masks.view", "labels.view", "score.sum", "intersection.sum", "masks.view.sum", "labels.view.sum"], "function", ["None"], ["def", "dice_loss", "(", "masks", ",", "labels", ",", "is_average", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    dice loss\n    :param masks:\n    :param labels:\n    :return:\n    \"\"\"", "\n", "num", "=", "labels", ".", "size", "(", "0", ")", "\n", "m1", "=", "masks", ".", "view", "(", "num", ",", "-", "1", ")", "\n", "m2", "=", "labels", ".", "view", "(", "num", ",", "-", "1", ")", "\n", "intersection", "=", "(", "m1", "*", "m2", ")", "\n", "score", "=", "2", "*", "(", "intersection", ".", "sum", "(", "1", ")", "+", "1", ")", "/", "(", "m1", ".", "sum", "(", "1", ")", "+", "m2", ".", "sum", "(", "1", ")", "+", "1", ")", "\n", "\n", "if", "is_average", ":", "\n", "        ", "return", "score", ".", "sum", "(", ")", "/", "num", "\n", "", "else", ":", "\n", "        ", "return", "score", "", "", "", ""]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.statistic_plot.get_coordinate": [[8, 13], ["skimage.measure.regionprops", "numpy.rint", "np.rint.astype", "skimage.measure.label", "len"], "function", ["None"], ["def", "get_coordinate", "(", "mask", ")", ":", "\n", "    ", "areas", "=", "regionprops", "(", "label", "(", "mask", "//", "255", ")", ")", "\n", "assert", "len", "(", "areas", ")", "==", "1", "\n", "centroid", "=", "np", ".", "rint", "(", "areas", "[", "0", "]", ".", "centroid", ")", "\n", "return", "centroid", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.statistic_plot.visualize": [[15, 36], ["os.makedirs", "glob.glob", "print", "print", "skimage.io.imread", "skimage.io.imread", "statistic_plot.get_coordinate", "skimage.io.imsave", "skimage.io.imread", "utils.visualize.visulize_gt", "utils.visualize.visulize_gt", "skimage.io.imsave", "[].split", "name.split"], "function", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.statistic_plot.get_coordinate", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.visualize.visulize_gt", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.visualize.visulize_gt"], ["", "def", "visualize", "(", "data_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "data_dir", "+", "'result_vis_result/'", ",", "exist_ok", "=", "True", ")", "\n", "paths", "=", "glob", "(", "data_dir", "+", "'*.jpg'", ")", "\n", "print", "(", "paths", ")", "\n", "names", "=", "[", "name", ".", "split", "(", "'.'", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "name", "in", "paths", "]", "\n", "print", "(", "names", ")", "\n", "for", "name", "in", "names", ":", "\n", "\n", "        ", "img", "=", "imread", "(", "data_dir", "+", "name", "+", "'.jpg'", ",", "as_grey", "=", "True", ")", "\n", "gt", "=", "imread", "(", "data_dir", "+", "name", "+", "'_1.bmp'", ",", "as_grey", "=", "True", ")", "\n", "coordinate", "=", "get_coordinate", "(", "gt", ")", "\n", "\n", "img_cropped", "=", "img", "[", "coordinate", "[", "0", "]", "-", "75", ":", "coordinate", "[", "0", "]", "+", "75", ",", "coordinate", "[", "1", "]", "-", "75", ":", "coordinate", "[", "1", "]", "+", "75", "]", "\n", "imsave", "(", "data_dir", "+", "'result_vis_result/'", "+", "name", "+", "'_cropped.eps'", ",", "img_cropped", ")", "\n", "\n", "prediction", "=", "imread", "(", "data_dir", "+", "name", "+", "'.bmp'", ",", "as_grey", "=", "True", ")", "\n", "\n", "vis_img", "=", "visulize_gt", "(", "img", ",", "gt", ")", "\n", "vis_img", "=", "visulize_gt", "(", "vis_img", ",", "prediction", ",", "mode", "=", "'g'", ")", "\n", "vis_img", "=", "vis_img", "[", "coordinate", "[", "0", "]", "-", "75", ":", "coordinate", "[", "0", "]", "+", "75", ",", "coordinate", "[", "1", "]", "-", "75", ":", "coordinate", "[", "1", "]", "+", "75", "]", "\n", "imsave", "(", "data_dir", "+", "'result_vis_result/'", "+", "name", "+", "'.eps'", ",", "vis_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.utils.visualize.visulize_gt": [[7, 28], ["skimage.color.gray2rgb", "skimage.feature.canny", "skimage.morphology.dilation", "skimage.morphology.square"], "function", ["None"], ["def", "visulize_gt", "(", "img", ",", "gt_img", ",", "mode", "=", "'r'", ")", ":", "\n", "    ", "\"\"\"\n    visualize mannual delination\n    on the img\n    :param img: \n    :param gt_img: \n    :return: \n    \"\"\"", "\n", "rgb_img", "=", "gray2rgb", "(", "img", ")", "\n", "gt_edges", "=", "canny", "(", "gt_img", ",", "sigma", "=", "3", ")", "\n", "gt_edges", "=", "dilation", "(", "gt_edges", ",", "square", "(", "2", ")", ")", "\n", "if", "mode", "==", "'r'", ":", "\n", "        ", "rgb_img", "[", "gt_edges", "==", "1", ",", "0", "]", "=", "255", "\n", "rgb_img", "[", "gt_edges", "==", "1", ",", "1", "]", "=", "0", "\n", "rgb_img", "[", "gt_edges", "==", "1", ",", "2", "]", "=", "0", "\n", "", "elif", "mode", "==", "'g'", ":", "\n", "        ", "rgb_img", "[", "gt_edges", "==", "1", ",", "0", "]", "=", "0", "\n", "rgb_img", "[", "gt_edges", "==", "1", ",", "1", "]", "=", "255", "\n", "rgb_img", "[", "gt_edges", "==", "1", ",", "2", "]", "=", "0", "\n", "\n", "", "return", "rgb_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.transforms.random_horizontal_flipN": [[7, 18], ["random.random", "enumerate", "numpy.fliplr"], "function", ["None"], ["def", "random_horizontal_flipN", "(", "imgs", ",", "u", "=", "0.5", ")", ":", "\n", "    ", "\"\"\"\n    random horiziontal flip\n    :param imgs:\n    :param u:\n    :return:\n    \"\"\"", "\n", "if", "random", ".", "random", "(", ")", "<", "u", ":", "\n", "        ", "for", "n", ",", "img", "in", "enumerate", "(", "imgs", ")", ":", "\n", "            ", "imgs", "[", "n", "]", "=", "np", ".", "fliplr", "(", "img", ")", "\n", "", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.transforms.resizeN": [[20, 30], ["enumerate", "skimage.transform.resize"], "function", ["None"], ["", "def", "resizeN", "(", "imgs", ",", "new_size", ")", ":", "\n", "    ", "\"\"\"\n    resize input images\n    :param imgs:\n    :param new_size:\n    :return:\n    \"\"\"", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "imgs", "[", "i", "]", "=", "resize", "(", "img", ",", "new_size", ",", "mode", "=", "'reflect'", ",", "preserve_range", "=", "True", ")", "\n", "", "return", "imgs", "", "", ""]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.DatasetFromFolder.__init__": [[59, 67], ["torch.Dataset.__init__", "os.listdir", "BSDDataLoader.is_image_file", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "image_dir", ",", "target_mode", ",", "colordim", ",", "input_transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "#448", "\n", "        ", "super", "(", "DatasetFromFolder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_filenames", "=", "[", "x", "for", "x", "in", "listdir", "(", "join", "(", "image_dir", ",", "'data'", ")", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "input_transform", "=", "input_transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "target_mode", "=", "target_mode", "\n", "self", ".", "colordim", "=", "colordim", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.DatasetFromFolder.__getitem__": [[68, 84], ["BSDDataLoader.load_img", "os.path.join", "BSDDataLoader.load_img", "BSDDataLoader.load_img", "BSDDataLoader.DatasetFromFolder.input_transform", "BSDDataLoader.DatasetFromFolder.target_transform", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.load_img", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.load_img", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.load_img", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\n", "        ", "input", "=", "load_img", "(", "join", "(", "self", ".", "image_dir", ",", "'data'", ",", "self", ".", "image_filenames", "[", "index", "]", ")", ",", "self", ".", "colordim", ")", "#\\train\\data", "\n", "if", "self", ".", "target_mode", "==", "'seg'", ":", "\n", "            ", "target", "=", "load_img", "(", "join", "(", "self", ".", "image_dir", ",", "'seg'", ",", "self", ".", "image_filenames", "[", "index", "]", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "target", "=", "load_img", "(", "join", "(", "self", ".", "image_dir", ",", "'bon'", ",", "self", ".", "image_filenames", "[", "index", "]", ")", ",", "1", ")", "\n", "\n", "\n", "", "if", "self", ".", "input_transform", ":", "\n", "            ", "input", "=", "self", ".", "input_transform", "(", "input", ")", "\n", "", "if", "self", ".", "target_transform", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "input", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.DatasetFromFolder.__len__": [[85, 87], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_filenames", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.bsd500": [[9, 15], ["os.path.join", "print", "os.path.abspath", "os.path.exists", "print"], "function", ["None"], ["def", "bsd500", "(", "dest", "=", "join", "(", "abspath", "(", "'.'", ")", ",", "'COVID-19'", ")", ")", ":", "\n", "\n", "    ", "if", "not", "exists", "(", "dest", ")", ":", "\n", "        ", "print", "(", "\"dataset not exist \"", ")", "\n", "", "print", "(", "\"dest is \"", ",", "dest", ")", "\n", "return", "dest", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform": [[17, 21], ["torchvision.transforms.Compose", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "input_transform", "(", "crop_size", ")", ":", "\n", "    ", "return", "Compose", "(", "[", "\n", "CenterCrop", "(", "crop_size", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.get_training_set": [[24, 30], ["BSDDataLoader.bsd500", "os.path.join", "BSDDataLoader.DatasetFromFolder", "BSDDataLoader.input_transform", "BSDDataLoader.input_transform"], "function", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.bsd500", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform"], ["", "def", "get_training_set", "(", "size", ",", "target_mode", "=", "'seg'", ",", "colordim", "=", "1", ")", ":", "#448 bon 1", "\n", "    ", "root_dir", "=", "bsd500", "(", ")", "\n", "train_dir", "=", "join", "(", "root_dir", ",", "\"train\"", ")", "\n", "return", "DatasetFromFolder", "(", "train_dir", ",", "target_mode", ",", "colordim", ",", "\n", "input_transform", "=", "input_transform", "(", "size", ")", ",", "\n", "target_transform", "=", "input_transform", "(", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.get_test_set": [[32, 41], ["BSDDataLoader.bsd500", "print", "print", "os.path.join", "print", "BSDDataLoader.DatasetFromFolder", "BSDDataLoader.input_transform", "BSDDataLoader.input_transform"], "function", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.bsd500", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.input_transform"], ["", "def", "get_test_set", "(", "size", ",", "target_mode", "=", "'seg'", ",", "colordim", "=", "1", ")", ":", "\n", "    ", "root_dir", "=", "bsd500", "(", ")", "\n", "print", "(", "'enter the test root'", ")", "\n", "print", "(", "root_dir", ")", "\n", "test_dir", "=", "join", "(", "root_dir", ",", "\"test\"", ")", "\n", "print", "(", "test_dir", ")", "\n", "return", "DatasetFromFolder", "(", "test_dir", ",", "target_mode", ",", "colordim", ",", "\n", "input_transform", "=", "input_transform", "(", "size", ")", ",", "\n", "target_transform", "=", "input_transform", "(", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.is_image_file": [[45, 47], ["any", "filename.endswith"], "function", ["None"], ["", "def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "\".png\"", ",", "\".jpg\"", ",", "\".jpeg\"", ",", "\".bmp\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.BSDDataLoader.load_img": [[49, 56], ["PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "function", ["None"], ["", "def", "load_img", "(", "filepath", ",", "colordim", ")", ":", "\n", "    ", "if", "colordim", "==", "1", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "'L'", ")", "\n", "", "else", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "'RGB'", ")", "\n", "#y, _, _ = img.split()", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.__init__": [[49, 56], ["torch.utils.data.Dataset.__init__", "KidneySet.load_names"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.load_names"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "mode", "=", "'train'", ")", ":", "#transforms, mask_ration=0.2", "\n", "        ", "super", "(", "KidneyData", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_path", "=", "path", "\n", "#self._transforms = transforms", "\n", "#self._mask_ratio = mask_ration", "\n", "self", ".", "_mode", "=", "mode", "\n", "self", ".", "_names", "=", "load_names", "(", "path", ",", "'png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_img": [[57, 62], ["imread", "os.path.join"], "methods", ["None"], ["", "def", "get_img", "(", "self", ",", "index", ")", ":", "\n", "        ", "name", "=", "self", ".", "_names", "[", "index", "]", "\n", "#print('imgname', name)", "\n", "img", "=", "imread", "(", "join", "(", "self", ".", "_path", ",", "'data'", ")", "+", "os", ".", "sep", "+", "name", "+", "'.png'", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_label": [[63, 68], ["imread", "os.path.join"], "methods", ["None"], ["", "def", "get_label", "(", "self", ",", "index", ")", ":", "\n", "        ", "name", "=", "self", ".", "_names", "[", "index", "]", "\n", "#print('labelname', name)", "\n", "label", "=", "imread", "(", "join", "(", "self", ".", "_path", ",", "'bon'", ")", "+", "os", ".", "sep", "+", "name", "+", "'.png'", ")", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_train_item": [[69, 86], ["KidneySet.KidneyData.get_img().astype", "KidneySet.KidneyData.get_label", "np.min", "np.max", "KidneySet.img_to_tensor", "KidneySet.label_to_tensor", "label_to_tensor.astype", "KidneySet.KidneyData.get_img"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_label", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.img_to_tensor", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.label_to_tensor", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_img"], ["", "def", "get_train_item", "(", "self", ",", "index", ")", ":", "\n", "#print('get train_item')", "\n", "        ", "img", "=", "self", ".", "get_img", "(", "index", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "label", "=", "self", ".", "get_label", "(", "index", ")", "\n", "#label = label.astype(np.float32)", "\n", "#img += label * self._mask_ratio", "\n", "'''\n        for t in self._transforms:\n            img, label = t(img, label)\n        '''", "\n", "intensity_min", "=", "np", ".", "min", "(", "img", ")", "\n", "intensity_max", "=", "np", ".", "max", "(", "img", ")", "\n", "img", "=", "(", "img", "-", "intensity_min", ")", "/", "(", "intensity_max", "-", "intensity_min", ")", "\n", "label", "=", "label", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "img", "=", "img_to_tensor", "(", "img", ")", "\n", "label", "=", "label_to_tensor", "(", "label", ")", "\n", "return", "img", ",", "label", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_test_item": [[87, 91], ["KidneySet.KidneyData.get_img", "KidneySet.img_to_tensor"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_img", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.img_to_tensor"], ["", "def", "get_test_item", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", "=", "self", ".", "get_img", "(", "index", ")", "\n", "img", "=", "img_to_tensor", "(", "img", ")", "\n", "return", "img", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.__getitem__": [[92, 98], ["KidneySet.KidneyData.get_train_item", "KidneySet.KidneyData.get_test_item"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_train_item", "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.get_test_item"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "_mode", "==", "'train'", ":", "\n", "#print('get train_item')", "\n", "            ", "return", "self", ".", "get_train_item", "(", "index", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "get_test_item", "(", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.KidneyData.__len__": [[99, 101], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.img_to_tensor": [[10, 18], ["np.expand_dims", "img.astype.astype", "torch.from_numpy"], "function", ["None"], ["def", "img_to_tensor", "(", "img", ",", "mean", "=", "0", ",", "std", "=", "1", ")", ":", "\n", "    ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "assert", "img", ".", "shape", "[", "0", "]", "==", "1", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img", "=", "(", "img", "-", "mean", ")", "/", "std", "\n", "tensor", "=", "torch", ".", "from_numpy", "(", "img", ")", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.label_to_tensor": [[20, 24], ["torch.from_numpy().type", "torch.from_numpy"], "function", ["None"], ["", "def", "label_to_tensor", "(", "label", ",", "threshold", "=", "0.5", ")", ":", "\n", "    ", "label", "=", "(", "label", ">", "threshold", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "tensor", "=", "torch", ".", "from_numpy", "(", "label", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.tensor_to_image": [[26, 32], ["tensor.numpy", "image.astype.astype"], "function", ["None"], ["", "def", "tensor_to_image", "(", "tensor", ",", "mean", "=", "0", ",", "std", "=", "1", ")", ":", "\n", "    ", "image", "=", "tensor", ".", "numpy", "(", ")", "\n", "image", "=", "image", "*", "std", "+", "mean", "\n", "image", "=", "image", "*", "255", "\n", "image", "=", "image", ".", "astype", "(", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.tensor_to_label": [[34, 38], ["label.astype.astype", "tensor.numpy"], "function", ["None"], ["", "def", "tensor_to_label", "(", "tensor", ")", ":", "\n", "    ", "label", "=", "tensor", ".", "numpy", "(", ")", "*", "255", "\n", "label", "=", "label", ".", "astype", "(", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.dataset.KidneySet.load_names": [[40, 47], ["os.path.join", "glob.glob", "[].split", "name.split"], "function", ["None"], ["", "def", "load_names", "(", "path", ",", "postfix", ")", ":", "\n", "    ", "path", "=", "join", "(", "path", ",", "'data'", ")", "\n", "#print('path', path)", "\n", "full_names", "=", "glob", "(", "path", "+", "os", ".", "sep", "+", "'*.'", "+", "postfix", ")", "\n", "#print('full_names', full_names)", "\n", "names", "=", "[", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", "for", "name", "in", "full_names", "]", "#'/'", "\n", "return", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.AttentionLoss.CovLoss.__init__": [[8, 12], ["torch.Module.__init__", "torch.BCELoss", "torch.BCELoss", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CovLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_bce_loss", "=", "nn", ".", "BCELoss", "(", ")", "# nn.CrossEntropyLoss(reduce=True, size_average=True)", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "def", "forward", "(", "self", ",", "logits", ",", "labels", ",", "v_attention", ",", "h_attention", ")", ":", "#", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.AttentionLoss.CovLoss.forward": [[12, 63], ["logits.view", "labels.view", "AttentionLoss.CovLoss._bce_loss", "labels.size", "masks.view", "labels.view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "v_attention.size", "v_attention.size", "AttentionLoss.CovLoss.avgpool", "v_attention.view", "h_attention.view", "AttentionLoss.CovLoss.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "range", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "range", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "range", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "AttentionLoss.CovLoss.avgpool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.tensor.sum", "torch.tensor.sum", "vhl[].mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "v_flatten[].unsqueeze", "h_flatten[].unsqueeze", "l_flatten[].unsqueeze", "intersection.sum", "masks.view.sum", "labels.view.sum", "torch.randn.sum", "torch.randn.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ",", "v_attention", ",", "h_attention", ")", ":", "#", "\n", "# BCEloss", "\n", "        ", "logits_flatten", "=", "logits", ".", "view", "(", "-", "1", ")", "\n", "labels_flatten", "=", "labels", ".", "view", "(", "-", "1", ")", "\n", "bceloss", "=", "self", ".", "_bce_loss", "(", "logits_flatten", ",", "labels_flatten", ")", "\n", "\n", "# Diceloss", "\n", "N", "=", "labels", ".", "size", "(", "0", ")", "\n", "smooth", "=", "1", "\n", "masks", "=", "(", "logits", ">", "0.4", ")", ".", "float", "(", ")", "\n", "input_flat", "=", "masks", ".", "view", "(", "N", ",", "-", "1", ")", "\n", "target_flat", "=", "labels", ".", "view", "(", "N", ",", "-", "1", ")", "\n", "intersection", "=", "input_flat", "*", "target_flat", "\n", "# ", "\n", "diceloss", "=", "torch", ".", "tensor", "(", "2", "*", "(", "intersection", ".", "sum", "(", "1", ")", "+", "smooth", ")", "/", "(", "input_flat", ".", "sum", "(", "1", ")", "+", "target_flat", ".", "sum", "(", "1", ")", "+", "smooth", ")", ",", "\n", "requires_grad", "=", "True", ")", "\n", "#print('diceloss is a leaf: ', diceloss.is_leaf)", "\n", "diceloss", "=", "1", "-", "diceloss", ".", "sum", "(", ")", "/", "N", "\n", "#print('2nd diceloss is a leaf: ', diceloss.is_leaf)", "\n", "#######################################################", "\n", "#Covloss", "\n", "#\u8bbev_attention.size=[4, 64, 64]", "\n", "\n", "N1", "=", "v_attention", ".", "size", "(", "0", ")", "\n", "N2", "=", "v_attention", ".", "size", "(", "2", ")", "\n", "#N3 = v_features.size(1)", "\n", "#print(\"before poooling \")", "\n", "attent_labels", "=", "self", ".", "avgpool", "(", "self", ".", "avgpool", "(", "labels", ")", ")", "#block3, pooling twice\uff0c the same size with v_flatten", "\n", "v_flatten", "=", "v_attention", ".", "view", "(", "N1", ",", "N2", "*", "N2", ")", "\n", "h_flatten", "=", "h_attention", ".", "view", "(", "N1", ",", "N2", "*", "N2", ")", "\n", "l_flatten", "=", "attent_labels", ".", "view", "(", "N1", ",", "N2", "*", "N2", ")", "\n", "vhl", "=", "torch", ".", "randn", "(", "N1", ",", "N2", "*", "N2", ",", "3", ")", "#, 3", "\n", "for", "i", "in", "range", "(", "N1", ")", ":", "\n", "            ", "vhl", "[", "i", ",", ":", ",", ":", "]", "=", "torch", ".", "cat", "(", "(", "v_flatten", "[", "i", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", ",", "h_flatten", "[", "i", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", ",", "l_flatten", "[", "i", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", ")", ",", "1", ")", "\n", "#vhl[i, :, :] = torch.cat((v_flatten[i, :].unsqueeze(1), h_flatten[i, :].unsqueeze(1)), 1)", "\n", "", "vhl_mean", "=", "torch", ".", "randn", "(", "N1", ",", "3", ")", "\n", "for", "i", "in", "range", "(", "N1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "                ", "vhl_mean", "[", "i", ",", "j", "]", "=", "vhl", "[", "i", ",", ":", ",", "j", "]", ".", "mean", "(", ")", "\n", "", "", "vhl_cor", "=", "torch", ".", "randn", "(", "N1", ")", "\n", "#vhl_cor_numpy = vhl_cor.detach().numpy()", "\n", "for", "i", "in", "range", "(", "N1", ")", ":", "\n", "            ", "vhl_cor", "[", "i", "]", "=", "(", "(", "vhl", "[", "i", ",", ":", ",", "0", "]", "-", "vhl_mean", "[", "i", ",", "0", "]", ")", "*", "(", "vhl", "[", "i", ",", ":", ",", "1", "]", "-", "vhl_mean", "[", "i", ",", "1", "]", ")", "*", "(", "vhl", "[", "i", ",", ":", ",", "2", "]", "-", "vhl_mean", "[", "i", ",", "2", "]", ")", ")", ".", "sum", "(", "0", ")", "/", "torch", ".", "sqrt", "(", "(", "vhl", "[", "i", ",", ":", ",", "0", "]", "-", "vhl_mean", "[", "i", ",", "0", "]", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", "*", "(", "vhl", "[", "i", ",", ":", ",", "1", "]", "-", "vhl_mean", "[", "i", ",", "1", "]", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", "*", "(", "vhl", "[", "i", ",", ":", ",", "2", "]", "-", "vhl_mean", "[", "i", ",", "2", "]", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", ")", "\n", "\n", "#vhl_cor = torch.from_numpy(vhl_cor_numpy)", "\n", "#print('vhl_cor: ', vhl_cor.is_leaf)", "\n", "", "cor_loss", "=", "torch", ".", "tensor", "(", "-", "vhl_cor", ".", "sum", "(", ")", "/", "N1", ")", ".", "cuda", "(", ")", "##\u5982\u679c\u5728GPU\u4e0a\u8dd1\u8981\u5e26\u4e0acuda", "\n", "#print('cor_loss is a leaf: ',cor_loss.is_leaf)", "\n", "#", "\n", "return", "0.2", "*", "bceloss", "+", "0.3", "*", "diceloss", "+", "0.5", "*", "cor_loss", "\n", "#return bceloss*0.5 + diceloss*0.5 #", ""]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.ConvBnRelu2d.__init__": [[10, 34], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "is_bn", "=", "True", ",", "\n", "is_relu", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Convolution + Batch Norm + Relu for 2D feature maps\n        :param in_channels:\n        :param out_channels:\n        :param kernel_size:\n        :param padding:\n        :param dilation:\n        :param stride:\n        :param groups:\n        :param is_bn:\n        :param is_relu:\n        \"\"\"", "\n", "super", "(", "ConvBnRelu2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ")", "#Hout=(H_in+2*padding[0]-dilation[0]*(kernel_size[0]-1)-1)/stride[0]+1", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "eps", "=", "BN_EPS", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "if", "is_bn", "is", "False", ":", "\n", "            ", "self", ".", "bn", "=", "None", "\n", "\n", "", "if", "is_relu", "is", "False", ":", "\n", "            ", "self", ".", "relu", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.ConvBnRelu2d.forward": [[35, 43], ["Net_blocks.ConvBnRelu2d.conv", "Net_blocks.ConvBnRelu2d.bn", "Net_blocks.ConvBnRelu2d.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "bn", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "relu", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.ConvBnRelu2d.merge_bn": [[44, 74], ["conv_weight.size", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "merge_bn", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "bn", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "assert", "(", "self", ".", "conv", ".", "bias", "is", "None", ")", "\n", "\n", "conv_weight", "=", "self", ".", "conv", ".", "weight", ".", "data", "\n", "bn_weight", "=", "self", ".", "bn", ".", "weight", ".", "data", "\n", "bn_bias", "=", "self", ".", "bn", ".", "bias", ".", "data", "\n", "bn_running_mean", "=", "self", ".", "bn", ".", "running_mean", "\n", "bn_running_var", "=", "self", ".", "bn", ".", "running_var", "\n", "bn_eps", "=", "self", ".", "bn", ".", "eps", "\n", "\n", "# https://github.com/sanghoon/pva-faster-rcnn/issues/5", "\n", "# https://github.com/sanghoon/pva-faster-rcnn/commit/39570aab8c6513f0e76e5ab5dba8dfbf63e9c68c", "\n", "\n", "N", ",", "C", ",", "KH", ",", "KW", "=", "conv_weight", ".", "size", "(", ")", "\n", "std", "=", "1", "/", "(", "torch", ".", "sqrt", "(", "bn_running_var", "+", "bn_eps", ")", ")", "\n", "std_bn_weight", "=", "(", "std", "*", "bn_weight", ")", ".", "repeat", "(", "C", "*", "KH", "*", "KW", ",", "1", ")", ".", "t", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "C", ",", "KH", ",", "KW", ")", "\n", "conv_weight_hat", "=", "std_bn_weight", "*", "conv_weight", "\n", "conv_bias_hat", "=", "(", "bn_bias", "-", "bn_weight", "*", "std", "*", "bn_running_mean", ")", "\n", "\n", "self", ".", "bn", "=", "None", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "conv", ".", "in_channels", ",", "out_channels", "=", "self", ".", "conv", ".", "out_channels", ",", "\n", "kernel_size", "=", "self", ".", "conv", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "conv", ".", "padding", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "dilation", "=", "self", ".", "conv", ".", "dilation", ",", "\n", "groups", "=", "self", ".", "conv", ".", "groups", ",", "\n", "bias", "=", "True", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", "=", "conv_weight_hat", "# fill in", "\n", "self", ".", "conv", ".", "bias", ".", "data", "=", "conv_bias_hat", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.StackEncoder.__init__": [[77, 89], ["torch.Module.__init__", "Net_blocks.ConvBnRelu2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "Net_blocks.ConvBnRelu2d", "Net_blocks.ConvBnRelu2d"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_channels", ",", "y_channels", ",", "kernel_size", ",", "padding", ",", "is_bn", "=", "True", ")", ":", "#x_channel is in_channel, y_channel is out_channel", "\n", "        ", "super", "(", "StackEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#padding = (kernel_size - 1) // 2  #padding=1", "\n", "self", ".", "encode1", "=", "ConvBnRelu2d", "(", "x_channels", ",", "y_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", "self", ".", "encode", "=", "nn", ".", "Sequential", "(", "\n", "#ConvBnRelu2d(x_channels, y_channels, kernel_size=kernel_size, padding=padding, dilation=1, stride=1,", "\n", "#            groups=1, is_bn=is_bn),", "\n", "ConvBnRelu2d", "(", "y_channels", ",", "y_channels", "//", "2", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", ",", "\n", "ConvBnRelu2d", "(", "y_channels", "//", "2", ",", "y_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.StackEncoder.forward": [[91, 98], ["Net_blocks.StackEncoder.encode1", "Net_blocks.StackEncoder.encode"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encode1", "(", "x", ")", "\n", "x_skip", "=", "x", "\n", "x", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "x_skip", "+", "x", "\n", "#x_small = F.max_pool2d(x, kernel_size=2, stride=2)", "\n", "return", "x", "#, x_small # \u540e\u4e00\u4e2a\u5377\u79ef\u5c42\u53capooling\u5c42\u540c\u65f6\u8f93\u51fa", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.StackDecoder.__init__": [[101, 112], ["torch.Module.__init__", "Net_blocks.ConvBnRelu2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "Net_blocks.ConvBnRelu2d", "Net_blocks.ConvBnRelu2d"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "v_big_channels", ",", "x_channels", ",", "h_big_channels", ",", "y_channels", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "StackDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "#padding=1", "\n", "self", ".", "decode1", "=", "ConvBnRelu2d", "(", "v_big_channels", "+", "h_big_channels", "+", "x_channels", ",", "y_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "1", ",", "\n", "stride", "=", "1", ",", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", "self", ".", "decode", "=", "nn", ".", "Sequential", "(", "\n", "ConvBnRelu2d", "(", "y_channels", ",", "y_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", ",", "\n", "ConvBnRelu2d", "(", "y_channels", ",", "y_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ",", "dilation", "=", "1", ",", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.Net_blocks.StackDecoder.forward": [[114, 123], ["v_big.size", "torch.upsample", "torch.upsample", "torch.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Net_blocks.StackDecoder.decode1", "Net_blocks.StackDecoder.decode"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "v_big", ",", "h_big", ",", "x", ")", ":", "#v_big\u662f\u5f53\u524d\u5c42\u7684\u4e0a\u5c42pooling\u4e4b\u524d\u7684\u5377\u79ef\u7ed3\u679c\uff0cx\u662f\u5f53\u524d\u5c42", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "v_big", ".", "size", "(", ")", "\n", "y", "=", "F", ".", "upsample", "(", "x", ",", "size", "=", "(", "H", ",", "W", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "v_big", ",", "y", ",", "h_big", ")", ",", "1", ")", "#\u6a2a\u7740\u62fc\u5728\u4e00\u8d77", "\n", "y", "=", "self", ".", "decode1", "(", "y", ")", "\n", "y_skip", "=", "y", "\n", "y", "=", "self", ".", "decode", "(", "y", ")", "\n", "y", "=", "y_skip", "+", "y", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__": [[9, 99], ["torch.Module.__init__", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.StackEncoder", "modules.Net_blocks.ConvBnRelu2d", "modules.Net_blocks.ConvBnRelu2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "modules.Net_blocks.StackDecoder", "modules.Net_blocks.StackDecoder", "modules.Net_blocks.StackDecoder", "modules.Net_blocks.StackDecoder", "modules.Net_blocks.StackDecoder", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_shape", ",", "is_bn", "=", "False", ")", ":", "\n", "        ", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "C", ",", "H", ",", "W", "=", "in_shape", "\n", "\n", "self", ".", "v_down1_1", "=", "StackEncoder", "(", "C", ",", "32", ",", "kernel_size", "=", "(", "5", ",", "3", ")", ",", "padding", "=", "(", "2", ",", "1", ")", ",", "is_bn", "=", "is_bn", ")", "# \u540e\u4e00\u4e2a\u5377\u79ef\u5c42\u53capooling\u5c42\u540c\u65f6\u8f93\u51fa", "\n", "self", ".", "v_down1_4", "=", "StackEncoder", "(", "C", ",", "32", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down1_2", "=", "StackEncoder", "(", "C", ",", "32", ",", "(", "3", ",", "1", ")", ",", "(", "1", ",", "0", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down1_3", "=", "ConvBnRelu2d", "(", "32", "*", "3", ",", "32", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "#after concat", "\n", "self", ".", "v_down1_res", "=", "ConvBnRelu2d", "(", "C", ",", "32", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "#for residual", "\n", "# self.v_down1_pool = ConvBnRelu2d(32, 32, kernel_size=3, padding=1, stride=2, is_bn=is_bn)", "\n", "# self.v_down1_5 = ConvBnRelu2d(32 * 2, 32, kernel_size=1, padding=0, stride=1, is_bn=is_bn)", "\n", "\n", "self", ".", "v_down2_1", "=", "StackEncoder", "(", "32", ",", "64", ",", "(", "5", ",", "3", ")", ",", "(", "2", ",", "1", ")", ",", "is_bn", ")", "# 32", "\n", "self", ".", "v_down2_2", "=", "StackEncoder", "(", "32", ",", "64", ",", "(", "3", ",", "1", ")", ",", "(", "1", ",", "0", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down2_4", "=", "StackEncoder", "(", "32", ",", "64", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down2_3", "=", "ConvBnRelu2d", "(", "64", "*", "3", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "self", ".", "v_down2_res", "=", "ConvBnRelu2d", "(", "32", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.v_down2_pool = ConvBnRelu2d(64, 64, kernel_size=3, padding=1, stride=2, is_bn=is_bn)", "\n", "#self.v_down2_5 = ConvBnRelu2d(64 * 2, 64, kernel_size=1, padding=0, stride=1, is_bn=is_bn)", "\n", "\n", "self", ".", "v_down3_1", "=", "StackEncoder", "(", "64", ",", "128", ",", "(", "5", ",", "3", ")", ",", "(", "2", ",", "1", ")", ",", "is_bn", ")", "# 32", "\n", "self", ".", "v_down3_2", "=", "StackEncoder", "(", "64", ",", "128", ",", "(", "3", ",", "1", ")", ",", "(", "1", ",", "0", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down3_4", "=", "StackEncoder", "(", "64", ",", "128", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down3_3", "=", "ConvBnRelu2d", "(", "128", "*", "3", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "self", ".", "v_down3_res", "=", "ConvBnRelu2d", "(", "64", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.v_down3_pool = ConvBnRelu2d(128, 128, kernel_size=3, padding=1, stride=2, is_bn=is_bn)", "\n", "#self.v_down3_5 = ConvBnRelu2d(128 * 2, 128, kernel_size=1, padding=0, stride=1, is_bn=is_bn)", "\n", "self", ".", "for_atten3_1", "=", "ConvBnRelu2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", "self", ".", "for_atten3_2", "=", "ConvBnRelu2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "\n", "self", ".", "v_down4_1", "=", "StackEncoder", "(", "128", ",", "256", ",", "(", "5", ",", "3", ")", ",", "(", "2", ",", "1", ")", ",", "is_bn", ")", "# 16", "\n", "self", ".", "v_down4_2", "=", "StackEncoder", "(", "128", ",", "256", ",", "(", "3", ",", "1", ")", ",", "(", "1", ",", "0", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down4_4", "=", "StackEncoder", "(", "128", ",", "256", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down4_3", "=", "ConvBnRelu2d", "(", "256", "*", "3", ",", "256", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "self", ".", "v_down4_res", "=", "ConvBnRelu2d", "(", "128", ",", "256", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.v_down4_pool = ConvBnRelu2d(256, 256, kernel_size=3, padding=1, stride=2, is_bn=is_bn)", "\n", "#self.v_down4_5 = ConvBnRelu2d(256 * 2, 256, kernel_size=1, padding=0, stride=1, is_bn=is_bn)", "\n", "\n", "self", ".", "v_down5_1", "=", "StackEncoder", "(", "256", ",", "512", ",", "(", "5", ",", "3", ")", ",", "(", "2", ",", "1", ")", ",", "is_bn", ")", "# 8", "\n", "self", ".", "v_down5_2", "=", "StackEncoder", "(", "256", ",", "512", ",", "(", "3", ",", "1", ")", ",", "(", "1", ",", "0", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down5_4", "=", "StackEncoder", "(", "256", ",", "512", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "is_bn", ")", "\n", "self", ".", "v_down5_3", "=", "ConvBnRelu2d", "(", "512", "*", "3", ",", "512", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "self", ".", "v_down5_res", "=", "ConvBnRelu2d", "(", "256", ",", "512", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.v_down5_pool = ConvBnRelu2d(512, 512, kernel_size=3, padding=1, stride=2, is_bn=is_bn)", "\n", "#self.v_down5_5 = ConvBnRelu2d(512 * 2, 512, kernel_size=1, padding=0, stride=1, is_bn=is_bn)", "\n", "\n", "self", ".", "h_down1_1", "=", "StackEncoder", "(", "C", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "5", ")", ",", "padding", "=", "(", "1", ",", "2", ")", ",", "is_bn", "=", "is_bn", ")", "# \u540e\u4e00\u4e2a\u5377\u79ef\u5c42\u53capooling\u5c42\u540c\u65f6\u8f93\u51fa", "\n", "self", ".", "h_down1_2", "=", "StackEncoder", "(", "C", ",", "32", ",", "(", "1", ",", "3", ")", ",", "(", "0", ",", "1", ")", ",", "is_bn", ")", "\n", "# self.h_down1_skip = ConvBnRelu2d(C, 32, kernel_size=3, padding=1, stride=1, is_bn=is_bn)", "\n", "self", ".", "h_down1_3", "=", "ConvBnRelu2d", "(", "C", ",", "32", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.h_down1_4 = ConvBnRelu2d(32 * 3, 32, kernel_size=1, padding=0, stride=1, is_bn=is_bn, is_relu=False)", "\n", "\n", "self", ".", "h_down2_1", "=", "StackEncoder", "(", "32", ",", "64", ",", "(", "3", ",", "5", ")", ",", "(", "1", ",", "2", ")", ",", "is_bn", ")", "# 64", "\n", "self", ".", "h_down2_2", "=", "StackEncoder", "(", "32", ",", "64", ",", "(", "1", ",", "3", ")", ",", "(", "0", ",", "1", ")", ",", "is_bn", ")", "\n", "# self.h_down2_skip = ConvBnRelu2d(16, 16, kernel_size=3, padding=1, stride=1, is_bn=is_bn)", "\n", "self", ".", "h_down2_3", "=", "ConvBnRelu2d", "(", "32", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.h_down2_4 = ConvBnRelu2d(64 * 3, 64, kernel_size=1, padding=0, stride=1, is_bn=is_bn, is_relu=False)", "\n", "\n", "self", ".", "h_down3_1", "=", "StackEncoder", "(", "64", ",", "128", ",", "(", "3", ",", "5", ")", ",", "(", "1", ",", "2", ")", ",", "is_bn", ")", "# 32", "\n", "self", ".", "h_down3_2", "=", "StackEncoder", "(", "64", ",", "128", ",", "(", "1", ",", "3", ")", ",", "(", "0", ",", "1", ")", ",", "is_bn", ")", "\n", "# self.h_down3_skip = ConvBnRelu2d(32, 32, kernel_size=3, padding=1, stride=1, is_bn=is_bn)", "\n", "self", ".", "h_down3_3", "=", "ConvBnRelu2d", "(", "64", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.h_down3_4 = ConvBnRelu2d(128 * 3, 128, kernel_size=1, padding=0, stride=1, is_bn=is_bn, is_relu=False)", "\n", "\n", "self", ".", "h_down4_1", "=", "StackEncoder", "(", "128", ",", "256", ",", "(", "3", ",", "5", ")", ",", "(", "1", ",", "2", ")", ",", "is_bn", ")", "# 16", "\n", "self", ".", "h_down4_2", "=", "StackEncoder", "(", "128", ",", "256", ",", "(", "1", ",", "3", ")", ",", "(", "0", ",", "1", ")", ",", "is_bn", ")", "\n", "# self.h_down4_skip = ConvBnRelu2d(64, 64, kernel_size=3, padding=1, stride=1, is_bn=is_bn)", "\n", "self", ".", "h_down4_3", "=", "ConvBnRelu2d", "(", "128", ",", "256", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "is_relu", "=", "False", ")", "\n", "#self.h_down4_4 = ConvBnRelu2d(256 * 3, 256, kernel_size=1, padding=0, stride=1, is_bn=is_bn, is_relu=False)", "\n", "\n", "self", ".", "h_down5_1", "=", "StackEncoder", "(", "256", ",", "512", ",", "(", "3", ",", "5", ")", ",", "(", "1", ",", "2", ")", ",", "is_bn", ")", "# 8", "\n", "self", ".", "h_down5_2", "=", "StackEncoder", "(", "256", ",", "512", ",", "(", "1", ",", "3", ")", ",", "(", "0", ",", "1", ")", ",", "is_bn", ")", "\n", "# self.h_down5_skip = ConvBnRelu2d(128, 128, kernel_size=3, padding=1, stride=1, is_bn=is_bn)", "\n", "self", ".", "h_down5_3", "=", "ConvBnRelu2d", "(", "256", ",", "512", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ",", "\n", "is_relu", "=", "False", ")", "\n", "#self.h_down5_4 = ConvBnRelu2d(512 * 3, 512, kernel_size=1, padding=0, stride=1, is_bn=is_bn, is_relu=False)", "\n", "\n", "# \u4e24\u7f51\u6700\u540e\u4e00\u4e2apooling\u5c42\u62fc\u5728\u4e00\u8d77\u4ee5\u540e\u518d1*1\u5377\u79ef", "\n", "self", ".", "center", "=", "ConvBnRelu2d", "(", "1024", ",", "512", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "is_bn", "=", "is_bn", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 8", "\n", "# h_big_channels,v_big_channels\u662f\u5f53\u524d\u5c42\u7684\u4e0a\u5c42pooling\u4e4b\u524d\u7684\u5377\u79ef\u5c42\u7684channel, x_channels\u662f\u5f53\u524d\u5c42\u7684\uff0c\u4e4b\u548c\u76f8\u5f53\u4e8ein_channel", "\n", "self", ".", "up5", "=", "StackDecoder", "(", "512", ",", "512", ",", "512", ",", "256", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "is_bn", ")", "\n", "self", ".", "up4", "=", "StackDecoder", "(", "256", ",", "256", ",", "256", ",", "128", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "is_bn", ")", "# 16", "\n", "self", ".", "up3", "=", "StackDecoder", "(", "128", ",", "128", ",", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "is_bn", ")", "# 32", "\n", "self", ".", "up2", "=", "StackDecoder", "(", "64", ",", "64", ",", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "is_bn", ")", "# 64", "\n", "self", ".", "up1", "=", "StackDecoder", "(", "32", ",", "32", ",", "32", ",", "16", ",", "kernel_size", "=", "3", ",", "is_bn", "=", "is_bn", ")", "# 128", "\n", "# self.up1 = StackDecoder(16, 16, 16, 8, kernel_size=3, is_bn=is_bn)  # 256", "\n", "\n", "self", ".", "classify", "=", "nn", ".", "Conv2d", "(", "16", ",", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Qianyu1226_Crosslink-Net.modules.CrossWnet.UNet.forward": [[100, 220], ["CrossWnet.UNet.v_down1_1", "CrossWnet.UNet.v_down1_2", "CrossWnet.UNet.v_down1_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down1_3", "CrossWnet.UNet.v_down1_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.v_down2_1", "CrossWnet.UNet.v_down2_2", "CrossWnet.UNet.v_down2_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down2_3", "CrossWnet.UNet.v_down2_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.v_down3_1", "CrossWnet.UNet.v_down3_2", "CrossWnet.UNet.v_down3_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down3_3", "CrossWnet.UNet.v_down3_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.for_atten3_1", "CrossWnet.UNet.for_atten3_2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "CrossWnet.UNet.v_down4_1", "CrossWnet.UNet.v_down4_2", "CrossWnet.UNet.v_down4_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down4_3", "CrossWnet.UNet.v_down4_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.v_down5_1", "CrossWnet.UNet.v_down5_2", "CrossWnet.UNet.v_down5_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down5_3", "CrossWnet.UNet.v_down5_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.h_down1_1", "CrossWnet.UNet.h_down1_2", "CrossWnet.UNet.h_down1_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down1_3", "CrossWnet.UNet.v_down1_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.h_down2_1", "CrossWnet.UNet.h_down2_2", "CrossWnet.UNet.h_down2_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down2_3", "CrossWnet.UNet.v_down2_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.h_down3_1", "CrossWnet.UNet.h_down3_2", "CrossWnet.UNet.h_down3_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down3_3", "CrossWnet.UNet.v_down3_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.for_atten3_1", "CrossWnet.UNet.for_atten3_2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "CrossWnet.UNet.h_down4_1", "CrossWnet.UNet.h_down4_2", "CrossWnet.UNet.h_down4_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down4_3", "CrossWnet.UNet.v_down4_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "CrossWnet.UNet.h_down5_1", "CrossWnet.UNet.h_down5_2", "CrossWnet.UNet.h_down5_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.v_down5_3", "CrossWnet.UNet.v_down5_res", "torch.relu", "torch.relu", "torch.relu", "CrossWnet.UNet.maxpool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CrossWnet.UNet.center", "CrossWnet.UNet.up5", "CrossWnet.UNet.up4", "CrossWnet.UNet.up3", "CrossWnet.UNet.up2", "CrossWnet.UNet.up1", "CrossWnet.UNet.classify", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "v_out", "=", "x", "\n", "v_out1_1", "=", "self", ".", "v_down1_1", "(", "v_out", ")", "\n", "v_out1_2", "=", "self", ".", "v_down1_2", "(", "v_out", ")", "\n", "v_out1_3", "=", "self", ".", "v_down1_4", "(", "v_out", ")", "\n", "v_cat", "=", "torch", ".", "cat", "(", "(", "v_out1_1", ",", "v_out1_2", ",", "v_out1_3", ")", ",", "1", ")", "\n", "v_out1", "=", "self", ".", "v_down1_3", "(", "v_cat", ")", "\n", "v_out1_res", "=", "self", ".", "v_down1_res", "(", "v_out", ")", "\n", "v_down1", "=", "F", ".", "relu", "(", "v_out1", "+", "v_out1_res", ",", "inplace", "=", "True", ")", "\n", "v_out", "=", "self", ".", "maxpool", "(", "v_down1", ")", "\n", "\n", "v_out2_1", "=", "self", ".", "v_down2_1", "(", "v_out", ")", "\n", "v_out2_2", "=", "self", ".", "v_down2_2", "(", "v_out", ")", "\n", "v_out2_3", "=", "self", ".", "v_down2_4", "(", "v_out", ")", "\n", "v_cat", "=", "torch", ".", "cat", "(", "(", "v_out2_1", ",", "v_out2_2", ",", "v_out2_3", ")", ",", "1", ")", "\n", "v_out2", "=", "self", ".", "v_down2_3", "(", "v_cat", ")", "\n", "v_out2_res", "=", "self", ".", "v_down2_res", "(", "v_out", ")", "\n", "v_down2", "=", "F", ".", "relu", "(", "v_out2", "+", "v_out2_res", ",", "inplace", "=", "True", ")", "\n", "v_out", "=", "self", ".", "maxpool", "(", "v_down2", ")", "\n", "\n", "v_out3_1", "=", "self", ".", "v_down3_1", "(", "v_out", ")", "\n", "v_out3_2", "=", "self", ".", "v_down3_2", "(", "v_out", ")", "\n", "v_out3_3", "=", "self", ".", "v_down3_4", "(", "v_out", ")", "\n", "v_cat", "=", "torch", ".", "cat", "(", "(", "v_out3_1", ",", "v_out3_2", ",", "v_out3_3", ")", ",", "1", ")", "\n", "v_out3", "=", "self", ".", "v_down3_3", "(", "v_cat", ")", "\n", "v_out3_res", "=", "self", ".", "v_down3_res", "(", "v_out", ")", "\n", "v_down3", "=", "F", ".", "relu", "(", "v_out3", "+", "v_out3_res", ",", "inplace", "=", "True", ")", "\n", "v_out", "=", "self", ".", "maxpool", "(", "v_down3", ")", "\n", "\n", "v_atten3", "=", "self", ".", "for_atten3_1", "(", "v_down3", ")", "\n", "v_atten3", "=", "self", ".", "for_atten3_2", "(", "v_atten3", ")", "\n", "v_atten3", "=", "F", ".", "sigmoid", "(", "v_atten3", ")", "\n", "\n", "v_out4_1", "=", "self", ".", "v_down4_1", "(", "v_out", ")", "\n", "v_out4_2", "=", "self", ".", "v_down4_2", "(", "v_out", ")", "\n", "v_out4_3", "=", "self", ".", "v_down4_4", "(", "v_out", ")", "\n", "v_cat", "=", "torch", ".", "cat", "(", "(", "v_out4_1", ",", "v_out4_2", ",", "v_out4_3", ")", ",", "1", ")", "\n", "v_out4", "=", "self", ".", "v_down4_3", "(", "v_cat", ")", "\n", "v_out4_res", "=", "self", ".", "v_down4_res", "(", "v_out", ")", "\n", "v_down4", "=", "F", ".", "relu", "(", "v_out4", "+", "v_out4_res", ",", "inplace", "=", "True", ")", "\n", "v_out", "=", "self", ".", "maxpool", "(", "v_down4", ")", "\n", "\n", "v_out5_1", "=", "self", ".", "v_down5_1", "(", "v_out", ")", "\n", "v_out5_2", "=", "self", ".", "v_down5_2", "(", "v_out", ")", "\n", "v_out5_3", "=", "self", ".", "v_down5_4", "(", "v_out", ")", "\n", "v_cat", "=", "torch", ".", "cat", "(", "(", "v_out5_1", ",", "v_out5_2", ",", "v_out5_3", ")", ",", "1", ")", "\n", "v_out5", "=", "self", ".", "v_down5_3", "(", "v_cat", ")", "\n", "v_out5_res", "=", "self", ".", "v_down5_res", "(", "v_out", ")", "\n", "v_down5", "=", "F", ".", "relu", "(", "v_out5", "+", "v_out5_res", ",", "inplace", "=", "True", ")", "\n", "v_out", "=", "self", ".", "maxpool", "(", "v_down5", ")", "\n", "\n", "h_out", "=", "x", "\n", "h_out1_1", "=", "self", ".", "h_down1_1", "(", "h_out", ")", "# 32", "\n", "h_out1_2", "=", "self", ".", "h_down1_2", "(", "h_out", ")", "# 32", "\n", "h_out1_3", "=", "self", ".", "h_down1_3", "(", "h_out", ")", "\n", "# h_out1_3 = self.h_down1_skip(h_out)  #16\uff0c\u8981\u52a0\u5230up1\u6700\u540e\u4e00\u5c42", "\n", "h_cat", "=", "torch", ".", "cat", "(", "(", "h_out1_1", ",", "h_out1_2", ",", "h_out1_3", ")", ",", "1", ")", "# 64+16", "\n", "h_out1", "=", "self", ".", "v_down1_3", "(", "h_cat", ")", "\n", "h_out1_res", "=", "self", ".", "v_down1_res", "(", "h_out", ")", "\n", "h_down1", "=", "F", ".", "relu", "(", "h_out1", "+", "h_out1_res", ",", "inplace", "=", "True", ")", "\n", "h_out", "=", "self", ".", "maxpool", "(", "h_down1", ")", "\n", "\n", "h_out2_1", "=", "self", ".", "h_down2_1", "(", "h_out", ")", "# 32, 64", "\n", "h_out2_2", "=", "self", ".", "h_down2_2", "(", "h_out", ")", "# 32, 64", "\n", "# h_out2_3 = self.h_down2_skip(h_out)#32,32", "\n", "h_out2_3", "=", "self", ".", "h_down2_3", "(", "h_out", ")", "\n", "h_cat", "=", "torch", ".", "cat", "(", "(", "h_out2_1", ",", "h_out2_2", ",", "h_out2_3", ")", ",", "1", ")", "# 64 + 64+32", "\n", "h_out2", "=", "self", ".", "v_down2_3", "(", "h_cat", ")", "# 64 + 64+32, 32", "\n", "h_out2_res", "=", "self", ".", "v_down2_res", "(", "h_out", ")", "# 32, 64", "\n", "h_down2", "=", "F", ".", "relu", "(", "h_out2", "+", "h_out2_res", ",", "inplace", "=", "True", ")", "\n", "h_out", "=", "self", ".", "maxpool", "(", "h_down2", ")", "\n", "\n", "h_out3_1", "=", "self", ".", "h_down3_1", "(", "h_out", ")", "\n", "h_out3_2", "=", "self", ".", "h_down3_2", "(", "h_out", ")", "\n", "h_out3_3", "=", "self", ".", "h_down3_3", "(", "h_out", ")", "\n", "# h_out3_3 = self.h_down3_skip(h_out)", "\n", "h_cat", "=", "torch", ".", "cat", "(", "(", "h_out3_1", ",", "h_out3_2", ",", "h_out3_3", ")", ",", "1", ")", "\n", "h_out3", "=", "self", ".", "v_down3_3", "(", "h_cat", ")", "\n", "h_out3_res", "=", "self", ".", "v_down3_res", "(", "h_out", ")", "\n", "h_down3", "=", "F", ".", "relu", "(", "h_out3", "+", "h_out3_res", ",", "inplace", "=", "True", ")", "\n", "h_out", "=", "self", ".", "maxpool", "(", "h_down3", ")", "\n", "\n", "h_atten3", "=", "self", ".", "for_atten3_1", "(", "h_down3", ")", "\n", "h_atten3", "=", "self", ".", "for_atten3_2", "(", "h_atten3", ")", "\n", "h_atten3", "=", "F", ".", "sigmoid", "(", "h_atten3", ")", "\n", "\n", "h_out4_1", "=", "self", ".", "h_down4_1", "(", "h_out", ")", "\n", "h_out4_2", "=", "self", ".", "h_down4_2", "(", "h_out", ")", "\n", "h_out4_3", "=", "self", ".", "h_down4_3", "(", "h_out", ")", "\n", "# h_out4_3 = self.h_down4_skip(h_out)", "\n", "h_cat", "=", "torch", ".", "cat", "(", "(", "h_out4_1", ",", "h_out4_2", ",", "h_out4_3", ")", ",", "1", ")", "\n", "h_out4", "=", "self", ".", "v_down4_3", "(", "h_cat", ")", "\n", "h_out4_res", "=", "self", ".", "v_down4_res", "(", "h_out", ")", "\n", "h_down4", "=", "F", ".", "relu", "(", "h_out4", "+", "h_out4_res", ",", "inplace", "=", "True", ")", "\n", "h_out", "=", "self", ".", "maxpool", "(", "h_down4", ")", "\n", "\n", "h_out5_1", "=", "self", ".", "h_down5_1", "(", "h_out", ")", "\n", "h_out5_2", "=", "self", ".", "h_down5_2", "(", "h_out", ")", "\n", "h_out5_3", "=", "self", ".", "h_down5_3", "(", "h_out", ")", "\n", "# h_out5_3 = self.h_down5_skip(h_out)", "\n", "h_cat", "=", "torch", ".", "cat", "(", "(", "h_out5_1", ",", "h_out5_2", ",", "h_out5_3", ")", ",", "1", ")", "\n", "h_out5", "=", "self", ".", "v_down5_3", "(", "h_cat", ")", "\n", "h_out5_res", "=", "self", ".", "v_down5_res", "(", "h_out", ")", "\n", "h_down5", "=", "F", ".", "relu", "(", "h_out5", "+", "h_out5_res", ",", "inplace", "=", "True", ")", "\n", "h_out", "=", "self", ".", "maxpool", "(", "h_down5", ")", "\n", "\n", "# \u4e24\u4e2a\u5206\u652f\u8fde\u5728\u4e00\u8d77", "\n", "out", "=", "torch", ".", "cat", "(", "(", "v_out", ",", "h_out", ")", ",", "1", ")", "# \u6a2a\u7740\u62fc\u5728\u4e00\u8d77", "\n", "out", "=", "self", ".", "center", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "up5", "(", "v_down5", ",", "h_down5", ",", "out", ")", "# \u8fd9\u4e2aout\u662fcenter\u7684\u8f93\u51fa\uff0cdown5\u662f\u5b83\u7684\u4e0a\u4e00\u5c42pooling\u4e4b\u524d\u7684\u5377\u79ef\u7ed3\u679c", "\n", "out", "=", "self", ".", "up4", "(", "v_down4", ",", "h_down4", ",", "out", ")", "\n", "out", "=", "self", ".", "up3", "(", "v_down3", ",", "h_down3", ",", "out", ")", "\n", "out", "=", "self", ".", "up2", "(", "v_down2", ",", "h_down2", ",", "out", ")", "\n", "out", "=", "self", ".", "up1", "(", "v_down1", ",", "h_down1", ",", "out", ")", "\n", "# out = self.up1(v_cat, h_cat, out)", "\n", "\n", "out", "=", "self", ".", "classify", "(", "out", ")", "\n", "out", "=", "torch", ".", "squeeze", "(", "out", ",", "dim", "=", "1", ")", "\n", "return", "out", ",", "v_atten3", ",", "h_atten3", "#\u7528\u6765\u8ba1\u7b97loss", "", "", "", ""]]}