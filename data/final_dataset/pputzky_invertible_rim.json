{"home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.irim_denoising.grad_fun": [[38, 67], ["x_est.requires_grad_", "torch.enable_grad", "x_est.requires_grad_", "torch.sum", "torch.autograd.grad"], "function", ["None"], ["def", "grad_fun", "(", "x_est", ",", "y", ")", ":", "\n", "    ", "\"\"\"\n    Defines the gradient function for a denoising problem with White Noise.\n\n    This function demonstrates the use of  Pytorch's autograd to calculate the gradient.\n    In this example, the function is equivalent to\n\n    def grad_fun(x_est,y):\n        return x_est - y\n\n    :param x_est: Tensor, model estimate of x\n    :param y: Tensor, noisy measurements\n    :return: grad_x\n    \"\"\"", "\n", "# True during training, False during testing", "\n", "does_require_grad", "=", "x_est", ".", "requires_grad", "\n", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "# Necessary for using autograd", "\n", "        ", "x_est", ".", "requires_grad_", "(", "True", ")", "\n", "# Assuming uniform white noise, in the denoising case matrix A is the identity", "\n", "error", "=", "torch", ".", "sum", "(", "(", "y", "-", "x_est", ")", "**", "2", ")", "\n", "# We retain the graph during training only", "\n", "grad_x", "=", "torch", ".", "autograd", ".", "grad", "(", "error", ",", "inputs", "=", "x_est", ",", "retain_graph", "=", "does_require_grad", ",", "\n", "create_graph", "=", "does_require_grad", ")", "[", "0", "]", "\n", "# Set requires_grad back to it's original state", "\n", "", "x_est", ".", "requires_grad_", "(", "does_require_grad", ")", "\n", "\n", "return", "grad_x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.custom_invertible_modules.ListReverse._forward": [[19, 26], ["isinstance"], "methods", ["None"], ["def", "_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        :param x: List of tensors\n        :return: Reversed list of tensors\n        \"\"\"", "\n", "assert", "isinstance", "(", "x", ",", "list", ")", "\n", "return", "x", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.custom_invertible_modules.ListReverse._reverse": [[27, 34], ["isinstance"], "methods", ["None"], ["", "def", "_reverse", "(", "self", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        :param y: List of tensors\n        :return: Reversed list of tensors\n        \"\"\"", "\n", "assert", "isinstance", "(", "y", ",", "list", ")", "\n", "return", "y", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.custom_invertible_modules.InvertibleSequential.__init__": [[41, 45], ["all", "super().__init__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "# Make sure that all modules in the sequence are invertible", "\n", "        ", "assert", "all", "(", "[", "isinstance", "(", "module", ",", "InvertibleModule", ")", "for", "module", "in", "args", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.custom_invertible_modules.InvertibleSequential.reverse": [[46, 50], ["reversed", "custom_invertible_modules.InvertibleSequential._modules.values", "module.reverse"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "reverse", "(", "self", ",", "input", ")", ":", "\n", "        ", "for", "module", "in", "reversed", "(", "self", ".", "_modules", ".", "values", "(", ")", ")", ":", "\n", "            ", "input", "=", "module", ".", "reverse", "(", "input", ")", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.PixelUnshuffle.__init__": [[58, 61], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "downscale_factor", ")", ":", "\n", "        ", "super", "(", "PixelUnshuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downscale_factor", "=", "downscale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.PixelUnshuffle.forward": [[62, 64], ["torch_utils.pixel_unshuffle"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.pixel_unshuffle"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "pixel_unshuffle", "(", "x", ",", "self", ".", "downscale_factor", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.determine_conv_class": [[5, 23], ["NotImplementedError"], "function", ["None"], ["def", "determine_conv_class", "(", "n_dim", ",", "transposed", "=", "False", ")", ":", "\n", "    ", "if", "n_dim", "==", "1", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "Conv1d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "ConvTranspose1d", "\n", "", "", "elif", "n_dim", "==", "2", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "Conv2d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "ConvTranspose2d", "\n", "", "", "elif", "n_dim", "==", "3", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "Conv3d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "ConvTranspose3d", "\n", "", "", "else", ":", "\n", "        ", "NotImplementedError", "(", "\"No convolution of this dimensionality implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.determine_conv_functional": [[25, 43], ["NotImplementedError"], "function", ["None"], ["", "", "def", "determine_conv_functional", "(", "n_dim", ",", "transposed", "=", "False", ")", ":", "\n", "    ", "if", "n_dim", "==", "1", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv1d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv_transposed1d", "\n", "", "", "elif", "n_dim", "==", "2", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv2d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv_transposed2d", "\n", "", "", "elif", "n_dim", "==", "3", ":", "\n", "        ", "if", "not", "transposed", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv3d", "\n", "", "else", ":", "\n", "            ", "return", "nn", ".", "functional", ".", "conv_transposed3d", "\n", "", "", "else", ":", "\n", "        ", "NotImplementedError", "(", "\"No convolution of this dimensionality implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.pixel_unshuffle": [[45, 55], ["x.size", "x.contiguous().view", "x.contiguous().view.permute().contiguous().view", "x.contiguous", "x.contiguous().view.permute().contiguous", "x.contiguous().view.permute"], "function", ["None"], ["", "", "def", "pixel_unshuffle", "(", "x", ",", "downscale_factor", ")", ":", "\n", "    ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "r", "=", "downscale_factor", "\n", "out_channel", "=", "c", "*", "(", "r", "**", "2", ")", "\n", "out_h", "=", "h", "//", "r", "\n", "out_w", "=", "w", "//", "r", "\n", "x_view", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "c", ",", "out_h", ",", "r", ",", "out_w", ",", "r", ")", "\n", "x_prime", "=", "x_view", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "5", ",", "2", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "out_channel", ",", "out_h", ",", "out_w", ")", "\n", "\n", "return", "x_prime", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.test_invertible_layers.test_householder1x1": [[11, 29], ["torch.manual_seed", "torch.randn", "torch.randn", "irim.test.utils.create_model_and_i2l_copy", "irim.test.utils.forward_reverse", "irim.test.utils.model_gradients", "irim.test.utils.model_gradients", "torch.testing.assert_allclose", "zip", "zip", "torch.testing.assert_allclose", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients"], ["", "def", "test_householder1x1", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "x", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "y", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "\n", "model", ",", "model_i2l", "=", "create_model_and_i2l_copy", "(", "Housholder1x1", ",", "64", ",", "32", ",", "2", ")", "\n", "\n", "x_est", "=", "forward_reverse", "(", "model", ",", "x", ")", "\n", "gradients_forward", ",", "gradients_reverse", "=", "model_gradients", "(", "model", ",", "x", ",", "y", ")", "\n", "gradients_forward_i2l", ",", "gradients_reverse_i2l", "=", "model_gradients", "(", "model_i2l", ",", "x", ",", "y", ")", "\n", "\n", "assert_allclose", "(", "x_est", ",", "x", ")", "\n", "\n", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_forward_i2l", ",", "gradients_forward", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_reverse_i2l", ",", "gradients_reverse", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.test_invertible_layers.test_revnetlayer": [[31, 49], ["torch.manual_seed", "torch.randn", "torch.randn", "irim.test.utils.create_model_and_i2l_copy", "irim.test.utils.forward_reverse", "irim.test.utils.model_gradients", "irim.test.utils.model_gradients", "torch.testing.assert_allclose", "zip", "zip", "torch.testing.assert_allclose", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients"], ["", "", "def", "test_revnetlayer", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "x", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "y", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "\n", "model", ",", "model_i2l", "=", "create_model_and_i2l_copy", "(", "RevNetLayer", ",", "64", ",", "32", ",", "conv_nd", "=", "2", ")", "\n", "\n", "x_est", "=", "forward_reverse", "(", "model", ",", "x", ")", "\n", "gradients_forward", ",", "gradients_reverse", "=", "model_gradients", "(", "model", ",", "x", ",", "y", ")", "\n", "gradients_forward_i2l", ",", "gradients_reverse_i2l", "=", "model_gradients", "(", "model_i2l", ",", "x", ",", "y", ")", "\n", "\n", "assert_allclose", "(", "x_est", ",", "x", ")", "\n", "\n", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_forward_i2l", ",", "gradients_forward", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_reverse_i2l", ",", "gradients_reverse", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.test_invertible_unet.test_invertibleunet": [[11, 30], ["torch.manual_seed", "torch.randn", "torch.randn", "irim.test.utils.create_model_and_i2l_copy", "irim.test.utils.forward_reverse", "irim.test.utils.model_gradients", "irim.test.utils.model_gradients", "torch.testing.assert_allclose", "zip", "zip", "torch.testing.assert_allclose", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients"], ["", "def", "test_invertibleunet", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "x", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "y", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "\n", "depth", "=", "10", "\n", "model", ",", "model_i2l", "=", "create_model_and_i2l_copy", "(", "InvertibleUnet", ",", "[", "64", ",", "32", ",", "16", "]", "*", "depth", ",", "[", "32", ",", "8", ",", "24", "]", "*", "depth", ",", "[", "1", ",", "2", ",", "4", "]", "*", "depth", ")", "\n", "\n", "x_est", "=", "forward_reverse", "(", "model", ",", "x", ")", "\n", "gradients_forward", ",", "gradients_reverse", "=", "model_gradients", "(", "model", ",", "x", ",", "y", ")", "\n", "gradients_forward_i2l", ",", "gradients_reverse_i2l", "=", "model_gradients", "(", "model_i2l", ",", "x", ",", "y", ")", "\n", "\n", "assert_allclose", "(", "x_est", ",", "x", ")", "\n", "\n", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_forward_i2l", ",", "gradients_forward", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_reverse_i2l", ",", "gradients_reverse", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse": [[5, 12], ["isinstance", "torch.no_grad", "model.forward", "model.reverse"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["def", "forward_reverse", "(", "model", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "isinstance", "(", "model", ",", "InvertibleModule", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "y", "=", "model", ".", "forward", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "x_est", "=", "model", ".", "reverse", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "x_est", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients": [[14, 32], ["isinstance", "torch.enable_grad", "x.detach_().requires_grad_", "y.detach_", "model.forward", "torch.nn.functional.mse_loss", "torch.autograd.grad", "torch.enable_grad", "y.detach_().requires_grad_", "x.detach_", "model.reverse", "torch.nn.functional.mse_loss", "torch.autograd.grad", "x.detach_", "list", "y.detach_", "list", "model.parameters", "model.parameters"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "model_gradients", "(", "model", ",", "x", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "isinstance", "(", "model", ",", "InvertibleModule", ")", "\n", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "x", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", ".", "detach_", "(", ")", "\n", "y_est", "=", "model", ".", "forward", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "y_est", ",", "y", ")", "\n", "grad_forward", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "[", "x", "]", "+", "list", "(", "model", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "y", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "x", ".", "detach_", "(", ")", "\n", "x_est", "=", "model", ".", "reverse", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "x_est", ",", "x", ")", "\n", "grad_reverse", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "[", "y", "]", "+", "list", "(", "model", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "", "return", "grad_forward", ",", "grad_reverse", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy": [[34, 42], ["module_class", "isinstance", "module_class", "irim.core.invert_to_learn.MemoryFreeInvertibleModule.load_state_dict", "irim.core.invert_to_learn.MemoryFreeInvertibleModule", "module_class.state_dict"], "function", ["None"], ["", "def", "create_model_and_i2l_copy", "(", "module_class", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "module_class", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "assert", "isinstance", "(", "model", ",", "InvertibleModule", ")", "\n", "model_i2l", "=", "module_class", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "model_i2l", ".", "load_state_dict", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "model_i2l", "=", "MemoryFreeInvertibleModule", "(", "model_i2l", ")", "\n", "\n", "return", "model", ",", "model_i2l", "\n", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.test_irim.test_invertiblegradupdate": [[12, 35], ["torch.manual_seed", "torch.randn", "torch.randn", "torch.randn", "irim.test.utils.create_model_and_i2l_copy", "irim.test.utils.forward_reverse", "irim.test.utils.model_gradients", "irim.test.utils.model_gradients", "torch.testing.assert_allclose", "zip", "zip", "torch.randn.size", "torch.testing.assert_allclose", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients"], ["", "def", "test_invertiblegradupdate", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "\n", "def", "grad_fun", "(", "x", ",", "z", ")", ":", "\n", "        ", "return", "x", "-", "z", "\n", "\n", "", "x", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "y", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "z", "=", "torch", ".", "randn", "(", "10", ",", "16", ",", "28", ",", "28", ")", "\n", "\n", "model", ",", "model_i2l", "=", "create_model_and_i2l_copy", "(", "InvertibleGradUpdate", ",", "grad_fun", ",", "z", ".", "size", "(", "1", ")", ")", "\n", "\n", "x_est", "=", "forward_reverse", "(", "model", ",", "x", ",", "z", ")", "\n", "gradients_forward", ",", "gradients_reverse", "=", "model_gradients", "(", "model", ",", "x", ",", "y", ",", "z", ")", "\n", "gradients_forward_i2l", ",", "gradients_reverse_i2l", "=", "model_gradients", "(", "model_i2l", ",", "x", ",", "y", ",", "z", ")", "\n", "\n", "assert_allclose", "(", "x_est", ",", "x", ")", "\n", "\n", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_forward_i2l", ",", "gradients_forward", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_reverse_i2l", ",", "gradients_reverse", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.test_irim.test_irim": [[37, 83], ["torch.manual_seed", "torch.randn", "torch.randn", "torch.randn", "irim.test.utils.create_model_and_i2l_copy", "irim.test.utils.forward_reverse", "irim.test.utils.model_gradients", "irim.test.utils.model_gradients", "torch.testing.assert_allclose", "zip", "zip", "torch.testing.assert_allclose", "torch.nn.ModuleList", "irim.IRIM", "torch.testing.assert_allclose", "torch.testing.assert_allclose", "torch.enable_grad", "torch.randn.detach_().requires_grad_", "irim.IRIM.forward", "torch.nn.functional.mse_loss", "torch.enable_grad", "torch.randn.detach_().requires_grad_", "torch.randn.detach_().requires_grad_", "model_i2l.forward", "torch.nn.functional.mse_loss", "torch.randn.norm", "torch.autograd.grad", "torch.autograd.grad", "torch.randn.size", "torch.randn.detach_", "torch.randn.detach_", "torch.randn.detach_", "irim.InvertibleUnet"], "function", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.create_model_and_i2l_copy", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.forward_reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.test.utils.model_gradients", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "", "def", "test_irim", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "\n", "def", "grad_fun", "(", "x", ",", "z", ")", ":", "\n", "        ", "grad", "=", "(", "x", "-", "z", ")", "\n", "grad", "=", "grad", "/", "x", ".", "norm", "(", "2", ",", "dim", "=", "(", "-", "2", ",", "-", "1", ")", ",", "keepdim", "=", "True", ")", "\n", "return", "grad", "\n", "\n", "", "x", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "y", "=", "torch", ".", "randn", "(", "10", ",", "64", ",", "28", ",", "28", ")", "\n", "z", "=", "torch", ".", "randn", "(", "10", ",", "16", ",", "28", ",", "28", ")", "\n", "\n", "def", "get_model", "(", ")", ":", "\n", "        ", "unets", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "InvertibleUnet", "(", "[", "64", ",", "32", ",", "16", "]", ",", "[", "32", ",", "8", ",", "24", "]", ",", "[", "1", ",", "2", ",", "4", "]", ")", "]", "*", "10", ")", "\n", "model", "=", "IRIM", "(", "unets", ",", "grad_fun", ",", "n_channels", "=", "z", ".", "size", "(", "1", ")", ")", "\n", "return", "model", "\n", "\n", "", "model", ",", "model_i2l", "=", "create_model_and_i2l_copy", "(", "get_model", ")", "\n", "\n", "x_est", "=", "forward_reverse", "(", "model", ",", "x", ",", "z", ")", "\n", "gradients_forward", ",", "gradients_reverse", "=", "model_gradients", "(", "model", ",", "x", ",", "y", ",", "z", ")", "\n", "gradients_forward_i2l", ",", "gradients_reverse_i2l", "=", "model_gradients", "(", "model_i2l", ",", "x", ",", "y", ",", "z", ")", "\n", "\n", "assert_allclose", "(", "x_est", ",", "x", ",", "rtol", "=", "1e-3", ",", "atol", "=", "1e-4", ")", "\n", "\n", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_forward_i2l", ",", "gradients_forward", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "for", "g_est", ",", "g", "in", "zip", "(", "gradients_reverse_i2l", ",", "gradients_reverse", ")", ":", "\n", "        ", "assert_allclose", "(", "g_est", ",", "g", ")", "\n", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "z", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y_est", "=", "model", ".", "forward", "(", "x", ",", "z", ")", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "y_est", ",", "y", ")", "\n", "grad_z", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "z", ")", "[", "0", "]", "\n", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "z", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "x", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "y_est", "=", "model_i2l", ".", "forward", "(", "x", ",", "z", ")", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "y_est", ",", "y", ")", "\n", "grad_z_i2l", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "z", ")", "[", "0", "]", "\n", "\n", "", "assert_allclose", "(", "grad_z", ",", "grad_z_i2l", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_unet.InvertibleUnet.__init__": [[8, 17], ["irim.core.invert_to_learn.InvertibleModule.__init__", "invertible_unet.InvertibleUnet.make_layers"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_unet.InvertibleUnet.make_layers"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_hidden", ",", "dilations", ",", "\n", "reversible_block", "=", "RevNetLayer", ",", "conv_nd", "=", "2", ",", "n_householder", "=", "3", ")", ":", "\n", "        ", "super", "(", "InvertibleUnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_ch", "=", "n_channels", "\n", "self", ".", "n_hidden", "=", "n_hidden", "\n", "self", ".", "dilations", "=", "dilations", "\n", "self", ".", "conv_nd", "=", "conv_nd", "\n", "self", ".", "n_householder", "=", "n_householder", "\n", "self", ".", "layers", ",", "self", ".", "embeddings", "=", "self", ".", "make_layers", "(", "reversible_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_unet.InvertibleUnet.make_layers": [[18, 30], ["torch.ModuleList", "torch.ModuleList", "zip", "reversible_block", "torch.ModuleList.append", "irim.core.invertible_layers.Housholder1x1", "torch.ModuleList.append"], "methods", ["None"], ["", "def", "make_layers", "(", "self", ",", "reversible_block", ")", ":", "\n", "        ", "block_list", "=", "nn", ".", "ModuleList", "(", ")", "\n", "embeddings_list", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "in_ch", ",", "n_hidden", ",", "dilation", "in", "zip", "(", "self", ".", "in_ch", ",", "self", ".", "n_hidden", ",", "self", ".", "dilations", ")", ":", "\n", "            ", "layer", "=", "reversible_block", "(", "n_channels", "=", "in_ch", ",", "n_hidden", "=", "n_hidden", ",", "\n", "dilation", "=", "dilation", ",", "conv_nd", "=", "self", ".", "conv_nd", ")", "\n", "block_list", ".", "append", "(", "layer", ")", "\n", "embedding", "=", "Housholder1x1", "(", "self", ".", "in_ch", "[", "0", "]", ",", "conv_nd", "=", "self", ".", "conv_nd", ",", "n_projections", "=", "self", ".", "n_householder", ")", "\n", "embeddings_list", ".", "append", "(", "embedding", ")", "\n", "\n", "", "return", "block_list", ",", "embeddings_list", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_unet.InvertibleUnet.forward": [[31, 38], ["zip", "emb.forward", "layer.forward", "emb.reverse"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", ",", "emb", "in", "zip", "(", "self", ".", "layers", ",", "self", ".", "embeddings", ")", ":", "\n", "            ", "x", "=", "emb", ".", "forward", "(", "x", ")", "\n", "x", "=", "layer", ".", "forward", "(", "x", ")", "\n", "x", "=", "emb", ".", "reverse", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_unet.InvertibleUnet.reverse": [[39, 46], ["zip", "reversed", "reversed", "emb.forward", "layer.reverse", "emb.reverse"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "reverse", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", ",", "emb", "in", "zip", "(", "reversed", "(", "self", ".", "layers", ")", ",", "reversed", "(", "self", ".", "embeddings", ")", ")", ":", "\n", "            ", "x", "=", "emb", ".", "forward", "(", "x", ")", "\n", "x", "=", "layer", ".", "reverse", "(", "x", ")", "\n", "x", "=", "emb", ".", "reverse", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.IRIM.__init__": [[6, 10], ["irim.core.invert_to_learn.InvertibleModule.__init__", "irim.InvertibleGradUpdate"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnn", ",", "grad_fun", ",", "n_channels", "=", "1", ")", ":", "\n", "        ", "super", "(", "IRIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rnn", "=", "rnn", "\n", "self", ".", "grad_fun", "=", "InvertibleGradUpdate", "(", "grad_fun", ",", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.IRIM.forward": [[11, 19], ["irim.IRIM.grad_fun.forward", "range", "len", "irim.IRIM.rnn[].forward", "irim.IRIM.grad_fun.forward"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "data", "=", "None", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "grad_fun", ".", "forward", "(", "x", ",", "data", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "rnn", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "rnn", "[", "i", "]", ".", "forward", "(", "x", ")", "\n", "x", "=", "self", ".", "grad_fun", ".", "forward", "(", "x", ",", "data", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.IRIM.reverse": [[20, 28], ["irim.IRIM.grad_fun.reverse", "range", "len", "irim.IRIM.rnn[].reverse", "irim.IRIM.grad_fun.reverse"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "reverse", "(", "self", ",", "x", ",", "data", "=", "None", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "grad_fun", ".", "reverse", "(", "x", ",", "data", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "rnn", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "rnn", "[", "-", "i", "]", ".", "reverse", "(", "x", ")", "\n", "x", "=", "self", ".", "grad_fun", ".", "reverse", "(", "x", ",", "data", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.InvertibleGradUpdate.__init__": [[31, 35], ["irim.core.invert_to_learn.InvertibleLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "grad_fun", ",", "n_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "grad_fun", "=", "grad_fun", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.InvertibleGradUpdate._forward": [[36, 43], ["irim.InvertibleGradUpdate.grad_fun", "torch.cat", "irim.InvertibleGradUpdate.size", "torch.cat.size", "irim.InvertibleGradUpdate.size", "irim.InvertibleGradUpdate.size"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.irim_denoising.grad_fun"], ["", "def", "_forward", "(", "self", ",", "x", ",", "data", ")", ":", "\n", "        ", "grad", "=", "self", ".", "grad_fun", "(", "x", "[", ":", ",", ":", "self", ".", "n_channels", "]", ",", "data", ")", "\n", "assert", "grad", ".", "size", "(", "1", ")", "<=", "x", ".", "size", "(", "1", ")", "-", "self", ".", "n_channels", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", "[", ":", ",", ":", "self", ".", "n_channels", "]", ",", "\n", "x", "[", ":", ",", "self", ".", "n_channels", ":", "self", ".", "n_channels", "+", "grad", ".", "size", "(", "1", ")", "]", "+", "grad", ",", "\n", "x", "[", ":", ",", "self", ".", "n_channels", "+", "grad", ".", "size", "(", "1", ")", ":", "]", ")", ",", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.InvertibleGradUpdate._reverse": [[44, 52], ["irim.InvertibleGradUpdate.grad_fun", "torch.cat", "irim.InvertibleGradUpdate.size", "torch.cat.size", "irim.InvertibleGradUpdate.size", "irim.InvertibleGradUpdate.size"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.irim_denoising.grad_fun"], ["", "def", "_reverse", "(", "self", ",", "y", ",", "data", ")", ":", "\n", "        ", "grad", "=", "self", ".", "grad_fun", "(", "y", "[", ":", ",", ":", "self", ".", "n_channels", "]", ",", "data", ")", "\n", "assert", "grad", ".", "size", "(", "1", ")", "<=", "y", ".", "size", "(", "1", ")", "-", "self", ".", "n_channels", "\n", "y", "=", "torch", ".", "cat", "(", "(", "y", "[", ":", ",", ":", "self", ".", "n_channels", "]", ",", "\n", "y", "[", ":", ",", "self", ".", "n_channels", ":", "self", ".", "n_channels", "+", "grad", ".", "size", "(", "1", ")", "]", "-", "grad", ",", "\n", "y", "[", ":", ",", "self", ".", "n_channels", "+", "grad", ".", "size", "(", "1", ")", ":", "]", ")", ",", "1", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.irim.InvertibleGradUpdate.gradfun": [[53, 69], ["torch.enable_grad", "forward_fun.detach().requires_grad_", "forward_fun", "torch.autograd.grad", "x.detach().requires_grad_.detach().requires_grad_.detach().requires_grad_", "forward_fun", "torch.autograd.grad", "forward_fun.detach", "x.detach().requires_grad_.detach().requires_grad_.detach"], "methods", ["None"], ["", "def", "gradfun", "(", "self", ",", "forward_fun", ",", "reverse_fun", ",", "x", "=", "None", ",", "y", "=", "None", ",", "grad_outputs", "=", "None", ",", "parameters", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "if", "x", "is", "None", "and", "y", "is", "not", "None", ":", "\n", "                ", "y", "=", "y", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "x", "=", "forward_fun", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "x", ",", "[", "y", "]", "+", "parameters", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "x", "=", "2", "*", "y", "-", "x", "\n", "", "elif", "x", "is", "not", "None", ":", "\n", "                ", "x", "=", "x", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", "=", "forward_fun", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "y", ",", "[", "x", "]", "+", "parameters", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "\n", "", "", "grad_input", "=", "grads", "[", "0", "]", "\n", "param_grads", "=", "grads", "[", "1", ":", "]", "\n", "\n", "return", "x", ",", "grad_input", ",", "param_grads", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertToLearnFunction.forward": [[10, 42], ["any", "isinstance", "list", "torch.no_grad", "forward_fun", "list", "tuple", "itertools.chain", "tuple.detach", "ctx.save_for_backward", "ctx.save_for_backward", "y_.detach"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "n_args", ",", "layer", ",", "forward_fun", ",", "reverse_fun", ",", "args", ",", "kwargs", ",", "*", "tensors", ")", ":", "\n", "\n", "        ", "if", "n_args", "==", "1", ":", "\n", "            ", "x", "=", "tensors", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "list", "(", "tensors", "[", ":", "2", "*", "n_args", ":", "2", "]", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "y", "=", "forward_fun", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "if", "any", "(", "[", "x_", ".", "requires_grad", "for", "x_", "in", "tensors", "]", ")", ":", "\n", "            ", "ctx", ".", "n_args", "=", "n_args", "\n", "ctx", ".", "layer", "=", "layer", "\n", "ctx", ".", "forward_fun", "=", "forward_fun", "\n", "ctx", ".", "reverse_fun", "=", "reverse_fun", "\n", "ctx", ".", "args", "=", "args", "\n", "ctx", ".", "kwargs", "=", "kwargs", "\n", "ctx", ".", "tensors", "=", "list", "(", "tensors", "[", "2", "*", "n_args", ":", "]", ")", "\n", "if", "layer", ".", "save_input", ":", "\n", "                ", "if", "n_args", "==", "1", ":", "\n", "                    ", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "", "else", ":", "\n", "                    ", "ctx", ".", "save_for_backward", "(", "*", "x", ")", "\n", "\n", "", "", "", "if", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "            ", "y", "=", "[", "(", "y_", ",", "y_", ".", "detach", "(", ")", ")", "for", "y_", "in", "y", "]", "\n", "y", "=", "tuple", "(", "itertools", ".", "chain", "(", "*", "y", ")", ")", "\n", "", "else", ":", "\n", "            ", "y", "=", "(", "y", ",", "y", ".", "detach", "(", ")", ")", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertToLearnFunction.backward": [[43, 68], ["ctx.layer.gradfun", "tuple", "len", "len", "tuple", "out[].detach", "list", "list", "y_.detach", "list", "list.detach", "x_.detach", "itertools.chain", "zip"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1.gradfun"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "*", "out", ")", ":", "\n", "        ", "if", "len", "(", "out", ")", "==", "2", ":", "\n", "            ", "y", ",", "grad_outputs", "=", "out", "[", "1", "]", ".", "detach", "(", ")", ",", "out", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "y", ",", "grad_outputs", "=", "list", "(", "out", "[", "1", ":", ":", "2", "]", ")", ",", "list", "(", "out", "[", ":", ":", "2", "]", ")", "\n", "y", "=", "[", "y_", ".", "detach", "(", ")", "for", "y_", "in", "y", "]", "\n", "\n", "", "x", "=", "None", "\n", "if", "len", "(", "ctx", ".", "saved_tensors", ")", ">", "0", ":", "\n", "            ", "if", "ctx", ".", "n_args", "==", "1", ":", "\n", "                ", "x", "=", "ctx", ".", "saved_tensors", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "x", "=", "list", "(", "ctx", ".", "saved_tensors", ")", "\n", "\n", "", "", "x", ",", "grad_inputs", ",", "param_grads", "=", "ctx", ".", "layer", ".", "gradfun", "(", "ctx", ".", "forward_fun", ",", "ctx", ".", "reverse_fun", ",", "\n", "x", ",", "y", ",", "grad_outputs", ",", "ctx", ".", "tensors", ",", "*", "ctx", ".", "args", ",", "**", "ctx", ".", "kwargs", ")", "\n", "if", "ctx", ".", "n_args", "==", "1", ":", "\n", "            ", "input_gradients", "=", "(", "grad_inputs", ",", "x", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "[", "x_", ".", "detach", "(", ")", "for", "x_", "in", "x", "]", "\n", "input_gradients", "=", "tuple", "(", "itertools", ".", "chain", "(", "*", "zip", "(", "grad_inputs", ",", "x", ")", ")", ")", "\n", "", "parameter_gradients", "=", "tuple", "(", "param_grads", ")", "\n", "\n", "return", "(", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ")", "+", "input_gradients", "+", "parameter_gradients", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleModule.forward": [[75, 78], ["None"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleModule.reverse": [[79, 82], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "reverse", "(", "self", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer.__init__": [[90, 94], ["abc.ABC.__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "memory_free", "=", "False", "\n", "self", ".", "save_input", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer.forward": [[95, 127], ["isinstance", "kwargs.values", "InvertToLearnFunction.apply", "invert_to_learn.InvertibleLayer._forward", "len", "list", "list", "list", "len", "list", "itertools.chain", "invert_to_learn.InvertibleLayer.parameters", "torch.is_tensor", "tensors.append", "torch.is_tensor", "tensors.append", "zip"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Forward operation of the invertible layer\n        :param x: Tensor or list of Tensors. Only gradients for x will be valid in invert to learn.\n        :param args: Additional Inputs\n        :param kwargs: Keyword Arguments\n        :return: Tensor or list of Tensors\n        \"\"\"", "\n", "if", "self", ".", "memory_free", ":", "\n", "            ", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "n_args", "=", "len", "(", "x", ")", "\n", "x", "=", "list", "(", "itertools", ".", "chain", "(", "*", "x", ")", ")", "\n", "", "else", ":", "\n", "                ", "n_args", "=", "1", "\n", "x", "=", "list", "(", "x", ")", "\n", "", "tensors", "=", "x", "+", "list", "(", "self", ".", "parameters", "(", ")", ")", "\n", "for", "arg", "in", "args", ":", "\n", "                ", "if", "torch", ".", "is_tensor", "(", "arg", ")", "and", "arg", ".", "requires_grad", ":", "\n", "                    ", "tensors", ".", "append", "(", "arg", ")", "\n", "", "", "for", "arg", "in", "kwargs", ".", "values", "(", ")", ":", "\n", "                ", "if", "torch", ".", "is_tensor", "(", "arg", ")", "and", "arg", ".", "requires_grad", ":", "\n", "                    ", "tensors", ".", "append", "(", "arg", ")", "\n", "", "", "forward_fun", "=", "self", ".", "_forward", "\n", "reverse_fun", "=", "self", ".", "_reverse", "\n", "\n", "y", "=", "InvertToLearnFunction", ".", "apply", "(", "n_args", ",", "self", ",", "forward_fun", ",", "reverse_fun", ",", "args", ",", "kwargs", ",", "*", "tensors", ")", "\n", "if", "len", "(", "y", ")", ">", "2", ":", "\n", "                ", "y", "=", "list", "(", "zip", "(", "y", "[", ":", ":", "2", "]", ",", "y", "[", "1", ":", ":", "2", "]", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "y", "=", "self", ".", "_forward", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer.reverse": [[128, 160], ["isinstance", "kwargs.values", "InvertToLearnFunction.apply", "invert_to_learn.InvertibleLayer._reverse", "len", "list", "list", "list", "list", "len", "list", "itertools.chain", "invert_to_learn.InvertibleLayer.parameters", "torch.is_tensor", "tensors.append", "torch.is_tensor", "tensors.append", "zip"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._reverse"], ["", "def", "reverse", "(", "self", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Reverse operation of the invertible layer\n        :param y: Tensor or list of Tensors. Only gradients for y will be valid in invert to learn.\n        :param args: Additional Inputs\n        :param kwargs: Keyword Arguments\n        :return: Tensor or list of Tensors\n        \"\"\"", "\n", "if", "self", ".", "memory_free", ":", "\n", "            ", "if", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "                ", "n_args", "=", "len", "(", "y", ")", "\n", "y", "=", "list", "(", "itertools", ".", "chain", "(", "*", "y", ")", ")", "\n", "", "else", ":", "\n", "                ", "n_args", "=", "1", "\n", "y", "=", "list", "(", "y", ")", "\n", "\n", "", "tensors", "=", "list", "(", "y", ")", "+", "list", "(", "self", ".", "parameters", "(", ")", ")", "\n", "for", "arg", "in", "args", ":", "\n", "                ", "if", "torch", ".", "is_tensor", "(", "arg", ")", "and", "arg", ".", "requires_grad", ":", "\n", "                    ", "tensors", ".", "append", "(", "arg", ")", "\n", "", "", "for", "arg", "in", "kwargs", ".", "values", "(", ")", ":", "\n", "                ", "if", "torch", ".", "is_tensor", "(", "arg", ")", "and", "arg", ".", "requires_grad", ":", "\n", "                    ", "tensors", ".", "append", "(", "arg", ")", "\n", "\n", "", "", "reverse_fun", "=", "self", ".", "_forward", "\n", "forward_fun", "=", "self", ".", "_reverse", "\n", "x", "=", "InvertToLearnFunction", ".", "apply", "(", "n_args", ",", "self", ",", "forward_fun", ",", "reverse_fun", ",", "args", ",", "kwargs", ",", "*", "tensors", ")", "\n", "if", "len", "(", "x", ")", ">", "2", ":", "\n", "                ", "x", "=", "list", "(", "zip", "(", "x", "[", ":", ":", "2", "]", ",", "x", "[", "1", ":", ":", "2", "]", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "_reverse", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer.gradfun": [[161, 198], ["isinstance", "torch.enable_grad", "isinstance", "forward_fun", "torch.autograd.grad", "torch.no_grad", "reverse_fun", "x.detach().requires_grad_.detach().requires_grad_.detach().requires_grad_", "x_.detach().requires_grad_", "len", "len", "x.detach().requires_grad_.detach().requires_grad_.detach", "x_.detach"], "methods", ["None"], ["", "def", "gradfun", "(", "self", ",", "forward_fun", ",", "reverse_fun", ",", "x", "=", "None", ",", "y", "=", "None", ",", "grad_outputs", "=", "None", ",", "parameters", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        This function implements gradient calculations for the invert to learn case. It will be called by\n        InvertToLearn.backward. This function will be valid for any invertible function, however computation\n        cost might be not optimal. Inheriting classes can overwrite this method to implement more efficient\n        gradient computation specific for teh respective layer. See invertible_layer.py for examples.\n        :param forward_fun: The function that was used during the forward operation\n        :param reverse_fun: The inverse of forward_fun\n        :param x: Tensor or list of Tensors, Input of layer\n        :param y: Tensor or list of Tensors, Output of layer\n        :param grad_outputs: Tensor or list of Tensors, gradients passed from higher layers\n        :param parameters: Tensor or list of Tensors, parameters of the layer\n        :return: x, grad_x, grads_param\n        \"\"\"", "\n", "assert", "not", "(", "x", "is", "None", "and", "y", "is", "None", ")", "\n", "if", "x", "is", "None", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "x", "=", "reverse_fun", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "x", "=", "[", "x_", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "for", "x_", "in", "x", "]", "\n", "grad_tensors", "=", "x", "+", "parameters", "\n", "", "else", ":", "\n", "                ", "x", "=", "x", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "grad_tensors", "=", "[", "x", "]", "+", "parameters", "\n", "", "y", "=", "forward_fun", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "y", ",", "grad_tensors", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "\n", "", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "            ", "grad_inputs", "=", "grads", "[", ":", "len", "(", "x", ")", "]", "\n", "grads_param", "=", "grads", "[", "len", "(", "x", ")", ":", "]", "\n", "", "else", ":", "\n", "            ", "grad_inputs", "=", "grads", "[", "0", "]", "\n", "grads_param", "=", "grads", "[", "1", ":", "]", "\n", "\n", "", "return", "x", ",", "grad_inputs", ",", "grads_param", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer._forward": [[199, 202], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.InvertibleLayer._reverse": [[203, 206], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_reverse", "(", "self", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.IdentityLayer._forward": [[209, 211], ["None"], "methods", ["None"], ["    ", "def", "_forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.IdentityLayer._reverse": [[212, 214], ["None"], "methods", ["None"], ["", "def", "_reverse", "(", "self", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.IdentityLayer.gradfun": [[215, 219], ["None"], "methods", ["None"], ["", "def", "gradfun", "(", "self", ",", "forward_fun", ",", "reverse_fun", ",", "x", "=", "None", ",", "y", "=", "None", ",", "grad_outputs", "=", "None", ",", "parameters", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "x", "is", "None", ":", "\n", "            ", "x", "=", "y", "\n", "", "return", "x", ",", "grad_outputs", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.__init__": [[231, 240], ["super().__init__", "isinstance", "model.apply", "invert_to_learn.IdentityLayer", "invert_to_learn.make_layer_memory_free"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.make_layer_memory_free"], ["def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "\"\"\"\n        :param model: Model to be wrapped.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "isinstance", "(", "model", ",", "InvertibleModule", ")", "\n", "self", ".", "model", "=", "model", ".", "apply", "(", "make_layer_memory_free", ")", "\n", "self", ".", "save_layer", "=", "IdentityLayer", "(", ")", "\n", "make_layer_memory_free", "(", "self", ".", "save_layer", ",", "save_input", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.forward": [[241, 254], ["isinstance", "invert_to_learn.MemoryFreeInvertibleModule.model.forward", "invert_to_learn.MemoryFreeInvertibleModule.save_layer.forward", "isinstance", "invert_to_learn.MemoryFreeInvertibleModule.detach", "x_.detach"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "            ", "x", "=", "[", "(", "x_", ",", "x_", ".", "detach", "(", ")", ")", "for", "x_", "in", "x", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "(", "x", ",", "x", ".", "detach", "(", ")", ")", "\n", "", "x", "=", "self", ".", "model", ".", "forward", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "x", "=", "self", ".", "save_layer", ".", "forward", "(", "x", ")", "\n", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "            ", "x", "=", "[", "x_", "[", "0", "]", "for", "x_", "in", "x", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "x", "[", "0", "]", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse": [[255, 268], ["isinstance", "invert_to_learn.MemoryFreeInvertibleModule.model.reverse", "invert_to_learn.MemoryFreeInvertibleModule.save_layer.reverse", "isinstance", "invert_to_learn.MemoryFreeInvertibleModule.detach", "y_.detach"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse", "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.MemoryFreeInvertibleModule.reverse"], ["", "def", "reverse", "(", "self", ",", "y", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "            ", "y", "=", "[", "(", "y_", ",", "y_", ".", "detach", "(", ")", ")", "for", "y_", "in", "y", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "(", "y", ",", "y", ".", "detach", "(", ")", ")", "\n", "", "y", "=", "self", ".", "model", ".", "reverse", "(", "y", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "y", "=", "self", ".", "save_layer", ".", "reverse", "(", "y", ")", "\n", "if", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "            ", "y", "=", "[", "y_", "[", "0", "]", "for", "y_", "in", "y", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "y", "[", "0", "]", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invert_to_learn.make_layer_memory_free": [[220, 224], ["isinstance"], "function", ["None"], ["", "", "def", "make_layer_memory_free", "(", "layer", ",", "save_input", "=", "False", ")", ":", "\n", "    ", "if", "isinstance", "(", "layer", ",", "InvertibleLayer", ")", ":", "\n", "        ", "layer", ".", "memory_free", "=", "True", "\n", "layer", ".", "save_input", "=", "save_input", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.RevNetLayer.__init__": [[10, 19], ["irim.core.invert_to_learn.InvertibleLayer.__init__", "residual_function"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_hidden", ",", "dilation", "=", "1", ",", "conv_nd", "=", "2", ",", "residual_function", "=", "ResidualBlockPixelshuffle", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "n_left", "=", "self", ".", "n_channels", "//", "2", "\n", "self", ".", "n_right", "=", "self", ".", "n_channels", "-", "self", ".", "n_left", "\n", "self", ".", "n_hidden", "=", "n_hidden", "\n", "self", ".", "conv_nd", "=", "conv_nd", "\n", "self", ".", "update_right", "=", "residual_function", "(", "self", ".", "n_left", ",", "self", ".", "n_right", ",", "self", ".", "n_hidden", ",", "dilation", "=", "dilation", ",", "\n", "conv_nd", "=", "conv_nd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.RevNetLayer._forward": [[20, 26], ["torch.cat", "invertible_layers.RevNetLayer.update_right"], "methods", ["None"], ["", "def", "_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_left", ",", "x_right", "=", "x", "[", ":", ",", ":", "self", ".", "n_left", "]", ",", "x", "[", ":", ",", "self", ".", "n_left", ":", "self", ".", "n_channels", "]", "\n", "\n", "y_right", "=", "x_right", "+", "self", ".", "update_right", "(", "x_left", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "x_left", ",", "y_right", ",", "x", "[", ":", ",", "self", ".", "n_channels", ":", "]", ")", ",", "1", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.RevNetLayer._reverse": [[27, 34], ["torch.cat", "invertible_layers.RevNetLayer.update_right"], "methods", ["None"], ["", "def", "_reverse", "(", "self", ",", "y", ")", ":", "\n", "        ", "x_left", ",", "y_right", "=", "y", "[", ":", ",", ":", "self", ".", "n_left", "]", ",", "y", "[", ":", ",", "self", ".", "n_left", ":", "self", ".", "n_channels", "]", "\n", "\n", "x_right", "=", "y_right", "-", "self", ".", "update_right", "(", "x_left", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x_left", ",", "x_right", ",", "y", "[", ":", ",", "self", ".", "n_channels", ":", "]", ")", ",", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.RevNetLayer.gradfun": [[35, 51], ["torch.enable_grad", "forward_fun.detach().requires_grad_", "forward_fun", "torch.autograd.grad", "x.detach().requires_grad_.detach().requires_grad_.detach().requires_grad_", "forward_fun", "torch.autograd.grad", "forward_fun.detach", "x.detach().requires_grad_.detach().requires_grad_.detach"], "methods", ["None"], ["", "def", "gradfun", "(", "self", ",", "forward_fun", ",", "reverse_fun", ",", "x", "=", "None", ",", "y", "=", "None", ",", "grad_outputs", "=", "None", ",", "parameters", "=", "None", ")", ":", "\n", "        ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "if", "x", "is", "None", "and", "y", "is", "not", "None", ":", "\n", "                ", "y", "=", "y", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "x", "=", "forward_fun", "(", "y", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "x", ",", "[", "y", "]", "+", "parameters", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "x", "=", "2", "*", "y", "-", "x", "\n", "", "elif", "x", "is", "not", "None", ":", "\n", "                ", "x", "=", "x", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", "=", "forward_fun", "(", "x", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "y", ",", "[", "x", "]", "+", "parameters", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "\n", "", "", "grad_input", "=", "grads", "[", "0", "]", "\n", "param_grads", "=", "grads", "[", "1", ":", "]", "\n", "\n", "return", "x", ",", "grad_input", ",", "param_grads", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1.__init__": [[55, 62], ["irim.core.invert_to_learn.InvertibleLayer.__init__", "min", "torch.nn.Parameter", "irim.utils.torch_utils.determine_conv_functional", "invertible_layers.Housholder1x1.register_buffer", "torch.randn", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.utils.torch_utils.determine_conv_functional"], ["    ", "def", "__init__", "(", "self", ",", "num_inputs", ",", "n_projections", "=", "3", ",", "conv_nd", "=", "2", ")", ":", "\n", "        ", "super", "(", "Housholder1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_projections", "=", "min", "(", "n_projections", ",", "num_inputs", ")", "\n", "self", ".", "weights", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "(", "n_projections", ",", "num_inputs", ",", "1", ")", ")", ")", "\n", "self", ".", "conv_nd", "=", "conv_nd", "\n", "self", ".", "conv", "=", "determine_conv_functional", "(", "conv_nd", ")", "\n", "self", ".", "register_buffer", "(", "'I'", ",", "torch", ".", "eye", "(", "num_inputs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._forward": [[63, 70], ["range", "invertible_layers.Housholder1x1.conv", "invertible_layers.Housholder1x1._get_weight", "W.unsqueeze.unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._get_weight"], ["", "def", "_forward", "(", "self", ",", "x", ",", "W", "=", "None", ")", ":", "\n", "        ", "if", "W", "is", "None", ":", "\n", "            ", "W", "=", "self", ".", "_get_weight", "(", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "conv_nd", ")", ":", "\n", "            ", "W", "=", "W", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "return", "self", ".", "conv", "(", "x", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._reverse": [[71, 78], ["W.unsqueeze.unsqueeze.t", "range", "invertible_layers.Housholder1x1.conv", "invertible_layers.Housholder1x1._get_weight", "W.unsqueeze.unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._get_weight"], ["", "def", "_reverse", "(", "self", ",", "y", ",", "W", "=", "None", ")", ":", "\n", "        ", "if", "W", "is", "None", ":", "\n", "            ", "W", "=", "self", ".", "_get_weight", "(", ")", "\n", "", "W", "=", "W", ".", "t", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "conv_nd", ")", ":", "\n", "            ", "W", "=", "W", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "return", "self", ".", "conv", "(", "y", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._get_weight": [[79, 85], ["invertible_layers.Housholder1x1.weights.transpose", "torch.chain_matmul", "torch.bmm", "torch.bmm"], "methods", ["None"], ["", "def", "_get_weight", "(", "self", ")", ":", "\n", "        ", "V", "=", "self", ".", "weights", "\n", "V_t", "=", "self", ".", "weights", ".", "transpose", "(", "1", ",", "2", ")", "\n", "U", "=", "self", ".", "I", "-", "2", "*", "torch", ".", "bmm", "(", "V", ",", "V_t", ")", "/", "torch", ".", "bmm", "(", "V_t", ",", "V", ")", "\n", "W", "=", "torch", ".", "chain_matmul", "(", "*", "U", ")", "\n", "return", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1.gradfun": [[86, 102], ["torch.enable_grad", "invertible_layers.Housholder1x1._get_weight", "reverse_fun", "reverse_fun", "torch.autograd.grad", "x.detach().requires_grad_.detach().requires_grad_.detach().requires_grad_", "forward_fun", "torch.autograd.grad", "forward_fun.detach", "grad_outputs.detach", "x.detach().requires_grad_.detach().requires_grad_.detach", "x.detach().requires_grad_.detach().requires_grad_.detach"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.core.invertible_layers.Housholder1x1._get_weight"], ["", "def", "gradfun", "(", "self", ",", "forward_fun", ",", "reverse_fun", ",", "x", "=", "None", ",", "y", "=", "None", ",", "grad_outputs", "=", "None", ",", "parameters", "=", "None", ")", ":", "\n", "        ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "W", "=", "self", ".", "_get_weight", "(", ")", "\n", "if", "x", "is", "None", "and", "y", "is", "not", "None", ":", "\n", "                ", "x", "=", "reverse_fun", "(", "y", ".", "detach", "(", ")", ",", "W", ")", "\n", "grad_input", "=", "reverse_fun", "(", "grad_outputs", ".", "detach", "(", ")", ",", "W", ")", "\n", "param_grads", "=", "torch", ".", "autograd", ".", "grad", "(", "grad_input", ",", "parameters", ",", "grad_outputs", "=", "x", ".", "detach", "(", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "x", "=", "x", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", "=", "forward_fun", "(", "x", ",", "W", ")", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "y", ",", "[", "x", "]", "+", "parameters", ",", "grad_outputs", "=", "grad_outputs", ")", "\n", "\n", "grad_input", "=", "grads", "[", "0", "]", "\n", "param_grads", "=", "grads", "[", "1", ":", "]", "\n", "", "", "return", "x", ",", "grad_input", ",", "param_grads", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.residual_blocks.ResidualBlockPixelshuffle.__init__": [[7, 24], ["torch.nn.Module.__init__", "irim.utils.torch_utils.determine_conv_class", "irim.utils.torch_utils.determine_conv_class", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "irim.utils.torch_utils.determine_conv_class.", "irim.utils.torch_utils.determine_conv_class.", "irim.utils.torch_utils.determine_conv_class."], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.determine_conv_class", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.determine_conv_class"], ["    ", "def", "__init__", "(", "self", ",", "n_input", ",", "n_output", ",", "n_hidden", ",", "kernel_size", "=", "3", ",", "dilation", "=", "1", ",", "conv_nd", "=", "2", ",", "use_glu", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResidualBlockPixelshuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_output", "=", "n_output", "\n", "self", ".", "conv_nd", "=", "conv_nd", "\n", "self", ".", "use_glu", "=", "use_glu", "\n", "conv_layer", "=", "determine_conv_class", "(", "conv_nd", ",", "transposed", "=", "False", ")", "\n", "transposed_conv_layer", "=", "determine_conv_class", "(", "conv_nd", ",", "transposed", "=", "True", ")", "\n", "\n", "if", "use_glu", ":", "\n", "            ", "n_output", "=", "n_output", "*", "2", "\n", "\n", "", "self", ".", "l1", "=", "nn", ".", "utils", ".", "weight_norm", "(", "conv_layer", "(", "n_input", ",", "n_hidden", ",", "kernel_size", "=", "dilation", ",", "\n", "stride", "=", "dilation", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "l2", "=", "nn", ".", "utils", ".", "weight_norm", "(", "conv_layer", "(", "n_hidden", ",", "n_hidden", ",", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "dilation", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "l3", "=", "nn", ".", "utils", ".", "weight_norm", "(", "transposed_conv_layer", "(", "n_hidden", ",", "n_output", ",", "kernel_size", "=", "dilation", ",", "\n", "stride", "=", "dilation", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.core.residual_blocks.ResidualBlockPixelshuffle.forward": [[25, 36], ["list", "torch.nn.functional.relu_", "torch.nn.functional.relu_", "residual_blocks.ResidualBlockPixelshuffle.l3", "torch.nn.functional.glu.size", "residual_blocks.ResidualBlockPixelshuffle.l1", "residual_blocks.ResidualBlockPixelshuffle.l2", "torch.nn.functional.glu", "tuple"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "list", "(", "x", ".", "size", "(", ")", ")", "\n", "x_size", "[", "1", "]", "=", "self", ".", "n_output", "\n", "\n", "x", "=", "nn", ".", "functional", ".", "relu_", "(", "self", ".", "l1", "(", "x", ")", ")", "\n", "x", "=", "nn", ".", "functional", ".", "relu_", "(", "self", ".", "l2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "l3", "(", "x", ",", "output_size", "=", "tuple", "(", "x_size", ")", ")", "\n", "if", "self", ".", "use_glu", ":", "\n", "            ", "x", "=", "nn", ".", "functional", ".", "glu", "(", "x", ",", "1", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.rim.RIM.__init__": [[6, 10], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnn", ",", "grad_fun", ")", ":", "\n", "        ", "super", "(", "RIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rnn", "=", "rnn", "\n", "self", ".", "grad_fun", "=", "grad_fun", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.rim.RIM.forward": [[11, 37], ["range", "rim.RIM.grad_fun", "torch.cat", "rim.RIM.rnn.forward", "etas.append"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.examples.irim_denoising.grad_fun", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "def", "forward", "(", "self", ",", "eta", ",", "data", ",", "hx", "=", "None", ",", "n_steps", "=", "1", ",", "accumulate_eta", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        :param eta: Starting value for eta [n_batch,features,height,width]\n        :param grad_fun: The gradient function, takes as input eta and outputs gradient of same dimensionality\n        :param hx: Hidden state of the RNN\n        :param n_steps: Number of time steps, that the RIM should perform. Default: 1\n        :param accumulate_eta: Bool, if True will save all intermediate etas in a list, else outputs only the last eta.\n                               Default: False\n        :return: etas, hx\n        \"\"\"", "\n", "etas", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_steps", ")", ":", "\n", "            ", "grad_eta", "=", "self", ".", "grad_fun", "(", "eta", ",", "data", ")", "\n", "x_in", "=", "torch", ".", "cat", "(", "(", "eta", ",", "grad_eta", ")", ",", "1", ")", "\n", "\n", "delta", ",", "hx", "=", "self", ".", "rnn", ".", "forward", "(", "x_in", ",", "hx", ")", "\n", "eta", "=", "eta", "+", "delta", "\n", "\n", "if", "accumulate_eta", ":", "\n", "                ", "etas", ".", "append", "(", "eta", ")", "\n", "\n", "", "", "if", "not", "accumulate_eta", ":", "\n", "            ", "etas", "=", "eta", "\n", "\n", "", "return", "etas", ",", "hx", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.InputRNN.__init__": [[6, 11], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnn_cell", "=", "None", ",", "input_fun", "=", "None", ")", ":", "\n", "        ", "super", "(", "InputRNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rnn_cell", "=", "rnn_cell", "\n", "self", ".", "input_fun", "=", "input_fun", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.InputRNN.forward": [[12, 21], ["conv_rnn.InputRNN.input_fun.forward", "conv_rnn.InputRNN.rnn_cell.forward"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "hx", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "input_fun", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "input_fun", ".", "forward", "(", "x", ")", "\n", "", "if", "self", ".", "rnn_cell", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "rnn_cell", ".", "forward", "(", "x", ")", "\n", "hx", "=", "x", "\n", "\n", "", "return", "x", ",", "hx", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.__init__": [[24, 47], ["torch.Module.__init__", "conv_rnn.ConvNonlinear.determine_conv_class", "conv_rnn.ConvNonlinear.conv_class", "conv_rnn.ConvNonlinear.reset_parameters", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nonlinear.upper", "ValueError", "torch.nn.ReplicationPad1d", "torch.nn.ReplicationPad1d", "torch.nn.ReplicationPad1d", "torch.nn.ReplicationPad1d", "torch.nn.ReplicationPad2d", "torch.nn.ReplicationPad2d", "torch.nn.ReplicationPad2d", "torch.nn.ReplicationPad2d", "torch.nn.ReplicationPad3d", "torch.nn.ReplicationPad3d", "torch.nn.ReplicationPad3d", "torch.nn.ReplicationPad3d"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.determine_conv_class", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "features", ",", "conv_dim", ",", "kernel_size", ",", "dilation", ",", "bias", ",", "nonlinear", "=", "'relu'", ")", ":", "\n", "        ", "super", "(", "ConvNonlinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "conv_dim", "=", "conv_dim", "\n", "self", ".", "conv_class", "=", "self", ".", "determine_conv_class", "(", "conv_dim", ")", "\n", "if", "nonlinear", "is", "not", "None", "and", "nonlinear", ".", "upper", "(", ")", "==", "'RELU'", ":", "\n", "            ", "self", ".", "nonlinear", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "nonlinear", "is", "None", ":", "\n", "            ", "self", ".", "nonlinear", "=", "lambda", "x", ":", "x", "\n", "", "else", ":", "\n", "            ", "ValueError", "(", "'Please specify a proper'", ")", "\n", "\n", "", "self", ".", "padding", "=", "[", "torch", ".", "nn", ".", "ReplicationPad1d", "(", "dilation", "*", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ",", "\n", "torch", ".", "nn", ".", "ReplicationPad2d", "(", "dilation", "*", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ",", "\n", "torch", ".", "nn", ".", "ReplicationPad3d", "(", "dilation", "*", "(", "kernel_size", "-", "1", ")", "//", "2", ")", "]", "[", "conv_dim", "-", "1", "]", "\n", "self", ".", "conv_layer", "=", "self", ".", "conv_class", "(", "in_channels", "=", "input_size", ",", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "0", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.reset_parameters": [[48, 53], ["torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv_layer", ".", "weight", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n", "if", "self", ".", "conv_layer", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_layer", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.determine_conv_class": [[54, 64], ["NotImplementedError"], "methods", ["None"], ["", "", "def", "determine_conv_class", "(", "self", ",", "n_dim", ")", ":", "\n", "\n", "        ", "if", "n_dim", "is", "1", ":", "\n", "            ", "return", "nn", ".", "Conv1d", "\n", "", "elif", "n_dim", "is", "2", ":", "\n", "            ", "return", "nn", ".", "Conv2d", "\n", "", "elif", "n_dim", "is", "3", ":", "\n", "            ", "return", "nn", ".", "Conv3d", "\n", "", "else", ":", "\n", "            ", "NotImplementedError", "(", "\"No convolution of this dimensionality implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.extra_repr": [[65, 72], ["s.format"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s", "=", "'{input_size}, {features}'", "\n", "if", "'bias'", "in", "self", ".", "__dict__", "and", "self", ".", "bias", "is", "not", "True", ":", "\n", "            ", "s", "+=", "', bias={bias}'", "\n", "", "if", "'nonlinear'", "in", "self", ".", "__dict__", "and", "self", ".", "nonlinear", "!=", "\"tanh\"", ":", "\n", "            ", "s", "+=", "', nonlinearity={nonlinear}'", "\n", "", "return", "s", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.check_forward_input": [[73, 78], ["input.size", "RuntimeError", "input.size"], "methods", ["None"], ["", "def", "check_forward_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "size", "(", "1", ")", "!=", "self", ".", "input_size", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"input has inconsistent input_size: got {}, expected {}\"", ".", "format", "(", "\n", "input", ".", "size", "(", "1", ")", ",", "self", ".", "input_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvNonlinear.forward": [[79, 81], ["conv_rnn.ConvNonlinear.nonlinear", "conv_rnn.ConvNonlinear.conv_layer", "conv_rnn.ConvNonlinear.padding"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "nonlinear", "(", "self", ".", "conv_layer", "(", "self", ".", "padding", "(", "input", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.__init__": [[85, 102], ["torch.Module.__init__", "conv_rnn.ConvRNNCellBase.determine_conv_class", "conv_rnn.ConvRNNCellBase.conv_class", "conv_rnn.ConvRNNCellBase.conv_class", "conv_rnn.ConvRNNCellBase.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.determine_conv_class", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "num_chunks", ",", "conv_dim", ",", "kernel_size", ",", "\n", "dilation", ",", "bias", ")", ":", "\n", "        ", "super", "(", "ConvRNNCellBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "num_chunks", "=", "num_chunks", "\n", "self", ".", "conv_dim", "=", "conv_dim", "\n", "self", ".", "conv_class", "=", "self", ".", "determine_conv_class", "(", "conv_dim", ")", "\n", "self", ".", "ih", "=", "self", ".", "conv_class", "(", "in_channels", "=", "input_size", ",", "out_channels", "=", "num_chunks", "*", "hidden_size", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "dilation", "*", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "bias", ")", "\n", "self", ".", "hh", "=", "self", ".", "conv_class", "(", "in_channels", "=", "hidden_size", ",", "out_channels", "=", "num_chunks", "*", "hidden_size", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "dilation", "*", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "bias", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.reset_parameters": [[103, 111], ["conv_rnn.ConvRNNCellBase.orthotogonalize_weights", "conv_rnn.ConvRNNCellBase.orthotogonalize_weights", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.orthotogonalize_weights", "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.orthotogonalize_weights"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "ih", ".", "weight", ".", "data", "=", "self", ".", "orthotogonalize_weights", "(", "self", ".", "ih", ".", "weight", ".", "data", ")", "\n", "self", ".", "hh", ".", "weight", ".", "data", "=", "self", ".", "orthotogonalize_weights", "(", "self", ".", "hh", ".", "weight", ".", "data", ")", "\n", "\n", "if", "self", ".", "bias", "is", "True", ":", "\n", "            ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "ih", ".", "bias", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "hh", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.orthotogonalize_weights": [[112, 114], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.init.orthogonal_", "torch.init.orthogonal_", "weights.chunk"], "methods", ["None"], ["", "", "def", "orthotogonalize_weights", "(", "self", ",", "weights", ",", "chunks", "=", "1", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "nn", ".", "init", ".", "orthogonal_", "(", "w", ")", "for", "w", "in", "weights", ".", "chunk", "(", "chunks", ",", "0", ")", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.determine_conv_class": [[115, 125], ["NotImplementedError"], "methods", ["None"], ["", "def", "determine_conv_class", "(", "self", ",", "n_dim", ")", ":", "\n", "\n", "        ", "if", "n_dim", "is", "1", ":", "\n", "            ", "return", "nn", ".", "Conv1d", "\n", "", "elif", "n_dim", "is", "2", ":", "\n", "            ", "return", "nn", ".", "Conv2d", "\n", "", "elif", "n_dim", "is", "3", ":", "\n", "            ", "return", "nn", ".", "Conv3d", "\n", "", "else", ":", "\n", "            ", "NotImplementedError", "(", "\"No convolution of this dimensionality implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.extra_repr": [[126, 133], ["s.format"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s", "=", "'{input_size}, {hidden_size}'", "\n", "if", "'bias'", "in", "self", ".", "__dict__", "and", "self", ".", "bias", "is", "not", "True", ":", "\n", "            ", "s", "+=", "', bias={bias}'", "\n", "", "if", "'nonlinearity'", "in", "self", ".", "__dict__", "and", "self", ".", "nonlinearity", "!=", "\"tanh\"", ":", "\n", "            ", "s", "+=", "', nonlinearity={nonlinearity}'", "\n", "", "return", "s", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.check_forward_input": [[134, 139], ["input.size", "RuntimeError", "input.size"], "methods", ["None"], ["", "def", "check_forward_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "size", "(", "1", ")", "!=", "self", ".", "input_size", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"input has inconsistent input_size: got {}, expected {}\"", ".", "format", "(", "\n", "input", ".", "size", "(", "1", ")", ",", "self", ".", "input_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNNCellBase.check_forward_hidden": [[140, 150], ["input.size", "hx.size", "RuntimeError", "hx.size", "RuntimeError", "input.size", "hx.size", "hx.size"], "methods", ["None"], ["", "", "def", "check_forward_hidden", "(", "self", ",", "input", ",", "hx", ",", "hidden_label", "=", "''", ")", ":", "\n", "        ", "if", "input", ".", "size", "(", "0", ")", "!=", "hx", ".", "size", "(", "0", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"Input batch size {} doesn't match hidden{} batch size {}\"", ".", "format", "(", "\n", "input", ".", "size", "(", "0", ")", ",", "hidden_label", ",", "hx", ".", "size", "(", "0", ")", ")", ")", "\n", "\n", "", "if", "hx", ".", "size", "(", "1", ")", "!=", "self", ".", "hidden_size", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"hidden{} has inconsistent hidden_size: got {}, expected {}\"", ".", "format", "(", "\n", "hidden_label", ",", "hx", ".", "size", "(", "1", ")", ",", "self", ".", "hidden_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvGRUCell.__init__": [[159, 163], ["conv_rnn.ConvRNNCellBase.__init__"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "conv_dim", ",", "kernel_size", ",", "dilation", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvGRUCell", ",", "self", ")", ".", "__init__", "(", "input_size", "=", "input_size", ",", "hidden_size", "=", "hidden_size", ",", "\n", "num_chunks", "=", "3", ",", "conv_dim", "=", "conv_dim", ",", "kernel_size", "=", "kernel_size", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvGRUCell.forward": [[164, 181], ["conv_rnn.ConvGRUCell.ih().chunk", "conv_rnn.ConvGRUCell.hh().chunk", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "input.new_zeros", "conv_rnn.ConvGRUCell.ih", "conv_rnn.ConvGRUCell.hh", "input.size", "input.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "hx", "=", "None", ")", ":", "\n", "# self.check_forward_input(input)", "\n", "        ", "if", "hx", "is", "None", ":", "\n", "            ", "hx", "=", "input", ".", "new_zeros", "(", "(", "input", ".", "size", "(", "0", ")", ",", "self", ".", "hidden_size", ")", "+", "input", ".", "size", "(", ")", "[", "2", ":", "]", ",", "\n", "requires_grad", "=", "False", ")", "\n", "# self.check_forward_hidden(input, hx)", "\n", "\n", "", "ih", "=", "self", ".", "ih", "(", "input", ")", ".", "chunk", "(", "3", ",", "dim", "=", "1", ")", "\n", "hh", "=", "self", ".", "hh", "(", "hx", ")", ".", "chunk", "(", "3", ",", "dim", "=", "1", ")", "\n", "\n", "z", "=", "torch", ".", "sigmoid", "(", "ih", "[", "0", "]", "+", "hh", "[", "0", "]", ")", "\n", "r", "=", "torch", ".", "sigmoid", "(", "ih", "[", "1", "]", "+", "hh", "[", "1", "]", ")", "\n", "n", "=", "torch", ".", "tanh", "(", "ih", "[", "2", "]", "+", "r", "*", "hh", "[", "2", "]", ")", "\n", "\n", "hx", "=", "(", "1.", "-", "z", ")", "*", "hx", "+", "z", "*", "n", "\n", "\n", "return", "hx", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__": [[184, 239], ["torch.Module.__init__", "zip", "zip", "torch.ModuleList", "torch.ModuleList", "zip", "conv_rnn.ConvRNN.layers.append", "conv_rnn.ConvNonlinear", "rnn_type", "conv_rnn.InputRNN", "rnn_type.upper", "issubclass", "ValueError"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "\n", "conv_params", "=", "{", "'features'", ":", "[", "64", ",", "64", ",", "2", "]", ",", "'k_size'", ":", "[", "5", ",", "3", ",", "3", "]", ",", "'dilation'", ":", "[", "1", ",", "2", ",", "1", "]", ",", "'bias'", ":", "[", "True", ",", "True", ",", "False", "]", ",", "\n", "'nonlinear'", ":", "[", "'relu'", ",", "'relu'", ",", "None", "]", "}", ",", "\n", "rnn_params", "=", "{", "'features'", ":", "[", "64", ",", "64", ",", "0", "]", ",", "'k_size'", ":", "[", "1", ",", "1", ",", "0", "]", ",", "'dilation'", ":", "[", "1", ",", "1", ",", "0", "]", ",", "'bias'", ":", "[", "True", ",", "True", ",", "False", "]", ",", "\n", "'rnn_type'", ":", "[", "'gru'", ",", "'gru'", ",", "None", "]", "}", ",", "\n", "conv_dim", "=", "2", ")", ":", "\n", "        ", "'''\n        Generates a multi-layer convolutional GRU.\n        Preserves spatial dimensions across cells, only altering depth.\n\n        Parameters\n        ----------\n        input_size : integer. depth dimension of input tensors.\n        hidden_sizes : integer or list. depth dimensions of hidden state.\n            if integer, the same hidden size is used for all cells.\n        kernel_sizes : integer or list. sizes of Conv2d gate kernels.\n            if integer, the same kernel size is used for all cells.\n        n_layers : integer. number of chained `ConvGRUCell`.\n        '''", "\n", "\n", "super", "(", "ConvRNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "conv_dim", "=", "conv_dim", "\n", "self", ".", "conv_params", "=", "conv_params", "\n", "self", ".", "rnn_params", "=", "rnn_params", "\n", "\n", "conv_params", "=", "zip", "(", "*", "(", "conv_params", "[", "k", "]", "for", "k", "in", "[", "'features'", ",", "'k_size'", ",", "'dilation'", ",", "'bias'", ",", "'nonlinear'", "]", ")", ")", "\n", "rnn_params", "=", "zip", "(", "*", "(", "rnn_params", "[", "k", "]", "for", "k", "in", "[", "'features'", ",", "'k_size'", ",", "'dilation'", ",", "'bias'", ",", "'rnn_type'", "]", ")", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "(", "conv_features", ",", "conv_k_size", ",", "conv_dilation", ",", "conv_bias", ",", "nonlinear", ")", ",", "(", "rnn_features", ",", "rnn_k_size", ",", "rnn_dilation", ",", "rnn_bias", ",", "rnn_type", ")", "in", "zip", "(", "conv_params", ",", "rnn_params", ")", ":", "\n", "            ", "conv_layer", "=", "None", "\n", "rnn_layer", "=", "None", "\n", "\n", "if", "conv_features", ">", "0", ":", "\n", "                ", "conv_layer", "=", "ConvNonlinear", "(", "input_size", ",", "conv_features", ",", "conv_dim", "=", "self", ".", "conv_dim", ",", "\n", "kernel_size", "=", "conv_k_size", ",", "dilation", "=", "conv_dilation", ",", "bias", "=", "conv_bias", ",", "\n", "nonlinear", "=", "nonlinear", ")", "\n", "input_size", "=", "conv_features", "\n", "\n", "", "if", "rnn_features", ">", "0", "and", "rnn_type", "is", "not", "None", ":", "\n", "                ", "if", "rnn_type", ".", "upper", "(", ")", "==", "'GRU'", ":", "\n", "                    ", "rnn_type", "=", "ConvGRUCell", "\n", "", "elif", "issubclass", "(", "rnn_type", ",", "ConvRNNCellBase", ")", ":", "\n", "                    ", "rnn_type", "=", "rnn_type", "\n", "", "else", ":", "\n", "                    ", "ValueError", "(", "'Please speacify a proper rrn_type'", ")", "\n", "\n", "", "rnn_layer", "=", "rnn_type", "(", "input_size", ",", "rnn_features", ",", "conv_dim", "=", "self", ".", "conv_dim", ",", "\n", "kernel_size", "=", "rnn_k_size", ",", "dilation", "=", "rnn_dilation", ",", "bias", "=", "rnn_bias", ")", "\n", "input_size", "=", "rnn_features", "\n", "\n", "", "self", ".", "layers", ".", "append", "(", "InputRNN", "(", "rnn_layer", ",", "conv_layer", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward": [[240, 251], ["zip", "layer.forward", "hidden_new.append", "len"], "methods", ["home.repos.pwc.inspect_result.pputzky_invertible_rim.rim.conv_rnn.ConvRNN.forward"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "hx", "=", "None", ")", ":", "\n", "        ", "if", "not", "hx", ":", "\n", "            ", "hx", "=", "[", "None", "]", "*", "len", "(", "self", ".", "layers", ")", "\n", "\n", "", "hidden_new", "=", "[", "]", "\n", "\n", "for", "layer", ",", "local_hx", "in", "zip", "(", "self", ".", "layers", ",", "hx", ")", ":", "\n", "            ", "input", ",", "new_hx", "=", "layer", ".", "forward", "(", "input", ",", "local_hx", ")", "\n", "hidden_new", ".", "append", "(", "new_hx", ")", "\n", "\n", "", "return", "input", ",", "hidden_new", "\n", "", "", ""]]}