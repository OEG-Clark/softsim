{"home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.None.compute-loc_vec.train": [[15, 31], ["model.train", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "optimizer.step", "len", "data.to", "label.view().to", "criterion.item", "torch.tensor", "torch.tensor", "torch.tensor", "label.view"], "function", ["home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.None.compute-loc_vec.train"], ["def", "train", "(", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "\n", "loss_all", "=", "0", "\n", "for", "data", ",", "label", "in", "train_loader", ":", "\n", "        ", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "map_edge_index", "=", "torch", ".", "tensor", "(", "[", "start", ",", "end", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "logits", "=", "model", "(", "data", ",", "map_edge_index", ")", "\n", "\n", "loss", "=", "criterion", "(", "output", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "loss_all", "+=", "(", "loss", ".", "item", "(", ")", "/", "label", ".", "shape", "[", "0", "]", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "return", "loss_all", "/", "len", "(", "train_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.None.compute-loc_vec.evaluate": [[32, 53], ["model.eval", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model", "criterion", "torch.exp", "torch.exp", "torch.exp", "torch.exp.topk", "torch.mean().item", "torch.mean().item", "torch.mean().item", "len", "len", "data.to", "label.view().to", "criterion.item", "label.view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mean", "torch.mean", "torch.mean", "label.view", "equals.type"], "function", ["None"], ["", "def", "evaluate", "(", "loader", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "loss_all", "=", "0", "\n", "accuracy_all", "=", "0", "\n", "print", "(", "'Evaulating...'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "label", "in", "loader", ":", "\n", "            ", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "map_edge_index", "=", "torch", ".", "tensor", "(", "[", "start", ",", "end", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "output", ",", "logits", "=", "model", "(", "data", ",", "map_edge_index", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "label", ")", "\n", "loss_all", "+=", "(", "loss", ".", "item", "(", ")", "/", "label", ".", "shape", "[", "0", "]", ")", "\n", "\n", "ps", "=", "torch", ".", "exp", "(", "output", ")", "\n", "top_p", ",", "top_class", "=", "ps", ".", "topk", "(", "1", ",", "dim", "=", "1", ")", "\n", "\n", "equals", "=", "top_class", "==", "label", ".", "view", "(", "*", "top_class", ".", "shape", ")", "\n", "accuracy_all", "+=", "torch", ".", "mean", "(", "equals", ".", "type", "(", "torch", ".", "FloatTensor", ")", ")", ".", "item", "(", ")", "\n", "\n", "", "", "return", "loss_all", "/", "len", "(", "loader", ")", ",", "accuracy_all", "/", "len", "(", "loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.None.eval-zs_gln.evaluate": [[17, 138], ["model.eval", "torch.from_numpy().float", "torch.from_numpy().float", "logits.to.to", "print", "print", "open", "logits.to.norm", "torch.no_grad", "torch.no_grad", "numpy.load", "open", "torch.from_numpy", "torch.from_numpy", "torch.tensor().to", "torch.tensor().to", "model", "torch.zeros().to", "torch.zeros().to", "range", "torch.zeros().to.topk", "range", "print", "numpy.load", "data.to", "label.view().to", "numpy.linalg.norm", "range", "len", "len", "len", "len", "len", "torch.tensor", "torch.tensor", "torch.zeros", "torch.zeros", "any", "any", "print", "torch.randint().to", "torch.randint().to", "any", "any", "pdb.set_trace", "sum", "sum", "sum", "sum", "print", "sum", "sum", "sum", "sum", "sum", "str", "label.view", "len", "torch.randint", "torch.randint", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "label[].cpu().numpy().item", "label[].cpu().numpy().item", "range", "range", "range", "range", "range", "range", "int", "label[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy().item", "[].cpu().numpy().item", "label[].cpu().numpy().item", "[].cpu().numpy().item", "label[].cpu().numpy().item", "[].cpu().numpy().tolist", "label[].cpu", "label[].cpu", "[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy().item", "[].cpu().numpy().item", "label[].cpu().numpy().item", "[].cpu().numpy().item", "label[].cpu().numpy().item", "[].cpu().numpy().item", "label[].cpu().numpy().item", "[].cpu().numpy().item", "[].cpu", "[].cpu", "label[].cpu", "[].cpu", "label[].cpu", "[].cpu", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu().numpy", "[].cpu().numpy", "label[].cpu", "[].cpu", "label[].cpu", "[].cpu", "label[].cpu", "[].cpu", "label[].cpu", "[].cpu"], "function", ["None"], ["def", "evaluate", "(", "loader", ",", "len_of_dataset", ",", "args", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "with", "open", "(", "'data/'", "+", "args", ".", "dataset", "+", "'/loc_vec.npy'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "loc_coord", "=", "np", ".", "load", "(", "f", ")", "[", "1", ":", "]", "\n", "", "n_classes", "=", "214", "if", "args", ".", "dataset", "==", "'icube'", "else", "394", "\n", "if", "args", ".", "network", "==", "'baseline'", ":", "\n", "        ", "logits", "=", "loc_coord", "[", "all_classes", "]", "# [classes=214, vec_length=2]", "\n", "", "else", ":", "\n", "        ", "with", "open", "(", "'data/'", "+", "args", ".", "dataset", "+", "'/loc_vec_trained_'", "+", "str", "(", "n_classes", ")", "+", "'.npy'", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "logits", "=", "np", ".", "load", "(", "f", ")", "[", "all_classes", "]", "# [classes=214 or 394, vec_length=2, 214 or 394]", "\n", "\n", "", "", "logits", "=", "torch", ".", "from_numpy", "(", "logits", ")", ".", "float", "(", ")", "\n", "logits", "=", "logits", "/", "logits", ".", "norm", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "logits", ".", "to", "(", "device", ")", "\n", "\n", "top1_accuracy_all", "=", "0", "\n", "top2_accuracy_all", "=", "0", "\n", "top3_accuracy_all", "=", "0", "\n", "top5_accuracy_all", "=", "0", "\n", "top10_accuracy_all", "=", "0", "\n", "\n", "top1_dists", "=", "0.0", "\n", "top2_dists", "=", "0.0", "\n", "top3_dists", "=", "0.0", "\n", "top5_dists", "=", "0.0", "\n", "top10_dists", "=", "0.0", "\n", "\n", "# draw plots", "\n", "record_length", "=", "30", "\n", "top1_count", "=", "[", "0", "]", "*", "record_length", "\n", "top2_count", "=", "[", "0", "]", "*", "record_length", "\n", "top3_count", "=", "[", "0", "]", "*", "record_length", "\n", "top5_count", "=", "[", "0", "]", "*", "record_length", "\n", "top10_count", "=", "[", "0", "]", "*", "record_length", "\n", "\n", "nan_count", "=", "0", "\n", "iters", "=", "0", "\n", "loss_all", "=", "0", "\n", "\n", "print", "(", "'Evaulating...'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "label", "in", "loader", ":", "\n", "            ", "iters", "+=", "1", "\n", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "edge_index", "=", "torch", ".", "tensor", "(", "[", "[", "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "0", "]", ",", "\n", "[", "1", ",", "0", ",", "2", ",", "1", ",", "3", ",", "2", ",", "0", ",", "3", "]", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "output", "=", "model", "(", "data", ",", "edge_index", ")", "\n", "# output = output / output.norm(dim=1, keepdim=True)", "\n", "new_output", "=", "torch", ".", "zeros", "(", "(", "output", ".", "shape", "[", "0", "]", ",", "n_classes", ")", ")", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "output", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "new_output", "[", "i", "]", "=", "(", "output", "[", "i", "]", "*", "logits", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "top_p", ",", "top_class", "=", "new_output", ".", "topk", "(", "10", ")", "\n", "\n", "top1", "=", "[", "]", "\n", "top2", "=", "[", "]", "\n", "top3", "=", "[", "]", "\n", "top5", "=", "[", "]", "\n", "top10", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "top_class", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "if", "any", "(", "top_class", "[", "i", "]", ">", "n_classes", "-", "1", ")", "or", "any", "(", "top_class", "[", "i", "]", "<", "0", ")", ":", "\n", "                    ", "nan_count", "+=", "1", "\n", "print", "(", "f'Nan result detected! Count: {nan_count}'", ")", "\n", "top_class", "[", "i", "]", "=", "torch", ".", "randint", "(", "0", ",", "n_classes", ",", "top_class", "[", "i", "]", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "top1", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "==", "top_class", "[", "i", "]", "[", "0", "]", "else", "[", "0", "]", "\n", "top2", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "2", "]", "else", "[", "0", "]", "\n", "top3", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "3", "]", "else", "[", "0", "]", "\n", "top5", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "5", "]", "else", "[", "0", "]", "\n", "top10", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "10", "]", "else", "[", "0", "]", "\n", "\n", "if", "(", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", ">=", "n_classes", ")", "or", "(", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "<", "0", ")", "or", "any", "(", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", ">=", "n_classes", "for", "k", "in", "range", "(", "0", ",", "10", ")", "]", ")", "or", "any", "(", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "<", "0", "for", "k", "in", "range", "(", "0", ",", "10", ")", "]", ")", ":", "\n", "                    ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "top1_dist", "=", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", "-", "loc_coord", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", ")", "\n", "top2_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", "-", "loc_coord", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", ")", "for", "k", "in", "range", "(", "0", ",", "2", ")", "]", ")", "/", "2", "\n", "top3_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", "-", "loc_coord", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", ")", "for", "k", "in", "range", "(", "0", ",", "3", ")", "]", ")", "/", "3", "\n", "top5_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", "-", "loc_coord", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", ")", "for", "k", "in", "range", "(", "0", ",", "5", ")", "]", ")", "/", "5", "\n", "top10_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "all_dict_to_loc", "[", "label", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", "-", "loc_coord", "[", "all_dict_to_loc", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "]", "]", ")", "for", "k", "in", "range", "(", "0", ",", "10", ")", "]", ")", "/", "10", "\n", "\n", "for", "dist", "in", "range", "(", "record_length", ")", ":", "\n", "                    ", "if", "top1_dist", "<=", "dist", "+", "1", ":", "\n", "                        ", "top1_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top2_dist", "<=", "dist", "+", "1", ":", "\n", "                        ", "top2_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top3_dist", "<=", "dist", "+", "1", ":", "\n", "                        ", "top3_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top5_dist", "<=", "dist", "+", "1", ":", "\n", "                        ", "top5_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top10_dist", "<=", "dist", "+", "1", ":", "\n", "                        ", "top10_count", "[", "dist", "]", "+=", "1", "\n", "\n", "", "", "top1_dists", "+=", "top1_dist", "\n", "top2_dists", "+=", "top2_dist", "\n", "top3_dists", "+=", "top3_dist", "\n", "top5_dists", "+=", "top5_dist", "\n", "top10_dists", "+=", "top10_dist", "\n", "\n", "if", "i", "%", "4", "==", "0", ":", "\n", "                    ", "print", "(", "f'{iters} iter {int(i/4)}th data: gt: {all_dict_to_loc[label[i].cpu().numpy().item()]}, top3: {[all_dict_to_loc[i] for i in top_class[i][:3].cpu().numpy().tolist()]}, top1 dist: {top1_dist:.3f}, top2 dist: {top2_dist:.3f}, top3 dist: {top3_dist:.3f}'", ")", "\n", "\n", "", "", "top1_accuracy_all", "+=", "sum", "(", "top1", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top1", ")", "\n", "top2_accuracy_all", "+=", "sum", "(", "top2", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top2", ")", "\n", "top3_accuracy_all", "+=", "sum", "(", "top3", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top3", ")", "\n", "top5_accuracy_all", "+=", "sum", "(", "top5", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top5", ")", "\n", "top10_accuracy_all", "+=", "sum", "(", "top10", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top10", ")", "\n", "\n", "# loss = criterion(output, label)", "\n", "# loss_all += loss.item()", "\n", "\n", "# print(iters, '/', len(loader), ', top1:', sum(top1) / len(top1), '')", "\n", "print", "(", "f'{iters}/{len(loader)}, top1: {sum(top1) / len(top1):.3f}, top2: {sum(top2) / len(top2):.3f}, top3: {sum(top3) / len(top3):.3f}, top5: {sum(top5) / len(top5):.3f}, top10: {sum(top10) / len(top10):.3f}'", ")", "\n", "\n", "", "", "top1_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top1_count", "]", "\n", "top2_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top2_count", "]", "\n", "top3_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top3_count", "]", "\n", "top5_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top5_count", "]", "\n", "top10_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top10_count", "]", "\n", "\n", "print", "(", "f'[Warning] {nan_count} Nan result found in total.'", ")", "\n", "\n", "return", "top1_accuracy_all", "/", "len_of_dataset", ",", "top2_accuracy_all", "/", "len_of_dataset", ",", "top3_accuracy_all", "/", "len_of_dataset", ",", "top5_accuracy_all", "/", "len_of_dataset", ",", "top10_accuracy_all", "/", "len_of_dataset", ",", "top1_dists", "/", "len_of_dataset", ",", "top2_dists", "/", "len_of_dataset", ",", "top3_dists", "/", "len_of_dataset", ",", "top5_dists", "/", "len_of_dataset", ",", "top10_dists", "/", "len_of_dataset", ",", "top1_count", ",", "top2_count", ",", "top3_count", ",", "top5_count", ",", "top10_count", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.None.eval-gln.evaluate": [[17, 142], ["model.eval", "print", "print", "open", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "numpy.load", "torch.tensor().to", "torch.tensor().to", "model", "criterion", "criterion.item", "torch.exp", "torch.exp", "model.topk", "criterion", "criterion.item", "data.to", "label.view().to", "label.view", "torch.mean().item", "torch.mean().item", "model.topk", "range", "print", "torch.tensor", "torch.tensor", "numpy.linalg.norm", "range", "len", "len", "len", "len", "len", "label.view", "torch.mean", "torch.mean", "any", "any", "print", "torch.randint().to", "torch.randint().to", "sum", "sum", "sum", "sum", "print", "sum", "sum", "sum", "sum", "sum", "equals.type", "len", "torch.randint", "torch.randint", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "[].cpu().numpy", "range", "range", "range", "range", "int", "[].cpu().numpy", "[].cpu", "[].cpu", "[].cpu().numpy", "[].cpu().numpy", "[].cpu().numpy", "[].cpu().numpy", "[].cpu", "[].cpu", "[].cpu", "[].cpu"], "function", ["None"], ["def", "evaluate", "(", "loader", ",", "len_of_dataset", ",", "args", ",", "eval_dist", "=", "True", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "==", "'icube'", ":", "\n", "        ", "loc_vec", "=", "'data/icube/loc_vec.npy'", "\n", "n_classes", "=", "214", "\n", "", "else", ":", "\n", "        ", "loc_vec", "=", "'data/wcp/loc_vec.npy'", "\n", "n_classes", "=", "394", "\n", "", "with", "open", "(", "loc_vec", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "loc_coord", "=", "np", ".", "load", "(", "f", ")", "[", "1", ":", "]", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "\n", "accuracy_all", "=", "0", "\n", "top1_accuracy_all", "=", "0", "\n", "top2_accuracy_all", "=", "0", "\n", "top3_accuracy_all", "=", "0", "\n", "top5_accuracy_all", "=", "0", "\n", "top10_accuracy_all", "=", "0", "\n", "\n", "top1_dists", "=", "0.0", "\n", "top2_dists", "=", "0.0", "\n", "top3_dists", "=", "0.0", "\n", "top5_dists", "=", "0.0", "\n", "top10_dists", "=", "0.0", "\n", "\n", "# draw plots", "\n", "record_length", "=", "30", "\n", "top1_count", "=", "[", "0", "]", "*", "record_length", "\n", "top2_count", "=", "[", "0", "]", "*", "record_length", "\n", "top3_count", "=", "[", "0", "]", "*", "record_length", "\n", "top5_count", "=", "[", "0", "]", "*", "record_length", "\n", "top10_count", "=", "[", "0", "]", "*", "record_length", "\n", "\n", "nan_count", "=", "0", "\n", "iters", "=", "0", "\n", "loss_all", "=", "0", "\n", "\n", "print", "(", "'Evaulating...'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "label", "in", "tqdm", "(", "loader", ")", ":", "\n", "            ", "iters", "+=", "1", "\n", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "edge_index", "=", "torch", ".", "tensor", "(", "[", "[", "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "0", "]", ",", "\n", "[", "1", ",", "0", ",", "2", ",", "1", ",", "3", ",", "2", ",", "0", ",", "3", "]", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "output", "=", "model", "(", "data", ",", "edge_index", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "label", ")", "\n", "loss_all", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "ps", "=", "torch", ".", "exp", "(", "output", ")", "\n", "top_p", ",", "top_class", "=", "output", ".", "topk", "(", "1", ",", "dim", "=", "1", ")", "\n", "\n", "equals", "=", "top_class", "==", "label", ".", "view", "(", "*", "top_class", ".", "shape", ")", "\n", "accuracy_all", "+=", "torch", ".", "mean", "(", "equals", ".", "type", "(", "torch", ".", "FloatTensor", ")", ")", ".", "item", "(", ")", "*", "label", ".", "shape", "[", "0", "]", "\n", "\n", "if", "eval_dist", ":", "\n", "                ", "top_p", ",", "top_class", "=", "output", ".", "topk", "(", "10", ")", "\n", "top1", "=", "[", "]", "\n", "top2", "=", "[", "]", "\n", "top3", "=", "[", "]", "\n", "top5", "=", "[", "]", "\n", "top10", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "top_class", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "if", "any", "(", "top_class", "[", "i", "]", ">", "n_classes", "-", "1", ")", "or", "any", "(", "top_class", "[", "i", "]", "<", "0", ")", ":", "\n", "                        ", "nan_count", "+=", "1", "\n", "print", "(", "f'Nan result detected! Count: {nan_count}'", ")", "\n", "top_class", "[", "i", "]", "=", "torch", ".", "randint", "(", "0", ",", "n_classes", ",", "top_class", "[", "i", "]", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "top1", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "==", "top_class", "[", "i", "]", "[", "0", "]", "else", "[", "0", "]", "\n", "top2", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "2", "]", "else", "[", "0", "]", "\n", "top3", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "3", "]", "else", "[", "0", "]", "\n", "top5", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "5", "]", "else", "[", "0", "]", "\n", "top10", "+=", "[", "1", "]", "if", "label", "[", "i", "]", "in", "top_class", "[", "i", "]", "[", ":", "10", "]", "else", "[", "0", "]", "\n", "\n", "top1_dist", "=", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "label", "[", "i", "]", "]", "-", "loc_coord", "[", "top_class", "[", "i", "]", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "\n", "top2_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "label", "[", "i", "]", "]", "-", "loc_coord", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "for", "k", "in", "range", "(", "0", ",", "2", ")", "]", ")", "/", "2", "\n", "top3_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "label", "[", "i", "]", "]", "-", "loc_coord", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "for", "k", "in", "range", "(", "0", ",", "3", ")", "]", ")", "/", "3", "\n", "top5_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "label", "[", "i", "]", "]", "-", "loc_coord", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "for", "k", "in", "range", "(", "0", ",", "5", ")", "]", ")", "/", "5", "\n", "top10_dist", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "loc_coord", "[", "label", "[", "i", "]", "]", "-", "loc_coord", "[", "top_class", "[", "i", "]", "[", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "for", "k", "in", "range", "(", "0", ",", "10", ")", "]", ")", "/", "10", "\n", "\n", "for", "dist", "in", "range", "(", "record_length", ")", ":", "\n", "                        ", "if", "top1_dist", "<=", "dist", "+", "1", ":", "\n", "                            ", "top1_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top2_dist", "<=", "dist", "+", "1", ":", "\n", "                            ", "top2_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top3_dist", "<=", "dist", "+", "1", ":", "\n", "                            ", "top3_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top5_dist", "<=", "dist", "+", "1", ":", "\n", "                            ", "top5_count", "[", "dist", "]", "+=", "1", "\n", "", "if", "top10_dist", "<=", "dist", "+", "1", ":", "\n", "                            ", "top10_count", "[", "dist", "]", "+=", "1", "\n", "\n", "", "", "top1_dists", "+=", "top1_dist", "\n", "top2_dists", "+=", "top2_dist", "\n", "top3_dists", "+=", "top3_dist", "\n", "top5_dists", "+=", "top5_dist", "\n", "top10_dists", "+=", "top10_dist", "\n", "\n", "if", "i", "%", "4", "==", "0", ":", "\n", "                        ", "print", "(", "f'{iters} iter {int(i/4)}th data: gt: {label[i]}, top3: {top_class[i][:3].cpu().numpy()}, top1 dist: {top1_dist:.3f}, top2 dist: {top2_dist:.3f}, top3 dist: {top3_dist:.3f}'", ")", "\n", "\n", "", "", "top1_accuracy_all", "+=", "sum", "(", "top1", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top1", ")", "\n", "top2_accuracy_all", "+=", "sum", "(", "top2", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top2", ")", "\n", "top3_accuracy_all", "+=", "sum", "(", "top3", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top3", ")", "\n", "top5_accuracy_all", "+=", "sum", "(", "top5", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top5", ")", "\n", "top10_accuracy_all", "+=", "sum", "(", "top10", ")", "*", "label", ".", "shape", "[", "0", "]", "/", "len", "(", "top10", ")", "\n", "\n", "", "loss", "=", "criterion", "(", "output", ",", "label", ")", "\n", "loss_all", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "# print(iters, '/', len(loader), ', top1:', sum(top1) / len(top1), '')", "\n", "if", "eval_dist", ":", "\n", "                ", "print", "(", "f'{iters}/{len(loader)}, top1: {sum(top1) / len(top1):.3f}, top2: {sum(top2) / len(top2):.3f}, top3: {sum(top3) / len(top3):.3f}, top5: {sum(top5) / len(top5):.3f}, top10: {sum(top10) / len(top10):.3f}'", ")", "\n", "\n", "", "", "", "print", "(", "f'[Warning] {nan_count} Nan result found in total.'", ")", "\n", "\n", "if", "eval_dist", ":", "\n", "        ", "top1_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top1_count", "]", "\n", "top2_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top2_count", "]", "\n", "top3_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top3_count", "]", "\n", "top5_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top5_count", "]", "\n", "top10_count", "=", "[", "i", "/", "len_of_dataset", "for", "i", "in", "top10_count", "]", "\n", "\n", "return", "loss_all", "/", "len_of_dataset", ",", "top1_accuracy_all", "/", "len_of_dataset", ",", "top2_accuracy_all", "/", "len_of_dataset", ",", "top3_accuracy_all", "/", "len_of_dataset", ",", "top5_accuracy_all", "/", "len_of_dataset", ",", "top10_accuracy_all", "/", "len_of_dataset", ",", "top1_dists", "/", "len_of_dataset", ",", "top2_dists", "/", "len_of_dataset", ",", "top3_dists", "/", "len_of_dataset", ",", "top5_dists", "/", "len_of_dataset", ",", "top10_dists", "/", "len_of_dataset", ",", "top1_count", ",", "top2_count", ",", "top3_count", ",", "top5_count", ",", "top10_count", "\n", "", "else", ":", "\n", "        ", "return", "loss_all", "/", "len_of_dataset", ",", "accuracy_all", "/", "len_of_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.LocationNet.__init__": [[11, 30], ["torch.Module.__init__", "torchvision.models.resnet152", "models.LocationNet.cnn_model.parameters", "Identity", "models.LocationGraphNet", "torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__init__", "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "zero_shot", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "zero_shot", "=", "zero_shot", "\n", "\n", "self", ".", "cnn_model", "=", "torchvision", ".", "models", ".", "resnet152", "(", "pretrained", "=", "True", ")", "\n", "for", "param", "in", "self", ".", "cnn_model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "class", "Identity", "(", "nn", ".", "Module", ")", ":", "\n", "            ", "def", "__init__", "(", "self", ")", ":", "\n", "                ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "                ", "return", "x", "\n", "\n", "", "", "self", ".", "cnn_model", ".", "fc", "=", "Identity", "(", ")", "\n", "\n", "self", ".", "location_graph_net", "=", "LocationGraphNet", "(", "args", ",", "zero_shot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.LocationNet.forward": [[31, 44], ["models.LocationNet.cnn_model().view", "torch_geometric.data.DataLoader", "iter().next", "models.LocationNet.location_graph_net", "torch_geometric.data.Data", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.LocationNet.cnn_model", "range", "len", "iter", "torch.cat.view", "torch.cat.view", "torch.cat.view", "x[].repeat", "range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "x", "=", "self", ".", "cnn_model", "(", "x", ".", "view", "(", "-", "1", ",", "3", ",", "224", ",", "224", ")", ")", ".", "view", "(", "-", "1", ",", "4", ",", "2048", ")", "\n", "\n", "data_list", "=", "[", "torch_geometric", ".", "data", ".", "Data", "(", "x", "=", "x", "[", "idx", "]", ",", "edge_index", "=", "edge_index", ")", "for", "idx", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", "]", "\n", "loader", "=", "DataLoader", "(", "data_list", ",", "batch_size", "=", "len", "(", "data_list", ")", ",", "shuffle", "=", "False", ")", "\n", "data", "=", "iter", "(", "loader", ")", ".", "next", "(", ")", "\n", "\n", "x", "=", "self", ".", "location_graph_net", "(", "data", ")", "\n", "if", "self", ".", "zero_shot", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", "[", "i", "]", ".", "repeat", "(", "4", ",", "1", ")", "for", "i", "in", "range", "(", "data", ".", "num_graphs", ")", "]", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.LocationGraphNet.__init__": [[47, 64], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch_geometric.nn.GATConv", "torch_geometric.nn.GCNConv", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "zero_shot", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "zero_shot", "=", "zero_shot", "\n", "\n", "if", "args", ".", "network", "==", "'gat'", ":", "# 'gat", "\n", "            ", "self", ".", "conv1", "=", "GATConv", "(", "2048", ",", "256", ")", "\n", "", "else", ":", "# 'gcn' or 'baseline'", "\n", "            ", "self", ".", "conv1", "=", "GCNConv", "(", "2048", ",", "256", ")", "\n", "\n", "", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n", "if", "zero_shot", "and", "args", ".", "network", "==", "'baseline'", ":", "\n", "            ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", "*", "4", ",", "2", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'icube'", ":", "\n", "            ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", "*", "4", ",", "214", ")", "\n", "", "else", ":", "# wcp", "\n", "            ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", "*", "4", ",", "394", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.LocationGraphNet.forward": [[65, 79], ["torch.relu", "torch.relu", "torch.relu", "models.LocationGraphNet.bn1", "torch.dropout", "torch.dropout", "torch.dropout", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.LocationGraphNet.fc1", "models.LocationGraphNet.conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "x[].view", "range", "x[].repeat", "range"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "edge_index", "\n", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ",", "edge_index", ")", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", "[", "i", "*", "4", ":", "(", "i", "+", "1", ")", "*", "4", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "i", "in", "range", "(", "data", ".", "num_graphs", ")", "]", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "\n", "if", "not", "self", ".", "zero_shot", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x", "[", "i", "]", ".", "repeat", "(", "4", ",", "1", ")", "for", "i", "in", "range", "(", "data", ".", "num_graphs", ")", "]", ")", "\n", "\n", "", "return", "x", "if", "self", ".", "zero_shot", "else", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.MapGraphNet.__init__": [[82, 89], ["torch.Module.__init__", "torch_geometric.nn.GCNConv", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "output_dim", "=", "214", "if", "args", ".", "dataset", "==", "'icube'", "else", "394", "\n", "\n", "self", ".", "conv1", "=", "GCNConv", "(", "2", ",", "output_dim", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "output_dim", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "output_dim", ",", "output_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.models.MapGraphNet.forward": [[90, 97], ["torch.relu", "torch.relu", "torch.relu", "models.MapGraphNet.bn1", "torch.dropout", "torch.dropout", "torch.dropout", "models.MapGraphNet.fc1", "models.MapGraphNet.conv1", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ",", "dist_max", "=", "None", ",", "dist_argmax", "=", "None", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ",", "edge_index", ")", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", ",", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.IndoorDataset.__init__": [[10, 17], ["sorted", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "dataset", "=", "''", ",", "transform", "=", "None", ",", "zero_shot", "=", "False", ")", ":", "\n", "        ", "self", ".", "pics", "=", "sorted", "(", "os", ".", "listdir", "(", "data_dir", ")", ")", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "zero_shot", "=", "zero_shot", "\n", "if", "self", ".", "zero_shot", ":", "\n", "            ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.IndoorDataset.__len__": [[18, 20], ["int", "len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "len", "(", "self", ".", "pics", ")", "/", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.IndoorDataset.__getitem__": [[21, 50], ["enumerate", "torch.cat", "torch.cat", "PIL.Image.open", "PIL.Image.open.copy", "PIL.Image.open.close", "all_data.append", "all_label.append", "os.path.join", "os.path.splitext", "int", "torch.LongTensor", "torch.LongTensor", "datasets.IndoorDataset.transform", "datasets.IndoorDataset.unsqueeze", "open", "pickle.load", "file_name.split", "int", "file_name.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file_paths", "=", "self", ".", "pics", "[", "idx", "*", "4", ":", "(", "idx", "+", "1", ")", "*", "4", "]", "\n", "\n", "all_data", "=", "[", "]", "\n", "all_label", "=", "[", "]", "\n", "for", "count", ",", "file_path", "in", "enumerate", "(", "file_paths", ")", ":", "\n", "            ", "temp", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "file_path", ")", ")", "\n", "data", "=", "temp", ".", "copy", "(", ")", "\n", "temp", ".", "close", "(", ")", "\n", "\n", "file_name", "=", "os", ".", "path", ".", "splitext", "(", "file_path", ")", "[", "0", "]", "\n", "if", "self", ".", "zero_shot", ":", "\n", "                ", "label", "=", "int", "(", "file_name", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", "\n", "with", "open", "(", "'data/'", "+", "self", ".", "dataset", "+", "'/all_loc_to_dict.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "                    ", "loc_to_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "label", "=", "torch", ".", "LongTensor", "(", "(", "loc_to_dict", "[", "label", "]", "-", "1", ",", ")", ")", "# minus 1 to 0-index labeling [0, 213 or 393]", "\n", "", "else", ":", "\n", "                ", "label", "=", "torch", ".", "LongTensor", "(", "(", "int", "(", "file_name", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", "-", "1", ",", ")", ")", "# minus 1 to 0-index labeling [0, 213]", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "                ", "data", "=", "self", ".", "transform", "(", "data", ")", "\n", "\n", "", "all_data", ".", "append", "(", "data", ".", "unsqueeze", "(", "0", ")", ")", "\n", "all_label", ".", "append", "(", "label", ")", "\n", "\n", "", "data", "=", "torch", ".", "cat", "(", "all_data", ")", "\n", "label", "=", "torch", ".", "cat", "(", "all_label", ")", "\n", "\n", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__init__": [[53, 56], ["open", "numpy.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "with", "open", "(", "'data/'", "+", "args", ".", "dataset", "+", "'/loc_vec.npy'", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "loc_vec", "=", "np", ".", "load", "(", "f", ")", "[", "1", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "loc_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.coldmanck_zero-shot-indoor-localization-release.lib.datasets.MapDataset.__getitem__": [[60, 62], ["torch.FloatTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "torch", ".", "FloatTensor", "(", "(", "self", ".", "loc_vec", "[", "idx", "]", ")", ")", ",", "torch", ".", "LongTensor", "(", "(", "idx", ",", ")", ")", "", "", "", ""]]}