{"home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.Net.__init__": [[16, 21], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.__init__"], ["\t", "def", "__init__", "(", "self", ",", "S", "=", "7", ")", ":", "\n", "\t\t", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "torch", ".", "nn", ".", "Linear", "(", "S", "*", "S", ",", "S", "*", "S", ")", "\n", "self", ".", "fc2", "=", "torch", ".", "nn", ".", "Linear", "(", "S", "*", "S", ",", "S", "*", "S", ")", "\n", "self", ".", "fc3", "=", "torch", ".", "nn", ".", "Linear", "(", "S", "*", "S", ",", "S", "*", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.Net.forward": [[22, 28], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "metamer_distribution_generator.Net.fc3", "torch.sigmoid", "torch.sigmoid", "metamer_distribution_generator.Net.fc1", "metamer_distribution_generator.Net.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "\n", "return", "F", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.softmax": [[9, 13], ["numpy.exp", "np.exp.sum", "numpy.max"], "function", ["None"], ["def", "softmax", "(", "x", ")", ":", "\n", "    ", "\"\"\"Compute softmax values for each sets of scores in x.\"\"\"", "\n", "e_x", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ")", ")", "\n", "return", "e_x", "/", "e_x", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.gibbs_sample": [[35, 51], ["numpy.random.choice", "numpy.arange", "range", "numpy.random.shuffle", "np.random.choice.copy", "torch.from_numpy().float", "torch.from_numpy().float", "network().detach().numpy().reshape", "numpy.random.rand", "torch.from_numpy", "torch.from_numpy", "network().detach().numpy", "network().detach", "network"], "function", ["None"], ["def", "gibbs_sample", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "network", "=", "network", ")", ":", "\n", "\n", "\t", "M", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "S", "*", "S", ",", "replace", "=", "True", ")", "\n", "idxs", "=", "np", ".", "arange", "(", "S", "*", "S", ")", "\n", "for", "sweep", "in", "range", "(", "numSweeps", ")", ":", "\n", "\t\t", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "for", "i", "in", "idxs", ":", "\n", "\t\t\t", "M_eval", "=", "M", ".", "copy", "(", ")", "\n", "M_eval", "[", "i", "]", "=", "-", "1", "\n", "masked", "=", "torch", ".", "from_numpy", "(", "M_eval", ")", ".", "float", "(", ")", "\n", "preds", "=", "network", "(", "masked", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "(", "S", "*", "S", ",", ")", ")", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "preds", "[", "i", "]", ":", "\n", "\t\t\t\t", "M", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "M", "[", "i", "]", "=", "0", "\n", "", "", "", "return", "M", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs": [[53, 66], ["torch.from_numpy().float", "torch.from_numpy().float", "numpy.arange", "range", "torch.from_numpy().float.detach().numpy", "numpy.random.shuffle", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.clone().detach", "torch.rand", "torch.rand", "torch.from_numpy().float.detach", "numpy.random.choice().reshape", "network", "torch.from_numpy().float.clone", "numpy.random.choice"], "function", ["None"], ["", "def", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "430", ",", "network", "=", "network", ")", ":", "\n", "\t", "M", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "S", "*", "S", "*", "batch_size", ",", "replace", "=", "True", ")", ".", "reshape", "(", "(", "batch_size", ",", "S", "*", "S", ")", ")", ")", ".", "float", "(", ")", "\n", "idxs", "=", "np", ".", "arange", "(", "S", "*", "S", ")", "\n", "for", "sweep", "in", "range", "(", "numSweeps", ")", ":", "\n", "\t\t", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "for", "i", "in", "idxs", ":", "\n", "\t\t\t", "M_eval", "=", "M", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "M_eval", "[", ":", ",", "i", "]", "=", "-", "1", "\n", "preds", "=", "network", "(", "M_eval", ")", "[", ":", ",", "i", "]", "\n", "r", "=", "torch", ".", "rand", "(", "batch_size", ")", "\n", "M", "[", "r", "<", "preds", ",", "i", "]", "=", "1", "\n", "M", "[", "r", ">=", "preds", ",", "i", "]", "=", "0", "\n", "", "", "return", "M", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.__init__": [[35, 161], ["small_env.BattleshipEnv.seed", "range", "numpy.asarray", "gym.spaces.Discrete", "numpy.zeros", "range", "numpy.load", "numpy.load().reshape", "numpy.reshape", "numpy.ones", "gym.spaces.Box", "gym.spaces.Box", "numpy.prod", "action_converter.append", "range", "numpy.load", "numpy.load().reshape", "set", "numpy.load().reshape", "numpy.load", "numpy.random.choice", "numpy.reshape", "range", "numpy.load", "len", "range", "numpy.arange", "abstract_task_distributions.sample_task", "metamer_distribution_generator.batch_gibbs().reshape", "tuple", "len", "numpy.where", "numpy.random.choice", "numpy.reshape", "numpy.load", "len", "tuple", "numpy.load", "network.load_state_dict", "network.load_state_dict", "metamer_distribution_generator.batch_gibbs().reshape", "numpy.reshape.flatten", "numpy.reshape.flatten", "numpy.load().reshape", "numpy.load", "numpy.random.choice", "list", "torch.load", "torch.load", "metamer_distribution_generator.batch_gibbs", "numpy.sum", "numpy.sum", "metamer_distribution_generator.batch_gibbs().reshape", "numpy.arange", "abstract_task_distributions.sample_task", "range", "numpy.reshape.flatten", "metamer_distribution_generator.batch_gibbs", "numpy.load", "metamer_distribution_generator.batch_gibbs().reshape", "len", "metamer_distribution_generator.batch_gibbs", "numpy.sum", "numpy.sum", "metamer_distribution_generator.batch_gibbs().reshape", "metamer_distribution_generator.batch_gibbs", "metamer_distribution_generator.batch_gibbs"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.sample_task", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.sample_task", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs"], ["def", "__init__", "(", "self", ",", "rules", "=", "'chain'", ",", "n_board", "=", "7", ",", "hold_out", "=", "0", ",", "permute", "=", "0", ",", "pretrain", "=", "0", ",", "render_img", "=", "0", ")", ":", "\n", "\n", "\t\t", "self", ".", "viewer", "=", "None", "\n", "self", ".", "seed", "(", ")", "\n", "action_converter", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_board", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "n_board", ")", ":", "\n", "\t\t\t\t", "action_converter", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "self", ".", "action_converter", "=", "np", ".", "asarray", "(", "action_converter", ")", "\n", "self", ".", "n_board", "=", "n_board", "\n", "\n", "self", ".", "hold_out", "=", "hold_out", "\n", "self", ".", "rules", "=", "rules", "\n", "self", ".", "permute", "=", "permute", "\n", "self", ".", "pretrain", "=", "pretrain", "\n", "self", ".", "render_img", "=", "render_img", "\n", "if", "self", ".", "permute", ":", "\n", "\t\t\t", "self", ".", "permutation", "=", "np", ".", "load", "(", "'7x7_permutation.npy'", ")", "\n", "\n", "", "if", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t", "self", ".", "heldout", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample.npy'", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t", "for", "i", "in", "range", "(", "len", "(", "self", ".", "heldout", ")", ")", ":", "\n", "\t\t\t\t\t", "self", ".", "heldout", "[", "i", "]", "=", "self", ".", "heldout", "[", "i", "]", "[", "self", ".", "permutation", "]", "\n", "", "", "self", ".", "maze_idx", "=", "0", "\n", "self", ".", "maze", "=", "np", ".", "reshape", "(", "self", ".", "heldout", "[", "self", ".", "maze_idx", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "start", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample_starts.npy'", ")", "[", "self", ".", "maze_idx", "]", "\n", "\n", "", "else", ":", "\n", "\t\t\t", "if", "hold_out", ">", "0", ":", "\n", "#heldout=[tuple(generate_grid(rules,n=self.n_board).flatten()) for _ in range(hold_out)]", "\n", "\t\t\t\t", "heldout", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample.npy'", ")", ".", "reshape", "(", "(", "-", "1", ",", "49", ")", ")", "\n", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t\t", "for", "i", "in", "range", "(", "len", "(", "heldout", ")", ")", ":", "\n", "\t\t\t\t\t\t", "heldout", "[", "i", "]", "=", "heldout", "[", "i", "]", "[", "self", ".", "permutation", "]", "\n", "", "", "self", ".", "heldout", "=", "set", "(", "[", "tuple", "(", "x", ")", "for", "x", "in", "heldout", "]", ")", "\n", "\n", "", "if", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t", "self", ".", "total_boards", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_task_distribution.npy\"", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "total_boards_starts", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_task_distribution_starts.npy\"", ")", "\n", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "total_boards", ".", "shape", "[", "0", "]", ")", ")", "\n", "gen", "=", "(", "self", ".", "total_boards", "[", "r_idx", "]", ",", "self", ".", "total_boards_starts", "[", "r_idx", "]", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "elif", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t", "gen", "=", "sample_task", "(", "self", ".", "rules", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "\n", "", "else", ":", "\n", "\t\t\t\t", "if", "'gsp'", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_generator.pt\"", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"data/perceptrons_task_distribution_\"", "+", "self", ".", "rules", "[", ":", "-", "5", "]", "+", "\".pt\"", ")", ")", "\n", "\n", "", "self", ".", "size_buffer", "=", "1000", "\n", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "\n", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<", "3", "or", "np", ".", "sum", "(", "grid", ")", ">=", "40", ":", "\n", "\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "\n", "", "gen", "=", "grid", "\n", "\n", "\n", "", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t", "grid", "=", "np", ".", "reshape", "(", "grid", ".", "flatten", "(", ")", "[", "self", ".", "permutation", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "", "if", "hold_out", ">", "0", ":", "\n", "\t\t\t\t", "while", "tuple", "(", "grid", ".", "flatten", "(", ")", ")", "in", "self", ".", "heldout", ":", "\n", "\t\t\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t\t", "self", ".", "total_boards", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_task_distribution.npy\"", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "total_boards_starts", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_task_distribution_starts.npy\"", ")", "\n", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "total_boards", ".", "shape", "[", "0", "]", ")", ")", "\n", "gen", "=", "(", "self", ".", "total_boards", "[", "r_idx", "]", ",", "self", ".", "total_boards_starts", "[", "r_idx", "]", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "elif", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t\t", "gen", "=", "sample_task", "(", "self", ".", "rules", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<", "3", "or", "np", ".", "sum", "(", "grid", ")", ">=", "40", ":", "\n", "\t\t\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "", "gen", "=", "grid", "\n", "", "", "if", "len", "(", "gen", ")", "==", "2", ":", "\n", "\t\t\t\t\t", "grid", ",", "start", "=", "gen", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "grid", "=", "gen", "\n", "hit_idx", "=", "np", ".", "where", "(", "grid", "==", "1", ")", "\n", "choice", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "len", "(", "hit_idx", "[", "0", "]", ")", ")", ")", ",", "size", "=", "1", ")", "\n", "start", "=", "(", "hit_idx", "[", "0", "]", "[", "choice", "]", ",", "hit_idx", "[", "1", "]", "[", "choice", "]", ")", "\n", "", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t\t", "grid", "=", "np", ".", "reshape", "(", "grid", ".", "flatten", "(", ")", "[", "self", ".", "permutation", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "", "", "self", ".", "maze", "=", "grid", "\n", "\n", "", "self", ".", "board", "=", "np", ".", "ones", "(", "self", ".", "maze", ".", "shape", ")", "*", "-", "1", "\n", "self", ".", "current_position", "=", "start", "\n", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "if", "self", ".", "render_img", ":", "\n", "\t\t\t", "self", ".", "observation_space", "=", "Box", "(", "low", "=", "-", "1", ",", "high", "=", "1", ",", "shape", "=", "(", "7", "*", "7", "*", "1", "+", "n_board", "*", "n_board", "+", "1", ",", ")", ",", "dtype", "=", "np", ".", "int8", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "observation_space", "=", "Box", "(", "low", "=", "-", "1", ",", "high", "=", "1", ",", "shape", "=", "(", "n_board", "*", "n_board", "+", "n_board", "*", "n_board", "+", "1", ",", ")", ",", "dtype", "=", "np", ".", "int8", ")", "\n", "", "self", ".", "action_space", "=", "Discrete", "(", "np", ".", "prod", "(", "self", ".", "maze", ".", "shape", ")", ")", "\n", "self", ".", "nA", "=", "n_board", "*", "n_board", "\n", "\n", "self", ".", "prev_reward", "=", "0", "\n", "self", ".", "prev_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "nA", ",", ")", ")", "\n", "\n", "self", ".", "valid_actions", "=", "[", "1", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.seed": [[163, 166], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "\t\t", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.step": [[167, 225], ["small_env.BattleshipEnv._is_goal", "numpy.zeros", "numpy.concatenate", "range", "torch.from_numpy().float", "network().detach().numpy", "small_env.BattleshipEnv.self_hits.keys", "small_env.BattleshipEnv.get_image().flatten", "small_env.BattleshipEnv.board.flatten", "range", "torch.from_numpy", "network().detach", "small_env.BattleshipEnv.board.flatten", "small_env.BattleshipEnv.get_image", "network"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv._is_goal", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "#print(self.tot_solves)", "\n", "#print(action,self.valid_actions,self.valid_actions[action]) ", "\n", "\t\t", "prev_position", "=", "self", ".", "current_position", "\n", "self", ".", "current_position", "=", "self", ".", "action_converter", "[", "action", "]", "\n", "reward", "=", "0", "\n", "\n", "if", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "==", "-", "1", ":", "\n", "\t\t\t", "if", "self", ".", "maze", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "==", "1", ":", "\n", "\t\t\t\t", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "self", ".", "num_hits", "+=", "1", "\n", "reward", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "0", "\n", "reward", "=", "-", "1", "\n", "", "", "else", ":", "\n", "\t\t\t", "reward", "=", "-", "2", "\n", "if", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "not", "in", "self", ".", "self_hits", ".", "keys", "(", ")", ":", "\n", "\t\t\t\t", "self", ".", "self_hits", "[", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "self_hits", "[", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "]", "+=", "1", "\n", "\n", "\n", "\n", "\n", "", "", "if", "self", ".", "_is_goal", "(", ")", ":", "\n", "\t\t\t", "reward", "=", "+", "10", "\n", "done", "=", "True", "\n", "if", "self", ".", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t\t", "self", ".", "maze_idx", "+=", "1", "\n", "", "", "else", ":", "\n", "\t\t\t", "done", "=", "False", "\n", "\n", "", "p_action", "=", "self", ".", "prev_action", "\n", "p_reward", "=", "self", ".", "prev_reward", "\n", "self", ".", "prev_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "nA", ",", ")", ")", "\n", "self", ".", "prev_action", "[", "action", "]", "=", "1", "\n", "self", ".", "prev_reward", "=", "reward", "\n", "\n", "if", "self", ".", "pretrain", ":", "\n", "\t\t\t", "board_tensor", "=", "torch", ".", "from_numpy", "(", "self", ".", "board", ".", "flatten", "(", ")", ")", ".", "float", "(", ")", "\n", "obs", "=", "network", "(", "board_tensor", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "render_img", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "get_image", "(", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "board", ".", "flatten", "(", ")", "\n", "\n", "", "", "obs_array", "=", "np", ".", "concatenate", "(", "(", "obs", ",", "p_action", ",", "[", "p_reward", "]", ")", ")", "\n", "\n", "self", ".", "valid_actions", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nA", ")", ":", "\n", "\t\t\t", "pos", "=", "self", ".", "action_converter", "[", "i", "]", "\n", "if", "self", ".", "board", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", "]", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "valid_actions", "[", "i", "]", "=", "1", "\n", "\n", "\n", "", "", "return", "obs_array", ",", "reward", ",", "done", ",", "{", "'valid_actions'", ":", "self", ".", "valid_actions", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.get_action_mask": [[226, 228], ["None"], "methods", ["None"], ["", "def", "get_action_mask", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "valid_actions", "\n", "", "def", "_is_goal", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv._is_goal": [[228, 230], ["numpy.sum", "numpy.sum"], "methods", ["None"], ["", "def", "_is_goal", "(", "self", ")", ":", "\n", "\t\t", "return", "np", ".", "sum", "(", "self", ".", "board", "==", "1", ")", "==", "np", ".", "sum", "(", "self", ".", "maze", "==", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.get_image": [[231, 243], ["numpy.reshape"], "methods", ["None"], ["", "def", "get_image", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\timg=np.empty((28,28, 1), dtype=np.int8) \n\t\t#fills=[[0,0,255],[255,0,0],[255,255,255]]\n\t\t#fills=[0,128,255]\n\t\tfor r in range(self.board.shape[0]):\n\t\t\tfor c in range(self.board.shape[1]):\n\t\t\t\t#fill=fills[self.board[r,c].astype('int')]\n\t\t\t\timg[4*r:4*r+4,4*c:4*c+4]=self.board[r,c]\n\t\treturn img  \n\t\t\"\"\"", "\n", "return", "np", ".", "reshape", "(", "self", ".", "board", ",", "(", "7", ",", "7", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.set_task": [[245, 258], ["small_env.BattleshipEnv.board.flatten", "numpy.concatenate", "numpy.ones"], "methods", ["None"], ["", "def", "set_task", "(", "self", ",", "task", ",", "start", ")", ":", "\n", "\t\t", "self", ".", "maze", "=", "task", "\n", "self", ".", "board", "=", "np", ".", "ones", "(", "self", ".", "maze", ".", "shape", ")", "*", "-", "1", "\n", "self", ".", "current_position", "=", "start", "\n", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "\n", "obs", "=", "self", ".", "board", ".", "flatten", "(", ")", "\n", "obs_array", "=", "np", ".", "concatenate", "(", "(", "obs", ",", "self", ".", "prev_action", ",", "[", "self", ".", "prev_reward", "]", ")", ")", "\n", "\n", "return", "obs_array", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.reset": [[259, 350], ["numpy.concatenate", "numpy.reshape", "numpy.ones", "torch.from_numpy().float", "network().detach().numpy", "numpy.load", "numpy.random.choice", "len", "numpy.where", "numpy.random.choice", "numpy.reshape", "small_env.BattleshipEnv.get_image().flatten", "small_env.BattleshipEnv.board.flatten", "range", "numpy.arange", "abstract_task_distributions.sample_task", "list", "tuple", "torch.from_numpy", "network().detach", "len", "metamer_distribution_generator.batch_gibbs().reshape", "range", "numpy.reshape.flatten", "numpy.reshape.flatten", "numpy.random.choice", "len", "numpy.where", "numpy.random.choice", "numpy.reshape", "small_env.BattleshipEnv.board.flatten", "small_env.BattleshipEnv.get_image", "len", "numpy.sum", "numpy.sum", "metamer_distribution_generator.batch_gibbs().reshape", "len", "numpy.arange", "abstract_task_distributions.sample_task", "list", "network", "metamer_distribution_generator.batch_gibbs", "metamer_distribution_generator.batch_gibbs().reshape", "range", "numpy.reshape.flatten", "metamer_distribution_generator.batch_gibbs", "numpy.sum", "numpy.sum", "metamer_distribution_generator.batch_gibbs().reshape", "len", "metamer_distribution_generator.batch_gibbs", "metamer_distribution_generator.batch_gibbs"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.sample_task", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.sample_task", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs"], ["", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t", "self", ".", "maze", "=", "np", ".", "reshape", "(", "self", ".", "heldout", "[", "self", ".", "maze_idx", "%", "len", "(", "self", ".", "heldout", ")", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "start", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample_starts.npy'", ")", "[", "self", ".", "maze_idx", "%", "len", "(", "self", ".", "heldout", ")", "]", "\n", "", "else", ":", "\n", "\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "in", "self", ".", "rules", ":", "\n", "#self.total_boards=np.load('data/'+self.rules+\"_task_distribution.npy\").reshape((-1,7,7))", "\n", "#self.total_boards_starts=np.load('data/'+self.rules+\"_task_distribution_starts.npy\")", "\n", "\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "total_boards", ".", "shape", "[", "0", "]", ")", ")", "\n", "gen", "=", "(", "self", ".", "total_boards", "[", "r_idx", "]", ",", "self", ".", "total_boards_starts", "[", "r_idx", "]", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "elif", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t", "gen", "=", "sample_task", "(", "self", ".", "rules", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<", "3", "or", "np", ".", "sum", "(", "grid", ")", ">=", "40", ":", "\n", "\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "\n", "", "gen", "=", "grid", "\n", "", "if", "len", "(", "gen", ")", "==", "2", ":", "\n", "\t\t\t\t", "grid", ",", "start", "=", "gen", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "grid", "=", "gen", "\n", "hit_idx", "=", "np", ".", "where", "(", "grid", "==", "1", ")", "\n", "choice", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "len", "(", "hit_idx", "[", "0", "]", ")", ")", ")", ",", "size", "=", "1", ")", "\n", "start", "=", "(", "hit_idx", "[", "0", "]", "[", "choice", "]", ",", "hit_idx", "[", "1", "]", "[", "choice", "]", ")", "\n", "", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t", "grid", "=", "np", ".", "reshape", "(", "grid", ".", "flatten", "(", ")", "[", "self", ".", "permutation", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "\n", "", "if", "self", ".", "hold_out", ">", "0", ":", "\n", "\t\t\t\t", "while", "tuple", "(", "grid", ".", "flatten", "(", ")", ")", "in", "self", ".", "heldout", ":", "\n", "\t\t\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "in", "self", ".", "rules", ":", "\n", "#self.total_boards=np.load('data/'+self.rules+\"_task_distribution.npy\").reshape((-1,7,7))", "\n", "#self.total_boards_starts=np.load('data/'+self.rules+\"_task_distribution_starts.npy\")", "\n", "\t\t\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "total_boards", ".", "shape", "[", "0", "]", ")", ")", "\n", "gen", "=", "(", "self", ".", "total_boards", "[", "r_idx", "]", ",", "self", ".", "total_boards_starts", "[", "r_idx", "]", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "elif", "'null'", "not", "in", "self", ".", "rules", "and", "'gsp'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t\t", "gen", "=", "sample_task", "(", "self", ".", "rules", ")", "\n", "grid", "=", "gen", "[", "0", "]", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<", "3", "or", "np", ".", "sum", "(", "grid", ")", ">=", "40", ":", "\n", "\t\t\t\t\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "7", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "7", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "", "gen", "=", "grid", "\n", "", "if", "len", "(", "gen", ")", "==", "2", ":", "\n", "\t\t\t\t\t\t", "grid", ",", "start", "=", "gen", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "grid", "=", "gen", "\n", "hit_idx", "=", "np", ".", "where", "(", "grid", "==", "1", ")", "\n", "choice", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "len", "(", "hit_idx", "[", "0", "]", ")", ")", ")", ",", "size", "=", "1", ")", "\n", "start", "=", "(", "hit_idx", "[", "0", "]", "[", "choice", "]", ",", "hit_idx", "[", "1", "]", "[", "choice", "]", ")", "\n", "", "if", "self", ".", "permute", ":", "\n", "\t\t\t\t\t\t", "grid", "=", "np", ".", "reshape", "(", "grid", ".", "flatten", "(", ")", "[", "self", ".", "permutation", "]", ",", "(", "7", ",", "7", ")", ")", "\n", "", "", "", "self", ".", "maze", "=", "grid", "\n", "\n", "", "self", ".", "board", "=", "np", ".", "ones", "(", "self", ".", "maze", ".", "shape", ")", "*", "-", "1", "\n", "self", ".", "current_position", "=", "start", "\n", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "if", "self", ".", "pretrain", ":", "\n", "\t\t\t", "board_tensor", "=", "torch", ".", "from_numpy", "(", "self", ".", "board", ".", "flatten", "(", ")", ")", ".", "float", "(", ")", "\n", "obs", "=", "network", "(", "board_tensor", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "render_img", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "get_image", "(", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "board", ".", "flatten", "(", ")", "\n", "\n", "", "", "obs_array", "=", "np", ".", "concatenate", "(", "(", "obs", ",", "self", ".", "prev_action", ",", "[", "self", ".", "prev_reward", "]", ")", ")", "\n", "self", ".", "valid_actions", "=", "[", "1", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "return", "obs_array", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.render": [[351, 367], ["small_env.BattleshipEnv.get_image", "numpy.asarray().astype", "PIL.Image.fromarray().resize", "numpy.asarray", "numpy.asarray", "PIL.Image.fromarray", "int", "int", "small_env.BattleshipEnv.viewer.imshow", "SimpleImageViewer"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image"], ["", "def", "render", "(", "self", ",", "mode", "=", "'human'", ",", "max_width", "=", "500", ")", ":", "\n", "\t\t", "img", "=", "self", ".", "get_image", "(", ")", "\n", "img", "=", "np", ".", "asarray", "(", "img", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img_height", ",", "img_width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "ratio", "=", "max_width", "/", "img_width", "\n", "img", "=", "PILImage", ".", "fromarray", "(", "img", ")", ".", "resize", "(", "[", "int", "(", "ratio", "*", "img_width", ")", ",", "int", "(", "ratio", "*", "img_height", ")", "]", ")", "\n", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "if", "mode", "==", "'rgb_array'", ":", "\n", "\t\t\t", "return", "img", "\n", "", "elif", "mode", "==", "'human'", ":", "\n", "\t\t\t", "from", "gym", ".", "envs", ".", "classic_control", ".", "rendering", "import", "SimpleImageViewer", "\n", "if", "self", ".", "viewer", "is", "None", ":", "\n", "\t\t\t\t", "self", ".", "viewer", "=", "SimpleImageViewer", "(", ")", "\n", "", "self", ".", "viewer", ".", "imshow", "(", "img", ")", "\n", "\n", "return", "self", ".", "viewer", ".", "isopen", "\n", "", "", "def", "close", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.BattleshipEnv.close": [[367, 371], ["small_env.BattleshipEnv.viewer.close"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "viewer", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "viewer", ".", "close", "(", ")", "\n", "self", ".", "viewer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env.register_small_env": [[372, 374], ["gym.envs.register"], "function", ["None"], ["", "", "", "def", "register_small_env", "(", "env_id", ",", "rules", ",", "n_board", "=", "7", ",", "hold_out", "=", "0", ",", "permute", "=", "0", ",", "max_episode_steps", "=", "60", ",", "pretrain", "=", "0", ",", "render_img", "=", "0", ")", ":", "\n", "\t", "gym", ".", "envs", ".", "register", "(", "id", "=", "env_id", ",", "entry_point", "=", "BattleshipEnv", ",", "max_episode_steps", "=", "max_episode_steps", ",", "kwargs", "=", "{", "'rules'", ":", "rules", ",", "'n_board'", ":", "n_board", ",", "'hold_out'", ":", "hold_out", ",", "'permute'", ":", "permute", ",", "'pretrain'", ":", "pretrain", ",", "'render_img'", ":", "render_img", "}", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.__init__": [[30, 141], ["small_env_4x4.BattleshipEnv.seed", "range", "numpy.asarray", "gym.spaces.Discrete", "numpy.zeros", "range", "numpy.load().reshape", "numpy.reshape", "numpy.load", "numpy.load", "numpy.ones", "gym.spaces.Box", "gym.spaces.Box", "numpy.prod", "action_converter.append", "numpy.load", "numpy.load().reshape", "set", "metamer_distribution_generator.softmax", "range", "numpy.random.choice", "small_env_4x4.BattleshipEnv.full_distribution[].reshape", "network.load_state_dict", "network.eval", "metamer_distribution_generator.batch_gibbs().reshape", "small_env_4x4.BattleshipEnv.null_sample", "tuple", "range", "numpy.load", "numpy.asarray", "range", "numpy.sum", "set", "numpy.arange", "numpy.vstack", "torch.load", "numpy.vstack", "gen[].flatten", "numpy.random.choice", "small_env_4x4.BattleshipEnv.full_distribution[].reshape", "network.load_state_dict", "network.eval", "metamer_distribution_generator.batch_gibbs().reshape", "small_env_4x4.BattleshipEnv.null_sample", "numpy.load", "tuple", "numpy.sum", "numpy.where", "numpy.random.choice", "metamer_distribution_generator.batch_gibbs", "numpy.where", "numpy.random.choice", "numpy.arange", "numpy.vstack", "torch.load", "numpy.vstack", "numpy.sum", "numpy.arange", "numpy.arange", "numpy.where", "numpy.random.choice", "metamer_distribution_generator.batch_gibbs", "numpy.where", "numpy.random.choice", "numpy.sum", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.softmax", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.null_sample", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.null_sample", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs"], ["def", "__init__", "(", "self", ",", "rules", "=", "'chain'", ",", "n_board", "=", "4", ",", "hold_out", "=", "0", ",", "permute", "=", "0", ",", "pretrain", "=", "0", ",", "render_img", "=", "0", ")", ":", "\n", "\n", "\t\t", "self", ".", "viewer", "=", "None", "\n", "self", ".", "seed", "(", ")", "\n", "action_converter", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_board", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "n_board", ")", ":", "\n", "\t\t\t\t", "action_converter", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "self", ".", "action_converter", "=", "np", ".", "asarray", "(", "action_converter", ")", "\n", "self", ".", "n_board", "=", "n_board", "\n", "\n", "self", ".", "hold_out", "=", "hold_out", "\n", "self", ".", "rules", "=", "rules", "\n", "self", ".", "pretrain", "=", "pretrain", "\n", "self", ".", "render_img", "=", "render_img", "\n", "\n", "\n", "\n", "\n", "if", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t", "self", ".", "heldout", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample.npy'", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "\n", "self", ".", "maze_idx", "=", "0", "\n", "self", ".", "maze", "=", "np", ".", "reshape", "(", "self", ".", "heldout", "[", "self", ".", "maze_idx", "]", ",", "(", "4", ",", "4", ")", ")", "\n", "start", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample_starts.npy'", ")", "[", "self", ".", "maze_idx", "]", "\n", "\n", "", "else", ":", "\n", "\t\t\t", "if", "hold_out", ">", "0", ":", "\n", "#heldout=[tuple(generate_grid(rules,n=self.n_board).flatten()) for _ in range(hold_out)]", "\n", "\t\t\t\t", "heldout", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample.npy'", ")", ".", "reshape", "(", "(", "-", "1", ",", "16", ")", ")", "\n", "\n", "self", ".", "heldout", "=", "set", "(", "[", "tuple", "(", "x", ")", "for", "x", "in", "heldout", "]", ")", "\n", "\n", "\n", "", "self", ".", "full_distribution", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_full.npy\"", ")", "\n", "self", ".", "full_probs", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "\"_full_probs.npy\"", ")", "\n", "if", "hold_out", ">", "0", ":", "\n", "\t\t\t\t", "for", "board", "in", "heldout", ":", "\n", "\t\t\t\t\t", "boarda", "=", "np", ".", "asarray", "(", "board", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t\t", "if", "np", ".", "sum", "(", "self", ".", "full_distribution", "[", "i", "]", "==", "boarda", ")", "==", "16", ":", "\n", "\t\t\t\t\t\t\t", "self", ".", "full_probs", "[", "i", "]", "=", "0.0", "\n", "break", "\n", "", "elif", "np", ".", "sum", "(", "self", ".", "full_distribution", "[", "i", "]", ")", "==", "0", ":", "\n", "\t\t\t\t\t\t\t", "self", ".", "full_probs", "[", "i", "]", "=", "0.0", "\n", "\n", "", "", "", "self", ".", "full_probs", "=", "softmax", "(", "self", ".", "full_probs", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "if", "np", ".", "sum", "(", "self", ".", "full_distribution", "[", "i", "]", ")", "==", "0", ":", "\n", "\t\t\t\t\t\t", "self", ".", "full_probs", "[", "i", "]", "=", "0.0", "\n", "", "", "self", ".", "full_probs", "=", "self", ".", "full_probs", "/", "np", ".", "sum", "(", "self", ".", "full_probs", ")", "\n", "", "elif", "hold_out", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "heldout", "=", "set", "(", ")", "\n", "\n", "\n", "", "if", "'null'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "self", ".", "full_probs", ")", "\n", "grid", "=", "self", ".", "full_distribution", "[", "r_idx", "]", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"data/\"", "+", "self", ".", "rules", "+", "\"_fc_generator.pt\"", ")", ")", "\n", "network", ".", "eval", "(", ")", "\n", "self", ".", "size_buffer", "=", "1000", "\n", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "4", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "\n", "grid", "=", "self", ".", "null_sample", "(", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "while", "tuple", "(", "gen", "[", "0", "]", ".", "flatten", "(", ")", ")", "in", "self", ".", "heldout", ":", "\n", "\t\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "self", ".", "full_probs", ")", "\n", "grid", "=", "self", ".", "full_distribution", "[", "r_idx", "]", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"data/\"", "+", "self", ".", "rules", "+", "\"_fc_generator.pt\"", ")", ")", "\n", "network", ".", "eval", "(", ")", "\n", "self", ".", "size_buffer", "=", "1000", "\n", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "4", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "\n", "grid", "=", "self", ".", "null_sample", "(", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "\n", "\n", "\n", "", "", "self", ".", "maze", "=", "grid", "\n", "\n", "", "self", ".", "board", "=", "np", ".", "ones", "(", "self", ".", "maze", ".", "shape", ")", "*", "-", "1", "\n", "self", ".", "current_position", "=", "start", "\n", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "if", "self", ".", "render_img", ":", "\n", "\t\t\t", "self", ".", "observation_space", "=", "Box", "(", "low", "=", "-", "1", ",", "high", "=", "1", ",", "shape", "=", "(", "n_board", "*", "n_board", "*", "1", "+", "n_board", "*", "n_board", "+", "1", ",", ")", ",", "dtype", "=", "np", ".", "int8", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "observation_space", "=", "Box", "(", "low", "=", "-", "1", ",", "high", "=", "1", ",", "shape", "=", "(", "n_board", "*", "n_board", "+", "n_board", "*", "n_board", "+", "1", ",", ")", ",", "dtype", "=", "np", ".", "int8", ")", "\n", "", "self", ".", "action_space", "=", "Discrete", "(", "np", ".", "prod", "(", "self", ".", "maze", ".", "shape", ")", ")", "\n", "self", ".", "nA", "=", "n_board", "*", "n_board", "\n", "\n", "self", ".", "prev_reward", "=", "0", "\n", "self", ".", "prev_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "nA", ",", ")", ")", "\n", "\n", "self", ".", "valid_actions", "=", "[", "1", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.null_sample": [[142, 155], ["metamer_distribution_generator.batch_gibbs().reshape", "numpy.sum", "metamer_distribution_generator.batch_gibbs().reshape", "metamer_distribution_generator.batch_gibbs", "metamer_distribution_generator.batch_gibbs"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.metamer_distribution_generator.batch_gibbs"], ["", "def", "null_sample", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "4", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<", "3", ":", "\n", "\t\t\t", "if", "self", ".", "gibbs_idx", ">=", "self", ".", "size_buffer", ":", "\n", "\t\t\t\t", "self", ".", "gibbs_buffer", "=", "batch_gibbs", "(", "S", "=", "4", ",", "numSweeps", "=", "20", ",", "batch_size", "=", "self", ".", "size_buffer", ",", "network", "=", "network", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "gibbs_idx", "=", "0", "\n", "", "grid", "=", "self", ".", "gibbs_buffer", "[", "self", ".", "gibbs_idx", "]", "\n", "self", ".", "gibbs_idx", "=", "self", ".", "gibbs_idx", "+", "1", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed": [[156, 159], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "\t\t", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.step": [[160, 218], ["small_env_4x4.BattleshipEnv._is_goal", "numpy.zeros", "numpy.concatenate", "range", "torch.from_numpy().float", "network().detach().numpy", "small_env_4x4.BattleshipEnv.self_hits.keys", "small_env_4x4.BattleshipEnv.get_image().flatten", "small_env_4x4.BattleshipEnv.board.flatten", "range", "torch.from_numpy", "network().detach", "small_env_4x4.BattleshipEnv.board.flatten", "small_env_4x4.BattleshipEnv.get_image", "network"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv._is_goal", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "#print(self.tot_solves)", "\n", "#print(action,self.valid_actions,self.valid_actions[action]) ", "\n", "\t\t", "prev_position", "=", "self", ".", "current_position", "\n", "self", ".", "current_position", "=", "self", ".", "action_converter", "[", "action", "]", "\n", "reward", "=", "0", "\n", "\n", "if", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "==", "-", "1", ":", "\n", "\t\t\t", "if", "self", ".", "maze", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "==", "1", ":", "\n", "\t\t\t\t", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "self", ".", "num_hits", "+=", "1", "\n", "reward", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "0", "\n", "reward", "=", "-", "1", "\n", "", "", "else", ":", "\n", "\t\t\t", "reward", "=", "-", "4", "\n", "if", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "not", "in", "self", ".", "self_hits", ".", "keys", "(", ")", ":", "\n", "\t\t\t\t", "self", ".", "self_hits", "[", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "self_hits", "[", "(", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", ")", "]", "+=", "1", "\n", "\n", "\n", "\n", "\n", "", "", "if", "self", ".", "_is_goal", "(", ")", ":", "\n", "\t\t\t", "reward", "=", "+", "5", "\n", "done", "=", "True", "\n", "if", "self", ".", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t\t", "self", ".", "maze_idx", "+=", "1", "\n", "", "", "else", ":", "\n", "\t\t\t", "done", "=", "False", "\n", "\n", "", "p_action", "=", "self", ".", "prev_action", "\n", "p_reward", "=", "self", ".", "prev_reward", "\n", "self", ".", "prev_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "nA", ",", ")", ")", "\n", "self", ".", "prev_action", "[", "action", "]", "=", "1", "\n", "self", ".", "prev_reward", "=", "reward", "\n", "\n", "if", "self", ".", "pretrain", ":", "\n", "\t\t\t", "board_tensor", "=", "torch", ".", "from_numpy", "(", "self", ".", "board", ".", "flatten", "(", ")", ")", ".", "float", "(", ")", "\n", "obs", "=", "network", "(", "board_tensor", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "render_img", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "get_image", "(", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "board", ".", "flatten", "(", ")", "\n", "\n", "", "", "obs_array", "=", "np", ".", "concatenate", "(", "(", "obs", ",", "p_action", ",", "[", "p_reward", "]", ")", ")", "\n", "\n", "self", ".", "valid_actions", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nA", ")", ":", "\n", "\t\t\t", "pos", "=", "self", ".", "action_converter", "[", "i", "]", "\n", "if", "self", ".", "board", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", "]", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "valid_actions", "[", "i", "]", "=", "1", "\n", "\n", "\n", "", "", "return", "obs_array", ",", "reward", ",", "done", ",", "{", "'valid_actions'", ":", "self", ".", "valid_actions", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_action_mask": [[219, 221], ["None"], "methods", ["None"], ["", "def", "get_action_mask", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "valid_actions", "\n", "", "def", "_is_goal", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv._is_goal": [[221, 223], ["numpy.sum", "numpy.sum"], "methods", ["None"], ["", "def", "_is_goal", "(", "self", ")", ":", "\n", "\t\t", "return", "np", ".", "sum", "(", "self", ".", "board", "==", "1", ")", "==", "np", ".", "sum", "(", "self", ".", "maze", "==", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image": [[224, 236], ["numpy.reshape"], "methods", ["None"], ["", "def", "get_image", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\timg=np.empty((28,28, 1), dtype=np.int8) \n\t\t#fills=[[0,0,255],[255,0,0],[255,255,255]]\n\t\t#fills=[0,128,255]\n\t\tfor r in range(self.board.shape[0]):\n\t\t\tfor c in range(self.board.shape[1]):\n\t\t\t\t#fill=fills[self.board[r,c].astype('int')]\n\t\t\t\timg[4*r:4*r+4,4*c:4*c+4]=self.board[r,c]\n\t\treturn img  \n\t\t\"\"\"", "\n", "return", "np", ".", "reshape", "(", "self", ".", "board", ",", "(", "4", ",", "4", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.set_task": [[238, 246], ["numpy.zeros", "small_env_4x4.BattleshipEnv.board.flatten", "numpy.random.choice", "numpy.random.choice", "range"], "methods", ["None"], ["", "def", "set_task", "(", "self", ",", "task", ")", ":", "\n", "\t\t", "self", ".", "maze", "=", "task", "\n", "self", ".", "board", "=", "np", ".", "zeros", "(", "self", ".", "maze", ".", "shape", ")", "\n", "self", ".", "current_position", "=", "[", "np", ".", "random", ".", "choice", "(", "range", "(", "self", ".", "maze", ".", "shape", "[", "0", "]", ")", ")", ",", "np", ".", "random", ".", "choice", "(", "self", ".", "maze", ".", "shape", "[", "1", "]", ")", "]", "\n", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "return", "self", ".", "board", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.reset": [[247, 298], ["numpy.concatenate", "numpy.reshape", "numpy.ones", "torch.from_numpy().float", "network().detach().numpy", "numpy.load", "numpy.random.choice", "small_env_4x4.BattleshipEnv.full_distribution[].reshape", "small_env_4x4.BattleshipEnv.null_sample", "tuple", "small_env_4x4.BattleshipEnv.get_image().flatten", "small_env_4x4.BattleshipEnv.board.flatten", "range", "numpy.arange", "numpy.vstack", "numpy.vstack", "gen[].flatten", "numpy.random.choice", "small_env_4x4.BattleshipEnv.full_distribution[].reshape", "small_env_4x4.BattleshipEnv.null_sample", "torch.from_numpy", "network().detach", "len", "numpy.where", "numpy.random.choice", "numpy.where", "numpy.random.choice", "numpy.arange", "numpy.vstack", "numpy.vstack", "small_env_4x4.BattleshipEnv.board.flatten", "small_env_4x4.BattleshipEnv.get_image", "len", "numpy.arange", "numpy.arange", "numpy.where", "numpy.random.choice", "numpy.where", "numpy.random.choice", "network", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.null_sample", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.null_sample", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image"], ["", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "hold_out", "==", "-", "1", ":", "\n", "\t\t\t", "self", ".", "maze", "=", "np", ".", "reshape", "(", "self", ".", "heldout", "[", "self", ".", "maze_idx", "%", "len", "(", "self", ".", "heldout", ")", "]", ",", "(", "4", ",", "4", ")", ")", "\n", "start", "=", "np", ".", "load", "(", "'data/'", "+", "self", ".", "rules", "+", "'_sample_starts.npy'", ")", "[", "self", ".", "maze_idx", "%", "len", "(", "self", ".", "heldout", ")", "]", "\n", "", "else", ":", "\n", "\n", "\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "self", ".", "full_probs", ")", "\n", "grid", "=", "self", ".", "full_distribution", "[", "r_idx", "]", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "grid", "=", "self", ".", "null_sample", "(", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "while", "tuple", "(", "gen", "[", "0", "]", ".", "flatten", "(", ")", ")", "in", "self", ".", "heldout", ":", "\n", "\t\t\t\t", "if", "'null'", "not", "in", "self", ".", "rules", ":", "\n", "\t\t\t\t\t", "r_idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "full_distribution", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "self", ".", "full_probs", ")", "\n", "grid", "=", "self", ".", "full_distribution", "[", "r_idx", "]", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "grid", "=", "self", ".", "null_sample", "(", ")", "\n", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "grid", "==", "1", ")", ")", ".", "T", "\n", "start", "=", "reds", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "reds", ".", "shape", "[", "0", "]", ")", ")", "]", "\n", "gen", "=", "(", "grid", ",", "start", ")", "\n", "\n", "\n", "", "", "self", ".", "maze", "=", "grid", "\n", "\n", "", "self", ".", "board", "=", "np", ".", "ones", "(", "self", ".", "maze", ".", "shape", ")", "*", "-", "1", "\n", "self", ".", "current_position", "=", "start", "\n", "self", ".", "board", "[", "self", ".", "current_position", "[", "0", "]", ",", "self", ".", "current_position", "[", "1", "]", "]", "=", "1", "\n", "\n", "self", ".", "num_hits", "=", "0", "\n", "self", ".", "self_hits", "=", "{", "}", "\n", "if", "self", ".", "pretrain", ":", "\n", "\t\t\t", "board_tensor", "=", "torch", ".", "from_numpy", "(", "self", ".", "board", ".", "flatten", "(", ")", ")", ".", "float", "(", ")", "\n", "obs", "=", "network", "(", "board_tensor", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "render_img", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "get_image", "(", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "obs", "=", "self", ".", "board", ".", "flatten", "(", ")", "\n", "\n", "", "", "obs_array", "=", "np", ".", "concatenate", "(", "(", "obs", ",", "self", ".", "prev_action", ",", "[", "self", ".", "prev_reward", "]", ")", ")", "\n", "self", ".", "valid_actions", "=", "[", "1", "for", "_", "in", "range", "(", "self", ".", "nA", ")", "]", "\n", "return", "obs_array", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.render": [[299, 315], ["small_env_4x4.BattleshipEnv.get_image", "numpy.asarray().astype", "PIL.Image.fromarray().resize", "numpy.asarray", "numpy.asarray", "PIL.Image.fromarray", "int", "int", "small_env_4x4.BattleshipEnv.viewer.imshow", "SimpleImageViewer"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.get_image"], ["", "def", "render", "(", "self", ",", "mode", "=", "'human'", ",", "max_width", "=", "500", ")", ":", "\n", "\t\t", "img", "=", "self", ".", "get_image", "(", ")", "\n", "img", "=", "np", ".", "asarray", "(", "img", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img_height", ",", "img_width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "ratio", "=", "max_width", "/", "img_width", "\n", "img", "=", "PILImage", ".", "fromarray", "(", "img", ")", ".", "resize", "(", "[", "int", "(", "ratio", "*", "img_width", ")", ",", "int", "(", "ratio", "*", "img_height", ")", "]", ")", "\n", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "if", "mode", "==", "'rgb_array'", ":", "\n", "\t\t\t", "return", "img", "\n", "", "elif", "mode", "==", "'human'", ":", "\n", "\t\t\t", "from", "gym", ".", "envs", ".", "classic_control", ".", "rendering", "import", "SimpleImageViewer", "\n", "if", "self", ".", "viewer", "is", "None", ":", "\n", "\t\t\t\t", "self", ".", "viewer", "=", "SimpleImageViewer", "(", ")", "\n", "", "self", ".", "viewer", ".", "imshow", "(", "img", ")", "\n", "\n", "return", "self", ".", "viewer", ".", "isopen", "\n", "", "", "def", "close", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.close": [[315, 319], ["small_env_4x4.BattleshipEnv.viewer.close"], "methods", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "viewer", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "viewer", ".", "close", "(", ")", "\n", "self", ".", "viewer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.softmax": [[17, 23], ["numpy.exp", "np.exp.sum", "numpy.max"], "function", ["None"], ["def", "softmax", "(", "x", ")", ":", "\n", "\t", "\"\"\"Compute softmax values for each sets of scores in x.\"\"\"", "\n", "e_x", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ")", ")", "\n", "sx", "=", "e_x", "/", "e_x", ".", "sum", "(", ")", "\n", "sx", "[", "x", "==", "0", "]", "=", "0.0", "\n", "return", "sx", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.register_small_env": [[320, 322], ["gym.envs.register"], "function", ["None"], ["", "", "", "def", "register_small_env", "(", "env_id", ",", "rules", ",", "n_board", "=", "4", ",", "hold_out", "=", "0", ",", "permute", "=", "0", ",", "max_episode_steps", "=", "25", ",", "pretrain", "=", "0", ",", "render_img", "=", "0", ")", ":", "\n", "\t", "gym", ".", "envs", ".", "register", "(", "id", "=", "env_id", ",", "entry_point", "=", "BattleshipEnv", ",", "max_episode_steps", "=", "max_episode_steps", ",", "kwargs", "=", "{", "'rules'", ":", "rules", ",", "'n_board'", ":", "n_board", ",", "'hold_out'", ":", "hold_out", ",", "'permute'", ":", "permute", ",", "'pretrain'", ":", "pretrain", ",", "'render_img'", ":", "render_img", "}", ")", "", "", ""]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.diag1symmetry": [[8, 10], ["None"], "function", ["None"], ["def", "diag1symmetry", "(", "x", ")", ":", "\n", "    ", "return", "x", "[", "0", ",", "1", "]", "==", "x", "[", "1", ",", "2", "]", "and", "x", "[", "0", ",", "0", "]", "==", "x", "[", "2", ",", "2", "]", "and", "x", "[", "1", ",", "0", "]", "==", "x", "[", "2", ",", "1", "]", "\n", "", "def", "diag2symmetry", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.diag2symmetry": [[10, 12], ["numpy.sum"], "function", ["None"], ["", "def", "diag2symmetry", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "x", ".", "T", "==", "x", ")", "==", "9", "\n", "", "def", "horizontal_symmetry", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.horizontal_symmetry": [[12, 14], ["numpy.sum"], "function", ["None"], ["", "def", "horizontal_symmetry", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "x", "[", "0", ",", ":", "]", "==", "x", "[", "2", ",", ":", "]", ")", "==", "3", "\n", "", "def", "vertical_symmetry", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.vertical_symmetry": [[14, 16], ["numpy.sum"], "function", ["None"], ["", "def", "vertical_symmetry", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "x", "[", ":", ",", "0", "]", "==", "x", "[", ":", ",", "2", "]", ")", "==", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.translate": [[34, 111], ["numpy.zeros", "numpy.random.choice", "numpy.random.choice", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "", "def", "translate", "(", "stamp", ",", "axes", ",", "options", "=", "-", "1", ",", "axis", "=", "'random'", ")", ":", "\n", "    ", "if", "axis", "==", "'random'", ":", "\n", "        ", "axis", "=", "np", ".", "random", ".", "choice", "(", "axes", ")", "\n", "", "board", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", "=", "stamp", "\n", "if", "options", "==", "-", "1", ":", "\n", "        ", "options", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", "]", ")", "\n", "", "if", "axis", "==", "'h'", ":", "\n", "        ", "if", "options", "==", "0", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "2", ":", "5", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "2", ":", "5", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "1", ":", "\n", "            ", "board", "[", "4", ":", "7", ",", "2", ":", "5", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "2", ":", "5", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "2", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "2", ":", "5", "]", "+=", "stamp", "\n", "board", "[", "4", ":", "7", ",", "2", ":", "5", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "2", ":", "5", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", "or", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "2", ":", "5", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "\n", "", "", "", "elif", "axis", "==", "'v'", ":", "\n", "        ", "if", "options", "==", "0", ":", "\n", "            ", "board", "[", "2", ":", "5", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "2", ":", "5", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "1", ":", "\n", "            ", "board", "[", "2", ":", "5", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "2", ":", "5", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "2", ":", "\n", "            ", "board", "[", "2", ":", "5", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "[", "2", ":", "5", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "2", ":", "5", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", "or", "np", ".", "sum", "(", "board", "[", "2", ":", "5", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "", "elif", "axis", "==", "'d1'", ":", "\n", "        ", "if", "options", "==", "0", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "1", ":", "\n", "            ", "board", "[", "4", ":", "7", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "2", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "[", "4", ":", "7", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", "or", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "", "elif", "axis", "==", "'d2'", ":", "\n", "        ", "if", "options", "==", "0", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "1", ":", "\n", "            ", "board", "[", "4", ":", "7", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "elif", "options", "==", "2", ":", "\n", "            ", "board", "[", "0", ":", "3", ",", "4", ":", "7", "]", "+=", "stamp", "\n", "board", "[", "4", ":", "7", ",", "0", ":", "3", "]", "+=", "stamp", "\n", "board", "=", "(", "board", ">", "0", ")", ".", "astype", "(", "'int'", ")", "\n", "if", "np", ".", "sum", "(", "board", "[", "4", ":", "7", ",", "0", ":", "3", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", "or", "np", ".", "sum", "(", "board", "[", "0", ":", "3", ",", "4", ":", "7", "]", "==", "board", "[", "2", ":", "5", ",", "2", ":", "5", "]", ")", "<", "9", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "", "return", "board", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.copy_task_distribution_sample": [[114, 169], ["numpy.zeros", "numpy.random.choice().reshape", "numpy.random.choice", "range", "numpy.zeros", "np.random.choice().reshape.sum", "numpy.random.choice().reshape", "range", "len", "numpy.zeros", "numpy.random.choice().reshape", "numpy.random.choice", "range", "numpy.random.choice", "numpy.zeros", "numpy.asarray().astype", "np.random.choice().reshape.sum", "numpy.random.choice().reshape", "range", "numpy.random.choice", "numpy.random.choice", "numpy.sum", "options.append", "numpy.random.choice", "numpy.zeros", "numpy.asarray().astype", "numpy.arange", "numpy.asarray", "numpy.random.choice", "numpy.sum", "options.append", "len", "numpy.asarray"], "function", ["None"], ["", "def", "copy_task_distribution_sample", "(", ")", ":", "\n", "    ", "loc", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "kernel", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "9", ")", ".", "reshape", "(", "(", "3", ",", "3", ")", ")", "\n", "while", "kernel", ".", "sum", "(", ")", "==", "0", ":", "\n", "        ", "kernel", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "9", ")", ".", "reshape", "(", "(", "3", ",", "3", ")", ")", "\n", "", "center1", "=", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", "size", "=", "2", ")", "\n", "\n", "loc", "[", "center1", "[", "0", "]", "-", "1", ":", "center1", "[", "0", "]", "+", "2", ",", "center1", "[", "1", "]", "-", "1", ":", "center1", "[", "1", "]", "+", "2", "]", "=", "1", "\n", "\n", "options", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "6", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "6", ")", ":", "\n", "            ", "loc2", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "center2", "=", "np", ".", "asarray", "(", "[", "i", ",", "j", "]", ")", ".", "astype", "(", "'int'", ")", "\n", "loc2", "[", "center2", "[", "0", "]", ",", "center2", "[", "1", "]", "]", "=", "1", "\n", "for", "addX", "in", "[", "-", "2", ",", "-", "1", ",", "0", ",", "1", ",", "2", "]", ":", "\n", "                ", "for", "addY", "in", "[", "-", "2", ",", "-", "1", ",", "0", ",", "1", ",", "2", "]", ":", "\n", "                    ", "if", "center2", "[", "0", "]", "+", "addX", ">=", "0", "and", "center2", "[", "0", "]", "+", "addX", "<", "7", "and", "center2", "[", "1", "]", "+", "addY", ">=", "0", "and", "center2", "[", "1", "]", "+", "addY", "<", "7", ":", "\n", "                        ", "loc2", "[", "center2", "[", "0", "]", "+", "addX", ",", "center2", "[", "1", "]", "+", "addY", "]", "=", "1", "\n", "\n", "#print(center2,loc2)", "\n", "", "", "", "if", "np", ".", "sum", "(", "loc", "*", "loc2", ")", "==", "0", ":", "\n", "                ", "options", ".", "append", "(", "center2", ")", "\n", "#print(center1,len(options))", "\n", "", "", "", "while", "len", "(", "options", ")", "==", "0", ":", "\n", "        ", "loc", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "kernel", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "9", ")", ".", "reshape", "(", "(", "3", ",", "3", ")", ")", "\n", "while", "kernel", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "kernel", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "9", ")", ".", "reshape", "(", "(", "3", ",", "3", ")", ")", "\n", "", "center1", "=", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", "size", "=", "2", ")", "\n", "\n", "loc", "[", "center1", "[", "0", "]", "-", "1", ":", "center1", "[", "0", "]", "+", "2", ",", "center1", "[", "1", "]", "-", "1", ":", "center1", "[", "1", "]", "+", "2", "]", "=", "1", "\n", "\n", "options", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "6", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "1", ",", "6", ")", ":", "\n", "                ", "loc2", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "center2", "=", "np", ".", "asarray", "(", "[", "i", ",", "j", "]", ")", ".", "astype", "(", "'int'", ")", "\n", "loc2", "[", "center2", "[", "0", "]", ",", "center2", "[", "1", "]", "]", "=", "1", "\n", "for", "addX", "in", "[", "-", "2", ",", "-", "1", ",", "0", ",", "1", ",", "2", "]", ":", "\n", "                    ", "for", "addY", "in", "[", "-", "2", ",", "-", "1", ",", "0", ",", "1", ",", "2", "]", ":", "\n", "                        ", "if", "center2", "[", "0", "]", "+", "addX", ">=", "0", "and", "center2", "[", "0", "]", "+", "addX", "<", "7", "and", "center2", "[", "1", "]", "+", "addY", ">=", "0", "and", "center2", "[", "1", "]", "+", "addY", "<", "7", ":", "\n", "                            ", "loc2", "[", "center2", "[", "0", "]", "+", "addX", ",", "center2", "[", "1", "]", "+", "addY", "]", "=", "1", "\n", "\n", "#print(center2,loc2)", "\n", "", "", "", "if", "np", ".", "sum", "(", "loc", "*", "loc2", ")", "==", "0", ":", "\n", "                    ", "options", ".", "append", "(", "center2", ")", "\n", "", "", "", "", "center2", "=", "options", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "options", ")", ")", ")", "]", "\n", "\n", "\n", "\n", "g", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "g", "[", "center1", "[", "0", "]", "-", "1", ":", "center1", "[", "0", "]", "+", "2", ",", "center1", "[", "1", "]", "-", "1", ":", "center1", "[", "1", "]", "+", "2", "]", "=", "kernel", "\n", "g", "[", "center2", "[", "0", "]", "-", "1", ":", "center2", "[", "0", "]", "+", "2", ",", "center2", "[", "1", "]", "-", "1", ":", "center2", "[", "1", "]", "+", "2", "]", "=", "kernel", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.generate_single_symmetry": [[170, 223], ["numpy.random.choice", "numpy.zeros", "numpy.random.choice", "range", "numpy.arange", "numpy.random.choice", "numpy.random.choice", "numpy.vstack", "numpy.asarray", "numpy.asarray", "len", "numpy.abs", "numpy.abs", "numpy.arange", "numpy.arange", "numpy.where", "numpy.random.choice", "numpy.arange", "len", "numpy.abs", "numpy.abs", "neighbors.append", "neighbors.append"], "function", ["None"], ["", "def", "generate_single_symmetry", "(", "horizontal", "=", "None", ",", "start", "=", "None", ")", ":", "\n", "    ", "axis_symmetry", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "1", ",", "6", ")", ")", "\n", "g", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "horizontal", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", "\n", "if", "horizontal", ":", "\n", "        ", "start", "=", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "0", ",", "7", ")", ")", ",", "axis_symmetry", "]", "\n", "", "else", ":", "\n", "        ", "start", "=", "[", "axis_symmetry", ",", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "0", ",", "7", ")", ")", "]", "\n", "#print(start,axis_symmetry,horizontal)", "\n", "", "g", "[", "start", "[", "0", "]", ",", "start", "[", "1", "]", "]", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "reds", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "g", "==", "1", ")", ")", ".", "T", "\n", "if", "horizontal", ":", "\n", "            ", "choices", "=", "np", ".", "asarray", "(", "[", "coord", "for", "coord", "in", "reds", "if", "coord", "[", "1", "]", "<=", "axis_symmetry", "]", ")", "\n", "", "else", ":", "\n", "            ", "choices", "=", "np", ".", "asarray", "(", "[", "coord", "for", "coord", "in", "reds", "if", "coord", "[", "0", "]", "<=", "axis_symmetry", "]", ")", "\n", "", "neighbors", "=", "[", "]", "\n", "if", "horizontal", "==", "0", ":", "\n", "            ", "addXs", "=", "[", "-", "1", ",", "0", "]", "\n", "addYs", "=", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "addXs", "=", "[", "-", "1", "]", "\n", "addYs", "=", "[", "-", "1", ",", "0", "]", "\n", "", "for", "choice", "in", "choices", ":", "\n", "            ", "for", "addX", "in", "addXs", ":", "\n", "                    ", "for", "addY", "in", "addYs", ":", "\n", "                        ", "if", "choice", "[", "0", "]", "+", "addX", ">=", "0", "and", "choice", "[", "0", "]", "+", "addX", "<", "7", "and", "choice", "[", "1", "]", "+", "addY", ">=", "0", "and", "choice", "[", "1", "]", "+", "addY", "<", "7", ":", "\n", "                            ", "if", "g", "[", "choice", "[", "0", "]", "+", "addX", ",", "choice", "[", "1", "]", "+", "addY", "]", "==", "0", ":", "\n", "                                ", "if", "horizontal", ":", "\n", "                                    ", "distance", "=", "np", ".", "abs", "(", "choice", "[", "1", "]", "+", "addY", "-", "axis_symmetry", ")", "\n", "if", "axis_symmetry", "+", "distance", "<", "7", ":", "\n", "                                        ", "neighbors", ".", "append", "(", "(", "choice", "[", "0", "]", "+", "addX", ",", "choice", "[", "1", "]", "+", "addY", ")", ")", "\n", "", "", "else", ":", "\n", "                                    ", "distance", "=", "np", ".", "abs", "(", "choice", "[", "0", "]", "+", "addX", "-", "axis_symmetry", ")", "\n", "if", "axis_symmetry", "+", "distance", "<", "7", ":", "\n", "                                        ", "neighbors", ".", "append", "(", "(", "choice", "[", "0", "]", "+", "addX", ",", "choice", "[", "1", "]", "+", "addY", ")", ")", "\n", "\n", "", "", "", "", "", "", "", "if", "len", "(", "neighbors", ")", "==", "0", ":", "\n", "            ", "return", "g", "\n", "", "chosen", "=", "neighbors", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "neighbors", ")", ")", ")", "]", "\n", "x", ",", "y", "=", "chosen", "\n", "g", "[", "x", ",", "y", "]", "=", "1", "\n", "if", "horizontal", ":", "\n", "#print(x,y)", "\n", "            ", "distance", "=", "np", ".", "abs", "(", "y", "-", "axis_symmetry", ")", "\n", "g", "[", "x", ",", "axis_symmetry", "+", "distance", "]", "=", "1", "\n", "#print((x,y),distance,(x,axis_symmetry+distance))", "\n", "", "else", ":", "\n", "            ", "distance", "=", "np", ".", "abs", "(", "x", "-", "axis_symmetry", ")", "\n", "g", "[", "axis_symmetry", "+", "distance", ",", "y", "]", "=", "1", "\n", "#print((x,y),distance,(axis_symmetry+distance,y))", "\n", "", "", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.symmetric_task_distribution_sample": [[227, 232], ["abstract_task_distributions.generate_single_symmetry", "abstract_task_distributions.generate_single_symmetry", "numpy.sum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.generate_single_symmetry", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.generate_single_symmetry"], ["", "def", "symmetric_task_distribution_sample", "(", ")", ":", "\n", "    ", "b", "=", "generate_single_symmetry", "(", ")", "\n", "while", "np", ".", "sum", "(", "b", ")", ">=", "15", "or", "np", ".", "sum", "(", "b", ")", "<=", "2", ":", "\n", "        ", "b", "=", "generate_single_symmetry", "(", ")", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.connected_task_distribution_sample": [[234, 281], ["numpy.zeros", "numpy.random.choice", "numpy.random.choice", "range", "numpy.vstack", "numpy.vstack", "numpy.random.choice", "numpy.where", "choices.append", "choices.append", "choices.append", "choices.append", "choices.append", "choices.append", "choices.append", "choices.append", "numpy.where", "numpy.where", "choices.append", "choices.append", "choices.append", "choices.append"], "function", ["None"], ["", "def", "connected_task_distribution_sample", "(", ")", ":", "\n", "    ", "b", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "start", "=", "np", ".", "random", ".", "choice", "(", "[", "2", ",", "3", ",", "4", ",", "5", "]", ",", "size", "=", "2", ",", "replace", "=", "True", ")", "\n", "b", "[", "start", "[", "0", "]", ",", "start", "[", "1", "]", "]", "=", "-", "1", "\n", "iters", "=", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "for", "iter", "in", "range", "(", "iters", ")", ":", "\n", "        ", "ons", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "b", "<", "0", ")", ")", ".", "T", "\n", "choices", "=", "[", "]", "\n", "for", "on_idx", "in", "ons", ":", "\n", "            ", "x", ",", "y", "=", "on_idx", "\n", "if", "x", "-", "1", ">=", "1", "and", "b", "[", "x", "-", "1", ",", "y", "]", "==", "0", ":", "\n", "                ", "choices", ".", "append", "(", "(", "x", "-", "1", ",", "y", ")", ")", "\n", "", "if", "y", "-", "1", ">=", "1", "and", "b", "[", "x", ",", "y", "-", "1", "]", "==", "0", ":", "\n", "                ", "choices", ".", "append", "(", "(", "x", ",", "y", "-", "1", ")", ")", "\n", "", "if", "x", "+", "1", "<", "6", "and", "b", "[", "x", "+", "1", ",", "y", "]", "==", "0", ":", "\n", "                ", "choices", ".", "append", "(", "(", "x", "+", "1", ",", "y", ")", ")", "\n", "", "if", "y", "+", "1", "<", "6", "and", "b", "[", "x", ",", "y", "+", "1", "]", "==", "0", ":", "\n", "                ", "choices", ".", "append", "(", "(", "x", ",", "y", "+", "1", ")", ")", "\n", "", "", "for", "choice", "in", "choices", ":", "\n", "            ", "if", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "                ", "b", "[", "choice", "[", "0", "]", ",", "choice", "[", "1", "]", "]", "=", "-", "1", "\n", "\n", "", "", "", "ons", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "b", "<", "0", ")", ")", ".", "T", "\n", "choices", "=", "[", "]", "\n", "for", "on_idx", "in", "ons", ":", "\n", "        ", "x", ",", "y", "=", "on_idx", "\n", "if", "x", "-", "1", ">=", "0", "and", "b", "[", "x", "-", "1", ",", "y", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "-", "1", ",", "y", ")", ")", "\n", "", "if", "y", "-", "1", ">=", "0", "and", "b", "[", "x", ",", "y", "-", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", ",", "y", "-", "1", ")", ")", "\n", "", "if", "x", "+", "1", "<", "7", "and", "b", "[", "x", "+", "1", ",", "y", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "+", "1", ",", "y", ")", ")", "\n", "", "if", "y", "+", "1", "<", "7", "and", "b", "[", "x", ",", "y", "+", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", ",", "y", "+", "1", ")", ")", "\n", "\n", "", "if", "x", "-", "1", ">=", "0", "and", "y", "-", "1", ">=", "0", "and", "b", "[", "x", "-", "1", ",", "y", "-", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "-", "1", ",", "y", "-", "1", ")", ")", "\n", "", "if", "x", "-", "1", ">=", "0", "and", "y", "+", "1", "<", "7", "and", "b", "[", "x", "-", "1", ",", "y", "+", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "-", "1", ",", "y", "+", "1", ")", ")", "\n", "", "if", "x", "+", "1", "<", "7", "and", "y", "-", "1", ">=", "0", "and", "b", "[", "x", "+", "1", ",", "y", "-", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "+", "1", ",", "y", "-", "1", ")", ")", "\n", "", "if", "x", "+", "1", "<", "7", "and", "y", "+", "1", "<", "7", "and", "b", "[", "x", "+", "1", ",", "y", "+", "1", "]", "==", "0", ":", "\n", "            ", "choices", ".", "append", "(", "(", "x", "+", "1", ",", "y", "+", "1", ")", ")", "\n", "", "", "for", "choice", "in", "choices", ":", "\n", "        ", "b", "[", "choice", "[", "0", "]", ",", "choice", "[", "1", "]", "]", "=", "1", "\n", "", "b", "[", "np", ".", "where", "(", "b", "<", "0", ")", "]", "=", "0", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.rectangle_task_distribution_sample": [[282, 302], ["numpy.random.choice", "numpy.random.choice", "numpy.zeros", "min", "range", "min", "range", "numpy.arange", "numpy.arange", "numpy.random.choice", "numpy.random.choice", "max", "max", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "rectangle_task_distribution_sample", "(", ")", ":", "\n", "    ", "corner1", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "7", ")", ",", "size", "=", "2", ",", "replace", "=", "True", ")", "\n", "corner2", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "7", ")", ",", "size", "=", "2", ",", "replace", "=", "True", ")", "\n", "while", "corner1", "[", "0", "]", "==", "corner2", "[", "0", "]", "or", "corner1", "[", "1", "]", "==", "corner2", "[", "1", "]", ":", "\n", "        ", "corner1", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "7", ")", ",", "size", "=", "2", ",", "replace", "=", "True", ")", "\n", "corner2", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "7", ")", ",", "size", "=", "2", ",", "replace", "=", "True", ")", "\n", "", "b", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "b", "[", "corner1", "[", "0", "]", ",", "corner1", "[", "1", "]", "]", "=", "1", "\n", "b", "[", "corner2", "[", "0", "]", ",", "corner2", "[", "1", "]", "]", "=", "1", "\n", "x", "=", "min", "(", "corner1", "[", "0", "]", ",", "corner2", "[", "0", "]", ")", "\n", "y", "=", "max", "(", "corner1", "[", "0", "]", ",", "corner2", "[", "0", "]", ")", "+", "1", "\n", "for", "i", "in", "range", "(", "x", ",", "y", ")", ":", "\n", "        ", "b", "[", "i", ",", "corner1", "[", "1", "]", "]", "=", "1", "\n", "b", "[", "i", ",", "corner2", "[", "1", "]", "]", "=", "1", "\n", "", "x", "=", "min", "(", "corner1", "[", "1", "]", ",", "corner2", "[", "1", "]", ")", "\n", "y", "=", "max", "(", "corner1", "[", "1", "]", ",", "corner2", "[", "1", "]", ")", "+", "1", "\n", "for", "j", "in", "range", "(", "x", ",", "y", ")", ":", "\n", "        ", "b", "[", "corner1", "[", "0", "]", ",", "j", "]", "=", "1", "\n", "b", "[", "corner2", "[", "0", "]", ",", "j", "]", "=", "1", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.tree_task_distribution_sample": [[305, 310], ["generate_grid", "numpy.sum", "generate_grid"], "function", ["None"], ["", "def", "tree_task_distribution_sample", "(", ")", ":", "\n", "    ", "grid", "=", "generate_grid", "(", "'tree'", ")", "[", "0", "]", "\n", "while", "np", ".", "sum", "(", "grid", ")", "<=", "3", ":", "\n", "        ", "grid", "=", "generate_grid", "(", "'tree'", ")", "[", "0", "]", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.pyramid_task_distribution_sample": [[311, 350], ["numpy.random.choice", "numpy.zeros", "numpy.rot90", "numpy.random.choice", "numpy.random.choice", "sizes.append", "sizes.append", "numpy.random.choice"], "function", ["None"], ["", "def", "pyramid_task_distribution_sample", "(", ")", ":", "\n", "    ", "base_center", "=", "[", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", ")", ",", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", "]", "\n", "sizes", "=", "[", "3", "]", "\n", "if", "base_center", "[", "0", "]", ">=", "2", "and", "base_center", "[", "1", "]", ">=", "2", "and", "base_center", "[", "1", "]", "<=", "4", ":", "\n", "        ", "sizes", ".", "append", "(", "5", ")", "\n", "", "if", "base_center", "[", "0", "]", ">=", "3", "and", "base_center", "[", "1", "]", "==", "3", ":", "\n", "        ", "sizes", ".", "append", "(", "7", ")", "\n", "", "size", "=", "np", ".", "random", ".", "choice", "(", "sizes", ")", "\n", "g", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "]", "=", "1", "\n", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "-", "1", "]", "=", "1", "\n", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "+", "1", "]", "=", "1", "\n", "leftmost", "=", "base_center", "[", "1", "]", "-", "1", "\n", "rightmost", "=", "base_center", "[", "1", "]", "+", "1", "\n", "if", "size", ">=", "5", ":", "\n", "        ", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "-", "2", "]", "=", "1", "\n", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "+", "2", "]", "=", "1", "\n", "leftmost", "=", "base_center", "[", "1", "]", "-", "2", "\n", "rightmost", "=", "base_center", "[", "1", "]", "+", "2", "\n", "", "if", "size", ">=", "7", ":", "\n", "        ", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "-", "3", "]", "=", "1", "\n", "g", "[", "base_center", "[", "0", "]", ",", "base_center", "[", "1", "]", "+", "3", "]", "=", "1", "\n", "leftmost", "=", "base_center", "[", "1", "]", "-", "3", "\n", "rightmost", "=", "base_center", "[", "1", "]", "+", "3", "\n", "#print(base_center,leftmost,rightmost)", "\n", "#plt.imshow(g)", "\n", "#plt.figure()", "\n", "", "left", "=", "[", "base_center", "[", "0", "]", ",", "leftmost", "]", "\n", "right", "=", "[", "base_center", "[", "0", "]", ",", "rightmost", "]", "\n", "while", "left", "[", "1", "]", "!=", "right", "[", "1", "]", ":", "\n", "#print(left,right)", "\n", "        ", "left", "[", "0", "]", "-=", "1", "\n", "right", "[", "0", "]", "-=", "1", "\n", "left", "[", "1", "]", "+=", "1", "\n", "right", "[", "1", "]", "-=", "1", "\n", "g", "[", "left", "[", "0", "]", ",", "left", "[", "1", "]", ":", "right", "[", "1", "]", "+", "1", "]", "=", "1", "\n", "#g[right[0],right[1]]=1", "\n", "#print(left,right)", "\n", "", "return", "np", ".", "rot90", "(", "g", ",", "k", "=", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.zigzag_task_distribution_sample": [[352, 366], ["numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.rot90", "list", "range", "numpy.random.choice", "max"], "function", ["None"], ["", "def", "zigzag_task_distribution_sample", "(", ")", ":", "\n", "    ", "x0", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", "\n", "y0", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", "\n", "step", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "1", ",", "7", "-", "max", "(", "x0", ",", "y0", ")", ")", ")", ")", "\n", "x", "=", "x0", "\n", "y", "=", "y0", "\n", "b", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "#print(x0,y0,step)", "\n", "while", "x", "+", "step", "<=", "6", "and", "y", "+", "step", "<=", "6", ":", "\n", "        ", "b", "[", "x", ":", "x", "+", "step", "+", "1", ",", "y", "]", "=", "1", "\n", "b", "[", "x", "+", "step", ",", "y", ":", "y", "+", "step", "+", "1", "]", "=", "1", "\n", "x", "=", "x", "+", "step", "\n", "y", "=", "y", "+", "step", "\n", "", "return", "np", ".", "rot90", "(", "b", ",", "k", "=", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.cross_task_distribution_sample": [[367, 408], ["numpy.random.choice", "numpy.zeros", "numpy.random.choice", "min", "max", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.random.choice", "range", "numpy.random.choice", "numpy.random.choice", "list", "list", "list", "numpy.random.choice", "numpy.random.choice", "max", "list", "numpy.random.choice", "numpy.random.choice", "range", "range", "range", "range", "intersecting_options.append", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "abs", "numpy.arange", "len"], "function", ["None"], ["", "def", "cross_task_distribution_sample", "(", ")", ":", "\n", "    ", "if", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "        ", "g", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "start", "=", "[", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", ",", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", ")", "]", "\n", "h", "=", "start", "[", "0", "]", "\n", "a", "=", "start", "[", "1", "]", "\n", "options", "=", "[", "x", "for", "x", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", "if", "abs", "(", "x", "-", "a", ")", ">", "1", "]", "\n", "b", "=", "np", ".", "random", ".", "choice", "(", "options", ")", "\n", "x", "=", "min", "(", "a", ",", "b", ")", "\n", "y", "=", "max", "(", "a", ",", "b", ")", "\n", "g", "[", "h", ",", "x", ":", "y", "+", "1", "]", "=", "1", "\n", "\n", "v", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "x", "+", "1", ",", "y", ")", ")", ")", "\n", "xx", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "0", ",", "h", ")", ")", ")", "\n", "yy", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "h", "+", "1", ",", "7", ")", ")", ")", "\n", "g", "[", "xx", ":", "yy", "+", "1", ",", "v", "]", "=", "1", "\n", "return", "g", "\n", "", "else", ":", "\n", "\n", "        ", "g", "=", "np", ".", "zeros", "(", "(", "7", ",", "7", ")", ")", "\n", "start", "=", "[", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ")", ",", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ")", "]", "\n", "max_size", "=", "7", "-", "max", "(", "start", ")", "\n", "size", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "3", ",", "max_size", "+", "1", ")", ")", ")", "\n", "intersecting_options", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "g", "[", "start", "[", "0", "]", "+", "i", ",", "start", "[", "1", "]", "+", "i", "]", "=", "1", "\n", "if", "i", "!=", "size", "-", "1", "and", "i", "!=", "0", ":", "\n", "                ", "intersecting_options", ".", "append", "(", "(", "start", "[", "0", "]", "+", "i", ",", "start", "[", "1", "]", "+", "i", ")", ")", "\n", "", "", "intersecting", "=", "intersecting_options", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "intersecting_options", ")", ")", ")", "]", "\n", "g", "[", "intersecting", "[", "0", "]", "-", "1", ",", "intersecting", "[", "1", "]", "+", "1", "]", "=", "1", "\n", "g", "[", "intersecting", "[", "0", "]", "+", "1", ",", "intersecting", "[", "1", "]", "-", "1", "]", "=", "1", "\n", "if", "intersecting", "[", "0", "]", "-", "2", ">=", "0", "and", "intersecting", "[", "1", "]", "+", "2", "<", "7", "and", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "            ", "g", "[", "intersecting", "[", "0", "]", "-", "2", ",", "intersecting", "[", "1", "]", "+", "2", "]", "=", "1", "\n", "if", "intersecting", "[", "0", "]", "-", "3", ">=", "0", "and", "intersecting", "[", "1", "]", "+", "3", "<", "7", "and", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "                ", "g", "[", "intersecting", "[", "0", "]", "-", "3", ",", "intersecting", "[", "1", "]", "+", "3", "]", "=", "1", "\n", "", "", "if", "intersecting", "[", "1", "]", "-", "2", ">=", "0", "and", "intersecting", "[", "0", "]", "+", "2", "<", "7", "and", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "            ", "g", "[", "intersecting", "[", "0", "]", "+", "2", ",", "intersecting", "[", "1", "]", "-", "2", "]", "=", "1", "\n", "if", "intersecting", "[", "1", "]", "-", "3", ">=", "0", "and", "intersecting", "[", "0", "]", "+", "3", "<", "7", "and", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "                ", "g", "[", "intersecting", "[", "0", "]", "+", "3", ",", "intersecting", "[", "1", "]", "-", "3", "]", "=", "1", "\n", "\n", "", "", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.softmax": [[409, 413], ["numpy.exp", "np.exp.sum", "numpy.max"], "function", ["None"], ["", "", "def", "softmax", "(", "x", ")", ":", "\n", "    ", "\"\"\"Compute softmax values for each sets of scores in x.\"\"\"", "\n", "e_x", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ")", ")", "\n", "return", "e_x", "/", "e_x", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.gsp_4x4_distribution_sample": [[418, 422], ["numpy.random.choice", "gsp_4x4_boards[].reshape", "numpy.arange"], "function", ["None"], ["def", "gsp_4x4_distribution_sample", "(", ")", ":", "\n", "    ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "gsp_4x4_boards", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "gsp_4x4_probs", ")", "\n", "g", "=", "gsp_4x4_boards", "[", "idx", "]", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.multi_gsp_4x4_sample": [[423, 427], ["numpy.random.choice", "gsp_4x4_boards[].reshape", "numpy.arange"], "function", ["None"], ["", "def", "multi_gsp_4x4_sample", "(", "n", "=", "25", ")", ":", "\n", "    ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "gsp_4x4_boards", ".", "shape", "[", "0", "]", ")", ",", "p", "=", "gsp_4x4_probs", ",", "size", "=", "n", ",", "replace", "=", "False", ")", "\n", "g", "=", "gsp_4x4_boards", "[", "idx", "]", ".", "reshape", "(", "(", "-", "1", ",", "4", ",", "4", ")", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.grammar_4x4_distribution_sample": [[428, 430], ["generate_grid"], "function", ["None"], ["", "def", "grammar_4x4_distribution_sample", "(", ")", ":", "\n", "    ", "return", "generate_grid", "(", "'all'", ",", "n", "=", "4", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.abstract_task_distributions.sample_task": [[432, 471], ["gen_function().reshape", "numpy.vstack", "numpy.random.choice", "gen_function().reshape", "numpy.where", "numpy.arange", "gen_function", "numpy.sum", "numpy.sum", "gen_function", "generate_grid", "generate_grid"], "function", ["None"], ["", "def", "sample_task", "(", "name", ")", ":", "\n", "    ", "n", "=", "7", "\n", "if", "name", "==", "'symmetry'", ":", "\n", "        ", "gen_function", "=", "symmetric_task_distribution_sample", "\n", "", "elif", "name", "==", "'connected'", ":", "\n", "        ", "gen_function", "=", "connected_task_distribution_sample", "\n", "", "elif", "name", "==", "'rectangle'", ":", "\n", "        ", "gen_function", "=", "rectangle_task_distribution_sample", "\n", "", "elif", "name", "==", "'tree'", ":", "\n", "        ", "gen_function", "=", "tree_task_distribution_sample", "\n", "", "elif", "name", "==", "'zigzag'", ":", "\n", "        ", "gen_function", "=", "zigzag_task_distribution_sample", "\n", "", "elif", "name", "==", "'pyramid'", ":", "\n", "        ", "gen_function", "=", "pyramid_task_distribution_sample", "\n", "", "elif", "name", "==", "'cross'", ":", "\n", "        ", "gen_function", "=", "cross_task_distribution_sample", "\n", "", "elif", "name", "==", "'copy'", ":", "\n", "        ", "gen_function", "=", "copy_task_distribution_sample", "\n", "", "elif", "name", "==", "'gsp_4x4'", ":", "\n", "        ", "gen_function", "=", "gsp_4x4_distribution_sample", "\n", "n", "=", "4", "\n", "", "elif", "name", "==", "'all'", ":", "\n", "        ", "def", "grammar_gen", "(", ")", ":", "\n", "            ", "return", "generate_grid", "(", "'all'", ")", "[", "0", "]", "\n", "", "gen_function", "=", "grammar_gen", "\n", "\n", "", "elif", "name", "==", "'grammar_4x4'", ":", "\n", "        ", "def", "grammar_gen", "(", ")", ":", "\n", "            ", "return", "generate_grid", "(", "'all'", ",", "n", "=", "4", ")", "[", "0", "]", "\n", "", "gen_function", "=", "grammar_gen", "\n", "\n", "\n", "", "board", "=", "gen_function", "(", ")", ".", "reshape", "(", "(", "n", ",", "n", ")", ")", "\n", "while", "np", ".", "sum", "(", "board", ")", "<", "3", "or", "np", ".", "sum", "(", "board", ")", ">=", "40", ":", "\n", "        ", "board", "=", "gen_function", "(", ")", ".", "reshape", "(", "(", "n", ",", "n", ")", ")", "\n", "", "choices", "=", "np", ".", "vstack", "(", "np", ".", "where", "(", "board", ">", "0", ")", ")", "\n", "choice", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "choices", ".", "shape", "[", "1", "]", ")", ")", "\n", "start", "=", "choices", "[", ":", ",", "choice", "]", "\n", "return", "board", ",", "start", "", "", ""]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.mlp_skip": [[58, 75], ["tf.slice", "tf.slice", "enumerate", "tf.concat", "activ", "range", "linear", "str", "np.sqrt"], "function", ["None"], ["def", "mlp_skip", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    \n\n    :param input_tensor: (TensorFlow Tensor) Observation input placeholder\n    :param kwargs: (dict) Extra keywords parameters for the convolutional layers of the CNN\n    :return: (TensorFlow Tensor) The CNN output layer\n    \"\"\"", "\n", "net_arch", "=", "[", "784", "for", "_", "in", "range", "(", "num_layers", ")", "]", "\n", "visual_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "784", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "784", "]", ",", "[", "-", "1", ",", "785", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "tanh", "\n", "for", "i", ",", "layer_size", "in", "enumerate", "(", "net_arch", ")", ":", "\n", "        ", "visual_output", "=", "activ", "(", "linear", "(", "visual_output", ",", "'pi_fc'", "+", "str", "(", "i", ")", ",", "n_hidden", "=", "layer_size", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "#total_output=visual_output", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.cnn_skip_small": [[76, 90], ["tf.slice", "tf.slice", "tf.reshape", "activ", "stable_baselines.common.tf_layers.conv_to_fc", "activ", "tf.concat", "stable_baselines.common.tf_layers.conv", "linear", "np.sqrt", "np.sqrt"], "function", ["None"], ["", "def", "cnn_skip_small", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "visual_input", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "49", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "49", "]", ",", "[", "-", "1", ",", "50", "]", ",", "'prev_outputs'", ")", "\n", "visual_input", "=", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "7", ",", "7", ",", "1", ")", ")", "\n", "activ", "=", "tf", ".", "nn", ".", "relu", "\n", "\n", "layer_1", "=", "activ", "(", "conv", "(", "visual_input", ",", "'c1'", ",", "n_filters", "=", "16", ",", "filter_size", "=", "3", ",", "stride", "=", "1", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "**", "kwargs", ")", ")", "\n", "#print(layer_1.shape,visual_input.shape)", "\n", "#layer_2 = activ(conv(layer_1, 'c2', n_filters=16, filter_size=3, stride=1, init_scale=np.sqrt(2), **kwargs))", "\n", "#layer_3=conv_to_fc(layer_2)", "\n", "layer_2", "=", "conv_to_fc", "(", "layer_1", ")", "\n", "visual_output", "=", "activ", "(", "linear", "(", "layer_2", ",", "'fc1'", ",", "n_hidden", "=", "49", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.mlp_skip_small": [[109, 126], ["tf.slice", "tf.slice", "enumerate", "tf.concat", "activ", "range", "linear", "str", "np.sqrt"], "function", ["None"], ["def", "mlp_skip_small", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    \n\n    :param input_tensor: (TensorFlow Tensor) Observation input placeholder\n    :param kwargs: (dict) Extra keywords parameters for the convolutional layers of the CNN\n    :return: (TensorFlow Tensor) The CNN output layer\n    \"\"\"", "\n", "net_arch", "=", "[", "49", "for", "_", "in", "range", "(", "num_layers", ")", "]", "\n", "visual_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "49", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "49", "]", ",", "[", "-", "1", ",", "50", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "tanh", "\n", "for", "i", ",", "layer_size", "in", "enumerate", "(", "net_arch", ")", ":", "\n", "        ", "visual_output", "=", "activ", "(", "linear", "(", "visual_output", ",", "'pi_fc'", "+", "str", "(", "i", ")", ",", "n_hidden", "=", "layer_size", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "#total_output=visual_output", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.stn_skip_small": [[127, 155], ["tf.slice", "tf.slice", "activ", "stable_baselines.common.tf_layers.conv_to_fc", "activ", "np.array", "initial.astype().flatten.astype().flatten", "tf.Variable", "tf.Variable", "stn.spatial_transformer_network", "tf.identity", "activ", "tf.concat", "stable_baselines.common.tf_layers.conv", "linear", "tf.constant", "tf.matmul", "tf.reshape", "tf.reshape", "linear", "tf.reshape", "initial.astype().flatten.astype", "np.sqrt", "np.sqrt", "np.sqrt"], "function", ["None"], ["", "def", "stn_skip_small", "(", "input_tensor", ",", "return_fixation", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "visual_input", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "49", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "49", "]", ",", "[", "-", "1", ",", "50", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "nn", ".", "relu", "\n", "\n", "\n", "\n", "layer_1", "=", "activ", "(", "conv", "(", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "7", ",", "7", ",", "1", ")", ")", ",", "'c1'", ",", "n_filters", "=", "16", ",", "filter_size", "=", "3", ",", "stride", "=", "1", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "**", "kwargs", ")", ")", "\n", "layer_2", "=", "conv_to_fc", "(", "layer_1", ")", "\n", "layer_3", "=", "activ", "(", "linear", "(", "layer_2", ",", "'fc0'", ",", "n_hidden", "=", "24", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "\n", "initial", "=", "np", ".", "array", "(", "[", "[", "1.", ",", "1e-6", ",", "1e-6", "]", ",", "[", "1e-6", ",", "1.", ",", "1e-6", "]", "]", ")", "\n", "initial", "=", "initial", ".", "astype", "(", "'float32'", ")", ".", "flatten", "(", ")", "\n", "\n", "W_fc1", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "1e-6", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "24", ",", "6", "]", ")", ",", "name", "=", "'W_fc1'", ",", "trainable", "=", "True", ")", "\n", "b_fc1", "=", "tf", ".", "Variable", "(", "initial_value", "=", "initial", ",", "name", "=", "'b_fc1'", ",", "trainable", "=", "True", ")", "\n", "h_fc1", "=", "tf", ".", "matmul", "(", "layer_3", ",", "W_fc1", ")", "+", "b_fc1", "\n", "transformed_input", "=", "transformer", "(", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "7", ",", "7", ",", "1", ")", ")", ",", "h_fc1", ",", "(", "5", ",", "5", ")", ")", "\n", "transformed_input_named", "=", "tf", ".", "identity", "(", "tf", ".", "reshape", "(", "transformed_input", ",", "(", "-", "1", ",", "25", ")", ")", ",", "name", "=", "'stn_output'", ")", "\n", "\n", "#layer_1 = activ(conv(transformed_input, 'c1', n_filters=16, filter_size=3, stride=1, init_scale=np.sqrt(2), **kwargs))", "\n", "#layer_2=conv_to_fc(layer_1)", "\n", "visual_output", "=", "activ", "(", "linear", "(", "transformed_input_named", ",", "'fc2'", ",", "n_hidden", "=", "49", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "if", "return_fixation", ":", "\n", "        ", "return", "transformed_input", ",", "total_output", "\n", "", "else", ":", "\n", "        ", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_mask": [[158, 185], ["tf.to_int32", "tf.range", "tf.range", "tf.tile", "tf.exp", "tf.to_int32", "tf.to_int32", "tf.to_float", "tf.to_float", "tf.ones_like", "tf.reduce_sum", "range", "len", "tf.shape", "u.get_shape"], "function", ["None"], ["", "", "def", "gaussian_mask", "(", "params", ",", "R", ",", "C", ")", ":", "\n", "    ", "\"\"\"Define a mask of size RxC given by one 1-D Gaussian per row.\n    u, s and d must be 1-dimensional vectors\"\"\"", "\n", "u", ",", "s", ",", "d", "=", "(", "params", "[", "...", ",", "i", "]", "for", "i", "in", "range", "(", "3", ")", ")", "\n", "\n", "for", "i", "in", "(", "u", ",", "s", ",", "d", ")", ":", "\n", "        ", "assert", "len", "(", "u", ".", "get_shape", "(", ")", ")", "==", "1", ",", "i", "\n", "\n", "", "batch_size", "=", "tf", ".", "to_int32", "(", "tf", ".", "shape", "(", "u", ")", "[", "0", "]", ")", "\n", "\n", "R", "=", "tf", ".", "range", "(", "tf", ".", "to_int32", "(", "R", ")", ")", "\n", "C", "=", "tf", ".", "range", "(", "tf", ".", "to_int32", "(", "C", ")", ")", "\n", "R", "=", "tf", ".", "to_float", "(", "R", ")", "[", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", ",", ":", "]", "\n", "C", "=", "tf", ".", "to_float", "(", "C", ")", "[", "tf", ".", "newaxis", ",", ":", ",", "tf", ".", "newaxis", "]", "\n", "C", "=", "tf", ".", "tile", "(", "C", ",", "(", "batch_size", ",", "1", ",", "1", ")", ")", "\n", "\n", "u", ",", "d", "=", "u", "[", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", ",", "d", "[", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "\n", "s", "=", "s", "[", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "\n", "\n", "ur", "=", "u", "+", "(", "R", "-", "0.", ")", "*", "d", "\n", "sr", "=", "tf", ".", "ones_like", "(", "ur", ")", "*", "s", "\n", "\n", "mask", "=", "C", "-", "ur", "\n", "mask", "=", "tf", ".", "exp", "(", "-", ".5", "*", "(", "mask", "/", "sr", ")", "**", "2", ")", "\n", "\n", "mask", "/=", "tf", ".", "reduce_sum", "(", "mask", ",", "1", ",", "keep_dims", "=", "True", ")", "+", "1e-8", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_glimpse": [[187, 219], ["inpt.get_shape", "len", "train.gaussian_mask", "train.gaussian_mask", "tf.unstack", "tf.stack", "tf.matmul", "gs.append", "tf.matmul"], "function", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_mask", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_mask"], ["", "def", "gaussian_glimpse", "(", "inpt", ",", "attention_params", ",", "glimpse_size", ")", ":", "\n", "    ", "\"\"\"Extracts an attention glimpse\n    :param inpt: tensor of shape == (batch_size, img_height, img_width)\n    :param attention_params: tensor of shape = (batch_size, 6) as\n        [uy, sy, dy, ux, sx, dx] with u - mean, s - std, d - stride\"\n    :param glimpse_size: 2-tuple of ints as (height, width),\n        size of the extracted glimpse\n    :return: tensor\n    \"\"\"", "\n", "\n", "ap", "=", "attention_params", "\n", "shape", "=", "inpt", ".", "get_shape", "(", ")", "\n", "rank", "=", "len", "(", "shape", ")", "\n", "\n", "assert", "rank", "in", "(", "3", ",", "4", ")", ",", "\"Input must be 3 or 4 dimensional tensor\"", "\n", "\n", "inpt_H", ",", "inpt_W", "=", "shape", "[", "1", ":", "3", "]", "\n", "if", "rank", "==", "3", ":", "\n", "        ", "inpt", "=", "inpt", "[", "...", ",", "tf", ".", "newaxis", "]", "\n", "rank", "+=", "1", "\n", "\n", "", "Fy", "=", "gaussian_mask", "(", "ap", "[", "...", ",", "0", ":", "3", "]", ",", "glimpse_size", "[", "0", "]", ",", "inpt_H", ")", "\n", "Fx", "=", "gaussian_mask", "(", "ap", "[", "...", ",", "3", ":", "6", "]", ",", "glimpse_size", "[", "1", "]", ",", "inpt_W", ")", "\n", "\n", "gs", "=", "[", "]", "\n", "for", "channel", "in", "tf", ".", "unstack", "(", "inpt", ",", "axis", "=", "rank", "-", "1", ")", ":", "\n", "        ", "g", "=", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "Fy", ",", "channel", ",", "adjoint_a", "=", "True", ")", ",", "Fx", ")", "\n", "gs", ".", "append", "(", "g", ")", "\n", "", "g", "=", "tf", ".", "stack", "(", "gs", ",", "axis", "=", "rank", "-", "1", ")", "\n", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_skip_small": [[222, 248], ["tf.slice", "tf.slice", "activ", "stable_baselines.common.tf_layers.conv_to_fc", "activ", "activ", "np.array", "initial.astype().flatten.astype().flatten", "tf.Variable", "tf.Variable", "train.gaussian_glimpse", "tf.identity", "activ", "tf.concat", "stable_baselines.common.tf_layers.conv", "linear", "linear", "tf.constant", "tf.matmul", "tf.reshape", "tf.reshape", "linear", "tf.reshape", "initial.astype().flatten.astype", "np.sqrt", "np.sqrt", "np.sqrt", "np.sqrt"], "function", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.gaussian_glimpse"], ["", "def", "gaussian_skip_small", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "visual_input", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "49", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "49", "]", ",", "[", "-", "1", ",", "50", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "nn", ".", "relu", "\n", "\n", "\n", "\n", "layer_1", "=", "activ", "(", "conv", "(", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "7", ",", "7", ",", "1", ")", ")", ",", "'c1'", ",", "n_filters", "=", "16", ",", "filter_size", "=", "3", ",", "stride", "=", "1", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "**", "kwargs", ")", ")", "\n", "layer_2", "=", "conv_to_fc", "(", "layer_1", ")", "\n", "layer_3", "=", "activ", "(", "linear", "(", "layer_2", ",", "'fc0'", ",", "n_hidden", "=", "24", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "layer_4", "=", "activ", "(", "linear", "(", "layer_3", ",", "'fc01'", ",", "n_hidden", "=", "12", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "\n", "#Before: 1,.5,1 1,.5,1", "\n", "initial", "=", "np", ".", "array", "(", "[", "[", "1.", ",", "0.5", ",", "1.", "]", ",", "[", "1.", ",", "0.5", ",", "1.", "]", "]", ")", "\n", "initial", "=", "initial", ".", "astype", "(", "'float32'", ")", ".", "flatten", "(", ")", "\n", "\n", "W_fc1", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "1e-6", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "12", ",", "6", "]", ")", ",", "name", "=", "'W_fc1'", ",", "trainable", "=", "True", ")", "\n", "b_fc1", "=", "tf", ".", "Variable", "(", "initial_value", "=", "initial", ",", "name", "=", "'b_fc1'", ",", "trainable", "=", "True", ")", "\n", "gaussian_params", "=", "tf", ".", "matmul", "(", "layer_4", ",", "W_fc1", ")", "+", "b_fc1", "\n", "\n", "transformed_input", "=", "gaussian_glimpse", "(", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "7", ",", "7", ")", ")", ",", "gaussian_params", ",", "(", "4", ",", "4", ")", ")", "\n", "transformed_input_named", "=", "tf", ".", "identity", "(", "tf", ".", "reshape", "(", "transformed_input", ",", "(", "-", "1", ",", "16", ")", ")", ",", "name", "=", "'gaussian_output'", ")", "\n", "\n", "visual_output", "=", "activ", "(", "linear", "(", "transformed_input_named", ",", "'fc2'", ",", "n_hidden", "=", "49", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train.make_env": [[257, 280], ["stable_baselines.common.set_global_seeds", "gym.make", "gym.make.seed", "gym.make.reset_task", "gym.make", "gym.make.seed"], "function", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed"], ["", "def", "make_env", "(", "env_id", ",", "rank", ",", "seed", "=", "0", ",", "board", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Utility function for multiprocessed env.\n\n    :param env_id: (str) the environment ID\n    :param num_env: (int) the number of environments you wish to have in subprocesses\n    :param seed: (int) the inital seed for RNG\n    :param rank: (int) index of the subprocess\n    :param board: (numpy array) pre-determined board for env. \n    \"\"\"", "\n", "if", "board", "is", "not", "None", ":", "\n", "        ", "def", "_init", "(", ")", ":", "\n", "            ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "env", ".", "seed", "(", "seed", "+", "rank", ")", "\n", "env", ".", "reset_task", "(", "board", ")", "\n", "return", "env", "\n", "", "", "else", ":", "\n", "        ", "def", "_init", "(", ")", ":", "\n", "            ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "env", ".", "seed", "(", "seed", "+", "rank", ")", "\n", "return", "env", "\n", "", "", "set_global_seeds", "(", "seed", ")", "\n", "return", "_init", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train_4x4.mlp_skip": [[48, 65], ["tf.slice", "tf.slice", "enumerate", "tf.concat", "activ", "range", "linear", "str", "np.sqrt"], "function", ["None"], ["def", "mlp_skip", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    \n\n    :param input_tensor: (TensorFlow Tensor) Observation input placeholder\n    :param kwargs: (dict) Extra keywords parameters for the convolutional layers of the CNN\n    :return: (TensorFlow Tensor) The CNN output layer\n    \"\"\"", "\n", "net_arch", "=", "[", "784", "for", "_", "in", "range", "(", "num_layers", ")", "]", "\n", "visual_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "784", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "784", "]", ",", "[", "-", "1", ",", "785", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "tanh", "\n", "for", "i", ",", "layer_size", "in", "enumerate", "(", "net_arch", ")", ":", "\n", "        ", "visual_output", "=", "activ", "(", "linear", "(", "visual_output", ",", "'pi_fc'", "+", "str", "(", "i", ")", ",", "n_hidden", "=", "layer_size", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "#total_output=visual_output", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train_4x4.cnn_skip_small": [[66, 80], ["tf.slice", "tf.slice", "tf.reshape", "activ", "stable_baselines.common.tf_layers.conv_to_fc", "activ", "tf.concat", "stable_baselines.common.tf_layers.conv", "linear", "np.sqrt", "np.sqrt"], "function", ["None"], ["", "def", "cnn_skip_small", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "visual_input", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "16", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "16", "]", ",", "[", "-", "1", ",", "17", "]", ",", "'prev_outputs'", ")", "\n", "visual_input", "=", "tf", ".", "reshape", "(", "visual_input", ",", "(", "-", "1", ",", "4", ",", "4", ",", "1", ")", ")", "\n", "activ", "=", "tf", ".", "nn", ".", "relu", "\n", "\n", "layer_1", "=", "activ", "(", "conv", "(", "visual_input", ",", "'c1'", ",", "n_filters", "=", "16", ",", "filter_size", "=", "2", ",", "stride", "=", "1", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "**", "kwargs", ")", ")", "\n", "#print(layer_1.shape,visual_input.shape)", "\n", "#layer_2 = activ(conv(layer_1, 'c2', n_filters=16, filter_size=3, stride=1, init_scale=np.sqrt(2), **kwargs))", "\n", "#layer_3=conv_to_fc(layer_2)", "\n", "layer_2", "=", "conv_to_fc", "(", "layer_1", ")", "\n", "visual_output", "=", "activ", "(", "linear", "(", "layer_2", ",", "'fc1'", ",", "n_hidden", "=", "16", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train_4x4.mlp_skip_small": [[82, 99], ["tf.slice", "tf.slice", "enumerate", "tf.concat", "activ", "range", "linear", "str", "np.sqrt"], "function", ["None"], ["", "def", "mlp_skip_small", "(", "input_tensor", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    \n\n    :param input_tensor: (TensorFlow Tensor) Observation input placeholder\n    :param kwargs: (dict) Extra keywords parameters for the convolutional layers of the CNN\n    :return: (TensorFlow Tensor) The CNN output layer\n    \"\"\"", "\n", "net_arch", "=", "[", "16", "for", "_", "in", "range", "(", "num_layers", ")", "]", "\n", "visual_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "16", "]", ",", "name", "=", "'input_img'", ")", "\n", "prev_output", "=", "tf", ".", "slice", "(", "input_tensor", ",", "[", "0", ",", "16", "]", ",", "[", "-", "1", ",", "17", "]", ",", "'prev_outputs'", ")", "\n", "activ", "=", "tf", ".", "tanh", "\n", "for", "i", ",", "layer_size", "in", "enumerate", "(", "net_arch", ")", ":", "\n", "        ", "visual_output", "=", "activ", "(", "linear", "(", "visual_output", ",", "'pi_fc'", "+", "str", "(", "i", ")", ",", "n_hidden", "=", "layer_size", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")", "\n", "", "total_output", "=", "tf", ".", "concat", "(", "[", "visual_output", ",", "prev_output", "]", ",", "1", ")", "\n", "#total_output=visual_output", "\n", "return", "total_output", "\n", "\n"]], "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.train_4x4.make_env": [[102, 125], ["stable_baselines.common.set_global_seeds", "gym.make", "gym.make.seed", "gym.make.reset_task", "gym.make", "gym.make.seed"], "function", ["home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed", "home.repos.pwc.inspect_result.sreejank_Abstract_Neural_Metamers.None.small_env_4x4.BattleshipEnv.seed"], ["", "def", "make_env", "(", "env_id", ",", "rank", ",", "seed", "=", "0", ",", "board", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Utility function for multiprocessed env.\n\n    :param env_id: (str) the environment ID\n    :param num_env: (int) the number of environments you wish to have in subprocesses\n    :param seed: (int) the inital seed for RNG\n    :param rank: (int) index of the subprocess\n    :param board: (numpy array) pre-determined board for env. \n    \"\"\"", "\n", "if", "board", "is", "not", "None", ":", "\n", "        ", "def", "_init", "(", ")", ":", "\n", "            ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "env", ".", "seed", "(", "seed", "+", "rank", ")", "\n", "env", ".", "reset_task", "(", "board", ")", "\n", "return", "env", "\n", "", "", "else", ":", "\n", "        ", "def", "_init", "(", ")", ":", "\n", "            ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "env", ".", "seed", "(", "seed", "+", "rank", ")", "\n", "return", "env", "\n", "", "", "set_global_seeds", "(", "seed", ")", "\n", "return", "_init", "\n", "\n"]]}