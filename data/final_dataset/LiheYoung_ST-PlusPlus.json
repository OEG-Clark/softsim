{"home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.parse_args": [[22, 50], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'ST and ST++ Framework'", ")", "\n", "\n", "# basic settings", "\n", "parser", ".", "add_argument", "(", "'--data-root'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "choices", "=", "[", "'pascal'", ",", "'cityscapes'", "]", ",", "default", "=", "'pascal'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "16", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--crop-size'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--backbone'", ",", "type", "=", "str", ",", "choices", "=", "[", "'resnet50'", ",", "'resnet101'", "]", ",", "default", "=", "'resnet50'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "choices", "=", "[", "'deeplabv3plus'", ",", "'pspnet'", ",", "'deeplabv2'", "]", ",", "\n", "default", "=", "'deeplabv3plus'", ")", "\n", "\n", "# semi-supervised settings", "\n", "parser", ".", "add_argument", "(", "'--labeled-id-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--unlabeled-id-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--pseudo-mask-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--save-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "\n", "# arguments for ST++", "\n", "parser", ".", "add_argument", "(", "'--reliable-id-path'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--plus'", ",", "dest", "=", "'plus'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'whether to use ST++'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.main": [[52, 165], ["torch.nn.CrossEntropyLoss", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.init_basic_elems", "print", "main.train", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.select_reliable", "print", "os.path.join", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.label", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.init_basic_elems", "main.train", "print", "os.path.join", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.label", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.init_basic_elems", "main.train", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "exit", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.label", "print", "dataset.semi.SemiDataset", "torch.utils.data.DataLoader", "main.init_basic_elems", "main.train", "len", "utils.count_params"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.init_basic_elems", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.select_reliable", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.label", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.init_basic_elems", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.label", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.init_basic_elems", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.label", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.init_basic_elems", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.count_params"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "pseudo_mask_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "pseudo_mask_path", ")", "\n", "", "if", "args", ".", "plus", "and", "args", ".", "reliable_id_path", "is", "None", ":", "\n", "        ", "exit", "(", "'Please specify reliable-id-path in ST++.'", ")", "\n", "\n", "", "criterion", "=", "CrossEntropyLoss", "(", "ignore_index", "=", "255", ")", "\n", "\n", "valset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "'val'", ",", "None", ")", "\n", "valloader", "=", "DataLoader", "(", "valset", ",", "batch_size", "=", "4", "if", "args", ".", "dataset", "==", "'cityscapes'", "else", "1", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "drop_last", "=", "False", ")", "\n", "\n", "# <====================== Supervised training with labeled images (SupOnly) ======================>", "\n", "print", "(", "'\\n================> Total stage 1/%i: '", "\n", "'Supervised training on labeled images (SupOnly)'", "%", "(", "6", "if", "args", ".", "plus", "else", "3", ")", ")", "\n", "\n", "global", "MODE", "\n", "MODE", "=", "'train'", "\n", "\n", "trainset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "MODE", ",", "args", ".", "crop_size", ",", "args", ".", "labeled_id_path", ")", "\n", "trainset", ".", "ids", "=", "2", "*", "trainset", ".", "ids", "if", "len", "(", "trainset", ".", "ids", ")", "<", "200", "else", "trainset", ".", "ids", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "16", ",", "drop_last", "=", "True", ")", "\n", "\n", "model", ",", "optimizer", "=", "init_basic_elems", "(", "args", ")", "\n", "print", "(", "'\\nParams: %.1fM'", "%", "count_params", "(", "model", ")", ")", "\n", "\n", "best_model", ",", "checkpoints", "=", "train", "(", "model", ",", "trainloader", ",", "valloader", ",", "criterion", ",", "optimizer", ",", "args", ")", "\n", "\n", "\"\"\"\n        ST framework without selective re-training\n    \"\"\"", "\n", "if", "not", "args", ".", "plus", ":", "\n", "# <============================= Pseudo label all unlabeled images =============================>", "\n", "        ", "print", "(", "'\\n\\n\\n================> Total stage 2/3: Pseudo labeling all unlabeled images'", ")", "\n", "\n", "dataset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "'label'", ",", "None", ",", "None", ",", "args", ".", "unlabeled_id_path", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "drop_last", "=", "False", ")", "\n", "\n", "label", "(", "best_model", ",", "dataloader", ",", "args", ")", "\n", "\n", "# <======================== Re-training on labeled and unlabeled images ========================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 3/3: Re-training on labeled and unlabeled images'", ")", "\n", "\n", "MODE", "=", "'semi_train'", "\n", "\n", "trainset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "MODE", ",", "args", ".", "crop_size", ",", "\n", "args", ".", "labeled_id_path", ",", "args", ".", "unlabeled_id_path", ",", "args", ".", "pseudo_mask_path", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "16", ",", "drop_last", "=", "True", ")", "\n", "\n", "model", ",", "optimizer", "=", "init_basic_elems", "(", "args", ")", "\n", "\n", "train", "(", "model", ",", "trainloader", ",", "valloader", ",", "criterion", ",", "optimizer", ",", "args", ")", "\n", "\n", "return", "\n", "\n", "", "\"\"\"\n        ST++ framework with selective re-training\n    \"\"\"", "\n", "# <===================================== Select Reliable IDs =====================================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 2/6: Select reliable images for the 1st stage re-training'", ")", "\n", "\n", "dataset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "'label'", ",", "None", ",", "None", ",", "args", ".", "unlabeled_id_path", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "drop_last", "=", "False", ")", "\n", "\n", "select_reliable", "(", "checkpoints", ",", "dataloader", ",", "args", ")", "\n", "\n", "# <================================ Pseudo label reliable images =================================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 3/6: Pseudo labeling reliable images'", ")", "\n", "\n", "cur_unlabeled_id_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "reliable_id_path", ",", "'reliable_ids.txt'", ")", "\n", "dataset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "'label'", ",", "None", ",", "None", ",", "cur_unlabeled_id_path", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "drop_last", "=", "False", ")", "\n", "\n", "label", "(", "best_model", ",", "dataloader", ",", "args", ")", "\n", "\n", "# <================================== The 1st stage re-training ==================================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 4/6: The 1st stage re-training on labeled and reliable unlabeled images'", ")", "\n", "\n", "MODE", "=", "'semi_train'", "\n", "\n", "trainset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "MODE", ",", "args", ".", "crop_size", ",", "\n", "args", ".", "labeled_id_path", ",", "cur_unlabeled_id_path", ",", "args", ".", "pseudo_mask_path", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "16", ",", "drop_last", "=", "True", ")", "\n", "\n", "model", ",", "optimizer", "=", "init_basic_elems", "(", "args", ")", "\n", "\n", "best_model", "=", "train", "(", "model", ",", "trainloader", ",", "valloader", ",", "criterion", ",", "optimizer", ",", "args", ")", "\n", "\n", "# <=============================== Pseudo label unreliable images ================================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 5/6: Pseudo labeling unreliable images'", ")", "\n", "\n", "cur_unlabeled_id_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "reliable_id_path", ",", "'unreliable_ids.txt'", ")", "\n", "dataset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "'label'", ",", "None", ",", "None", ",", "cur_unlabeled_id_path", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "drop_last", "=", "False", ")", "\n", "\n", "label", "(", "best_model", ",", "dataloader", ",", "args", ")", "\n", "\n", "# <================================== The 2nd stage re-training ==================================>", "\n", "print", "(", "'\\n\\n\\n================> Total stage 6/6: The 2nd stage re-training on labeled and all unlabeled images'", ")", "\n", "\n", "trainset", "=", "SemiDataset", "(", "args", ".", "dataset", ",", "args", ".", "data_root", ",", "MODE", ",", "args", ".", "crop_size", ",", "\n", "args", ".", "labeled_id_path", ",", "args", ".", "unlabeled_id_path", ",", "args", ".", "pseudo_mask_path", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "16", ",", "drop_last", "=", "True", ")", "\n", "\n", "model", ",", "optimizer", "=", "init_basic_elems", "(", "args", ")", "\n", "\n", "train", "(", "model", ",", "trainloader", ",", "valloader", ",", "criterion", ",", "optimizer", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.init_basic_elems": [[167, 186], ["torch.optim.SGD", "torch.nn.DataParallel().cuda", "DataParallel().cuda.load_state_dict", "torch.load", "torch.nn.DataParallel", "DataParallel().cuda.backbone.parameters", "DataParallel().cuda.named_parameters"], "function", ["None"], ["", "def", "init_basic_elems", "(", "args", ")", ":", "\n", "    ", "model_zoo", "=", "{", "'deeplabv3plus'", ":", "DeepLabV3Plus", ",", "'pspnet'", ":", "PSPNet", ",", "'deeplabv2'", ":", "DeepLabV2", "}", "\n", "model", "=", "model_zoo", "[", "args", ".", "model", "]", "(", "args", ".", "backbone", ",", "21", "if", "args", ".", "dataset", "==", "'pascal'", "else", "19", ")", "\n", "\n", "head_lr_multiple", "=", "10.0", "\n", "if", "args", ".", "model", "==", "'deeplabv2'", ":", "\n", "        ", "assert", "args", ".", "backbone", "==", "'resnet101'", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'pretrained/deeplabv2_resnet101_coco_pretrained.pth'", ")", ")", "\n", "head_lr_multiple", "=", "1.0", "\n", "\n", "", "optimizer", "=", "SGD", "(", "[", "{", "'params'", ":", "model", ".", "backbone", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "lr", "}", ",", "\n", "{", "'params'", ":", "[", "param", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", "\n", "if", "'backbone'", "not", "in", "name", "]", ",", "\n", "'lr'", ":", "args", ".", "lr", "*", "head_lr_multiple", "}", "]", ",", "\n", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "model", "=", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "return", "model", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train": [[188, 259], ["range", "len", "print", "model.train", "tqdm.tqdm", "enumerate", "utils.meanIOU", "model.eval", "tqdm.tqdm", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "criterion.item", "tqdm.tqdm.set_description", "torch.no_grad", "torch.save", "copy.deepcopy", "checkpoints.append", "img.cuda.cuda", "mask.cuda", "img.cuda.cuda", "model", "torch.argmax", "utils.meanIOU.add_batch", "tqdm.tqdm.set_description", "os.remove", "model.module.state_dict", "os.path.join", "copy.deepcopy", "torch.argmax.cpu().numpy", "mask.numpy", "utils.meanIOU.evaluate", "os.path.join", "torch.argmax.cpu"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.train", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.add_batch", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.evaluate"], ["", "def", "train", "(", "model", ",", "trainloader", ",", "valloader", ",", "criterion", ",", "optimizer", ",", "args", ")", ":", "\n", "    ", "iters", "=", "0", "\n", "total_iters", "=", "len", "(", "trainloader", ")", "*", "args", ".", "epochs", "\n", "\n", "previous_best", "=", "0.0", "\n", "\n", "global", "MODE", "\n", "\n", "if", "MODE", "==", "'train'", ":", "\n", "        ", "checkpoints", "=", "[", "]", "\n", "\n", "", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "print", "(", "\"\\n==> Epoch %i, learning rate = %.4f\\t\\t\\t\\t\\t previous best = %.2f\"", "%", "\n", "(", "epoch", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ",", "previous_best", ")", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "total_loss", "=", "0.0", "\n", "tbar", "=", "tqdm", "(", "trainloader", ")", "\n", "\n", "for", "i", ",", "(", "img", ",", "mask", ")", "in", "enumerate", "(", "tbar", ")", ":", "\n", "            ", "img", ",", "mask", "=", "img", ".", "cuda", "(", ")", ",", "mask", ".", "cuda", "(", ")", "\n", "\n", "pred", "=", "model", "(", "img", ")", "\n", "loss", "=", "criterion", "(", "pred", ",", "mask", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "iters", "+=", "1", "\n", "lr", "=", "args", ".", "lr", "*", "(", "1", "-", "iters", "/", "total_iters", ")", "**", "0.9", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "lr", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "\"lr\"", "]", "=", "lr", "*", "1.0", "if", "args", ".", "model", "==", "'deeplabv2'", "else", "lr", "*", "10.0", "\n", "\n", "tbar", ".", "set_description", "(", "'Loss: %.3f'", "%", "(", "total_loss", "/", "(", "i", "+", "1", ")", ")", ")", "\n", "\n", "", "metric", "=", "meanIOU", "(", "num_classes", "=", "21", "if", "args", ".", "dataset", "==", "'pascal'", "else", "19", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "tbar", "=", "tqdm", "(", "valloader", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "img", ",", "mask", ",", "_", "in", "tbar", ":", "\n", "                ", "img", "=", "img", ".", "cuda", "(", ")", "\n", "pred", "=", "model", "(", "img", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "\n", "metric", ".", "add_batch", "(", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "mask", ".", "numpy", "(", ")", ")", "\n", "mIOU", "=", "metric", ".", "evaluate", "(", ")", "[", "-", "1", "]", "\n", "\n", "tbar", ".", "set_description", "(", "'mIOU: %.2f'", "%", "(", "mIOU", "*", "100.0", ")", ")", "\n", "\n", "", "", "mIOU", "*=", "100.0", "\n", "if", "mIOU", ">", "previous_best", ":", "\n", "            ", "if", "previous_best", "!=", "0", ":", "\n", "                ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'%s_%s_%.2f.pth'", "%", "(", "args", ".", "model", ",", "args", ".", "backbone", ",", "previous_best", ")", ")", ")", "\n", "", "previous_best", "=", "mIOU", "\n", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'%s_%s_%.2f.pth'", "%", "(", "args", ".", "model", ",", "args", ".", "backbone", ",", "mIOU", ")", ")", ")", "\n", "\n", "best_model", "=", "deepcopy", "(", "model", ")", "\n", "\n", "", "if", "MODE", "==", "'train'", "and", "(", "(", "epoch", "+", "1", ")", "in", "[", "args", ".", "epochs", "//", "3", ",", "args", ".", "epochs", "*", "2", "//", "3", ",", "args", ".", "epochs", "]", ")", ":", "\n", "            ", "checkpoints", ".", "append", "(", "deepcopy", "(", "model", ")", ")", "\n", "\n", "", "", "if", "MODE", "==", "'train'", ":", "\n", "        ", "return", "best_model", ",", "checkpoints", "\n", "\n", "", "return", "best_model", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.select_reliable": [[261, 295], ["range", "tqdm.tqdm", "id_to_reliability.sort", "os.path.exists", "os.makedirs", "len", "models[].eval", "torch.no_grad", "open", "open", "img.cuda.cuda", "range", "id_to_reliability.append", "os.path.join", "f.write", "os.path.join", "f.write", "preds.append", "utils.meanIOU", "utils.meanIOU.add_batch", "mIOU.append", "sum", "len", "torch.argmax().cpu().numpy", "len", "len", "len", "utils.meanIOU.evaluate", "torch.argmax().cpu", "torch.argmax", "model"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.add_batch", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.evaluate"], ["", "def", "select_reliable", "(", "models", ",", "dataloader", ",", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "reliable_id_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "reliable_id_path", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "models", ")", ")", ":", "\n", "        ", "models", "[", "i", "]", ".", "eval", "(", ")", "\n", "", "tbar", "=", "tqdm", "(", "dataloader", ")", "\n", "\n", "id_to_reliability", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "img", ",", "mask", ",", "id", "in", "tbar", ":", "\n", "            ", "img", "=", "img", ".", "cuda", "(", ")", "\n", "\n", "preds", "=", "[", "]", "\n", "for", "model", "in", "models", ":", "\n", "                ", "preds", ".", "append", "(", "torch", ".", "argmax", "(", "model", "(", "img", ")", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "mIOU", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "preds", ")", "-", "1", ")", ":", "\n", "                ", "metric", "=", "meanIOU", "(", "num_classes", "=", "21", "if", "args", ".", "dataset", "==", "'pascal'", "else", "19", ")", "\n", "metric", ".", "add_batch", "(", "preds", "[", "i", "]", ",", "preds", "[", "-", "1", "]", ")", "\n", "mIOU", ".", "append", "(", "metric", ".", "evaluate", "(", ")", "[", "-", "1", "]", ")", "\n", "\n", "", "reliability", "=", "sum", "(", "mIOU", ")", "/", "len", "(", "mIOU", ")", "\n", "id_to_reliability", ".", "append", "(", "(", "id", "[", "0", "]", ",", "reliability", ")", ")", "\n", "\n", "", "", "id_to_reliability", ".", "sort", "(", "key", "=", "lambda", "elem", ":", "elem", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "reliable_id_path", ",", "'reliable_ids.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "elem", "in", "id_to_reliability", "[", ":", "len", "(", "id_to_reliability", ")", "//", "2", "]", ":", "\n", "            ", "f", ".", "write", "(", "elem", "[", "0", "]", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "reliable_id_path", ",", "'unreliable_ids.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "elem", "in", "id_to_reliability", "[", "len", "(", "id_to_reliability", ")", "//", "2", ":", "]", ":", "\n", "            ", "f", ".", "write", "(", "elem", "[", "0", "]", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.main.label": [[297, 319], ["model.eval", "tqdm.tqdm", "utils.meanIOU", "utils.color_map", "torch.no_grad", "img.cuda.cuda", "model", "torch.argmax().cpu", "utils.meanIOU.add_batch", "PIL.Image.fromarray", "Image.fromarray.putpalette", "Image.fromarray.save", "tqdm.tqdm.set_description", "Image.fromarray.numpy", "mask.numpy", "utils.meanIOU.evaluate", "Image.fromarray.squeeze().numpy().astype", "torch.argmax", "Image.fromarray.squeeze().numpy", "os.path.basename", "Image.fromarray.squeeze", "id[].split"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.color_map", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.add_batch", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.evaluate"], ["", "", "", "def", "label", "(", "model", ",", "dataloader", ",", "args", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "tbar", "=", "tqdm", "(", "dataloader", ")", "\n", "\n", "metric", "=", "meanIOU", "(", "num_classes", "=", "21", "if", "args", ".", "dataset", "==", "'pascal'", "else", "19", ")", "\n", "cmap", "=", "color_map", "(", "args", ".", "dataset", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "img", ",", "mask", ",", "id", "in", "tbar", ":", "\n", "            ", "img", "=", "img", ".", "cuda", "(", ")", "\n", "pred", "=", "model", "(", "img", ",", "True", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "pred", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "\n", "metric", ".", "add_batch", "(", "pred", ".", "numpy", "(", ")", ",", "mask", ".", "numpy", "(", ")", ")", "\n", "mIOU", "=", "metric", ".", "evaluate", "(", ")", "[", "-", "1", "]", "\n", "\n", "pred", "=", "Image", ".", "fromarray", "(", "pred", ".", "squeeze", "(", "0", ")", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "pred", ".", "putpalette", "(", "cmap", ")", "\n", "\n", "pred", ".", "save", "(", "'%s/%s'", "%", "(", "args", ".", "pseudo_mask_path", ",", "os", ".", "path", ".", "basename", "(", "id", "[", "0", "]", ".", "split", "(", "' '", ")", "[", "1", "]", ")", ")", ")", "\n", "\n", "tbar", ".", "set_description", "(", "'mIOU: %.2f'", "%", "(", "mIOU", "*", "100.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.__init__": [[11, 14], ["numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "hist", "=", "np", ".", "zeros", "(", "(", "num_classes", ",", "num_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU._fast_hist": [[15, 21], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "methods", ["None"], ["", "def", "_fast_hist", "(", "self", ",", "label_pred", ",", "label_true", ")", ":", "\n", "        ", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "self", ".", "num_classes", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "self", ".", "num_classes", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "\n", "label_pred", "[", "mask", "]", ",", "minlength", "=", "self", ".", "num_classes", "**", "2", ")", ".", "reshape", "(", "self", ".", "num_classes", ",", "self", ".", "num_classes", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.add_batch": [[22, 25], ["zip", "utils.meanIOU._fast_hist", "lp.flatten", "lt.flatten"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU._fast_hist"], ["", "def", "add_batch", "(", "self", ",", "predictions", ",", "gts", ")", ":", "\n", "        ", "for", "lp", ",", "lt", "in", "zip", "(", "predictions", ",", "gts", ")", ":", "\n", "            ", "self", ".", "hist", "+=", "self", ".", "_fast_hist", "(", "lp", ".", "flatten", "(", ")", ",", "lt", ".", "flatten", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.meanIOU.evaluate": [[26, 29], ["numpy.diag", "numpy.nanmean", "numpy.diag", "utils.meanIOU.hist.sum", "utils.meanIOU.hist.sum"], "methods", ["None"], ["", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "iu", "=", "np", ".", "diag", "(", "self", ".", "hist", ")", "/", "(", "self", ".", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "self", ".", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "self", ".", "hist", ")", ")", "\n", "return", "iu", ",", "np", ".", "nanmean", "(", "iu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.count_params": [[5, 8], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["def", "count_params", "(", "model", ")", ":", "\n", "    ", "param_num", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", ")", "\n", "return", "param_num", "/", "1e6", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.None.utils.color_map": [[31, 71], ["numpy.zeros", "range", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "utils.color_map.bitget"], "function", ["None"], ["", "", "def", "color_map", "(", "dataset", "=", "'pascal'", ")", ":", "\n", "    ", "cmap", "=", "np", ".", "zeros", "(", "(", "256", ",", "3", ")", ",", "dtype", "=", "'uint8'", ")", "\n", "\n", "if", "dataset", "==", "'pascal'", "or", "dataset", "==", "'coco'", ":", "\n", "        ", "def", "bitget", "(", "byteval", ",", "idx", ")", ":", "\n", "            ", "return", "(", "byteval", "&", "(", "1", "<<", "idx", ")", ")", "!=", "0", "\n", "\n", "", "for", "i", "in", "range", "(", "256", ")", ":", "\n", "            ", "r", "=", "g", "=", "b", "=", "0", "\n", "c", "=", "i", "\n", "for", "j", "in", "range", "(", "8", ")", ":", "\n", "                ", "r", "=", "r", "|", "(", "bitget", "(", "c", ",", "0", ")", "<<", "7", "-", "j", ")", "\n", "g", "=", "g", "|", "(", "bitget", "(", "c", ",", "1", ")", "<<", "7", "-", "j", ")", "\n", "b", "=", "b", "|", "(", "bitget", "(", "c", ",", "2", ")", "<<", "7", "-", "j", ")", "\n", "c", "=", "c", ">>", "3", "\n", "\n", "", "cmap", "[", "i", "]", "=", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "", "", "elif", "dataset", "==", "'cityscapes'", ":", "\n", "        ", "cmap", "[", "0", "]", "=", "np", ".", "array", "(", "[", "128", ",", "64", ",", "128", "]", ")", "\n", "cmap", "[", "1", "]", "=", "np", ".", "array", "(", "[", "244", ",", "35", ",", "232", "]", ")", "\n", "cmap", "[", "2", "]", "=", "np", ".", "array", "(", "[", "70", ",", "70", ",", "70", "]", ")", "\n", "cmap", "[", "3", "]", "=", "np", ".", "array", "(", "[", "102", ",", "102", ",", "156", "]", ")", "\n", "cmap", "[", "4", "]", "=", "np", ".", "array", "(", "[", "190", ",", "153", ",", "153", "]", ")", "\n", "cmap", "[", "5", "]", "=", "np", ".", "array", "(", "[", "153", ",", "153", ",", "153", "]", ")", "\n", "cmap", "[", "6", "]", "=", "np", ".", "array", "(", "[", "250", ",", "170", ",", "30", "]", ")", "\n", "cmap", "[", "7", "]", "=", "np", ".", "array", "(", "[", "220", ",", "220", ",", "0", "]", ")", "\n", "cmap", "[", "8", "]", "=", "np", ".", "array", "(", "[", "107", ",", "142", ",", "35", "]", ")", "\n", "cmap", "[", "9", "]", "=", "np", ".", "array", "(", "[", "152", ",", "251", ",", "152", "]", ")", "\n", "cmap", "[", "10", "]", "=", "np", ".", "array", "(", "[", "70", ",", "130", ",", "180", "]", ")", "\n", "cmap", "[", "11", "]", "=", "np", ".", "array", "(", "[", "220", ",", "20", ",", "60", "]", ")", "\n", "cmap", "[", "12", "]", "=", "np", ".", "array", "(", "[", "255", ",", "0", ",", "0", "]", ")", "\n", "cmap", "[", "13", "]", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "142", "]", ")", "\n", "cmap", "[", "14", "]", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "70", "]", ")", "\n", "cmap", "[", "15", "]", "=", "np", ".", "array", "(", "[", "0", ",", "60", ",", "100", "]", ")", "\n", "cmap", "[", "16", "]", "=", "np", ".", "array", "(", "[", "0", ",", "80", ",", "100", "]", ")", "\n", "cmap", "[", "17", "]", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "230", "]", ")", "\n", "cmap", "[", "18", "]", "=", "np", ".", "array", "(", "[", "119", ",", "11", ",", "32", "]", ")", "\n", "\n", "", "return", "cmap", "\n", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.crop": [[8, 24], ["PIL.ImageOps.expand", "PIL.ImageOps.expand", "random.randint", "random.randint", "img.crop.crop", "mask.crop.crop"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.crop", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.crop"], ["def", "crop", "(", "img", ",", "mask", ",", "size", ")", ":", "\n", "# padding height or width if smaller than cropping size", "\n", "    ", "w", ",", "h", "=", "img", ".", "size", "\n", "padw", "=", "size", "-", "w", "if", "w", "<", "size", "else", "0", "\n", "padh", "=", "size", "-", "h", "if", "h", "<", "size", "else", "0", "\n", "img", "=", "ImageOps", ".", "expand", "(", "img", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "0", ")", "\n", "mask", "=", "ImageOps", ".", "expand", "(", "mask", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "255", ")", "\n", "\n", "# cropping", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "x", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "size", ")", "\n", "y", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x", ",", "y", ",", "x", "+", "size", ",", "y", "+", "size", ")", ")", "\n", "mask", "=", "mask", ".", "crop", "(", "(", "x", ",", "y", ",", "x", "+", "size", ",", "y", "+", "size", ")", ")", "\n", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.hflip": [[26, 31], ["random.random", "img.transpose.transpose", "mask.transpose.transpose"], "function", ["None"], ["", "def", "hflip", "(", "img", ",", "mask", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "p", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "mask", "=", "mask", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.normalize": [[33, 47], ["torchvision.transforms.Compose", "torch.from_numpy().long", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.from_numpy", "numpy.array"], "function", ["None"], ["", "def", "normalize", "(", "img", ",", "mask", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    :param img: PIL image\n    :param mask: PIL image, corresponding mask\n    :return: normalized torch tensor of image and mask\n    \"\"\"", "\n", "img", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "(", "img", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "mask", ")", ")", ".", "long", "(", ")", "\n", "return", "img", ",", "mask", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.resize": [[49, 63], ["random.randint", "img.resize.resize", "mask.resize.resize", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.resize", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.resize"], ["", "def", "resize", "(", "img", ",", "mask", ",", "base_size", ",", "ratio_range", ")", ":", "\n", "    ", "w", ",", "h", "=", "img", ".", "size", "\n", "long_side", "=", "random", ".", "randint", "(", "int", "(", "base_size", "*", "ratio_range", "[", "0", "]", ")", ",", "int", "(", "base_size", "*", "ratio_range", "[", "1", "]", ")", ")", "\n", "\n", "if", "h", ">", "w", ":", "\n", "        ", "oh", "=", "long_side", "\n", "ow", "=", "int", "(", "1.0", "*", "w", "*", "long_side", "/", "h", "+", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "ow", "=", "long_side", "\n", "oh", "=", "int", "(", "1.0", "*", "h", "*", "long_side", "/", "w", "+", "0.5", ")", "\n", "\n", "", "img", "=", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "mask", "=", "mask", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "NEAREST", ")", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.blur": [[65, 70], ["random.random", "numpy.random.uniform", "img.filter.filter", "PIL.ImageFilter.GaussianBlur"], "function", ["None"], ["", "def", "blur", "(", "img", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "p", ":", "\n", "        ", "sigma", "=", "np", ".", "random", ".", "uniform", "(", "0.1", ",", "2.0", ")", "\n", "img", "=", "img", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "sigma", ")", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.cutout": [[72, 103], ["random.random", "numpy.array", "numpy.array", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.random.uniform", "int", "int", "numpy.random.randint", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "Image.fromarray.astype", "Image.fromarray.astype", "numpy.sqrt", "numpy.sqrt", "numpy.random.uniform"], "function", ["None"], ["", "def", "cutout", "(", "img", ",", "mask", ",", "p", "=", "0.5", ",", "size_min", "=", "0.02", ",", "size_max", "=", "0.4", ",", "ratio_1", "=", "0.3", ",", "\n", "ratio_2", "=", "1", "/", "0.3", ",", "value_min", "=", "0", ",", "value_max", "=", "255", ",", "pixel_level", "=", "True", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "p", ":", "\n", "        ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "\n", "img_h", ",", "img_w", ",", "img_c", "=", "img", ".", "shape", "\n", "\n", "while", "True", ":", "\n", "            ", "size", "=", "np", ".", "random", ".", "uniform", "(", "size_min", ",", "size_max", ")", "*", "img_h", "*", "img_w", "\n", "ratio", "=", "np", ".", "random", ".", "uniform", "(", "ratio_1", ",", "ratio_2", ")", "\n", "erase_w", "=", "int", "(", "np", ".", "sqrt", "(", "size", "/", "ratio", ")", ")", "\n", "erase_h", "=", "int", "(", "np", ".", "sqrt", "(", "size", "*", "ratio", ")", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "img_w", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "img_h", ")", "\n", "\n", "if", "x", "+", "erase_w", "<=", "img_w", "and", "y", "+", "erase_h", "<=", "img_h", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "pixel_level", ":", "\n", "            ", "value", "=", "np", ".", "random", ".", "uniform", "(", "value_min", ",", "value_max", ",", "(", "erase_h", ",", "erase_w", ",", "img_c", ")", ")", "\n", "", "else", ":", "\n", "            ", "value", "=", "np", ".", "random", ".", "uniform", "(", "value_min", ",", "value_max", ")", "\n", "\n", "", "img", "[", "y", ":", "y", "+", "erase_h", ",", "x", ":", "x", "+", "erase_w", "]", "=", "value", "\n", "mask", "[", "y", ":", "y", "+", "erase_h", ",", "x", ":", "x", "+", "erase_w", "]", "=", "255", "\n", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "", "return", "img", ",", "mask", "\n", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.semi.SemiDataset.__init__": [[12, 51], ["open", "f.read().splitlines", "open", "f.read().splitlines", "open", "f.read().splitlines", "math.ceil", "f.read", "f.read", "f.read", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "root", ",", "mode", ",", "size", ",", "labeled_id_path", "=", "None", ",", "unlabeled_id_path", "=", "None", ",", "pseudo_mask_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param name: dataset name, pascal or cityscapes\n        :param root: root path of the dataset.\n        :param mode: train: supervised learning only with labeled images, no unlabeled images are leveraged.\n                     label: pseudo labeling the remaining unlabeled images.\n                     semi_train: semi-supervised learning with both labeled and unlabeled images.\n                     val: validation.\n\n        :param size: crop size of training images.\n        :param labeled_id_path: path of labeled image ids, needed in train or semi_train mode.\n        :param unlabeled_id_path: path of unlabeled image ids, needed in semi_train or label mode.\n        :param pseudo_mask_path: path of generated pseudo masks, needed in semi_train mode.\n        \"\"\"", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "pseudo_mask_path", "=", "pseudo_mask_path", "\n", "\n", "if", "mode", "==", "'semi_train'", ":", "\n", "            ", "with", "open", "(", "labeled_id_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "labeled_ids", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "", "with", "open", "(", "unlabeled_id_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "unlabeled_ids", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "", "self", ".", "ids", "=", "self", ".", "labeled_ids", "*", "math", ".", "ceil", "(", "len", "(", "self", ".", "unlabeled_ids", ")", "/", "len", "(", "self", ".", "labeled_ids", ")", ")", "+", "self", ".", "unlabeled_ids", "\n", "\n", "", "else", ":", "\n", "            ", "if", "mode", "==", "'val'", ":", "\n", "                ", "id_path", "=", "'dataset/splits/%s/val.txt'", "%", "name", "\n", "", "elif", "mode", "==", "'label'", ":", "\n", "                ", "id_path", "=", "unlabeled_id_path", "\n", "", "elif", "mode", "==", "'train'", ":", "\n", "                ", "id_path", "=", "labeled_id_path", "\n", "\n", "", "with", "open", "(", "id_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "ids", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.semi.SemiDataset.__getitem__": [[52, 85], ["PIL.Image.open", "dataset.transform.resize", "dataset.transform.crop", "dataset.transform.hflip", "dataset.transform.normalize", "os.path.join", "PIL.Image.open", "dataset.transform.normalize", "PIL.Image.open", "os.path.basename", "PIL.Image.open", "dataset.transform.blur", "dataset.transform.cutout", "os.path.join", "os.path.join", "os.path.join", "random.random", "torchvision.transforms.RandomGrayscale", "id.split", "id.split", "torchvision.transforms.ColorJitter", "id.split", "id.split"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.resize", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.crop", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.hflip", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.normalize", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.normalize", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.blur", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.transform.cutout"], ["", "", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "id", "=", "self", ".", "ids", "[", "item", "]", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "id", ".", "split", "(", "' '", ")", "[", "0", "]", ")", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'val'", "or", "self", ".", "mode", "==", "'label'", ":", "\n", "            ", "mask", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "id", ".", "split", "(", "' '", ")", "[", "1", "]", ")", ")", "\n", "img", ",", "mask", "=", "normalize", "(", "img", ",", "mask", ")", "\n", "return", "img", ",", "mask", ",", "id", "\n", "\n", "", "if", "self", ".", "mode", "==", "'train'", "or", "(", "self", ".", "mode", "==", "'semi_train'", "and", "id", "in", "self", ".", "labeled_ids", ")", ":", "\n", "            ", "mask", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "id", ".", "split", "(", "' '", ")", "[", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "# mode == 'semi_train' and the id corresponds to unlabeled image", "\n", "            ", "fname", "=", "os", ".", "path", ".", "basename", "(", "id", ".", "split", "(", "' '", ")", "[", "1", "]", ")", "\n", "mask", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "pseudo_mask_path", ",", "fname", ")", ")", "\n", "\n", "# basic augmentation on all training images", "\n", "", "base_size", "=", "400", "if", "self", ".", "name", "==", "'pascal'", "else", "2048", "\n", "img", ",", "mask", "=", "resize", "(", "img", ",", "mask", ",", "base_size", ",", "(", "0.5", ",", "2.0", ")", ")", "\n", "img", ",", "mask", "=", "crop", "(", "img", ",", "mask", ",", "self", ".", "size", ")", "\n", "img", ",", "mask", "=", "hflip", "(", "img", ",", "mask", ",", "p", "=", "0.5", ")", "\n", "\n", "# strong augmentation on unlabeled images", "\n", "if", "self", ".", "mode", "==", "'semi_train'", "and", "id", "in", "self", ".", "unlabeled_ids", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "0.8", ":", "\n", "                ", "img", "=", "transforms", ".", "ColorJitter", "(", "0.5", ",", "0.5", ",", "0.5", ",", "0.25", ")", "(", "img", ")", "\n", "", "img", "=", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", "(", "img", ")", "\n", "img", "=", "blur", "(", "img", ",", "p", "=", "0.5", ")", "\n", "img", ",", "mask", "=", "cutout", "(", "img", ",", "mask", ",", "p", "=", "0.5", ")", "\n", "\n", "", "img", ",", "mask", "=", "normalize", "(", "img", ",", "mask", ")", "\n", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.dataset.semi.SemiDataset.__len__": [[86, 88], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "ids", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv2.DeepLabV2.__init__": [[9, 19], ["model.semseg.base.BaseNet.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "deeplabv2.DeepLabV2.classifier.append", "m.weight.data.normal_", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "nclass", ")", ":", "\n", "        ", "super", "(", "DeepLabV2", ",", "self", ")", ".", "__init__", "(", "backbone", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "dilation", "in", "[", "6", ",", "12", ",", "18", ",", "24", "]", ":", "\n", "            ", "self", ".", "classifier", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "2048", ",", "nclass", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ")", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "classifier", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv2.DeepLabV2.base_forward": [[20, 32], ["range", "torch.interpolate", "torch.interpolate", "deeplabv2.DeepLabV2.backbone.base_forward", "len"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward"], ["", "", "def", "base_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "backbone", ".", "base_forward", "(", "x", ")", "[", "-", "1", "]", "\n", "\n", "out", "=", "self", ".", "classifier", "[", "0", "]", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "classifier", ")", "-", "1", ")", ":", "\n", "            ", "out", "+=", "self", ".", "classifier", "[", "i", "+", "1", "]", "(", "x", ")", "\n", "\n", "", "out", "=", "F", ".", "interpolate", "(", "out", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.base.BaseNet.__init__": [[8, 12], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ")", ":", "\n", "        ", "super", "(", "BaseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "backbone_zoo", "=", "{", "'resnet50'", ":", "resnet50", ",", "'resnet101'", ":", "resnet101", "}", "\n", "self", ".", "backbone", "=", "backbone_zoo", "[", "backbone", "]", "(", "pretrained", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.base.BaseNet.base_forward": [[13, 21], ["base.BaseNet.head", "torch.interpolate", "base.BaseNet.backbone.base_forward"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward"], ["", "def", "base_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "backbone", ".", "base_forward", "(", "x", ")", "[", "-", "1", "]", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.base.BaseNet.forward": [[22, 45], ["base.BaseNet.base_forward", "torch.interpolate", "torch.softmax", "torch.interpolate", "torch.softmax().flip", "torch.interpolate", "int", "int", "base.BaseNet.base_forward", "torch.softmax", "base.BaseNet.base_forward", "torch.interpolate.flip"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "tta", "=", "False", ")", ":", "\n", "        ", "if", "not", "tta", ":", "\n", "            ", "return", "self", ".", "base_forward", "(", "x", ")", "\n", "\n", "", "else", ":", "\n", "            ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "scales", "=", "[", "0.5", ",", "0.75", ",", "1.0", ",", "1.5", ",", "2.0", "]", "\n", "\n", "final_result", "=", "None", "\n", "\n", "for", "scale", "in", "scales", ":", "\n", "                ", "cur_h", ",", "cur_w", "=", "int", "(", "h", "*", "scale", ")", ",", "int", "(", "w", "*", "scale", ")", "\n", "cur_x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "(", "cur_h", ",", "cur_w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "out", "=", "F", ".", "softmax", "(", "self", ".", "base_forward", "(", "cur_x", ")", ",", "dim", "=", "1", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "final_result", "=", "out", "if", "final_result", "is", "None", "else", "(", "final_result", "+", "out", ")", "\n", "\n", "out", "=", "F", ".", "softmax", "(", "self", ".", "base_forward", "(", "cur_x", ".", "flip", "(", "3", ")", ")", ",", "dim", "=", "1", ")", ".", "flip", "(", "3", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "final_result", "+=", "out", "\n", "\n", "", "return", "final_result", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.pspnet.PSPNet.__init__": [[9, 13], ["model.semseg.base.BaseNet.__init__", "pspnet.PSPHead"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "nclass", ")", ":", "\n", "        ", "super", "(", "PSPNet", ",", "self", ")", ".", "__init__", "(", "backbone", ")", "\n", "\n", "self", ".", "head", "=", "PSPHead", "(", "self", ".", "backbone", ".", "channels", "[", "-", "1", "]", ",", "nclass", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.pspnet.PSPHead.__init__": [[16, 26], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "pspnet.PyramidPooling", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "PSPHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "PyramidPooling", "(", "in_channels", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "*", "2", ",", "inter_channels", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "inter_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.1", ",", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inter_channels", ",", "out_channels", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.pspnet.PSPHead.forward": [[27, 29], ["pspnet.PSPHead.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv5", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.pspnet.PyramidPooling.__init__": [[32, 52], ["torch.nn.Module.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "int", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "PyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "2", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "3", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "6", ")", "\n", "\n", "out_channels", "=", "int", "(", "in_channels", "/", "4", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.pspnet.PyramidPooling.forward": [[53, 60], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pspnet.PyramidPooling.conv1", "pspnet.PyramidPooling.conv2", "pspnet.PyramidPooling.conv3", "pspnet.PyramidPooling.conv4", "pspnet.PyramidPooling.pool1", "pspnet.PyramidPooling.pool2", "pspnet.PyramidPooling.pool3", "pspnet.PyramidPooling.pool4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "feat1", "=", "F", ".", "interpolate", "(", "self", ".", "conv1", "(", "self", ".", "pool1", "(", "x", ")", ")", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "feat2", "=", "F", ".", "interpolate", "(", "self", ".", "conv2", "(", "self", ".", "pool2", "(", "x", ")", ")", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "feat3", "=", "F", ".", "interpolate", "(", "self", ".", "conv3", "(", "self", ".", "pool3", "(", "x", ")", ")", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "feat4", "=", "F", ".", "interpolate", "(", "self", ".", "conv4", "(", "self", ".", "pool4", "(", "x", ")", ")", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "return", "torch", ".", "cat", "(", "(", "x", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", ")", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.DeepLabV3Plus.__init__": [[9, 31], ["model.semseg.base.BaseNet.__init__", "deeplabv3plus.ASPPModule", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "nclass", ")", ":", "\n", "        ", "super", "(", "DeepLabV3Plus", ",", "self", ")", ".", "__init__", "(", "backbone", ")", "\n", "\n", "low_level_channels", "=", "self", ".", "backbone", ".", "channels", "[", "0", "]", "\n", "high_level_channels", "=", "self", ".", "backbone", ".", "channels", "[", "-", "1", "]", "\n", "\n", "self", ".", "head", "=", "ASPPModule", "(", "high_level_channels", ",", "(", "12", ",", "24", ",", "36", ")", ")", "\n", "\n", "self", ".", "reduce", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "low_level_channels", ",", "48", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "48", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "\n", "self", ".", "fuse", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "high_level_channels", "//", "8", "+", "48", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.1", ",", "False", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Conv2d", "(", "256", ",", "nclass", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.DeepLabV3Plus.base_forward": [[32, 49], ["deeplabv3plus.DeepLabV3Plus.backbone.base_forward", "deeplabv3plus.DeepLabV3Plus.head", "torch.interpolate", "torch.interpolate", "deeplabv3plus.DeepLabV3Plus.reduce", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "deeplabv3plus.DeepLabV3Plus.fuse", "deeplabv3plus.DeepLabV3Plus.classifier", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward"], ["", "def", "base_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "c1", ",", "_", ",", "_", ",", "c4", "=", "self", ".", "backbone", ".", "base_forward", "(", "x", ")", "\n", "\n", "c4", "=", "self", ".", "head", "(", "c4", ")", "\n", "c4", "=", "F", ".", "interpolate", "(", "c4", ",", "size", "=", "c1", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n", "c1", "=", "self", ".", "reduce", "(", "c1", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "c1", ",", "c4", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "fuse", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPPooling.__init__": [[60, 66], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "ASPPPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gap", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPPooling.forward": [[67, 71], ["deeplabv3plus.ASPPPooling.gap", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "pool", "=", "self", ".", "gap", "(", "x", ")", "\n", "return", "F", ".", "interpolate", "(", "pool", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPModule.__init__": [[74, 91], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "deeplabv3plus.ASPPConv", "deeplabv3plus.ASPPConv", "deeplabv3plus.ASPPConv", "deeplabv3plus.ASPPPooling", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout2d", "torch.nn.Dropout2d"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPConv", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPConv", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPConv"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "atrous_rates", ")", ":", "\n", "        ", "super", "(", "ASPPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_channels", "=", "in_channels", "//", "8", "\n", "rate1", ",", "rate2", ",", "rate3", "=", "atrous_rates", "\n", "\n", "self", ".", "b0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "self", ".", "b1", "=", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate1", ")", "\n", "self", ".", "b2", "=", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate2", ")", "\n", "self", ".", "b3", "=", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate3", ")", "\n", "self", ".", "b4", "=", "ASPPPooling", "(", "in_channels", ",", "out_channels", ")", "\n", "\n", "self", ".", "project", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "5", "*", "out_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.5", ",", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPModule.forward": [[92, 100], ["deeplabv3plus.ASPPModule.b0", "deeplabv3plus.ASPPModule.b1", "deeplabv3plus.ASPPModule.b2", "deeplabv3plus.ASPPModule.b3", "deeplabv3plus.ASPPModule.b4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "deeplabv3plus.ASPPModule.project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat0", "=", "self", ".", "b0", "(", "x", ")", "\n", "feat1", "=", "self", ".", "b1", "(", "x", ")", "\n", "feat2", "=", "self", ".", "b2", "(", "x", ")", "\n", "feat3", "=", "self", ".", "b3", "(", "x", ")", "\n", "feat4", "=", "self", ".", "b4", "(", "x", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "feat0", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", ")", ",", "1", ")", "\n", "return", "self", ".", "project", "(", "y", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.semseg.deeplabv3plus.ASPPConv": [[51, 57], ["torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "function", ["None"], ["", "", "def", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "atrous_rate", ")", ":", "\n", "    ", "block", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "atrous_rate", ",", "\n", "dilation", "=", "atrous_rate", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "return", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.BasicBlock.__init__": [[20, 35], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv3x3", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.BasicBlock.forward": [[36, 53], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.Bottleneck.__init__": [[58, 74], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv1x1", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv3x3", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.Bottleneck.forward": [[75, 96], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__": [[100, 146], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "zero_init_residual", "=", "False", ",", "groups", "=", "1", ",", "\n", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channels", "=", "[", "64", "*", "block", ".", "expansion", ",", "128", "*", "block", ".", "expansion", ",", "\n", "256", "*", "block", ".", "expansion", ",", "512", "*", "block", ".", "expansion", "]", "\n", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet._make_layer": [[147, 170], ["list", "list.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "list.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "list", "(", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.ResNet.base_forward": [[171, 183], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4"], "methods", ["None"], ["", "def", "base_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "c1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "c2", "=", "self", ".", "layer2", "(", "c1", ")", "\n", "c3", "=", "self", ".", "layer3", "(", "c2", ")", "\n", "c4", "=", "self", ".", "layer4", "(", "c3", ")", "\n", "\n", "return", "c1", ",", "c2", ",", "c3", ",", "c4", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv3x3": [[8, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.conv1x1": [[13, 15], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet": [[185, 191], ["resnet.ResNet", "torch.load", "torch.load", "ResNet.load_state_dict"], "function", ["None"], ["", "", "def", "_resnet", "(", "arch", ",", "block", ",", "layers", ",", "pretrained", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "\"pretrained/%s.pth\"", "%", "arch", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.resnet18": [[193, 195], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet"], ["", "def", "resnet18", "(", "pretrained", "=", "False", ")", ":", "\n", "    ", "return", "_resnet", "(", "'resnet18'", ",", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.resnet34": [[197, 199], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ")", ":", "\n", "    ", "return", "_resnet", "(", "'resnet34'", ",", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.resnet50": [[201, 204], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ")", ":", "\n", "    ", "return", "_resnet", "(", "'resnet50'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "\n", "replace_stride_with_dilation", "=", "[", "False", ",", "True", ",", "True", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.resnet101": [[206, 209], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ")", ":", "\n", "    ", "return", "_resnet", "(", "'resnet101'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "\n", "replace_stride_with_dilation", "=", "[", "False", ",", "True", ",", "True", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet.resnet152": [[211, 214], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.LiheYoung_ST-PlusPlus.backbone.resnet._resnet"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ")", ":", "\n", "    ", "return", "_resnet", "(", "'resnet152'", ",", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "pretrained", ",", "\n", "replace_stride_with_dilation", "=", "[", "False", ",", "True", ",", "True", "]", ")", "\n", "", ""]]}