{"home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.None.template_jobs.batch_atari": [[4, 50], ["Config", "Config.add_argument", "Config.add_argument", "Config.merge", "algo", "exit", "range", "params.append", "dict"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.merge", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict"], ["def", "batch_atari", "(", ")", ":", "\n", "    ", "cf", "=", "Config", "(", ")", "\n", "cf", ".", "add_argument", "(", "'--i'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "cf", ".", "add_argument", "(", "'--j'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "cf", ".", "merge", "(", ")", "\n", "\n", "games", "=", "[", "\n", "'BreakoutNoFrameskip-v4'", ",", "\n", "# 'AlienNoFrameskip-v4',", "\n", "# 'DemonAttackNoFrameskip-v4',", "\n", "# 'MsPacmanNoFrameskip-v4'", "\n", "]", "\n", "\n", "algos", "=", "[", "\n", "dqn_pixel", ",", "\n", "quantile_regression_dqn_pixel", ",", "\n", "categorical_dqn_pixel", ",", "\n", "rainbow_pixel", ",", "\n", "a2c_pixel", ",", "\n", "n_step_dqn_pixel", ",", "\n", "option_critic_pixel", ",", "\n", "ppo_pixel", ",", "\n", "]", "\n", "\n", "params", "=", "[", "]", "\n", "\n", "for", "game", "in", "games", ":", "\n", "        ", "for", "r", "in", "range", "(", "1", ")", ":", "\n", "            ", "for", "algo", "in", "algos", ":", "\n", "                ", "params", ".", "append", "(", "[", "algo", ",", "dict", "(", "game", "=", "game", ",", "run", "=", "r", ",", "remark", "=", "algo", ".", "__name__", ")", "]", ")", "\n", "# for n_step in [1, 2, 3]:", "\n", "#     for double_q in [True, False]:", "\n", "#         params.extend([", "\n", "#             [dqn_pixel,", "\n", "#              dict(game=game, run=r, n_step=n_step, replay_cls=PrioritizedReplay, double_q=double_q,", "\n", "#                   remark=dqn_pixel.__name__)],", "\n", "# [rainbow_pixel,", "\n", "#  dict(game=game, run=r, n_step=n_step, noisy_linear=False, remark=rainbow_pixel.__name__)]", "\n", "# ])", "\n", "# params.append(", "\n", "#     [categorical_dqn_pixel, dict(game=game, run=r, remark=categorical_dqn_pixel.__name__)]),", "\n", "# params.append([dqn_pixel, dict(game=game, run=r, remark=dqn_pixel.__name__)])", "\n", "\n", "", "", "", "algo", ",", "param", "=", "params", "[", "cf", ".", "i", "]", "\n", "algo", "(", "**", "param", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.None.template_jobs.batch_mujoco": [[52, 115], ["Config", "Config.add_argument", "Config.add_argument", "Config.merge", "algo", "exit", "range", "params.append", "dict"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.merge", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict"], ["", "def", "batch_mujoco", "(", ")", ":", "\n", "    ", "cf", "=", "Config", "(", ")", "\n", "cf", ".", "add_argument", "(", "'--i'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "cf", ".", "add_argument", "(", "'--j'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "cf", ".", "merge", "(", ")", "\n", "\n", "games", "=", "[", "\n", "'dm-acrobot-swingup'", ",", "\n", "'dm-acrobot-swingup_sparse'", ",", "\n", "'dm-ball_in_cup-catch'", ",", "\n", "'dm-cartpole-swingup'", ",", "\n", "'dm-cartpole-swingup_sparse'", ",", "\n", "'dm-cartpole-balance'", ",", "\n", "'dm-cartpole-balance_sparse'", ",", "\n", "'dm-cheetah-run'", ",", "\n", "'dm-finger-turn_hard'", ",", "\n", "'dm-finger-spin'", ",", "\n", "'dm-finger-turn_easy'", ",", "\n", "'dm-fish-upright'", ",", "\n", "'dm-fish-swim'", ",", "\n", "'dm-hopper-stand'", ",", "\n", "'dm-hopper-hop'", ",", "\n", "'dm-humanoid-stand'", ",", "\n", "'dm-humanoid-walk'", ",", "\n", "'dm-humanoid-run'", ",", "\n", "'dm-manipulator-bring_ball'", ",", "\n", "'dm-pendulum-swingup'", ",", "\n", "'dm-point_mass-easy'", ",", "\n", "'dm-reacher-easy'", ",", "\n", "'dm-reacher-hard'", ",", "\n", "'dm-swimmer-swimmer15'", ",", "\n", "'dm-swimmer-swimmer6'", ",", "\n", "'dm-walker-stand'", ",", "\n", "'dm-walker-walk'", ",", "\n", "'dm-walker-run'", ",", "\n", "]", "\n", "\n", "games", "=", "[", "\n", "'HalfCheetah-v2'", ",", "\n", "'Walker2d-v2'", ",", "\n", "'Swimmer-v2'", ",", "\n", "'Hopper-v2'", ",", "\n", "'Reacher-v2'", ",", "\n", "'Ant-v2'", ",", "\n", "'Humanoid-v2'", ",", "\n", "'HumanoidStandup-v2'", ",", "\n", "]", "\n", "\n", "params", "=", "[", "]", "\n", "\n", "for", "game", "in", "games", ":", "\n", "        ", "if", "'Humanoid'", "in", "game", ":", "\n", "            ", "algos", "=", "[", "ppo_continuous", "]", "\n", "", "else", ":", "\n", "            ", "algos", "=", "[", "ppo_continuous", ",", "ddpg_continuous", ",", "td3_continuous", "]", "\n", "", "for", "algo", "in", "algos", ":", "\n", "            ", "for", "r", "in", "range", "(", "5", ")", ":", "\n", "                ", "params", ".", "append", "(", "[", "algo", ",", "dict", "(", "game", "=", "game", ",", "run", "=", "r", ")", "]", ")", "\n", "\n", "", "", "", "algo", ",", "param", "=", "params", "[", "cf", ".", "i", "]", "\n", "algo", "(", "**", "param", ",", "remark", "=", "algo", ".", "__name__", ")", "\n", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.None.template_plot.plot_ppo": [[8, 44], ["Plotter", "Plotter.plot_games", "matplotlib.tight_layout", "matplotlib.savefig"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_games"], ["def", "plot_ppo", "(", ")", ":", "\n", "    ", "plotter", "=", "Plotter", "(", ")", "\n", "games", "=", "[", "\n", "'HalfCheetah-v2'", ",", "\n", "'Walker2d-v2'", ",", "\n", "'Hopper-v2'", ",", "\n", "'Swimmer-v2'", ",", "\n", "'Reacher-v2'", ",", "\n", "'Ant-v2'", ",", "\n", "'Humanoid-v2'", ",", "\n", "'HumanoidStandup-v2'", ",", "\n", "]", "\n", "\n", "patterns", "=", "[", "\n", "'remark_ppo'", ",", "\n", "]", "\n", "\n", "labels", "=", "[", "\n", "'PPO'", "\n", "]", "\n", "\n", "plotter", ".", "plot_games", "(", "games", "=", "games", ",", "\n", "patterns", "=", "patterns", ",", "\n", "agg", "=", "'mean'", ",", "\n", "downsample", "=", "0", ",", "\n", "labels", "=", "labels", ",", "\n", "right_align", "=", "False", ",", "\n", "tag", "=", "plotter", ".", "RETURN_TRAIN", ",", "\n", "root", "=", "'./data/benchmark/mujoco'", ",", "\n", "interpolation", "=", "100", ",", "\n", "window", "=", "10", ",", "\n", ")", "\n", "\n", "# plt.show()", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'images/PPO.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.None.template_plot.plot_ddpg_td3": [[46, 82], ["Plotter", "Plotter.plot_games", "matplotlib.tight_layout", "matplotlib.savefig"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_games"], ["", "def", "plot_ddpg_td3", "(", ")", ":", "\n", "    ", "plotter", "=", "Plotter", "(", ")", "\n", "games", "=", "[", "\n", "'HalfCheetah-v2'", ",", "\n", "'Walker2d-v2'", ",", "\n", "'Hopper-v2'", ",", "\n", "'Swimmer-v2'", ",", "\n", "'Reacher-v2'", ",", "\n", "'Ant-v2'", ",", "\n", "]", "\n", "\n", "patterns", "=", "[", "\n", "'remark_ddpg'", ",", "\n", "'remark_td3'", ",", "\n", "]", "\n", "\n", "labels", "=", "[", "\n", "'DDPG'", ",", "\n", "'TD3'", ",", "\n", "]", "\n", "\n", "plotter", ".", "plot_games", "(", "games", "=", "games", ",", "\n", "patterns", "=", "patterns", ",", "\n", "agg", "=", "'mean'", ",", "\n", "downsample", "=", "0", ",", "\n", "labels", "=", "labels", ",", "\n", "right_align", "=", "False", ",", "\n", "tag", "=", "plotter", ".", "RETURN_TEST", ",", "\n", "root", "=", "'./data/benchmark/mujoco'", ",", "\n", "interpolation", "=", "0", ",", "\n", "window", "=", "0", ",", "\n", ")", "\n", "\n", "# plt.show()", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'images/mujoco_eval.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.None.template_plot.plot_atari": [[84, 127], ["Plotter", "Plotter.plot_games", "matplotlib.tight_layout", "matplotlib.savefig"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_games"], ["", "def", "plot_atari", "(", ")", ":", "\n", "    ", "plotter", "=", "Plotter", "(", ")", "\n", "games", "=", "[", "\n", "'BreakoutNoFrameskip-v4'", ",", "\n", "]", "\n", "\n", "patterns", "=", "[", "\n", "'remark_a2c'", ",", "\n", "'remark_categorical'", ",", "\n", "'remark_dqn'", ",", "\n", "'remark_n_step_dqn'", ",", "\n", "'remark_option_critic'", ",", "\n", "'remark_quantile'", ",", "\n", "'remark_ppo'", ",", "\n", "# 'remark_rainbow',", "\n", "]", "\n", "\n", "labels", "=", "[", "\n", "'A2C'", ",", "\n", "'C51'", ",", "\n", "'DQN'", ",", "\n", "'N-Step DQN'", ",", "\n", "'OC'", ",", "\n", "'QR-DQN'", ",", "\n", "'PPO'", ",", "\n", "# 'Rainbow'", "\n", "]", "\n", "\n", "plotter", ".", "plot_games", "(", "games", "=", "games", ",", "\n", "patterns", "=", "patterns", ",", "\n", "agg", "=", "'mean'", ",", "\n", "downsample", "=", "100", ",", "\n", "labels", "=", "labels", ",", "\n", "right_align", "=", "False", ",", "\n", "tag", "=", "plotter", ".", "RETURN_TRAIN", ",", "\n", "root", "=", "'./data/benchmark/atari'", ",", "\n", "interpolation", "=", "0", ",", "\n", "window", "=", "100", ",", "\n", ")", "\n", "\n", "# plt.show()", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'images/Breakout.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.__init__": [[17, 69], ["argparse.ArgumentParser", "normalizer.RescaleNormalizer", "normalizer.RescaleNormalizer", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "self", ".", "task_fn", "=", "None", "\n", "self", ".", "optimizer_fn", "=", "None", "\n", "self", ".", "actor_optimizer_fn", "=", "None", "\n", "self", ".", "critic_optimizer_fn", "=", "None", "\n", "self", ".", "network_fn", "=", "None", "\n", "self", ".", "actor_network_fn", "=", "None", "\n", "self", ".", "critic_network_fn", "=", "None", "\n", "self", ".", "replay_fn", "=", "None", "\n", "self", ".", "random_process_fn", "=", "None", "\n", "self", ".", "discount", "=", "None", "\n", "self", ".", "target_network_update_freq", "=", "None", "\n", "self", ".", "exploration_steps", "=", "None", "\n", "self", ".", "log_level", "=", "0", "\n", "self", ".", "history_length", "=", "None", "\n", "self", ".", "double_q", "=", "False", "\n", "self", ".", "tag", "=", "'vanilla'", "\n", "self", ".", "num_workers", "=", "1", "\n", "self", ".", "gradient_clip", "=", "None", "\n", "self", ".", "entropy_weight", "=", "0", "\n", "self", ".", "use_gae", "=", "False", "\n", "self", ".", "gae_tau", "=", "1.0", "\n", "self", ".", "target_network_mix", "=", "0.001", "\n", "self", ".", "state_normalizer", "=", "RescaleNormalizer", "(", ")", "\n", "self", ".", "reward_normalizer", "=", "RescaleNormalizer", "(", ")", "\n", "self", ".", "min_memory_size", "=", "None", "\n", "self", ".", "max_steps", "=", "0", "\n", "self", ".", "rollout_length", "=", "None", "\n", "self", ".", "value_loss_weight", "=", "1.0", "\n", "self", ".", "iteration_log_interval", "=", "30", "\n", "self", ".", "categorical_v_min", "=", "None", "\n", "self", ".", "categorical_v_max", "=", "None", "\n", "self", ".", "categorical_n_atoms", "=", "51", "\n", "self", ".", "num_quantiles", "=", "None", "\n", "self", ".", "optimization_epochs", "=", "4", "\n", "self", ".", "mini_batch_size", "=", "64", "\n", "self", ".", "termination_regularizer", "=", "0", "\n", "self", ".", "sgd_update_frequency", "=", "None", "\n", "self", ".", "random_action_prob", "=", "None", "\n", "self", ".", "__eval_env", "=", "None", "\n", "self", ".", "log_interval", "=", "int", "(", "1e3", ")", "\n", "self", ".", "save_interval", "=", "0", "\n", "self", ".", "eval_interval", "=", "0", "\n", "self", ".", "eval_episodes", "=", "10", "\n", "self", ".", "async_actor", "=", "True", "\n", "self", ".", "tasks", "=", "False", "\n", "self", ".", "replay_type", "=", "Config", ".", "DEFAULT_REPLAY", "\n", "self", ".", "decaying_lr", "=", "False", "\n", "self", ".", "shared_repr", "=", "False", "\n", "self", ".", "noisy_linear", "=", "False", "\n", "self", ".", "n_step", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.eval_env": [[74, 80], ["None"], "methods", ["None"], ["", "@", "eval_env", ".", "setter", "\n", "def", "eval_env", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "__eval_env", "=", "env", "\n", "self", ".", "state_dim", "=", "env", ".", "state_dim", "\n", "self", ".", "action_dim", "=", "env", ".", "action_dim", "\n", "self", ".", "task_name", "=", "env", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument": [[81, 83], ["config.Config.parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.add_argument"], ["", "def", "add_argument", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "parser", ".", "add_argument", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.config.Config.merge": [[84, 90], ["config_dict.keys", "config.Config.parser.parse_args", "setattr"], "methods", ["None"], ["", "def", "merge", "(", "self", ",", "config_dict", "=", "None", ")", ":", "\n", "        ", "if", "config_dict", "is", "None", ":", "\n", "            ", "args", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "config_dict", "=", "args", ".", "__dict__", "\n", "", "for", "key", "in", "config_dict", ".", "keys", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "key", ",", "config_dict", "[", "key", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.__init__": [[29, 38], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "vanilla_logger", ",", "log_dir", ",", "log_level", "=", "0", ")", ":", "\n", "        ", "self", ".", "log_level", "=", "log_level", "\n", "self", ".", "writer", "=", "None", "\n", "if", "vanilla_logger", "is", "not", "None", ":", "\n", "            ", "self", ".", "info", "=", "vanilla_logger", ".", "info", "\n", "self", ".", "debug", "=", "vanilla_logger", ".", "debug", "\n", "self", ".", "warning", "=", "vanilla_logger", ".", "warning", "\n", "", "self", ".", "all_steps", "=", "{", "}", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.lazy_init_writer": [[39, 42], ["torch.utils.tensorboard.SummaryWriter"], "methods", ["None"], ["", "def", "lazy_init_writer", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "writer", "is", "None", ":", "\n", "            ", "self", ".", "writer", "=", "SummaryWriter", "(", "self", ".", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.to_numpy": [[43, 47], ["isinstance", "v.cpu().detach().numpy.cpu().detach().numpy.cpu().detach().numpy", "v.cpu().detach().numpy.cpu().detach().numpy.cpu().detach", "v.cpu().detach().numpy.cpu().detach().numpy.cpu"], "methods", ["None"], ["", "", "def", "to_numpy", "(", "self", ",", "v", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "v", "=", "v", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.get_step": [[48, 54], ["None"], "methods", ["None"], ["", "def", "get_step", "(", "self", ",", "tag", ")", ":", "\n", "        ", "if", "tag", "not", "in", "self", ".", "all_steps", ":", "\n", "            ", "self", ".", "all_steps", "[", "tag", "]", "=", "0", "\n", "", "step", "=", "self", ".", "all_steps", "[", "tag", "]", "\n", "self", ".", "all_steps", "[", "tag", "]", "+=", "1", "\n", "return", "step", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_scalar": [[55, 65], ["logger.Logger.lazy_init_writer", "logger.Logger.to_numpy", "numpy.isscalar", "logger.Logger.writer.add_scalar", "logger.Logger.get_step", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.lazy_init_writer", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.to_numpy", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_scalar", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.get_step"], ["", "def", "add_scalar", "(", "self", ",", "tag", ",", "value", ",", "step", "=", "None", ",", "log_level", "=", "0", ")", ":", "\n", "        ", "self", ".", "lazy_init_writer", "(", ")", "\n", "if", "log_level", ">", "self", ".", "log_level", ":", "\n", "            ", "return", "\n", "", "value", "=", "self", ".", "to_numpy", "(", "value", ")", "\n", "if", "step", "is", "None", ":", "\n", "            ", "step", "=", "self", ".", "get_step", "(", "tag", ")", "\n", "", "if", "np", ".", "isscalar", "(", "value", ")", ":", "\n", "            ", "value", "=", "np", ".", "asarray", "(", "[", "value", "]", ")", "\n", "", "self", ".", "writer", ".", "add_scalar", "(", "tag", ",", "value", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_histogram": [[66, 74], ["logger.Logger.lazy_init_writer", "logger.Logger.to_numpy", "logger.Logger.writer.add_histogram", "logger.Logger.get_step"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.lazy_init_writer", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.to_numpy", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_histogram", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.get_step"], ["", "def", "add_histogram", "(", "self", ",", "tag", ",", "values", ",", "step", "=", "None", ",", "log_level", "=", "0", ")", ":", "\n", "        ", "self", ".", "lazy_init_writer", "(", ")", "\n", "if", "log_level", ">", "self", ".", "log_level", ":", "\n", "            ", "return", "\n", "", "values", "=", "self", ".", "to_numpy", "(", "values", ")", "\n", "if", "step", "is", "None", ":", "\n", "            ", "step", "=", "self", ".", "get_step", "(", "tag", ")", "\n", "", "self", ".", "writer", ".", "add_histogram", "(", "tag", ",", "values", ",", "step", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.get_logger": [[17, 26], ["logging.getLogger", "logging.getLogger.setLevel", "logger.Logger", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.FileHandler.setLevel", "logging.getLogger.addHandler", "logging.Formatter", "misc.get_time_str", "misc.get_time_str"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.get_time_str", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.get_time_str"], ["def", "get_logger", "(", "tag", "=", "'default'", ",", "log_level", "=", "0", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "if", "tag", "is", "not", "None", ":", "\n", "        ", "fh", "=", "logging", ".", "FileHandler", "(", "'./log/%s-%s.txt'", "%", "(", "tag", ",", "get_time_str", "(", ")", ")", ")", "\n", "fh", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "'%(asctime)s - %(name)s - %(levelname)s: %(message)s'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "", "return", "Logger", "(", "logger", ",", "'./tf_log/logger-%s-%s'", "%", "(", "tag", ",", "get_time_str", "(", ")", ")", ",", "log_level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.__init__": [[20, 22], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter._rolling_window": [[23, 27], ["numpy.lib.stride_tricks.as_strided"], "methods", ["None"], ["", "def", "_rolling_window", "(", "self", ",", "a", ",", "window", ")", ":", "\n", "        ", "shape", "=", "a", ".", "shape", "[", ":", "-", "1", "]", "+", "(", "a", ".", "shape", "[", "-", "1", "]", "-", "window", "+", "1", ",", "window", ")", "\n", "strides", "=", "a", ".", "strides", "+", "(", "a", ".", "strides", "[", "-", "1", "]", ",", ")", "\n", "return", "np", ".", "lib", ".", "stride_tricks", ".", "as_strided", "(", "a", ",", "shape", "=", "shape", ",", "strides", "=", "strides", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter._window_func": [[28, 32], ["plot.Plotter._rolling_window", "func"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter._rolling_window"], ["", "def", "_window_func", "(", "self", ",", "x", ",", "y", ",", "window", ",", "func", ")", ":", "\n", "        ", "yw", "=", "self", ".", "_rolling_window", "(", "y", ",", "window", ")", "\n", "yw_func", "=", "func", "(", "yw", ",", "axis", "=", "-", "1", ")", "\n", "return", "x", "[", "window", "-", "1", ":", "]", ",", "yw_func", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_results": [[33, 67], ["kwargs.setdefault", "kwargs.setdefault", "kwargs.setdefault", "kwargs.setdefault", "kwargs.setdefault", "kwargs.setdefault", "plot.Plotter.load_log_dirs", "enumerate", "float", "numpy.arange", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.argsort", "min", "numpy.asarray.append", "new_xy_list.append", "numpy.interp"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_log_dirs"], ["", "def", "load_results", "(", "self", ",", "dirs", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "setdefault", "(", "'tag'", ",", "self", ".", "RETURN_TRAIN", ")", "\n", "kwargs", ".", "setdefault", "(", "'right_align'", ",", "False", ")", "\n", "kwargs", ".", "setdefault", "(", "'window'", ",", "0", ")", "\n", "kwargs", ".", "setdefault", "(", "'top_k'", ",", "0", ")", "\n", "kwargs", ".", "setdefault", "(", "'top_k_measure'", ",", "None", ")", "\n", "kwargs", ".", "setdefault", "(", "'interpolation'", ",", "100", ")", "\n", "xy_list", "=", "self", ".", "load_log_dirs", "(", "dirs", ",", "**", "kwargs", ")", "\n", "\n", "if", "kwargs", "[", "'top_k'", "]", ":", "\n", "            ", "perf", "=", "[", "kwargs", "[", "'top_k_measure'", "]", "(", "y", ")", "for", "_", ",", "y", "in", "xy_list", "]", "\n", "top_k_runs", "=", "np", ".", "argsort", "(", "perf", ")", "[", "-", "kwargs", "[", "'top_k'", "]", ":", "]", "\n", "new_xy_list", "=", "[", "]", "\n", "for", "r", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "xy_list", ")", ":", "\n", "                ", "if", "r", "in", "top_k_runs", ":", "\n", "                    ", "new_xy_list", ".", "append", "(", "(", "x", ",", "y", ")", ")", "\n", "", "", "xy_list", "=", "new_xy_list", "\n", "\n", "", "if", "kwargs", "[", "'interpolation'", "]", ":", "\n", "            ", "x_right", "=", "float", "(", "'inf'", ")", "\n", "for", "x", ",", "y", "in", "xy_list", ":", "\n", "                ", "x_right", "=", "min", "(", "x_right", ",", "x", "[", "-", "1", "]", ")", "\n", "", "x", "=", "np", ".", "arange", "(", "0", ",", "x_right", ",", "kwargs", "[", "'interpolation'", "]", ")", "\n", "y", "=", "[", "]", "\n", "for", "x_", ",", "y_", "in", "xy_list", ":", "\n", "                ", "y", ".", "append", "(", "np", ".", "interp", "(", "x", ",", "x_", ",", "y_", ")", ")", "\n", "", "y", "=", "np", ".", "asarray", "(", "y", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "xy_list", "[", "0", "]", "[", "0", "]", "\n", "y", "=", "[", "y", "for", "_", ",", "y", "in", "xy_list", "]", "\n", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "y", "=", "np", ".", "asarray", "(", "y", ")", "\n", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.filter_log_dirs": [[68, 84], ["range", "re.compile", "re.compile", "print", "sorted", "len", "leaf_dirs.append", "os.walk", "dirs[].startswith", "re.compile.match", "names.append", "print", "len", "re.compile.match"], "methods", ["None"], ["", "def", "filter_log_dirs", "(", "self", ",", "pattern", ",", "negative_pattern", "=", "' '", ",", "root", "=", "'./log'", ",", "**", "kwargs", ")", ":", "\n", "        ", "dirs", "=", "[", "item", "[", "0", "]", "for", "item", "in", "os", ".", "walk", "(", "root", ")", "]", "\n", "leaf_dirs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dirs", ")", ")", ":", "\n", "            ", "if", "i", "+", "1", "<", "len", "(", "dirs", ")", "and", "dirs", "[", "i", "+", "1", "]", ".", "startswith", "(", "dirs", "[", "i", "]", ")", ":", "\n", "                ", "continue", "\n", "", "leaf_dirs", ".", "append", "(", "dirs", "[", "i", "]", ")", "\n", "", "names", "=", "[", "]", "\n", "p", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "np", "=", "re", ".", "compile", "(", "negative_pattern", ")", "\n", "for", "dir", "in", "leaf_dirs", ":", "\n", "            ", "if", "p", ".", "match", "(", "dir", ")", "and", "not", "np", ".", "match", "(", "dir", ")", ":", "\n", "                ", "names", ".", "append", "(", "dir", ")", "\n", "print", "(", "dir", ")", "\n", "", "", "print", "(", "''", ")", "\n", "return", "sorted", "(", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_log_dirs": [[85, 107], ["kwargs.setdefault", "kwargs.setdefault", "kwargs.setdefault", "EventAccumulator", "EventAccumulator.Reload", "zip", "xy_list.append", "float", "min", "plot.Plotter._window_func", "EventAccumulator.Scalars", "len", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter._window_func"], ["", "def", "load_log_dirs", "(", "self", ",", "dirs", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "setdefault", "(", "'right_align'", ",", "False", ")", "\n", "kwargs", ".", "setdefault", "(", "'window'", ",", "0", ")", "\n", "kwargs", ".", "setdefault", "(", "'right_most'", ",", "0", ")", "\n", "xy_list", "=", "[", "]", "\n", "from", "tensorboard", ".", "backend", ".", "event_processing", ".", "event_accumulator", "import", "EventAccumulator", "\n", "for", "dir", "in", "dirs", ":", "\n", "            ", "event_acc", "=", "EventAccumulator", "(", "dir", ")", "\n", "event_acc", ".", "Reload", "(", ")", "\n", "_", ",", "x", ",", "y", "=", "zip", "(", "*", "event_acc", ".", "Scalars", "(", "kwargs", "[", "'tag'", "]", ")", ")", "\n", "xy_list", ".", "append", "(", "[", "x", ",", "y", "]", ")", "\n", "", "if", "kwargs", "[", "'right_align'", "]", ":", "\n", "            ", "x_max", "=", "float", "(", "'inf'", ")", "\n", "for", "x", ",", "y", "in", "xy_list", ":", "\n", "                ", "x_max", "=", "min", "(", "x_max", ",", "len", "(", "y", ")", ")", "\n", "", "xy_list", "=", "[", "[", "x", "[", ":", "x_max", "]", ",", "y", "[", ":", "x_max", "]", "]", "for", "x", ",", "y", "in", "xy_list", "]", "\n", "", "x_max", "=", "kwargs", "[", "'right_most'", "]", "\n", "if", "x_max", ":", "\n", "            ", "xy_list", "=", "[", "[", "x", "[", ":", "x_max", "]", ",", "y", "[", ":", "x_max", "]", "]", "for", "x", ",", "y", "in", "xy_list", "]", "\n", "", "if", "kwargs", "[", "'window'", "]", ":", "\n", "            ", "xy_list", "=", "[", "self", ".", "_window_func", "(", "np", ".", "asarray", "(", "x", ")", ",", "np", ".", "asarray", "(", "y", ")", ",", "kwargs", "[", "'window'", "]", ",", "np", ".", "mean", ")", "for", "x", ",", "y", "in", "xy_list", "]", "\n", "", "return", "xy_list", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_mean": [[108, 123], ["numpy.mean", "plt.plot", "plt.fill_between", "numpy.arange", "numpy.std", "numpy.sqrt", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "plot_mean", "(", "self", ",", "data", ",", "x", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "if", "x", "is", "None", ":", "\n", "            ", "x", "=", "np", ".", "arange", "(", "data", ".", "shape", "[", "1", "]", ")", "\n", "", "if", "kwargs", "[", "'error'", "]", "==", "'se'", ":", "\n", "            ", "e_x", "=", "np", ".", "std", "(", "data", ",", "axis", "=", "0", ")", "/", "np", ".", "sqrt", "(", "data", ".", "shape", "[", "0", "]", ")", "\n", "", "elif", "kwargs", "[", "'error'", "]", "==", "'std'", ":", "\n", "            ", "e_x", "=", "np", ".", "std", "(", "data", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "m_x", "=", "np", ".", "mean", "(", "data", ",", "axis", "=", "0", ")", "\n", "del", "kwargs", "[", "'error'", "]", "\n", "plt", ".", "plot", "(", "x", ",", "m_x", ",", "**", "kwargs", ")", "\n", "del", "kwargs", "[", "'label'", "]", "\n", "plt", ".", "fill_between", "(", "x", ",", "m_x", "+", "e_x", ",", "m_x", "-", "e_x", ",", "alpha", "=", "0.3", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_median_std": [[124, 133], ["numpy.std", "numpy.median", "plt.plot", "plt.fill_between", "numpy.arange"], "methods", ["None"], ["", "def", "plot_median_std", "(", "self", ",", "data", ",", "x", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "if", "x", "is", "None", ":", "\n", "            ", "x", "=", "np", ".", "arange", "(", "data", ".", "shape", "[", "1", "]", ")", "\n", "", "e_x", "=", "np", ".", "std", "(", "data", ",", "axis", "=", "0", ")", "\n", "m_x", "=", "np", ".", "median", "(", "data", ",", "axis", "=", "0", ")", "\n", "plt", ".", "plot", "(", "x", ",", "m_x", ",", "**", "kwargs", ")", "\n", "del", "kwargs", "[", "'label'", "]", "\n", "plt", ".", "fill_between", "(", "x", ",", "m_x", "+", "e_x", ",", "m_x", "-", "e_x", ",", "alpha", "=", "0.3", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_games": [[134, 165], ["kwargs.setdefault", "len", "plt.figure", "enumerate", "plt.subplot", "enumerate", "plt.xlabel", "plt.title", "plt.legend", "plot.Plotter.filter_log_dirs", "plot.Plotter.load_results", "plt.ylabel", "numpy.linspace().astype", "plot.Plotter.plot_mean", "plot.Plotter.plot_mean", "numpy.linspace", "plot.Plotter.plot_median_std", "range", "plt.plot", "len"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.filter_log_dirs", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_results", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.plot_median_std"], ["", "def", "plot_games", "(", "self", ",", "games", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "setdefault", "(", "'agg'", ",", "'mean'", ")", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "l", "=", "len", "(", "games", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "l", "*", "5", ",", "5", ")", ")", "\n", "for", "i", ",", "game", "in", "enumerate", "(", "games", ")", ":", "\n", "            ", "plt", ".", "subplot", "(", "1", ",", "l", ",", "i", "+", "1", ")", "\n", "for", "j", ",", "p", "in", "enumerate", "(", "kwargs", "[", "'patterns'", "]", ")", ":", "\n", "                ", "label", "=", "kwargs", "[", "'labels'", "]", "[", "j", "]", "\n", "color", "=", "self", ".", "COLORS", "[", "j", "]", "\n", "log_dirs", "=", "self", ".", "filter_log_dirs", "(", "pattern", "=", "'.*%s.*%s'", "%", "(", "game", ",", "p", ")", ",", "**", "kwargs", ")", "\n", "x", ",", "y", "=", "self", ".", "load_results", "(", "log_dirs", ",", "**", "kwargs", ")", "\n", "if", "kwargs", "[", "'downsample'", "]", ":", "\n", "                    ", "indices", "=", "np", ".", "linspace", "(", "0", ",", "len", "(", "x", ")", "-", "1", ",", "kwargs", "[", "'downsample'", "]", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "x", "=", "x", "[", "indices", "]", "\n", "y", "=", "y", "[", ":", ",", "indices", "]", "\n", "", "if", "kwargs", "[", "'agg'", "]", "==", "'mean'", ":", "\n", "                    ", "self", ".", "plot_mean", "(", "y", ",", "x", ",", "label", "=", "label", ",", "color", "=", "color", ",", "error", "=", "'se'", ")", "\n", "", "elif", "kwargs", "[", "'agg'", "]", "==", "'mean_std'", ":", "\n", "                    ", "self", ".", "plot_mean", "(", "y", ",", "x", ",", "label", "=", "label", ",", "color", "=", "color", ",", "error", "=", "'std'", ")", "\n", "", "elif", "kwargs", "[", "'agg'", "]", "==", "'median'", ":", "\n", "                    ", "self", ".", "plot_median_std", "(", "y", ",", "x", ",", "label", "=", "label", ",", "color", "=", "color", ")", "\n", "", "else", ":", "\n", "                    ", "for", "k", "in", "range", "(", "y", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "plt", ".", "plot", "(", "x", ",", "y", "[", "i", "]", ",", "label", "=", "label", ",", "color", "=", "color", ")", "\n", "label", "=", "None", "\n", "", "", "", "plt", ".", "xlabel", "(", "'steps'", ")", "\n", "if", "not", "i", ":", "\n", "                ", "plt", ".", "ylabel", "(", "kwargs", "[", "'tag'", "]", ")", "\n", "", "plt", ".", "title", "(", "game", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.select_best_parameters": [[166, 175], ["numpy.argsort", "plot.Plotter.filter_log_dirs", "plot.Plotter.load_log_dirs", "numpy.asarray", "scores.append", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.filter_log_dirs", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_log_dirs"], ["", "", "def", "select_best_parameters", "(", "self", ",", "patterns", ",", "**", "kwargs", ")", ":", "\n", "        ", "scores", "=", "[", "]", "\n", "for", "pattern", "in", "patterns", ":", "\n", "            ", "log_dirs", "=", "self", ".", "filter_log_dirs", "(", "pattern", ",", "**", "kwargs", ")", "\n", "xy_list", "=", "self", ".", "load_log_dirs", "(", "log_dirs", ",", "**", "kwargs", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "xy", "[", "1", "]", "for", "xy", "in", "xy_list", "]", ")", "\n", "scores", ".", "append", "(", "kwargs", "[", "'score'", "]", "(", "y", ")", ")", "\n", "", "indices", "=", "np", ".", "argsort", "(", "-", "np", ".", "asarray", "(", "scores", ")", ")", "\n", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.reduce_dir": [[177, 197], ["os.walk", "tf_log_info.keys", "numpy.nanargmax", "key.replace", "plot.Plotter.filter_log_dirs", "plot.Plotter.load_log_dirs", "scores.append", "os.path.basename", "re.sub", "re.sub", "score_fn", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.filter_log_dirs", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_log_dirs"], ["", "def", "reduce_dir", "(", "self", ",", "root", ",", "tag", ",", "ids", ",", "score_fn", ")", ":", "\n", "        ", "tf_log_info", "=", "{", "}", "\n", "for", "dir", ",", "_", ",", "files", "in", "os", ".", "walk", "(", "root", ")", ":", "\n", "            ", "for", "file", "in", "files", ":", "\n", "                ", "if", "'tfevents'", "in", "file", ":", "\n", "                    ", "dir", "=", "os", ".", "path", ".", "basename", "(", "dir", ")", "\n", "dir", "=", "re", ".", "sub", "(", "r'hp_\\d+'", ",", "'placeholder'", ",", "dir", ")", "\n", "dir", "=", "re", ".", "sub", "(", "r'run.*'", ",", "'run'", ",", "dir", ")", "\n", "tf_log_info", "[", "dir", "]", "=", "{", "}", "\n", "", "", "", "for", "key", "in", "tf_log_info", ".", "keys", "(", ")", ":", "\n", "            ", "scores", "=", "[", "]", "\n", "for", "id", "in", "ids", ":", "\n", "                ", "dir", "=", "key", ".", "replace", "(", "'placeholder'", ",", "'hp_%s'", "%", "(", "id", ")", ")", "\n", "names", "=", "self", ".", "filter_log_dirs", "(", "'.*%s.*'", "%", "(", "dir", ")", ",", "root", "=", "root", ")", "\n", "xy_list", "=", "self", ".", "load_log_dirs", "(", "names", ",", "tag", "=", "tag", ",", "right_align", "=", "True", ")", "\n", "scores", ".", "append", "(", "score_fn", "(", "np", ".", "asarray", "(", "[", "y", "for", "x", ",", "y", "in", "xy_list", "]", ")", ")", ")", "\n", "", "best", "=", "np", ".", "nanargmax", "(", "scores", ")", "\n", "tf_log_info", "[", "key", "]", "[", "'hp'", "]", "=", "ids", "[", "best", "]", "\n", "tf_log_info", "[", "key", "]", "[", "'score'", "]", "=", "scores", "[", "best", "]", "\n", "", "return", "tf_log_info", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.reduce_patterns": [[199, 220], ["dict", "re.sub", "best_ids.append", "new_patterns.append", "re.sub.replace", "ps.append", "plot.Plotter.filter_log_dirs", "plot.Plotter.load_log_dirs", "scores.append", "numpy.nanargmax", "score_fn", "print", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.filter_log_dirs", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.plot.Plotter.load_log_dirs"], ["", "def", "reduce_patterns", "(", "self", ",", "patterns", ",", "root", ",", "tag", ",", "ids", ",", "score_fn", ")", ":", "\n", "        ", "new_patterns", "=", "[", "]", "\n", "best_ids", "=", "[", "]", "\n", "for", "pattern", "in", "patterns", ":", "\n", "            ", "scores", "=", "[", "]", "\n", "pattern", "=", "re", ".", "sub", "(", "r'hp_\\d+'", ",", "'placeholder'", ",", "pattern", ")", "\n", "ps", "=", "[", "]", "\n", "for", "id", "in", "ids", ":", "\n", "                ", "p", "=", "pattern", ".", "replace", "(", "'placeholder'", ",", "'hp_%s'", "%", "(", "id", ")", ")", "\n", "ps", ".", "append", "(", "p", ")", "\n", "names", "=", "self", ".", "filter_log_dirs", "(", "'.*%s.*'", "%", "(", "p", ")", ",", "root", "=", "root", ")", "\n", "xy_list", "=", "self", ".", "load_log_dirs", "(", "names", ",", "tag", "=", "tag", ",", "right_align", "=", "True", ")", "\n", "scores", ".", "append", "(", "score_fn", "(", "np", ".", "asarray", "(", "[", "y", "for", "x", ",", "y", "in", "xy_list", "]", ")", ")", ")", "\n", "", "try", ":", "\n", "                ", "best", "=", "np", ".", "nanargmax", "(", "scores", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "                ", "print", "(", "e", ")", "\n", "best", "=", "0", "\n", "", "best_ids", ".", "append", "(", "best", ")", "\n", "new_patterns", ".", "append", "(", "ps", "[", "best", "]", ")", "\n", "", "return", "dict", "(", "patterns", "=", "new_patterns", ",", "ids", "=", "best_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.__init__": [[8, 14], ["numpy.zeros", "numpy.zeros", "set"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "capacity", ")", ":", "\n", "        ", "self", ".", "capacity", "=", "capacity", "\n", "self", ".", "tree", "=", "numpy", ".", "zeros", "(", "2", "*", "capacity", "-", "1", ")", "\n", "self", ".", "data", "=", "numpy", ".", "zeros", "(", "capacity", ",", "dtype", "=", "object", ")", "\n", "self", ".", "n_entries", "=", "0", "\n", "self", ".", "pending_idx", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._propagate": [[16, 21], ["sum_tree.SumTree._propagate"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._propagate"], ["", "def", "_propagate", "(", "self", ",", "idx", ",", "change", ")", ":", "\n", "        ", "parent", "=", "(", "idx", "-", "1", ")", "//", "2", "\n", "self", ".", "tree", "[", "parent", "]", "+=", "change", "\n", "if", "parent", "!=", "0", ":", "\n", "            ", "self", ".", "_propagate", "(", "parent", ",", "change", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._retrieve": [[23, 34], ["len", "sum_tree.SumTree._retrieve", "sum_tree.SumTree._retrieve"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._retrieve", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._retrieve"], ["", "", "def", "_retrieve", "(", "self", ",", "idx", ",", "s", ")", ":", "\n", "        ", "left", "=", "2", "*", "idx", "+", "1", "\n", "right", "=", "left", "+", "1", "\n", "\n", "if", "left", ">=", "len", "(", "self", ".", "tree", ")", ":", "\n", "            ", "return", "idx", "\n", "\n", "", "if", "s", "<=", "self", ".", "tree", "[", "left", "]", ":", "\n", "            ", "return", "self", ".", "_retrieve", "(", "left", ",", "s", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_retrieve", "(", "right", ",", "s", "-", "self", ".", "tree", "[", "left", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.total": [[35, 37], ["None"], "methods", ["None"], ["", "", "def", "total", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "tree", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.add": [[39, 52], ["sum_tree.SumTree.pending_idx.add", "sum_tree.SumTree.update"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.update"], ["", "def", "add", "(", "self", ",", "p", ",", "data", ")", ":", "\n", "        ", "idx", "=", "self", ".", "write", "+", "self", ".", "capacity", "-", "1", "\n", "self", ".", "pending_idx", ".", "add", "(", "idx", ")", "\n", "\n", "self", ".", "data", "[", "self", ".", "write", "]", "=", "data", "\n", "self", ".", "update", "(", "idx", ",", "p", ")", "\n", "\n", "self", ".", "write", "+=", "1", "\n", "if", "self", ".", "write", ">=", "self", ".", "capacity", ":", "\n", "            ", "self", ".", "write", "=", "0", "\n", "\n", "", "if", "self", ".", "n_entries", "<", "self", ".", "capacity", ":", "\n", "            ", "self", ".", "n_entries", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.update": [[54, 61], ["sum_tree.SumTree.pending_idx.remove", "sum_tree.SumTree._propagate"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._propagate"], ["", "", "def", "update", "(", "self", ",", "idx", ",", "p", ")", ":", "\n", "        ", "if", "idx", "not", "in", "self", ".", "pending_idx", ":", "\n", "            ", "return", "\n", "", "self", ".", "pending_idx", ".", "remove", "(", "idx", ")", "\n", "change", "=", "p", "-", "self", ".", "tree", "[", "idx", "]", "\n", "self", ".", "tree", "[", "idx", "]", "=", "p", "\n", "self", ".", "_propagate", "(", "idx", ",", "change", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.get": [[63, 68], ["sum_tree.SumTree._retrieve", "sum_tree.SumTree.pending_idx.add"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree._retrieve", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add"], ["", "def", "get", "(", "self", ",", "s", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_retrieve", "(", "0", ",", "s", ")", "\n", "dataIdx", "=", "idx", "-", "self", ".", "capacity", "+", "1", "\n", "self", ".", "pending_idx", ".", "add", "(", "idx", ")", "\n", "return", "(", "idx", ",", "self", ".", "tree", "[", "idx", "]", ",", "dataIdx", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.__init__": [[99, 104], ["misc.HyperParameter.dict"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict"], ["    ", "def", "__init__", "(", "self", ",", "id", ",", "param", ")", ":", "\n", "        ", "self", ".", "id", "=", "id", "\n", "self", ".", "param", "=", "dict", "(", ")", "\n", "for", "key", ",", "item", "in", "param", ":", "\n", "            ", "self", ".", "param", "[", "key", "]", "=", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.__str__": [[105, 107], ["str"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict": [[108, 110], ["None"], "methods", ["None"], ["", "def", "dict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameters.__init__": [[113, 121], ["ordered_params.keys", "list", "isinstance", "params.append", "itertools.product"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ordered_params", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "ordered_params", ",", "OrderedDict", ")", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "params", "=", "[", "]", "\n", "for", "key", "in", "ordered_params", ".", "keys", "(", ")", ":", "\n", "            ", "param", "=", "[", "[", "key", ",", "iterm", "]", "for", "iterm", "in", "ordered_params", "[", "key", "]", "]", "\n", "params", ".", "append", "(", "param", ")", "\n", "", "self", ".", "params", "=", "list", "(", "itertools", ".", "product", "(", "*", "params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameters.__getitem__": [[122, 124], ["misc.HyperParameter"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "HyperParameter", "(", "index", ",", "self", ".", "params", "[", "index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameters.__len__": [[125, 127], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "params", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.run_steps": [[19, 36], ["time.time", "agent.step", "agent.switch_task", "agent.save", "agent.logger.info", "time.time", "agent.eval_episodes", "agent.close", "time.time"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.switch_task", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.eval_episodes", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.close"], ["def", "run_steps", "(", "agent", ")", ":", "\n", "    ", "config", "=", "agent", ".", "config", "\n", "agent_name", "=", "agent", ".", "__class__", ".", "__name__", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "while", "True", ":", "\n", "        ", "if", "config", ".", "save_interval", "and", "not", "agent", ".", "total_steps", "%", "config", ".", "save_interval", ":", "\n", "            ", "agent", ".", "save", "(", "'data/%s-%s-%d'", "%", "(", "agent_name", ",", "config", ".", "tag", ",", "agent", ".", "total_steps", ")", ")", "\n", "", "if", "config", ".", "log_interval", "and", "not", "agent", ".", "total_steps", "%", "config", ".", "log_interval", ":", "\n", "            ", "agent", ".", "logger", ".", "info", "(", "'steps %d, %.2f steps/s'", "%", "(", "agent", ".", "total_steps", ",", "config", ".", "log_interval", "/", "(", "time", ".", "time", "(", ")", "-", "t0", ")", ")", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "", "if", "config", ".", "eval_interval", "and", "not", "agent", ".", "total_steps", "%", "config", ".", "eval_interval", ":", "\n", "            ", "agent", ".", "eval_episodes", "(", ")", "\n", "", "if", "config", ".", "max_steps", "and", "agent", ".", "total_steps", ">=", "config", ".", "max_steps", ":", "\n", "            ", "agent", ".", "close", "(", ")", "\n", "break", "\n", "", "agent", ".", "step", "(", ")", "\n", "agent", ".", "switch_task", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.get_time_str": [[38, 40], ["datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["", "", "def", "get_time_str", "(", ")", ":", "\n", "    ", "return", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%y%m%d-%H%M%S\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.get_default_log_dir": [[42, 44], ["misc.get_time_str"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.get_time_str"], ["", "def", "get_default_log_dir", "(", "name", ")", ":", "\n", "    ", "return", "'./log/%s-%s'", "%", "(", "name", ",", "get_time_str", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.mkdir": [[46, 48], ["pathlib.Path().mkdir", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.mkdir"], ["", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "Path", "(", "path", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.close_obj": [[50, 53], ["hasattr", "obj.close"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.close"], ["", "def", "close_obj", "(", "obj", ")", ":", "\n", "    ", "if", "hasattr", "(", "obj", ",", "'close'", ")", ":", "\n", "        ", "obj", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.random_sample": [[55, 63], ["numpy.asarray", "indices[].reshape", "numpy.random.permutation", "len", "len"], "function", ["None"], ["", "", "def", "random_sample", "(", "indices", ",", "batch_size", ")", ":", "\n", "    ", "indices", "=", "np", ".", "asarray", "(", "np", ".", "random", ".", "permutation", "(", "indices", ")", ")", "\n", "batches", "=", "indices", "[", ":", "len", "(", "indices", ")", "//", "batch_size", "*", "batch_size", "]", ".", "reshape", "(", "-", "1", ",", "batch_size", ")", "\n", "for", "batch", "in", "batches", ":", "\n", "        ", "yield", "batch", "\n", "", "r", "=", "len", "(", "indices", ")", "%", "batch_size", "\n", "if", "r", ":", "\n", "        ", "yield", "indices", "[", "-", "r", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.is_plain_type": [[65, 70], ["isinstance"], "function", ["None"], ["", "", "def", "is_plain_type", "(", "x", ")", ":", "\n", "    ", "for", "t", "in", "[", "str", ",", "int", ",", "float", ",", "bool", "]", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "t", ")", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.generate_tag": [[72, 85], ["params.setdefault", "params.keys", "sorted", "params.items", "misc.is_plain_type"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.is_plain_type"], ["", "def", "generate_tag", "(", "params", ")", ":", "\n", "    ", "if", "'tag'", "in", "params", ".", "keys", "(", ")", ":", "\n", "        ", "return", "\n", "", "game", "=", "params", "[", "'game'", "]", "\n", "params", ".", "setdefault", "(", "'run'", ",", "0", ")", "\n", "run", "=", "params", "[", "'run'", "]", "\n", "del", "params", "[", "'game'", "]", "\n", "del", "params", "[", "'run'", "]", "\n", "str", "=", "[", "'%s_%s'", "%", "(", "k", ",", "v", "if", "is_plain_type", "(", "v", ")", "else", "v", ".", "__name__", ")", "for", "k", ",", "v", "in", "sorted", "(", "params", ".", "items", "(", ")", ")", "]", "\n", "tag", "=", "'%s-%s-run-%d'", "%", "(", "game", ",", "'-'", ".", "join", "(", "str", ")", ",", "run", ")", "\n", "params", "[", "'tag'", "]", "=", "tag", "\n", "params", "[", "'game'", "]", "=", "game", "\n", "params", "[", "'run'", "]", "=", "run", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.translate": [[87, 91], ["pattern.split"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.split"], ["", "def", "translate", "(", "pattern", ")", ":", "\n", "    ", "groups", "=", "pattern", ".", "split", "(", "'.'", ")", "\n", "pattern", "=", "(", "'\\.'", ")", ".", "join", "(", "groups", ")", "\n", "return", "pattern", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.split": [[93, 96], ["divmod", "len", "range", "min", "min"], "function", ["None"], ["", "def", "split", "(", "a", ",", "n", ")", ":", "\n", "    ", "k", ",", "m", "=", "divmod", "(", "len", "(", "a", ")", ",", "n", ")", "\n", "return", "(", "a", "[", "i", "*", "k", "+", "min", "(", "i", ",", "m", ")", ":", "(", "i", "+", "1", ")", "*", "k", "+", "min", "(", "i", "+", "1", ",", "m", ")", "]", "for", "i", "in", "range", "(", "n", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.schedule.ConstantSchedule.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.schedule.ConstantSchedule.__call__": [[11, 13], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "steps", "=", "1", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.schedule.LinearSchedule.__init__": [[16, 27], ["float"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "start", ",", "end", "=", "None", ",", "steps", "=", "None", ")", ":", "\n", "        ", "if", "end", "is", "None", ":", "\n", "            ", "end", "=", "start", "\n", "steps", "=", "1", "\n", "", "self", ".", "inc", "=", "(", "end", "-", "start", ")", "/", "float", "(", "steps", ")", "\n", "self", ".", "current", "=", "start", "\n", "self", ".", "end", "=", "end", "\n", "if", "end", ">", "start", ":", "\n", "            ", "self", ".", "bound", "=", "min", "\n", "", "else", ":", "\n", "            ", "self", ".", "bound", "=", "max", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.schedule.LinearSchedule.__call__": [[28, 32], ["schedule.LinearSchedule.bound"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "steps", "=", "1", ")", ":", "\n", "        ", "val", "=", "self", ".", "current", "\n", "self", ".", "current", "=", "self", ".", "bound", "(", "self", ".", "current", "+", "self", ".", "inc", "*", "steps", ",", "self", ".", "end", ")", "\n", "return", "val", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.__init__": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "read_only", "=", "False", ")", ":", "\n", "        ", "self", ".", "read_only", "=", "read_only", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only": [[15, 17], ["None"], "methods", ["None"], ["", "def", "set_read_only", "(", "self", ")", ":", "\n", "        ", "self", ".", "read_only", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only": [[18, 20], ["None"], "methods", ["None"], ["", "def", "unset_read_only", "(", "self", ")", ":", "\n", "        ", "self", ".", "read_only", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.state_dict": [[21, 23], ["None"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.load_state_dict": [[24, 26], ["None"], "methods", ["None"], ["", "def", "load_state_dict", "(", "self", ",", "_", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.__init__": [[29, 35], ["normalizer.BaseNormalizer.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "read_only", "=", "False", ",", "clip", "=", "10.0", ",", "epsilon", "=", "1e-8", ")", ":", "\n", "        ", "BaseNormalizer", ".", "__init__", "(", "self", ",", "read_only", ")", "\n", "self", ".", "read_only", "=", "read_only", "\n", "self", ".", "rms", "=", "None", "\n", "self", ".", "clip", "=", "clip", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.__call__": [[36, 44], ["numpy.asarray", "numpy.clip", "baselines.common.running_mean_std.RunningMeanStd", "normalizer.MeanStdNormalizer.rms.update", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.sum_tree.SumTree.update"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "if", "self", ".", "rms", "is", "None", ":", "\n", "            ", "self", ".", "rms", "=", "RunningMeanStd", "(", "shape", "=", "(", "1", ",", ")", "+", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "", "if", "not", "self", ".", "read_only", ":", "\n", "            ", "self", ".", "rms", ".", "update", "(", "x", ")", "\n", "", "return", "np", ".", "clip", "(", "(", "x", "-", "self", ".", "rms", ".", "mean", ")", "/", "np", ".", "sqrt", "(", "self", ".", "rms", ".", "var", "+", "self", ".", "epsilon", ")", ",", "\n", "-", "self", ".", "clip", ",", "self", ".", "clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict": [[45, 48], ["None"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "'mean'", ":", "self", ".", "rms", ".", "mean", ",", "\n", "'var'", ":", "self", ".", "rms", ".", "var", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict": [[49, 52], ["None"], "methods", ["None"], ["", "def", "load_state_dict", "(", "self", ",", "saved", ")", ":", "\n", "        ", "self", ".", "rms", ".", "mean", "=", "saved", "[", "'mean'", "]", "\n", "self", ".", "rms", ".", "var", "=", "saved", "[", "'var'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.RescaleNormalizer.__init__": [[54, 57], ["normalizer.BaseNormalizer.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "coef", "=", "1.0", ")", ":", "\n", "        ", "BaseNormalizer", ".", "__init__", "(", "self", ")", "\n", "self", ".", "coef", "=", "coef", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.RescaleNormalizer.__call__": [[58, 62], ["isinstance", "numpy.asarray"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "", "return", "self", ".", "coef", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.ImageNormalizer.__init__": [[65, 67], ["normalizer.RescaleNormalizer.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "RescaleNormalizer", ".", "__init__", "(", "self", ",", "1.0", "/", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.SignNormalizer.__call__": [[70, 72], ["numpy.sign"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "np", ".", "sign", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.DiagonalNormal.__init__": [[91, 94], ["torch.distributions.Normal"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "dist", "=", "torch", ".", "distributions", ".", "Normal", "(", "mean", ",", "std", ")", "\n", "self", ".", "sample", "=", "self", ".", "dist", ".", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.DiagonalNormal.log_prob": [[95, 97], ["torch_utils.DiagonalNormal.dist.log_prob().sum().unsqueeze", "torch_utils.DiagonalNormal.dist.log_prob().sum", "torch_utils.DiagonalNormal.dist.log_prob"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.log_prob"], ["", "def", "log_prob", "(", "self", ",", "action", ")", ":", "\n", "        ", "return", "self", ".", "dist", ".", "log_prob", "(", "action", ")", ".", "sum", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.DiagonalNormal.entropy": [[98, 100], ["torch_utils.DiagonalNormal.dist.entropy().sum().unsqueeze", "torch_utils.DiagonalNormal.dist.entropy().sum", "torch_utils.DiagonalNormal.dist.entropy"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dist", ".", "entropy", "(", ")", ".", "sum", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.DiagonalNormal.cdf": [[101, 103], ["torch_utils.DiagonalNormal.dist.cdf().prod().unsqueeze", "torch_utils.DiagonalNormal.dist.cdf().prod", "torch_utils.DiagonalNormal.dist.cdf"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.DiagonalNormal.cdf"], ["", "def", "cdf", "(", "self", ",", "action", ")", ":", "\n", "        ", "return", "self", ".", "dist", ".", "cdf", "(", "action", ")", ".", "prod", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.__init__": [[106, 110], ["logits.view.view.view", "torch.distributions.Categorical", "logits.view.view.size", "logits.view.view.size"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "logits", ")", ":", "\n", "        ", "self", ".", "pre_shape", "=", "logits", ".", "size", "(", ")", "[", ":", "-", "1", "]", "\n", "logits", "=", "logits", ".", "view", "(", "-", "1", ",", "logits", ".", "size", "(", "-", "1", ")", ")", "\n", "self", ".", "dist", "=", "torch", ".", "distributions", ".", "Categorical", "(", "logits", "=", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.log_prob": [[111, 115], ["torch_utils.BatchCategorical.dist.log_prob", "log_pi.view.view.view", "action.view", "action.size"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.log_prob"], ["", "def", "log_prob", "(", "self", ",", "action", ")", ":", "\n", "        ", "log_pi", "=", "self", ".", "dist", ".", "log_prob", "(", "action", ".", "view", "(", "-", "1", ")", ")", "\n", "log_pi", "=", "log_pi", ".", "view", "(", "action", ".", "size", "(", ")", "[", ":", "-", "1", "]", "+", "(", "-", "1", ",", ")", ")", "\n", "return", "log_pi", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy": [[116, 120], ["torch_utils.BatchCategorical.dist.entropy", "ent.view.view.view"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "ent", "=", "self", ".", "dist", ".", "entropy", "(", ")", "\n", "ent", "=", "ent", ".", "view", "(", "self", ".", "pre_shape", "+", "(", "-", "1", ",", ")", ")", "\n", "return", "ent", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.sample": [[121, 125], ["torch.Size", "torch_utils.BatchCategorical.dist.sample", "ret.view.view.view"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "torch", ".", "Size", "(", "[", "]", ")", ")", ":", "\n", "        ", "ret", "=", "self", ".", "dist", ".", "sample", "(", "sample_shape", ")", "\n", "ret", "=", "ret", ".", "view", "(", "sample_shape", "+", "self", ".", "pre_shape", "+", "(", "-", "1", ",", ")", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.__init__": [[128, 135], ["network.parameters", "torch_utils.Grad.grads.append", "torch.zeros", "param.data.size"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "network", "=", "None", ",", "grads", "=", "None", ")", ":", "\n", "        ", "if", "grads", "is", "not", "None", ":", "\n", "            ", "self", ".", "grads", "=", "grads", "\n", "", "else", ":", "\n", "            ", "self", ".", "grads", "=", "[", "]", "\n", "for", "param", "in", "network", ".", "parameters", "(", ")", ":", "\n", "                ", "self", ".", "grads", ".", "append", "(", "torch", ".", "zeros", "(", "param", ".", "data", ".", "size", "(", ")", ",", "device", "=", "Config", ".", "DEVICE", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.add": [[136, 145], ["isinstance", "zip", "isinstance", "grad.add_", "zip", "op.parameters", "grad.add_"], "methods", ["None"], ["", "", "", "def", "add", "(", "self", ",", "op", ")", ":", "\n", "        ", "if", "isinstance", "(", "op", ",", "Grad", ")", ":", "\n", "            ", "for", "grad", ",", "op_grad", "in", "zip", "(", "self", ".", "grads", ",", "op", ".", "grads", ")", ":", "\n", "                ", "grad", ".", "add_", "(", "op_grad", ")", "\n", "", "", "elif", "isinstance", "(", "op", ",", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "            ", "for", "grad", ",", "param", "in", "zip", "(", "self", ".", "grads", ",", "op", ".", "parameters", "(", ")", ")", ":", "\n", "                ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "grad", ".", "add_", "(", "param", ".", "grad", ")", "\n", "", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.mul": [[146, 150], ["grad.mul_"], "methods", ["None"], ["", "def", "mul", "(", "self", ",", "coef", ")", ":", "\n", "        ", "for", "grad", "in", "self", ".", "grads", ":", "\n", "            ", "grad", ".", "mul_", "(", "coef", ")", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.assign": [[151, 154], ["zip", "network.parameters", "grad.clone"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone"], ["", "def", "assign", "(", "self", ",", "network", ")", ":", "\n", "        ", "for", "grad", ",", "param", "in", "zip", "(", "self", ".", "grads", ",", "network", ".", "parameters", "(", ")", ")", ":", "\n", "            ", "param", ".", "_grad", "=", "grad", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.zero": [[155, 158], ["grad.zero_"], "methods", ["None"], ["", "", "def", "zero", "(", "self", ")", ":", "\n", "        ", "for", "grad", "in", "self", ".", "grads", ":", "\n", "            ", "grad", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.clone": [[159, 161], ["torch_utils.Grad", "grad.clone"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone"], ["", "", "def", "clone", "(", "self", ")", ":", "\n", "        ", "return", "Grad", "(", "grads", "=", "[", "grad", ".", "clone", "(", ")", "for", "grad", "in", "self", ".", "grads", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.__init__": [[164, 169], ["torch_utils.Grad", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "network", "=", "None", ",", "n", "=", "0", ",", "grads", "=", "None", ")", ":", "\n", "        ", "if", "grads", "is", "not", "None", ":", "\n", "            ", "self", ".", "grads", "=", "grads", "\n", "", "else", ":", "\n", "            ", "self", ".", "grads", "=", "[", "Grad", "(", "network", ")", "for", "_", "in", "range", "(", "n", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone": [[170, 172], ["torch_utils.Grads", "grad.clone"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone"], ["", "", "def", "clone", "(", "self", ")", ":", "\n", "        ", "return", "Grads", "(", "grads", "=", "[", "grad", ".", "clone", "(", ")", "for", "grad", "in", "self", ".", "grads", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul": [[173, 184], ["np.isscalar", "isinstance", "grad.mul", "op.view.view.view", "enumerate", "grad.mul"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "mul", "(", "self", ",", "op", ")", ":", "\n", "        ", "if", "np", ".", "isscalar", "(", "op", ")", ":", "\n", "            ", "for", "grad", "in", "self", ".", "grads", ":", "\n", "                ", "grad", ".", "mul", "(", "op", ")", "\n", "", "", "elif", "isinstance", "(", "op", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "op", "=", "op", ".", "view", "(", "-", "1", ")", "\n", "for", "i", ",", "grad", "in", "enumerate", "(", "self", ".", "grads", ")", ":", "\n", "                ", "grad", ".", "mul", "(", "op", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add": [[185, 199], ["np.isscalar", "isinstance", "grad.mul", "zip", "isinstance", "grad.add", "op.view.view.view", "enumerate", "grad.mul"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "add", "(", "self", ",", "op", ")", ":", "\n", "        ", "if", "np", ".", "isscalar", "(", "op", ")", ":", "\n", "            ", "for", "grad", "in", "self", ".", "grads", ":", "\n", "                ", "grad", ".", "mul", "(", "op", ")", "\n", "", "", "elif", "isinstance", "(", "op", ",", "Grads", ")", ":", "\n", "            ", "for", "grad", ",", "op_grad", "in", "zip", "(", "self", ".", "grads", ",", "op", ".", "grads", ")", ":", "\n", "                ", "grad", ".", "add", "(", "op_grad", ")", "\n", "", "", "elif", "isinstance", "(", "op", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "op", "=", "op", ".", "view", "(", "-", "1", ")", "\n", "for", "i", ",", "grad", "in", "enumerate", "(", "self", ".", "grads", ")", ":", "\n", "                ", "grad", ".", "mul", "(", "op", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean": [[200, 207], ["torch_utils.Grads.grads[].clone", "torch_utils.Grads.zero", "torch_utils.Grads.mul", "torch_utils.Grads.add", "len"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grad.zero", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add"], ["", "def", "mean", "(", "self", ")", ":", "\n", "        ", "grad", "=", "self", ".", "grads", "[", "0", "]", ".", "clone", "(", ")", "\n", "grad", ".", "zero", "(", ")", "\n", "for", "g", "in", "self", ".", "grads", ":", "\n", "            ", "grad", ".", "add", "(", "g", ")", "\n", "", "grad", ".", "mul", "(", "1", "/", "len", "(", "self", ".", "grads", ")", ")", "\n", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.select_device": [[12, 18], ["torch.device", "torch.device"], "function", ["None"], ["def", "select_device", "(", "gpu_id", ")", ":", "\n", "# if torch.cuda.is_available() and gpu_id >= 0:", "\n", "    ", "if", "gpu_id", ">=", "0", ":", "\n", "        ", "Config", ".", "DEVICE", "=", "torch", ".", "device", "(", "'cuda:%d'", "%", "(", "gpu_id", ")", ")", "\n", "", "else", ":", "\n", "        ", "Config", ".", "DEVICE", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor": [[20, 26], ["isinstance", "np.asarray", "torch.from_numpy().to", "torch.from_numpy"], "function", ["None"], ["", "", "def", "tensor", "(", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "x", "\n", "", "x", "=", "np", ".", "asarray", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "x", "=", "torch", ".", "from_numpy", "(", "x", ")", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.range_tensor": [[28, 30], ["torch.arange().long().to", "torch.arange().long", "torch.arange"], "function", ["None"], ["", "def", "range_tensor", "(", "end", ")", ":", "\n", "    ", "return", "torch", ".", "arange", "(", "end", ")", ".", "long", "(", ")", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np": [[32, 34], ["t.cpu().detach().numpy", "t.cpu().detach", "t.cpu"], "function", ["None"], ["", "def", "to_np", "(", "t", ")", ":", "\n", "    ", "return", "t", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.random_seed": [[36, 39], ["np.random.seed", "torch.manual_seed", "np.random.randint", "int"], "function", ["None"], ["", "def", "random_seed", "(", "seed", "=", "None", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "np", ".", "random", ".", "randint", "(", "int", "(", "1e6", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.set_one_thread": [[41, 45], ["torch.set_num_threads"], "function", ["None"], ["", "def", "set_one_thread", "(", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'OMP_NUM_THREADS'", "]", "=", "'1'", "\n", "os", ".", "environ", "[", "'MKL_NUM_THREADS'", "]", "=", "'1'", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.huber": [[47, 49], ["torch.where", "x.abs", "x.pow", "x.abs"], "function", ["None"], ["", "def", "huber", "(", "x", ",", "k", "=", "1.0", ")", ":", "\n", "    ", "return", "torch", ".", "where", "(", "x", ".", "abs", "(", ")", "<", "k", ",", "0.5", "*", "x", ".", "pow", "(", "2", ")", ",", "k", "*", "(", "x", ".", "abs", "(", ")", "-", "0.5", "*", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.epsilon_greedy": [[51, 59], ["len", "np.random.randint", "np.argmax", "len", "np.random.randint", "np.argmax", "np.random.rand", "np.where", "np.random.rand", "len"], "function", ["None"], ["", "def", "epsilon_greedy", "(", "epsilon", ",", "x", ")", ":", "\n", "    ", "if", "len", "(", "x", ".", "shape", ")", "==", "1", ":", "\n", "        ", "return", "np", ".", "random", ".", "randint", "(", "len", "(", "x", ")", ")", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "epsilon", "else", "np", ".", "argmax", "(", "x", ")", "\n", "", "elif", "len", "(", "x", ".", "shape", ")", "==", "2", ":", "\n", "        ", "random_actions", "=", "np", ".", "random", ".", "randint", "(", "x", ".", "shape", "[", "1", "]", ",", "size", "=", "x", ".", "shape", "[", "0", "]", ")", "\n", "greedy_actions", "=", "np", ".", "argmax", "(", "x", ",", "axis", "=", "-", "1", ")", "\n", "dice", "=", "np", ".", "random", ".", "rand", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "return", "np", ".", "where", "(", "dice", "<", "epsilon", ",", "random_actions", ",", "greedy_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.sync_grad": [[61, 65], ["zip", "target_network.parameters", "src_network.parameters", "src_param.grad.clone"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone"], ["", "", "def", "sync_grad", "(", "target_network", ",", "src_network", ")", ":", "\n", "    ", "for", "param", ",", "src_param", "in", "zip", "(", "target_network", ".", "parameters", "(", ")", ",", "src_network", ".", "parameters", "(", ")", ")", ":", "\n", "        ", "if", "src_param", ".", "grad", "is", "not", "None", ":", "\n", "            ", "param", ".", "_grad", "=", "src_param", ".", "grad", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.batch_diagonal": [[68, 82], ["input.size", "torch.zeros", "strides.append", "torch.zeros.as_strided().copy_", "torch.zeros.stride", "range", "torch.zeros.size", "torch.zeros.as_strided", "input.size", "input.dim"], "function", ["None"], ["", "", "", "def", "batch_diagonal", "(", "input", ")", ":", "\n", "# idea from here: https://discuss.pytorch.org/t/batch-of-diagonal-matrix/13560", "\n", "# batches a stack of vectors (batch x N) -> a stack of diagonal matrices (batch x N x N)", "\n", "# works in  2D -> 3D, should also work in higher dimensions", "\n", "# make a zero matrix, which duplicates the last dim of input", "\n", "    ", "dims", "=", "input", ".", "size", "(", ")", "\n", "dims", "=", "dims", "+", "dims", "[", "-", "1", ":", "]", "\n", "output", "=", "torch", ".", "zeros", "(", "dims", ",", "device", "=", "input", ".", "device", ")", "\n", "# stride across the first dimensions, add one to get the diagonal of the last dimension", "\n", "strides", "=", "[", "output", ".", "stride", "(", "i", ")", "for", "i", "in", "range", "(", "input", ".", "dim", "(", ")", "-", "1", ")", "]", "\n", "strides", ".", "append", "(", "output", ".", "size", "(", "-", "1", ")", "+", "1", ")", "\n", "# stride and copy the input to the diagonal", "\n", "output", ".", "as_strided", "(", "input", ".", "size", "(", ")", ",", "strides", ")", ".", "copy_", "(", "input", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.batch_trace": [[84, 88], ["torch_utils.range_tensor", "input[].sum().unsqueeze().unsqueeze", "input.size", "input[].sum().unsqueeze", "input[].sum"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.range_tensor"], ["", "def", "batch_trace", "(", "input", ")", ":", "\n", "    ", "i", "=", "range_tensor", "(", "input", ".", "size", "(", "-", "1", ")", ")", "\n", "t", "=", "input", "[", ":", ",", "i", ",", "i", "]", ".", "sum", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.escape_float": [[209, 211], ["None"], "function", ["None"], ["", "", "def", "escape_float", "(", "x", ")", ":", "\n", "    ", "return", "(", "'%s'", "%", "x", ")", ".", "replace", "(", "'.'", ",", "'\\.'", ")", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.OriginalReturnWrapper.__init__": [[59, 62], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "total_rewards", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.OriginalReturnWrapper.step": [[63, 72], ["envs.OriginalReturnWrapper.env.step"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "self", ".", "total_rewards", "+=", "reward", "\n", "if", "done", ":", "\n", "            ", "info", "[", "'episodic_return'", "]", "=", "self", ".", "total_rewards", "\n", "self", ".", "total_rewards", "=", "0", "\n", "", "else", ":", "\n", "            ", "info", "[", "'episodic_return'", "]", "=", "None", "\n", "", "return", "obs", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.OriginalReturnWrapper.reset": [[73, 75], ["envs.OriginalReturnWrapper.env.reset"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.TransposeImage.__init__": [[78, 86], ["gym.ObservationWrapper.__init__", "gym.spaces.box.Box"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", "=", "None", ")", ":", "\n", "        ", "super", "(", "TransposeImage", ",", "self", ")", ".", "__init__", "(", "env", ")", "\n", "obs_shape", "=", "self", ".", "observation_space", ".", "shape", "\n", "self", ".", "observation_space", "=", "Box", "(", "\n", "self", ".", "observation_space", ".", "low", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "self", ".", "observation_space", ".", "high", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "obs_shape", "[", "2", "]", ",", "obs_shape", "[", "1", "]", ",", "obs_shape", "[", "0", "]", "]", ",", "\n", "dtype", "=", "self", ".", "observation_space", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.TransposeImage.observation": [[87, 89], ["observation.transpose"], "methods", ["None"], ["", "def", "observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "return", "observation", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__init__": [[93, 102], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "frames", ")", ":", "\n", "        ", "\"\"\"This object ensures that common frames between the observations are only stored once.\n        It exists purely to optimize memory usage which can be huge for DQN's 1M frames replay\n        buffers.\n\n        This object should only be converted to numpy array before being passed to the model.\n\n        You'd not believe how complex the previous solution was.\"\"\"", "\n", "self", ".", "_frames", "=", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__array__": [[103, 108], ["numpy.concatenate", "out.astype.astype.astype"], "methods", ["None"], ["", "def", "__array__", "(", "self", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "out", "=", "np", ".", "concatenate", "(", "self", ".", "_frames", ",", "axis", "=", "0", ")", "\n", "if", "dtype", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", ".", "astype", "(", "dtype", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__len__": [[109, 111], ["len", "envs.LazyFrames.__array__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__array__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "__array__", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__getitem__": [[112, 114], ["envs.LazyFrames.__array__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.LazyFrames.__array__"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "__array__", "(", ")", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.FrameStack.__init__": [[117, 119], ["baselines.common.atari_wrappers.FrameStack.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "k", ")", ":", "\n", "        ", "FrameStack_", ".", "__init__", "(", "self", ",", "env", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.FrameStack._get_ob": [[120, 123], ["envs.LazyFrames", "len", "list"], "methods", ["None"], ["", "def", "_get_ob", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "frames", ")", "==", "self", ".", "k", "\n", "return", "LazyFrames", "(", "list", "(", "self", ".", "frames", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.DummyVecEnv.__init__": [[127, 132], ["baselines.common.vec_env.subproc_vec_env.VecEnv.__init__", "fn", "len"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env_fns", ")", ":", "\n", "        ", "self", ".", "envs", "=", "[", "fn", "(", ")", "for", "fn", "in", "env_fns", "]", "\n", "env", "=", "self", ".", "envs", "[", "0", "]", "\n", "VecEnv", ".", "__init__", "(", "self", ",", "len", "(", "env_fns", ")", ",", "env", ".", "observation_space", ",", "env", ".", "action_space", ")", "\n", "self", ".", "actions", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.DummyVecEnv.step_async": [[133, 135], ["None"], "methods", ["None"], ["", "def", "step_async", "(", "self", ",", "actions", ")", ":", "\n", "        ", "self", ".", "actions", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.DummyVecEnv.step_wait": [[136, 145], ["range", "zip", "envs.DummyVecEnv.envs[].step", "data.append", "numpy.asarray", "numpy.asarray", "envs.DummyVecEnv.envs[].reset"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["", "def", "step_wait", "(", "self", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_envs", ")", ":", "\n", "            ", "obs", ",", "rew", ",", "done", ",", "info", "=", "self", ".", "envs", "[", "i", "]", ".", "step", "(", "self", ".", "actions", "[", "i", "]", ")", "\n", "if", "done", ":", "\n", "                ", "obs", "=", "self", ".", "envs", "[", "i", "]", ".", "reset", "(", ")", "\n", "", "data", ".", "append", "(", "[", "obs", ",", "rew", ",", "done", ",", "info", "]", ")", "\n", "", "obs", ",", "rew", ",", "done", ",", "info", "=", "zip", "(", "*", "data", ")", "\n", "return", "obs", ",", "np", ".", "asarray", "(", "rew", ")", ",", "np", ".", "asarray", "(", "done", ")", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.DummyVecEnv.reset": [[146, 148], ["env.reset"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "[", "env", ".", "reset", "(", ")", "for", "env", "in", "self", ".", "envs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.DummyVecEnv.close": [[149, 151], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.__init__": [[154, 182], ["Wrapper", "int", "isinstance", "numpy.random.randint", "mkdir", "envs.make_env", "numpy.prod", "isinstance", "int", "range"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.mkdir", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.make_env"], ["    ", "def", "__init__", "(", "self", ",", "\n", "name", ",", "\n", "num_envs", "=", "1", ",", "\n", "single_process", "=", "True", ",", "\n", "log_dir", "=", "None", ",", "\n", "episode_life", "=", "True", ",", "\n", "seed", "=", "None", ")", ":", "\n", "        ", "if", "seed", "is", "None", ":", "\n", "            ", "seed", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "1e9", ")", ")", "\n", "", "if", "log_dir", "is", "not", "None", ":", "\n", "            ", "mkdir", "(", "log_dir", ")", "\n", "", "envs", "=", "[", "make_env", "(", "name", ",", "seed", ",", "i", ",", "episode_life", ")", "for", "i", "in", "range", "(", "num_envs", ")", "]", "\n", "if", "single_process", ":", "\n", "            ", "Wrapper", "=", "DummyVecEnv", "\n", "", "else", ":", "\n", "            ", "Wrapper", "=", "SubprocVecEnv", "\n", "", "self", ".", "env", "=", "Wrapper", "(", "envs", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "observation_space", "=", "self", ".", "env", ".", "observation_space", "\n", "self", ".", "state_dim", "=", "int", "(", "np", ".", "prod", "(", "self", ".", "env", ".", "observation_space", ".", "shape", ")", ")", "\n", "\n", "self", ".", "action_space", "=", "self", ".", "env", ".", "action_space", "\n", "if", "isinstance", "(", "self", ".", "action_space", ",", "Discrete", ")", ":", "\n", "            ", "self", ".", "action_dim", "=", "self", ".", "action_space", ".", "n", "\n", "", "elif", "isinstance", "(", "self", ".", "action_space", ",", "Box", ")", ":", "\n", "            ", "self", ".", "action_dim", "=", "self", ".", "action_space", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "assert", "'unknown action space'", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset": [[183, 185], ["envs.Task.env.reset"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.step": [[186, 190], ["isinstance", "envs.Task.env.step", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "action_space", ",", "Box", ")", ":", "\n", "            ", "actions", "=", "np", ".", "clip", "(", "actions", ",", "self", ".", "action_space", ".", "low", ",", "self", ".", "action_space", ".", "high", ")", "\n", "", "return", "self", ".", "env", ".", "step", "(", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.make_env": [[27, 56], ["random_seed", "env_id.startswith", "TransposeImage.seed", "envs.OriginalReturnWrapper", "env_id.split", "dm_control2gym.make", "gym.make", "hasattr", "isinstance", "baselines.common.atari_wrappers.make_atari", "baselines.common.atari_wrappers.wrap_deepmind", "envs.FrameStack", "len", "envs.TransposeImage"], "function", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.random_seed", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.split"], ["", "def", "make_env", "(", "env_id", ",", "seed", ",", "rank", ",", "episode_life", "=", "True", ")", ":", "\n", "    ", "def", "_thunk", "(", ")", ":", "\n", "        ", "random_seed", "(", "seed", ")", "\n", "if", "env_id", ".", "startswith", "(", "\"dm\"", ")", ":", "\n", "            ", "import", "dm_control2gym", "\n", "_", ",", "domain", ",", "task", "=", "env_id", ".", "split", "(", "'-'", ")", "\n", "env", "=", "dm_control2gym", ".", "make", "(", "domain_name", "=", "domain", ",", "task_name", "=", "task", ")", "\n", "", "else", ":", "\n", "            ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "", "is_atari", "=", "hasattr", "(", "gym", ".", "envs", ",", "'atari'", ")", "and", "isinstance", "(", "\n", "env", ".", "unwrapped", ",", "gym", ".", "envs", ".", "atari", ".", "atari_env", ".", "AtariEnv", ")", "\n", "if", "is_atari", ":", "\n", "            ", "env", "=", "make_atari", "(", "env_id", ")", "\n", "", "env", ".", "seed", "(", "seed", "+", "rank", ")", "\n", "env", "=", "OriginalReturnWrapper", "(", "env", ")", "\n", "if", "is_atari", ":", "\n", "            ", "env", "=", "wrap_deepmind", "(", "env", ",", "\n", "episode_life", "=", "episode_life", ",", "\n", "clip_rewards", "=", "False", ",", "\n", "frame_stack", "=", "False", ",", "\n", "scale", "=", "False", ")", "\n", "obs_shape", "=", "env", ".", "observation_space", ".", "shape", "\n", "if", "len", "(", "obs_shape", ")", "==", "3", ":", "\n", "                ", "env", "=", "TransposeImage", "(", "env", ")", "\n", "", "env", "=", "FrameStack", "(", "env", ",", "4", ")", "\n", "\n", "", "return", "env", "\n", "\n", "", "return", "_thunk", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.RandomProcess.reset_states": [[11, 13], ["None"], "methods", ["None"], ["    ", "def", "reset_states", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.GaussianProcess.__init__": [[16, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "std", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.GaussianProcess.sample": [[20, 22], ["numpy.random.randn", "random_process.GaussianProcess.std"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "randn", "(", "*", "self", ".", "size", ")", "*", "self", ".", "std", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.__init__": [[25, 33], ["random_process.OrnsteinUhlenbeckProcess.reset_states"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "std", ",", "theta", "=", ".15", ",", "dt", "=", "1e-2", ",", "x0", "=", "None", ")", ":", "\n", "        ", "self", ".", "theta", "=", "theta", "\n", "self", ".", "mu", "=", "0", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "dt", "=", "dt", "\n", "self", ".", "x0", "=", "x0", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "reset_states", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample": [[34, 39], ["numpy.random.randn", "random_process.OrnsteinUhlenbeckProcess.std", "numpy.sqrt"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "x", "=", "self", ".", "x_prev", "+", "self", ".", "theta", "*", "(", "self", ".", "mu", "-", "self", ".", "x_prev", ")", "*", "self", ".", "dt", "+", "self", ".", "std", "(", ")", "*", "np", ".", "sqrt", "(", "\n", "self", ".", "dt", ")", "*", "np", ".", "random", ".", "randn", "(", "*", "self", ".", "size", ")", "\n", "self", ".", "x_prev", "=", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states": [[40, 42], ["numpy.zeros"], "methods", ["None"], ["", "def", "reset_states", "(", "self", ")", ":", "\n", "        ", "self", ".", "x_prev", "=", "self", ".", "x0", "if", "self", ".", "x0", "is", "not", "None", "else", "np", ".", "zeros", "(", "self", ".", "size", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.VanillaNet.__init__": [[12, 17], ["super().__init__", "network_utils.layer_init", "network_heads.VanillaNet.to", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "output_dim", ",", "body", ")", ":", "\n", "        ", "super", "(", "VanillaNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_head", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "output_dim", ")", ")", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.VanillaNet.forward": [[18, 22], ["network_heads.VanillaNet.body", "network_heads.VanillaNet.fc_head", "dict", "tensor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "q", "=", "self", ".", "fc_head", "(", "phi", ")", "\n", "return", "dict", "(", "q", "=", "q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DuelingNet.__init__": [[25, 31], ["super().__init__", "network_utils.layer_init", "network_utils.layer_init", "network_heads.DuelingNet.to", "nn.Linear", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "action_dim", ",", "body", ")", ":", "\n", "        ", "super", "(", "DuelingNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_value", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "1", ")", ")", "\n", "self", ".", "fc_advantage", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "action_dim", ")", ")", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DuelingNet.forward": [[32, 38], ["network_heads.DuelingNet.body", "network_heads.DuelingNet.fc_value", "network_heads.DuelingNet.fc_advantage", "dict", "tensor", "network_heads.DuelingNet.expand_as", "network_heads.DuelingNet.mean().expand_as", "network_heads.DuelingNet.mean"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "forward", "(", "self", ",", "x", ",", "to_numpy", "=", "False", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "value", "=", "self", ".", "fc_value", "(", "phi", ")", "\n", "advantange", "=", "self", ".", "fc_advantage", "(", "phi", ")", "\n", "q", "=", "value", ".", "expand_as", "(", "advantange", ")", "+", "(", "advantange", "-", "advantange", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", ".", "expand_as", "(", "advantange", ")", ")", "\n", "return", "dict", "(", "q", "=", "q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.CategoricalNet.__init__": [[41, 48], ["super().__init__", "network_utils.layer_init", "network_heads.CategoricalNet.to", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "action_dim", ",", "num_atoms", ",", "body", ")", ":", "\n", "        ", "super", "(", "CategoricalNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_categorical", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "action_dim", "*", "num_atoms", ")", ")", "\n", "self", ".", "action_dim", "=", "action_dim", "\n", "self", ".", "num_atoms", "=", "num_atoms", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.CategoricalNet.forward": [[49, 55], ["network_heads.CategoricalNet.body", "network_heads.CategoricalNet.fc_categorical().view", "F.softmax", "F.log_softmax", "dict", "tensor", "network_heads.CategoricalNet.fc_categorical"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "pre_prob", "=", "self", ".", "fc_categorical", "(", "phi", ")", ".", "view", "(", "(", "-", "1", ",", "self", ".", "action_dim", ",", "self", ".", "num_atoms", ")", ")", "\n", "prob", "=", "F", ".", "softmax", "(", "pre_prob", ",", "dim", "=", "-", "1", ")", "\n", "log_prob", "=", "F", ".", "log_softmax", "(", "pre_prob", ",", "dim", "=", "-", "1", ")", "\n", "return", "dict", "(", "prob", "=", "prob", ",", "log_prob", "=", "log_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.RainbowNet.__init__": [[58, 72], ["super().__init__", "network_heads.RainbowNet.to", "network_utils.NoisyLinear", "network_utils.NoisyLinear", "network_utils.layer_init", "network_utils.layer_init", "nn.Linear", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "action_dim", ",", "num_atoms", ",", "body", ",", "noisy_linear", ")", ":", "\n", "        ", "super", "(", "RainbowNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "noisy_linear", ":", "\n", "            ", "self", ".", "fc_value", "=", "NoisyLinear", "(", "body", ".", "feature_dim", ",", "num_atoms", ")", "\n", "self", ".", "fc_advantage", "=", "NoisyLinear", "(", "body", ".", "feature_dim", ",", "action_dim", "*", "num_atoms", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc_value", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "num_atoms", ")", ")", "\n", "self", ".", "fc_advantage", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "action_dim", "*", "num_atoms", ")", ")", "\n", "\n", "", "self", ".", "action_dim", "=", "action_dim", "\n", "self", ".", "num_atoms", "=", "num_atoms", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "noisy_linear", "=", "noisy_linear", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.RainbowNet.reset_noise": [[73, 78], ["network_heads.RainbowNet.fc_value.reset_noise", "network_heads.RainbowNet.fc_advantage.reset_noise", "network_heads.RainbowNet.body.reset_noise"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise"], ["", "def", "reset_noise", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "noisy_linear", ":", "\n", "            ", "self", ".", "fc_value", ".", "reset_noise", "(", ")", "\n", "self", ".", "fc_advantage", ".", "reset_noise", "(", ")", "\n", "self", ".", "body", ".", "reset_noise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.RainbowNet.forward": [[79, 87], ["network_heads.RainbowNet.body", "network_heads.RainbowNet.fc_value().view", "network_heads.RainbowNet.fc_advantage().view", "F.softmax", "F.log_softmax", "dict", "tensor", "network_heads.RainbowNet.fc_value", "network_heads.RainbowNet.fc_advantage", "network_heads.RainbowNet.mean"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "value", "=", "self", ".", "fc_value", "(", "phi", ")", ".", "view", "(", "(", "-", "1", ",", "1", ",", "self", ".", "num_atoms", ")", ")", "\n", "advantage", "=", "self", ".", "fc_advantage", "(", "phi", ")", ".", "view", "(", "-", "1", ",", "self", ".", "action_dim", ",", "self", ".", "num_atoms", ")", "\n", "q", "=", "value", "+", "(", "advantage", "-", "advantage", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "prob", "=", "F", ".", "softmax", "(", "q", ",", "dim", "=", "-", "1", ")", "\n", "log_prob", "=", "F", ".", "log_softmax", "(", "q", ",", "dim", "=", "-", "1", ")", "\n", "return", "dict", "(", "prob", "=", "prob", ",", "log_prob", "=", "log_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.QuantileNet.__init__": [[90, 97], ["super().__init__", "network_utils.layer_init", "network_heads.QuantileNet.to", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "action_dim", ",", "num_quantiles", ",", "body", ")", ":", "\n", "        ", "super", "(", "QuantileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_quantiles", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "action_dim", "*", "num_quantiles", ")", ")", "\n", "self", ".", "action_dim", "=", "action_dim", "\n", "self", ".", "num_quantiles", "=", "num_quantiles", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.QuantileNet.forward": [[98, 103], ["network_heads.QuantileNet.body", "network_heads.QuantileNet.fc_quantiles", "quantiles.view.view.view", "dict", "tensor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "quantiles", "=", "self", ".", "fc_quantiles", "(", "phi", ")", "\n", "quantiles", "=", "quantiles", ".", "view", "(", "(", "-", "1", ",", "self", ".", "action_dim", ",", "self", ".", "num_quantiles", ")", ")", "\n", "return", "dict", "(", "quantile", "=", "quantiles", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.OptionCriticNet.__init__": [[106, 115], ["super().__init__", "network_utils.layer_init", "network_utils.layer_init", "network_utils.layer_init", "network_heads.OptionCriticNet.to", "nn.Linear", "nn.Linear", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "body", ",", "action_dim", ",", "num_options", ")", ":", "\n", "        ", "super", "(", "OptionCriticNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_q", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "num_options", ")", ")", "\n", "self", ".", "fc_pi", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "num_options", "*", "action_dim", ")", ")", "\n", "self", ".", "fc_beta", "=", "layer_init", "(", "nn", ".", "Linear", "(", "body", ".", "feature_dim", ",", "num_options", ")", ")", "\n", "self", ".", "num_options", "=", "num_options", "\n", "self", ".", "action_dim", "=", "action_dim", "\n", "self", ".", "body", "=", "body", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.OptionCriticNet.forward": [[116, 128], ["network_heads.OptionCriticNet.body", "network_heads.OptionCriticNet.fc_q", "F.sigmoid", "network_heads.OptionCriticNet.fc_pi", "F.softmax.view", "F.log_softmax", "F.softmax", "tensor", "network_heads.OptionCriticNet.fc_beta"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "phi", "=", "self", ".", "body", "(", "tensor", "(", "x", ")", ")", "\n", "q", "=", "self", ".", "fc_q", "(", "phi", ")", "\n", "beta", "=", "F", ".", "sigmoid", "(", "self", ".", "fc_beta", "(", "phi", ")", ")", "\n", "pi", "=", "self", ".", "fc_pi", "(", "phi", ")", "\n", "pi", "=", "pi", ".", "view", "(", "-", "1", ",", "self", ".", "num_options", ",", "self", ".", "action_dim", ")", "\n", "log_pi", "=", "F", ".", "log_softmax", "(", "pi", ",", "dim", "=", "-", "1", ")", "\n", "pi", "=", "F", ".", "softmax", "(", "pi", ",", "dim", "=", "-", "1", ")", "\n", "return", "{", "'q'", ":", "q", ",", "\n", "'beta'", ":", "beta", ",", "\n", "'log_pi'", ":", "log_pi", ",", "\n", "'pi'", ":", "pi", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.__init__": [[131, 156], ["super().__init__", "network_utils.layer_init", "network_utils.layer_init", "list", "actor_opt_fn", "critic_opt_fn", "network_heads.DeterministicActorCriticNet.to", "network_bodies.DummyBody", "network_bodies.DummyBody", "network_bodies.DummyBody", "nn.Linear", "nn.Linear", "list", "list", "list", "list", "network_heads.DeterministicActorCriticNet.phi_body.parameters", "network_heads.DeterministicActorCriticNet.actor_body.parameters", "network_heads.DeterministicActorCriticNet.fc_action.parameters", "network_heads.DeterministicActorCriticNet.critic_body.parameters", "network_heads.DeterministicActorCriticNet.fc_critic.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "\n", "state_dim", ",", "\n", "action_dim", ",", "\n", "actor_opt_fn", ",", "\n", "critic_opt_fn", ",", "\n", "phi_body", "=", "None", ",", "\n", "actor_body", "=", "None", ",", "\n", "critic_body", "=", "None", ")", ":", "\n", "        ", "super", "(", "DeterministicActorCriticNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "phi_body", "is", "None", ":", "phi_body", "=", "DummyBody", "(", "state_dim", ")", "\n", "if", "actor_body", "is", "None", ":", "actor_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "if", "critic_body", "is", "None", ":", "critic_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "self", ".", "phi_body", "=", "phi_body", "\n", "self", ".", "actor_body", "=", "actor_body", "\n", "self", ".", "critic_body", "=", "critic_body", "\n", "self", ".", "fc_action", "=", "layer_init", "(", "nn", ".", "Linear", "(", "actor_body", ".", "feature_dim", ",", "action_dim", ")", ",", "1e-3", ")", "\n", "self", ".", "fc_critic", "=", "layer_init", "(", "nn", ".", "Linear", "(", "critic_body", ".", "feature_dim", ",", "1", ")", ",", "1e-3", ")", "\n", "\n", "self", ".", "actor_params", "=", "list", "(", "self", ".", "actor_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_action", ".", "parameters", "(", ")", ")", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_critic", ".", "parameters", "(", ")", ")", "\n", "self", ".", "phi_params", "=", "list", "(", "self", ".", "phi_body", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor_opt", "=", "actor_opt_fn", "(", "self", ".", "actor_params", "+", "self", ".", "phi_params", ")", "\n", "self", ".", "critic_opt", "=", "critic_opt_fn", "(", "self", ".", "critic_params", "+", "self", ".", "phi_params", ")", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.forward": [[157, 161], ["network_heads.DeterministicActorCriticNet.feature", "network_heads.DeterministicActorCriticNet.actor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.feature", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.actor"], ["", "def", "forward", "(", "self", ",", "obs", ")", ":", "\n", "        ", "phi", "=", "self", ".", "feature", "(", "obs", ")", "\n", "action", "=", "self", ".", "actor", "(", "phi", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.feature": [[162, 165], ["tensor", "network_heads.DeterministicActorCriticNet.phi_body"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "feature", "(", "self", ",", "obs", ")", ":", "\n", "        ", "obs", "=", "tensor", "(", "obs", ")", "\n", "return", "self", ".", "phi_body", "(", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.actor": [[166, 168], ["torch.tanh", "network_heads.DeterministicActorCriticNet.fc_action", "network_heads.DeterministicActorCriticNet.actor_body"], "methods", ["None"], ["", "def", "actor", "(", "self", ",", "phi", ")", ":", "\n", "        ", "return", "torch", ".", "tanh", "(", "self", ".", "fc_action", "(", "self", ".", "actor_body", "(", "phi", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.critic": [[169, 171], ["network_heads.DeterministicActorCriticNet.fc_critic", "network_heads.DeterministicActorCriticNet.critic_body", "torch.cat"], "methods", ["None"], ["", "def", "critic", "(", "self", ",", "phi", ",", "a", ")", ":", "\n", "        ", "return", "self", ".", "fc_critic", "(", "self", ".", "critic_body", "(", "torch", ".", "cat", "(", "[", "phi", ",", "a", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.GaussianActorCriticNet.__init__": [[174, 197], ["super().__init__", "network_utils.layer_init", "network_utils.layer_init", "nn.Parameter", "list", "network_heads.GaussianActorCriticNet.actor_params.append", "network_heads.GaussianActorCriticNet.to", "network_bodies.DummyBody", "network_bodies.DummyBody", "network_bodies.DummyBody", "nn.Linear", "nn.Linear", "torch.zeros", "network_heads.GaussianActorCriticNet.phi_body.parameters", "list", "list", "list", "list", "network_heads.GaussianActorCriticNet.actor_body.parameters", "network_heads.GaussianActorCriticNet.fc_action.parameters", "network_heads.GaussianActorCriticNet.critic_body.parameters", "network_heads.GaussianActorCriticNet.fc_critic.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "\n", "state_dim", ",", "\n", "action_dim", ",", "\n", "phi_body", "=", "None", ",", "\n", "actor_body", "=", "None", ",", "\n", "critic_body", "=", "None", ")", ":", "\n", "        ", "super", "(", "GaussianActorCriticNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "phi_body", "is", "None", ":", "phi_body", "=", "DummyBody", "(", "state_dim", ")", "\n", "if", "actor_body", "is", "None", ":", "actor_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "if", "critic_body", "is", "None", ":", "critic_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "self", ".", "phi_body", "=", "phi_body", "\n", "self", ".", "actor_body", "=", "actor_body", "\n", "self", ".", "critic_body", "=", "critic_body", "\n", "self", ".", "fc_action", "=", "layer_init", "(", "nn", ".", "Linear", "(", "actor_body", ".", "feature_dim", ",", "action_dim", ")", ",", "1e-3", ")", "\n", "self", ".", "fc_critic", "=", "layer_init", "(", "nn", ".", "Linear", "(", "critic_body", ".", "feature_dim", ",", "1", ")", ",", "1e-3", ")", "\n", "self", ".", "std", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "action_dim", ")", ")", "\n", "self", ".", "phi_params", "=", "list", "(", "self", ".", "phi_body", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor_params", "=", "list", "(", "self", ".", "actor_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_action", ".", "parameters", "(", ")", ")", "+", "self", ".", "phi_params", "\n", "self", ".", "actor_params", ".", "append", "(", "self", ".", "std", ")", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_critic", ".", "parameters", "(", ")", ")", "+", "self", ".", "phi_params", "\n", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.GaussianActorCriticNet.forward": [[198, 215], ["tensor", "network_heads.GaussianActorCriticNet.phi_body", "network_heads.GaussianActorCriticNet.actor_body", "network_heads.GaussianActorCriticNet.critic_body", "torch.tanh", "network_heads.GaussianActorCriticNet.fc_critic", "torch.distributions.Normal", "torch.distributions.Normal.log_prob().sum().unsqueeze", "torch.distributions.Normal.entropy().sum().unsqueeze", "network_heads.GaussianActorCriticNet.fc_action", "F.softplus", "torch.distributions.Normal.sample", "torch.distributions.Normal.log_prob().sum", "torch.distributions.Normal.entropy().sum", "torch.distributions.Normal.log_prob", "torch.distributions.Normal.entropy"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.log_prob", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy"], ["", "def", "forward", "(", "self", ",", "obs", ",", "action", "=", "None", ")", ":", "\n", "        ", "obs", "=", "tensor", "(", "obs", ")", "\n", "phi", "=", "self", ".", "phi_body", "(", "obs", ")", "\n", "phi_a", "=", "self", ".", "actor_body", "(", "phi", ")", "\n", "phi_v", "=", "self", ".", "critic_body", "(", "phi", ")", "\n", "mean", "=", "torch", ".", "tanh", "(", "self", ".", "fc_action", "(", "phi_a", ")", ")", "\n", "v", "=", "self", ".", "fc_critic", "(", "phi_v", ")", "\n", "dist", "=", "torch", ".", "distributions", ".", "Normal", "(", "mean", ",", "F", ".", "softplus", "(", "self", ".", "std", ")", ")", "\n", "if", "action", "is", "None", ":", "\n", "            ", "action", "=", "dist", ".", "sample", "(", ")", "\n", "", "log_prob", "=", "dist", ".", "log_prob", "(", "action", ")", ".", "sum", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "entropy", "=", "dist", ".", "entropy", "(", ")", ".", "sum", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "{", "'action'", ":", "action", ",", "\n", "'log_pi_a'", ":", "log_prob", ",", "\n", "'entropy'", ":", "entropy", ",", "\n", "'mean'", ":", "mean", ",", "\n", "'v'", ":", "v", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.CategoricalActorCriticNet.__init__": [[218, 239], ["super().__init__", "network_utils.layer_init", "network_utils.layer_init", "list", "network_heads.CategoricalActorCriticNet.to", "network_bodies.DummyBody", "network_bodies.DummyBody", "network_bodies.DummyBody", "nn.Linear", "nn.Linear", "list", "list", "list", "list", "network_heads.CategoricalActorCriticNet.phi_body.parameters", "network_heads.CategoricalActorCriticNet.actor_body.parameters", "network_heads.CategoricalActorCriticNet.fc_action.parameters", "network_heads.CategoricalActorCriticNet.critic_body.parameters", "network_heads.CategoricalActorCriticNet.fc_critic.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "\n", "state_dim", ",", "\n", "action_dim", ",", "\n", "phi_body", "=", "None", ",", "\n", "actor_body", "=", "None", ",", "\n", "critic_body", "=", "None", ")", ":", "\n", "        ", "super", "(", "CategoricalActorCriticNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "phi_body", "is", "None", ":", "phi_body", "=", "DummyBody", "(", "state_dim", ")", "\n", "if", "actor_body", "is", "None", ":", "actor_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "if", "critic_body", "is", "None", ":", "critic_body", "=", "DummyBody", "(", "phi_body", ".", "feature_dim", ")", "\n", "self", ".", "phi_body", "=", "phi_body", "\n", "self", ".", "actor_body", "=", "actor_body", "\n", "self", ".", "critic_body", "=", "critic_body", "\n", "self", ".", "fc_action", "=", "layer_init", "(", "nn", ".", "Linear", "(", "actor_body", ".", "feature_dim", ",", "action_dim", ")", ",", "1e-3", ")", "\n", "self", ".", "fc_critic", "=", "layer_init", "(", "nn", ".", "Linear", "(", "critic_body", ".", "feature_dim", ",", "1", ")", ",", "1e-3", ")", "\n", "\n", "self", ".", "actor_params", "=", "list", "(", "self", ".", "actor_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_action", ".", "parameters", "(", ")", ")", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_critic", ".", "parameters", "(", ")", ")", "\n", "self", ".", "phi_params", "=", "list", "(", "self", ".", "phi_body", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.CategoricalActorCriticNet.forward": [[240, 256], ["tensor", "network_heads.CategoricalActorCriticNet.phi_body", "network_heads.CategoricalActorCriticNet.actor_body", "network_heads.CategoricalActorCriticNet.critic_body", "network_heads.CategoricalActorCriticNet.fc_action", "network_heads.CategoricalActorCriticNet.fc_critic", "torch.distributions.Categorical", "torch.distributions.Categorical.log_prob().unsqueeze", "torch.distributions.Categorical.entropy().unsqueeze", "torch.distributions.Categorical.sample", "torch.distributions.Categorical.log_prob", "torch.distributions.Categorical.entropy"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.log_prob", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy"], ["", "def", "forward", "(", "self", ",", "obs", ",", "action", "=", "None", ")", ":", "\n", "        ", "obs", "=", "tensor", "(", "obs", ")", "\n", "phi", "=", "self", ".", "phi_body", "(", "obs", ")", "\n", "phi_a", "=", "self", ".", "actor_body", "(", "phi", ")", "\n", "phi_v", "=", "self", ".", "critic_body", "(", "phi", ")", "\n", "logits", "=", "self", ".", "fc_action", "(", "phi_a", ")", "\n", "v", "=", "self", ".", "fc_critic", "(", "phi_v", ")", "\n", "dist", "=", "torch", ".", "distributions", ".", "Categorical", "(", "logits", "=", "logits", ")", "\n", "if", "action", "is", "None", ":", "\n", "            ", "action", "=", "dist", ".", "sample", "(", ")", "\n", "", "log_prob", "=", "dist", ".", "log_prob", "(", "action", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "entropy", "=", "dist", ".", "entropy", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "{", "'action'", ":", "action", ",", "\n", "'log_pi_a'", ":", "log_prob", ",", "\n", "'entropy'", ":", "entropy", ",", "\n", "'v'", ":", "v", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.__init__": [[259, 282], ["super().__init__", "actor_body_fn", "critic_body_fn", "critic_body_fn", "network_utils.layer_init", "network_utils.layer_init", "network_utils.layer_init", "actor_opt_fn", "critic_opt_fn", "network_heads.TD3Net.to", "nn.Linear", "nn.Linear", "nn.Linear", "list", "list", "list", "network_heads.TD3Net.actor_body.parameters", "network_heads.TD3Net.fc_action.parameters", "list", "network_heads.TD3Net.fc_critic_2.parameters", "list", "list", "network_heads.TD3Net.critic_body_2.parameters", "network_heads.TD3Net.critic_body_1.parameters", "network_heads.TD3Net.fc_critic_1.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "\n", "action_dim", ",", "\n", "actor_body_fn", ",", "\n", "critic_body_fn", ",", "\n", "actor_opt_fn", ",", "\n", "critic_opt_fn", ",", "\n", ")", ":", "\n", "        ", "super", "(", "TD3Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "actor_body", "=", "actor_body_fn", "(", ")", "\n", "self", ".", "critic_body_1", "=", "critic_body_fn", "(", ")", "\n", "self", ".", "critic_body_2", "=", "critic_body_fn", "(", ")", "\n", "\n", "self", ".", "fc_action", "=", "layer_init", "(", "nn", ".", "Linear", "(", "self", ".", "actor_body", ".", "feature_dim", ",", "action_dim", ")", ",", "1e-3", ")", "\n", "self", ".", "fc_critic_1", "=", "layer_init", "(", "nn", ".", "Linear", "(", "self", ".", "critic_body_1", ".", "feature_dim", ",", "1", ")", ",", "1e-3", ")", "\n", "self", ".", "fc_critic_2", "=", "layer_init", "(", "nn", ".", "Linear", "(", "self", ".", "critic_body_2", ".", "feature_dim", ",", "1", ")", ",", "1e-3", ")", "\n", "\n", "self", ".", "actor_params", "=", "list", "(", "self", ".", "actor_body", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_action", ".", "parameters", "(", ")", ")", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic_body_1", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_critic_1", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "critic_body_2", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "fc_critic_2", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor_opt", "=", "actor_opt_fn", "(", "self", ".", "actor_params", ")", "\n", "self", ".", "critic_opt", "=", "critic_opt_fn", "(", "self", ".", "critic_params", ")", "\n", "self", ".", "to", "(", "Config", ".", "DEVICE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.forward": [[283, 286], ["tensor", "torch.tanh", "network_heads.TD3Net.fc_action", "network_heads.TD3Net.actor_body"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "forward", "(", "self", ",", "obs", ")", ":", "\n", "        ", "obs", "=", "tensor", "(", "obs", ")", "\n", "return", "torch", ".", "tanh", "(", "self", ".", "fc_action", "(", "self", ".", "actor_body", "(", "obs", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.q": [[287, 294], ["tensor", "tensor", "torch.cat", "network_heads.TD3Net.fc_critic_1", "network_heads.TD3Net.fc_critic_2", "network_heads.TD3Net.critic_body_1", "network_heads.TD3Net.critic_body_2"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "q", "(", "self", ",", "obs", ",", "a", ")", ":", "\n", "        ", "obs", "=", "tensor", "(", "obs", ")", "\n", "a", "=", "tensor", "(", "a", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "obs", ",", "a", "]", ",", "dim", "=", "1", ")", "\n", "q_1", "=", "self", ".", "fc_critic_1", "(", "self", ".", "critic_body_1", "(", "x", ")", ")", "\n", "q_2", "=", "self", ".", "fc_critic_2", "(", "self", ".", "critic_body_2", "(", "x", ")", ")", "\n", "return", "q_1", ",", "q_2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.BaseNet.__init__": [[16, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.BaseNet.reset_noise": [[19, 21], ["None"], "methods", ["None"], ["", "def", "reset_noise", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.__init__": [[32, 53], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "network_utils.NoisyLinear.register_buffer", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "network_utils.NoisyLinear.register_buffer", "network_utils.NoisyLinear.register_buffer", "network_utils.NoisyLinear.register_buffer", "network_utils.NoisyLinear.register_buffer", "network_utils.NoisyLinear.reset_parameters", "network_utils.NoisyLinear.reset_noise", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.reset_parameters", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "std_init", "=", "0.4", ")", ":", "\n", "        ", "super", "(", "NoisyLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "std_init", "=", "std_init", "\n", "\n", "self", ".", "weight_mu", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "out_features", ",", "in_features", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "weight_sigma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "out_features", ",", "in_features", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "register_buffer", "(", "'weight_epsilon'", ",", "torch", ".", "zeros", "(", "(", "out_features", ",", "in_features", ")", ")", ")", "\n", "\n", "self", ".", "bias_mu", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "out_features", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "bias_sigma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "out_features", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "register_buffer", "(", "'bias_epsilon'", ",", "torch", ".", "zeros", "(", "out_features", ")", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'noise_in'", ",", "torch", ".", "zeros", "(", "in_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'noise_out_weight'", ",", "torch", ".", "zeros", "(", "out_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'noise_out_bias'", ",", "torch", ".", "zeros", "(", "out_features", ")", ")", "\n", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "self", ".", "reset_noise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.forward": [[54, 63], ["torch.linear", "torch.linear", "torch.linear", "network_utils.NoisyLinear.weight_sigma.mul", "network_utils.NoisyLinear.bias_sigma.mul"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "weight", "=", "self", ".", "weight_mu", "+", "self", ".", "weight_sigma", ".", "mul", "(", "self", ".", "weight_epsilon", ")", "\n", "bias", "=", "self", ".", "bias_mu", "+", "self", ".", "bias_sigma", ".", "mul", "(", "self", ".", "bias_epsilon", ")", "\n", "", "else", ":", "\n", "            ", "weight", "=", "self", ".", "weight_mu", "\n", "bias", "=", "self", ".", "bias_mu", "\n", "\n", "", "return", "F", ".", "linear", "(", "x", ",", "weight", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.reset_parameters": [[64, 72], ["network_utils.NoisyLinear.weight_mu.data.uniform_", "network_utils.NoisyLinear.weight_sigma.data.fill_", "network_utils.NoisyLinear.bias_mu.data.uniform_", "network_utils.NoisyLinear.bias_sigma.data.fill_", "math.sqrt", "network_utils.NoisyLinear.weight_mu.size", "math.sqrt", "math.sqrt", "network_utils.NoisyLinear.weight_sigma.size", "network_utils.NoisyLinear.bias_sigma.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "mu_range", "=", "1", "/", "math", ".", "sqrt", "(", "self", ".", "weight_mu", ".", "size", "(", "1", ")", ")", "\n", "\n", "self", ".", "weight_mu", ".", "data", ".", "uniform_", "(", "-", "mu_range", ",", "mu_range", ")", "\n", "self", ".", "weight_sigma", ".", "data", ".", "fill_", "(", "self", ".", "std_init", "/", "math", ".", "sqrt", "(", "self", ".", "weight_sigma", ".", "size", "(", "1", ")", ")", ")", "\n", "\n", "self", ".", "bias_mu", ".", "data", ".", "uniform_", "(", "-", "mu_range", ",", "mu_range", ")", "\n", "self", ".", "bias_sigma", ".", "data", ".", "fill_", "(", "self", ".", "std_init", "/", "math", ".", "sqrt", "(", "self", ".", "bias_sigma", ".", "size", "(", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.reset_noise": [[73, 81], ["network_utils.NoisyLinear.noise_in.normal_", "network_utils.NoisyLinear.noise_out_weight.normal_", "network_utils.NoisyLinear.noise_out_bias.normal_", "network_utils.NoisyLinear.weight_epsilon.copy_", "network_utils.NoisyLinear.bias_epsilon.copy_", "network_utils.NoisyLinear.transform_noise().ger", "network_utils.NoisyLinear.transform_noise", "network_utils.NoisyLinear.transform_noise", "network_utils.NoisyLinear.transform_noise"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.transform_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.transform_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.transform_noise"], ["", "def", "reset_noise", "(", "self", ")", ":", "\n", "        ", "self", ".", "noise_in", ".", "normal_", "(", "std", "=", "Config", ".", "NOISY_LAYER_STD", ")", "\n", "self", ".", "noise_out_weight", ".", "normal_", "(", "std", "=", "Config", ".", "NOISY_LAYER_STD", ")", "\n", "self", ".", "noise_out_bias", ".", "normal_", "(", "std", "=", "Config", ".", "NOISY_LAYER_STD", ")", "\n", "\n", "self", ".", "weight_epsilon", ".", "copy_", "(", "self", ".", "transform_noise", "(", "self", ".", "noise_out_weight", ")", ".", "ger", "(", "\n", "self", ".", "transform_noise", "(", "self", ".", "noise_in", ")", ")", ")", "\n", "self", ".", "bias_epsilon", ".", "copy_", "(", "self", ".", "transform_noise", "(", "self", ".", "noise_out_bias", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.NoisyLinear.transform_noise": [[82, 84], ["x.sign().mul", "x.abs().sqrt", "x.sign", "x.abs"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "transform_noise", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "sign", "(", ")", ".", "mul", "(", "x", ".", "abs", "(", ")", ".", "sqrt", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init": [[23, 28], ["torch.init.orthogonal_", "layer.weight.data.mul_", "torch.init.constant_"], "function", ["None"], ["", "", "def", "layer_init", "(", "layer", ",", "w_scale", "=", "1.0", ")", ":", "\n", "    ", "nn", ".", "init", ".", "orthogonal_", "(", "layer", ".", "weight", ".", "data", ")", "\n", "layer", ".", "weight", ".", "data", ".", "mul_", "(", "w_scale", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "layer", ".", "bias", ".", "data", ",", "0", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.NatureConvBody.__init__": [[11, 22], ["nn.Module.__init__", "network_utils.layer_init", "network_utils.layer_init", "network_utils.layer_init", "nn.Conv2d", "nn.Conv2d", "nn.Conv2d", "network_utils.NoisyLinear", "network_utils.layer_init", "nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "4", ",", "noisy_linear", "=", "False", ")", ":", "\n", "        ", "super", "(", "NatureConvBody", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_dim", "=", "512", "\n", "self", ".", "conv1", "=", "layer_init", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "32", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ")", ")", "\n", "self", ".", "conv2", "=", "layer_init", "(", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "self", ".", "conv3", "=", "layer_init", "(", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ")", "\n", "if", "noisy_linear", ":", "\n", "            ", "self", ".", "fc4", "=", "NoisyLinear", "(", "7", "*", "7", "*", "64", ",", "self", ".", "feature_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc4", "=", "layer_init", "(", "nn", ".", "Linear", "(", "7", "*", "7", "*", "64", ",", "self", ".", "feature_dim", ")", ")", "\n", "", "self", ".", "noisy_linear", "=", "noisy_linear", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.NatureConvBody.reset_noise": [[23, 26], ["network_bodies.NatureConvBody.fc4.reset_noise"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise"], ["", "def", "reset_noise", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "noisy_linear", ":", "\n", "            ", "self", ".", "fc4", ".", "reset_noise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.NatureConvBody.forward": [[27, 34], ["F.relu", "F.relu", "F.relu", "F.relu.view", "F.relu", "network_bodies.NatureConvBody.conv1", "network_bodies.NatureConvBody.conv2", "network_bodies.NatureConvBody.conv3", "F.relu.size", "network_bodies.NatureConvBody.fc4"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "y", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "y", ")", ")", "\n", "y", "=", "F", ".", "relu", "(", "self", ".", "conv3", "(", "y", ")", ")", "\n", "y", "=", "y", ".", "view", "(", "y", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y", "=", "F", ".", "relu", "(", "self", ".", "fc4", "(", "y", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.DDPGConvBody.__init__": [[37, 42], ["nn.Module.__init__", "network_utils.layer_init", "network_utils.layer_init", "nn.Conv2d", "nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "4", ")", ":", "\n", "        ", "super", "(", "DDPGConvBody", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_dim", "=", "39", "*", "39", "*", "32", "\n", "self", ".", "conv1", "=", "layer_init", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ")", "\n", "self", ".", "conv2", "=", "layer_init", "(", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.DDPGConvBody.forward": [[43, 48], ["F.elu", "F.elu", "y.view.view.view", "network_bodies.DDPGConvBody.conv1", "network_bodies.DDPGConvBody.conv2", "y.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "F", ".", "elu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "y", "=", "F", ".", "elu", "(", "self", ".", "conv2", "(", "y", ")", ")", "\n", "y", "=", "y", ".", "view", "(", "y", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.__init__": [[51, 64], ["nn.Module.__init__", "nn.ModuleList", "nn.ModuleList", "network_utils.NoisyLinear", "network_utils.layer_init", "zip", "nn.Linear", "zip"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_utils.layer_init"], ["    ", "def", "__init__", "(", "self", ",", "state_dim", ",", "hidden_units", "=", "(", "64", ",", "64", ")", ",", "gate", "=", "F", ".", "relu", ",", "noisy_linear", "=", "False", ")", ":", "\n", "        ", "super", "(", "FCBody", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dims", "=", "(", "state_dim", ",", ")", "+", "hidden_units", "\n", "if", "noisy_linear", ":", "\n", "            ", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "\n", "[", "NoisyLinear", "(", "dim_in", ",", "dim_out", ")", "for", "dim_in", ",", "dim_out", "in", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "\n", "[", "layer_init", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ")", "for", "dim_in", ",", "dim_out", "in", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ")", "]", ")", "\n", "\n", "", "self", ".", "gate", "=", "gate", "\n", "self", ".", "feature_dim", "=", "dims", "[", "-", "1", "]", "\n", "self", ".", "noisy_linear", "=", "noisy_linear", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise": [[65, 69], ["layer.reset_noise"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise"], ["", "def", "reset_noise", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "noisy_linear", ":", "\n", "            ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "                ", "layer", ".", "reset_noise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.forward": [[70, 74], ["network_bodies.FCBody.gate", "layer"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "self", ".", "gate", "(", "layer", "(", "x", ")", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.DummyBody.__init__": [[77, 80], ["nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "state_dim", ")", ":", "\n", "        ", "super", "(", "DummyBody", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_dim", "=", "state_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.DummyBody.forward": [[81, 83], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.A2C_agent.A2CAgent.__init__": [[13, 21], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "config.optimizer_fn", "A2C_agent.A2CAgent.task.reset", "A2C_agent.A2CAgent.network.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "states", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.A2C_agent.A2CAgent.step": [[22, 65], ["Storage", "range", "A2C_agent.A2CAgent.network", "Storage.feed", "Storage.placeholder", "tensor", "prediction[].detach", "reversed", "Storage.extract", "Storage.extract.entropy.mean", "A2C_agent.A2CAgent.optimizer.zero_grad", "nn.utils.clip_grad_norm_", "A2C_agent.A2CAgent.optimizer.step", "A2C_agent.A2CAgent.network", "A2C_agent.A2CAgent.task.step", "A2C_agent.A2CAgent.record_online_return", "config.reward_normalizer", "Storage.feed", "Storage.feed", "config.state_normalizer", "np.zeros", "range", "tensor.detach", "prediction[].detach.detach", "A2C_agent.A2CAgent.network.parameters", "config.state_normalizer", "to_np", "tensor().unsqueeze", "tensor().unsqueeze", "Storage.v[].detach", "tensor", "tensor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "storage", "=", "Storage", "(", "config", ".", "rollout_length", ")", "\n", "states", "=", "self", ".", "states", "\n", "for", "_", "in", "range", "(", "config", ".", "rollout_length", ")", ":", "\n", "            ", "prediction", "=", "self", ".", "network", "(", "config", ".", "state_normalizer", "(", "states", ")", ")", "\n", "next_states", ",", "rewards", ",", "terminals", ",", "info", "=", "self", ".", "task", ".", "step", "(", "to_np", "(", "prediction", "[", "'action'", "]", ")", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "rewards", "=", "config", ".", "reward_normalizer", "(", "rewards", ")", "\n", "storage", ".", "feed", "(", "prediction", ")", "\n", "storage", ".", "feed", "(", "{", "'reward'", ":", "tensor", "(", "rewards", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'mask'", ":", "tensor", "(", "1", "-", "terminals", ")", ".", "unsqueeze", "(", "-", "1", ")", "}", ")", "\n", "\n", "states", "=", "next_states", "\n", "self", ".", "total_steps", "+=", "config", ".", "num_workers", "\n", "\n", "", "self", ".", "states", "=", "states", "\n", "prediction", "=", "self", ".", "network", "(", "config", ".", "state_normalizer", "(", "states", ")", ")", "\n", "storage", ".", "feed", "(", "prediction", ")", "\n", "storage", ".", "placeholder", "(", ")", "\n", "\n", "advantages", "=", "tensor", "(", "np", ".", "zeros", "(", "(", "config", ".", "num_workers", ",", "1", ")", ")", ")", "\n", "returns", "=", "prediction", "[", "'v'", "]", ".", "detach", "(", ")", "\n", "for", "i", "in", "reversed", "(", "range", "(", "config", ".", "rollout_length", ")", ")", ":", "\n", "            ", "returns", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "returns", "\n", "if", "not", "config", ".", "use_gae", ":", "\n", "                ", "advantages", "=", "returns", "-", "storage", ".", "v", "[", "i", "]", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "                ", "td_error", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "storage", ".", "v", "[", "i", "+", "1", "]", "-", "storage", ".", "v", "[", "i", "]", "\n", "advantages", "=", "advantages", "*", "config", ".", "gae_tau", "*", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "+", "td_error", "\n", "", "storage", ".", "advantage", "[", "i", "]", "=", "advantages", ".", "detach", "(", ")", "\n", "storage", ".", "ret", "[", "i", "]", "=", "returns", ".", "detach", "(", ")", "\n", "\n", "", "entries", "=", "storage", ".", "extract", "(", "[", "'log_pi_a'", ",", "'v'", ",", "'ret'", ",", "'advantage'", ",", "'entropy'", "]", ")", "\n", "policy_loss", "=", "-", "(", "entries", ".", "log_pi_a", "*", "entries", ".", "advantage", ")", ".", "mean", "(", ")", "\n", "value_loss", "=", "0.5", "*", "(", "entries", ".", "ret", "-", "entries", ".", "v", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "entropy_loss", "=", "entries", ".", "entropy", ".", "mean", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "(", "policy_loss", "-", "config", ".", "entropy_weight", "*", "entropy_loss", "+", "\n", "config", ".", "value_loss_weight", "*", "value_loss", ")", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "network", ".", "parameters", "(", ")", ",", "config", ".", "gradient_clip", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNActor.__init__": [[15, 19], ["BaseAgent.BaseAgent.BaseActor.__init__", "DQN_agent.DQNActor.start"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseActor", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNActor.compute_q": [[20, 23], ["to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "def", "compute_q", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "q_values", "=", "to_np", "(", "prediction", "[", "'q'", "]", ")", "\n", "return", "q_values", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNActor._transition": [[24, 46], ["DQN_agent.DQNActor.compute_q", "epsilon_greedy", "DQN_agent.DQNActor._task.step", "DQN_agent.DQNActor._task.reset", "DQN_agent.DQNActor._network.reset_noise", "DQN_agent.DQNActor._network", "config.state_normalizer", "config.random_action_prob"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNActor.compute_q", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.epsilon_greedy", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise"], ["", "def", "_transition", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_state", "is", "None", ":", "\n", "            ", "self", ".", "_state", "=", "self", ".", "_task", ".", "reset", "(", ")", "\n", "", "config", "=", "self", ".", "config", "\n", "if", "config", ".", "noisy_linear", ":", "\n", "            ", "self", ".", "_network", ".", "reset_noise", "(", ")", "\n", "", "with", "config", ".", "lock", ":", "\n", "            ", "prediction", "=", "self", ".", "_network", "(", "config", ".", "state_normalizer", "(", "self", ".", "_state", ")", ")", "\n", "", "q_values", "=", "self", ".", "compute_q", "(", "prediction", ")", "\n", "\n", "if", "config", ".", "noisy_linear", ":", "\n", "            ", "epsilon", "=", "0", "\n", "", "elif", "self", ".", "_total_steps", "<", "config", ".", "exploration_steps", ":", "\n", "            ", "epsilon", "=", "1", "\n", "", "else", ":", "\n", "            ", "epsilon", "=", "config", ".", "random_action_prob", "(", ")", "\n", "", "action", "=", "epsilon_greedy", "(", "epsilon", ",", "q_values", ")", "\n", "next_state", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "_task", ".", "step", "(", "action", ")", "\n", "entry", "=", "[", "self", ".", "_state", ",", "action", ",", "reward", ",", "next_state", ",", "done", ",", "info", "]", "\n", "self", ".", "_total_steps", "+=", "1", "\n", "self", ".", "_state", "=", "next_state", "\n", "return", "entry", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.__init__": [[49, 65], ["BaseAgent.BaseAgent.BaseAgent.__init__", "mp.Lock", "config.replay_fn", "DQN_agent.DQNActor", "config.network_fn", "DQN_agent.DQNAgent.network.share_memory", "config.network_fn", "DQN_agent.DQNAgent.target_network.load_state_dict", "config.optimizer_fn", "DQN_agent.DQNAgent.actor.set_network", "DQN_agent.DQNAgent.network.state_dict", "DQN_agent.DQNAgent.network.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.set_network", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "config", ".", "lock", "=", "mp", ".", "Lock", "(", ")", "\n", "\n", "self", ".", "replay", "=", "config", ".", "replay_fn", "(", ")", "\n", "self", ".", "actor", "=", "DQNActor", "(", "config", ")", "\n", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "network", ".", "share_memory", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor", ".", "set_network", "(", "self", ".", "network", ")", "\n", "self", ".", "total_steps", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.close": [[66, 69], ["close_obj", "close_obj"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.close_obj", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.close_obj"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "close_obj", "(", "self", ".", "replay", ")", "\n", "close_obj", "(", "self", ".", "actor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.eval_step": [[70, 77], ["DQN_agent.DQNAgent.config.state_normalizer.set_read_only", "DQN_agent.DQNAgent.config.state_normalizer", "to_np", "DQN_agent.DQNAgent.config.state_normalizer.unset_read_only", "DQN_agent.DQNAgent.network", "q.argmax"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only"], ["", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "config", ".", "state_normalizer", ".", "set_read_only", "(", ")", "\n", "state", "=", "self", ".", "config", ".", "state_normalizer", "(", "state", ")", "\n", "q", "=", "self", ".", "network", "(", "state", ")", "[", "'q'", "]", "\n", "action", "=", "to_np", "(", "q", ".", "argmax", "(", "-", "1", ")", ")", "\n", "self", ".", "config", ".", "state_normalizer", ".", "unset_read_only", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.reduce_loss": [[78, 80], ["loss.pow().mul().mean", "loss.pow().mul", "loss.pow"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "reduce_loss", "(", "self", ",", "loss", ")", ":", "\n", "        ", "return", "loss", ".", "pow", "(", "2", ")", ".", "mul", "(", "0.5", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.compute_loss": [[81, 100], ["DQN_agent.DQNAgent.config.state_normalizer", "DQN_agent.DQNAgent.config.state_normalizer", "tensor", "tensor", "tensor().long", "q.gather().squeeze.gather().squeeze.gather().squeeze", "torch.no_grad", "[].detach", "DQN_agent.DQNAgent.network", "torch.argmax", "q_next.gather().squeeze.gather().squeeze.gather().squeeze", "tensor", "q.gather().squeeze.gather().squeeze.gather", "q_next.gather().squeeze.gather().squeeze.max", "tensor().long.unsqueeze", "DQN_agent.DQNAgent.target_network", "DQN_agent.DQNAgent.network", "q_next.gather().squeeze.gather().squeeze.gather", "torch.argmax.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "compute_loss", "(", "self", ",", "transitions", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "state", ")", "\n", "next_states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "next_state", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "q_next", "=", "self", ".", "target_network", "(", "next_states", ")", "[", "'q'", "]", ".", "detach", "(", ")", "\n", "if", "self", ".", "config", ".", "double_q", ":", "\n", "                ", "best_actions", "=", "torch", ".", "argmax", "(", "self", ".", "network", "(", "next_states", ")", "[", "'q'", "]", ",", "dim", "=", "-", "1", ")", "\n", "q_next", "=", "q_next", ".", "gather", "(", "1", ",", "best_actions", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "q_next", "=", "q_next", ".", "max", "(", "1", ")", "[", "0", "]", "\n", "", "", "masks", "=", "tensor", "(", "transitions", ".", "mask", ")", "\n", "rewards", "=", "tensor", "(", "transitions", ".", "reward", ")", "\n", "q_target", "=", "rewards", "+", "self", ".", "config", ".", "discount", "**", "config", ".", "n_step", "*", "q_next", "*", "masks", "\n", "actions", "=", "tensor", "(", "transitions", ".", "action", ")", ".", "long", "(", ")", "\n", "q", "=", "self", ".", "network", "(", "states", ")", "[", "'q'", "]", "\n", "q", "=", "q", ".", "gather", "(", "1", ",", "actions", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "loss", "=", "q_target", "-", "q", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DQN_agent.DQNAgent.step": [[101, 139], ["DQN_agent.DQNAgent.actor.step", "DQN_agent.DQNAgent.record_online_return", "DQN_agent.DQNAgent.replay.feed", "DQN_agent.DQNAgent.replay.sample", "DQN_agent.DQNAgent.compute_loss", "isinstance", "DQN_agent.DQNAgent.reduce_loss", "DQN_agent.DQNAgent.optimizer.zero_grad", "loss.mul.mul.backward", "nn.utils.clip_grad_norm_", "DQN_agent.DQNAgent.target_network.load_state_dict", "dict", "DQN_agent.DQNAgent.target_network.reset_noise", "DQN_agent.DQNAgent.network.reset_noise", "loss.mul.mul.abs().add().pow", "tensor().long", "DQN_agent.DQNAgent.replay.update_priorities", "tensor", "tensor.mul().add().pow", "loss.mul.mul.mul", "DQN_agent.DQNAgent.network.parameters", "DQN_agent.DQNAgent.optimizer.step", "DQN_agent.DQNAgent.network.state_dict", "zip", "tensor.mul().add().pow.max", "np.array", "loss.mul.mul.abs().add", "tensor", "to_np", "to_np", "tensor.mul().add", "config.replay_beta", "config.reward_normalizer", "np.asarray", "loss.mul.mul.abs", "tensor.mul", "isinstance", "tensor.size"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.compute_loss", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.reduce_loss", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_bodies.FCBody.reset_noise", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "transitions", "=", "self", ".", "actor", ".", "step", "(", ")", "\n", "for", "states", ",", "actions", ",", "rewards", ",", "next_states", ",", "dones", ",", "info", "in", "transitions", ":", "\n", "            ", "self", ".", "record_online_return", "(", "info", ")", "\n", "self", ".", "total_steps", "+=", "1", "\n", "self", ".", "replay", ".", "feed", "(", "dict", "(", "\n", "state", "=", "np", ".", "array", "(", "[", "s", "[", "-", "1", "]", "if", "isinstance", "(", "s", ",", "LazyFrames", ")", "else", "s", "for", "s", "in", "states", "]", ")", ",", "\n", "action", "=", "actions", ",", "\n", "reward", "=", "[", "config", ".", "reward_normalizer", "(", "r", ")", "for", "r", "in", "rewards", "]", ",", "\n", "mask", "=", "1", "-", "np", ".", "asarray", "(", "dones", ",", "dtype", "=", "np", ".", "int32", ")", ",", "\n", ")", ")", "\n", "\n", "", "if", "self", ".", "total_steps", ">", "self", ".", "config", ".", "exploration_steps", ":", "\n", "            ", "transitions", "=", "self", ".", "replay", ".", "sample", "(", ")", "\n", "if", "config", ".", "noisy_linear", ":", "\n", "                ", "self", ".", "target_network", ".", "reset_noise", "(", ")", "\n", "self", ".", "network", ".", "reset_noise", "(", ")", "\n", "", "loss", "=", "self", ".", "compute_loss", "(", "transitions", ")", "\n", "if", "isinstance", "(", "transitions", ",", "PrioritizedTransition", ")", ":", "\n", "                ", "priorities", "=", "loss", ".", "abs", "(", ")", ".", "add", "(", "config", ".", "replay_eps", ")", ".", "pow", "(", "config", ".", "replay_alpha", ")", "\n", "idxs", "=", "tensor", "(", "transitions", ".", "idx", ")", ".", "long", "(", ")", "\n", "self", ".", "replay", ".", "update_priorities", "(", "zip", "(", "to_np", "(", "idxs", ")", ",", "to_np", "(", "priorities", ")", ")", ")", "\n", "sampling_probs", "=", "tensor", "(", "transitions", ".", "sampling_prob", ")", "\n", "weights", "=", "sampling_probs", ".", "mul", "(", "sampling_probs", ".", "size", "(", "0", ")", ")", ".", "add", "(", "1e-6", ")", ".", "pow", "(", "-", "config", ".", "replay_beta", "(", ")", ")", "\n", "weights", "=", "weights", "/", "weights", ".", "max", "(", ")", "\n", "loss", "=", "loss", ".", "mul", "(", "weights", ")", "\n", "\n", "", "loss", "=", "self", ".", "reduce_loss", "(", "loss", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "network", ".", "parameters", "(", ")", ",", "self", ".", "config", ".", "gradient_clip", ")", "\n", "with", "config", ".", "lock", ":", "\n", "                ", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "", "if", "self", ".", "total_steps", "/", "self", ".", "config", ".", "sgd_update_frequency", "%", "self", ".", "config", ".", "target_network_update_freq", "==", "0", ":", "\n", "            ", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.__init__": [[16, 20], ["get_logger"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.get_logger"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "logger", "=", "get_logger", "(", "tag", "=", "config", ".", "tag", ",", "log_level", "=", "config", ".", "log_level", ")", "\n", "self", ".", "task_ind", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.close": [[21, 23], ["close_obj"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.close_obj"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "close_obj", "(", "self", ".", "task", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save": [[24, 28], ["torch.save", "torch.save", "torch.save", "torch.save", "BaseAgent.BaseAgent.network.state_dict", "open", "pickle.dump", "BaseAgent.BaseAgent.config.state_normalizer.state_dict"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.save", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "network", ".", "state_dict", "(", ")", ",", "'%s.model'", "%", "(", "filename", ")", ")", "\n", "with", "open", "(", "'%s.stats'", "%", "(", "filename", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "config", ".", "state_normalizer", ".", "state_dict", "(", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load": [[29, 34], ["torch.load", "torch.load", "torch.load", "torch.load", "BaseAgent.BaseAgent.network.load_state_dict", "open", "BaseAgent.BaseAgent.config.state_normalizer.load_state_dict", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.load"], ["", "", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "'%s.model'", "%", "filename", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "self", ".", "network", ".", "load_state_dict", "(", "state_dict", ")", "\n", "with", "open", "(", "'%s.stats'", "%", "(", "filename", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "config", ".", "state_normalizer", ".", "load_state_dict", "(", "pickle", ".", "load", "(", "f", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.eval_step": [[35, 37], ["None"], "methods", ["None"], ["", "", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.eval_episode": [[38, 48], ["env.reset", "BaseAgent.BaseAgent.eval_step", "env.step"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.eval_step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step"], ["", "def", "eval_episode", "(", "self", ")", ":", "\n", "        ", "env", "=", "self", ".", "config", ".", "eval_env", "\n", "state", "=", "env", ".", "reset", "(", ")", "\n", "while", "True", ":", "\n", "            ", "action", "=", "self", ".", "eval_step", "(", "state", ")", "\n", "state", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "action", ")", "\n", "ret", "=", "info", "[", "0", "]", "[", "'episodic_return'", "]", "\n", "if", "ret", "is", "not", "None", ":", "\n", "                ", "break", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.eval_episodes": [[49, 60], ["range", "BaseAgent.BaseAgent.logger.info", "BaseAgent.BaseAgent.logger.add_scalar", "BaseAgent.BaseAgent.eval_episode", "episodic_returns.append", "numpy.mean", "numpy.mean", "numpy.sum", "numpy.mean", "numpy.std", "numpy.sqrt", "len"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_scalar", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.eval_episode", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "eval_episodes", "(", "self", ")", ":", "\n", "        ", "episodic_returns", "=", "[", "]", "\n", "for", "ep", "in", "range", "(", "self", ".", "config", ".", "eval_episodes", ")", ":", "\n", "            ", "total_rewards", "=", "self", ".", "eval_episode", "(", ")", "\n", "episodic_returns", ".", "append", "(", "np", ".", "sum", "(", "total_rewards", ")", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "'steps %d, episodic_return_test %.2f(%.2f)'", "%", "(", "\n", "self", ".", "total_steps", ",", "np", ".", "mean", "(", "episodic_returns", ")", ",", "np", ".", "std", "(", "episodic_returns", ")", "/", "np", ".", "sqrt", "(", "len", "(", "episodic_returns", ")", ")", "\n", ")", ")", "\n", "self", ".", "logger", ".", "add_scalar", "(", "'episodic_return_test'", ",", "np", ".", "mean", "(", "episodic_returns", ")", ",", "self", ".", "total_steps", ")", "\n", "return", "{", "\n", "'episodic_return_test'", ":", "np", ".", "mean", "(", "episodic_returns", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return": [[62, 73], ["isinstance", "isinstance", "BaseAgent.BaseAgent.logger.add_scalar", "BaseAgent.BaseAgent.logger.info", "enumerate", "BaseAgent.BaseAgent.record_online_return"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.logger.Logger.add_scalar", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return"], ["", "def", "record_online_return", "(", "self", ",", "info", ",", "offset", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "info", ",", "dict", ")", ":", "\n", "            ", "ret", "=", "info", "[", "'episodic_return'", "]", "\n", "if", "ret", "is", "not", "None", ":", "\n", "                ", "self", ".", "logger", ".", "add_scalar", "(", "'episodic_return_train'", ",", "ret", ",", "self", ".", "total_steps", "+", "offset", ")", "\n", "self", ".", "logger", ".", "info", "(", "'steps %d, episodic_return_train %s'", "%", "(", "self", ".", "total_steps", "+", "offset", ",", "ret", ")", ")", "\n", "", "", "elif", "isinstance", "(", "info", ",", "tuple", ")", ":", "\n", "            ", "for", "i", ",", "info_", "in", "enumerate", "(", "info", ")", ":", "\n", "                ", "self", ".", "record_online_return", "(", "info_", ",", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.switch_task": [[74, 84], ["numpy.linspace", "BaseAgent.BaseAgent.task.reset", "config.state_normalizer", "len"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["", "", "def", "switch_task", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "if", "not", "config", ".", "tasks", ":", "\n", "            ", "return", "\n", "", "segs", "=", "np", ".", "linspace", "(", "0", ",", "config", ".", "max_steps", ",", "len", "(", "config", ".", "tasks", ")", "+", "1", ")", "\n", "if", "self", ".", "total_steps", ">", "segs", "[", "self", ".", "task_ind", "+", "1", "]", ":", "\n", "            ", "self", ".", "task_ind", "+=", "1", "\n", "self", ".", "task", "=", "config", ".", "tasks", "[", "self", ".", "task_ind", "]", "\n", "self", ".", "states", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "self", ".", "states", "=", "config", ".", "state_normalizer", "(", "self", ".", "states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_episode": [[85, 97], ["mkdir", "env.reset", "BaseAgent.BaseAgent.record_obs", "BaseAgent.BaseAgent.record_step", "env.step"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.mkdir", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_obs", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step"], ["", "", "def", "record_episode", "(", "self", ",", "dir", ",", "env", ")", ":", "\n", "        ", "mkdir", "(", "dir", ")", "\n", "steps", "=", "0", "\n", "state", "=", "env", ".", "reset", "(", ")", "\n", "while", "True", ":", "\n", "            ", "self", ".", "record_obs", "(", "env", ",", "dir", ",", "steps", ")", "\n", "action", "=", "self", ".", "record_step", "(", "state", ")", "\n", "state", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "action", ")", "\n", "ret", "=", "info", "[", "0", "]", "[", "'episodic_return'", "]", "\n", "steps", "+=", "1", "\n", "if", "ret", "is", "not", "None", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_step": [[98, 100], ["None"], "methods", ["None"], ["", "", "", "def", "record_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_obs": [[102, 106], ["env.render", "skimage.io.imsave"], "methods", ["None"], ["", "def", "record_obs", "(", "self", ",", "env", ",", "dir", ",", "steps", ")", ":", "\n", "        ", "env", "=", "env", ".", "env", ".", "envs", "[", "0", "]", "\n", "obs", "=", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", "\n", "imsave", "(", "'%s/%04d.png'", "%", "(", "dir", ",", "steps", ")", ",", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.__init__": [[116, 133], ["torch.Process.__init__", "torch.Process.__init__", "torch.Pipe", "torch.Pipe", "BaseAgent.BaseActor._set_up", "config.task_fn"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNActor._set_up"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "mp", ".", "Process", ".", "__init__", "(", "self", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "__pipe", ",", "self", ".", "__worker_pipe", "=", "mp", ".", "Pipe", "(", ")", "\n", "\n", "self", ".", "_state", "=", "None", "\n", "self", ".", "_task", "=", "None", "\n", "self", ".", "_network", "=", "None", "\n", "self", ".", "_total_steps", "=", "0", "\n", "self", ".", "__cache_len", "=", "2", "\n", "\n", "if", "not", "config", ".", "async_actor", ":", "\n", "            ", "self", ".", "start", "=", "lambda", ":", "None", "\n", "self", ".", "step", "=", "self", ".", "_sample", "\n", "self", ".", "close", "=", "lambda", ":", "None", "\n", "self", ".", "_set_up", "(", ")", "\n", "self", ".", "_task", "=", "config", ".", "task_fn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._sample": [[134, 141], ["range", "BaseAgent.BaseActor._transition", "transitions.append"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._transition"], ["", "", "def", "_sample", "(", "self", ")", ":", "\n", "        ", "transitions", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "config", ".", "sgd_update_frequency", ")", ":", "\n", "            ", "transition", "=", "self", ".", "_transition", "(", ")", "\n", "if", "transition", "is", "not", "None", ":", "\n", "                ", "transitions", ".", "append", "(", "transition", ")", "\n", "", "", "return", "transitions", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.run": [[142, 163], ["BaseAgent.BaseActor._set_up", "config.task_fn", "collections.deque", "BaseAgent.BaseActor.__worker_pipe.recv", "BaseAgent.BaseActor.__worker_pipe.send", "collections.deque.append", "len", "collections.deque.append", "collections.deque.append", "collections.deque.popleft", "BaseAgent.BaseActor._sample", "BaseAgent.BaseActor.__worker_pipe.close", "BaseAgent.BaseActor._sample", "BaseAgent.BaseActor._sample"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNActor._set_up", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.close", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._sample"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_up", "(", ")", "\n", "config", "=", "self", ".", "config", "\n", "self", ".", "_task", "=", "config", ".", "task_fn", "(", ")", "\n", "\n", "cache", "=", "deque", "(", "[", "]", ",", "maxlen", "=", "2", ")", "\n", "while", "True", ":", "\n", "            ", "op", ",", "data", "=", "self", ".", "__worker_pipe", ".", "recv", "(", ")", "\n", "if", "op", "==", "self", ".", "STEP", ":", "\n", "                ", "if", "not", "len", "(", "cache", ")", ":", "\n", "                    ", "cache", ".", "append", "(", "self", ".", "_sample", "(", ")", ")", "\n", "cache", ".", "append", "(", "self", ".", "_sample", "(", ")", ")", "\n", "", "self", ".", "__worker_pipe", ".", "send", "(", "cache", ".", "popleft", "(", ")", ")", "\n", "cache", ".", "append", "(", "self", ".", "_sample", "(", ")", ")", "\n", "", "elif", "op", "==", "self", ".", "EXIT", ":", "\n", "                ", "self", ".", "__worker_pipe", ".", "close", "(", ")", "\n", "return", "\n", "", "elif", "op", "==", "self", ".", "NETWORK", ":", "\n", "                ", "self", ".", "_network", "=", "data", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._transition": [[164, 166], ["None"], "methods", ["None"], ["", "", "", "def", "_transition", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor._set_up": [[167, 169], ["None"], "methods", ["None"], ["", "def", "_set_up", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.step": [[170, 173], ["BaseAgent.BaseActor.__pipe.send", "BaseAgent.BaseActor.__pipe.recv"], "methods", ["None"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "self", ".", "__pipe", ".", "send", "(", "[", "self", ".", "STEP", ",", "None", "]", ")", "\n", "return", "self", ".", "__pipe", ".", "recv", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.close": [[174, 177], ["BaseAgent.BaseActor.__pipe.send", "BaseAgent.BaseActor.__pipe.close"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "__pipe", ".", "send", "(", "[", "self", ".", "EXIT", ",", "None", "]", ")", "\n", "self", ".", "__pipe", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.set_network": [[178, 183], ["BaseAgent.BaseActor.__pipe.send"], "methods", ["None"], ["", "def", "set_network", "(", "self", ",", "net", ")", ":", "\n", "        ", "if", "not", "self", ".", "config", ".", "async_actor", ":", "\n", "            ", "self", ".", "_network", "=", "net", "\n", "", "else", ":", "\n", "            ", "self", ".", "__pipe", ".", "send", "(", "[", "self", ".", "NETWORK", ",", "net", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DDPG_agent.DDPGAgent.__init__": [[14, 25], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "config.network_fn", "DDPG_agent.DDPGAgent.target_network.load_state_dict", "config.replay_fn", "config.random_process_fn", "DDPG_agent.DDPGAgent.network.state_dict"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "replay", "=", "config", ".", "replay_fn", "(", ")", "\n", "self", ".", "random_process", "=", "config", ".", "random_process_fn", "(", ")", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "state", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DDPG_agent.DDPGAgent.soft_update": [[26, 31], ["zip", "target.parameters", "src.parameters", "target_param.detach_", "target_param.copy_"], "methods", ["None"], ["", "def", "soft_update", "(", "self", ",", "target", ",", "src", ")", ":", "\n", "        ", "for", "target_param", ",", "param", "in", "zip", "(", "target", ".", "parameters", "(", ")", ",", "src", ".", "parameters", "(", ")", ")", ":", "\n", "            ", "target_param", ".", "detach_", "(", ")", "\n", "target_param", ".", "copy_", "(", "target_param", "*", "(", "1.0", "-", "self", ".", "config", ".", "target_network_mix", ")", "+", "\n", "param", "*", "self", ".", "config", ".", "target_network_mix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DDPG_agent.DDPGAgent.eval_step": [[32, 38], ["DDPG_agent.DDPGAgent.config.state_normalizer.set_read_only", "DDPG_agent.DDPGAgent.config.state_normalizer", "DDPG_agent.DDPGAgent.network", "DDPG_agent.DDPGAgent.config.state_normalizer.unset_read_only", "to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "config", ".", "state_normalizer", ".", "set_read_only", "(", ")", "\n", "state", "=", "self", ".", "config", ".", "state_normalizer", "(", "state", ")", "\n", "action", "=", "self", ".", "network", "(", "state", ")", "\n", "self", ".", "config", ".", "state_normalizer", ".", "unset_read_only", "(", ")", "\n", "return", "to_np", "(", "action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.DDPG_agent.DDPGAgent.step": [[39, 102], ["np.clip", "DDPG_agent.DDPGAgent.task.step", "DDPG_agent.DDPGAgent.config.state_normalizer", "DDPG_agent.DDPGAgent.record_online_return", "DDPG_agent.DDPGAgent.config.reward_normalizer", "DDPG_agent.DDPGAgent.replay.feed", "DDPG_agent.DDPGAgent.random_process.reset_states", "DDPG_agent.DDPGAgent.task.reset", "config.state_normalizer", "DDPG_agent.DDPGAgent.network", "to_np", "DDPG_agent.DDPGAgent.random_process.sample", "dict", "DDPG_agent.DDPGAgent.random_process.reset_states", "DDPG_agent.DDPGAgent.replay.size", "DDPG_agent.DDPGAgent.replay.sample", "tensor", "tensor", "tensor().unsqueeze", "tensor", "tensor().unsqueeze", "DDPG_agent.DDPGAgent.target_network.feature", "DDPG_agent.DDPGAgent.target_network.actor", "DDPG_agent.DDPGAgent.target_network.critic", "q_next.detach.detach.add_", "q_next.detach.detach.detach", "DDPG_agent.DDPGAgent.network.feature", "DDPG_agent.DDPGAgent.network.critic", "DDPG_agent.DDPGAgent.network.zero_grad", "critic_loss.backward", "DDPG_agent.DDPGAgent.network.critic_opt.step", "DDPG_agent.DDPGAgent.network.feature", "DDPG_agent.DDPGAgent.network.actor", "DDPG_agent.DDPGAgent.network.zero_grad", "policy_loss.backward", "DDPG_agent.DDPGAgent.network.actor_opt.step", "DDPG_agent.DDPGAgent.soft_update", "DDPG_agent.DDPGAgent.task.action_space.sample", "DDPG_agent.DDPGAgent.network.critic().mean", "tensor", "tensor", "np.asarray", "DDPG_agent.DDPGAgent.network.critic", "DDPG_agent.DDPGAgent.detach"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.feature", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.actor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.critic", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.feature", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.critic", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.feature", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.actor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.soft_update", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.DeterministicActorCriticNet.critic"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "if", "self", ".", "state", "is", "None", ":", "\n", "            ", "self", ".", "random_process", ".", "reset_states", "(", ")", "\n", "self", ".", "state", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "self", ".", "state", "=", "config", ".", "state_normalizer", "(", "self", ".", "state", ")", "\n", "\n", "", "if", "self", ".", "total_steps", "<", "config", ".", "warm_up", ":", "\n", "            ", "action", "=", "[", "self", ".", "task", ".", "action_space", ".", "sample", "(", ")", "]", "\n", "", "else", ":", "\n", "            ", "action", "=", "self", ".", "network", "(", "self", ".", "state", ")", "\n", "action", "=", "to_np", "(", "action", ")", "\n", "action", "+=", "self", ".", "random_process", ".", "sample", "(", ")", "\n", "", "action", "=", "np", ".", "clip", "(", "action", ",", "self", ".", "task", ".", "action_space", ".", "low", ",", "self", ".", "task", ".", "action_space", ".", "high", ")", "\n", "next_state", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "task", ".", "step", "(", "action", ")", "\n", "next_state", "=", "self", ".", "config", ".", "state_normalizer", "(", "next_state", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "reward", "=", "self", ".", "config", ".", "reward_normalizer", "(", "reward", ")", "\n", "\n", "self", ".", "replay", ".", "feed", "(", "dict", "(", "\n", "state", "=", "self", ".", "state", ",", "\n", "action", "=", "action", ",", "\n", "reward", "=", "reward", ",", "\n", "next_state", "=", "next_state", ",", "\n", "mask", "=", "1", "-", "np", ".", "asarray", "(", "done", ",", "dtype", "=", "np", ".", "int32", ")", ",", "\n", ")", ")", "\n", "\n", "if", "done", "[", "0", "]", ":", "\n", "            ", "self", ".", "random_process", ".", "reset_states", "(", ")", "\n", "", "self", ".", "state", "=", "next_state", "\n", "self", ".", "total_steps", "+=", "1", "\n", "\n", "if", "self", ".", "replay", ".", "size", "(", ")", ">=", "config", ".", "warm_up", ":", "\n", "            ", "transitions", "=", "self", ".", "replay", ".", "sample", "(", ")", "\n", "states", "=", "tensor", "(", "transitions", ".", "state", ")", "\n", "actions", "=", "tensor", "(", "transitions", ".", "action", ")", "\n", "rewards", "=", "tensor", "(", "transitions", ".", "reward", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "next_states", "=", "tensor", "(", "transitions", ".", "next_state", ")", "\n", "mask", "=", "tensor", "(", "transitions", ".", "mask", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "phi_next", "=", "self", ".", "target_network", ".", "feature", "(", "next_states", ")", "\n", "a_next", "=", "self", ".", "target_network", ".", "actor", "(", "phi_next", ")", "\n", "q_next", "=", "self", ".", "target_network", ".", "critic", "(", "phi_next", ",", "a_next", ")", "\n", "q_next", "=", "config", ".", "discount", "*", "mask", "*", "q_next", "\n", "q_next", ".", "add_", "(", "rewards", ")", "\n", "q_next", "=", "q_next", ".", "detach", "(", ")", "\n", "phi", "=", "self", ".", "network", ".", "feature", "(", "states", ")", "\n", "q", "=", "self", ".", "network", ".", "critic", "(", "phi", ",", "actions", ")", "\n", "critic_loss", "=", "(", "q", "-", "q_next", ")", ".", "pow", "(", "2", ")", ".", "mul", "(", "0.5", ")", ".", "sum", "(", "-", "1", ")", ".", "mean", "(", ")", "\n", "\n", "self", ".", "network", ".", "zero_grad", "(", ")", "\n", "critic_loss", ".", "backward", "(", ")", "\n", "self", ".", "network", ".", "critic_opt", ".", "step", "(", ")", "\n", "\n", "phi", "=", "self", ".", "network", ".", "feature", "(", "states", ")", "\n", "action", "=", "self", ".", "network", ".", "actor", "(", "phi", ")", "\n", "policy_loss", "=", "-", "self", ".", "network", ".", "critic", "(", "phi", ".", "detach", "(", ")", ",", "action", ")", ".", "mean", "(", ")", "\n", "\n", "self", ".", "network", ".", "zero_grad", "(", ")", "\n", "policy_loss", ".", "backward", "(", ")", "\n", "self", ".", "network", ".", "actor_opt", ".", "step", "(", ")", "\n", "\n", "self", ".", "soft_update", "(", "self", ".", "target_network", ",", "self", ".", "network", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.OptionCritic_agent.OptionCriticAgent.__init__": [[13, 28], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "config.network_fn", "config.optimizer_fn", "OptionCritic_agent.OptionCriticAgent.target_network.load_state_dict", "tensor().long", "OptionCritic_agent.OptionCriticAgent.config.state_normalizer", "tensor().byte", "OptionCritic_agent.OptionCriticAgent.is_initial_states.clone().long", "OptionCritic_agent.OptionCriticAgent.network.parameters", "OptionCritic_agent.OptionCriticAgent.network.state_dict", "OptionCritic_agent.OptionCriticAgent.task.reset", "tensor", "tensor", "OptionCritic_agent.OptionCriticAgent.is_initial_states.clone", "np.arange", "np.ones"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.clone"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "worker_index", "=", "tensor", "(", "np", ".", "arange", "(", "config", ".", "num_workers", ")", ")", ".", "long", "(", ")", "\n", "\n", "self", ".", "states", "=", "self", ".", "config", ".", "state_normalizer", "(", "self", ".", "task", ".", "reset", "(", ")", ")", "\n", "self", ".", "is_initial_states", "=", "tensor", "(", "np", ".", "ones", "(", "(", "config", ".", "num_workers", ")", ")", ")", ".", "byte", "(", ")", "\n", "self", ".", "prev_options", "=", "self", ".", "is_initial_states", ".", "clone", "(", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.OptionCritic_agent.OptionCriticAgent.sample_option": [[29, 50], ["torch.no_grad", "torch.zeros_like().add", "q_option.argmax", "torch.zeros_like().add", "torch.zeros_like().add.scatter_", "torch.zeros_like", "torch.distributions.Categorical", "torch.distributions.Categorical.sample", "torch.distributions.Categorical", "torch.distributions.Categorical.sample", "torch.where", "torch.zeros_like", "q_option.size", "q_option.size", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample"], ["", "def", "sample_option", "(", "self", ",", "prediction", ",", "epsilon", ",", "prev_option", ",", "is_intial_states", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "q_option", "=", "prediction", "[", "'q'", "]", "\n", "pi_option", "=", "torch", ".", "zeros_like", "(", "q_option", ")", ".", "add", "(", "epsilon", "/", "q_option", ".", "size", "(", "1", ")", ")", "\n", "greedy_option", "=", "q_option", ".", "argmax", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "prob", "=", "1", "-", "epsilon", "+", "epsilon", "/", "q_option", ".", "size", "(", "1", ")", "\n", "prob", "=", "torch", ".", "zeros_like", "(", "pi_option", ")", ".", "add", "(", "prob", ")", "\n", "pi_option", ".", "scatter_", "(", "1", ",", "greedy_option", ",", "prob", ")", "\n", "\n", "mask", "=", "torch", ".", "zeros_like", "(", "q_option", ")", "\n", "mask", "[", "self", ".", "worker_index", ",", "prev_option", "]", "=", "1", "\n", "beta", "=", "prediction", "[", "'beta'", "]", "\n", "pi_hat_option", "=", "(", "1", "-", "beta", ")", "*", "mask", "+", "beta", "*", "pi_option", "\n", "\n", "dist", "=", "torch", ".", "distributions", ".", "Categorical", "(", "probs", "=", "pi_option", ")", "\n", "options", "=", "dist", ".", "sample", "(", ")", "\n", "dist", "=", "torch", ".", "distributions", ".", "Categorical", "(", "probs", "=", "pi_hat_option", ")", "\n", "options_hat", "=", "dist", ".", "sample", "(", ")", "\n", "\n", "options", "=", "torch", ".", "where", "(", "is_intial_states", ",", "options", ",", "options_hat", ")", "\n", "", "return", "options", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.OptionCritic_agent.OptionCriticAgent.step": [[51, 119], ["Storage", "range", "reversed", "Storage.extract", "pi_loss.mean.mean.mean", "OptionCritic_agent.OptionCriticAgent.optimizer.zero_grad", "nn.utils.clip_grad_norm_", "OptionCritic_agent.OptionCriticAgent.optimizer.step", "OptionCritic_agent.OptionCriticAgent.network", "config.random_option_prob", "OptionCritic_agent.OptionCriticAgent.sample_option", "torch.distributions.Categorical", "torch.distributions.Categorical.sample", "torch.distributions.Categorical.entropy", "OptionCritic_agent.OptionCriticAgent.task.step", "OptionCritic_agent.OptionCriticAgent.record_online_return", "config.state_normalizer", "config.reward_normalizer", "Storage.feed", "Storage.feed", "tensor().byte", "torch.no_grad", "OptionCritic_agent.OptionCriticAgent.target_network", "Storage.placeholder", "ret.unsqueeze.unsqueeze.unsqueeze", "range", "Storage.q[].gather", "OptionCritic_agent.OptionCriticAgent.network.parameters", "to_np", "OptionCritic_agent.OptionCriticAgent.target_network.load_state_dict", "Storage.q[].gather", "tensor().unsqueeze", "tensor().unsqueeze", "OptionCritic_agent.OptionCriticAgent.unsqueeze", "OptionCritic_agent.OptionCriticAgent.prev_options.unsqueeze", "torch.distributions.Categorical.entropy.unsqueeze", "torch.distributions.Categorical.sample.unsqueeze", "OptionCritic_agent.OptionCriticAgent.is_initial_states.unsqueeze().float", "tensor", "OptionCritic_agent.OptionCriticAgent.network.state_dict", "Storage.q[].mean().unsqueeze", "Storage.extract.log_pi.gather", "Storage.extract.advantage.detach", "torch.max", "Storage.q[].max", "Storage.extract.beta.gather", "Storage.extract.beta_advantage.detach", "tensor", "tensor", "OptionCritic_agent.OptionCriticAgent.is_initial_states.unsqueeze", "Storage.q[].mean", "Storage.extract.q.gather", "Storage.extract.ret.detach"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.OptionCritic_agent.OptionCriticAgent.sample_option", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.BatchCategorical.entropy", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "storage", "=", "Storage", "(", "config", ".", "rollout_length", ",", "[", "'beta'", ",", "'option'", ",", "'beta_advantage'", ",", "'prev_option'", ",", "'init_state'", ",", "'eps'", "]", ")", "\n", "\n", "for", "_", "in", "range", "(", "config", ".", "rollout_length", ")", ":", "\n", "            ", "prediction", "=", "self", ".", "network", "(", "self", ".", "states", ")", "\n", "epsilon", "=", "config", ".", "random_option_prob", "(", "config", ".", "num_workers", ")", "\n", "options", "=", "self", ".", "sample_option", "(", "prediction", ",", "epsilon", ",", "self", ".", "prev_options", ",", "self", ".", "is_initial_states", ")", "\n", "prediction", "[", "'pi'", "]", "=", "prediction", "[", "'pi'", "]", "[", "self", ".", "worker_index", ",", "options", "]", "\n", "prediction", "[", "'log_pi'", "]", "=", "prediction", "[", "'log_pi'", "]", "[", "self", ".", "worker_index", ",", "options", "]", "\n", "dist", "=", "torch", ".", "distributions", ".", "Categorical", "(", "probs", "=", "prediction", "[", "'pi'", "]", ")", "\n", "actions", "=", "dist", ".", "sample", "(", ")", "\n", "entropy", "=", "dist", ".", "entropy", "(", ")", "\n", "\n", "next_states", ",", "rewards", ",", "terminals", ",", "info", "=", "self", ".", "task", ".", "step", "(", "to_np", "(", "actions", ")", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "next_states", "=", "config", ".", "state_normalizer", "(", "next_states", ")", "\n", "rewards", "=", "config", ".", "reward_normalizer", "(", "rewards", ")", "\n", "storage", ".", "feed", "(", "prediction", ")", "\n", "storage", ".", "feed", "(", "{", "'reward'", ":", "tensor", "(", "rewards", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'mask'", ":", "tensor", "(", "1", "-", "terminals", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'option'", ":", "options", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'prev_option'", ":", "self", ".", "prev_options", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'entropy'", ":", "entropy", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'action'", ":", "actions", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'init_state'", ":", "self", ".", "is_initial_states", ".", "unsqueeze", "(", "-", "1", ")", ".", "float", "(", ")", ",", "\n", "'eps'", ":", "epsilon", "}", ")", "\n", "\n", "self", ".", "is_initial_states", "=", "tensor", "(", "terminals", ")", ".", "byte", "(", ")", "\n", "self", ".", "prev_options", "=", "options", "\n", "self", ".", "states", "=", "next_states", "\n", "\n", "self", ".", "total_steps", "+=", "config", ".", "num_workers", "\n", "if", "self", ".", "total_steps", "//", "config", ".", "num_workers", "%", "config", ".", "target_network_update_freq", "==", "0", ":", "\n", "                ", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "\n", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "self", ".", "target_network", "(", "self", ".", "states", ")", "\n", "storage", ".", "placeholder", "(", ")", "\n", "betas", "=", "prediction", "[", "'beta'", "]", "[", "self", ".", "worker_index", ",", "self", ".", "prev_options", "]", "\n", "ret", "=", "(", "1", "-", "betas", ")", "*", "prediction", "[", "'q'", "]", "[", "self", ".", "worker_index", ",", "self", ".", "prev_options", "]", "+", "betas", "*", "torch", ".", "max", "(", "prediction", "[", "'q'", "]", ",", "dim", "=", "-", "1", ")", "[", "0", "]", "\n", "ret", "=", "ret", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "", "for", "i", "in", "reversed", "(", "range", "(", "config", ".", "rollout_length", ")", ")", ":", "\n", "            ", "ret", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "ret", "\n", "adv", "=", "ret", "-", "storage", ".", "q", "[", "i", "]", ".", "gather", "(", "1", ",", "storage", ".", "option", "[", "i", "]", ")", "\n", "storage", ".", "ret", "[", "i", "]", "=", "ret", "\n", "storage", ".", "advantage", "[", "i", "]", "=", "adv", "\n", "\n", "v", "=", "storage", ".", "q", "[", "i", "]", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "*", "(", "1", "-", "storage", ".", "eps", "[", "i", "]", ")", "+", "storage", ".", "q", "[", "i", "]", ".", "mean", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "*", "storage", ".", "eps", "[", "i", "]", "\n", "q", "=", "storage", ".", "q", "[", "i", "]", ".", "gather", "(", "1", ",", "storage", ".", "prev_option", "[", "i", "]", ")", "\n", "storage", ".", "beta_advantage", "[", "i", "]", "=", "q", "-", "v", "+", "config", ".", "termination_regularizer", "\n", "\n", "", "entries", "=", "storage", ".", "extract", "(", "\n", "[", "'q'", ",", "'beta'", ",", "'log_pi'", ",", "'ret'", ",", "'advantage'", ",", "'beta_advantage'", ",", "'entropy'", ",", "'option'", ",", "'action'", ",", "'init_state'", ",", "'prev_option'", "]", ")", "\n", "\n", "q_loss", "=", "(", "entries", ".", "q", ".", "gather", "(", "1", ",", "entries", ".", "option", ")", "-", "entries", ".", "ret", ".", "detach", "(", ")", ")", ".", "pow", "(", "2", ")", ".", "mul", "(", "0.5", ")", ".", "mean", "(", ")", "\n", "pi_loss", "=", "-", "(", "entries", ".", "log_pi", ".", "gather", "(", "1", ",", "\n", "entries", ".", "action", ")", "*", "entries", ".", "advantage", ".", "detach", "(", ")", ")", "-", "config", ".", "entropy_weight", "*", "entries", ".", "entropy", "\n", "pi_loss", "=", "pi_loss", ".", "mean", "(", ")", "\n", "beta_loss", "=", "(", "entries", ".", "beta", ".", "gather", "(", "1", ",", "entries", ".", "prev_option", ")", "*", "entries", ".", "beta_advantage", ".", "detach", "(", ")", "*", "(", "1", "-", "entries", ".", "init_state", ")", ")", ".", "mean", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "(", "pi_loss", "+", "q_loss", "+", "beta_loss", ")", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "network", ".", "parameters", "(", ")", ",", "config", ".", "gradient_clip", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNActor.__init__": [[16, 18], ["DQN_agent.DQNActor.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNActor._set_up": [[19, 21], ["tensor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "_set_up", "(", "self", ")", ":", "\n", "        ", "self", ".", "config", ".", "atoms", "=", "tensor", "(", "self", ".", "config", ".", "atoms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNActor.compute_q": [[22, 25], ["to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "def", "compute_q", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "q_values", "=", "(", "prediction", "[", "'prob'", "]", "*", "self", ".", "config", ".", "atoms", ")", ".", "sum", "(", "-", "1", ")", "\n", "return", "to_np", "(", "q_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNAgent.__init__": [[28, 50], ["BaseAgent.BaseAgent.BaseAgent.__init__", "mp.Lock", "np.linspace", "config.replay_fn", "CategoricalDQN_agent.CategoricalDQNActor", "config.network_fn", "CategoricalDQN_agent.CategoricalDQNAgent.network.share_memory", "config.network_fn", "CategoricalDQN_agent.CategoricalDQNAgent.target_network.load_state_dict", "config.optimizer_fn", "CategoricalDQN_agent.CategoricalDQNAgent.actor.set_network", "range_tensor", "tensor", "CategoricalDQN_agent.CategoricalDQNAgent.network.state_dict", "CategoricalDQN_agent.CategoricalDQNAgent.network.parameters", "float"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.set_network", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.range_tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "config", ".", "lock", "=", "mp", ".", "Lock", "(", ")", "\n", "config", ".", "atoms", "=", "np", ".", "linspace", "(", "config", ".", "categorical_v_min", ",", "\n", "config", ".", "categorical_v_max", ",", "config", ".", "categorical_n_atoms", ")", "\n", "\n", "self", ".", "replay", "=", "config", ".", "replay_fn", "(", ")", "\n", "self", ".", "actor", "=", "CategoricalDQNActor", "(", "config", ")", "\n", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "network", ".", "share_memory", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor", ".", "set_network", "(", "self", ".", "network", ")", "\n", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "batch_indices", "=", "range_tensor", "(", "config", ".", "batch_size", ")", "\n", "self", ".", "atoms", "=", "tensor", "(", "config", ".", "atoms", ")", "\n", "self", ".", "delta_atom", "=", "(", "config", ".", "categorical_v_max", "-", "config", ".", "categorical_v_min", ")", "/", "float", "(", "config", ".", "categorical_n_atoms", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNAgent.eval_step": [[51, 59], ["CategoricalDQN_agent.CategoricalDQNAgent.config.state_normalizer.set_read_only", "CategoricalDQN_agent.CategoricalDQNAgent.config.state_normalizer", "CategoricalDQN_agent.CategoricalDQNAgent.network", "to_np", "CategoricalDQN_agent.CategoricalDQNAgent.config.state_normalizer.unset_read_only", "q.argmax"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only"], ["", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "config", ".", "state_normalizer", ".", "set_read_only", "(", ")", "\n", "state", "=", "self", ".", "config", ".", "state_normalizer", "(", "state", ")", "\n", "prediction", "=", "self", ".", "network", "(", "state", ")", "\n", "q", "=", "(", "prediction", "[", "'prob'", "]", "*", "self", ".", "atoms", ")", ".", "sum", "(", "-", "1", ")", "\n", "action", "=", "to_np", "(", "q", ".", "argmax", "(", "-", "1", ")", ")", "\n", "self", ".", "config", ".", "state_normalizer", ".", "unset_read_only", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNAgent.compute_loss": [[60, 87], ["CategoricalDQN_agent.CategoricalDQNAgent.config.state_normalizer", "CategoricalDQN_agent.CategoricalDQNAgent.config.state_normalizer", "tensor().unsqueeze", "tensor().unsqueeze", "atoms_target.unsqueeze.unsqueeze.clamp_", "atoms_target.unsqueeze.unsqueeze.unsqueeze", "target_prob.sum.sum.sum", "tensor().long", "torch.no_grad", "prob_next.unsqueeze", "CategoricalDQN_agent.CategoricalDQNAgent.network", "CategoricalDQN_agent.CategoricalDQNAgent.target_network", "torch.argmax", "torch.argmax", "tensor", "tensor", "CategoricalDQN_agent.CategoricalDQNAgent.atoms.view", "tensor", "target_prob.sum.sum.add().log", "target_prob.sum.sum.add", "CategoricalDQN_agent.CategoricalDQNAgent.network", "CategoricalDQN_agent.CategoricalDQNAgent.atoms.view"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.add"], ["", "def", "compute_loss", "(", "self", ",", "transitions", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "state", ")", "\n", "next_states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "next_state", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prob_next", "=", "self", ".", "target_network", "(", "next_states", ")", "[", "'prob'", "]", "\n", "q_next", "=", "(", "prob_next", "*", "self", ".", "atoms", ")", ".", "sum", "(", "-", "1", ")", "\n", "if", "config", ".", "double_q", ":", "\n", "                ", "a_next", "=", "torch", ".", "argmax", "(", "(", "self", ".", "network", "(", "next_states", ")", "[", "'prob'", "]", "*", "self", ".", "atoms", ")", ".", "sum", "(", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "a_next", "=", "torch", ".", "argmax", "(", "q_next", ",", "dim", "=", "-", "1", ")", "\n", "", "prob_next", "=", "prob_next", "[", "self", ".", "batch_indices", ",", "a_next", ",", ":", "]", "\n", "\n", "", "rewards", "=", "tensor", "(", "transitions", ".", "reward", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "masks", "=", "tensor", "(", "transitions", ".", "mask", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "atoms_target", "=", "rewards", "+", "self", ".", "config", ".", "discount", "**", "config", ".", "n_step", "*", "masks", "*", "self", ".", "atoms", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "atoms_target", ".", "clamp_", "(", "self", ".", "config", ".", "categorical_v_min", ",", "self", ".", "config", ".", "categorical_v_max", ")", "\n", "atoms_target", "=", "atoms_target", ".", "unsqueeze", "(", "1", ")", "\n", "target_prob", "=", "(", "1", "-", "(", "atoms_target", "-", "self", ".", "atoms", ".", "view", "(", "1", ",", "-", "1", ",", "1", ")", ")", ".", "abs", "(", ")", "/", "self", ".", "delta_atom", ")", ".", "clamp", "(", "0", ",", "1", ")", "*", "prob_next", ".", "unsqueeze", "(", "1", ")", "\n", "target_prob", "=", "target_prob", ".", "sum", "(", "-", "1", ")", "\n", "\n", "log_prob", "=", "self", ".", "network", "(", "states", ")", "[", "'log_prob'", "]", "\n", "actions", "=", "tensor", "(", "transitions", ".", "action", ")", ".", "long", "(", ")", "\n", "log_prob", "=", "log_prob", "[", "self", ".", "batch_indices", ",", "actions", ",", ":", "]", "\n", "KL", "=", "(", "target_prob", "*", "target_prob", ".", "add", "(", "1e-5", ")", ".", "log", "(", ")", "-", "target_prob", "*", "log_prob", ")", ".", "sum", "(", "-", "1", ")", "\n", "return", "KL", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.CategoricalDQN_agent.CategoricalDQNAgent.reduce_loss": [[88, 90], ["loss.mean"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "reduce_loss", "(", "self", ",", "loss", ")", ":", "\n", "        ", "return", "loss", ".", "mean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.__init__": [[14, 25], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "config.network_fn", "TD3_agent.TD3Agent.target_network.load_state_dict", "config.replay_fn", "config.random_process_fn", "TD3_agent.TD3Agent.network.state_dict"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "replay", "=", "config", ".", "replay_fn", "(", ")", "\n", "self", ".", "random_process", "=", "config", ".", "random_process_fn", "(", ")", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "state", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.soft_update": [[26, 31], ["zip", "target.parameters", "src.parameters", "target_param.detach_", "target_param.copy_"], "methods", ["None"], ["", "def", "soft_update", "(", "self", ",", "target", ",", "src", ")", ":", "\n", "        ", "for", "target_param", ",", "param", "in", "zip", "(", "target", ".", "parameters", "(", ")", ",", "src", ".", "parameters", "(", ")", ")", ":", "\n", "            ", "target_param", ".", "detach_", "(", ")", "\n", "target_param", ".", "copy_", "(", "target_param", "*", "(", "1.0", "-", "self", ".", "config", ".", "target_network_mix", ")", "+", "\n", "param", "*", "self", ".", "config", ".", "target_network_mix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.eval_step": [[32, 38], ["TD3_agent.TD3Agent.config.state_normalizer.set_read_only", "TD3_agent.TD3Agent.config.state_normalizer", "TD3_agent.TD3Agent.network", "TD3_agent.TD3Agent.config.state_normalizer.unset_read_only", "to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "config", ".", "state_normalizer", ".", "set_read_only", "(", ")", "\n", "state", "=", "self", ".", "config", ".", "state_normalizer", "(", "state", ")", "\n", "action", "=", "self", ".", "network", "(", "state", ")", "\n", "self", ".", "config", ".", "state_normalizer", ".", "unset_read_only", "(", ")", "\n", "return", "to_np", "(", "action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.step": [[39, 107], ["np.clip", "TD3_agent.TD3Agent.task.step", "TD3_agent.TD3Agent.config.state_normalizer", "TD3_agent.TD3Agent.record_online_return", "TD3_agent.TD3Agent.config.reward_normalizer", "TD3_agent.TD3Agent.replay.feed", "TD3_agent.TD3Agent.random_process.reset_states", "TD3_agent.TD3Agent.task.reset", "config.state_normalizer", "TD3_agent.TD3Agent.network", "to_np", "TD3_agent.TD3Agent.random_process.sample", "dict", "TD3_agent.TD3Agent.random_process.reset_states", "TD3_agent.TD3Agent.replay.sample", "tensor", "tensor", "tensor().unsqueeze", "tensor", "tensor().unsqueeze", "TD3_agent.TD3Agent.target_network", "torch.randn_like().mul", "noise.clamp.clamp.clamp", "float", "float", "TD3_agent.TD3Agent.target_network.q", "target.detach.detach.detach", "TD3_agent.TD3Agent.network.q", "TD3_agent.TD3Agent.network.zero_grad", "critic_loss.backward", "TD3_agent.TD3Agent.network.critic_opt.step", "TD3_agent.TD3Agent.task.action_space.sample", "F.mse_loss", "F.mse_loss", "TD3_agent.TD3Agent.network", "TD3_agent.TD3Agent.network.zero_grad", "policy_loss.backward", "TD3_agent.TD3Agent.network.actor_opt.step", "TD3_agent.TD3Agent.soft_update", "tensor", "tensor", "torch.randn_like", "torch.min", "[].mean", "np.asarray", "TD3_agent.TD3Agent.network.q"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.HyperParameter.dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.reset_states", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mul", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.q", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.q", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.random_process.OrnsteinUhlenbeckProcess.sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.TD3_agent.TD3Agent.soft_update", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.network.network_heads.TD3Net.q"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "if", "self", ".", "state", "is", "None", ":", "\n", "            ", "self", ".", "random_process", ".", "reset_states", "(", ")", "\n", "self", ".", "state", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "self", ".", "state", "=", "config", ".", "state_normalizer", "(", "self", ".", "state", ")", "\n", "\n", "", "if", "self", ".", "total_steps", "<", "config", ".", "warm_up", ":", "\n", "            ", "action", "=", "[", "self", ".", "task", ".", "action_space", ".", "sample", "(", ")", "]", "\n", "", "else", ":", "\n", "            ", "action", "=", "self", ".", "network", "(", "self", ".", "state", ")", "\n", "action", "=", "to_np", "(", "action", ")", "\n", "action", "+=", "self", ".", "random_process", ".", "sample", "(", ")", "\n", "", "action", "=", "np", ".", "clip", "(", "action", ",", "self", ".", "task", ".", "action_space", ".", "low", ",", "self", ".", "task", ".", "action_space", ".", "high", ")", "\n", "next_state", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "task", ".", "step", "(", "action", ")", "\n", "next_state", "=", "self", ".", "config", ".", "state_normalizer", "(", "next_state", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "reward", "=", "self", ".", "config", ".", "reward_normalizer", "(", "reward", ")", "\n", "\n", "self", ".", "replay", ".", "feed", "(", "dict", "(", "\n", "state", "=", "self", ".", "state", ",", "\n", "action", "=", "action", ",", "\n", "reward", "=", "reward", ",", "\n", "next_state", "=", "next_state", ",", "\n", "mask", "=", "1", "-", "np", ".", "asarray", "(", "done", ",", "dtype", "=", "np", ".", "int32", ")", ",", "\n", ")", ")", "\n", "\n", "if", "done", "[", "0", "]", ":", "\n", "            ", "self", ".", "random_process", ".", "reset_states", "(", ")", "\n", "", "self", ".", "state", "=", "next_state", "\n", "self", ".", "total_steps", "+=", "1", "\n", "\n", "if", "self", ".", "total_steps", ">=", "config", ".", "warm_up", ":", "\n", "            ", "transitions", "=", "self", ".", "replay", ".", "sample", "(", ")", "\n", "states", "=", "tensor", "(", "transitions", ".", "state", ")", "\n", "actions", "=", "tensor", "(", "transitions", ".", "action", ")", "\n", "rewards", "=", "tensor", "(", "transitions", ".", "reward", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "next_states", "=", "tensor", "(", "transitions", ".", "next_state", ")", "\n", "mask", "=", "tensor", "(", "transitions", ".", "mask", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "a_next", "=", "self", ".", "target_network", "(", "next_states", ")", "\n", "noise", "=", "torch", ".", "randn_like", "(", "a_next", ")", ".", "mul", "(", "config", ".", "td3_noise", ")", "\n", "noise", "=", "noise", ".", "clamp", "(", "-", "config", ".", "td3_noise_clip", ",", "config", ".", "td3_noise_clip", ")", "\n", "\n", "min_a", "=", "float", "(", "self", ".", "task", ".", "action_space", ".", "low", "[", "0", "]", ")", "\n", "max_a", "=", "float", "(", "self", ".", "task", ".", "action_space", ".", "high", "[", "0", "]", ")", "\n", "a_next", "=", "(", "a_next", "+", "noise", ")", ".", "clamp", "(", "min_a", ",", "max_a", ")", "\n", "\n", "q_1", ",", "q_2", "=", "self", ".", "target_network", ".", "q", "(", "next_states", ",", "a_next", ")", "\n", "target", "=", "rewards", "+", "config", ".", "discount", "*", "mask", "*", "torch", ".", "min", "(", "q_1", ",", "q_2", ")", "\n", "target", "=", "target", ".", "detach", "(", ")", "\n", "\n", "q_1", ",", "q_2", "=", "self", ".", "network", ".", "q", "(", "states", ",", "actions", ")", "\n", "critic_loss", "=", "F", ".", "mse_loss", "(", "q_1", ",", "target", ")", "+", "F", ".", "mse_loss", "(", "q_2", ",", "target", ")", "\n", "\n", "self", ".", "network", ".", "zero_grad", "(", ")", "\n", "critic_loss", ".", "backward", "(", ")", "\n", "self", ".", "network", ".", "critic_opt", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "total_steps", "%", "config", ".", "td3_delay", ":", "\n", "                ", "action", "=", "self", ".", "network", "(", "states", ")", "\n", "policy_loss", "=", "-", "self", ".", "network", ".", "q", "(", "states", ",", "action", ")", "[", "0", "]", ".", "mean", "(", ")", "\n", "\n", "self", ".", "network", ".", "zero_grad", "(", ")", "\n", "policy_loss", ".", "backward", "(", ")", "\n", "self", ".", "network", ".", "actor_opt", ".", "step", "(", ")", "\n", "\n", "self", ".", "soft_update", "(", "self", ".", "target_network", ",", "self", ".", "network", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.NStepDQN_agent.NStepDQNAgent.__init__": [[14, 25], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "config.network_fn", "config.optimizer_fn", "NStepDQN_agent.NStepDQNAgent.target_network.load_state_dict", "NStepDQN_agent.NStepDQNAgent.task.reset", "NStepDQN_agent.NStepDQNAgent.network.parameters", "NStepDQN_agent.NStepDQNAgent.network.state_dict"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "states", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.NStepDQN_agent.NStepDQNAgent.step": [[26, 68], ["Storage", "range", "Storage.placeholder", "[].detach", "reversed", "Storage.extract", "NStepDQN_agent.NStepDQNAgent.optimizer.zero_grad", "loss.backward", "nn.utils.clip_grad_norm_", "NStepDQN_agent.NStepDQNAgent.optimizer.step", "config.random_action_prob", "epsilon_greedy", "NStepDQN_agent.NStepDQNAgent.task.step", "NStepDQN_agent.NStepDQNAgent.record_online_return", "config.reward_normalizer", "Storage.feed", "torch.max", "range", "NStepDQN_agent.NStepDQNAgent.network.parameters", "NStepDQN_agent.NStepDQNAgent.network", "to_np", "NStepDQN_agent.NStepDQNAgent.target_network.load_state_dict", "NStepDQN_agent.NStepDQNAgent.config.state_normalizer", "tensor().unsqueeze().long", "tensor().unsqueeze", "tensor().unsqueeze", "NStepDQN_agent.NStepDQNAgent.network.state_dict", "NStepDQN_agent.NStepDQNAgent.target_network", "config.state_normalizer", "tensor().unsqueeze", "tensor", "tensor", "Storage.extract.q.gather", "tensor"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.epsilon_greedy", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "storage", "=", "Storage", "(", "config", ".", "rollout_length", ")", "\n", "\n", "states", "=", "self", ".", "states", "\n", "for", "_", "in", "range", "(", "config", ".", "rollout_length", ")", ":", "\n", "            ", "q", "=", "self", ".", "network", "(", "self", ".", "config", ".", "state_normalizer", "(", "states", ")", ")", "[", "'q'", "]", "\n", "\n", "epsilon", "=", "config", ".", "random_action_prob", "(", "config", ".", "num_workers", ")", "\n", "actions", "=", "epsilon_greedy", "(", "epsilon", ",", "to_np", "(", "q", ")", ")", "\n", "\n", "next_states", ",", "rewards", ",", "terminals", ",", "info", "=", "self", ".", "task", ".", "step", "(", "actions", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "rewards", "=", "config", ".", "reward_normalizer", "(", "rewards", ")", "\n", "\n", "storage", ".", "feed", "(", "{", "'q'", ":", "q", ",", "\n", "'action'", ":", "tensor", "(", "actions", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "long", "(", ")", ",", "\n", "'reward'", ":", "tensor", "(", "rewards", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'mask'", ":", "tensor", "(", "1", "-", "terminals", ")", ".", "unsqueeze", "(", "-", "1", ")", "}", ")", "\n", "\n", "states", "=", "next_states", "\n", "\n", "self", ".", "total_steps", "+=", "config", ".", "num_workers", "\n", "if", "self", ".", "total_steps", "//", "config", ".", "num_workers", "%", "config", ".", "target_network_update_freq", "==", "0", ":", "\n", "                ", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "\n", "", "", "self", ".", "states", "=", "states", "\n", "\n", "storage", ".", "placeholder", "(", ")", "\n", "\n", "ret", "=", "self", ".", "target_network", "(", "config", ".", "state_normalizer", "(", "states", ")", ")", "[", "'q'", "]", ".", "detach", "(", ")", "\n", "ret", "=", "torch", ".", "max", "(", "ret", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "config", ".", "rollout_length", ")", ")", ":", "\n", "            ", "ret", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "ret", "\n", "storage", ".", "ret", "[", "i", "]", "=", "ret", "\n", "\n", "", "entries", "=", "storage", ".", "extract", "(", "[", "'q'", ",", "'action'", ",", "'ret'", "]", ")", "\n", "loss", "=", "0.5", "*", "(", "entries", ".", "q", ".", "gather", "(", "1", ",", "entries", ".", "action", ")", "-", "entries", ".", "ret", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "network", ".", "parameters", "(", ")", ",", "config", ".", "gradient_clip", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.__init__": [[13, 28], ["BaseAgent.BaseAgent.BaseAgent.__init__", "config.task_fn", "config.network_fn", "PPO_agent.PPOAgent.task.reset", "config.state_normalizer", "config.optimizer_fn", "config.actor_opt_fn", "config.critic_opt_fn", "torch.optim.lr_scheduler.LambdaLR", "PPO_agent.PPOAgent.network.parameters"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.component.envs.Task.reset"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "task", "=", "config", ".", "task_fn", "(", ")", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "if", "config", ".", "shared_repr", ":", "\n", "            ", "self", ".", "opt", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "actor_opt", "=", "config", ".", "actor_opt_fn", "(", "self", ".", "network", ".", "actor_params", ")", "\n", "self", ".", "critic_opt", "=", "config", ".", "critic_opt_fn", "(", "self", ".", "network", ".", "critic_params", ")", "\n", "", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "states", "=", "self", ".", "task", ".", "reset", "(", ")", "\n", "self", ".", "states", "=", "config", ".", "state_normalizer", "(", "self", ".", "states", ")", "\n", "if", "config", ".", "shared_repr", ":", "\n", "            ", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "LambdaLR", "(", "self", ".", "opt", ",", "lambda", "step", ":", "1", "-", "step", "/", "config", ".", "max_steps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step": [[29, 100], ["Storage", "range", "PPO_agent.PPOAgent.network", "Storage.feed", "Storage.placeholder", "tensor", "prediction[].detach", "reversed", "Storage.extract", "EntryCLS", "EntryCLS.advantage.copy_", "range", "PPO_agent.PPOAgent.network", "PPO_agent.PPOAgent.task.step", "PPO_agent.PPOAgent.record_online_return", "config.reward_normalizer", "config.state_normalizer", "Storage.feed", "Storage.feed", "np.zeros", "range", "tensor.detach", "prediction[].detach.detach", "PPO_agent.PPOAgent.lr_scheduler.step", "random_sample", "to_np", "list", "EntryCLS.advantage.std", "np.arange", "tensor().long", "EntryCLS", "PPO_agent.PPOAgent.network", "tensor().unsqueeze", "tensor().unsqueeze", "tensor", "Storage.v[].detach", "map", "EntryCLS.advantage.mean", "EntryCLS.state.size", "ratio.clamp", "PPO_agent.PPOAgent.opt.zero_grad", "nn.utils.clip_grad_norm_", "PPO_agent.PPOAgent.opt.step", "PPO_agent.PPOAgent.critic_opt.zero_grad", "value_loss.backward", "PPO_agent.PPOAgent.critic_opt.step", "tensor", "list", "torch.min().mean", "prediction[].mean", "PPO_agent.PPOAgent.network.parameters", "PPO_agent.PPOAgent.actor_opt.zero_grad", "policy_loss.backward", "PPO_agent.PPOAgent.actor_opt.step", "tensor", "tensor", "x.detach", "map", "torch.min"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseAgent.record_online_return", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.misc.random_sample", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.PPO_agent.PPOAgent.step", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "storage", "=", "Storage", "(", "config", ".", "rollout_length", ")", "\n", "states", "=", "self", ".", "states", "\n", "for", "_", "in", "range", "(", "config", ".", "rollout_length", ")", ":", "\n", "            ", "prediction", "=", "self", ".", "network", "(", "states", ")", "\n", "next_states", ",", "rewards", ",", "terminals", ",", "info", "=", "self", ".", "task", ".", "step", "(", "to_np", "(", "prediction", "[", "'action'", "]", ")", ")", "\n", "self", ".", "record_online_return", "(", "info", ")", "\n", "rewards", "=", "config", ".", "reward_normalizer", "(", "rewards", ")", "\n", "next_states", "=", "config", ".", "state_normalizer", "(", "next_states", ")", "\n", "storage", ".", "feed", "(", "prediction", ")", "\n", "storage", ".", "feed", "(", "{", "'reward'", ":", "tensor", "(", "rewards", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'mask'", ":", "tensor", "(", "1", "-", "terminals", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "'state'", ":", "tensor", "(", "states", ")", "}", ")", "\n", "states", "=", "next_states", "\n", "self", ".", "total_steps", "+=", "config", ".", "num_workers", "\n", "\n", "", "self", ".", "states", "=", "states", "\n", "prediction", "=", "self", ".", "network", "(", "states", ")", "\n", "storage", ".", "feed", "(", "prediction", ")", "\n", "storage", ".", "placeholder", "(", ")", "\n", "\n", "advantages", "=", "tensor", "(", "np", ".", "zeros", "(", "(", "config", ".", "num_workers", ",", "1", ")", ")", ")", "\n", "returns", "=", "prediction", "[", "'v'", "]", ".", "detach", "(", ")", "\n", "for", "i", "in", "reversed", "(", "range", "(", "config", ".", "rollout_length", ")", ")", ":", "\n", "            ", "returns", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "returns", "\n", "if", "not", "config", ".", "use_gae", ":", "\n", "                ", "advantages", "=", "returns", "-", "storage", ".", "v", "[", "i", "]", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "                ", "td_error", "=", "storage", ".", "reward", "[", "i", "]", "+", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "*", "storage", ".", "v", "[", "i", "+", "1", "]", "-", "storage", ".", "v", "[", "i", "]", "\n", "advantages", "=", "advantages", "*", "config", ".", "gae_tau", "*", "config", ".", "discount", "*", "storage", ".", "mask", "[", "i", "]", "+", "td_error", "\n", "", "storage", ".", "advantage", "[", "i", "]", "=", "advantages", ".", "detach", "(", ")", "\n", "storage", ".", "ret", "[", "i", "]", "=", "returns", ".", "detach", "(", ")", "\n", "\n", "", "entries", "=", "storage", ".", "extract", "(", "[", "'state'", ",", "'action'", ",", "'log_pi_a'", ",", "'ret'", ",", "'advantage'", "]", ")", "\n", "EntryCLS", "=", "entries", ".", "__class__", "\n", "entries", "=", "EntryCLS", "(", "*", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "detach", "(", ")", ",", "entries", ")", ")", ")", "\n", "entries", ".", "advantage", ".", "copy_", "(", "(", "entries", ".", "advantage", "-", "entries", ".", "advantage", ".", "mean", "(", ")", ")", "/", "entries", ".", "advantage", ".", "std", "(", ")", ")", "\n", "\n", "if", "config", ".", "shared_repr", ":", "\n", "            ", "self", ".", "lr_scheduler", ".", "step", "(", "self", ".", "total_steps", ")", "\n", "\n", "", "for", "_", "in", "range", "(", "config", ".", "optimization_epochs", ")", ":", "\n", "            ", "sampler", "=", "random_sample", "(", "np", ".", "arange", "(", "entries", ".", "state", ".", "size", "(", "0", ")", ")", ",", "config", ".", "mini_batch_size", ")", "\n", "for", "batch_indices", "in", "sampler", ":", "\n", "                ", "batch_indices", "=", "tensor", "(", "batch_indices", ")", ".", "long", "(", ")", "\n", "entry", "=", "EntryCLS", "(", "*", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "batch_indices", "]", ",", "entries", ")", ")", ")", "\n", "\n", "prediction", "=", "self", ".", "network", "(", "entry", ".", "state", ",", "entry", ".", "action", ")", "\n", "ratio", "=", "(", "prediction", "[", "'log_pi_a'", "]", "-", "entry", ".", "log_pi_a", ")", ".", "exp", "(", ")", "\n", "obj", "=", "ratio", "*", "entry", ".", "advantage", "\n", "obj_clipped", "=", "ratio", ".", "clamp", "(", "1.0", "-", "self", ".", "config", ".", "ppo_ratio_clip", ",", "\n", "1.0", "+", "self", ".", "config", ".", "ppo_ratio_clip", ")", "*", "entry", ".", "advantage", "\n", "policy_loss", "=", "-", "torch", ".", "min", "(", "obj", ",", "obj_clipped", ")", ".", "mean", "(", ")", "-", "config", ".", "entropy_weight", "*", "prediction", "[", "'entropy'", "]", ".", "mean", "(", ")", "\n", "\n", "value_loss", "=", "0.5", "*", "(", "entry", ".", "ret", "-", "prediction", "[", "'v'", "]", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "approx_kl", "=", "(", "entry", ".", "log_pi_a", "-", "prediction", "[", "'log_pi_a'", "]", ")", ".", "mean", "(", ")", "\n", "if", "config", ".", "shared_repr", ":", "\n", "                    ", "self", ".", "opt", ".", "zero_grad", "(", ")", "\n", "(", "policy_loss", "+", "value_loss", ")", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "network", ".", "parameters", "(", ")", ",", "config", ".", "gradient_clip", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                    ", "if", "approx_kl", "<=", "1.5", "*", "config", ".", "target_kl", ":", "\n", "                        ", "self", ".", "actor_opt", ".", "zero_grad", "(", ")", "\n", "policy_loss", ".", "backward", "(", ")", "\n", "self", ".", "actor_opt", ".", "step", "(", ")", "\n", "", "self", ".", "critic_opt", ".", "zero_grad", "(", ")", "\n", "value_loss", ".", "backward", "(", ")", "\n", "self", ".", "critic_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNActor.__init__": [[15, 17], ["DQN_agent.DQNActor.__init__"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNActor.compute_q": [[18, 21], ["prediction[].mean", "to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "def", "compute_q", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "q_values", "=", "prediction", "[", "'quantile'", "]", ".", "mean", "(", "-", "1", ")", "\n", "return", "to_np", "(", "q_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__": [[24, 46], ["BaseAgent.BaseAgent.BaseAgent.__init__", "mp.Lock", "config.replay_fn", "QuantileRegressionDQN_agent.QuantileRegressionDQNActor", "config.network_fn", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.network.share_memory", "config.network_fn", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.target_network.load_state_dict", "config.optimizer_fn", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.actor.set_network", "range_tensor", "tensor().view", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.network.state_dict", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.network.parameters", "tensor", "np.arange"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.__init__", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.load_state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.BaseAgent.BaseActor.set_network", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.range_tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.MeanStdNormalizer.state_dict", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "BaseAgent", ".", "__init__", "(", "self", ",", "config", ")", "\n", "self", ".", "config", "=", "config", "\n", "config", ".", "lock", "=", "mp", ".", "Lock", "(", ")", "\n", "\n", "self", ".", "replay", "=", "config", ".", "replay_fn", "(", ")", "\n", "self", ".", "actor", "=", "QuantileRegressionDQNActor", "(", "config", ")", "\n", "\n", "self", ".", "network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "network", ".", "share_memory", "(", ")", "\n", "self", ".", "target_network", "=", "config", ".", "network_fn", "(", ")", "\n", "self", ".", "target_network", ".", "load_state_dict", "(", "self", ".", "network", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "optimizer", "=", "config", ".", "optimizer_fn", "(", "self", ".", "network", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "actor", ".", "set_network", "(", "self", ".", "network", ")", "\n", "\n", "self", ".", "total_steps", "=", "0", "\n", "self", ".", "batch_indices", "=", "range_tensor", "(", "config", ".", "batch_size", ")", "\n", "\n", "self", ".", "quantile_weight", "=", "1.0", "/", "self", ".", "config", ".", "num_quantiles", "\n", "self", ".", "cumulative_density", "=", "tensor", "(", "\n", "(", "2", "*", "np", ".", "arange", "(", "self", ".", "config", ".", "num_quantiles", ")", "+", "1", ")", "/", "(", "2.0", "*", "self", ".", "config", ".", "num_quantiles", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.eval_step": [[47, 54], ["QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.config.state_normalizer.set_read_only", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.config.state_normalizer", "[].mean", "np.argmax", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.config.state_normalizer.unset_read_only", "to_np().flatten", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.network", "to_np"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.set_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.normalizer.BaseNormalizer.unset_read_only", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.to_np"], ["", "def", "eval_step", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "config", ".", "state_normalizer", ".", "set_read_only", "(", ")", "\n", "state", "=", "self", ".", "config", ".", "state_normalizer", "(", "state", ")", "\n", "q", "=", "self", ".", "network", "(", "state", ")", "[", "'quantile'", "]", ".", "mean", "(", "-", "1", ")", "\n", "action", "=", "np", ".", "argmax", "(", "to_np", "(", "q", ")", ".", "flatten", "(", ")", ")", "\n", "self", ".", "config", ".", "state_normalizer", ".", "unset_read_only", "(", ")", "\n", "return", "[", "action", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.compute_loss": [[55, 75], ["QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.config.state_normalizer", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.config.state_normalizer", "[].detach", "torch.argmax", "tensor().unsqueeze", "tensor().unsqueeze", "tensor().long", "quantiles_next.t().unsqueeze.t().unsqueeze.t().unsqueeze", "loss.sum().mean", "quantiles_next.t().unsqueeze.t().unsqueeze.sum", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.network", "huber", "tensor", "tensor", "tensor", "quantiles_next.t().unsqueeze.t().unsqueeze.t", "loss.sum", "QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.target_network", "diff.detach"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.huber", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor", "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.tensor"], ["", "def", "compute_loss", "(", "self", ",", "transitions", ")", ":", "\n", "        ", "states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "state", ")", "\n", "next_states", "=", "self", ".", "config", ".", "state_normalizer", "(", "transitions", ".", "next_state", ")", "\n", "\n", "quantiles_next", "=", "self", ".", "target_network", "(", "next_states", ")", "[", "'quantile'", "]", ".", "detach", "(", ")", "\n", "a_next", "=", "torch", ".", "argmax", "(", "quantiles_next", ".", "sum", "(", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "quantiles_next", "=", "quantiles_next", "[", "self", ".", "batch_indices", ",", "a_next", ",", ":", "]", "\n", "\n", "rewards", "=", "tensor", "(", "transitions", ".", "reward", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "masks", "=", "tensor", "(", "transitions", ".", "mask", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "quantiles_next", "=", "rewards", "+", "self", ".", "config", ".", "discount", "**", "self", ".", "config", ".", "n_step", "*", "masks", "*", "quantiles_next", "\n", "\n", "quantiles", "=", "self", ".", "network", "(", "states", ")", "[", "'quantile'", "]", "\n", "actions", "=", "tensor", "(", "transitions", ".", "action", ")", ".", "long", "(", ")", "\n", "quantiles", "=", "quantiles", "[", "self", ".", "batch_indices", ",", "actions", ",", ":", "]", "\n", "\n", "quantiles_next", "=", "quantiles_next", ".", "t", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "diff", "=", "quantiles_next", "-", "quantiles", "\n", "loss", "=", "huber", "(", "diff", ")", "*", "(", "self", ".", "cumulative_density", "-", "(", "diff", ".", "detach", "(", ")", "<", "0", ")", ".", "float", "(", ")", ")", ".", "abs", "(", ")", "\n", "return", "loss", ".", "sum", "(", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.agent.QuantileRegressionDQN_agent.QuantileRegressionDQNAgent.reduce_loss": [[76, 78], ["loss.mean"], "methods", ["home.repos.pwc.inspect_result.ShangtongZhang_DeepRL.utils.torch_utils.Grads.mean"], ["", "def", "reduce_loss", "(", "self", ",", "loss", ")", ":", "\n", "        ", "return", "loss", ".", "mean", "(", ")", "\n", "", "", ""]]}