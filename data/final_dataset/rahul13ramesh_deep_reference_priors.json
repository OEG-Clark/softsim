{"home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.None.train.setup": [[17, 26], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed"], "function", ["None"], ["def", "setup", "(", "seed", ")", ":", "\n", "    ", "\"\"\"\n    Setup pytorch and random seeds\n    \"\"\"", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.None.train.read_config": [[28, 36], ["print", "omegaconf.OmegaConf.create", "open", "yaml.safe_load"], "function", ["None"], ["", "def", "read_config", "(", "fname", ")", ":", "\n", "    ", "\"\"\"\n    Read config from yaml file and print it\n    \"\"\"", "\n", "with", "open", "(", "fname", ",", "\"r\"", ")", "as", "stream", ":", "\n", "        ", "cfg", "=", "yaml", ".", "safe_load", "(", "stream", ")", "\n", "", "print", "(", "cfg", ")", "\n", "return", "OmegaConf", ".", "create", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.None.train.train_ref_prior": [[38, 113], ["utils.net.create_net", "utils.runner.get_shapes", "utils.runner.get_train_objects", "range", "utils.runner.eval_and_log_metrics", "torch.save", "torch.save", "torch.save", "iter", "iter", "utils.net.create_net.train", "range", "print", "utils.net.create_net.state_dict", "utils.runner.eval_and_log_metrics", "optimizer.zero_grad", "utils.runner.get_minibatch", "inputs_x.size", "utils.net.create_net.update_ema", "scheduler.step", "ce_loss.item", "loss.item", "h_yw.item", "utils.runner.compute_h_y.item", "mask.sum().item", "torch.autocast", "torch.cat", "torch.cat", "torch.cat", "utils.runner.compute_log_prob", "log_pw.detach", "utils.net.create_net.get_prior", "utils.runner.compute_h_yw", "utils.runner.compute_h_y", "scaler.scale().backward", "scaler.step", "scaler.update", "torch.mean", "torch.mean", "torch.mean", "mask.sum", "torch.sum", "torch.sum", "torch.sum", "scaler.scale"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.create_net", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_shapes", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_train_objects", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.eval_and_log_metrics", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.eval_and_log_metrics", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_minibatch", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.update_ema", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_log_prob", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.get_prior", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_h_yw", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_h_y"], ["", "def", "train_ref_prior", "(", "cfg", ",", "dataloaders", ")", ":", "\n", "    ", "\"\"\"\n    Train the model on labeled + unlabeled data using Deep Reference priors\n    \"\"\"", "\n", "# Create K neural nets which correspond to particles of the refernece prior.", "\n", "net", "=", "create_net", "(", "cfg", ")", "\n", "\n", "# Pre-compute an object which is used for efficiently computing h_y", "\n", "reshapes", "=", "get_shapes", "(", "cfg", ",", "nlabs", "=", "10", ")", "\n", "\n", "lab_loader", ",", "unlab_loader", ",", "test_loader", "=", "dataloaders", "\n", "iters", "=", "[", "iter", "(", "lab_loader", ")", ",", "iter", "(", "unlab_loader", ")", "]", "\n", "optimizer", ",", "scheduler", ",", "scaler", "=", "get_train_objects", "(", "net", ",", "cfg", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "cfg", ".", "steps", ".", "epochs", ")", ":", "\n", "\n", "        ", "if", "(", "epoch", "%", "cfg", ".", "steps", ".", "test_epoch", "==", "0", ")", ":", "\n", "            ", "eval_and_log_metrics", "(", "epoch", ",", "net", ",", "test_loader", ")", "\n", "\n", "# Metrics to track for every epoch", "\n", "", "loss_run", ",", "ce_run", ",", "mask_run", "=", "0", ",", "0", ",", "0", "\n", "h_y_run", ",", "h_yw_run", "=", "0", ",", "0", "\n", "\n", "net", ".", "train", "(", ")", "\n", "for", "idx", "in", "range", "(", "cfg", ".", "steps", ".", "updates", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", "set_to_none", "=", "True", ")", "\n", "\n", "inputs", ",", "target_x", ",", "iters", "=", "get_minibatch", "(", "iters", ",", "\n", "dataloaders", "[", "0", ":", "2", "]", ",", "\n", "cfg", ".", "ref", ".", "particles", ")", "\n", "# Fetch image from labeled dataset. Also fetch weak and strong", "\n", "# augmentations of the same image from the unlabeled dataset", "\n", "inputs_x", ",", "inputs_u_w", ",", "inputs_u_s", "=", "inputs", "\n", "bs_x", "=", "inputs_x", ".", "size", "(", "0", ")", "\n", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "True", ")", ":", "\n", "\n", "# Forward prop: compute log-probabilities ", "\n", "                ", "all_inputs", "=", "torch", ".", "cat", "(", "(", "inputs_x", ",", "inputs_u_w", ",", "inputs_u_s", ")", ")", "\n", "log_px", ",", "log_pw", ",", "log_ps", "=", "compute_log_prob", "(", "net", ",", "all_inputs", ",", "bs_x", ")", "\n", "log_pw_d", "=", "log_pw", ".", "detach", "(", ")", "\n", "prior", "=", "net", ".", "get_prior", "(", ")", "\n", "\n", "# Compute the loss function", "\n", "ce_loss", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "log_px", "*", "target_x", ",", "dim", "=", "1", ")", ")", "\n", "h_yw", ",", "mask", "=", "compute_h_yw", "(", "log_pw_d", ",", "log_ps", ",", "cfg", ")", "\n", "h_y", "=", "compute_h_y", "(", "log_pw", ",", "log_ps", ",", "prior", ",", "cfg", ",", "reshapes", ")", "\n", "info_loss", "=", "(", "h_yw", "-", "cfg", ".", "ref", ".", "\u03b1", "*", "h_y", ")", "\n", "\n", "# The 1/(1-\u03c4^2) term is justified in the appendix", "\n", "loss", "=", "ce_loss", "+", "(", "1.", "/", "(", "1", "-", "cfg", ".", "ref", ".", "\u03c4", "**", "2", ")", ")", "*", "info_loss", "\n", "\n", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "\n", "", "net", ".", "update_ema", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "ce_run", "+=", "ce_loss", ".", "item", "(", ")", "\n", "loss_run", "+=", "loss", ".", "item", "(", ")", "\n", "h_yw_run", "+=", "h_yw", ".", "item", "(", ")", "\n", "h_y_run", "+=", "h_y", ".", "item", "(", ")", "\n", "mask_run", "+=", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "info", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'ce_loss'", ":", "ce_run", "/", "idx", ",", "\n", "'loss'", ":", "loss_run", "/", "idx", ",", "\n", "'H_y'", ":", "h_y_run", "/", "idx", ",", "\n", "'H_yw'", ":", "h_yw_run", "/", "idx", ",", "\n", "'masks'", ":", "mask_run", "/", "idx", "}", "\n", "print", "(", "info", ")", "\n", "\n", "", "eval_and_log_metrics", "(", "\"final_epoch\"", ",", "net", ",", "test_loader", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "'model.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_shapes": [[14, 27], ["range", "shapes.append", "list"], "function", ["None"], ["def", "get_shapes", "(", "cfg", ",", "nlabs", ")", ":", "\n", "    ", "\"\"\"\n    Define a collection of shapes that makes h_y calculation easier\n    \"\"\"", "\n", "shapes", "=", "[", "]", "\n", "bs", "=", "(", "cfg", ".", "ref", ".", "\u03bc", "*", "cfg", ".", "hp", ".", "bs", ")", "//", "cfg", ".", "ref", ".", "order", "\n", "shp", "=", "[", "bs", ",", "cfg", ".", "ref", ".", "particles", "]", "+", "(", "[", "1", "]", "*", "(", "cfg", ".", "ref", ".", "order", ")", ")", "\n", "for", "i", "in", "range", "(", "cfg", ".", "ref", ".", "order", ")", ":", "\n", "        ", "shp", "[", "2", "+", "i", "]", "=", "nlabs", "\n", "if", "i", "!=", "0", ":", "\n", "            ", "shp", "[", "1", "+", "i", "]", "=", "1", "\n", "", "shapes", ".", "append", "(", "list", "(", "shp", ")", ")", "\n", "", "return", "shapes", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_minibatch": [[29, 55], ["inputs_x.size", "target_x.unsqueeze().repeat.cuda", "torch.zeros().cuda().scatter_", "torch.zeros().cuda().scatter_", "torch.zeros().cuda().scatter_", "torch.zeros().cuda().scatter_", "target_x.unsqueeze().repeat.unsqueeze().repeat", "iters[].next", "iters[].next", "target_x.unsqueeze().repeat.view().long", "iter", "iters[].next", "iter", "iters[].next", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "target_x.unsqueeze().repeat.unsqueeze", "target_x.unsqueeze().repeat.view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["", "def", "get_minibatch", "(", "iters", ",", "loaders", ",", "particles", ")", ":", "\n", "    ", "\"\"\"\n    We simulataneously fetch elements from two dataloaders, specifically\n    the labeled and unlabeled dataloaders. \n    \"\"\"", "\n", "try", ":", "\n", "        ", "inputs_x", ",", "target_x", "=", "iters", "[", "0", "]", ".", "next", "(", ")", "\n", "", "except", ":", "\n", "        ", "iters", "[", "0", "]", "=", "iter", "(", "loaders", "[", "0", "]", ")", "\n", "inputs_x", ",", "target_x", "=", "iters", "[", "0", "]", ".", "next", "(", ")", "\n", "\n", "", "try", ":", "\n", "        ", "(", "inputs_u_w", ",", "inputs_u_s", ")", ",", "_", "=", "iters", "[", "1", "]", ".", "next", "(", ")", "\n", "", "except", ":", "\n", "        ", "iters", "[", "1", "]", "=", "iter", "(", "loaders", "[", "1", "]", ")", "\n", "(", "inputs_u_w", ",", "inputs_u_s", ")", ",", "_", "=", "iters", "[", "1", "]", ".", "next", "(", ")", "\n", "\n", "", "inputs", "=", "(", "inputs_x", ",", "inputs_u_w", ",", "inputs_u_s", ")", "\n", "batch_size", "=", "inputs_x", ".", "size", "(", "0", ")", "\n", "\n", "# Transform label to one-hot", "\n", "target_x", "=", "target_x", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "target_x", "=", "torch", ".", "zeros", "(", "batch_size", ",", "10", ")", ".", "cuda", "(", ")", ".", "scatter_", "(", "1", ",", "target_x", ".", "view", "(", "-", "1", ",", "1", ")", ".", "long", "(", ")", ",", "1", ")", "\n", "target_x", "=", "target_x", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "particles", ")", "\n", "\n", "return", "inputs", ",", "target_x", ",", "iters", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_cosine_schedule_with_warmup": [[57, 69], ["torch.optim.lr_scheduler.LambdaLR", "max", "float", "float", "math.cos", "float", "float", "max", "max"], "function", ["None"], ["", "def", "get_cosine_schedule_with_warmup", "(", "optimizer", ",", "\n", "num_warmup_steps", ",", "\n", "num_training_steps", ",", "\n", "num_cycles", "=", "7.", "/", "16.", ",", "\n", "last_epoch", "=", "-", "1", ")", ":", "\n", "    ", "def", "_lr_lambda", "(", "current_step", ")", ":", "\n", "        ", "if", "current_step", "<", "num_warmup_steps", ":", "\n", "            ", "return", "float", "(", "current_step", ")", "/", "float", "(", "max", "(", "1", ",", "num_warmup_steps", ")", ")", "\n", "", "no_progress", "=", "float", "(", "current_step", "-", "num_warmup_steps", ")", "/", "float", "(", "max", "(", "1", ",", "num_training_steps", "-", "num_warmup_steps", ")", ")", "\n", "return", "max", "(", "0.", ",", "math", ".", "cos", "(", "math", ".", "pi", "*", "num_cycles", "*", "no_progress", ")", ")", "\n", "\n", "", "return", "LambdaLR", "(", "optimizer", ",", "_lr_lambda", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_train_objects": [[71, 89], ["torch.SGD", "runner.get_cosine_schedule_with_warmup", "torch.GradScaler", "net.get_opt_params"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.get_cosine_schedule_with_warmup", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.get_opt_params"], ["", "def", "get_train_objects", "(", "net", ",", "cfg", ")", ":", "\n", "    ", "\"\"\"\n    Create objects for training neural net\n    \"\"\"", "\n", "# Scale up learning rate by number of particles since loss is averaged over", "\n", "# all particles", "\n", "lr", "=", "cfg", ".", "hp", ".", "lr", "*", "cfg", ".", "ref", ".", "particles", "\n", "# Scale down weight decay to adjust for learning rate scaling", "\n", "wd", "=", "cfg", ".", "hp", ".", "wd", "/", "cfg", ".", "ref", ".", "particles", "\n", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "net", ".", "get_opt_params", "(", "wd", "=", "wd", ")", ",", "\n", "lr", "=", "lr", ",", "momentum", "=", "0.9", ",", "nesterov", "=", "True", ")", "\n", "scheduler", "=", "get_cosine_schedule_with_warmup", "(", "\n", "optimizer", ",", "0", ",", "cfg", ".", "steps", ".", "updates", "*", "cfg", ".", "steps", ".", "epochs", ")", "\n", "scaler", "=", "amp", ".", "GradScaler", "(", "enabled", "=", "True", ")", "\n", "\n", "return", "optimizer", ",", "scheduler", ",", "scaler", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_log_prob": [[91, 104], ["net", "logits[].chunk", "torch.functional.log_softmax", "torch.functional.log_softmax", "torch.functional.log_softmax"], "function", ["None"], ["", "def", "compute_log_prob", "(", "net", ",", "inputs", ",", "bs_x", ")", ":", "\n", "    ", "\"\"\"\n    Perform forward prop and compute log_probabilities of samples\n    \"\"\"", "\n", "logits", "=", "net", "(", "inputs", ")", "\n", "logits_x", "=", "logits", "[", ":", "bs_x", "]", "\n", "logits_u_w", ",", "logits_u_s", "=", "logits", "[", "bs_x", ":", "]", ".", "chunk", "(", "2", ")", "\n", "\n", "log_px", "=", "nn", ".", "functional", ".", "log_softmax", "(", "logits_x", ",", "dim", "=", "1", ")", "\n", "log_pw", "=", "nn", ".", "functional", ".", "log_softmax", "(", "logits_u_w", ",", "dim", "=", "1", ")", "\n", "log_ps", "=", "nn", ".", "functional", ".", "log_softmax", "(", "logits_u_s", ",", "dim", "=", "1", ")", "\n", "\n", "return", "(", "log_px", ",", "log_pw", ",", "log_ps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_h_yw": [[106, 122], ["torch.max", "torch.max", "torch.max", "torch.max", "max_probs.ge", "log_pw_d.exp", "log_pw_d.exp", "log_ps.exp"], "function", ["None"], ["", "def", "compute_h_yw", "(", "log_pw_d", ",", "log_ps", ",", "cfg", ")", ":", "\n", "    ", "\"\"\"\n    Compute h_yw term in the reference prior objective\n    \"\"\"", "\n", "log_p_avg", "=", "cfg", ".", "ref", ".", "\u03c4", "*", "log_pw_d", "+", "(", "1", "-", "cfg", ".", "ref", ".", "\u03c4", ")", "*", "log_ps", "\n", "p_avg", "=", "cfg", ".", "ref", ".", "\u03c4", "*", "log_pw_d", ".", "exp", "(", ")", "+", "(", "1", "-", "cfg", ".", "ref", ".", "\u03c4", ")", "*", "log_ps", ".", "exp", "(", ")", "\n", "# Apply jensen's inequality to compute log_p", "\n", "entropy", "=", "-", "(", "p_avg", "*", "log_p_avg", ")", ".", "sum", "(", "1", ")", "\n", "\n", "# Samples contribute to the loss only if their predictions are confident", "\n", "max_probs", ",", "_", "=", "torch", ".", "max", "(", "log_pw_d", ".", "exp", "(", ")", ",", "dim", "=", "1", ")", "\n", "mask", "=", "max_probs", ".", "ge", "(", "cfg", ".", "ref", ".", "threshold", ")", "\n", "\n", "h_yw", "=", "(", "entropy", "*", "mask", ")", ".", "mean", "(", ")", "\n", "\n", "return", "h_yw", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.compute_h_y": [[124, 140], ["torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "sum().view", "torch.reshape.size", "log_pw[].view", "range", "sum", "sum().view.exp", "prior.view", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "def", "compute_h_y", "(", "log_pw", ",", "log_ps", ",", "prior", ",", "cfg", ",", "reshapes", ")", ":", "\n", "    ", "\"\"\"\n    Compute h_y term in the reference prior objective\n    \"\"\"", "\n", "bs", "=", "log_pw", ".", "size", "(", "0", ")", "//", "cfg", ".", "ref", ".", "order", "\n", "log_pw", "=", "torch", ".", "transpose", "(", "log_pw", ",", "1", ",", "2", ")", "\n", "log_pw", "=", "torch", ".", "reshape", "(", "log_pw", ",", "(", "cfg", ".", "ref", ".", "order", ",", "bs", ",", "cfg", ".", "ref", ".", "particles", ",", "10", ")", ")", "\n", "# Sum over all combinations of n particles", "\n", "ln_p_yn", "=", "[", "log_pw", "[", "i", "]", ".", "view", "(", "reshapes", "[", "i", "]", ")", "for", "i", "in", "range", "(", "cfg", ".", "ref", ".", "order", ")", "]", "\n", "ln_p_yn", "=", "sum", "(", "ln_p_yn", ")", ".", "view", "(", "bs", ",", "cfg", ".", "ref", ".", "particles", ",", "-", "1", ")", "\n", "# Weights particles by prior", "\n", "pi_ln_p", "=", "(", "ln_p_yn", ".", "exp", "(", ")", "*", "prior", ".", "view", "(", "1", ",", "-", "1", ",", "1", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "h_y", "=", "-", "(", "pi_ln_p", "*", "torch", ".", "log", "(", "pi_ln_p", "+", "1e-12", ")", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "\n", "h_y", "=", "h_y", "/", "cfg", ".", "ref", ".", "order", "\n", "\n", "return", "h_y", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.eval_and_log_metrics": [[142, 155], ["runner.evaluate_model", "runner.evaluate_model", "print", "list"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.evaluate_model", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.evaluate_model"], ["", "def", "eval_and_log_metrics", "(", "epoch", ",", "net", ",", "test_loader", ")", ":", "\n", "    ", "\"\"\"\n    Evaluate on the test dataset and log metrics\n    \"\"\"", "\n", "ret", "=", "evaluate_model", "(", "net", ",", "test_loader", ")", "\n", "ret_ema", "=", "evaluate_model", "(", "net", ",", "test_loader", ",", "True", ")", "\n", "info", "=", "{", "'epoch'", ":", "epoch", ",", "\n", "'test_acc'", ":", "ret", "[", "0", "]", ",", "\n", "'test_loss'", ":", "ret", "[", "1", "]", ",", "\n", "'ema_test_acc'", ":", "ret_ema", "[", "0", "]", ",", "\n", "'ema_test_loss'", ":", "ret_ema", "[", "1", "]", ",", "\n", "'particle_accs'", ":", "list", "(", "ret", "[", "2", "]", ")", "}", "\n", "print", "(", "info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.runner.evaluate_model": [[157, 192], ["torch.CrossEntropyLoss", "net.eval", "torch.inference_mode", "torch.inference_mode", "torch.inference_mode", "torch.inference_mode", "numpy.round", "numpy.round", "numpy.round", "int", "labels.cpu().numpy.long", "dat.cuda.cuda", "labels.cpu().numpy.cuda", "net", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "nn.CrossEntropyLoss.item", "labels.cpu().numpy.cpu().numpy", "out.cpu().detach().numpy.cpu().detach().numpy", "ensemble.cpu().detach().numpy.cpu().detach().numpy", "numpy.sum", "numpy.sum", "labels.cpu().numpy.size", "nn.CrossEntropyLoss.", "labels.cpu().numpy.cpu", "out.cpu().detach().numpy.cpu().detach", "ensemble.cpu().detach().numpy.cpu().detach", "numpy.argmax", "numpy.argmax", "out.cpu().detach().numpy.cpu", "ensemble.cpu().detach().numpy.cpu"], "function", ["None"], ["", "def", "evaluate_model", "(", "net", ",", "dataloader", ",", "use_ema", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Evaluate the on a given data loader\n    \"\"\"", "\n", "acc", "=", "0.0", "\n", "loss", "=", "0.0", "\n", "count", "=", "0.0", "\n", "acc2", "=", "0.0", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "\n", "net", ".", "eval", "(", ")", "\n", "with", "torch", ".", "inference_mode", "(", ")", ":", "\n", "        ", "for", "dat", ",", "labels", "in", "dataloader", ":", "\n", "            ", "batch_size", "=", "int", "(", "labels", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "labels", "=", "labels", ".", "long", "(", ")", "\n", "\n", "dat", "=", "dat", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "out", "=", "net", "(", "dat", ",", "use_ema", ")", "\n", "ensemble", "=", "torch", ".", "mean", "(", "out", ",", "axis", "=", "2", ")", "\n", "loss", "+=", "(", "criterion", "(", "ensemble", ",", "labels", ")", ".", "item", "(", ")", ")", "\n", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "out", "=", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "ensemble", "=", "ensemble", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "labels", "==", "(", "np", ".", "argmax", "(", "ensemble", ",", "axis", "=", "1", ")", ")", ")", "\n", "acc2", "+=", "np", ".", "sum", "(", "labels", "[", ":", ",", "None", "]", "==", "(", "np", ".", "argmax", "(", "out", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "count", "+=", "batch_size", "\n", "\n", "", "", "ret", "=", "(", "np", ".", "round", "(", "(", "acc", "/", "count", ")", "*", "100", ",", "2", ")", ",", "\n", "np", ".", "round", "(", "loss", "/", "count", ",", "3", ")", ",", "\n", "np", ".", "round", "(", "(", "acc2", "/", "count", ")", "*", "100", ",", "3", ")", ")", "\n", "return", "ret", "\n", "", ""]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.RandAugmentPC.__init__": [[185, 191], ["randaugment.my_augment_pool"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.my_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "my_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.RandAugmentPC.__call__": [[192, 200], ["random.choices", "randaugment.CutoutAbs", "numpy.random.uniform", "int", "op", "random.random"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.CutoutAbs"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "prob", "=", "np", ".", "random", ".", "uniform", "(", "0.2", ",", "0.8", ")", "\n", "if", "random", ".", "random", "(", ")", "+", "prob", ">=", "1", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "self", ".", "m", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "img", "=", "CutoutAbs", "(", "img", ",", "int", "(", "32", "*", "0.5", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.RandAugmentMC.__init__": [[203, 209], ["randaugment.fixmatch_augment_pool"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.fixmatch_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "fixmatch_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.RandAugmentMC.__call__": [[210, 218], ["random.choices", "randaugment.CutoutAbs", "numpy.random.randint", "int", "random.random", "op"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.CutoutAbs"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "v", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "self", ".", "m", ")", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "v", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "img", "=", "CutoutAbs", "(", "img", ",", "int", "(", "32", "*", "0.5", ")", ")", "\n", "return", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.AutoContrast": [[19, 21], ["PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast"], "function", ["None"], ["def", "AutoContrast", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "autocontrast", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Brightness": [[23, 26], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Brightness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Brightness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Brightness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Brightness"], ["", "def", "Brightness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Brightness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Color": [[28, 31], ["PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Color", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Color", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Color", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Color"], ["", "def", "Color", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Color", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Contrast": [[33, 36], ["PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Contrast", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Contrast", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Contrast", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Contrast"], ["", "def", "Contrast", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Contrast", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Cutout": [[38, 44], ["int", "randaugment.CutoutAbs", "randaugment._float_parameter", "min"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.CutoutAbs", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter"], ["", "def", "Cutout", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "if", "v", "==", "0", ":", "\n", "        ", "return", "img", "\n", "", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "v", "=", "int", "(", "v", "*", "min", "(", "img", ".", "size", ")", ")", "\n", "return", "CutoutAbs", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.CutoutAbs": [[46, 60], ["numpy.random.uniform", "numpy.random.uniform", "int", "int", "int", "int", "img.copy.copy", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "max", "max", "min", "min", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw"], "function", ["None"], ["", "def", "CutoutAbs", "(", "img", ",", "v", ",", "**", "kwarg", ")", ":", "\n", "    ", "w", ",", "h", "=", "img", ".", "size", "\n", "x0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w", ")", "\n", "y0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h", ")", "\n", "x0", "=", "int", "(", "max", "(", "0", ",", "x0", "-", "v", "/", "2.", ")", ")", "\n", "y0", "=", "int", "(", "max", "(", "0", ",", "y0", "-", "v", "/", "2.", ")", ")", "\n", "x1", "=", "int", "(", "min", "(", "w", ",", "x0", "+", "v", ")", ")", "\n", "y1", "=", "int", "(", "min", "(", "h", ",", "y0", "+", "v", ")", ")", "\n", "xy", "=", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ")", "\n", "# gray", "\n", "color", "=", "(", "127", ",", "127", ",", "127", ")", "\n", "img", "=", "img", ".", "copy", "(", ")", "\n", "PIL", ".", "ImageDraw", ".", "Draw", "(", "img", ")", ".", "rectangle", "(", "xy", ",", "color", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Equalize": [[62, 64], ["PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize"], "function", ["None"], ["", "def", "Equalize", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "equalize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Identity": [[66, 68], ["None"], "function", ["None"], ["", "def", "Identity", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Invert": [[70, 72], ["PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert"], "function", ["None"], ["", "def", "Invert", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Posterize": [[74, 77], ["PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._int_parameter"], ["", "def", "Posterize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "posterize", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Rotate": [[79, 84], ["img.rotate", "randaugment._int_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._int_parameter"], ["", "def", "Rotate", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "rotate", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Sharpness": [[86, 89], ["PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Sharpness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Sharpness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Sharpness", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Sharpness"], ["", "def", "Sharpness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Sharpness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.ShearX": [[91, 96], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter"], ["", "def", "ShearX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "v", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.ShearY": [[98, 103], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter"], ["", "def", "ShearY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "v", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.Solarize": [[105, 108], ["PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._int_parameter"], ["", "def", "Solarize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "256", "-", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.SolarizeAdd": [[110, 120], ["numpy.array().astype", "numpy.clip", "img_np.astype.astype", "PIL.Image.fromarray", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter", "random.random", "numpy.array"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._int_parameter"], ["", "def", "SolarizeAdd", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ",", "threshold", "=", "128", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "img_np", "=", "np", ".", "array", "(", "img", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "img_np", "=", "img_np", "+", "v", "\n", "img_np", "=", "np", ".", "clip", "(", "img_np", ",", "0", ",", "255", ")", "\n", "img_np", "=", "img_np", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img_np", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "threshold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.TranslateX": [[122, 128], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter"], ["", "def", "TranslateX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "0", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "v", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.TranslateY": [[130, 136], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter"], ["", "def", "TranslateY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "1", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._float_parameter": [[138, 140], ["float"], "function", ["None"], ["", "def", "_float_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "float", "(", "v", ")", "*", "max_v", "/", "PARAMETER_MAX", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment._int_parameter": [[142, 144], ["int"], "function", ["None"], ["", "def", "_int_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "int", "(", "v", "*", "max_v", "/", "PARAMETER_MAX", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.fixmatch_augment_pool": [[146, 162], ["None"], "function", ["None"], ["", "def", "fixmatch_augment_pool", "(", ")", ":", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Color", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Contrast", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Identity", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.3", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.randaugment.my_augment_pool": [[164, 182], ["None"], "function", ["None"], ["", "def", "my_augment_pool", "(", ")", ":", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Color", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Contrast", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Cutout", ",", "0.2", ",", "0", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Invert", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "SolarizeAdd", ",", "110", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.45", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.45", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.BasicBlock.__init__": [[13, 40], ["torch.Module.__init__", "torch.Module.__init__", "torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_planes", ":", "int", ",", "\n", "out_planes", ":", "int", ",", "\n", "stride", ":", "int", ",", "\n", "drop_rate", ":", "float", "=", "0.0", ",", "\n", "bn_affine", ":", "bool", "=", "False", ",", "\n", "bn_momentum", ":", "bool", "=", "False", ",", "\n", "activate_before_residual", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "        ", "nn", ".", "Module", ".", "__init__", "(", "self", ")", "\n", "# super(BasicBlock, self).__init__()", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ",", "affine", "=", "bn_affine", ",", "\n", "momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ",", "affine", "=", "bn_affine", ",", "\n", "momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "drop_rate", "\n", "self", ".", "equalInOut", "=", "(", "in_planes", "==", "out_planes", ")", "\n", "self", ".", "convShortcut", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "activate_before_residual", "=", "activate_before_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.BasicBlock.forward": [[41, 51], ["net.BasicBlock.relu2", "net.BasicBlock.conv2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "net.BasicBlock.relu1", "net.BasicBlock.relu1", "net.BasicBlock.bn2", "torch.dropout", "torch.dropout", "torch.dropout", "net.BasicBlock.bn1", "net.BasicBlock.bn1", "net.BasicBlock.conv1", "net.BasicBlock.convShortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "if", "not", "self", ".", "equalInOut", "and", "self", ".", "activate_before_residual", "==", "True", ":", "\n", "            ", "x", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "relu2", "(", "self", ".", "bn2", "(", "self", ".", "conv1", "(", "out", "if", "self", ".", "equalInOut", "else", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "torch", ".", "add", "(", "x", "if", "self", ".", "equalInOut", "else", "self", ".", "convShortcut", "(", "x", ")", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.NetworkBlock.__init__": [[54, 68], ["torch.Module.__init__", "net.NetworkBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.NetworkBlock._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nb_layers", ":", "int", ",", "\n", "in_planes", ":", "int", ",", "\n", "out_planes", ":", "int", ",", "\n", "block", ":", "BasicBlock", ",", "\n", "stride", ":", "int", ",", "\n", "drop_rate", ":", "float", "=", "0.0", ",", "\n", "bn_affine", ":", "bool", "=", "False", ",", "\n", "bn_momentum", ":", "float", "=", "0.1", ",", "\n", "activate_before_residual", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "        ", "super", "(", "NetworkBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "out_planes", ",", "\n", "nb_layers", ",", "stride", ",", "drop_rate", ",", "\n", "bn_affine", ",", "bn_momentum", ",", "activate_before_residual", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.NetworkBlock._make_layer": [[69, 85], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "\n", "block", ":", "BasicBlock", ",", "\n", "in_planes", ":", "int", ",", "\n", "out_planes", ":", "int", ",", "\n", "nb_layers", ":", "int", ",", "\n", "stride", ":", "int", ",", "\n", "drop_rate", ":", "float", ",", "\n", "bn_affine", ":", "bool", ",", "\n", "bn_momentum", ":", "float", ",", "\n", "activate_before_residual", ":", "bool", ")", "->", "nn", ".", "Sequential", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "nb_layers", ")", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "i", "==", "0", "and", "in_planes", "or", "out_planes", ",", "out_planes", ",", "\n", "i", "==", "0", "and", "stride", "or", "1", ",", "drop_rate", ",", "bn_affine", ",", "\n", "bn_momentum", ",", "activate_before_residual", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.NetworkBlock.forward": [[86, 88], ["net.NetworkBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.WideResNet.__init__": [[94, 160], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "net.NetworkBlock", "net.NetworkBlock", "net.NetworkBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "net.WideResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "isinstance", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__"], ["def", "__init__", "(", "self", ",", "\n", "depth", ":", "int", ",", "\n", "widen_factor", ":", "int", "=", "1", ",", "\n", "drop_rate", ":", "float", "=", "0.0", ",", "\n", "num_cls", ":", "int", "=", "2", ",", "\n", "inp_channels", ":", "int", "=", "3", ",", "\n", "bn_affine", ":", "bool", "=", "False", ",", "\n", "bn_momentum", ":", "float", "=", "0.1", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        Args:\n            - depth: Depth of WRN\n            - num_task: Number of tasks (number of classification layers)\n            - num_cls: Number of classes for each task (same for all tasks)\n            - widen_factor: The scaling factor for the number of channels\n            - drop_rate: Dropout prob. that element is zeroed out\n            - inp_channels: Number of channels in the input\n        \"\"\"", "\n", "super", "(", "WideResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels", "=", "[", "16", ",", "16", "*", "widen_factor", ",", "32", "*", "widen_factor", ",", "64", "*", "widen_factor", "]", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", "\n", "n", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "block", "=", "BasicBlock", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inp_channels", ",", "nChannels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "block1", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "0", "]", ",", "nChannels", "[", "1", "]", ",", "\n", "block", ",", "1", ",", "drop_rate", ",", "bn_affine", ",", "\n", "bn_momentum", ",", "True", ")", "\n", "self", ".", "block2", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "1", "]", ",", "nChannels", "[", "2", "]", ",", "\n", "block", ",", "2", ",", "drop_rate", ",", "bn_affine", ",", "\n", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "2", "]", ",", "nChannels", "[", "3", "]", ",", "\n", "block", ",", "2", ",", "drop_rate", ",", "bn_affine", ",", "\n", "bn_momentum", ")", "\n", "\n", "# global average pooling to accomodate flexible input image sizes", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nChannels", "[", "3", "]", ",", "affine", "=", "bn_affine", ",", "\n", "momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "# Multiple linear layers, one for each task", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "nChannels", "[", "3", "]", ",", "num_cls", ")", "\n", "self", ".", "nChannels", "=", "nChannels", "[", "3", "]", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "\n", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "and", "bn_affine", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "and", "not", "bn_affine", ":", "\n", "                ", "if", "m", ".", "weight", "is", "None", ":", "\n", "                   ", "m", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "\n", "m", ".", "running_var", ".", "shape", ",", "dtype", "=", "m", ".", "running_var", ".", "dtype", ",", "\n", "device", "=", "m", ".", "running_var", ".", "device", ")", ",", "requires_grad", "=", "False", ")", "\n", "", "if", "m", ".", "bias", "is", "None", ":", "\n", "                    ", "m", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "\n", "m", ".", "running_var", ".", "shape", ",", "dtype", "=", "m", ".", "running_var", ".", "dtype", ",", "\n", "device", "=", "m", ".", "running_var", ".", "device", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.WideResNet.forward": [[161, 174], ["net.WideResNet.conv1", "net.WideResNet.block1", "net.WideResNet.block2", "net.WideResNet.block3", "net.WideResNet.relu", "net.WideResNet.pool", "out.view.view.view", "net.WideResNet.fc", "net.WideResNet.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "\n", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "block1", "(", "out", ")", "\n", "out", "=", "self", ".", "block2", "(", "out", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "pool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "nChannels", ")", "\n", "\n", "# Fill logits with zeros", "\n", "logits", "=", "self", ".", "fc", "(", "out", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.ParticlesNet.__init__": [[178, 195], ["torch.Module.__init__", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "range", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "net", "len", "net.ParticlesNet.particles[].to", "range", "range", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "netargs", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "ParticlesNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ngpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "particles", "=", "nn", ".", "ModuleList", "(", "[", "net", "(", "**", "netargs", ")", "for", "i", "in", "range", "(", "cfg", ".", "ref", ".", "particles", ")", "]", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "devs", "=", "[", "'cuda:%d'", "%", "(", "i", "%", "ngpus", ")", "for", "i", "in", "range", "(", "cfg", ".", "ref", ".", "particles", ")", "]", "\n", "self", ".", "dev", "=", "'cuda:0'", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "particles", ")", ")", ":", "\n", "                ", "self", ".", "particles", "[", "i", "]", ".", "to", "(", "'cuda:%d'", "%", "(", "i", "%", "ngpus", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "devs", "=", "[", "'cpu'", "for", "i", "in", "range", "(", "cfg", ".", "ref", ".", "particles", ")", "]", "\n", "self", ".", "dev", "=", "'cpu'", "\n", "\n", "", "self", ".", "logprior", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "cfg", ".", "ref", ".", "particles", ")", ".", "to", "(", "self", ".", "dev", ")", ",", "\n", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.ParticlesNet.forward": [[196, 202], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "pred.to", "x.to", "range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nparts", "=", "self", ".", "cfg", ".", "ref", ".", "particles", "\n", "out", "=", "[", "self", ".", "particles", "[", "i", "]", "(", "x", ".", "to", "(", "self", ".", "devs", "[", "i", "]", ",", "non_blocking", "=", "True", ")", ")", "for", "i", "in", "range", "(", "nparts", ")", "]", "\n", "out", "=", "[", "pred", ".", "to", "(", "self", ".", "dev", ",", "non_blocking", "=", "True", ")", "for", "pred", "in", "out", "]", "\n", "out", "=", "torch", ".", "stack", "(", "out", ",", "dim", "=", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.ParticlesNet.get_prior": [[203, 206], ["torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax"], "methods", ["None"], ["", "def", "get_prior", "(", "self", ")", ":", "\n", "        ", "prior", "=", "softmax", "(", "self", ".", "logprior", ",", "dim", "=", "0", ")", "\n", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.ParticlesNet.get_opt_params": [[207, 218], ["net.ParticlesNet.named_parameters", "no_decay.append", "decay.append"], "methods", ["None"], ["", "def", "get_opt_params", "(", "self", ")", ":", "\n", "        ", "decay", ",", "no_decay", "=", "[", "]", ",", "[", "]", "\n", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "requires_grad", ":", "\n", "                ", "continue", "\n", "", "if", "name", "==", "'logprior'", "or", "\".bn\"", "in", "name", ":", "\n", "                ", "no_decay", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "                ", "decay", ".", "append", "(", "param", ")", "\n", "", "", "return", "[", "{", "'params'", ":", "no_decay", ",", "'weight_decay'", ":", "0.", "}", ",", "\n", "{", "'params'", ":", "decay", ",", "'weight_decay'", ":", "self", ".", "cfg", ".", "hp", ".", "wd", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.__init__": [[221, 231], ["torch.Module.__init__", "copy.deepcopy", "net.EMA.shadow.parameters", "net.EMA.shadow.eval", "param.detach_"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "decay", ":", "float", "=", "0.999", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decay", "=", "decay", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "shadow", "=", "deepcopy", "(", "self", ".", "model", ")", "\n", "\n", "for", "param", "in", "self", ".", "shadow", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "self", ".", "shadow", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.update_ema": [[232, 247], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict.items", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict.items", "net.EMA.model.named_parameters", "net.EMA.shadow.named_parameters", "shadow_params[].sub_", "net.EMA.model.named_buffers", "net.EMA.shadow.named_buffers", "shadow_buffers[].copy_"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "update_ema", "(", "self", ")", ":", "\n", "        ", "model_params", "=", "OrderedDict", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ")", "\n", "shadow_params", "=", "OrderedDict", "(", "self", ".", "shadow", ".", "named_parameters", "(", ")", ")", "\n", "\n", "# shadow = decay*shadow + (1-decay)*param", "\n", "for", "name", ",", "param", "in", "model_params", ".", "items", "(", ")", ":", "\n", "            ", "shadow_params", "[", "name", "]", ".", "sub_", "(", "(", "1.", "-", "self", ".", "decay", ")", "*", "(", "shadow_params", "[", "name", "]", "-", "param", ")", ")", "\n", "\n", "", "model_buffers", "=", "OrderedDict", "(", "self", ".", "model", ".", "named_buffers", "(", ")", ")", "\n", "shadow_buffers", "=", "OrderedDict", "(", "self", ".", "shadow", ".", "named_buffers", "(", ")", ")", "\n", "\n", "# Copy batch norm buffers exactly", "\n", "for", "name", ",", "buff", "in", "model_buffers", ".", "items", "(", ")", ":", "\n", "            ", "shadow_buffers", "[", "name", "]", ".", "copy_", "(", "buff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.forward": [[248, 253], ["net.EMA.shadow", "net.EMA.model"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ":", "Tensor", ",", "use_ema", "=", "False", ")", "->", "Tensor", ":", "\n", "        ", "if", "use_ema", ":", "\n", "            ", "return", "self", ".", "shadow", "(", "inputs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.get_opt_params": [[254, 265], ["net.EMA.named_parameters", "no_decay.append", "decay.append"], "methods", ["None"], ["", "", "def", "get_opt_params", "(", "self", ",", "wd", ")", ":", "\n", "        ", "decay", ",", "no_decay", "=", "[", "]", ",", "[", "]", "\n", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "requires_grad", ":", "\n", "                ", "continue", "\n", "", "if", "'logprior'", "in", "name", "or", "\".bn\"", "in", "name", ":", "\n", "                ", "no_decay", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "                ", "decay", ".", "append", "(", "param", ")", "\n", "", "", "return", "[", "{", "'params'", ":", "no_decay", ",", "'weight_decay'", ":", "0.", "}", ",", "\n", "{", "'params'", ":", "decay", ",", "'weight_decay'", ":", "wd", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.EMA.get_prior": [[266, 269], ["torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax"], "methods", ["None"], ["", "def", "get_prior", "(", "self", ")", ":", "\n", "        ", "prior", "=", "softmax", "(", "self", ".", "model", ".", "logprior", ",", "dim", "=", "0", ")", "\n", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.net.create_net": [[271, 281], ["net.ParticlesNet", "net.EMA"], "function", ["None"], ["", "", "def", "create_net", "(", "cfg", ")", ":", "\n", "# The Batch norm momentum is smaller than usuual.", "\n", "# This parameter is the rate at which running mean/std parameters are updated.", "\n", "    ", "resnet_args", "=", "{", "'depth'", ":", "28", ",", "'widen_factor'", ":", "2", ",", "\n", "'drop_rate'", ":", "0.0", ",", "'num_cls'", ":", "10", ",", "\n", "'inp_channels'", ":", "3", ",", "'bn_affine'", ":", "True", ",", "\n", "'bn_momentum'", ":", "0.001", "}", "\n", "particles", "=", "ParticlesNet", "(", "WideResNet", ",", "resnet_args", ",", "cfg", ")", "\n", "net", "=", "EMA", "(", "particles", ",", "decay", "=", "0.999", ")", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.TransformUnlabeled.__init__": [[102, 117], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomCrop", "utils.randaugment.RandAugmentMC", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "weak", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "size", "=", "32", ",", "\n", "padding", "=", "4", ",", "\n", "padding_mode", "=", "'reflect'", ")", "]", ")", "\n", "self", ".", "strong", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "size", "=", "32", ",", "\n", "padding", "=", "4", ",", "\n", "padding_mode", "=", "'reflect'", ")", ",", "\n", "RandAugmentMC", "(", "n", "=", "2", ",", "m", "=", "10", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.TransformUnlabeled.__call__": [[118, 122], ["data.TransformUnlabeled.weak", "data.TransformUnlabeled.strong", "data.TransformUnlabeled.normalize", "data.TransformUnlabeled.normalize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "weak", "=", "self", ".", "weak", "(", "x", ")", "\n", "strong", "=", "self", ".", "strong", "(", "x", ")", "\n", "return", "self", ".", "normalize", "(", "weak", ")", ",", "self", ".", "normalize", "(", "strong", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__": [[125, 135], ["torchvision.datasets.CIFAR10.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "indexs", ",", "train", "=", "True", ",", "\n", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root", ",", "train", "=", "train", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "download", "=", "download", ")", "\n", "if", "indexs", "is", "not", "None", ":", "\n", "            ", "self", ".", "data", "=", "self", ".", "data", "[", "indexs", "]", "\n", "self", ".", "targets", "=", "np", ".", "array", "(", "self", ".", "targets", ")", "[", "indexs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.CIFAR10SSL.__getitem__": [[136, 146], ["PIL.Image.fromarray", "data.CIFAR10SSL.transform", "data.CIFAR10SSL.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "", "return", "img", ",", "target", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.get_dataloaders": [[11, 35], ["data.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.RandomSampler", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.get_dataset"], ["def", "get_dataloaders", "(", "cfg", ")", ":", "\n", "    ", "datasets", "=", "get_dataset", "(", "cfg", ")", "\n", "\n", "labeled_trainloader", "=", "DataLoader", "(", "\n", "datasets", "[", "0", "]", ",", "\n", "sampler", "=", "RandomSampler", "(", "datasets", "[", "0", "]", ")", ",", "\n", "batch_size", "=", "cfg", ".", "hp", ".", "bs", ",", "\n", "num_workers", "=", "cfg", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ")", "\n", "\n", "unlabeled_trainloader", "=", "DataLoader", "(", "\n", "datasets", "[", "1", "]", ",", "\n", "sampler", "=", "RandomSampler", "(", "datasets", "[", "1", "]", ")", ",", "\n", "batch_size", "=", "cfg", ".", "hp", ".", "bs", "*", "cfg", ".", "ref", ".", "\u03bc", ",", "\n", "num_workers", "=", "cfg", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ")", "\n", "\n", "test_loader", "=", "DataLoader", "(", "\n", "datasets", "[", "2", "]", ",", "\n", "sampler", "=", "SequentialSampler", "(", "datasets", "[", "2", "]", ")", ",", "\n", "batch_size", "=", "cfg", ".", "hp", ".", "bs", ",", "\n", "num_workers", "=", "cfg", ".", "num_workers", ")", "\n", "\n", "return", "(", "labeled_trainloader", ",", "unlabeled_trainloader", ",", "test_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.get_dataset": [[37, 56], ["data.get_transforms", "torchvision.datasets.CIFAR10", "data.split_dataset", "data.CIFAR10SSL", "data.CIFAR10SSL", "torchvision.datasets.CIFAR10"], "function", ["home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.get_transforms", "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.split_dataset"], ["", "def", "get_dataset", "(", "cfg", ")", ":", "\n", "    ", "all_transforms", "=", "get_transforms", "(", ")", "\n", "\n", "# Split dataset into labeled and unlabeled dataset", "\n", "base_dataset", "=", "datasets", ".", "CIFAR10", "(", "\"./data/\"", ",", "train", "=", "True", ",", "download", "=", "True", ")", "\n", "train_labeled_idxs", ",", "train_unlabeled_idxs", "=", "split_dataset", "(", "cfg", ",", "base_dataset", ".", "targets", ")", "\n", "\n", "# Get datasets", "\n", "train_labeled_dataset", "=", "CIFAR10SSL", "(", "\n", "\"./data/\"", ",", "train_labeled_idxs", ",", "\n", "train", "=", "True", ",", "transform", "=", "all_transforms", "[", "0", "]", ")", "\n", "train_unlabeled_dataset", "=", "CIFAR10SSL", "(", "\n", "\"./data/\"", ",", "train_unlabeled_idxs", ",", "\n", "train", "=", "True", ",", "transform", "=", "all_transforms", "[", "1", "]", ")", "\n", "test_dataset", "=", "datasets", ".", "CIFAR10", "(", "\n", "\"./data/\"", ",", "train", "=", "False", ",", "\n", "transform", "=", "all_transforms", "[", "2", "]", ",", "download", "=", "False", ")", "\n", "\n", "return", "train_labeled_dataset", ",", "train_unlabeled_dataset", ",", "test_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.split_dataset": [[58, 81], ["len", "numpy.array", "numpy.random.default_rng", "range", "numpy.array", "numpy.array", "numpy.setdiff1d", "math.ceil", "numpy.hstack", "numpy.random.shuffle", "set", "np.random.default_rng.choice", "np.hstack.extend", "range", "numpy.where", "len", "range"], "function", ["None"], ["", "def", "split_dataset", "(", "cfg", ",", "labels", ")", ":", "\n", "    ", "num_classes", "=", "len", "(", "set", "(", "labels", ")", ")", "\n", "label_per_class", "=", "cfg", ".", "data", ".", "num_labeled", "//", "num_classes", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "\n", "# Get labaled and unlabeled indices", "\n", "labeled_idx", "=", "[", "]", "\n", "rng", "=", "np", ".", "random", ".", "default_rng", "(", "cfg", ".", "seed", ")", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "idx", "=", "np", ".", "where", "(", "labels", "==", "i", ")", "[", "0", "]", "\n", "idx", "=", "rng", ".", "choice", "(", "idx", ",", "label_per_class", ",", "False", ")", "\n", "labeled_idx", ".", "extend", "(", "idx", ")", "\n", "", "labeled_idx", "=", "np", ".", "array", "(", "labeled_idx", ")", "\n", "\n", "unlabeled_idx", "=", "np", ".", "array", "(", "range", "(", "len", "(", "labels", ")", ")", ")", "\n", "unlabeled_idx", "=", "np", ".", "setdiff1d", "(", "unlabeled_idx", ",", "labeled_idx", ")", "\n", "\n", "# Duplicate indices to run dataloader till eval step", "\n", "num_expand_x", "=", "math", ".", "ceil", "(", "cfg", ".", "hp", ".", "bs", "*", "cfg", ".", "steps", ".", "updates", "/", "cfg", ".", "data", ".", "num_labeled", ")", "\n", "labeled_idx", "=", "np", ".", "hstack", "(", "[", "labeled_idx", "for", "_", "in", "range", "(", "num_expand_x", ")", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "labeled_idx", ")", "\n", "\n", "return", "labeled_idx", ",", "unlabeled_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.rahul13ramesh_deep_reference_priors.utils.data.get_transforms": [[83, 99], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "data.TransformUnlabeled", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "def", "get_transforms", "(", ")", ":", "\n", "    ", "mean", "=", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", "\n", "std", "=", "(", "0.2471", ",", "0.2435", ",", "0.2616", ")", "\n", "transform_lab", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "size", "=", "32", ",", "\n", "padding", "=", "4", ",", "\n", "padding_mode", "=", "'reflect'", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "]", ")", "\n", "transform_val", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "]", ")", "\n", "return", "transform_lab", ",", "TransformUnlabeled", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", ",", "transform_val", "\n", "\n"]]}