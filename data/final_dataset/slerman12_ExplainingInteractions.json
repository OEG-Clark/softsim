{"home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.__init__": [[17, 46], ["torch.Module.__init__", "multilayer_perceptron.create_mlp", "torch.Linear", "torch.Linear", "torch.Linear", "multilayer_perceptron.MLP.create_main_effect_nets"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.create_mlp", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.create_main_effect_nets"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "num_features", ",", "\n", "hidden_units", ",", "\n", "use_main_effect_nets", "=", "False", ",", "\n", "main_effect_net_units", "=", "[", "10", ",", "10", ",", "10", ",", "10", "]", ",", "\n", "activation", "=", "nn", ".", "ELU", ",", "\n", "dropout_p", "=", "0", ",", "gelu_final_layer", "=", "False", ",", "gelu_last_layer", "=", "False", ",", "gelu_alt_layer", "=", "False", ",", "\n", "gelu_main_effects", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "hidden_units", "=", "hidden_units", "\n", "self", ".", "use_main_effect_nets", "=", "use_main_effect_nets", "\n", "self", ".", "interaction_mlp", "=", "create_mlp", "(", "[", "num_features", "]", "+", "hidden_units", "+", "[", "1", "]", ",", "activation", ",", "dropout_p", "=", "dropout_p", ",", "use_final_gelu", "=", "gelu_final_layer", ",", "use_last_gelu", "=", "gelu_last_layer", ",", "use_alt_gelu", "=", "gelu_alt_layer", ")", "\n", "\n", "if", "main_effect_net_units", "==", "[", "1", "]", ":", "\n", "            ", "use_linear", "=", "True", "\n", "", "else", ":", "\n", "            ", "use_linear", "=", "False", "\n", "", "self", ".", "use_linear", "=", "use_linear", "\n", "\n", "if", "self", ".", "use_main_effect_nets", ":", "\n", "\n", "            ", "if", "use_linear", ":", "\n", "                ", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_features", ",", "1", ",", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "univariate_mlps", "=", "self", ".", "create_main_effect_nets", "(", "\n", "num_features", ",", "main_effect_net_units", ",", "False", ",", "\"uni\"", ",", "activation", ",", "gelu_main_effects", "or", "gelu_alt_layer", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.forward": [[48, 57], ["multilayer_perceptron.MLP.interaction_mlp", "multilayer_perceptron.MLP.linear", "multilayer_perceptron.MLP.forward_main_effect_nets"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.forward_main_effect_nets"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "interaction_mlp", "(", "x", ")", "\n", "\n", "if", "self", ".", "use_main_effect_nets", ":", "\n", "            ", "if", "self", ".", "use_linear", ":", "\n", "                ", "y", "+=", "self", ".", "linear", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "y", "+=", "self", ".", "forward_main_effect_nets", "(", "x", ",", "self", ".", "univariate_mlps", ")", "\n", "", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.create_main_effect_nets": [[58, 66], ["range", "multilayer_perceptron.create_mlp", "setattr", "range", "str"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.create_mlp"], ["", "def", "create_main_effect_nets", "(", "self", ",", "num_features", ",", "hidden_units", ",", "out_bias", ",", "name", ",", "activation", ",", "use_last_gelu", "=", "False", ")", ":", "\n", "        ", "mlp_list", "=", "[", "\n", "create_mlp", "(", "[", "1", "]", "+", "hidden_units", "+", "[", "1", "]", ",", "activation", "=", "activation", ",", "out_bias", "=", "out_bias", ",", "use_final_gelu", "=", "False", ",", "use_last_gelu", "=", "use_last_gelu", ")", "\n", "for", "_", "in", "range", "(", "num_features", ")", "\n", "]", "\n", "for", "i", "in", "range", "(", "num_features", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "name", "+", "\"_\"", "+", "str", "(", "i", ")", ",", "mlp_list", "[", "i", "]", ")", "\n", "", "return", "mlp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.MLP.forward_main_effect_nets": [[67, 73], ["enumerate", "sum", "forwarded_mlps.append", "mlp"], "methods", ["None"], ["", "def", "forward_main_effect_nets", "(", "self", ",", "x", ",", "mlps", ")", ":", "\n", "        ", "forwarded_mlps", "=", "[", "]", "\n", "for", "i", ",", "mlp", "in", "enumerate", "(", "mlps", ")", ":", "\n", "            ", "forwarded_mlps", ".", "append", "(", "mlp", "(", "x", "[", ":", ",", "[", "i", "]", "]", ")", ")", "\n", "", "forwarded_mlp", "=", "sum", "(", "forwarded_mlps", ")", "\n", "return", "forwarded_mlp", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.get_weights": [[8, 14], ["model.named_parameters", "weights.append", "param.cpu().detach().numpy", "param.cpu().detach", "param.cpu"], "function", ["None"], ["def", "get_weights", "(", "model", ")", ":", "\n", "    ", "weights", "=", "[", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "\"interaction_mlp\"", "in", "name", "and", "\"weight\"", "in", "name", ":", "\n", "            ", "weights", ".", "append", "(", "param", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.create_mlp": [[75, 86], ["list", "torch.ModuleList", "range", "nn.ModuleList.append", "torch.Sequential", "nn.ModuleList.append", "nn.ModuleList.append", "nn.ModuleList.append", "torch.Linear", "nn.ModuleList.append", "len", "torch.Linear", "torch.Dropout", "int", "int", "torch.GELU", "int", "int", "activation", "torch.GELU", "len"], "function", ["None"], ["", "", "def", "create_mlp", "(", "layer_sizes", ",", "activation", "=", "nn", ".", "GELU", ",", "out_bias", "=", "True", ",", "dropout_p", "=", "0", ",", "use_final_gelu", "=", "False", ",", "use_last_gelu", "=", "False", ",", "use_alt_gelu", "=", "False", ")", ":", "\n", "    ", "ls", "=", "list", "(", "layer_sizes", ")", "\n", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "ls", ")", "-", "1", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "int", "(", "ls", "[", "i", "-", "1", "]", ")", ",", "int", "(", "ls", "[", "i", "]", ")", ")", ")", "\n", "layers", ".", "append", "(", "activation", "(", ")", "if", "(", "i", "<", "len", "(", "ls", ")", "-", "2", "or", "not", "use_final_gelu", ")", "and", "(", "i", "%", "2", "==", "0", "or", "not", "use_alt_gelu", ")", "else", "nn", ".", "GELU", "(", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Dropout", "(", "dropout_p", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "int", "(", "ls", "[", "-", "2", "]", ")", ",", "int", "(", "ls", "[", "-", "1", "]", ")", ",", "bias", "=", "out_bias", ")", ")", "\n", "if", "use_last_gelu", "or", "use_alt_gelu", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "GELU", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.train": [[88, 186], ["torch.MSELoss", "torch.device", "torch.device", "torch.device", "opt_func", "float", "range", "evaluate().item", "net.parameters", "net.eval", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "print", "enumerate", "print", "inputs.to.to", "labels.to.to", "losses.append", "print", "inputs.to.to", "labels.to.to", "opt_func.zero_grad", "net", "criterion().mean", "net.named_parameters", "opt_func.step", "criterion().mean.item", "multilayer_perceptron.train.evaluate"], "function", ["None"], ["", "def", "train", "(", "\n", "net", ",", "\n", "data_loaders", ",", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", ",", "\n", "nepochs", "=", "100", ",", "\n", "verbose", "=", "False", ",", "\n", "early_stopping", "=", "True", ",", "\n", "patience", "=", "5", ",", "\n", "l1_const", "=", "1e-4", ",", "\n", "l2_const", "=", "0", ",", "\n", "learning_rate", "=", "0.01", ",", "\n", "opt_func", "=", "optim", ".", "Adam", ",", "\n", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ",", "\n", ")", ":", "\n", "    ", "optimizer", "=", "opt_func", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "l2_const", ")", "\n", "\n", "def", "evaluate", "(", "net", ",", "data_loader", ",", "criterion", ",", "device", ")", ":", "\n", "        ", "net", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "for", "inputs", ",", "labels", "in", "data_loader", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "loss", "=", "criterion", "(", "net", "(", "inputs", ")", ",", "labels", ")", ".", "cpu", "(", ")", ".", "data", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "return", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "\n", "", "best_loss", "=", "float", "(", "\"inf\"", ")", "\n", "best_net", "=", "None", "\n", "\n", "if", "\"val\"", "not", "in", "data_loaders", ":", "\n", "        ", "early_stopping", "=", "False", "\n", "\n", "", "patience_counter", "=", "0", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"starting to train\"", ")", "\n", "if", "early_stopping", ":", "\n", "            ", "print", "(", "\"early stopping enabled\"", ")", "\n", "\n", "", "", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "        ", "running_loss", "=", "0.0", "\n", "run_count", "=", "0", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "data_loaders", "[", "\"train\"", "]", ",", "0", ")", ":", "\n", "            ", "inputs", ",", "labels", "=", "data", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", ".", "mean", "(", ")", "\n", "\n", "reg_loss", "=", "0", "\n", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "                ", "if", "\"interaction_mlp\"", "in", "name", "and", "\"weight\"", "in", "name", ":", "\n", "                    ", "reg_loss", "+=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "param", ")", ")", "\n", "", "", "(", "loss", "+", "reg_loss", "*", "l1_const", ")", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "run_count", "+=", "1", "\n", "\n", "", "if", "epoch", "%", "1", "==", "0", ":", "\n", "            ", "key", "=", "\"val\"", "if", "\"val\"", "in", "data_loaders", "else", "\"train\"", "\n", "val_loss", "=", "evaluate", "(", "net", ",", "data_loaders", "[", "key", "]", ",", "criterion", ",", "device", ")", "\n", "\n", "if", "epoch", "%", "2", "==", "0", ":", "\n", "                ", "if", "verbose", ":", "\n", "                    ", "print", "(", "\n", "\"[epoch %d, total %d] train loss: %.4f, val loss: %.4f\"", "\n", "%", "(", "epoch", "+", "1", ",", "nepochs", ",", "running_loss", "/", "run_count", ",", "val_loss", ")", "\n", ")", "\n", "", "", "if", "early_stopping", ":", "\n", "                ", "if", "val_loss", "<", "best_loss", ":", "\n", "                    ", "best_loss", "=", "val_loss", "\n", "best_net", "=", "copy", ".", "deepcopy", "(", "net", ")", "\n", "patience_counter", "=", "0", "\n", "", "else", ":", "\n", "                    ", "patience_counter", "+=", "1", "\n", "if", "patience_counter", ">", "patience", ":", "\n", "                        ", "net", "=", "best_net", "\n", "val_loss", "=", "best_loss", "\n", "if", "verbose", ":", "\n", "                            ", "print", "(", "\"early stopping!\"", ")", "\n", "", "break", "\n", "\n", "", "", "", "prev_loss", "=", "running_loss", "\n", "running_loss", "=", "0.0", "\n", "\n", "", "", "if", "\"test\"", "in", "data_loaders", ":", "\n", "        ", "key", "=", "\"test\"", "\n", "", "elif", "\"val\"", "in", "data_loaders", ":", "\n", "        ", "key", "=", "\"val\"", "\n", "", "else", ":", "\n", "        ", "key", "=", "\"train\"", "\n", "", "test_loss", "=", "evaluate", "(", "net", ",", "data_loaders", "[", "key", "]", ",", "criterion", ",", "device", ")", ".", "item", "(", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"Finished Training. Test loss: \"", ",", "test_loss", ")", "\n", "\n", "", "return", "net", ",", "test_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.print_latex_tables": [[21, 62], ["enumerate", "print", "enumerate", "print", "len", "zip", "zip", "zip", "zip", "numpy.around().tolist", "numpy.around().tolist", "numpy.around().tolist", "numpy.around().tolist", "formatted_means[].tolist", "formatted_stds[].tolist", "formatted_means[].tolist", "formatted_stds[].tolist", "numpy.around", "numpy.around", "numpy.around", "len", "numpy.around", "len", "numpy.mean", "numpy.mean", "len", "len", "numpy.mean", "numpy.mean"], "function", ["None"], ["", "def", "print_latex_tables", "(", "row_names", ",", "tables", ",", "formatted_means", ",", "formatted_stds", ",", "line_marker", "=", "\"|\"", ")", ":", "\n", "    ", "col_index", "=", "0", "\n", "running_latex", "=", "\"\"", "\n", "for", "col_names", "in", "tables", "[", ":", "-", "1", "]", ":", "\n", "        ", "latex", "=", "r\"\"\"\\begin{center}\n                    \\begin{tabular}{l|\"\"\"", "+", "\"\"", ".", "join", "(", "\"c|\"", "if", "line_marker", "in", "c", "else", "\"c\"", "for", "c", "in", "col_names", ")", "+", "\"\"\"}\n                    \\hline & \"\"\"", "+", "\" & \"", ".", "join", "(", "col_names", ")", "+", "r\"\"\" \\\\\n                    \\hline\"\"\"", "\n", "for", "row", ",", "row_name", "in", "enumerate", "(", "row_names", ")", ":", "\n", "            ", "latex", "+=", "row_name", "+", "\" & \"", "+", "\" & \"", ".", "join", "(", "\n", "[", "\"${} \\pm {}$\"", ".", "format", "(", "item", "[", "0", "]", ",", "item", "[", "1", "]", ")", "for", "item", "in", "zip", "(", "formatted_means", "[", "row", "]", ".", "tolist", "(", ")", "[", "col_index", ":", "col_index", "+", "len", "(", "col_names", ")", "]", ",", "formatted_stds", "[", "row", "]", ".", "tolist", "(", ")", "[", "col_index", ":", "col_index", "+", "len", "(", "col_names", ")", "]", ")", "]", ")", "+", "r\"\"\" \\\\\n            \"\"\"", "\n", "", "latex", "+=", "r\"\"\"\\hline average\"\"\"", "+", "\" & \"", "+", "\" & \"", ".", "join", "(", "[", "\"${} \\pm {}$\"", ".", "format", "(", "item", "[", "0", "]", ",", "item", "[", "1", "]", ")", "for", "item", "in", "\n", "zip", "(", "np", ".", "around", "(", "np", ".", "mean", "(", "formatted_means", ",", "0", ")", ",", "decimals", "=", "3", ")", ".", "tolist", "(", ")", "[", "\n", "col_index", ":", "col_index", "+", "len", "(", "col_names", ")", "]", ",", "\n", "np", ".", "around", "(", "np", ".", "mean", "(", "formatted_stds", ",", "0", ")", ",", "decimals", "=", "3", ")", ".", "tolist", "(", ")", "[", "\n", "col_index", ":", "col_index", "+", "len", "(", "col_names", ")", "]", ")", "]", ")", "+", "r\"\"\" \\\\\n                    \\hline\n                    \\end{tabular}\n                    \\end{center}\"\"\"", "\n", "\n", "print", "(", "latex", ")", "\n", "col_index", "+=", "len", "(", "col_names", ")", "\n", "running_latex", "+=", "latex", "\n", "\n", "", "latex", "=", "r\"\"\"\\begin{center}\n                \\begin{tabular}{l|\"\"\"", "+", "\"\"", ".", "join", "(", "\"c|\"", "if", "line_marker", "in", "c", "else", "\"c\"", "for", "c", "in", "tables", "[", "-", "1", "]", ")", "+", "\"\"\"}\n                \\hline & \"\"\"", "+", "\" & \"", ".", "join", "(", "tables", "[", "-", "1", "]", ")", "+", "r\"\"\" \\\\\n                \\hline\"\"\"", "\n", "for", "row", ",", "row_name", "in", "enumerate", "(", "row_names", ")", ":", "\n", "        ", "latex", "+=", "row_name", "+", "\" & \"", "+", "\" & \"", ".", "join", "(", "[", "\"${} \\pm {}$\"", ".", "format", "(", "item", "[", "0", "]", ",", "item", "[", "1", "]", ")", "for", "item", "in", "zip", "(", "formatted_means", "[", "row", "]", ".", "tolist", "(", ")", "[", "col_index", ":", "]", ",", "formatted_stds", "[", "row", "]", ".", "tolist", "(", ")", "[", "col_index", ":", "]", ")", "]", ")", "+", "r\"\"\" \\\\\n        \"\"\"", "\n", "", "latex", "+=", "r\"\"\"\\hline average\"\"\"", "+", "\" & \"", "+", "\" & \"", ".", "join", "(", "\n", "[", "\"${} \\pm {}$\"", ".", "format", "(", "item", "[", "0", "]", ",", "item", "[", "1", "]", ")", "for", "item", "in", "zip", "(", "np", ".", "around", "(", "np", ".", "mean", "(", "formatted_means", ",", "0", ")", ",", "decimals", "=", "3", ")", ".", "tolist", "(", ")", "[", "col_index", ":", "]", ",", "np", ".", "around", "(", "np", ".", "mean", "(", "formatted_stds", ",", "0", ")", ",", "decimals", "=", "3", ")", ".", "tolist", "(", ")", "[", "col_index", ":", "]", ")", "]", ")", "+", "r\"\"\" \\\\\n                \\hline\n                \\end{tabular}\n                \\end{center}\"\"\"", "\n", "\n", "print", "(", "latex", ")", "\n", "running_latex", "+=", "latex", "\n", "return", "running_latex", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.powerset": [[64, 67], ["list", "itertools.chain.from_iterable", "itertools.combinations", "range", "len"], "function", ["None"], ["", "def", "powerset", "(", "iterable", ")", ":", "\n", "    ", "s", "=", "list", "(", "iterable", ")", "\n", "return", "chain", ".", "from_iterable", "(", "combinations", "(", "s", ",", "r", ")", "for", "r", "in", "range", "(", "1", ",", "len", "(", "s", ")", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_1": [[69, 72], ["numpy.log", "numpy.sqrt", "numpy.arcsin", "numpy.sqrt"], "function", ["None"], ["", "def", "f_1", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "pi", "**", "(", "x", "[", "0", "]", "*", "x", "[", "1", "]", ")", "*", "np", ".", "sqrt", "(", "2", "*", "x", "[", "2", "]", ")", "-", "(", "np", ".", "arcsin", "(", "x", "[", "3", "]", ")", ")", "+", "np", ".", "log", "(", "x", "[", "2", "]", "+", "x", "[", "4", "]", ")", "-", "(", "x", "[", "8", "]", "/", "x", "[", "9", "]", ")", "*", "np", ".", "sqrt", "(", "x", "[", "6", "]", "/", "x", "[", "7", "]", ")", "-", "x", "[", "1", "]", "*", "x", "[", "6", "]", ",", "[", "{", "0", ",", "1", ",", "2", "}", ",", "{", "2", ",", "4", "}", ",", "{", "6", ",", "7", ",", "8", ",", "9", "}", ",", "{", "1", ",", "6", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_2": [[74, 80], ["numpy.log", "numpy.sqrt", "numpy.arcsin", "numpy.sqrt", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "f_2", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "pi", "**", "(", "x", "[", "0", "]", "*", "x", "[", "1", "]", ")", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "abs", "(", "x", "[", "2", "]", ")", ")", "-", "(", "np", ".", "arcsin", "(", "0.5", "*", "x", "[", "3", "]", ")", ")", "+", "np", ".", "log", "(", "\n", "np", ".", "abs", "(", "x", "[", "2", "]", "+", "x", "[", "4", "]", ")", "+", "1", ")", "-", "(", "x", "[", "8", "]", "/", "(", "1", "+", "np", ".", "abs", "(", "x", "[", "9", "]", ")", ")", ")", "*", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "x", "[", "6", "]", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "x", "[", "7", "]", ")", ")", ")", "-", "x", "[", "1", "]", "*", "x", "[", "6", "]", ",", "[", "{", "0", ",", "1", ",", "2", "}", ",", "{", "2", ",", "4", "}", ",", "\n", "{", "6", ",", "7", ",", "8", ",", "9", "}", ",", "\n", "{", "1", ",", "6", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_3": [[82, 86], ["numpy.log", "numpy.exp", "numpy.abs", "numpy.absolute", "numpy.abs"], "function", ["None"], ["", "def", "f_3", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "exp", "(", "np", ".", "abs", "(", "x", "[", "0", "]", "-", "x", "[", "1", "]", ")", ")", "+", "np", ".", "abs", "(", "x", "[", "1", "]", "*", "x", "[", "2", "]", ")", "-", "(", "(", "x", "[", "2", "]", ")", "**", "2", ")", "**", "np", ".", "absolute", "(", "x", "[", "3", "]", ")", "+", "np", ".", "log", "(", "x", "[", "3", "]", "**", "2", "+", "x", "[", "4", "]", "**", "2", "+", "x", "[", "6", "]", "**", "2", "+", "x", "[", "7", "]", "**", "2", ")", "+", "x", "[", "8", "]", "+", "1.", "/", "(", "1", "+", "x", "[", "9", "]", "**", "2", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "1", ",", "2", "}", ",", "{", "2", ",", "3", "}", ",", "{", "3", ",", "4", ",", "6", ",", "7", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_4": [[88, 93], ["numpy.log", "numpy.exp", "numpy.abs", "numpy.absolute", "numpy.abs"], "function", ["None"], ["", "def", "f_4", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "exp", "(", "np", ".", "abs", "(", "x", "[", "0", "]", "-", "x", "[", "1", "]", ")", ")", "+", "np", ".", "abs", "(", "x", "[", "1", "]", "*", "x", "[", "2", "]", ")", "-", "(", "(", "x", "[", "2", "]", ")", "**", "2", ")", "**", "np", ".", "absolute", "(", "x", "[", "3", "]", ")", "+", "(", "x", "[", "0", "]", "*", "x", "[", "3", "]", ")", "**", "2", "+", "np", ".", "log", "(", "x", "[", "3", "]", "**", "2", "+", "x", "[", "4", "]", "**", "2", "+", "x", "[", "6", "]", "**", "2", "+", "x", "[", "7", "]", "**", "2", ")", "+", "x", "[", "8", "]", "+", "1.", "/", "(", "1", "+", "x", "[", "9", "]", "**", "2", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "1", ",", "2", "}", ",", "\n", "{", "2", ",", "3", "}", ",", "{", "0", ",", "3", "}", ",", "\n", "{", "3", ",", "4", ",", "6", ",", "7", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_5": [[95, 99], ["numpy.abs", "numpy.sqrt", "numpy.abs"], "function", ["None"], ["", "def", "f_5", "(", "x", ")", ":", "\n", "    ", "return", "1.", "/", "(", "1", "+", "x", "[", "0", "]", "**", "2", "+", "x", "[", "1", "]", "**", "2", "+", "x", "[", "2", "]", "**", "2", ")", "+", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "x", "[", "3", "]", "+", "x", "[", "4", "]", ")", ")", "+", "np", ".", "abs", "(", "x", "[", "5", "]", "+", "x", "[", "6", "]", ")", "+", "x", "[", "7", "]", "*", "x", "[", "\n", "8", "]", "*", "x", "[", "9", "]", ",", "[", "{", "0", ",", "1", ",", "2", "}", ",", "{", "3", ",", "4", "}", ",", "{", "5", ",", "6", "}", ",", "{", "7", ",", "8", ",", "9", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_6": [[101, 104], ["numpy.sqrt", "numpy.cos", "numpy.exp", "numpy.exp", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "f_6", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "exp", "(", "np", ".", "abs", "(", "x", "[", "0", "]", "*", "x", "[", "1", "]", ")", "+", "1", ")", "-", "np", ".", "exp", "(", "np", ".", "abs", "(", "x", "[", "2", "]", "+", "x", "[", "3", "]", ")", "+", "1", ")", "+", "np", ".", "cos", "(", "x", "[", "4", "]", "+", "x", "[", "5", "]", "-", "x", "[", "7", "]", ")", "+", "np", ".", "sqrt", "(", "\n", "x", "[", "7", "]", "**", "2", "+", "x", "[", "8", "]", "**", "2", "+", "x", "[", "9", "]", "**", "2", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "2", ",", "3", "}", ",", "{", "4", ",", "5", ",", "7", "}", ",", "{", "7", ",", "8", ",", "9", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_7": [[106, 110], ["numpy.sum", "numpy.max", "numpy.abs", "numpy.abs", "numpy.arctan", "numpy.arctan", "numpy.zeros"], "function", ["None"], ["", "def", "f_7", "(", "x", ")", ":", "\n", "    ", "return", "(", "np", ".", "arctan", "(", "x", "[", "0", "]", ")", "+", "np", ".", "arctan", "(", "x", "[", "1", "]", ")", ")", "**", "2", "+", "np", ".", "max", "(", "(", "x", "[", "2", "]", "*", "x", "[", "3", "]", "+", "x", "[", "5", "]", ",", "np", ".", "zeros", "(", "x", ".", "shape", "[", "1", "]", ")", ")", ",", "0", ")", "-", "(", "1", "+", "(", "x", "[", "3", "]", "*", "x", "[", "4", "]", "*", "x", "[", "5", "]", "*", "x", "[", "6", "]", "*", "x", "[", "7", "]", ")", ")", "**", "-", "2", "+", "(", "np", ".", "abs", "(", "x", "[", "6", "]", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "x", "[", "8", "]", ")", ")", ")", "**", "5", "+", "np", ".", "sum", "(", "x", ",", "0", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "2", ",", "3", ",", "5", "}", ",", "{", "3", ",", "4", ",", "5", ",", "6", ",", "7", "}", ",", "{", "6", ",", "8", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_8": [[112, 115], ["numpy.arccos", "numpy.sin", "numpy.sin"], "function", ["None"], ["", "def", "f_8", "(", "x", ")", ":", "\n", "    ", "return", "x", "[", "0", "]", "*", "x", "[", "1", "]", "+", "2", "**", "(", "x", "[", "2", "]", "+", "x", "[", "4", "]", "+", "x", "[", "5", "]", ")", "+", "2", "**", "(", "x", "[", "2", "]", "+", "x", "[", "3", "]", "+", "x", "[", "4", "]", "+", "x", "[", "6", "]", ")", "+", "np", ".", "sin", "(", "\n", "x", "[", "6", "]", "*", "np", ".", "sin", "(", "x", "[", "7", "]", "+", "x", "[", "8", "]", ")", ")", "+", "np", ".", "arccos", "(", "0.9", "*", "x", "[", "9", "]", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "2", ",", "4", ",", "5", "}", ",", "{", "2", ",", "3", ",", "4", ",", "6", "}", ",", "{", "6", ",", "7", ",", "8", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_9": [[117, 121], ["numpy.log", "numpy.abs", "numpy.exp", "numpy.tanh", "numpy.sqrt", "numpy.abs"], "function", ["None"], ["", "def", "f_9", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "tanh", "(", "x", "[", "0", "]", "*", "x", "[", "1", "]", "+", "x", "[", "2", "]", "*", "x", "[", "3", "]", ")", "*", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "x", "[", "4", "]", ")", ")", "+", "np", ".", "exp", "(", "x", "[", "4", "]", "+", "x", "[", "5", "]", ")", "+", "np", ".", "log", "(", "\n", "(", "x", "[", "5", "]", "*", "x", "[", "6", "]", "*", "x", "[", "7", "]", ")", "**", "2", "+", "1", ")", "+", "x", "[", "8", "]", "*", "x", "[", "9", "]", "+", "1.", "/", "(", "1", "+", "np", ".", "abs", "(", "x", "[", "9", "]", ")", ")", ",", "[", "{", "0", ",", "1", ",", "2", ",", "3", ",", "4", "}", ",", "{", "4", ",", "5", "}", ",", "{", "5", ",", "6", ",", "7", "}", ",", "\n", "{", "8", ",", "9", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.f_10": [[123, 126], ["numpy.cos", "numpy.cos", "numpy.sinh", "numpy.arccos", "numpy.tanh"], "function", ["None"], ["", "def", "f_10", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "sinh", "(", "x", "[", "0", "]", "+", "x", "[", "1", "]", ")", "+", "np", ".", "arccos", "(", "np", ".", "tanh", "(", "x", "[", "2", "]", "+", "x", "[", "4", "]", "+", "x", "[", "6", "]", ")", ")", "+", "np", ".", "cos", "(", "x", "[", "3", "]", "+", "x", "[", "4", "]", ")", "+", "1.", "/", "np", ".", "cos", "(", "\n", "x", "[", "6", "]", "*", "x", "[", "8", "]", ")", ",", "[", "{", "0", ",", "1", "}", ",", "{", "2", ",", "4", ",", "6", "}", ",", "{", "3", ",", "4", "}", ",", "{", "6", ",", "8", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.generate_X": [[128, 143], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.concatenate"], "function", ["None"], ["", "def", "generate_X", "(", "size", ",", "num", ")", ":", "\n", "    ", "if", "num", ">", "1", ":", "\n", "        ", "return", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "10", ")", ")", "\n", "", "else", ":", "\n", "        ", "x4", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.6", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x5", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.6", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x8", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.6", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x10", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.6", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x1", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x2", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x3", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x6", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x7", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "x9", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "1", ",", "size", "=", "(", "size", ",", "1", ")", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.get_representative_sample": [[145, 182], ["numpy.array", "numpy.array", "itertools.combinations", "numpy.array", "scipy.stats.mode", "list", "numpy.arange", "numpy.linalg.norm", "np.array.append", "numpy.linalg.norm", "run.get_representative_sample", "itertools.combinations", "range", "numpy.median", "numpy.median", "scipy.stats.mode.replace", "numpy.arange", "numpy.mean", "numpy.tile", "numpy.mean", "numpy.tile", "numpy.argmin", "numpy.min", "numpy.argmin", "numpy.min", "numpy.max", "numpy.max", "numpy.array", "numpy.array", "scipy.stats.mode", "scipy.stats.mode"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.get_representative_sample"], ["", "", "def", "get_representative_sample", "(", "data", ",", "mode", "=", "\"closest_to_median\"", ",", "order", "=", "2", ")", ":", "\n", "    ", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "if", "\"closest_to_pairwise_reduced_\"", "in", "mode", ":", "\n", "        ", "sample", "=", "np", ".", "array", "(", "stats_mode", "(", "get_representative_sample", "(", "data", ",", "mode", ".", "replace", "(", "\"reduced_\"", ",", "\"\"", ")", ")", ")", ")", "[", "0", ",", "0", "]", "\n", "", "elif", "\"closest_to_pairwise_\"", "in", "mode", ":", "# Can also try pairwise distance from the global aggregate", "\n", "        ", "sample", "=", "[", "]", "\n", "interactions", "=", "[", "list", "(", "combinations", "(", "np", ".", "arange", "(", "data", ".", "shape", "[", "1", "]", ")", ",", "o", ")", ")", "for", "o", "in", "\n", "range", "(", "2", ",", "order", "+", "1", ")", "]", "\n", "for", "pair", "in", "combinations", "(", "np", ".", "arange", "(", "data", ".", "shape", "[", "1", "]", ")", ",", "order", ")", ":", "\n", "            ", "if", "\"median\"", "in", "mode", ":", "\n", "                ", "closest_to", "=", "np", ".", "median", "(", "data", "[", ":", ",", "pair", "]", ",", "0", ")", "\n", "", "elif", "\"mean\"", "in", "mode", ":", "\n", "                ", "closest_to", "=", "np", ".", "mean", "(", "data", "[", ":", ",", "pair", "]", ",", "0", ")", "\n", "", "elif", "\"min\"", "in", "mode", ":", "\n", "                ", "closest_to", "=", "np", ".", "min", "(", "data", "[", ":", ",", "pair", "]", ",", "0", ")", "\n", "", "elif", "\"max\"", "in", "mode", ":", "\n", "                ", "closest_to", "=", "np", ".", "max", "(", "data", "[", ":", ",", "pair", "]", ",", "0", ")", "\n", "", "elif", "\"mode\"", "in", "mode", ":", "\n", "                ", "closest_to", "=", "np", ".", "array", "(", "stats_mode", "(", "data", "[", ":", ",", "pair", "]", ")", ")", "[", "0", ",", "0", "]", "\n", "", "distances", "=", "np", ".", "linalg", ".", "norm", "(", "data", "[", ":", ",", "pair", "]", "-", "np", ".", "tile", "(", "closest_to", ",", "(", "data", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "sample", ".", "append", "(", "data", "[", "np", ".", "argmin", "(", "distances", ")", "]", ")", "\n", "", "sample", "=", "np", ".", "array", "(", "sample", ")", "\n", "", "elif", "\"closest_to_\"", "in", "mode", ":", "# Might be better to pass in the aggregate", "\n", "        ", "if", "\"median\"", "in", "mode", ":", "\n", "            ", "closest_to", "=", "np", ".", "median", "(", "data", ",", "0", ")", "\n", "", "elif", "\"mean\"", "in", "mode", ":", "\n", "            ", "closest_to", "=", "np", ".", "mean", "(", "data", ",", "0", ")", "\n", "", "elif", "\"min\"", "in", "mode", ":", "\n", "            ", "closest_to", "=", "np", ".", "min", "(", "data", ",", "0", ")", "\n", "", "elif", "\"max\"", "in", "mode", ":", "\n", "            ", "closest_to", "=", "np", ".", "max", "(", "data", ",", "0", ")", "\n", "", "elif", "\"mode\"", "in", "mode", ":", "\n", "            ", "closest_to", "=", "np", ".", "array", "(", "stats_mode", "(", "data", ")", ")", "[", "0", ",", "0", "]", "\n", "", "distances", "=", "np", ".", "linalg", ".", "norm", "(", "data", "-", "np", ".", "tile", "(", "closest_to", ",", "(", "data", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "sample", "=", "data", "[", "np", ".", "argmin", "(", "distances", ")", "]", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.pairwise_reduce": [[184, 186], ["None"], "function", ["None"], ["", "def", "pairwise_reduce", "(", "interaction_effects", ",", "inter", ",", "interaction", ")", ":", "\n", "    ", "return", "interaction_effects", "[", "inter", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian": [[188, 272], ["torch.device", "torch.device", "isinstance", "range", "len", "time.time", "torch.is_tensor", "torch.is_tensor", "x[].to", "set", "time.time", "jac.append", "new_refs.append", "valid_inds.append", "range", "time.time", "jac_b.append", "range", "len", "model.eval", "len", "range", "len", "len", "valid_inds.append", "len", "len", "new_refs_b.append", "new_refs_b.append", "len", "sorted", "set.add", "interaction_saliences.append", "torch.autograd.grad", "torch.autograd.grad", "torch.tensor", "torch.tensor", "str", "len", "[].tolist", "interaction_saliences.append", "len", "[].tolist", "sorted", "torch.sort", "torch.sort", "[].tolist", "str", "len", "len", "torch.abs", "torch.abs", "zip", "torch.cat", "torch.cat", "set", "torch.abs", "torch.abs", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "jacobian", "(", "x", ",", "y", "=", "None", ",", "model", "=", "None", ",", "refs", "=", "None", ",", "k", "=", "None", ",", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ",", "create_graph", "=", "False", ",", "abs_val", "=", "True", ",", "greedy_heuristic", "=", "False", ")", ":", "\n", "# Require x to be list of batch-of-1 items (s.t. they can be fed into model individually w/o sub-indexing)", "\n", "    ", "assert", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", "\n", "jac", "=", "[", "]", "\n", "new_refs", "=", "[", "]", "\n", "\n", "if", "refs", "is", "None", "and", "y", "is", "not", "None", ":", "\n", "        ", "refs", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "x", ")", ")", "]", "\n", "", "for", "b", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "        ", "st", "=", "time", ".", "time", "(", ")", "\n", "assert", "torch", ".", "is_tensor", "(", "x", "[", "b", "]", ")", "\n", "if", "y", "is", "None", ":", "\n", "# Require the extra empty batch dimension for feeding into model", "\n", "            ", "assert", "len", "(", "x", "[", "b", "]", ".", "shape", ")", "==", "2", "\n", "", "x", "[", "b", "]", ".", "to", "(", "device", ")", "\n", "x", "[", "b", "]", ".", "requires_grad", "=", "True", "\n", "# Num classes x 1 or num x x.shape[2]", "\n", "y_b", "=", "model", ".", "eval", "(", ")", "(", "x", "[", "b", "]", ")", "if", "y", "is", "None", "else", "y", "[", "b", "]", "\n", "jac_b", "=", "[", "]", "\n", "new_refs_b", "=", "[", "]", "\n", "non_redundant_refs", "=", "set", "(", ")", "\n", "valid_inds", "=", "[", "]", "\n", "entity_saliences", "=", "{", "}", "\n", "interaction_saliences", "=", "[", "]", "\n", "if", "y", "is", "None", ":", "\n", "            ", "valid_inds", ".", "append", "(", "(", "0", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "for", "c", "in", "range", "(", "len", "(", "y_b", ")", ")", ":", "\n", "                ", "for", "p", "in", "range", "(", "len", "(", "y_b", "[", "c", "]", ")", ")", ":", "\n", "# Check non-redundant", "\n", "                    ", "if", "len", "(", "refs", "[", "b", "]", ")", ">", "0", ":", "\n", "                        ", "ref", "=", "sorted", "(", "refs", "[", "b", "]", "[", "c", "]", ".", "tolist", "(", ")", "+", "[", "p", "]", ")", "\n", "if", "str", "(", "ref", ")", "in", "non_redundant_refs", "or", "len", "(", "set", "(", "ref", ")", ")", "<", "len", "(", "ref", ")", ":", "\n", "                            ", "continue", "\n", "", "non_redundant_refs", ".", "add", "(", "str", "(", "ref", ")", ")", "\n", "", "valid_inds", ".", "append", "(", "(", "c", ",", "p", ")", ")", "\n", "# Consider for top k", "\n", "if", "k", "is", "not", "None", ":", "\n", "                        ", "if", "len", "(", "refs", "[", "b", "]", ")", "==", "0", ":", "\n", "                            ", "refs_b_c", "=", "[", "]", "\n", "", "else", ":", "\n", "                            ", "refs_b_c", "=", "refs", "[", "b", "]", "[", "c", "]", ".", "tolist", "(", ")", "\n", "", "if", "greedy_heuristic", ":", "\n", "                            ", "interaction_saliences", ".", "append", "(", "torch", ".", "abs", "(", "y_b", "[", "c", "]", "[", "p", "]", ")", "if", "abs_val", "else", "y_b", "[", "c", "]", "[", "p", "]", ")", "\n", "", "for", "ind", "in", "refs_b_c", "+", "[", "p", "]", ":", "\n", "                            ", "if", "ind", "not", "in", "entity_saliences", ":", "\n", "                                ", "entity_saliences", "[", "ind", "]", "=", "0", "\n", "", "if", "abs_val", ":", "\n", "                                ", "entity_saliences", "[", "ind", "]", "+=", "torch", ".", "abs", "(", "y_b", "[", "c", "]", "[", "p", "]", ")", "\n", "", "else", ":", "\n", "                                ", "entity_saliences", "[", "ind", "]", "+=", "y_b", "[", "c", "]", "[", "p", "]", "\n", "", "", "", "", "", "if", "k", "is", "not", "None", ":", "\n", "                ", "if", "len", "(", "interaction_saliences", ")", "==", "0", ":", "\n", "                    ", "for", "c", ",", "p", "in", "valid_inds", ":", "\n", "                        ", "salience", "=", "0", "\n", "if", "len", "(", "refs", "[", "b", "]", ")", "==", "0", ":", "\n", "                            ", "refs_b_c", "=", "[", "]", "\n", "", "else", ":", "\n", "                            ", "refs_b_c", "=", "refs", "[", "b", "]", "[", "c", "]", ".", "tolist", "(", ")", "\n", "", "for", "ind", "in", "refs_b_c", "+", "[", "p", "]", ":", "\n", "                            ", "salience", "+=", "entity_saliences", "[", "ind", "]", "\n", "", "interaction_saliences", ".", "append", "(", "salience", ")", "\n", "", "", "valid_inds", "=", "[", "inds", "for", "_", ",", "inds", "in", "sorted", "(", "zip", "(", "interaction_saliences", ",", "valid_inds", ")", ",", "key", "=", "lambda", "si", ":", "si", "[", "0", "]", ")", "]", "[", "\n", "-", "k", ":", "]", "\n", "# if b == 0:", "\n", "#     print(\"Batch {}, Time of Processing: {}\".format(b, time.time() - st))", "\n", "", "", "stt", "=", "time", ".", "time", "(", ")", "\n", "for", "c", ",", "p", "in", "valid_inds", ":", "\n", "            ", "st", "=", "time", ".", "time", "(", ")", "\n", "jac_b", ".", "append", "(", "torch", ".", "autograd", ".", "grad", "(", "y_b", "[", "c", "]", "[", "p", "]", ",", "x", "[", "b", "]", ",", "retain_graph", "=", "True", ",", "create_graph", "=", "create_graph", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "# if b == 0:", "\n", "#     print(\"Valid indices: {}, {}, Time of Gradient: {}\".format(c, p, time.time() - st))", "\n", "if", "y", "is", "not", "None", ":", "\n", "                ", "if", "len", "(", "refs", "[", "b", "]", ")", "==", "0", ":", "\n", "                    ", "new_refs_b", ".", "append", "(", "torch", ".", "tensor", "(", "[", "p", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "new_refs_b", ".", "append", "(", "torch", ".", "sort", "(", "torch", ".", "cat", "(", "(", "refs", "[", "b", "]", "[", "c", "]", ",", "torch", ".", "tensor", "(", "[", "p", "]", ")", ")", ",", "-", "1", ")", ")", "[", "0", "]", ")", "\n", "# if b == 0:", "\n", "#     print(\"Total time of gradient computations: \", time.time() - stt)", "\n", "\n", "", "", "", "jac", ".", "append", "(", "jac_b", ")", "\n", "new_refs", ".", "append", "(", "new_refs_b", ")", "\n", "# Batch size x num classes x x.shape[2], batch size x num classes x order - 1", "\n", "", "return", "jac", ",", "new_refs", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.compute_interactions_and_auc": [[274, 396], ["torch.device", "torch.device", "time.time", "copy.deepcopy", "range", "set", "set", "range", "range", "len", "copy.deepcopy", "enumerate", "isinstance", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "len", "len", "range", "print", "len", "enumerate", "AUCs.append", "neural_interaction_detection.prune_redundant_interactions", "utils.get_anyorder_R_precision", "r_precs.append", "isinstance", "AUCs.append", "neural_interaction_detection.prune_redundant_interactions", "utils.get_anyorder_R_precision", "r_precs.append", "interaction_effects.append", "numpy.array", "inputs.unsqueeze().unbind.unsqueeze", "len", "inputs.unsqueeze().unbind.unsqueeze().unbind", "run.jacobian", "print", "run.jacobian", "oth_order.append", "oth_ref.append", "run.jacobian", "oth_order.append", "oth_ref.append", "len", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "set", "range", "interaction_effects[].append", "print", "print", "torch.abs", "torch.abs", "time.time", "range", "utils.get_auc", "range", "tuple", "utils.get_auc", "range", "inputs.unsqueeze().unbind.unsqueeze", "tuple", "set.add", "mode_interaction_effects[].append", "tuple", "max", "enumerate", "enumerate", "max", "sorted", "interaction_effects[].append", "copy.deepcopy.remove", "m", "numpy.abs", "len", "len", "copy.deepcopy.remove", "mode_interaction_effects[].append", "len", "m", "m", "numpy.abs", "len", "[].tolist", "set", "[].item", "[].item", "[].item", "copy.deepcopy.remove", "len", "m", "len", "m", "numpy.abs", "m"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.prune_redundant_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_anyorder_R_precision", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.prune_redundant_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_anyorder_R_precision", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_auc", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_auc"], ["", "def", "compute_interactions_and_auc", "(", "inputs", ",", "model", ",", "ground_truth", ",", "order", "=", "2", ",", "o", "=", "2", ",", "interaction_effects", "=", "None", ",", "\n", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ",", "mode", "=", "None", ",", "interactions", "=", "None", ",", "abs_val", "=", "True", ",", "verbose", "=", "False", ",", "greedy_heuristic", "=", "False", ")", ":", "\n", "    ", "start", "=", "time", ".", "time", "(", ")", "\n", "if", "interactions", "is", "None", ":", "\n", "        ", "interactions", "=", "set", "(", ")", "\n", "", "else", ":", "\n", "        ", "interactions", "=", "set", "(", "interactions", ")", "\n", "\n", "# Compute cross derivatives", "\n", "", "if", "interaction_effects", "is", "None", ":", "\n", "        ", "inputs", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "inputs", ")", ")", "if", "isinstance", "(", "inputs", ",", "list", ")", "else", "torch", ".", "FloatTensor", "(", "inputs", ")", "\n", "if", "len", "(", "inputs", ".", "shape", ")", "==", "1", ":", "\n", "            ", "inputs", "=", "[", "inputs", ".", "unsqueeze", "(", "0", ")", "]", "\n", "", "elif", "len", "(", "inputs", ".", "shape", ")", "==", "2", ":", "\n", "            ", "inputs", "=", "inputs", ".", "unsqueeze", "(", "1", ")", ".", "unbind", "(", ")", "\n", "", "oth_order", "=", "[", "jacobian", "(", "inputs", ",", "model", "=", "model", ",", "device", "=", "device", ",", "create_graph", "=", "True", ",", "abs_val", "=", "abs_val", ",", "greedy_heuristic", "=", "greedy_heuristic", ")", "[", "0", "]", "]", "\n", "oth_ref", "=", "[", "None", "]", "\n", "for", "o_", "in", "range", "(", "2", ",", "order", "+", "1", ")", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "print", "(", "\"Order: \"", ",", "o_", ")", "\n", "", "if", "o_", "<=", "o", ":", "\n", "                ", "oth_o", ",", "oth_r", "=", "jacobian", "(", "inputs", ",", "oth_order", "[", "-", "1", "]", ",", "create_graph", "=", "o_", "<", "order", ",", "device", "=", "device", ",", "refs", "=", "oth_ref", "[", "-", "1", "]", ",", "abs_val", "=", "abs_val", ",", "greedy_heuristic", "=", "greedy_heuristic", ")", "\n", "oth_order", ".", "append", "(", "oth_o", ")", "\n", "oth_ref", ".", "append", "(", "oth_r", ")", "\n", "", "else", ":", "\n", "                ", "oth_o", ",", "oth_r", "=", "jacobian", "(", "inputs", ",", "oth_order", "[", "-", "1", "]", ",", "create_graph", "=", "o_", "<", "order", ",", "device", "=", "device", ",", "refs", "=", "oth_ref", "[", "-", "1", "]", ",", "\n", "k", "=", "inputs", "[", "0", "]", ".", "shape", "[", "1", "]", "**", "(", "o", "-", "1", ")", ",", "abs_val", "=", "abs_val", ",", "greedy_heuristic", "=", "greedy_heuristic", ")", "\n", "oth_order", ".", "append", "(", "oth_o", ")", "\n", "oth_ref", ".", "append", "(", "oth_r", ")", "\n", "# Per order: batches x num x input size, Per order: batches x num x order - 1", "\n", "", "", "for", "o", "in", "range", "(", "1", ",", "len", "(", "oth_order", ")", ")", ":", "\n", "            ", "for", "b", "in", "range", "(", "len", "(", "oth_order", "[", "o", "]", ")", ")", ":", "\n", "                ", "oth_order", "[", "o", "]", "[", "b", "]", "=", "torch", ".", "stack", "(", "oth_order", "[", "o", "]", "[", "b", "]", ")", "\n", "oth_ref", "[", "o", "]", "[", "b", "]", "=", "torch", ".", "stack", "(", "oth_ref", "[", "o", "]", "[", "b", "]", ")", "\n", "if", "abs_val", ":", "\n", "                    ", "oth_order", "[", "o", "]", "[", "b", "]", "=", "torch", ".", "abs", "(", "oth_order", "[", "o", "]", "[", "b", "]", ")", "\n", "", "", "", "oth_order", "=", "oth_order", "[", "1", ":", "]", "\n", "oth_ref", "=", "oth_ref", "[", "1", ":", "]", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "\"Time of cross derivative computation: \"", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "# Aggregate across different cross derivatives according to mode", "\n", "", "", "AUCs", "=", "[", "]", "\n", "r_precs", "=", "[", "]", "\n", "if", "interaction_effects", "is", "None", ":", "\n", "        ", "interaction_effects", "=", "[", "[", "]", "for", "_", "in", "oth_order", "[", "0", "]", "]", "\n", "", "mode_interaction_effects", "=", "{", "}", "\n", "mode_add_interactions", "=", "copy", ".", "deepcopy", "(", "interactions", ")", "\n", "for", "b", "in", "range", "(", "len", "(", "interaction_effects", ")", ")", ":", "\n", "        ", "add_interactions", "=", "copy", ".", "deepcopy", "(", "interactions", ")", "\n", "if", "len", "(", "interaction_effects", "[", "b", "]", ")", "==", "0", ":", "\n", "            ", "for", "o", ",", "oth", "in", "enumerate", "(", "oth_order", ")", ":", "\n", "                ", "non_redundant_interactions", "=", "set", "(", ")", "\n", "for", "c", "in", "range", "(", "oth_order", "[", "o", "]", "[", "b", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "for", "p", "in", "range", "(", "inputs", "[", "0", "]", ".", "shape", "[", "1", "]", ")", ":", "\n", "                        ", "interaction", "=", "tuple", "(", "sorted", "(", "oth_ref", "[", "o", "]", "[", "b", "]", "[", "c", "]", ".", "tolist", "(", ")", "+", "[", "p", "]", ")", ")", "\n", "if", "interaction", "in", "non_redundant_interactions", "or", "len", "(", "set", "(", "interaction", ")", ")", "<", "len", "(", "interaction", ")", ":", "\n", "                            ", "continue", "\n", "", "non_redundant_interactions", ".", "add", "(", "interaction", ")", "\n", "if", "mode", "is", "None", ":", "\n", "                            ", "interaction_effects", "[", "b", "]", ".", "append", "(", "(", "interaction", ",", "oth_order", "[", "o", "]", "[", "b", "]", "[", "c", "]", "[", "p", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "interaction", "in", "add_interactions", ":", "\n", "                                ", "add_interactions", ".", "remove", "(", "interaction", ")", "\n", "", "", "else", ":", "\n", "                            ", "if", "interaction", "in", "mode_interaction_effects", ":", "\n", "                                ", "mode_interaction_effects", "[", "interaction", "]", ".", "append", "(", "oth_order", "[", "o", "]", "[", "b", "]", "[", "c", "]", "[", "p", "]", ".", "item", "(", ")", ")", "\n", "", "else", ":", "\n", "                                ", "mode_interaction_effects", "[", "interaction", "]", "=", "[", "oth_order", "[", "o", "]", "[", "b", "]", "[", "c", "]", "[", "p", "]", ".", "item", "(", ")", "]", "\n", "if", "interaction", "in", "mode_add_interactions", ":", "\n", "                                    ", "mode_add_interactions", ".", "remove", "(", "interaction", ")", "\n", "", "", "", "", "", "", "", "else", ":", "\n", "            ", "if", "mode", "is", "not", "None", ":", "\n", "                ", "for", "interaction_effect", "in", "interaction_effects", "[", "b", "]", ":", "\n", "                    ", "if", "interaction_effect", "[", "0", "]", "in", "mode_interaction_effects", ":", "\n", "                        ", "mode_interaction_effects", "[", "interaction_effect", "[", "0", "]", "]", ".", "append", "(", "interaction_effect", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                        ", "mode_interaction_effects", "[", "interaction_effect", "[", "0", "]", "]", "=", "[", "interaction_effect", "[", "1", "]", "]", "\n", "if", "interaction_effect", "[", "0", "]", "in", "mode_add_interactions", ":", "\n", "                            ", "mode_add_interactions", ".", "remove", "(", "interaction_effect", "[", "0", "]", ")", "\n", "\n", "", "", "", "", "", "if", "mode", "is", "None", ":", "\n", "            ", "for", "interaction", "in", "add_interactions", ":", "\n", "                ", "interaction_effects", "[", "b", "]", ".", "append", "(", "(", "tuple", "(", "interaction", ")", ",", "0", ")", ")", "\n", "", "AUC", "=", "[", "get_auc", "(", "[", "item", "for", "item", "in", "interaction_effects", "[", "b", "]", "if", "len", "(", "item", "[", "0", "]", ")", "==", "oth", "+", "1", "]", ",", "\n", "ground_truth", ",", "verbose", "=", "verbose", ")", "\n", "if", "max", "(", "[", "len", "(", "g", ")", "for", "g", "in", "ground_truth", "]", ")", ">=", "oth", "+", "1", "else", "0", "for", "oth", "in", "range", "(", "1", ",", "order", ")", "]", "\n", "AUCs", ".", "append", "(", "AUC", ")", "\n", "interaction_effects_n_pruned", "=", "prune_redundant_interactions", "(", "interaction_effects", "[", "b", "]", ")", "\n", "r_prec", "=", "get_anyorder_R_precision", "(", "interaction_effects_n_pruned", ",", "ground_truth", ")", "\n", "r_precs", ".", "append", "(", "r_prec", ")", "\n", "if", "verbose", ":", "\n", "                ", "print", "(", "\"{}th sample AUC: {}\"", ".", "format", "(", "b", ",", "AUC", ")", ")", "\n", "", "", "", "if", "mode", "is", "not", "None", ":", "\n", "        ", "for", "interaction", "in", "mode_add_interactions", ":", "\n", "            ", "mode_interaction_effects", "[", "tuple", "(", "interaction", ")", "]", "=", "[", "0", "]", "\n", "", "if", "not", "isinstance", "(", "mode", ",", "list", ")", ":", "\n", "            ", "mode", "=", "[", "mode", "]", "\n", "", "interaction_effects", "=", "[", "]", "\n", "for", "mth", ",", "m", "in", "enumerate", "(", "mode", ")", ":", "\n", "            ", "if", "abs_val", "is", "None", ":", "\n", "                ", "interaction_effects_m", "=", "[", "(", "interaction", ",", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ",", "\n", "inter", ",", "interaction", ")", "if", "m", "==", "pairwise_reduce", "\n", "else", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ")", "[", "0", "]", "[", "0", "]", "if", "m", "==", "stats_mode", "\n", "else", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ")", ")", "\n", "for", "inter", ",", "interaction", "in", "enumerate", "(", "mode_interaction_effects", ")", "]", "\n", "", "else", ":", "\n", "                ", "interaction_effects_m", "=", "[", "(", "interaction", ",", "np", ".", "abs", "(", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ",", "\n", "inter", ",", "interaction", ")", ")", "if", "m", "==", "pairwise_reduce", "\n", "else", "np", ".", "abs", "(", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ")", ")", "[", "0", "]", "[", "0", "]", "if", "m", "==", "stats_mode", "\n", "else", "np", ".", "abs", "(", "m", "(", "mode_interaction_effects", "[", "interaction", "]", ")", ")", ")", "\n", "for", "inter", ",", "interaction", "in", "enumerate", "(", "mode_interaction_effects", ")", "]", "\n", "", "AUC", "=", "[", "get_auc", "(", "[", "item", "for", "item", "in", "interaction_effects_m", "if", "len", "(", "item", "[", "0", "]", ")", "==", "oth", "+", "1", "]", ",", "\n", "ground_truth", ",", "verbose", "=", "verbose", ")", "\n", "if", "max", "(", "[", "len", "(", "g", ")", "for", "g", "in", "ground_truth", "]", ")", ">=", "oth", "+", "1", "else", "0", "for", "oth", "in", "range", "(", "1", ",", "order", ")", "]", "\n", "AUCs", ".", "append", "(", "AUC", ")", "\n", "interaction_effects_m_pruned", "=", "prune_redundant_interactions", "(", "interaction_effects_m", ")", "\n", "r_prec", "=", "get_anyorder_R_precision", "(", "interaction_effects_m_pruned", ",", "ground_truth", ")", "\n", "r_precs", ".", "append", "(", "r_prec", ")", "\n", "interaction_effects", ".", "append", "(", "interaction_effects_m", ")", "\n", "if", "verbose", ":", "\n", "                ", "print", "(", "\"{}th sample AUC: {}\"", ".", "format", "(", "mth", ",", "AUC", ")", ")", "\n", "", "", "", "return", "AUCs", ",", "interaction_effects", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.test_inputs_n_way": [[398, 419], ["representative_samples.append", "list", "run.get_representative_sample", "run.compute_interactions_and_auc", "run.powerset", "run.compute_interactions_and_auc", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.get_representative_sample", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.compute_interactions_and_auc", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.powerset", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.compute_interactions_and_auc"], ["", "def", "test_inputs_n_way", "(", "X_train", ",", "model", ",", "ground_truth", ",", "device", ",", "abs_val", ",", "order", ",", "o", ",", "interactions", ",", "verbose", ",", "greedy_heuristic", ")", ":", "\n", "    ", "representative_samples", "=", "[", "get_representative_sample", "(", "X_train", ",", "mode", "=", "\"closest_to_{}\"", ".", "format", "(", "mode", ")", ")", "\n", "for", "mode", "in", "[", "\"mean\"", ",", "\"median\"", ",", "\"min\"", ",", "\"max\"", ",", "\"mode\"", "]", "]", "\n", "representative_samples", ".", "append", "(", "X_train", "[", "np", ".", "random", ".", "randint", "(", "X_train", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "sample_interaction_effects", "=", "compute_interactions_and_auc", "(", "inputs", "=", "representative_samples", ",", "model", "=", "model", ",", "\n", "ground_truth", "=", "ground_truth", ",", "o", "=", "o", ",", "device", "=", "device", ",", "\n", "abs_val", "=", "abs_val", ",", "order", "=", "order", ",", "verbose", "=", "verbose", ")", "[", "1", "]", "\n", "\n", "aucs", "=", "[", "]", "\n", "interaction_effects", "=", "[", "]", "\n", "for", "representatives", "in", "list", "(", "powerset", "(", "sample_interaction_effects", ")", ")", ":", "\n", "        ", "for", "mode", "in", "[", "np", ".", "mean", ",", "np", ".", "median", ",", "np", ".", "min", ",", "np", ".", "max", ",", "stats_mode", "]", ":", "\n", "            ", "auc", ",", "inters", "=", "compute_interactions_and_auc", "(", "inputs", "=", "representatives", ",", "mode", "=", "mode", ",", "model", "=", "model", ",", "\n", "ground_truth", "=", "ground_truth", ",", "o", "=", "o", ",", "device", "=", "device", ",", "abs_val", "=", "abs_val", ",", "\n", "order", "=", "order", ",", "verbose", "=", "verbose", ",", "interactions", "=", "interactions", ",", "\n", "interaction_effects", "=", "representatives", ",", "\n", "greedy_heuristic", "=", "greedy_heuristic", ")", "\n", "aucs", "+=", "auc", "\n", "interaction_effects", "+=", "inters", "\n", "\n", "", "", "return", "aucs", ",", "interaction_effects", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.run": [[421, 487], ["torch.device", "torch.device", "run.generate_X", "utils.preprocess_data", "numpy.concatenate", "multilayer_perceptron.MLP().to", "multilayer_perceptron.train", "multilayer_perceptron.get_weights", "neural_interaction_detection.get_interactions", "neural_interaction_detection.get_interactions", "set", "run.test_inputs_n_way", "utils.get_anyorder_R_precision", "np.array.transpose", "numpy.array", "copy.deepcopy", "aucs_nid.append", "globals", "np.array.ptp", "multilayer_perceptron.MLP", "tuple", "np.array.min", "len", "copy.deepcopy.append", "utils.get_auc", "range", "len", "max", "len", "list", "len", "tuple", "tuple"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.generate_X", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.preprocess_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.get_weights", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.get_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.get_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.test_inputs_n_way", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_anyorder_R_precision", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_auc"], ["", "def", "run", "(", "num", ",", "epochs", "=", "33", ",", "layer_sizes", "=", "None", ",", "activation", "=", "nn", ".", "ELU", ",", "use_main_effect_nets", "=", "True", ",", "num_samples", "=", "30000", ",", "\n", "num_features", "=", "10", ",", "valid_size", "=", "5", ",", "test_size", "=", "5", ",", "std_scale", "=", "True", ",", "my_data_norm", "=", "False", ",", "lr", "=", "1e-3", ",", "l1_const", "=", "5e-5", ",", "\n", "dropout_p", "=", "0", ",", "early_stopping", "=", "False", ",", "patience", "=", "5", ",", "abs_val", "=", "True", ",", "verbose", "=", "True", ",", "order", "=", "2", ",", "o", "=", "2", ",", "\n", "greedy_heuristic", "=", "False", ",", "gelu_final_layer", "=", "False", ",", "gelu_last_layer", "=", "False", ",", "gelu_alt_layer", "=", "False", ",", "\n", "gelu_main_effects", "=", "False", ")", ":", "\n", "# Params", "\n", "    ", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "args", ".", "cuda", "else", "\"cpu\"", ")", "\n", "if", "layer_sizes", "is", "None", ":", "\n", "        ", "layer_sizes", "=", "[", "140", ",", "100", ",", "60", ",", "20", "]", "\n", "\n", "# Data", "\n", "# set_seed(42)", "\n", "", "X", "=", "generate_X", "(", "num_samples", ",", "num", ")", "\n", "Y", ",", "ground_truth", "=", "globals", "(", ")", "[", "\"f_{}\"", ".", "format", "(", "num", ")", "]", "(", "X", ".", "transpose", "(", ")", ")", "\n", "if", "my_data_norm", ":", "\n", "        ", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "X", "=", "(", "X", "-", "X", ".", "min", "(", "0", ")", ")", "/", "X", ".", "ptp", "(", "0", ")", "\n", "", "data_loaders", "=", "preprocess_data", "(", "X", ",", "Y", ",", "valid_size", "=", "valid_size", ",", "test_size", "=", "test_size", ",", "std_scale", "=", "std_scale", ",", "\n", "get_torch_loaders", "=", "True", ")", "\n", "X_train", "=", "np", ".", "concatenate", "(", "[", "data", "[", "0", "]", "for", "data", "in", "data_loaders", "[", "\"train\"", "]", "]", ",", "0", ")", "\n", "\n", "# Model and training", "\n", "model", "=", "MLP", "(", "num_features", ",", "layer_sizes", ",", "use_main_effect_nets", "=", "use_main_effect_nets", ",", "activation", "=", "activation", ",", "\n", "dropout_p", "=", "dropout_p", ",", "gelu_final_layer", "=", "gelu_final_layer", ",", "gelu_last_layer", "=", "gelu_last_layer", ",", "\n", "gelu_alt_layer", "=", "gelu_alt_layer", ",", "gelu_main_effects", "=", "gelu_main_effects", ")", ".", "to", "(", "device", ")", "\n", "model", ",", "mlp_loss", "=", "train", "(", "model", ",", "data_loaders", ",", "nepochs", "=", "epochs", ",", "device", "=", "device", ",", "learning_rate", "=", "lr", ",", "l1_const", "=", "l1_const", ",", "\n", "verbose", "=", "verbose", ",", "early_stopping", "=", "early_stopping", ",", "patience", "=", "patience", ")", "\n", "\n", "# NID AUC", "\n", "model_weights", "=", "get_weights", "(", "model", ")", "\n", "pairwise_interactions", ",", "_", "=", "get_interactions", "(", "model_weights", ",", "pairwise", "=", "True", ",", "one_indexed", "=", "True", ")", "\n", "# Automatically selects the top 100 excluding redundant subsets, and unpruned -- can use internal func to prune mine", "\n", "anyorder_interactions_pruned", ",", "anyorder_interactions_unpruned", "=", "get_interactions", "(", "model_weights", ",", "one_indexed", "=", "True", ")", "\n", "anyorder_interactions_unpruned", "=", "[", "inter", "for", "inter", "in", "anyorder_interactions_unpruned", "if", "len", "(", "inter", "[", "0", "]", ")", "<=", "order", "]", "\n", "# auc_nid = get_auc(pairwise_interactions, [{i + 1 for i in inter} for inter in ground_truth], verbose=verbose)", "\n", "if", "order", "==", "2", ":", "\n", "        ", "anyorder_interactions_unpruned", "=", "pairwise_interactions", "\n", "# My AUC", "\n", "", "n_way_NID", "=", "set", "(", "\n", "[", "tuple", "(", "[", "inr", "-", "1", "for", "inr", "in", "inter", "[", "0", "]", "]", ")", "for", "inter", "in", "anyorder_interactions_unpruned", "if", "len", "(", "inter", "[", "0", "]", ")", "<=", "order", "]", ")", "\n", "auc_mine", ",", "interactions", "=", "test_inputs_n_way", "(", "X_train", ",", "model", ",", "ground_truth", ",", "device", ",", "abs_val", ",", "order", ",", "o", ",", "n_way_NID", ",", "\n", "verbose", ",", "greedy_heuristic", "=", "greedy_heuristic", ")", "\n", "# auc_mine = aucs1", "\n", "\n", "aucs_nid", "=", "[", "]", "\n", "for", "nth", "in", "interactions", ":", "\n", "        ", "new", "=", "copy", ".", "deepcopy", "(", "anyorder_interactions_unpruned", ")", "\n", "for", "interaction", "in", "[", "inr", "[", "0", "]", "for", "inr", "in", "nth", "]", ":", "\n", "            ", "if", "interaction", "not", "in", "n_way_NID", ":", "\n", "                ", "new", ".", "append", "(", "(", "(", "inr", "+", "1", "for", "inr", "in", "interaction", ")", ",", "0", ")", ")", "\n", "\n", "# two_and_three_way = [inter for inter in anyorder_interactions_unpruned if len(inter[0]) <= order]", "\n", "# print(set([tuple([inr - 1 for inr in inter[0]]) for inter in new]) == set([inr[0] for inr in nth]))", "\n", "# print([tuple([inr - 1 for inr in inter[0]]) for inter in new])", "\n", "# print([inr[0] for inr in nth])", "\n", "", "", "auc_nid", "=", "[", "get_auc", "(", "[", "item", "for", "item", "in", "list", "(", "new", ")", "if", "len", "(", "tuple", "(", "tuple", "(", "item", ")", "[", "0", "]", ")", ")", "==", "oth", "+", "1", "]", "if", "oth", "+", "1", ">", "2", "\n", "else", "pairwise_interactions", ",", "\n", "[", "{", "i", "+", "1", "for", "i", "in", "inter", "}", "for", "inter", "in", "ground_truth", "]", ",", "verbose", "=", "verbose", ")", "\n", "if", "max", "(", "[", "len", "(", "g", ")", "for", "g", "in", "ground_truth", "]", ")", ">=", "oth", "+", "1", "else", "0", "\n", "for", "oth", "in", "range", "(", "1", ",", "order", ")", "]", "\n", "aucs_nid", ".", "append", "(", "auc_nid", ")", "\n", "\n", "# Requires a subset of \"detected\" higher-order interactions and computes precision (% of those are real)", "\n", "", "r_prec", "=", "get_anyorder_R_precision", "(", "anyorder_interactions_pruned", ",", "[", "{", "i", "+", "1", "for", "i", "in", "inter", "}", "for", "inter", "in", "ground_truth", "]", ")", "\n", "\n", "return", "auc_mine", ",", "aucs_nid", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.preprocess_weights": [[10, 18], ["numpy.abs", "numpy.abs", "range", "numpy.matmul", "len", "numpy.abs"], "function", ["None"], ["def", "preprocess_weights", "(", "weights", ")", ":", "\n", "    ", "w_later", "=", "np", ".", "abs", "(", "weights", "[", "-", "1", "]", ")", "\n", "w_input", "=", "np", ".", "abs", "(", "weights", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "weights", ")", "-", "2", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "w_later", "=", "np", ".", "matmul", "(", "w_later", ",", "np", ".", "abs", "(", "weights", "[", "i", "]", ")", ")", "\n", "\n", "", "return", "w_input", ",", "w_later", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.make_one_indexed": [[20, 22], ["tuple", "numpy.array"], "function", ["None"], ["", "def", "make_one_indexed", "(", "interaction_ranking", ")", ":", "\n", "    ", "return", "[", "(", "tuple", "(", "np", ".", "array", "(", "i", ")", "+", "1", ")", ",", "s", ")", "for", "i", ",", "s", "in", "interaction_ranking", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.interpret_interactions": [[24, 49], ["range", "sorted", "sorted", "range", "interaction_strengths.items", "enumerate", "bisect.insort", "candidate_weights.append", "tuple", "operator.itemgetter", "min", "numpy.sum", "len"], "function", ["None"], ["", "def", "interpret_interactions", "(", "w_input", ",", "w_later", ",", "get_main_effects", "=", "False", ")", ":", "\n", "    ", "interaction_strengths", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "w_later", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "sorted_hweights", "=", "sorted", "(", "\n", "enumerate", "(", "w_input", "[", "i", "]", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", "\n", ")", "\n", "interaction_candidate", "=", "[", "]", "\n", "candidate_weights", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "w_input", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "bisect", ".", "insort", "(", "interaction_candidate", ",", "sorted_hweights", "[", "j", "]", "[", "0", "]", ")", "\n", "candidate_weights", ".", "append", "(", "sorted_hweights", "[", "j", "]", "[", "1", "]", ")", "\n", "\n", "if", "not", "get_main_effects", "and", "len", "(", "interaction_candidate", ")", "==", "1", ":", "\n", "                ", "continue", "\n", "", "interaction_tup", "=", "tuple", "(", "interaction_candidate", ")", "\n", "if", "interaction_tup", "not", "in", "interaction_strengths", ":", "\n", "                ", "interaction_strengths", "[", "interaction_tup", "]", "=", "0", "\n", "", "interaction_strength", "=", "(", "min", "(", "candidate_weights", ")", ")", "*", "(", "np", ".", "sum", "(", "w_later", "[", ":", ",", "i", "]", ")", ")", "\n", "interaction_strengths", "[", "interaction_tup", "]", "+=", "interaction_strength", "\n", "\n", "", "", "interaction_ranking", "=", "sorted", "(", "\n", "interaction_strengths", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ",", "reverse", "=", "True", "\n", ")", "\n", "\n", "return", "interaction_ranking", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.interpret_pairwise_interactions": [[51, 63], ["range", "interaction_ranking.sort", "range", "interaction_ranking.append", "numpy.minimum"], "function", ["None"], ["", "def", "interpret_pairwise_interactions", "(", "w_input", ",", "w_later", ")", ":", "\n", "    ", "p", "=", "w_input", ".", "shape", "[", "1", "]", "\n", "\n", "interaction_ranking", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "p", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "p", ")", ":", "\n", "            ", "if", "i", "<", "j", ":", "\n", "                ", "strength", "=", "(", "np", ".", "minimum", "(", "w_input", "[", ":", ",", "i", "]", ",", "w_input", "[", ":", ",", "j", "]", ")", "*", "w_later", ")", ".", "sum", "(", ")", "\n", "interaction_ranking", ".", "append", "(", "(", "(", "i", ",", "j", ")", ",", "strength", ")", ")", "\n", "\n", "", "", "", "interaction_ranking", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "return", "interaction_ranking", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.get_interactions": [[65, 80], ["neural_interaction_detection.preprocess_weights", "neural_interaction_detection.interpret_pairwise_interactions", "neural_interaction_detection.interpret_interactions", "neural_interaction_detection.prune_redundant_interactions", "neural_interaction_detection.make_one_indexed", "neural_interaction_detection.make_one_indexed"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.preprocess_weights", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.interpret_pairwise_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.interpret_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.prune_redundant_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.make_one_indexed", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.make_one_indexed"], ["", "def", "get_interactions", "(", "weights", ",", "pairwise", "=", "False", ",", "one_indexed", "=", "False", ")", ":", "\n", "    ", "w_input", ",", "w_later", "=", "preprocess_weights", "(", "weights", ")", "\n", "\n", "if", "pairwise", ":", "\n", "        ", "interaction_ranking", "=", "interpret_pairwise_interactions", "(", "w_input", ",", "w_later", ")", "\n", "interaction_ranking_unpruned", "=", "None", "\n", "", "else", ":", "\n", "        ", "interaction_ranking_unpruned", "=", "interpret_interactions", "(", "w_input", ",", "w_later", ")", "\n", "interaction_ranking", "=", "prune_redundant_interactions", "(", "interaction_ranking_unpruned", ")", "\n", "\n", "", "if", "one_indexed", ":", "\n", "        ", "return", "make_one_indexed", "(", "interaction_ranking", ")", ",", "make_one_indexed", "(", "interaction_ranking_unpruned", ")", "if", "interaction_ranking_unpruned", "is", "not", "None", "else", "None", "\n", "", "else", ":", "\n", "        ", "return", "interaction_ranking", ",", "interaction_ranking_unpruned", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.prune_redundant_interactions": [[82, 104], ["set", "current_superset_inters.append", "interaction_ranking_pruned.append", "len", "update_superset_inters.append"], "function", ["None"], ["", "", "def", "prune_redundant_interactions", "(", "interaction_ranking", ",", "max_interactions", "=", "100", ")", ":", "\n", "    ", "interaction_ranking_pruned", "=", "[", "]", "\n", "current_superset_inters", "=", "[", "]", "\n", "for", "inter", ",", "strength", "in", "interaction_ranking", ":", "\n", "        ", "set_inter", "=", "set", "(", "inter", ")", "\n", "if", "len", "(", "interaction_ranking_pruned", ")", ">=", "max_interactions", ":", "\n", "            ", "break", "\n", "", "subset_inter_skip", "=", "False", "\n", "update_superset_inters", "=", "[", "]", "\n", "for", "superset_inter", "in", "current_superset_inters", ":", "\n", "            ", "if", "set_inter", "<", "superset_inter", ":", "\n", "                ", "subset_inter_skip", "=", "True", "\n", "break", "\n", "", "elif", "not", "(", "set_inter", ">", "superset_inter", ")", ":", "\n", "                ", "update_superset_inters", ".", "append", "(", "superset_inter", ")", "\n", "", "", "if", "subset_inter_skip", ":", "\n", "            ", "continue", "\n", "", "current_superset_inters", "=", "update_superset_inters", "\n", "current_superset_inters", ".", "append", "(", "set_inter", ")", "\n", "interaction_ranking_pruned", ".", "append", "(", "(", "inter", ",", "strength", ")", ")", "\n", "\n", "", "return", "interaction_ranking_pruned", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.detect_interactions": [[106, 127], ["torch.device", "utils.convert_to_torch_loaders", "multilayer_perceptron.create_mlp().to", "multilayer_perceptron.train", "neural_interaction_detection.get_interactions", "utils.set_seed", "multilayer_perceptron.get_weights", "multilayer_perceptron.create_mlp"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.convert_to_torch_loaders", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.neural_interaction_detection.get_interactions", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.set_seed", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.get_weights", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.multilayer_perceptron.create_mlp"], ["", "def", "detect_interactions", "(", "\n", "Xd", ",", "\n", "Yd", ",", "\n", "arch", "=", "[", "256", ",", "128", ",", "64", "]", ",", "\n", "batch_size", "=", "100", ",", "\n", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ",", "\n", "seed", "=", "None", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "if", "seed", "is", "not", "None", ":", "\n", "        ", "set_seed", "(", "seed", ")", "\n", "\n", "", "data_loaders", "=", "convert_to_torch_loaders", "(", "Xd", ",", "Yd", ",", "batch_size", ")", "\n", "\n", "model", "=", "create_mlp", "(", "[", "feats", ".", "shape", "[", "1", "]", "]", "+", "arch", "+", "[", "1", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "model", ",", "mlp_loss", "=", "train", "(", "model", ",", "data_loaders", ",", "device", "=", "device", ",", "**", "kwargs", ")", "\n", "inters", "=", "get_interactions", "(", "get_weights", "(", "model", ")", ")", "\n", "\n", "return", "inters", ",", "mlp_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.set_seed": [[9, 14], ["numpy.random.seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.manual_seed"], "function", ["None"], ["def", "set_seed", "(", "seed", "=", "42", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.force_float": [[16, 18], ["torch.from_numpy", "X_numpy.astype"], "function", ["None"], ["", "", "def", "force_float", "(", "X_numpy", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "X_numpy", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.convert_to_torch_loaders": [[20, 35], ["utils.force_float", "utils.force_float", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "type", "type"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.force_float", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.force_float"], ["", "def", "convert_to_torch_loaders", "(", "Xd", ",", "Yd", ",", "batch_size", ")", ":", "\n", "    ", "if", "type", "(", "Xd", ")", "!=", "dict", "and", "type", "(", "Yd", ")", "!=", "dict", ":", "\n", "        ", "Xd", "=", "{", "\"train\"", ":", "Xd", "}", "\n", "Yd", "=", "{", "\"train\"", ":", "Yd", "}", "\n", "\n", "", "data_loaders", "=", "{", "}", "\n", "for", "k", "in", "Xd", ":", "\n", "        ", "if", "k", "==", "\"scaler\"", ":", "\n", "            ", "continue", "\n", "", "feats", "=", "force_float", "(", "Xd", "[", "k", "]", ")", "\n", "targets", "=", "force_float", "(", "Yd", "[", "k", "]", ")", "\n", "dataset", "=", "data", ".", "TensorDataset", "(", "feats", ",", "targets", ")", "\n", "data_loaders", "[", "k", "]", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", ",", "shuffle", "=", "(", "k", "==", "\"train\"", ")", ")", "\n", "\n", "", "return", "data_loaders", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.preprocess_data": [[37, 87], ["numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler.fit", "sklearn.preprocessing.StandardScaler.fit", "utils.convert_to_torch_loaders", "len", "sklearn.preprocessing.StandardScaler.transform", "sklearn.preprocessing.StandardScaler.transform"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.convert_to_torch_loaders"], ["", "def", "preprocess_data", "(", "\n", "X", ",", "\n", "Y", ",", "\n", "valid_size", "=", "500", ",", "\n", "test_size", "=", "500", ",", "\n", "std_scale", "=", "False", ",", "\n", "get_torch_loaders", "=", "False", ",", "\n", "batch_size", "=", "100", ",", "\n", ")", ":", "\n", "\n", "    ", "n", ",", "p", "=", "X", ".", "shape", "\n", "## Make dataset splits", "\n", "ntrain", ",", "nval", ",", "ntest", "=", "n", "-", "valid_size", "-", "test_size", ",", "valid_size", ",", "test_size", "\n", "\n", "Xd", "=", "{", "\n", "\"train\"", ":", "X", "[", ":", "ntrain", "]", ",", "\n", "\"val\"", ":", "X", "[", "ntrain", ":", "ntrain", "+", "nval", "]", ",", "\n", "\"test\"", ":", "X", "[", "ntrain", "+", "nval", ":", "ntrain", "+", "nval", "+", "ntest", "]", ",", "\n", "}", "\n", "Yd", "=", "{", "\n", "\"train\"", ":", "np", ".", "expand_dims", "(", "Y", "[", ":", "ntrain", "]", ",", "axis", "=", "1", ")", ",", "\n", "\"val\"", ":", "np", ".", "expand_dims", "(", "Y", "[", "ntrain", ":", "ntrain", "+", "nval", "]", ",", "axis", "=", "1", ")", ",", "\n", "\"test\"", ":", "np", ".", "expand_dims", "(", "Y", "[", "ntrain", "+", "nval", ":", "ntrain", "+", "nval", "+", "ntest", "]", ",", "axis", "=", "1", ")", ",", "\n", "}", "\n", "\n", "for", "k", "in", "Xd", ":", "\n", "        ", "if", "len", "(", "Xd", "[", "k", "]", ")", "==", "0", ":", "\n", "            ", "assert", "k", "!=", "\"train\"", "\n", "del", "Xd", "[", "k", "]", "\n", "del", "Yd", "[", "k", "]", "\n", "\n", "", "", "if", "std_scale", ":", "\n", "        ", "scaler_x", "=", "StandardScaler", "(", ")", "\n", "scaler_y", "=", "StandardScaler", "(", ")", "\n", "\n", "scaler_x", ".", "fit", "(", "Xd", "[", "\"train\"", "]", ")", "\n", "scaler_y", ".", "fit", "(", "Yd", "[", "\"train\"", "]", ")", "\n", "\n", "for", "k", "in", "Xd", ":", "\n", "            ", "Xd", "[", "k", "]", "=", "scaler_x", ".", "transform", "(", "Xd", "[", "k", "]", ")", "\n", "Yd", "[", "k", "]", "=", "scaler_y", ".", "transform", "(", "Yd", "[", "k", "]", ")", "\n", "\n", "", "Xd", "[", "\"scaler\"", "]", "=", "scaler_x", "\n", "Yd", "[", "\"scaler\"", "]", "=", "scaler_y", "\n", "\n", "", "if", "get_torch_loaders", ":", "\n", "        ", "return", "convert_to_torch_loaders", "(", "Xd", ",", "Yd", ",", "batch_size", ")", "\n", "\n", "", "else", ":", "\n", "        ", "return", "Xd", ",", "Yd", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_auc": [[89, 107], ["set", "strengths.append", "any", "sklearn.metrics.roc_auc_score", "gt_binary_list.append", "gt_binary_list.append"], "function", ["None"], ["", "", "def", "get_auc", "(", "interactions", ",", "ground_truth", ",", "verbose", "=", "True", ")", ":", "\n", "# interactions += [(ground_truth[0], 0)]  # TODO delete tghis line it's just for testing low settings stuff seriously!!!", "\n", "# print(interactions)", "\n", "# print(ground_truth)", "\n", "    ", "strengths", "=", "[", "]", "\n", "gt_binary_list", "=", "[", "]", "\n", "for", "inter", ",", "strength", "in", "interactions", ":", "\n", "        ", "inter_set", "=", "set", "(", "inter", ")", "# assume 1-indexed", "\n", "strengths", ".", "append", "(", "strength", ")", "\n", "if", "any", "(", "inter_set", "<=", "gt", "for", "gt", "in", "ground_truth", ")", ":", "\n", "            ", "gt_binary_list", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "gt_binary_list", ".", "append", "(", "0", ")", "\n", "", "", "try", ":", "\n", "        ", "auc", "=", "roc_auc_score", "(", "gt_binary_list", ",", "strengths", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "0", "\n", "", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.get_anyorder_R_precision": [[109, 130], ["len", "set", "any", "len", "recovered_gt.append"], "function", ["None"], ["", "def", "get_anyorder_R_precision", "(", "interactions", ",", "ground_truth", ")", ":", "\n", "\n", "    ", "R", "=", "len", "(", "ground_truth", ")", "\n", "recovered_gt", "=", "[", "]", "\n", "counter", "=", "0", "\n", "\n", "for", "inter", ",", "strength", "in", "interactions", ":", "\n", "        ", "if", "counter", "==", "R", ":", "\n", "            ", "break", "\n", "\n", "", "inter_set", "=", "set", "(", "inter", ")", "# assume 1-indexed", "\n", "\n", "if", "any", "(", "inter_set", "<", "gt", "for", "gt", "in", "ground_truth", ")", ":", "\n", "            ", "continue", "\n", "", "counter", "+=", "1", "\n", "if", "inter_set", "in", "ground_truth", ":", "\n", "            ", "recovered_gt", ".", "append", "(", "inter_set", ")", "\n", "\n", "", "", "R_precision", "=", "len", "(", "recovered_gt", ")", "/", "R", "\n", "\n", "return", "R_precision", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.print_rankings": [[132, 149], ["print", "range", "utils.justify", "print", "utils.justify"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.justify", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.justify"], ["", "def", "print_rankings", "(", "pairwise_interactions", ",", "anyorder_interactions", ",", "top_k", "=", "10", ",", "spacing", "=", "14", ")", ":", "\n", "    ", "print", "(", "\n", "justify", "(", "[", "\"Pairwise interactions\"", ",", "\"\"", ",", "\"Arbitrary-order interactions\"", "]", ",", "spacing", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "top_k", ")", ":", "\n", "        ", "p_inter", ",", "p_strength", "=", "pairwise_interactions", "[", "i", "]", "\n", "a_inter", ",", "a_strength", "=", "anyorder_interactions", "[", "i", "]", "\n", "print", "(", "\n", "justify", "(", "\n", "[", "\n", "p_inter", ",", "\n", "\"{0:.4f}\"", ".", "format", "(", "p_strength", ")", ",", "\n", "\"\"", ",", "\n", "a_inter", ",", "\n", "\"{0:.4f}\"", ".", "format", "(", "a_strength", ")", ",", "\n", "]", ",", "\n", "spacing", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.utils.justify": [[153, 155], ["str().ljust", "str"], "function", ["None"], ["", "", "def", "justify", "(", "row", ",", "spacing", "=", "14", ")", ":", "\n", "    ", "return", "\"\"", ".", "join", "(", "str", "(", "item", ")", ".", "ljust", "(", "spacing", ")", "for", "item", "in", "row", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Identity.__init__": [[149, 151], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Identity.forward": [[152, 154], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Flatten.__init__": [[157, 159], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Flatten.forward": [[160, 162], ["torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "flatten", "(", "x", ",", "start_dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Compress.__init__": [[165, 177], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_channels", "=", "64", ")", ":", "\n", "        ", "super", "(", "Compress", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "2048", ",", "1024", ",", "2", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "1024", ")", ",", "\n", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "1024", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "self", ".", "out_channels", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.Compress.forward": [[179, 185], ["CocoObjectDetection.Compress.conv", "CocoObjectDetection.Compress.permute", "CocoObjectDetection.Compress.reshape", "CocoObjectDetection.Compress.layers().view", "CocoObjectDetection.Compress.permute", "CocoObjectDetection.Compress.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "_x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "_x", "=", "_x", ".", "reshape", "(", "-", "1", ",", "_x", ".", "shape", "[", "-", "1", "]", ")", "\n", "_x", "=", "self", ".", "layers", "(", "_x", ")", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ",", "self", ".", "out_channels", ")", "\n", "return", "_x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.train_model": [[58, 140], ["time.time", "copy.deepcopy", "range", "print", "print", "model.load_state_dict", "model.state_dict", "print", "print", "print", "time.time", "print", "model.train", "model.eval", "inputs.to.to", "labels.to.to", "optimizer.zero_grad", "range", "len", "len", "copy.deepcopy", "val_acc_history.append", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model.double", "model.argmax", "criterion.item", "inputs.to.size", "model.state_dict", "model", "criterion", "criterion", "model", "criterion", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train"], ["def", "train_model", "(", "model", ",", "dataloaders", ",", "criterion", ",", "optimizer", ",", "num_epochs", "=", "25", ",", "is_inception", "=", "False", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_acc_history", "=", "[", "]", "\n", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "best_acc", "=", "0.0", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "epoch", ",", "num_epochs", "-", "1", ")", ")", "\n", "print", "(", "'-'", "*", "10", ")", "\n", "\n", "# Each epoch has a training and validation phase", "\n", "for", "phase", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "if", "phase", "==", "'train'", ":", "\n", "                ", "model", ".", "train", "(", ")", "# Set model to training mode", "\n", "", "else", ":", "\n", "                ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "\n", "", "running_loss", "=", "0.0", "\n", "running_corrects", "=", "0", "\n", "\n", "# Iterate over data.", "\n", "for", "inputs", ",", "labels", "in", "dataloaders", "[", "phase", "]", ":", "\n", "                ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "all_true", "=", "labels", "[", "\"all_true\"", "]", "\n", "labels", "=", "labels", "[", "\"labels\"", "]", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "\n", "# zero the parameter gradients", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "phase", "==", "'train'", ")", ":", "\n", "# Get model outputs and calculate loss", "\n", "# Special case for inception because in training it has an auxiliary output. In train", "\n", "#   mode we calculate the loss by summing the final output and the auxiliary output", "\n", "#   but in testing we only consider the final output.", "\n", "                    ", "if", "is_inception", "and", "phase", "==", "'train'", ":", "\n", "# From https://discuss.pytorch.org/t/how-to-optimize-inception-model-with-auxiliary-classifiers/7958", "\n", "                        ", "outputs", ",", "aux_outputs", "=", "model", "(", "inputs", ")", "\n", "loss1", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "loss2", "=", "criterion", "(", "aux_outputs", ",", "labels", ")", "\n", "loss", "=", "loss1", "+", "0.4", "*", "loss2", "\n", "", "else", ":", "\n", "                        ", "outputs", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "\n", "", "outputs", "=", "outputs", ".", "double", "(", ")", "\n", "preds", "=", "outputs", ".", "argmax", "(", "1", ")", "\n", "\n", "# backward + optimize only if in training phase", "\n", "if", "phase", "==", "'train'", ":", "\n", "                        ", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# statistics", "\n", "", "", "running_loss", "+=", "loss", ".", "item", "(", ")", "*", "inputs", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "running_corrects", "+=", "1", "if", "preds", "[", "i", "]", "==", "labels", "[", "i", "]", ".", "data", "else", "0", "\n", "\n", "", "", "epoch_loss", "=", "running_loss", "/", "len", "(", "dataloaders", "[", "phase", "]", ".", "dataset", ")", "\n", "epoch_acc", "=", "running_corrects", "/", "len", "(", "dataloaders", "[", "phase", "]", ".", "dataset", ")", "\n", "print", "(", "'{} Loss: {:.4f} Acc: {:.4f}'", ".", "format", "(", "phase", ",", "epoch_loss", ",", "epoch_acc", ")", ")", "\n", "\n", "# deep copy the model", "\n", "if", "phase", "==", "'val'", "and", "epoch_acc", ">", "best_acc", ":", "\n", "                ", "best_acc", "=", "epoch_acc", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "", "if", "phase", "==", "'val'", ":", "\n", "                ", "val_acc_history", ".", "append", "(", "epoch_acc", ")", "\n", "\n", "", "", "print", "(", ")", "\n", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "print", "(", "'Training complete in {:.0f}m {:.0f}s'", ".", "format", "(", "time_elapsed", "//", "60", ",", "time_elapsed", "%", "60", ")", ")", "\n", "print", "(", "'Best val Acc: {:4f}'", ".", "format", "(", "best_acc", ")", ")", "\n", "\n", "# load best model weights", "\n", "model", ".", "load_state_dict", "(", "best_model_wts", ")", "\n", "return", "model", ",", "val_acc_history", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad": [[142, 146], ["model.parameters"], "function", ["None"], ["", "def", "set_parameter_requires_grad", "(", "model", ",", "feature_extracting", ")", ":", "\n", "    ", "if", "feature_extracting", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.initialize_model": [[187, 334], ["CocoObjectDetection.set_parameter_requires_grad", "torch.Sequential", "torchvision.models.detection.fasterrcnn_resnet50_fpn", "resnet.named_modules", "torchvision.models.resnet50", "models.resnet50.load_state_dict", "torchvision.models.resnet50", "torch.Linear", "torch.GELU", "torch.Linear", "torch.GELU", "torch.Dropout", "torch.Linear", "torch.Softmax", "torchvision.models.alexnet", "CocoObjectDetection.set_parameter_requires_grad", "torch.Linear", "isinstance", "layer_name.split", "torch.BatchNorm2d", "m.__getattr__.__setattr__", "resnet.state_dict", "CocoObjectDetection.Compress", "torch.Sequential", "CocoObjectDetection.Compress", "torch.Sequential", "CocoObjectDetection.Identity", "torchvision.models.vgg11_bn", "CocoObjectDetection.set_parameter_requires_grad", "torch.Linear", "bn_to_replace.append", "len", "resnet.__getattr__", "m.__getattr__.__getattr__", "resnet.__getattr__", "copy.deepcopy", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.Parameter", "torch.Parameter", "CocoObjectDetection.Flatten", "torchvision.models.squeezenet1_0", "CocoObjectDetection.set_parameter_requires_grad", "torch.Conv2d", "m.__getattr__.__getattr__", "torchvision.models.densenet121", "CocoObjectDetection.set_parameter_requires_grad", "torch.Linear", "torchvision.models.inception_v3", "CocoObjectDetection.set_parameter_requires_grad", "torch.Linear", "torch.Linear", "print", "exit"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.set_parameter_requires_grad"], ["", "", "def", "initialize_model", "(", "model_name", ",", "num_classes", ",", "feature_extract", ",", "use_pretrained", "=", "True", ")", ":", "\n", "# Initialize these variables which will be set in this if statement. Each of these", "\n", "#   variables is model specific.", "\n", "    ", "model_ft", "=", "None", "\n", "input_size", "=", "0", "\n", "\n", "if", "model_name", "==", "\"resnet\"", "or", "model_name", "==", "\"resnetcoco\"", ":", "\n", "        ", "\"\"\" Resnet18\n        \"\"\"", "\n", "if", "model_name", "==", "\"resnetcoco\"", ":", "\n", "# Create the model", "\n", "            ", "model", "=", "models", ".", "detection", ".", "fasterrcnn_resnet50_fpn", "(", "pretrained", "=", "use_pretrained", ",", "\n", "pretrained_backbone", "=", "use_pretrained", ")", "\n", "resnet", "=", "model", ".", "backbone", ".", "body", "\n", "\n", "# Check for all FrozenBN layers", "\n", "bn_to_replace", "=", "[", "]", "\n", "for", "name", ",", "module", "in", "resnet", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "module", ",", "torchvision", ".", "ops", ".", "misc", ".", "FrozenBatchNorm2d", ")", ":", "\n", "# print('adding ', name)", "\n", "                    ", "bn_to_replace", ".", "append", "(", "name", ")", "\n", "\n", "# Iterate all layers to change", "\n", "", "", "for", "layer_name", "in", "bn_to_replace", ":", "\n", "# Check if name is nested", "\n", "                ", "*", "parent", ",", "child", "=", "layer_name", ".", "split", "(", "'.'", ")", "\n", "# Nested", "\n", "if", "len", "(", "parent", ")", ">", "0", ":", "\n", "# Get parent modules", "\n", "                    ", "m", "=", "resnet", ".", "__getattr__", "(", "parent", "[", "0", "]", ")", "\n", "for", "p", "in", "parent", "[", "1", ":", "]", ":", "\n", "                        ", "m", "=", "m", ".", "__getattr__", "(", "p", ")", "\n", "# Get the FrozenBN layer", "\n", "", "orig_layer", "=", "m", ".", "__getattr__", "(", "child", ")", "\n", "", "else", ":", "\n", "                    ", "m", "=", "resnet", ".", "__getattr__", "(", "child", ")", "\n", "orig_layer", "=", "copy", ".", "deepcopy", "(", "m", ")", "# deepcopy, otherwise you'll get an infinite recusrsion", "\n", "# Add your layer here", "\n", "", "in_channels", "=", "orig_layer", ".", "weight", ".", "shape", "[", "0", "]", "\n", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "bn", ".", "weight", "=", "nn", ".", "Parameter", "(", "orig_layer", ".", "weight", ")", "\n", "bn", ".", "bias", "=", "nn", ".", "Parameter", "(", "orig_layer", ".", "bias", ")", "\n", "bn", ".", "running_mean", "=", "orig_layer", ".", "running_mean", "\n", "bn", ".", "running_var", "=", "orig_layer", ".", "running_var", "\n", "", "m", ".", "__setattr__", "(", "child", ",", "bn", ")", "\n", "\n", "# Fix the bn1 module to load the state_dict", "\n", "", "resnet", ".", "bn1", "=", "resnet", ".", "bn1", ".", "bn1", "\n", "\n", "# Create reference model and load state_dict", "\n", "reference", "=", "models", ".", "resnet50", "(", ")", "\n", "reference", ".", "load_state_dict", "(", "resnet", ".", "state_dict", "(", ")", ",", "strict", "=", "False", ")", "\n", "model_ft", "=", "reference", "\n", "", "else", ":", "\n", "            ", "model_ft", "=", "models", ".", "resnet50", "(", "pretrained", "=", "use_pretrained", ")", "\n", "", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "compress", "=", "True", "\n", "if", "args", ".", "avg_pool", ":", "\n", "            ", "if", "compress", ":", "\n", "                ", "c", "=", "Compress", "(", ")", "\n", "model_ft", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "\n", "c", ",", "\n", "model_ft", ".", "avgpool", "\n", ")", "\n", "num_ftrs", "=", "c", ".", "out_channels", "\n", "", "else", ":", "\n", "                ", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "", "", "else", ":", "\n", "            ", "if", "compress", ":", "\n", "                ", "c", "=", "Compress", "(", ")", "\n", "model_ft", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "\n", "c", ",", "\n", "Flatten", "(", ")", "\n", ")", "\n", "num_ftrs", "=", "c", ".", "out_channels", "*", "5", "*", "5", "\n", "", "else", ":", "\n", "                ", "model_ft", ".", "avgpool", "=", "Identity", "(", ")", "\n", "num_ftrs", "=", "2048", "*", "7", "*", "7", "\n", "# TODO test without pooling, compare to pooling, avg max interaction effect / performance / relational reasoning", "\n", "", "", "lay", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "num_ftrs", ",", "256", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "256", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Softmax", "(", ")", "\n", ")", "\n", "model_ft", ".", "fc", "=", "lay", "\n", "input_size", "=", "224", "\n", "\n", "", "elif", "model_name", "==", "\"alexnet\"", ":", "\n", "        ", "\"\"\" Alexnet\n        \"\"\"", "\n", "model_ft", "=", "models", ".", "alexnet", "(", "pretrained", "=", "use_pretrained", ")", "\n", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "num_ftrs", "=", "model_ft", ".", "classifier", "[", "6", "]", ".", "in_features", "\n", "model_ft", ".", "classifier", "[", "6", "]", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "input_size", "=", "224", "\n", "\n", "", "elif", "model_name", "==", "\"vgg\"", ":", "\n", "        ", "\"\"\" VGG11_bn\n        \"\"\"", "\n", "model_ft", "=", "models", ".", "vgg11_bn", "(", "pretrained", "=", "use_pretrained", ")", "\n", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "num_ftrs", "=", "model_ft", ".", "classifier", "[", "6", "]", ".", "in_features", "\n", "model_ft", ".", "classifier", "[", "6", "]", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "input_size", "=", "224", "\n", "\n", "", "elif", "model_name", "==", "\"squeezenet\"", ":", "\n", "        ", "\"\"\" Squeezenet\n        \"\"\"", "\n", "model_ft", "=", "models", ".", "squeezenet1_0", "(", "pretrained", "=", "use_pretrained", ")", "\n", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "model_ft", ".", "classifier", "[", "1", "]", "=", "nn", ".", "Conv2d", "(", "512", ",", "num_classes", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "model_ft", ".", "num_classes", "=", "num_classes", "\n", "input_size", "=", "224", "\n", "\n", "", "elif", "model_name", "==", "\"densenet\"", ":", "\n", "        ", "\"\"\" Densenet\n        \"\"\"", "\n", "model_ft", "=", "models", ".", "densenet121", "(", "pretrained", "=", "use_pretrained", ")", "\n", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "num_ftrs", "=", "model_ft", ".", "classifier", ".", "in_features", "\n", "model_ft", ".", "classifier", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "input_size", "=", "224", "\n", "\n", "", "elif", "model_name", "==", "\"inception\"", ":", "\n", "        ", "\"\"\" Inception v3 \n        Be careful, expects (299,299) sized images and has auxiliary output\n        \"\"\"", "\n", "model_ft", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "use_pretrained", ")", "\n", "set_parameter_requires_grad", "(", "model_ft", ",", "feature_extract", ")", "\n", "# Handle the auxilary net", "\n", "num_ftrs", "=", "model_ft", ".", "AuxLogits", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "AuxLogits", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "# Handle the primary net", "\n", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "input_size", "=", "299", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Invalid model name, exiting...\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "return", "model_ft", ",", "input_size", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.data_transforms": [[342, 356], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["def", "data_transforms", "(", "mode", ")", ":", "\n", "    ", "if", "mode", "==", "\"train\"", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "input_size", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_loader": [[362, 375], ["Data.coco.CocoDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["None"], ["def", "get_loader", "(", "root", ",", "json", ",", "transform", ",", "batch_size", ",", "shuffle", ",", "num_workers", ")", ":", "\n", "    ", "\"\"\"Returns torch.utils.data.DataLoader for custom coco dataset.\"\"\"", "\n", "# COCO caption dataset", "\n", "coco", "=", "CocoDataset", "(", "root", "=", "root", ",", "\n", "json", "=", "json", ",", "\n", "transform", "=", "transform", ")", "\n", "\n", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "coco", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", ")", "\n", "return", "data_loader", ",", "coco", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_accuracy": [[448, 458], ["outputs.argmax().to", "range", "corrects.append", "outputs.argmax", "sum", "model_ft.to", "imgs.to"], "function", ["None"], ["", "", "def", "get_accuracy", "(", "imgs", ",", "lbls", ",", "return_raw", "=", "False", ")", ":", "\n", "    ", "outputs", "=", "model_ft", ".", "to", "(", "device", ")", "(", "imgs", ".", "to", "(", "device", ")", ")", ".", "to", "(", "device", ")", ".", "double", "(", ")", "\n", "preds", "=", "outputs", ".", "argmax", "(", "1", ")", ".", "to", "(", "\"cpu\"", ")", "\n", "corrects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "corrects", ".", "append", "(", "1", "if", "preds", "[", "i", "]", "==", "lbls", "[", "i", "]", ".", "data", "else", "0", ")", "\n", "", "if", "return_raw", ":", "\n", "        ", "return", "corrects", "\n", "", "else", ":", "\n", "        ", "return", "sum", "(", "corrects", ")", "/", "preds", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.downstream": [[460, 467], ["torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "print", "torch.flatten.max", "torch.flatten.to", "model_ft.eval().fc.to", "torch.AdaptiveAvgPool2d", "model_ft.eval"], "function", ["None"], ["", "", "def", "downstream", "(", "_x", ")", ":", "\n", "    ", "if", "args", ".", "avg_pool", ":", "\n", "        ", "_x", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "(", "_x", ")", "\n", "", "_x", "=", "torch", ".", "flatten", "(", "_x", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "_x", "=", "model_ft", ".", "eval", "(", ")", ".", "fc", ".", "to", "(", "\"cpu\"", ")", "(", "_x", ")", "\n", "print", "(", "_x", ")", "\n", "return", "_x", ".", "max", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_hessian": [[469, 480], ["model_ft.fc[].to", "model_ft.fc[].to.bias.to", "model_ft.fc[].to.weight.to", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "model_ft.fc[].to.", "fc.weight.to.to", "_x.to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "fc.weight.to.to", "t_2.to", "fc.weight.to.to", "fc.weight.to.to", "torch.exp.to", "torch.exp.to", "t_1.to", "t_1.to"], "function", ["None"], ["", "def", "get_hessian", "(", "_x", ")", ":", "\n", "    ", "fc", "=", "model_ft", ".", "fc", "[", "0", "]", ".", "to", "(", "device", ")", "\n", "b", "=", "fc", ".", "bias", ".", "to", "(", "device", ")", "\n", "W", "=", "fc", ".", "weight", ".", "to", "(", "device", ")", "\n", "t_0", "=", "torch", ".", "exp", "(", "-", "fc", "(", "_x", ".", "to", "(", "device", ")", ")", ")", "\n", "t_1", "=", "(", "torch", ".", "ones", "(", "b", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "device", ")", "+", "(", "2", "*", "t_0", ")", ")", "\n", "t_2", "=", "(", "t_0", "/", "t_1", ")", "\n", "return", "(", "(", "2", "*", "(", "\n", "W", ".", "to", "(", "device", ")", ".", "T", "[", "None", ",", ":", ",", ":", "]", "*", "(", "(", "t_0", ".", "to", "(", "device", ")", "*", "t_0", ".", "to", "(", "device", ")", ")", "/", "(", "t_1", ".", "to", "(", "device", ")", "*", "t_1", ".", "to", "(", "device", ")", ")", ")", "[", ":", ",", "\n", "None", ",", ":", "]", ")", ".", "to", "(", "\"cpu\"", ")", ".", "matmul", "(", "W", ".", "to", "(", "\"cpu\"", ")", ")", ")", "-", "\n", "(", "W", ".", "to", "(", "device", ")", ".", "T", "[", "None", ",", ":", ",", ":", "]", "*", "t_2", ".", "to", "(", "device", ")", "[", ":", ",", "None", ",", ":", "]", ")", ".", "to", "(", "\"cpu\"", ")", ".", "matmul", "(", "W", ".", "to", "(", "\"cpu\"", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_interaction_effects": [[482, 497], ["torch.ModuleList().eval", "torch.Sequential", "nn.Sequential.", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "hessian.view().to.view().to", "features.permute().reshape().to.permute().reshape().to", "utils.TaylorCAM().reshape", "img.to", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.ModuleList", "features[].to", "hessian.view().to.view", "features.permute().reshape().to.permute().reshape", "utils.TaylorCAM", "features.permute().reshape().to.permute", "list", "model_ft.children", "list", "model_ft.children"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM"], ["", "def", "get_interaction_effects", "(", "img", ")", ":", "\n", "    ", "layers", "=", "nn", ".", "ModuleList", "(", "list", "(", "model_ft", ".", "children", "(", ")", ")", "[", ":", "-", "2", "]", "+", "[", "list", "(", "model_ft", ".", "children", "(", ")", ")", "[", "-", "2", "]", "[", "0", "]", "]", ")", ".", "eval", "(", ")", "\n", "feature_extractor", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "features", "=", "feature_extractor", "(", "img", ".", "to", "(", "device", ")", ")", "\n", "mb", "=", "features", ".", "shape", "[", "0", "]", "\n", "n_channels", "=", "features", ".", "shape", "[", "1", "]", "\n", "height", ",", "width", "=", "features", ".", "shape", "[", "2", "]", ",", "features", ".", "shape", "[", "3", "]", "\n", "hessian", "=", "torch", ".", "zeros", "(", "(", "mb", ",", "n_channels", ",", "height", ",", "width", ",", "n_channels", ",", "height", ",", "width", ")", ")", "\n", "for", "b", "in", "range", "(", "mb", ")", ":", "\n", "        ", "hessian", "[", "b", "]", "=", "torch", ".", "autograd", ".", "functional", ".", "hessian", "(", "downstream", ",", "features", "[", "b", "]", ".", "to", "(", "\"cpu\"", ")", ",", "create_graph", "=", "False", ",", "\n", "strict", "=", "True", ")", "\n", "", "hessian", "=", "hessian", ".", "view", "(", "mb", ",", "n_channels", ",", "height", "*", "width", ",", "n_channels", ",", "height", "*", "width", ")", ".", "to", "(", "device", ")", "\n", "\n", "features", "=", "features", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "reshape", "(", "mb", ",", "height", "*", "width", ",", "n_channels", ")", ".", "to", "(", "device", ")", "\n", "return", "utils", ".", "TaylorCAM", "(", "features", ",", "hessian", ",", "0", ",", "2", ",", "4", ",", "1", ",", "3", ")", ".", "reshape", "(", "mb", ",", "height", ",", "width", ",", "height", ",", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.explain": [[499, 600], ["model_ft.eval", "CocoObjectDetection.get_interaction_effects", "int", "int", "CocoObjectDetection.get_accuracy", "range", "print", "print", "print", "print", "print", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "zero_diag.reshape.reshape", "zero_diag.reshape.reshape", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu.reshape", "reversed", "list", "range", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "out.append", "reversed", "max_interaction_effects.append", "min_interaction_effects.append", "med_interaction_effects.append", "mean_interaction_effects.append", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "CocoObjectDetection.explain.unravel_index"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_interaction_effects", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.get_accuracy"], ["", "def", "explain", "(", "imgs", ",", "lbls", ",", "zero_diags", "=", "True", ",", "name", "=", "\"coco\"", ")", ":", "\n", "    ", "model_ft", ".", "eval", "(", ")", "\n", "interaction_effects", "=", "get_interaction_effects", "(", "imgs", ")", "\n", "\n", "if", "zero_diags", ":", "\n", "        ", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "interaction_effects", ".", "shape", "[", ":", "-", "2", "]", "+", "\n", "(", "interaction_effects", ".", "shape", "[", "3", "]", "*", "interaction_effects", ".", "shape", "[", "4", "]", ",", ")", ")", "\n", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "zero_diag", ".", "shape", "[", "0", "]", ",", "\n", "zero_diag", ".", "shape", "[", "1", "]", "*", "zero_diag", ".", "shape", "[", "2", "]", ",", "\n", "zero_diag", ".", "shape", "[", "3", "]", ")", "\n", "zero_diag", "=", "torch", ".", "triu", "(", "zero_diag", ",", "diagonal", "=", "1", ")", "\n", "interaction_effects", "=", "zero_diag", ".", "reshape", "(", "interaction_effects", ".", "shape", ")", "\n", "\n", "", "height_scaler", "=", "int", "(", "imgs", ".", "shape", "[", "2", "]", "/", "interaction_effects", ".", "shape", "[", "1", "]", ")", "\n", "width_scaler", "=", "int", "(", "imgs", ".", "shape", "[", "3", "]", "/", "interaction_effects", ".", "shape", "[", "2", "]", ")", "\n", "\n", "def", "unravel_index", "(", "index", ",", "shape", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "dim", "in", "reversed", "(", "shape", ")", ":", "\n", "            ", "out", ".", "append", "(", "index", "%", "dim", ")", "\n", "index", "=", "index", "//", "dim", "\n", "", "return", "list", "(", "reversed", "(", "out", ")", ")", "\n", "\n", "\n", "", "all_true", "=", "lbls", "[", "\"all_true\"", "]", "\n", "lbls", "=", "lbls", "[", "\"labels\"", "]", "\n", "\n", "accuracy", "=", "get_accuracy", "(", "imgs", ",", "lbls", ",", "return_raw", "=", "True", ")", "\n", "max_interaction_effects", "=", "[", "]", "\n", "min_interaction_effects", "=", "[", "]", "\n", "med_interaction_effects", "=", "[", "]", "\n", "mean_interaction_effects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "interaction_effects", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "topk", "=", "100", "\n", "for", "k", "in", "range", "(", "topk", ")", ":", "\n", "            ", "max_interaction_effects", ".", "append", "(", "torch", ".", "max", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "min_interaction_effects", ".", "append", "(", "torch", ".", "min", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "med_interaction_effects", ".", "append", "(", "torch", ".", "median", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "mean_interaction_effects", ".", "append", "(", "torch", ".", "mean", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "top_interaction", "=", "torch", ".", "argmax", "(", "interaction_effects", "[", "i", "]", ")", "\n", "top_interaction", "=", "unravel_index", "(", "top_interaction", ",", "interaction_effects", "[", "i", "]", ".", "shape", ")", "\n", "interaction_effects", "[", "i", "]", "[", "top_interaction", "]", "=", "0", "\n", "border_size", "=", "4", "\n", "line_size", "=", "border_size", "\n", "border_color", "=", "torch", ".", "tensor", "(", "[", "230", ",", "224", ",", "176", "]", ")", "[", ":", ",", "None", ",", "None", "]", "\n", "line_color", "=", "(", "250", ",", "128", ",", "114", ")", "\n", "pad", "=", "16", "\n", "padded_image", "=", "torch", ".", "nn", ".", "ConstantPad2d", "(", "pad", ",", "1", ")", "(", "imgs", "[", "i", "]", ")", "\n", "heights", "=", "[", "]", "\n", "widths", "=", "[", "]", "\n", "for", "yx", "in", "range", "(", "0", ",", "len", "(", "top_interaction", ")", ",", "2", ")", ":", "\n", "                ", "heights", ".", "append", "(", "(", "top_interaction", "[", "yx", "]", "*", "height_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "]", "+", "1", ")", "*", "height_scaler", "+", "2", "*", "pad", ")", ")", "\n", "widths", ".", "append", "(", "(", "top_interaction", "[", "yx", "+", "1", "]", "*", "width_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "+", "1", "]", "+", "1", ")", "*", "width_scaler", "+", "2", "*", "pad", ")", ")", "\n", "", "heatmap", "=", "copy", ".", "deepcopy", "(", "padded_image", ")", "\n", "inv_normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "-", "0.485", "/", "0.229", ",", "-", "0.456", "/", "0.224", ",", "-", "0.406", "/", "0.225", "]", ",", "\n", "std", "=", "[", "1", "/", "0.229", ",", "1", "/", "0.224", ",", "1", "/", "0.225", "]", "\n", ")", "\n", "pi", "=", "inv_normalize", "(", "padded_image", ")", "\n", "hm", "=", "inv_normalize", "(", "heatmap", ")", "\n", "for", "h", ",", "w", "in", "zip", "(", "heights", ",", "widths", ")", ":", "\n", "                ", "hm", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "0", "]", "+", "border_size", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "hm", "[", ":", ",", "h", "[", "1", "]", "-", "border_size", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "hm", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "0", "]", "+", "border_size", "]", "=", "border_color", "\n", "hm", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "1", "]", "-", "border_size", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "", "img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "pi", ")", "\n", "h_img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "hm", ")", "\n", "# res = Image.blend(img, h_img, 0.5)", "\n", "res", "=", "h_img", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "res", ")", "\n", "draw", ".", "line", "(", "[", "(", "sum", "(", "w", ")", "/", "2.", ",", "sum", "(", "h", ")", "/", "2.", ")", "for", "w", ",", "h", "in", "zip", "(", "widths", ",", "heights", ")", "]", ",", "fill", "=", "line_color", ",", "width", "=", "line_size", ")", "\n", "# res = res.crop((pad, pad, res.size[0] - pad, res.size[1] - pad))", "\n", "correct_incorrect", "=", "\"correct\"", "if", "accuracy", "[", "i", "]", ">", "0", "else", "\"incorrect\"", "\n", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainCOCO/{}/{}/{}/label_{}_{}/{}\"", ".", "format", "(", "args", ".", "name", ",", "name", ",", "correct_incorrect", ",", "lbls", "[", "i", "]", ".", "data", ",", "all_true", "[", "i", "]", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainCOCO/{}/{}/{}_raw/label_{}_{}/{}\"", ".", "format", "(", "args", ".", "name", ",", "name", ",", "correct_incorrect", ",", "lbls", "[", "i", "]", ".", "data", ",", "all_true", "[", "i", "]", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "res", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainCOCO/{}/{}/{}/label_{}_{}/{}/{}.png\"", ".", "format", "(", "\n", "args", ".", "name", ",", "name", ",", "correct_incorrect", ",", "lbls", "[", "i", "]", ".", "data", ",", "all_true", "[", "i", "]", ",", "i", ",", "k", ",", "\"PNG\"", ")", ")", "\n", "img", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainCOCO/{}/{}/{}_raw/label_{}_{}/{}/{}.png\"", ".", "format", "(", "\n", "args", ".", "name", ",", "name", ",", "correct_incorrect", ",", "lbls", "[", "i", "]", ".", "data", ",", "all_true", "[", "i", "]", ",", "i", ",", "k", ",", "\"PNG\"", ")", ")", "\n", "\n", "", "", "accuracy", "=", "sum", "(", "accuracy", ")", "*", "100.", "/", "len", "(", "accuracy", ")", "\n", "print", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "print", "(", "\"Average max interaction effect: \"", ",", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", "\n", "print", "(", "\"Average min interaction effect: \"", ",", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", "\n", "print", "(", "\"Average median interaction effect: \"", ",", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", "\n", "print", "(", "\"Average interaction effect: \"", ",", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", "\n", "file_object", "=", "open", "(", "\"./Results/ExplainCOCO/{}/{}/stats.txt\"", ".", "format", "(", "args", ".", "name", ",", "name", ")", ",", "'w'", ")", "\n", "file_object", ".", "write", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average max interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average min interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average median interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.test": [[602, 632], ["model.eval", "print", "open", "open.write", "open.close", "inputs.to.to", "labels.to.to", "range", "len", "len", "os.makedirs", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model().double", "criterion", "model().double.argmax", "criterion.item", "inputs.to.size", "model"], "function", ["None"], ["", "def", "test", "(", "model", ",", "phase", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "running_loss", "=", "0.0", "\n", "running_corrects", "=", "0", "\n", "\n", "for", "inputs", ",", "labels", "in", "dataloaders", "[", "phase", "]", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", "[", "\"labels\"", "]", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "outputs", "=", "model", "(", "inputs", ")", ".", "double", "(", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "preds", "=", "outputs", ".", "argmax", "(", "1", ")", "\n", "\n", "", "running_loss", "+=", "loss", ".", "item", "(", ")", "*", "inputs", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "running_corrects", "+=", "1", "if", "preds", "[", "i", "]", "==", "labels", "[", "i", "]", ".", "data", "else", "0", "\n", "\n", "", "", "epoch_loss", "=", "running_loss", "/", "len", "(", "dataloaders", "[", "phase", "]", ".", "dataset", ")", "\n", "epoch_acc", "=", "running_corrects", "/", "len", "(", "dataloaders", "[", "phase", "]", ".", "dataset", ")", "\n", "print", "(", "'{} Test Loss: {:.4f} Test Acc: {:.4f}'", ".", "format", "(", "phase", ",", "epoch_loss", ",", "epoch_acc", ")", ")", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "\"./Results/ExplainCOCO/{}/\"", ".", "format", "(", "args", ".", "name", ")", ")", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "", "file_object", "=", "open", "(", "'Results/ExplainCOCO/{}/COCO_acc_{}.txt'", ".", "format", "(", "args", ".", "name", ",", "args", ".", "name", ")", ",", "'w'", ")", "\n", "file_object", ".", "write", "(", "'{} Test Loss: {:.4f} Test Acc: {:.4f}'", ".", "format", "(", "phase", ",", "epoch_loss", ",", "epoch_acc", ")", ")", "\n", "file_object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.YieldOrGo.tensor_data": [[80, 87], ["torch.from_numpy", "torch.from_numpy", "input_img_unscaled.data.resize_().copy_", "input_img.copy_", "label.data.resize_().copy_", "numpy.asarray", "numpy.asarray", "torch.nn.functional.interpolate", "input_img_unscaled.data.resize_", "label.data.resize_", "torch.from_numpy.size", "torch.from_numpy.size"], "function", ["None"], ["def", "tensor_data", "(", "data", ",", "i", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "0", "]", "[", "bs", "*", "i", ":", "bs", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "ans", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "1", "]", "[", "bs", "*", "i", ":", "bs", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "\n", "input_img_unscaled", ".", "data", ".", "resize_", "(", "img", ".", "size", "(", ")", ")", ".", "copy_", "(", "img", ")", "\n", "input_img", ".", "copy_", "(", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "input_img_unscaled", ",", "75", ")", ")", "\n", "label", ".", "data", ".", "resize_", "(", "ans", ".", "size", "(", ")", ")", ".", "copy_", "(", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.YieldOrGo.cvt_data_axis": [[89, 93], ["None"], "function", ["None"], ["", "def", "cvt_data_axis", "(", "data", ")", ":", "\n", "    ", "img", "=", "[", "e", "[", "0", "]", "for", "e", "in", "data", "]", "\n", "ans", "=", "[", "e", "[", "1", "]", "for", "e", "in", "data", "]", "\n", "return", "(", "img", ",", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.YieldOrGo.train": [[95, 112], ["model.to().train", "random.shuffle", "YieldOrGo.cvt_data_axis", "range", "YieldOrGo.tensor_data", "torchvision.transforms.functional.to_pil_image().show", "model.train_", "model.to", "len", "input_img.to", "label.to", "print", "torchvision.transforms.functional.to_pil_image", "len", "len"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.train_"], ["", "def", "train", "(", "epoch", ",", "rel", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", ".", "train", "(", ")", "\n", "\n", "random", ".", "shuffle", "(", "rel", ")", "\n", "\n", "rel", "=", "cvt_data_axis", "(", "rel", ")", "\n", "\n", "for", "batch_idx", "in", "range", "(", "len", "(", "rel", "[", "0", "]", ")", "//", "bs", ")", ":", "\n", "        ", "tensor_data", "(", "rel", ",", "batch_idx", ")", "\n", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "input_img_unscaled", "[", "0", "]", ")", ".", "show", "(", ")", "\n", "accuracy_rel", "=", "model", ".", "train_", "(", "input_img", ".", "to", "(", "device", ")", ",", "None", ",", "label", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "batch_idx", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "\n", "'Train Epoch: {} [{}/{} ({:.0f}%)] Relations accuracy: {:.0f}%'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", "*", "bs", "*", "2", ",", "len", "(", "rel", "[", "0", "]", ")", "*", "2", ",", "100.", "*", "batch_idx", "*", "bs", "/", "len", "(", "rel", "[", "0", "]", ")", ",", "accuracy_rel", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.YieldOrGo.test": [[114, 135], ["model.to().eval", "YieldOrGo.cvt_data_axis", "range", "print", "YieldOrGo.tensor_data", "accuracy_rels.append", "sum", "len", "hist.append", "copy.deepcopy", "model.to", "len", "model.test_", "model.state_dict", "input_img.to", "label.to"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_"], ["", "", "", "def", "test", "(", "epoch", ",", "rel", ",", "best_acc", ",", "best_epoch", ",", "best_model_wts", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "\n", "rel", "=", "cvt_data_axis", "(", "rel", ")", "\n", "\n", "accuracy_rels", "=", "[", "]", "\n", "for", "batch_idx", "in", "range", "(", "len", "(", "rel", "[", "0", "]", ")", "//", "bs", ")", ":", "\n", "        ", "tensor_data", "(", "rel", ",", "batch_idx", ")", "\n", "accuracy_rels", ".", "append", "(", "model", ".", "test_", "(", "input_img", ".", "to", "(", "device", ")", ",", "None", ",", "label", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "", "accuracy_rel", "=", "sum", "(", "accuracy_rels", ")", "/", "len", "(", "accuracy_rels", ")", "\n", "if", "epoch", ">", "-", "1", ":", "\n", "        ", "hist", ".", "append", "(", "(", "epoch", ",", "accuracy_rel", ")", ")", "\n", "", "print", "(", "'\\n Test set: Relation accuracy: {:.0f}%\\n'", ".", "format", "(", "\n", "accuracy_rel", ")", ")", "\n", "\n", "if", "accuracy_rel", ">", "best_acc", ":", "\n", "        ", "best_acc", "=", "accuracy_rel", "\n", "best_epoch", "=", "epoch", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "", "return", "best_acc", ",", "best_epoch", ",", "best_model_wts", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.YieldOrGo.load_data": [[137, 156], ["print", "os.path.join", "print", "open", "pickle.load", "numpy.swapaxes", "rel_train.append", "numpy.swapaxes", "rel_test.append"], "function", ["None"], ["", "def", "load_data", "(", ")", ":", "\n", "    ", "print", "(", "'loading data...'", ")", "\n", "dirs", "=", "args", ".", "data_dir", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "dirs", ",", "'yield-or-go.pickle'", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "train_datasets", ",", "test_datasets", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "rel_train", "=", "[", "]", "\n", "rel_test", "=", "[", "]", "\n", "print", "(", "'processing data...'", ")", "\n", "\n", "for", "img", ",", "ans", "in", "train_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "rel_train", ".", "append", "(", "(", "img", ",", "ans", ")", ")", "\n", "\n", "", "for", "img", ",", "ans", "in", "test_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "rel_test", ".", "append", "(", "(", "img", ",", "ans", ")", ")", "\n", "\n", "", "return", "(", "rel_train", ",", "rel_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_relation_network.tensor_data": [[67, 76], ["torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "input_img_unscaled.data.resize_().copy_", "input_img.copy_", "input_qst.data.resize_().copy_", "label.data.resize_().copy_", "numpy.asarray", "numpy.asarray", "numpy.asarray", "torch.nn.functional.interpolate", "input_img_unscaled.data.resize_", "input_qst.data.resize_", "label.data.resize_", "torch.from_numpy.size", "torch.from_numpy.size", "torch.from_numpy.size"], "function", ["None"], ["def", "tensor_data", "(", "data", ",", "i", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "0", "]", "[", "args", ".", "batch_size", "*", "i", ":", "args", ".", "batch_size", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "qst", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "1", "]", "[", "args", ".", "batch_size", "*", "i", ":", "args", ".", "batch_size", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "ans", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "2", "]", "[", "args", ".", "batch_size", "*", "i", ":", "args", ".", "batch_size", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "\n", "input_img_unscaled", ".", "data", ".", "resize_", "(", "img", ".", "size", "(", ")", ")", ".", "copy_", "(", "img", ")", "\n", "input_img", ".", "copy_", "(", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "input_img_unscaled", ",", "75", ")", ")", "\n", "input_qst", ".", "data", ".", "resize_", "(", "qst", ".", "size", "(", ")", ")", ".", "copy_", "(", "qst", ")", "\n", "label", ".", "data", ".", "resize_", "(", "ans", ".", "size", "(", ")", ")", ".", "copy_", "(", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_relation_network.cvt_data_axis": [[78, 83], ["None"], "function", ["None"], ["", "def", "cvt_data_axis", "(", "data", ")", ":", "\n", "    ", "img", "=", "[", "e", "[", "0", "]", "for", "e", "in", "data", "]", "\n", "qst", "=", "[", "e", "[", "1", "]", "for", "e", "in", "data", "]", "\n", "ans", "=", "[", "e", "[", "2", "]", "for", "e", "in", "data", "]", "\n", "return", "(", "img", ",", "qst", ",", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_relation_network.explain": [[85, 187], ["model.eval", "explain_relation_network.cvt_data_axis", "explain_relation_network.tensor_data", "model.interaction_effects", "int", "int", "torch.zeros().to", "model.test_", "range", "print", "print", "print", "print", "print", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "zero_diag.reshape.reshape", "zero_diag.reshape.reshape", "torch.triu", "torch.triu.reshape", "reversed", "list", "range", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "out.append", "reversed", "torch.zeros", "max_interaction_effects.append", "min_interaction_effects.append", "med_interaction_effects.append", "mean_interaction_effects.append", "torch.argmax", "explain_relation_network.explain.unravel_index"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.Pool.interaction_effects", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_"], ["", "def", "explain", "(", "data", ",", "zero_diags", "=", "True", ",", "name", "=", "\"rel\"", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "data", "=", "cvt_data_axis", "(", "data", ")", "\n", "\n", "tensor_data", "(", "data", ",", "1", ")", "\n", "interaction_effects", "=", "model", ".", "interaction_effects", "(", "input_img", ",", "input_qst", ")", "\n", "# zero_diags=False", "\n", "if", "zero_diags", ":", "\n", "        ", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "interaction_effects", ".", "shape", "[", ":", "-", "2", "]", "+", "\n", "(", "interaction_effects", ".", "shape", "[", "3", "]", "*", "interaction_effects", ".", "shape", "[", "4", "]", ",", ")", ")", "\n", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "zero_diag", ".", "shape", "[", "0", "]", ",", "\n", "zero_diag", ".", "shape", "[", "1", "]", "*", "zero_diag", ".", "shape", "[", "2", "]", ",", "\n", "zero_diag", ".", "shape", "[", "3", "]", ")", "\n", "zero_diag", "=", "torch", ".", "triu", "(", "zero_diag", ",", "diagonal", "=", "1", ")", "\n", "interaction_effects", "=", "zero_diag", ".", "reshape", "(", "interaction_effects", ".", "shape", ")", "\n", "\n", "", "height_scaler", "=", "int", "(", "input_img_unscaled", ".", "shape", "[", "2", "]", "/", "interaction_effects", ".", "shape", "[", "1", "]", ")", "\n", "width_scaler", "=", "int", "(", "input_img_unscaled", ".", "shape", "[", "3", "]", "/", "interaction_effects", ".", "shape", "[", "2", "]", ")", "\n", "\n", "def", "unravel_index", "(", "index", ",", "shape", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "dim", "in", "reversed", "(", "shape", ")", ":", "\n", "            ", "out", ".", "append", "(", "index", "%", "dim", ")", "\n", "index", "=", "index", "//", "dim", "\n", "", "return", "list", "(", "reversed", "(", "out", ")", ")", "\n", "\n", "", "qst_count", "=", "torch", ".", "zeros", "(", "3", ",", "dtype", "=", "torch", ".", "int", ")", ".", "to", "(", "\"cpu\"", ")", "\n", "accuracy", "=", "model", ".", "test_", "(", "input_img", ",", "input_qst", ",", "label", ",", "return_raw", "=", "True", ")", "\n", "max_interaction_effects", "=", "[", "]", "\n", "min_interaction_effects", "=", "[", "]", "\n", "med_interaction_effects", "=", "[", "]", "\n", "mean_interaction_effects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "interaction_effects", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "topk", "=", "100", "\n", "for", "k", "in", "range", "(", "topk", ")", ":", "\n", "            ", "max_interaction_effects", ".", "append", "(", "torch", ".", "max", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "min_interaction_effects", ".", "append", "(", "torch", ".", "min", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "med_interaction_effects", ".", "append", "(", "torch", ".", "median", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "mean_interaction_effects", ".", "append", "(", "torch", ".", "mean", "(", "interaction_effects", "[", "i", "]", ")", ".", "item", "(", ")", ")", "\n", "top_interaction", "=", "torch", ".", "argmax", "(", "interaction_effects", "[", "i", "]", ")", "\n", "top_interaction", "=", "unravel_index", "(", "top_interaction", ",", "interaction_effects", "[", "i", "]", ".", "shape", ")", "\n", "interaction_effects", "[", "i", "]", "[", "top_interaction", "]", "=", "0", "\n", "border_size", "=", "2", "\n", "border_color", "=", "0", "\n", "pad", "=", "18", "\n", "padded_image", "=", "torch", ".", "nn", ".", "ConstantPad2d", "(", "pad", ",", "1", ")", "(", "input_img_unscaled", "[", "i", "]", ")", "\n", "heights", "=", "[", "]", "\n", "widths", "=", "[", "]", "\n", "for", "yx", "in", "range", "(", "0", ",", "len", "(", "top_interaction", ")", ",", "2", ")", ":", "\n", "                ", "heights", ".", "append", "(", "(", "top_interaction", "[", "yx", "]", "*", "height_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "]", "+", "1", ")", "*", "height_scaler", "+", "2", "*", "pad", ")", ")", "\n", "widths", ".", "append", "(", "(", "top_interaction", "[", "yx", "+", "1", "]", "*", "width_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "+", "1", "]", "+", "1", ")", "*", "width_scaler", "+", "2", "*", "pad", ")", ")", "\n", "", "heatmap", "=", "copy", ".", "deepcopy", "(", "padded_image", ")", "\n", "for", "h", ",", "w", "in", "zip", "(", "heights", ",", "widths", ")", ":", "\n", "                ", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "0", "]", "+", "border_size", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "1", "]", "-", "border_size", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "0", "]", "+", "border_size", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "1", "]", "-", "border_size", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "", "img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "padded_image", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "h_img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "heatmap", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "res", "=", "Image", ".", "blend", "(", "img", ",", "h_img", ",", "0.5", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "res", ")", "\n", "draw", ".", "line", "(", "[", "(", "sum", "(", "w", ")", "/", "2.", ",", "sum", "(", "h", ")", "/", "2.", ")", "for", "w", ",", "h", "in", "zip", "(", "widths", ",", "heights", ")", "]", ",", "fill", "=", "(", "255", ",", "0", ",", "0", ")", ",", "width", "=", "2", ")", "\n", "q", "=", "torch", ".", "argmax", "(", "input_qst", "[", "i", ",", "-", "3", ":", "]", ")", "\n", "qst_count", "+=", "input_qst", "[", "i", ",", "-", "3", ":", "]", ".", "to", "(", "\"cpu\"", ")", ".", "int", "(", ")", "\n", "c_map", "=", "{", "\n", "0", ":", "\"blue\"", ",", "# bl", "\n", "1", ":", "\"yellow\"", ",", "# ye", "\n", "2", ":", "\"orange\"", ",", "# or", "\n", "3", ":", "\"pink\"", ",", "# pi", "\n", "4", ":", "\"green\"", ",", "# gr", "\n", "5", ":", "\"purple\"", "# pu", "\n", "}", "[", "int", "(", "torch", ".", "argmax", "(", "input_qst", "[", "i", ",", ":", "6", "]", ")", ")", "]", "\n", "correct_incorrect", "=", "\"correct\"", "if", "accuracy", "[", "i", "]", ">", "0", "else", "\"incorrect\"", "\n", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainRN/{}/{}/question_{}/{}\"", ".", "format", "(", "name", ",", "correct_incorrect", ",", "q", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainRN/{}/{}_raw/question_{}/{}\"", ".", "format", "(", "name", ",", "correct_incorrect", ",", "q", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "res", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainRN/{}/{}/question_{}/{}/{}_qst_{}_lbl_{}.png\"", ".", "format", "(", "\n", "name", ",", "correct_incorrect", ",", "q", ",", "i", ",", "qst_count", "[", "q", "]", ",", "c_map", ",", "label", "[", "i", "]", ".", "item", "(", ")", ")", ",", "\"PNG\"", ")", "\n", "img", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainRN/{}/{}_raw/question_{}/{}/{}_qst_{}_lbl_{}.png\"", ".", "format", "(", "\n", "name", ",", "correct_incorrect", ",", "q", ",", "i", ",", "qst_count", "[", "q", "]", ",", "c_map", ",", "label", "[", "i", "]", ".", "item", "(", ")", ")", ",", "\"PNG\"", ")", "\n", "\n", "", "", "accuracy", "=", "accuracy", ".", "sum", "(", ")", "*", "100.", "/", "len", "(", "accuracy", ".", "tolist", "(", ")", ")", "\n", "print", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "print", "(", "\"Average max interaction effect: \"", ",", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", "\n", "print", "(", "\"Average min interaction effect: \"", ",", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", "\n", "print", "(", "\"Average median interaction effect: \"", ",", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", "\n", "print", "(", "\"Average interaction effect: \"", ",", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", "\n", "file_object", "=", "open", "(", "\"./Results/ExplainRN/{}/stats.txt\"", ".", "format", "(", "name", ")", ",", "'w'", ")", "\n", "file_object", ".", "write", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average max interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average min interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average median interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_relation_network.test": [[189, 216], ["model.to().eval", "explain_relation_network.cvt_data_axis", "explain_relation_network.cvt_data_axis", "range", "print", "open", "open.write", "open.close", "print", "explain_relation_network.tensor_data", "accuracy_rels.append", "explain_relation_network.tensor_data", "accuracy_norels.append", "sum", "len", "sum", "len", "model.to", "len", "len", "len", "model.test_", "model.to().test_", "input_img.to", "input_qst.to", "label.to", "input_img.to", "input_qst.to", "label.to", "model.to"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_"], ["", "def", "test", "(", "rel", ",", "norel", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "if", "not", "len", "(", "rel", "[", "0", "]", ")", "==", "len", "(", "norel", "[", "0", "]", ")", ":", "\n", "        ", "print", "(", "'Not equal length for relation dataset and non-relation dataset.'", ")", "\n", "return", "\n", "\n", "", "rel", "=", "cvt_data_axis", "(", "rel", ")", "\n", "norel", "=", "cvt_data_axis", "(", "norel", ")", "\n", "\n", "accuracy_rels", "=", "[", "]", "\n", "accuracy_norels", "=", "[", "]", "\n", "for", "batch_idx", "in", "range", "(", "len", "(", "rel", "[", "0", "]", ")", "//", "args", ".", "batch_size", ")", ":", "\n", "        ", "tensor_data", "(", "rel", ",", "batch_idx", ")", "\n", "accuracy_rels", ".", "append", "(", "model", ".", "test_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "tensor_data", "(", "norel", ",", "batch_idx", ")", "\n", "accuracy_norels", ".", "append", "(", "model", ".", "to", "(", "device", ")", ".", "test_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "", "accuracy_rel", "=", "sum", "(", "accuracy_rels", ")", "/", "len", "(", "accuracy_rels", ")", "\n", "accuracy_norel", "=", "sum", "(", "accuracy_norels", ")", "/", "len", "(", "accuracy_norels", ")", "\n", "\n", "print", "(", "'\\n Test set: Relation accuracy: {:.0f}% | Non-relation accuracy: {:.0f}%\\n'", ".", "format", "(", "\n", "accuracy_rel", ",", "accuracy_norel", ")", ")", "\n", "file_object", "=", "open", "(", "\"./Results/ExplainRN/{}/stats_all.txt\"", ".", "format", "(", "args", ".", "name", ")", ",", "'w'", ")", "\n", "file_object", ".", "write", "(", "'\\n Test set: Relation accuracy: {:.0f}% | Non-relation accuracy: {:.0f}%\\n'", ".", "format", "(", "\n", "accuracy_rel", ",", "accuracy_norel", ")", ")", "\n", "file_object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_relation_network.load_data": [[219, 251], ["print", "os.path.join", "print", "random.shuffle", "random.shuffle", "random.shuffle", "random.shuffle", "open", "pickle.load", "numpy.swapaxes", "zip", "zip", "numpy.swapaxes", "zip", "zip", "rel_train.append", "norel_train.append", "rel_test.append", "norel_test.append"], "function", ["None"], ["", "def", "load_data", "(", ")", ":", "\n", "    ", "print", "(", "'loading data...'", ")", "\n", "dirs", "=", "args", ".", "data_dir", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "dirs", ",", "'sort-of-clevr.pickle'", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "train_datasets", ",", "test_datasets", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "rel_train", "=", "[", "]", "\n", "rel_test", "=", "[", "]", "\n", "norel_train", "=", "[", "]", "\n", "norel_test", "=", "[", "]", "\n", "print", "(", "'processing data...'", ")", "\n", "\n", "for", "img", ",", "relations", ",", "norelations", "in", "train_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "for", "qst", ",", "ans", "in", "zip", "(", "relations", "[", "0", "]", ",", "relations", "[", "1", "]", ")", ":", "\n", "            ", "rel_train", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "", "for", "qst", ",", "ans", "in", "zip", "(", "norelations", "[", "0", "]", ",", "norelations", "[", "1", "]", ")", ":", "\n", "            ", "norel_train", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "\n", "", "", "for", "img", ",", "relations", ",", "norelations", "in", "test_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "for", "qst", ",", "ans", "in", "zip", "(", "relations", "[", "0", "]", ",", "relations", "[", "1", "]", ")", ":", "\n", "            ", "rel_test", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "", "for", "qst", ",", "ans", "in", "zip", "(", "norelations", "[", "0", "]", ",", "norelations", "[", "1", "]", ")", ":", "\n", "            ", "norel_test", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "\n", "", "", "random", ".", "shuffle", "(", "rel_train", ")", "\n", "random", ".", "shuffle", "(", "rel_test", ")", "\n", "random", ".", "shuffle", "(", "norel_train", ")", "\n", "random", ".", "shuffle", "(", "norel_test", ")", "\n", "\n", "return", "(", "rel_train", ",", "rel_test", ",", "norel_train", ",", "norel_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.ConvInputModel.__init__": [[12, 23], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ConvInputModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "24", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "batchNorm1", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "24", ",", "24", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "batchNorm2", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "24", ",", "24", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "batchNorm3", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "24", ",", "24", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "batchNorm4", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.ConvInputModel.forward": [[24, 39], ["relation_network.ConvInputModel.conv1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "relation_network.ConvInputModel.batchNorm1", "relation_network.ConvInputModel.conv2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "relation_network.ConvInputModel.batchNorm2", "relation_network.ConvInputModel.conv3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "relation_network.ConvInputModel.batchNorm3", "relation_network.ConvInputModel.conv4", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "relation_network.ConvInputModel.batchNorm4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"convolution\"\"\"", "\n", "x", "=", "self", ".", "conv1", "(", "img", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "batchNorm1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "batchNorm2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "batchNorm3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "batchNorm4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.FCOutputModel.__init__": [[42, 48], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "activation", ",", "args", ")", ":", "\n", "        ", "super", "(", "FCOutputModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "args", ".", "num_outputs", ")", "\n", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.FCOutputModel.forward": [[49, 55], ["relation_network.FCOutputModel.fc2", "relation_network.FCOutputModel.activation", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "relation_network.FCOutputModel.fc3", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.__init__": [[58, 62], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", ")", ":", "\n", "        ", "super", "(", "BasicModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.train_": [[63, 73], ["relation_network.BasicModel.optimizer.zero_grad", "relation_network.BasicModel.", "torch.nll_loss", "torch.nll_loss", "torch.nll_loss", "torch.nll_loss", "torch.nll_loss.backward", "relation_network.BasicModel.optimizer.step", "pred.eq().sum", "relation_network.BasicModel.data.max", "len", "pred.eq"], "methods", ["None"], ["", "def", "train_", "(", "self", ",", "input_img", ",", "input_qst", ",", "label", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "self", "(", "input_img", ",", "input_qst", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "output", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "=", "pred", ".", "eq", "(", "label", ".", "data", ")", ".", "sum", "(", ")", "\n", "accuracy", "=", "correct", "*", "100.", "/", "len", "(", "label", ")", "\n", "return", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_": [[74, 84], ["relation_network.BasicModel.", "pred.eq", "accuracy.item", "output.unsqueeze.unsqueeze.unsqueeze", "output.unsqueeze.unsqueeze.data.max", "len", "len", "len", "pred.eq.sum"], "methods", ["None"], ["", "def", "test_", "(", "self", ",", "input_img", ",", "input_qst", ",", "label", ",", "return_raw", "=", "False", ")", ":", "\n", "        ", "output", "=", "self", "(", "input_img", ",", "input_qst", ")", "\n", "if", "len", "(", "output", ".", "shape", ")", "==", "1", "and", "len", "(", "input_img", ".", "shape", ")", "==", "4", ":", "\n", "            ", "output", "=", "output", ".", "unsqueeze", "(", "0", ")", "\n", "", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "=", "pred", ".", "eq", "(", "label", ".", "data", ")", "\n", "if", "return_raw", ":", "\n", "            ", "return", "correct", "\n", "", "accuracy", "=", "correct", ".", "sum", "(", ")", "*", "100.", "/", "len", "(", "label", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.save_model": [[85, 87], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "relation_network.BasicModel.state_dict"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "epoch", ",", "name", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "'{}/{}_{:02d}.pth'", ".", "format", "(", "self", ".", "args", ".", "saved_model_dir", ",", "name", ",", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.RN.__init__": [[90, 145], ["relation_network.BasicModel.__init__", "relation_network.ConvInputModel", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.zeros", "range", "relation_network.RN.coord_tensor.data.copy_", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "relation_network.FCOutputModel", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "relation_network.RN.parameters", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "relation_network.RN.__init__.cvt_coord"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "device", ")", ":", "\n", "        ", "super", "(", "RN", ",", "self", ")", ".", "__init__", "(", "args", ",", "'RN'", ")", "\n", "\n", "self", ".", "conv", "=", "ConvInputModel", "(", ")", "\n", "\n", "qst_size", "=", "11", "\n", "if", "args", ".", "num_outputs", "==", "2", ":", "\n", "            ", "qst_size", "=", "0", "\n", "\n", "", "if", "args", ".", "pre_relational", ":", "\n", "            ", "self", ".", "g_pre_fc1", "=", "nn", ".", "Linear", "(", "24", "+", "2", "+", "qst_size", ",", "128", ")", "\n", "self", ".", "g_pre_fc3", "=", "nn", ".", "Linear", "(", "128", ",", "32", ")", "\n", "self", ".", "g_in_size", "=", "(", "32", "+", "2", ")", "*", "2", "+", "qst_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "g_in_size", "=", "(", "24", "+", "2", ")", "*", "2", "+", "qst_size", "\n", "\n", "# TODO adapt to input size", "\n", "##(number of filters per object+coordinate of object)*2+question vector", "\n", "", "self", ".", "g_fc1", "=", "nn", ".", "Linear", "(", "self", ".", "g_in_size", ",", "256", ")", "\n", "self", ".", "g_fc2", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "self", ".", "g_fc3", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "self", ".", "g_fc4", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "\n", "self", ".", "f_fc1", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "\n", "self", ".", "coord_oi", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_oj", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_oi", "=", "Variable", "(", "self", ".", "coord_oi", ")", "\n", "self", ".", "coord_oj", "=", "Variable", "(", "self", ".", "coord_oj", ")", "\n", "\n", "# prepare coord tensor", "\n", "def", "cvt_coord", "(", "i", ")", ":", "\n", "            ", "return", "[", "(", "i", "/", "5", "-", "2", ")", "/", "2.", ",", "(", "i", "%", "5", "-", "2", ")", "/", "2.", "]", "\n", "\n", "", "self", ".", "coord_tensor", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "25", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_tensor", "=", "Variable", "(", "self", ".", "coord_tensor", ")", "\n", "# TODO adapt to input size", "\n", "np_coord_tensor", "=", "np", ".", "zeros", "(", "(", "args", ".", "batch_size", ",", "25", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "25", ")", ":", "\n", "            ", "np_coord_tensor", "[", ":", ",", "i", ",", ":", "]", "=", "np", ".", "array", "(", "cvt_coord", "(", "i", ")", ")", "\n", "", "self", ".", "coord_tensor", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "np_coord_tensor", ")", ")", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n", "if", "args", ".", "gelu", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "GELU", "(", ")", "\n", "", "elif", "args", ".", "sigmoid", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "args", ".", "tanh", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "", "self", ".", "fcout", "=", "FCOutputModel", "(", "self", ".", "activation", ",", "self", ".", "args", ")", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.RN.forward": [[146, 216], ["relation_network.RN.conv", "relation_network.RN.view().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "x_i.repeat.repeat.repeat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat.repeat", "torch.cat.repeat", "torch.cat.repeat", "torch.cat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "relation_network.RN.g_fc1", "relation_network.RN.activation", "relation_network.RN.g_fc2", "relation_network.RN.activation", "relation_network.RN.g_fc3", "relation_network.RN.activation", "relation_network.RN.g_fc4", "relation_network.RN.activation", "relation_network.RN.view", "x_g.sum().squeeze.sum().squeeze.sum().squeeze", "relation_network.RN.f_fc1", "relation_network.RN.activation", "relation_network.RN.fcout", "relation_network.RN.size", "relation_network.RN.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze.repeat", "torch.unsqueeze.repeat", "torch.unsqueeze.repeat", "torch.unsqueeze.repeat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "relation_network.RN.activation", "relation_network.RN.activation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.RN.size", "relation_network.RN.size", "torch.unsqueeze.size", "torch.unsqueeze.size", "torch.unsqueeze.size", "torch.unsqueeze.size", "relation_network.RN.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.RN.g_pre_fc1", "relation_network.RN.g_pre_fc3().view", "x_g.sum().squeeze.sum().squeeze.sum", "relation_network.RN.g_pre_fc3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "qst", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "img", ")", "## x = (64 x 24 x 5 x 5)", "\n", "\n", "\"\"\"g\"\"\"", "\n", "mb", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_channels", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "num_components", "=", "x", ".", "size", "(", ")", "[", "2", "]", "*", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "if", "qst", "is", "not", "None", ":", "\n", "            ", "qst_size", "=", "qst", ".", "size", "(", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "qst_size", "=", "0", "\n", "# x_flat = (64 x 25 x 24)", "\n", "", "x_flat", "=", "x", ".", "view", "(", "mb", ",", "n_channels", ",", "num_components", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "]", ",", "2", ")", "\n", "\n", "# add question everywhere", "\n", "if", "qst", "is", "not", "None", ":", "\n", "            ", "qst", "=", "torch", ".", "unsqueeze", "(", "qst", ",", "1", ")", "\n", "qst", "=", "qst", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "pre_relational", ":", "\n", "            ", "if", "qst", "is", "not", "None", ":", "\n", "                ", "feature_vecs", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "qst", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "feature_vecs", "=", "x_flat", "\n", "", "feature_vecs", "=", "feature_vecs", ".", "view", "(", "-", "1", ",", "n_channels", "+", "2", "+", "qst_size", ")", "\n", "g_pre", "=", "self", ".", "activation", "(", "self", ".", "g_pre_fc1", "(", "feature_vecs", ")", ")", "\n", "# g_pre = nn.ReLU()(self.g_pre_fc2(g_pre))", "\n", "g_pre", "=", "self", ".", "activation", "(", "self", ".", "g_pre_fc3", "(", "g_pre", ")", ".", "view", "(", "mb", ",", "num_components", ",", "32", ")", ")", "\n", "x_flat", "=", "g_pre", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "]", ",", "2", ")", "\n", "\n", "# cast all pairs against each other", "\n", "", "x_i", "=", "torch", ".", "unsqueeze", "(", "x_flat", ",", "1", ")", "# (64x1x25x26+11)", "\n", "x_i", "=", "x_i", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ",", "1", ")", "# (64x25x25x26)", "\n", "x_j", "=", "torch", ".", "unsqueeze", "(", "x_flat", ",", "2", ")", "# (64x25x1x26+11)", "\n", "if", "qst", "is", "not", "None", ":", "\n", "            ", "qst", "=", "torch", ".", "unsqueeze", "(", "qst", ",", "2", ")", "\n", "x_j", "=", "torch", ".", "cat", "(", "[", "x_j", ",", "qst", "]", ",", "3", ")", "\n", "", "x_j", "=", "x_j", ".", "repeat", "(", "1", ",", "1", ",", "num_components", ",", "1", ")", "# (64x25x25x26+11)", "\n", "\n", "# concatenate all together", "\n", "x_full", "=", "torch", ".", "cat", "(", "[", "x_i", ",", "x_j", "]", ",", "3", ")", "# (64x25x25x2*26+11)", "\n", "\n", "# reshape for passing through network", "\n", "x_", "=", "x_full", ".", "view", "(", "mb", "*", "num_components", "**", "2", ",", "(", "32", "+", "2", ")", "*", "2", "+", "qst_size", "if", "self", ".", "args", ".", "pre_relational", "else", "2", "*", "(", "n_channels", "+", "2", ")", "+", "qst_size", ")", "\n", "\n", "x_", "=", "self", ".", "g_fc1", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc2", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc3", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc4", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "\n", "# reshape again and sum", "\n", "x_g", "=", "x_", ".", "view", "(", "mb", ",", "num_components", "**", "2", ",", "256", ")", "\n", "\n", "x_g", "=", "x_g", ".", "sum", "(", "1", ")", ".", "squeeze", "(", ")", "\n", "\n", "\"\"\"f\"\"\"", "\n", "x_f", "=", "self", ".", "f_fc1", "(", "x_g", ")", "\n", "x_f", "=", "self", ".", "activation", "(", "x_f", ")", "\n", "\n", "return", "self", ".", "fcout", "(", "x_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.RN.interaction_effects": [[217, 313], ["relation_network.RN.conv", "relation_network.RN.view().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "relation_network.RN.to", "utils.TaylorCAM().reshape", "relation_network.RN.size", "relation_network.RN.size", "relation_network.RN.size", "relation_network.RN.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "qstn.repeat.repeat.repeat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "relation_network.RN.activation", "relation_network.RN.activation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.RN.to", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "x_i.repeat.repeat.repeat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat.repeat", "torch.cat.repeat", "torch.cat.repeat", "torch.cat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "relation_network.RN.g_fc1", "relation_network.RN.activation", "relation_network.RN.g_fc2", "relation_network.RN.activation", "relation_network.RN.g_fc3", "relation_network.RN.activation", "relation_network.RN.g_fc4", "relation_network.RN.activation", "relation_network.RN.view", "x_g.sum().squeeze.sum().squeeze.sum().squeeze", "relation_network.RN.f_fc1", "relation_network.RN.activation", "relation_network.RN.fcout().max().to", "time.time", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "print", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.zeros.mean", "torch.zeros.mean", "torch.zeros.mean", "torch.zeros.mean", "gc.sum.sum.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.zeros.reshape", "torch.zeros.reshape", "torch.zeros.reshape", "torch.zeros.reshape", "qstn.repeat.repeat.size", "relation_network.RN.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.RN.g_pre_fc1", "relation_network.RN.g_pre_fc3().view", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.autograd.functional.jacobian", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "utils.TaylorCAM", "x_g.sum().squeeze.sum().squeeze.sum", "relation_network.RN.fcout().max", "relation_network.RN.interaction_effects.downstream"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.T-NID.run.jacobian", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.downstream"], ["", "def", "interaction_effects", "(", "self", ",", "img", ",", "qstn", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "img", ")", "## x = (64 x 24 x 5 x 5)", "\n", "\n", "mb", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_channels", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "height", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "width", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "num_components", "=", "height", "*", "width", "\n", "if", "qstn", "is", "not", "None", ":", "\n", "            ", "qst_size", "=", "qstn", ".", "size", "(", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "qst_size", "=", "0", "\n", "\n", "# x_flat = (64 x 25 x 24)", "\n", "", "x_flat", "=", "x", ".", "view", "(", "mb", ",", "n_channels", ",", "num_components", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "[", ":", "mb", "]", "]", ",", "2", ")", "\n", "\n", "# add question everywhere", "\n", "if", "qstn", "is", "not", "None", ":", "\n", "            ", "qstn", "=", "torch", ".", "unsqueeze", "(", "qstn", ",", "1", ")", "\n", "qstn", "=", "qstn", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "pre_relational", ":", "\n", "            ", "if", "qstn", "is", "not", "None", ":", "\n", "                ", "feature_vecs", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "qstn", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "feature_vecs", "=", "x_flat", "\n", "", "feature_vecs", "=", "feature_vecs", ".", "view", "(", "-", "1", ",", "n_channels", "+", "2", "+", "qst_size", ")", "\n", "g_pre", "=", "self", ".", "activation", "(", "self", ".", "g_pre_fc1", "(", "feature_vecs", ")", ")", "\n", "# g_pre = nn.ReLU()(self.g_pre_fc2(g_pre))", "\n", "g_pre", "=", "self", ".", "activation", "(", "self", ".", "g_pre_fc3", "(", "g_pre", ")", ".", "view", "(", "mb", ",", "num_components", ",", "32", ")", ")", "\n", "x_flat", "=", "g_pre", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "]", ",", "2", ")", "\n", "\n", "", "def", "downstream", "(", "x_", ",", "qst", ")", ":", "\n", "            ", "self", ".", "to", "(", "\"cpu\"", ")", "\n", "# cast all pairs against each other", "\n", "x_i", "=", "torch", ".", "unsqueeze", "(", "x_", ",", "0", ")", "# (64x1x25x26+11)", "\n", "x_i", "=", "x_i", ".", "repeat", "(", "num_components", ",", "1", ",", "1", ")", "# (64x25x25x26)", "\n", "x_j", "=", "torch", ".", "unsqueeze", "(", "x_", ",", "1", ")", "# (64x25x1x26+11)", "\n", "if", "qst", "is", "not", "None", ":", "\n", "                ", "qst", "=", "torch", ".", "unsqueeze", "(", "qst", ",", "1", ")", "\n", "x_j", "=", "torch", ".", "cat", "(", "[", "x_j", ",", "qst", "]", ",", "2", ")", "\n", "", "x_j", "=", "x_j", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ")", "# (64x25x25x26+11)", "\n", "\n", "# concatenate all together", "\n", "x_full", "=", "torch", ".", "cat", "(", "[", "x_i", ",", "x_j", "]", ",", "2", ")", "# (25x25x2*26+11)", "\n", "\n", "# reshape for passing through network", "\n", "x_", "=", "x_full", ".", "view", "(", "num_components", "**", "2", ",", "(", "32", "+", "2", "if", "self", ".", "args", ".", "pre_relational", "else", "n_channels", "+", "2", ")", "*", "2", "+", "qst_size", ")", "\n", "\n", "x_", "=", "self", ".", "g_fc1", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc2", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc3", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "x_", "=", "self", ".", "g_fc4", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "\n", "# reshape again and sum", "\n", "x_g", "=", "x_", ".", "view", "(", "num_components", "**", "2", ",", "256", ")", "\n", "x_g", "=", "x_g", ".", "sum", "(", "0", ")", ".", "squeeze", "(", ")", "\n", "\n", "x_f", "=", "self", ".", "f_fc1", "(", "x_g", ")", "\n", "x_f", "=", "self", ".", "activation", "(", "x_f", ")", "\n", "\n", "# Return max proba", "\n", "return", "self", ".", "fcout", "(", "x_f", ")", ".", "max", "(", ")", ".", "to", "(", "\"cpu\"", ")", "\n", "\n", "", "hessian", "=", "torch", ".", "zeros", "(", "(", "mb", ",", "num_components", ",", "32", "+", "2", "if", "self", ".", "args", ".", "pre_relational", "else", "n_channels", "+", "2", ",", "num_components", ",", "32", "+", "2", "if", "self", ".", "args", ".", "pre_relational", "else", "n_channels", "+", "2", ")", ")", "\n", "for", "b", "in", "range", "(", "mb", ")", ":", "\n", "            ", "t", "=", "time", ".", "time", "(", ")", "\n", "hessian", "[", "b", "]", "=", "torch", ".", "autograd", ".", "functional", ".", "hessian", "(", "lambda", "_x", ":", "downstream", "(", "_x", ".", "to", "(", "\"cpu\"", ")", ",", "\n", "qstn", "[", "b", "]", ".", "to", "(", "\"cpu\"", ")", "if", "qstn", "is", "not", "None", "else", "None", ")", ",", "\n", "x_flat", "[", "b", "]", ",", "create_graph", "=", "False", ",", "strict", "=", "True", ")", "\n", "print", "(", "\"Hessian:\"", ",", "b", "+", "1", ",", "\"/\"", ",", "mb", ",", "\"Time: \"", ",", "time", ".", "time", "(", ")", "-", "t", ",", "\"s\"", ")", "\n", "", "gradcam", "=", "False", "\n", "if", "gradcam", ":", "\n", "            ", "jacobian", "=", "torch", ".", "zeros", "(", "(", "mb", ",", "num_components", ",", "n_channels", "+", "2", ")", ")", "\n", "for", "b", "in", "range", "(", "mb", ")", ":", "\n", "                ", "jacobian", "[", "b", "]", "=", "torch", ".", "autograd", ".", "functional", ".", "jacobian", "(", "lambda", "_x", ":", "downstream", "(", "_x", ",", "qstn", "[", "b", "]", "if", "qstn", "is", "not", "None", "else", "None", ")", ",", "x_flat", "[", "b", "]", ",", "\n", "create_graph", "=", "False", ",", "strict", "=", "True", ")", "\n", "", "alpha_c_k", "=", "jacobian", ".", "mean", "(", "1", ")", "\n", "gc", "=", "x_flat", "*", "nn", ".", "ReLU", "(", ")", "(", "alpha_c_k", "[", ":", ",", "None", ",", ":", "]", ")", "\n", "gc", "=", "gc", ".", "sum", "(", "-", "1", ")", "\n", "outs", "=", "torch", ".", "zeros", "(", "mb", ",", "gc", ".", "shape", "[", "-", "1", "]", ",", "gc", ".", "shape", "[", "-", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "mb", ")", ":", "\n", "                ", "outs", "[", "i", "]", "=", "torch", ".", "diag", "(", "gc", "[", "i", "]", ")", "\n", "", "return", "outs", ".", "reshape", "(", "mb", ",", "height", ",", "width", ",", "height", ",", "width", ")", "\n", "", "self", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "utils", ".", "TaylorCAM", "(", "x_flat", ".", "to", "(", "self", ".", "device", ")", ",", "hessian", ".", "to", "(", "self", ".", "device", ")", ",", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", ".", "reshape", "(", "mb", ",", "height", ",", "width", ",", "height", ",", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.CNN_MLP.__init__": [[316, 329], ["relation_network.BasicModel.__init__", "relation_network.ConvInputModel", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "relation_network.FCOutputModel", "relation_network.CNN_MLP.parameters", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "device", ")", ":", "\n", "        ", "super", "(", "CNN_MLP", ",", "self", ")", ".", "__init__", "(", "args", ",", "'CNNMLP'", ")", "\n", "\n", "self", ".", "conv", "=", "ConvInputModel", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "5", "*", "5", "*", "24", "+", "11", ",", "256", ")", "# question concatenated to all", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "if", "args", ".", "gelu", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "GELU", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "", "self", ".", "fcout", "=", "FCOutputModel", "(", "self", ".", "activation", ",", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.CNN_MLP.forward": [[330, 342], ["relation_network.CNN_MLP.conv", "x.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.CNN_MLP.fc1", "relation_network.CNN_MLP.activation", "relation_network.CNN_MLP.fcout", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "qst", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "img", ")", "## x = (64 x 24 x 5 x 5)", "\n", "\n", "\"\"\"fully connected layers\"\"\"", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "x_", "=", "torch", ".", "cat", "(", "(", "x", ",", "qst", ")", ",", "1", ")", "# Concat question", "\n", "\n", "x_", "=", "self", ".", "fc1", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "\n", "return", "self", ".", "fcout", "(", "x_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.CNN_MLP.interaction_effects": [[343, 370], ["relation_network.CNN_MLP.conv", "x_flat.view().permute.view().permute.view().permute", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "utils.TaylorCAM().reshape", "x_flat.view().permute.view().permute.size", "x_flat.view().permute.view().permute.size", "x_flat.view().permute.view().permute.size", "relation_network.CNN_MLP.unsqueeze", "qst.unsqueeze.unsqueeze.unsqueeze", "relation_network.CNN_MLP.reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relation_network.CNN_MLP.fc1", "relation_network.CNN_MLP.activation", "relation_network.CNN_MLP.fcout().max", "time.time", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "print", "x_flat.view().permute.view().permute.size", "x_flat.view().permute.view().permute.view", "relation_network.CNN_MLP.size", "utils.TaylorCAM", "relation_network.CNN_MLP.fcout", "relation_network.CNN_MLP.interaction_effects.downstream"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.CocoObjectDetection.downstream"], ["", "def", "interaction_effects", "(", "self", ",", "img", ",", "qstn", ")", ":", "\n", "        ", "x_flat", "=", "self", ".", "conv", "(", "img", ")", "\n", "\n", "mb", "=", "x_flat", ".", "size", "(", ")", "[", "0", "]", "\n", "n_channels", "=", "x_flat", ".", "size", "(", ")", "[", "1", "]", "-", "2", "\n", "height", "=", "x_flat", ".", "size", "(", ")", "[", "2", "]", "\n", "width", "=", "x_flat", ".", "size", "(", ")", "[", "3", "]", "\n", "num_components", "=", "height", "*", "width", "\n", "\n", "x_flat", "=", "x_flat", ".", "view", "(", "-", "1", ",", "n_channels", "+", "2", ",", "num_components", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "def", "downstream", "(", "x_", ",", "qst", ")", ":", "\n", "            ", "x_", "=", "x_", ".", "unsqueeze", "(", "0", ")", "\n", "qst", "=", "qst", ".", "unsqueeze", "(", "0", ")", "\n", "x_", "=", "x_", ".", "reshape", "(", "x_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x_", "=", "torch", ".", "cat", "(", "(", "x_", ",", "qst", ")", ",", "1", ")", "# Concat question", "\n", "x_", "=", "self", ".", "fc1", "(", "x_", ")", "\n", "x_", "=", "self", ".", "activation", "(", "x_", ")", "\n", "return", "self", ".", "fcout", "(", "x_", ")", ".", "max", "(", ")", "\n", "\n", "", "hessian", "=", "torch", ".", "zeros", "(", "(", "mb", ",", "num_components", ",", "n_channels", "+", "2", ",", "num_components", ",", "n_channels", "+", "2", ")", ")", "\n", "for", "b", "in", "range", "(", "mb", ")", ":", "\n", "            ", "t", "=", "time", ".", "time", "(", ")", "\n", "hessian", "[", "b", "]", "=", "torch", ".", "autograd", ".", "functional", ".", "hessian", "(", "lambda", "_x", ":", "downstream", "(", "_x", ",", "qstn", "[", "b", "]", ")", ",", "x_flat", "[", "b", "]", ",", "\n", "create_graph", "=", "False", ",", "strict", "=", "True", ")", "\n", "print", "(", "\"Hessian:\"", ",", "b", "+", "1", ",", "\"/\"", ",", "mb", ",", "\"Time: \"", ",", "time", ".", "time", "(", ")", "-", "t", ",", "\"s\"", ")", "\n", "", "return", "utils", ".", "TaylorCAM", "(", "x_flat", ",", "hessian", ",", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", ".", "reshape", "(", "mb", ",", "height", ",", "width", ",", "height", ",", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.Pool.__init__": [[373, 409], ["relation_network.BasicModel.__init__", "relation_network.ConvInputModel", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.zeros", "range", "relation_network.Pool.coord_tensor.data.copy_", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "relation_network.FCOutputModel", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "relation_network.Pool.parameters", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "relation_network.Pool.__init__.cvt_coord"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "device", ")", ":", "\n", "        ", "super", "(", "Pool", ",", "self", ")", ".", "__init__", "(", "args", ",", "'Pool'", ")", "\n", "\n", "self", ".", "conv", "=", "ConvInputModel", "(", ")", "\n", "\n", "self", ".", "g_pre_fc1", "=", "nn", ".", "Linear", "(", "24", "+", "2", "+", "11", ",", "256", ")", "\n", "self", ".", "g_pre_fc2", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "self", ".", "g_pre_fc3", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "\n", "self", ".", "f_fc1", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "\n", "self", ".", "coord_oi", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_oj", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_oi", "=", "Variable", "(", "self", ".", "coord_oi", ")", "\n", "self", ".", "coord_oj", "=", "Variable", "(", "self", ".", "coord_oj", ")", "\n", "\n", "# prepare coord tensor", "\n", "def", "cvt_coord", "(", "i", ")", ":", "\n", "            ", "return", "[", "(", "i", "/", "5", "-", "2", ")", "/", "2.", ",", "(", "i", "%", "5", "-", "2", ")", "/", "2.", "]", "\n", "\n", "", "self", ".", "coord_tensor", "=", "torch", ".", "FloatTensor", "(", "args", ".", "batch_size", ",", "25", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "coord_tensor", "=", "Variable", "(", "self", ".", "coord_tensor", ")", "\n", "# TODO adapt to input size", "\n", "np_coord_tensor", "=", "np", ".", "zeros", "(", "(", "args", ".", "batch_size", ",", "25", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "25", ")", ":", "\n", "            ", "np_coord_tensor", "[", ":", ",", "i", ",", ":", "]", "=", "np", ".", "array", "(", "cvt_coord", "(", "i", ")", ")", "\n", "", "self", ".", "coord_tensor", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "np_coord_tensor", ")", ")", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n", "if", "args", ".", "gelu", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "GELU", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "", "self", ".", "fcout", "=", "FCOutputModel", "(", "self", ".", "activation", ",", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.Pool.forward": [[410, 442], ["relation_network.Pool.conv", "relation_network.Pool.view().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "qst.repeat.repeat.repeat", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "g_pre.view", "x_g.sum().squeeze.sum().squeeze.sum().squeeze", "relation_network.Pool.f_fc1", "relation_network.Pool.activation", "relation_network.Pool.fcout", "relation_network.Pool.size", "relation_network.Pool.size", "qst.repeat.repeat.size", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc2", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc3", "relation_network.Pool.size", "relation_network.Pool.size", "relation_network.Pool.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_g.sum().squeeze.sum().squeeze.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "qst", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "img", ")", "## x = (64 x 24 x 5 x 5)", "\n", "\n", "\"\"\"g\"\"\"", "\n", "mb", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_channels", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "num_components", "=", "x", ".", "size", "(", ")", "[", "2", "]", "*", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "qst_size", "=", "qst", ".", "size", "(", ")", "[", "1", "]", "\n", "# x_flat = (64 x 25 x 24)", "\n", "x_flat", "=", "x", ".", "view", "(", "mb", ",", "n_channels", ",", "num_components", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "]", ",", "2", ")", "\n", "\n", "# add question everywhere", "\n", "qst", "=", "torch", ".", "unsqueeze", "(", "qst", ",", "1", ")", "\n", "qst", "=", "qst", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ")", "\n", "\n", "feature_vecs", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "qst", "]", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "n_channels", "+", "2", "+", "qst_size", ")", "\n", "g_pre", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc1", "(", "feature_vecs", ")", ")", "\n", "g_pre", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc2", "(", "g_pre", ")", ")", "\n", "g_pre", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc3", "(", "g_pre", ")", ")", "\n", "\n", "# reshape and sum", "\n", "x_g", "=", "g_pre", ".", "view", "(", "mb", ",", "num_components", ",", "256", ")", "\n", "x_g", "=", "x_g", ".", "sum", "(", "1", ")", ".", "squeeze", "(", ")", "\n", "\n", "\"\"\"f\"\"\"", "\n", "x_f", "=", "self", ".", "f_fc1", "(", "x_g", ")", "\n", "x_f", "=", "self", ".", "activation", "(", "x_f", ")", "\n", "\n", "return", "self", ".", "fcout", "(", "x_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.Pool.interaction_effects": [[443, 480], ["relation_network.Pool.conv", "relation_network.Pool.view().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "qst.repeat.repeat.repeat", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "utils.TaylorCAM().reshape", "relation_network.Pool.size", "relation_network.Pool.size", "relation_network.Pool.size", "relation_network.Pool.size", "qstn.size", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc2", "x_.sum().squeeze", "relation_network.Pool.f_fc1", "relation_network.Pool.activation", "relation_network.Pool.fcout().max", "time.time", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "torch.autograd.functional.hessian", "print", "relation_network.Pool.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.TaylorCAM", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "relation_network.Pool.g_pre_fc3", "x_.sum", "relation_network.Pool.fcout", "time.time"], "methods", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM"], ["", "def", "interaction_effects", "(", "self", ",", "img", ",", "qstn", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "img", ")", "## x = (64 x 24 x 5 x 5)", "\n", "\n", "\"\"\"g\"\"\"", "\n", "mb", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_channels", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "height", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "width", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "num_components", "=", "height", "*", "width", "\n", "qst_size", "=", "qstn", ".", "size", "(", ")", "[", "1", "]", "\n", "# x_flat = (64 x 25 x 24)", "\n", "x_flat", "=", "x", ".", "view", "(", "mb", ",", "n_channels", ",", "num_components", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# add coordinates", "\n", "x_flat", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "self", ".", "coord_tensor", "]", ",", "2", ")", "\n", "\n", "# add question everywhere", "\n", "qst", "=", "torch", ".", "unsqueeze", "(", "qstn", ",", "1", ")", "\n", "qst", "=", "qst", ".", "repeat", "(", "1", ",", "num_components", ",", "1", ")", "\n", "\n", "feature_vecs", "=", "torch", ".", "cat", "(", "[", "x_flat", ",", "qst", "]", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "n_channels", "+", "2", "+", "qst_size", ")", "\n", "g_pre", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc1", "(", "feature_vecs", ")", ")", "\n", "g_pre", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc2", "(", "g_pre", ")", ")", "\n", "x_flat", "=", "nn", ".", "ReLU", "(", ")", "(", "self", ".", "g_pre_fc3", "(", "g_pre", ")", ")", ".", "view", "(", "mb", ",", "num_components", ",", "256", ")", "\n", "\n", "def", "downstream", "(", "x_", ")", ":", "\n", "            ", "x_g", "=", "x_", ".", "sum", "(", "0", ")", ".", "squeeze", "(", ")", "\n", "x_f", "=", "self", ".", "f_fc1", "(", "x_g", ")", "\n", "x_f", "=", "self", ".", "activation", "(", "x_f", ")", "\n", "return", "self", ".", "fcout", "(", "x_f", ")", ".", "max", "(", ")", "\n", "\n", "", "hessian", "=", "torch", ".", "zeros", "(", "(", "mb", ",", "num_components", ",", "256", ",", "num_components", ",", "256", ")", ")", "\n", "for", "b", "in", "range", "(", "mb", ")", ":", "\n", "            ", "t", "=", "time", ".", "time", "(", ")", "\n", "hessian", "[", "b", "]", "=", "torch", ".", "autograd", ".", "functional", ".", "hessian", "(", "downstream", ",", "x_flat", "[", "b", "]", ",", "create_graph", "=", "False", ",", "strict", "=", "True", ")", "\n", "print", "(", "\"Hessian:\"", ",", "b", "+", "1", ",", "\"/\"", ",", "mb", ",", "\"Time: \"", ",", "time", ".", "time", "(", ")", "-", "t", ",", "\"s\"", ")", "\n", "", "return", "utils", ".", "TaylorCAM", "(", "x_flat", ",", "hessian", ",", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", ".", "reshape", "(", "mb", ",", "height", ",", "width", ",", "height", ",", "width", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_yield_or_go.tensor_data": [[60, 67], ["torch.from_numpy", "torch.from_numpy", "input_img_unscaled.data.resize_().copy_", "input_img.copy_", "label.data.resize_().copy_", "numpy.asarray", "numpy.asarray", "torch.nn.functional.interpolate", "input_img_unscaled.data.resize_", "label.data.resize_", "torch.from_numpy.size", "torch.from_numpy.size"], "function", ["None"], ["def", "tensor_data", "(", "data", ",", "i", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "0", "]", "[", "args", ".", "batch_size", "*", "i", ":", "args", ".", "batch_size", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "ans", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "1", "]", "[", "args", ".", "batch_size", "*", "i", ":", "args", ".", "batch_size", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "\n", "input_img_unscaled", ".", "data", ".", "resize_", "(", "img", ".", "size", "(", ")", ")", ".", "copy_", "(", "img", ")", "\n", "input_img", ".", "copy_", "(", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "input_img_unscaled", ",", "75", ")", ")", "\n", "label", ".", "data", ".", "resize_", "(", "ans", ".", "size", "(", ")", ")", ".", "copy_", "(", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_yield_or_go.cvt_data_axis": [[69, 73], ["None"], "function", ["None"], ["", "def", "cvt_data_axis", "(", "data", ")", ":", "\n", "    ", "img", "=", "[", "e", "[", "0", "]", "for", "e", "in", "data", "]", "\n", "ans", "=", "[", "e", "[", "1", "]", "for", "e", "in", "data", "]", "\n", "return", "(", "img", ",", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_yield_or_go.explain": [[75, 166], ["model.eval", "explain_yield_or_go.cvt_data_axis", "explain_yield_or_go.tensor_data", "model.interaction_effects", "int", "int", "model.test_", "range", "print", "print", "print", "print", "print", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "zero_diag.reshape.reshape", "zero_diag.reshape.reshape", "torch.triu", "torch.triu.reshape", "reversed", "list", "range", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "out.append", "reversed", "max_interaction_effects.append", "min_interaction_effects.append", "med_interaction_effects.append", "mean_interaction_effects.append", "torch.argmax", "explain_yield_or_go.explain.unravel_index"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.Pool.interaction_effects", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_"], ["", "def", "explain", "(", "data", ",", "zero_diags", "=", "True", ",", "name", "=", "\"rel\"", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "data", "=", "cvt_data_axis", "(", "data", ")", "\n", "\n", "tensor_data", "(", "data", ",", "1", ")", "\n", "interaction_effects", "=", "model", ".", "interaction_effects", "(", "input_img", ",", "None", ")", "\n", "\n", "if", "zero_diags", ":", "\n", "        ", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "interaction_effects", ".", "shape", "[", ":", "-", "2", "]", "+", "\n", "(", "interaction_effects", ".", "shape", "[", "3", "]", "*", "interaction_effects", ".", "shape", "[", "4", "]", ",", ")", ")", "\n", "zero_diag", "=", "interaction_effects", ".", "reshape", "(", "zero_diag", ".", "shape", "[", "0", "]", ",", "\n", "zero_diag", ".", "shape", "[", "1", "]", "*", "zero_diag", ".", "shape", "[", "2", "]", ",", "\n", "zero_diag", ".", "shape", "[", "3", "]", ")", "\n", "zero_diag", "=", "torch", ".", "triu", "(", "zero_diag", ",", "diagonal", "=", "1", ")", "\n", "interaction_effects", "=", "zero_diag", ".", "reshape", "(", "interaction_effects", ".", "shape", ")", "\n", "\n", "", "height_scaler", "=", "int", "(", "input_img_unscaled", ".", "shape", "[", "2", "]", "/", "interaction_effects", ".", "shape", "[", "1", "]", ")", "\n", "width_scaler", "=", "int", "(", "input_img_unscaled", ".", "shape", "[", "3", "]", "/", "interaction_effects", ".", "shape", "[", "2", "]", ")", "\n", "\n", "def", "unravel_index", "(", "index", ",", "shape", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "dim", "in", "reversed", "(", "shape", ")", ":", "\n", "            ", "out", ".", "append", "(", "index", "%", "dim", ")", "\n", "index", "=", "index", "//", "dim", "\n", "", "return", "list", "(", "reversed", "(", "out", ")", ")", "\n", "\n", "", "accuracy", "=", "model", ".", "test_", "(", "input_img", ",", "None", ",", "label", ",", "return_raw", "=", "True", ")", "\n", "max_interaction_effects", "=", "[", "]", "\n", "min_interaction_effects", "=", "[", "]", "\n", "med_interaction_effects", "=", "[", "]", "\n", "mean_interaction_effects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "interaction_effects", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "topk", "=", "100", "\n", "for", "k", "in", "range", "(", "topk", ")", ":", "\n", "            ", "max_interaction_effects", ".", "append", "(", "torch", ".", "max", "(", "interaction_effects", "[", "i", "]", ")", ".", "data", ")", "\n", "min_interaction_effects", ".", "append", "(", "torch", ".", "min", "(", "interaction_effects", "[", "i", "]", ")", ".", "data", ")", "\n", "med_interaction_effects", ".", "append", "(", "torch", ".", "median", "(", "interaction_effects", "[", "i", "]", ")", ".", "data", ")", "\n", "mean_interaction_effects", ".", "append", "(", "torch", ".", "mean", "(", "interaction_effects", "[", "i", "]", ")", ".", "data", ")", "\n", "top_interaction", "=", "torch", ".", "argmax", "(", "interaction_effects", "[", "i", "]", ")", "\n", "top_interaction", "=", "unravel_index", "(", "top_interaction", ",", "interaction_effects", "[", "i", "]", ".", "shape", ")", "\n", "interaction_effects", "[", "i", "]", "[", "top_interaction", "]", "=", "0", "\n", "border_size", "=", "2", "\n", "border_color", "=", "0", "\n", "pad", "=", "18", "\n", "padded_image", "=", "torch", ".", "nn", ".", "ConstantPad2d", "(", "pad", ",", "1", ")", "(", "input_img_unscaled", "[", "i", "]", ")", "\n", "heights", "=", "[", "]", "\n", "widths", "=", "[", "]", "\n", "for", "yx", "in", "range", "(", "0", ",", "len", "(", "top_interaction", ")", ",", "2", ")", ":", "\n", "                ", "heights", ".", "append", "(", "(", "top_interaction", "[", "yx", "]", "*", "height_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "]", "+", "1", ")", "*", "height_scaler", "+", "2", "*", "pad", ")", ")", "\n", "widths", ".", "append", "(", "(", "top_interaction", "[", "yx", "+", "1", "]", "*", "width_scaler", ",", "\n", "(", "top_interaction", "[", "yx", "+", "1", "]", "+", "1", ")", "*", "width_scaler", "+", "2", "*", "pad", ")", ")", "\n", "", "heatmap", "=", "copy", ".", "deepcopy", "(", "padded_image", ")", "\n", "for", "h", ",", "w", "in", "zip", "(", "heights", ",", "widths", ")", ":", "\n", "                ", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "0", "]", "+", "border_size", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "1", "]", "-", "border_size", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "0", "]", ":", "w", "[", "0", "]", "+", "border_size", "]", "=", "border_color", "\n", "heatmap", "[", ":", ",", "h", "[", "0", "]", ":", "h", "[", "1", "]", ",", "w", "[", "1", "]", "-", "border_size", ":", "w", "[", "1", "]", "]", "=", "border_color", "\n", "", "img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "padded_image", ")", "\n", "h_img", "=", "torchvision", ".", "transforms", ".", "functional", ".", "to_pil_image", "(", "heatmap", ")", "\n", "res", "=", "Image", ".", "blend", "(", "img", ",", "h_img", ",", "0.5", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "res", ")", "\n", "draw", ".", "line", "(", "[", "(", "sum", "(", "w", ")", "/", "2.", ",", "sum", "(", "h", ")", "/", "2.", ")", "for", "w", ",", "h", "in", "zip", "(", "widths", ",", "heights", ")", "]", ",", "fill", "=", "(", "255", ",", "0", ",", "0", ")", ",", "width", "=", "2", ")", "\n", "correct_incorrect", "=", "\"correct\"", "if", "accuracy", "[", "i", "]", ">", "0", "else", "\"incorrect\"", "\n", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainRN/{}/{}/label_{}/{}\"", ".", "format", "(", "name", ",", "correct_incorrect", ",", "label", "[", "i", "]", ".", "item", "(", ")", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"./Results/ExplainRN/{}/{}_raw/label_{}/{}\"", ".", "format", "(", "name", ",", "correct_incorrect", ",", "label", "[", "i", "]", ".", "item", "(", ")", ",", "i", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "res", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainRN/{}/{}/label_{}/{}/{}.png\"", ".", "format", "(", "\n", "name", ",", "correct_incorrect", ",", "label", "[", "i", "]", ".", "item", "(", ")", ",", "i", ",", "k", ")", ",", "\"PNG\"", ")", "\n", "img", ".", "resize", "(", "(", "300", ",", "300", ")", ")", ".", "save", "(", "\"./Results/ExplainRN/{}/{}_raw/label_{}/{}/{}.png\"", ".", "format", "(", "\n", "name", ",", "correct_incorrect", ",", "label", "[", "i", "]", ".", "item", "(", ")", ",", "i", ",", "k", ")", ",", "\"PNG\"", ")", "\n", "\n", "", "", "accuracy", "=", "accuracy", ".", "sum", "(", ")", "*", "100.", "/", "len", "(", "accuracy", ".", "tolist", "(", ")", ")", "\n", "print", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "print", "(", "\"Average max interaction effect: \"", ",", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", "\n", "print", "(", "\"Average min interaction effect: \"", ",", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", "\n", "print", "(", "\"Average median interaction effect: \"", ",", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", "\n", "print", "(", "\"Average interaction effect: \"", ",", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", "\n", "file_object", "=", "open", "(", "\"./Results/ExplainRN/{}/stats.txt\"", ".", "format", "(", "name", ")", ",", "'w'", ")", "\n", "file_object", ".", "write", "(", "'\\n Interaction set: Accuracy: {:.0f}%\\n'", ".", "format", "(", "accuracy", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average max interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "max_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average min interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "min_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average median interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "med_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "write", "(", "\"Average interaction effect: {}\\n\"", ".", "format", "(", "np", ".", "mean", "(", "mean_interaction_effects", ")", ")", ")", "\n", "file_object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.explain_yield_or_go.load_data": [[168, 190], ["print", "os.path.join", "print", "random.shuffle", "random.shuffle", "open", "pickle.load", "numpy.swapaxes", "rel_train.append", "numpy.swapaxes", "rel_test.append"], "function", ["None"], ["", "def", "load_data", "(", ")", ":", "\n", "    ", "print", "(", "'loading data...'", ")", "\n", "dirs", "=", "args", ".", "data_dir", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "dirs", ",", "'yield-or-go.pickle'", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "train_datasets", ",", "test_datasets", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "rel_train", "=", "[", "]", "\n", "rel_test", "=", "[", "]", "\n", "print", "(", "'processing data...'", ")", "\n", "\n", "for", "img", ",", "ans", "in", "train_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "rel_train", ".", "append", "(", "(", "img", ",", "ans", ")", ")", "\n", "\n", "", "for", "img", ",", "ans", "in", "test_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "rel_test", ".", "append", "(", "(", "img", ",", "ans", ")", ")", "\n", "\n", "", "random", ".", "shuffle", "(", "rel_train", ")", "\n", "random", ".", "shuffle", "(", "rel_test", ")", "\n", "\n", "return", "(", "rel_train", ",", "rel_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data": [[81, 90], ["torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "input_img_unscaled.data.resize_().copy_", "input_img.copy_", "input_qst.data.resize_().copy_", "label.data.resize_().copy_", "numpy.asarray", "numpy.asarray", "numpy.asarray", "torch.nn.functional.interpolate", "input_img_unscaled.data.resize_", "input_qst.data.resize_", "label.data.resize_", "torch.from_numpy.size", "torch.from_numpy.size", "torch.from_numpy.size"], "function", ["None"], ["def", "tensor_data", "(", "data", ",", "i", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "0", "]", "[", "bs", "*", "i", ":", "bs", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "qst", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "1", "]", "[", "bs", "*", "i", ":", "bs", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "ans", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "data", "[", "2", "]", "[", "bs", "*", "i", ":", "bs", "*", "(", "i", "+", "1", ")", "]", ")", ")", "\n", "\n", "input_img_unscaled", ".", "data", ".", "resize_", "(", "img", ".", "size", "(", ")", ")", ".", "copy_", "(", "img", ")", "\n", "input_img", ".", "copy_", "(", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "input_img_unscaled", ",", "75", ")", ")", "\n", "input_qst", ".", "data", ".", "resize_", "(", "qst", ".", "size", "(", ")", ")", ".", "copy_", "(", "qst", ")", "\n", "label", ".", "data", ".", "resize_", "(", "ans", ".", "size", "(", ")", ")", ".", "copy_", "(", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis": [[92, 97], ["None"], "function", ["None"], ["", "def", "cvt_data_axis", "(", "data", ")", ":", "\n", "    ", "img", "=", "[", "e", "[", "0", "]", "for", "e", "in", "data", "]", "\n", "qst", "=", "[", "e", "[", "1", "]", "for", "e", "in", "data", "]", "\n", "ans", "=", "[", "e", "[", "2", "]", "for", "e", "in", "data", "]", "\n", "return", "(", "img", ",", "qst", ",", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train": [[99, 124], ["model.to().train", "random.shuffle", "random.shuffle", "RelationalReasoning.cvt_data_axis", "RelationalReasoning.cvt_data_axis", "range", "print", "RelationalReasoning.tensor_data", "model.train_", "RelationalReasoning.tensor_data", "model.train_", "model.to", "len", "len", "len", "input_img.to", "input_qst.to", "label.to", "input_img.to", "input_qst.to", "label.to", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.train", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.train_", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.train_"], ["", "def", "train", "(", "epoch", ",", "rel", ",", "norel", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", ".", "train", "(", ")", "\n", "\n", "if", "not", "len", "(", "rel", "[", "0", "]", ")", "==", "len", "(", "norel", "[", "0", "]", ")", ":", "\n", "        ", "print", "(", "'Not equal length for relation dataset and non-relation dataset.'", ")", "\n", "return", "\n", "\n", "", "random", ".", "shuffle", "(", "rel", ")", "\n", "random", ".", "shuffle", "(", "norel", ")", "\n", "\n", "rel", "=", "cvt_data_axis", "(", "rel", ")", "\n", "norel", "=", "cvt_data_axis", "(", "norel", ")", "\n", "\n", "for", "batch_idx", "in", "range", "(", "len", "(", "rel", "[", "0", "]", ")", "//", "bs", ")", ":", "\n", "        ", "tensor_data", "(", "rel", ",", "batch_idx", ")", "\n", "accuracy_rel", "=", "model", ".", "train_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", "\n", "\n", "tensor_data", "(", "norel", ",", "batch_idx", ")", "\n", "accuracy_norel", "=", "model", ".", "train_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "batch_idx", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "\n", "'Train Epoch: {} [{}/{} ({:.0f}%)] Relations accuracy: {:.0f}% | Non-relations accuracy: {:.0f}%'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", "*", "bs", "*", "2", ",", "len", "(", "rel", "[", "0", "]", ")", "*", "2", ",", "100.", "*", "batch_idx", "*", "bs", "/", "len", "(", "rel", "[", "0", "]", ")", ",", "accuracy_rel", ",", "accuracy_norel", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.test": [[126, 156], ["model.to().eval", "RelationalReasoning.cvt_data_axis", "RelationalReasoning.cvt_data_axis", "range", "print", "print", "RelationalReasoning.tensor_data", "accuracy_rels.append", "RelationalReasoning.tensor_data", "accuracy_norels.append", "sum", "len", "sum", "len", "hist.append", "copy.deepcopy", "model.to", "len", "len", "len", "model.test_", "model.to().test_", "model.state_dict", "input_img.to", "input_qst.to", "label.to", "input_img.to", "input_qst.to", "label.to", "model.to"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.cvt_data_axis", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.tensor_data", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_", "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.relation_network.BasicModel.test_"], ["", "", "", "def", "test", "(", "epoch", ",", "rel", ",", "norel", ",", "best_acc", ",", "best_epoch", ",", "best_model_wts", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "if", "not", "len", "(", "rel", "[", "0", "]", ")", "==", "len", "(", "norel", "[", "0", "]", ")", ":", "\n", "        ", "print", "(", "'Not equal length for relation dataset and non-relation dataset.'", ")", "\n", "return", "\n", "\n", "", "rel", "=", "cvt_data_axis", "(", "rel", ")", "\n", "norel", "=", "cvt_data_axis", "(", "norel", ")", "\n", "\n", "accuracy_rels", "=", "[", "]", "\n", "accuracy_norels", "=", "[", "]", "\n", "for", "batch_idx", "in", "range", "(", "len", "(", "rel", "[", "0", "]", ")", "//", "bs", ")", ":", "\n", "        ", "tensor_data", "(", "rel", ",", "batch_idx", ")", "\n", "accuracy_rels", ".", "append", "(", "model", ".", "test_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "tensor_data", "(", "norel", ",", "batch_idx", ")", "\n", "accuracy_norels", ".", "append", "(", "model", ".", "to", "(", "device", ")", ".", "test_", "(", "input_img", ".", "to", "(", "device", ")", ",", "input_qst", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "", "accuracy_rel", "=", "sum", "(", "accuracy_rels", ")", "/", "len", "(", "accuracy_rels", ")", "\n", "accuracy_norel", "=", "sum", "(", "accuracy_norels", ")", "/", "len", "(", "accuracy_norels", ")", "\n", "if", "epoch", ">", "-", "1", ":", "\n", "        ", "hist", ".", "append", "(", "(", "epoch", ",", "accuracy_rel", ",", "accuracy_norel", ")", ")", "\n", "", "print", "(", "'\\n Test set: Relation accuracy: {:.0f}% | Non-relation accuracy: {:.0f}%\\n'", ".", "format", "(", "\n", "accuracy_rel", ",", "accuracy_norel", ")", ")", "\n", "\n", "if", "accuracy_norel", "+", "accuracy_rel", ">", "best_acc", ":", "\n", "        ", "best_acc", "=", "accuracy_norel", "+", "accuracy_rel", "\n", "best_epoch", "=", "epoch", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "", "return", "best_acc", ",", "best_epoch", ",", "best_model_wts", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.RelationalReasoning.load_data": [[158, 185], ["print", "os.path.join", "print", "open", "pickle.load", "numpy.swapaxes", "zip", "zip", "numpy.swapaxes", "zip", "zip", "rel_train.append", "norel_train.append", "rel_test.append", "norel_test.append"], "function", ["None"], ["", "def", "load_data", "(", ")", ":", "\n", "    ", "print", "(", "'loading data...'", ")", "\n", "dirs", "=", "args", ".", "data_dir", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "dirs", ",", "'sort-of-clevr.pickle'", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "train_datasets", ",", "test_datasets", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "rel_train", "=", "[", "]", "\n", "rel_test", "=", "[", "]", "\n", "norel_train", "=", "[", "]", "\n", "norel_test", "=", "[", "]", "\n", "print", "(", "'processing data...'", ")", "\n", "\n", "for", "img", ",", "relations", ",", "norelations", "in", "train_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "for", "qst", ",", "ans", "in", "zip", "(", "relations", "[", "0", "]", ",", "relations", "[", "1", "]", ")", ":", "\n", "            ", "rel_train", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "", "for", "qst", ",", "ans", "in", "zip", "(", "norelations", "[", "0", "]", ",", "norelations", "[", "1", "]", ")", ":", "\n", "            ", "norel_train", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "\n", "", "", "for", "img", ",", "relations", ",", "norelations", "in", "test_datasets", ":", "\n", "        ", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "2", ")", "\n", "for", "qst", ",", "ans", "in", "zip", "(", "relations", "[", "0", "]", ",", "relations", "[", "1", "]", ")", ":", "\n", "            ", "rel_test", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "", "for", "qst", ",", "ans", "in", "zip", "(", "norelations", "[", "0", "]", ",", "norelations", "[", "1", "]", ")", ":", "\n", "            ", "norel_test", ".", "append", "(", "(", "img", ",", "qst", ",", "ans", ")", ")", "\n", "\n", "", "", "return", "(", "rel_train", ",", "rel_test", ",", "norel_train", ",", "norel_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM": [[1, 11], ["hessian.permute.permute", "hessian.permute.sum", "x_i_hess_sum_k.sum().pow", "x_i_hess_sum_k.sum().pow.permute", "x_i_hess_sum_k.sum"], "function", ["None"], ["import", "torch", "\n", "from", "torch", ".", "utils", "import", "data", "\n", "import", "numpy", "as", "np", "\n", "import", "sklearn", "\n", "from", "sklearn", ".", "preprocessing", "import", "StandardScaler", "\n", "from", "sklearn", ".", "metrics", "import", "roc_auc_score", "\n", "\n", "\n", "def", "set_seed", "(", "seed", "=", "42", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.TaylorCAM.utils.TaylorCAM_basic": [[13, 26], ["hessian.permute.permute", "hessian.permute.sum().sum", "hessian.sum().sum.unsqueeze().repeat", "x.unsqueeze().repeat", "x_il_hess_jl.sum().pow", "x_il_hess_jl.sum().pow.permute", "hessian.permute.sum", "hessian.sum().sum.unsqueeze", "x.unsqueeze", "x_il_hess_jl.sum"], "function", ["None"], ["        ", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n", "\n", "", "", "def", "force_float", "(", "X_numpy", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "X_numpy", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "\n", "", "def", "convert_to_torch_loaders", "(", "Xd", ",", "Yd", ",", "batch_size", ")", ":", "\n", "    ", "if", "type", "(", "Xd", ")", "!=", "dict", "and", "type", "(", "Yd", ")", "!=", "dict", ":", "\n", "        ", "Xd", "=", "{", "\"train\"", ":", "Xd", "}", "\n", "Yd", "=", "{", "\"train\"", ":", "Yd", "}", "\n", "\n", "", "data_loaders", "=", "{", "}", "\n", "for", "k", "in", "Xd", ":", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__init__": [[256, 316], ["pycocotools.coco.COCO", "list", "sorted", "print", "min", "random.shuffle", "range", "print", "random.shuffle", "len", "coco.CocoDataset.coco.imgs.keys", "coco.CocoDataset.coco.getAnnIds", "coco.CocoDataset.coco.loadAnns", "random.shuffle", "len", "len", "len", "len", "set", "set", "all_positive_cats.append", "len", "len", "coco.CocoDataset.coco.loadCats", "len", "enumerate", "len", "coco.CocoDataset.coco.loadCats", "set().intersection", "partial_positive_cats[].append", "set"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root", ",", "json", ",", "transform", "=", "None", ")", ":", "\n", "        ", "\"\"\"Set the path for images.\n\n        Args:\n            root: image directory.\n            json: coco annotation file path.\n            transform: image transformer.\n        \"\"\"", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "coco", "=", "COCO", "(", "json", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "ids", "=", "[", "]", "\n", "ids", "=", "list", "(", "self", ".", "coco", ".", "imgs", ".", "keys", "(", ")", ")", "\n", "\n", "# # # TOP:", "\n", "# ((1, 2, 3), ['person', 'bicycle', 'car'], [2, 2, 2], 45, [77, 314, 7])", "\n", "# ((1, 3, 4), ['person', 'car', 'motorcycle'], [2, 2, 2], 51, [308, 77, 8])", "\n", "# ((1, 3, 5), ['person', 'car', 'airplane'], [2, 2, 2], 3, [356, 28, 6])", "\n", "# ((1, 3, 6), ['person', 'car', 'bus'], [6, 6, 6], 82, [277, 61, 20])", "\n", "# ((1, 3, 8), ['person', 'car', 'truck'], [17, 17, 17], 101, [258, 58, 51])", "\n", "# ((1, 44, 47), ['person', 'bottle', 'cup'], [18, 18, 18], 74, [133, 143, 54])", "\n", "# ((1, 47, 51), ['person', 'cup', 'bowl'], [19, 19, 19], 60, [157, 72, 58])", "\n", "# ((1, 47, 67), ['person', 'cup', 'dining table'], [24, 24, 24], 120, [97, 130, 74])", "\n", "# ((1, 62, 67), ['person', 'chair', 'dining table'], [29, 29, 29], 152, [215, 98, 89])", "\n", "# # # # #", "\n", "# ([[1, 3], [6, 8]], [['person', 'car'], ['bus', 'truck']], 27)", "\n", "# self.classes = [(1, 3), (6, 8)]", "\n", "# ([[1, 47], [62, 67]], [['person', 'cup'], ['chair', 'dining table']], 74)", "\n", "# self.classes = [(1, 47), (62, 67)]", "\n", "# ((4, 1, 3), ['motorcycle', 'person', 'car'], 217, 1160, [1626, 217, 7359])", "\n", "self", ".", "classes", "=", "[", "1", ",", "3", "]", "\n", "# self.classes = [(1, 62), (62, 67)]", "\n", "self", ".", "classes", "=", "sorted", "(", "self", ".", "classes", ")", "\n", "self", ".", "class_names", "=", "[", "self", ".", "coco", ".", "loadCats", "(", "_c", ")", "[", "0", "]", "[", "\"name\"", "]", "for", "_c", "in", "self", ".", "classes", "]", "\n", "print", "(", "[", "self", ".", "coco", ".", "loadCats", "(", "_c", ")", "[", "0", "]", "[", "\"name\"", "]", "for", "_c", "in", "self", ".", "classes", "]", ")", "\n", "\n", "all_positive_cats", "=", "[", "]", "\n", "partial_positive_cats", "=", "[", "[", "]", "for", "_", "in", "self", ".", "classes", "]", "\n", "for", "id", "in", "ids", ":", "\n", "            ", "ann_ids", "=", "self", ".", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "\n", "coco_annotations", "=", "self", ".", "coco", ".", "loadAnns", "(", "ann_ids", ")", "\n", "categories", "=", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "coco_annotations", "]", "\n", "if", "set", "(", "self", ".", "classes", ")", "<=", "set", "(", "categories", ")", ":", "\n", "                ", "all_positive_cats", ".", "append", "(", "id", ")", "\n", "", "elif", "len", "(", "set", "(", "self", ".", "classes", ")", ".", "intersection", "(", "categories", ")", ")", "==", "1", ":", "\n", "                ", "for", "ind", ",", "c", "in", "enumerate", "(", "self", ".", "classes", ")", ":", "\n", "                    ", "if", "c", "in", "categories", ":", "\n", "                        ", "partial_positive_cats", "[", "ind", "]", ".", "append", "(", "id", ")", "\n", "", "", "", "", "dataset_frac_len", "=", "min", "(", "[", "len", "(", "all_positive_cats", ")", "//", "2", ",", "len", "(", "partial_positive_cats", "[", "0", "]", ")", ",", "len", "(", "partial_positive_cats", "[", "1", "]", ")", "]", ")", "\n", "shuffle", "(", "all_positive_cats", ")", "\n", "for", "p", "in", "partial_positive_cats", ":", "\n", "            ", "shuffle", "(", "p", ")", "\n", "", "all_positive_cats", "=", "all_positive_cats", "[", ":", "dataset_frac_len", "*", "2", "]", "\n", "for", "p", "in", "range", "(", "len", "(", "partial_positive_cats", ")", ")", ":", "\n", "            ", "partial_positive_cats", "[", "p", "]", "=", "partial_positive_cats", "[", "p", "]", "[", ":", "dataset_frac_len", "]", "\n", "", "print", "(", "len", "(", "all_positive_cats", ")", ",", "len", "(", "partial_positive_cats", "[", "0", "]", ")", ",", "len", "(", "partial_positive_cats", "[", "1", "]", ")", ")", "\n", "\n", "self", ".", "ids", "=", "all_positive_cats", "+", "partial_positive_cats", "[", "0", "]", "+", "partial_positive_cats", "[", "1", "]", "\n", "shuffle", "(", "self", ".", "ids", ")", "\n", "self", ".", "data_len", "=", "len", "(", "self", ".", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__getitem__": [[317, 339], ["coco.CocoDataset.coco.getAnnIds", "coco.CocoDataset.coco.loadAnns", "PIL.Image.open().convert", "set", "set", "coco.CocoDataset.transform", "coco.CocoDataset.coco.loadImgs", "PIL.Image.open", "os.path.join", "set", "set"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"Returns one data pair (image and class labels).\"\"\"", "\n", "ann_ids", "=", "self", ".", "coco", ".", "getAnnIds", "(", "imgIds", "=", "self", ".", "ids", "[", "index", "]", ")", "\n", "coco_annotations", "=", "self", ".", "coco", ".", "loadAnns", "(", "ann_ids", ")", "\n", "cats", "=", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "coco_annotations", "]", "\n", "path", "=", "self", ".", "coco", ".", "loadImgs", "(", "self", ".", "ids", "[", "index", "]", ")", "[", "0", "]", "[", "'file_name'", "]", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "path", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "# plt.imshow(img)", "\n", "# self.coco.showAnns(coco_annotations)", "\n", "# fig = plt.gcf()", "\n", "# img = fig2img(fig)", "\n", "\n", "if", "set", "(", "self", ".", "classes", ")", "<=", "set", "(", "cats", ")", ":", "\n", "            ", "lbl", "=", "1", "\n", "", "else", ":", "\n", "            ", "lbl", "=", "0", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "{", "\"labels\"", ":", "lbl", ",", "\"all_true\"", ":", "set", "(", "self", ".", "classes", ")", "<=", "set", "(", "cats", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.CocoDataset.__len__": [[340, 342], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data_len", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.find_best": [[20, 69], ["pycocotools.coco.COCO", "list", "list", "pycocotools.coco.COCO.imgs.keys", "itertools.combinations", "any", "enumerate", "min", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "list", "sorted", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "set", "all", "len", "len", "len", "len", "print", "itertools.combinations", "all_positive_cats.append", "any", "len", "len", "len", "itertools.combinations", "enumerate", "any", "set().intersection", "set", "set", "itertools.combinations", "set", "set", "set", "set", "partial_positive_cats[].append", "len", "all_negative_cats.append", "set", "set", "set", "itertools.combinations", "set", "set", "partial_negative_cats[].append", "pycocotools.coco.COCO.loadCats"], "function", ["None"], ["def", "find_best", "(", "interaction_size", "=", "2", ",", "num_classes", "=", "2", ",", "num_allowed_intersections", "=", "1", ")", ":", "\n", "    ", "\"\"\"Finds the best objects to interact.\"\"\"", "\n", "coco", "=", "COCO", "(", "\"./annotations/instances_val2017.json\"", ")", "\n", "ids", "=", "list", "(", "coco", ".", "imgs", ".", "keys", "(", ")", ")", "\n", "\n", "best_len", "=", "0", "\n", "best_classes", "=", "None", "\n", "all_cat_ids", "=", "[", "coco_annotations", "[", "\"category_id\"", "]", "for", "id", "in", "ids", "for", "ann_ids", "in", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "for", "\n", "coco_annotations", "in", "coco", ".", "loadAnns", "(", "ann_ids", ")", "]", "\n", "all_cat_inter_pairs", "=", "list", "(", "combinations", "(", "list", "(", "combinations", "(", "all_cat_ids", ",", "interaction_size", ")", ")", ",", "num_classes", ")", ")", "\n", "for", "classes", "in", "all_cat_inter_pairs", ":", "\n", "        ", "if", "any", "(", "[", "len", "(", "set", "(", "c", "[", "0", "]", ")", ".", "intersection", "(", "c", "[", "1", "]", ")", ")", ">", "num_allowed_intersections", "for", "c", "in", "combinations", "(", "classes", ",", "2", ")", "]", ")", ":", "\n", "            ", "continue", "\n", "", "classes", "=", "[", "sorted", "(", "c", ")", "for", "c", "in", "classes", "]", "\n", "all_classes", "=", "[", "c", "for", "_class", "in", "classes", "for", "c", "in", "_class", "]", "\n", "all_positive_cats", "=", "[", "]", "\n", "all_negative_cats", "=", "[", "]", "\n", "partial_negative_cats", "=", "[", "[", "]", "for", "_", "in", "classes", "]", "\n", "partial_positive_cats", "=", "[", "[", "]", "for", "_", "in", "classes", "]", "\n", "for", "i", ",", "id", "in", "enumerate", "(", "ids", ")", ":", "\n", "            ", "ann_ids", "=", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "\n", "coco_annotations", "=", "coco", ".", "loadAnns", "(", "ann_ids", ")", "\n", "categories", "=", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "coco_annotations", "]", "\n", "unique_positive_categories", "=", "set", "(", "[", "cat", "for", "cat", "in", "categories", "if", "cat", "in", "all_classes", "]", ")", "\n", "if", "all", "(", "[", "set", "(", "c", ")", "<=", "set", "(", "categories", ")", "for", "c", "in", "classes", "]", ")", ":", "\n", "                ", "all_positive_cats", ".", "append", "(", "id", ")", "\n", "", "elif", "any", "(", "[", "set", "(", "c", ")", "<=", "set", "(", "categories", ")", "for", "c", "in", "classes", "]", ")", ":", "\n", "                ", "for", "c", ",", "cl", "in", "enumerate", "(", "classes", ")", ":", "\n", "                    ", "if", "set", "(", "cl", ")", "<=", "set", "(", "categories", ")", ":", "\n", "                        ", "partial_positive_cats", "[", "c", "]", ".", "append", "(", "id", ")", "\n", "# elif len(unique_positive_categories) > 0:", "\n", "", "", "", "elif", "any", "(", "[", "set", "(", "pair", ")", "<=", "set", "(", "all_classes", ")", "for", "pair", "in", "combinations", "(", "unique_positive_categories", ",", "2", ")", "]", ")", ":", "\n", "                ", "p", "=", "0", "\n", "for", "pair", "in", "combinations", "(", "unique_positive_categories", ",", "2", ")", ":", "\n", "                    ", "if", "set", "(", "pair", ")", "<=", "set", "(", "all_classes", ")", ":", "\n", "                        ", "partial_negative_cats", "[", "p", "]", ".", "append", "(", "id", ")", "\n", "p", "+=", "1", "\n", "# else:", "\n", "", "", "", "elif", "len", "(", "unique_positive_categories", ")", ">", "0", ":", "\n", "                ", "all_negative_cats", ".", "append", "(", "id", ")", "\n", "", "", "dataset_fourth_len", "=", "min", "(", "len", "(", "all_positive_cats", ")", "//", "2", ",", "len", "(", "partial_positive_cats", "[", "0", "]", ")", ",", "\n", "len", "(", "partial_positive_cats", "[", "1", "]", ")", ",", "len", "(", "partial_negative_cats", "[", "0", "]", ")", ",", "\n", "len", "(", "partial_negative_cats", "[", "1", "]", ")", ",", "len", "(", "all_negative_cats", ")", "//", "2", ")", "\n", "if", "dataset_fourth_len", ">", "best_len", ":", "\n", "            ", "best_len", "=", "dataset_fourth_len", "\n", "best_classes", "=", "(", "classes", ",", "[", "[", "coco", ".", "loadCats", "(", "_c", ")", "[", "0", "]", "[", "\"name\"", "]", "for", "_c", "in", "c", "]", "for", "c", "in", "classes", "]", ",", "dataset_fourth_len", ")", "\n", "print", "(", "best_classes", ")", "\n", "\n", "", "", "return", "best_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.find_best2": [[74, 106], ["pycocotools.coco.COCO", "list", "itertools.combinations", "pycocotools.coco.COCO.imgs.keys", "set", "enumerate", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "min", "max", "max", "print", "range", "set", "set", "enumerate", "len", "enumerate", "set().intersection", "list", "enumerate", "itertools.combinations", "set", "set", "pycocotools.coco.COCO.loadCats", "set"], "function", ["None"], ["", "def", "find_best2", "(", ")", ":", "\n", "    ", "\"\"\"Finds the best objects to interact.\"\"\"", "\n", "coco", "=", "COCO", "(", "\"./annotations/instances_val2017.json\"", ")", "\n", "ids", "=", "list", "(", "coco", ".", "imgs", ".", "keys", "(", ")", ")", "\n", "best_d_len", "=", "0", "\n", "best_classes", "=", "None", "\n", "all_cat_ids", "=", "[", "coco_annotations", "[", "\"category_id\"", "]", "for", "id", "in", "ids", "for", "ann_ids", "in", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "for", "\n", "coco_annotations", "in", "coco", ".", "loadAnns", "(", "ann_ids", ")", "]", "\n", "for", "classes", "in", "combinations", "(", "set", "(", "all_cat_ids", ")", ",", "3", ")", ":", "\n", "        ", "all_c", "=", "0", "\n", "pairs", "=", "[", "0", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "# For each image", "\n", "for", "i", ",", "id", "in", "enumerate", "(", "ids", ")", ":", "\n", "            ", "ann_ids", "=", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "\n", "coco_annotations", "=", "coco", ".", "loadAnns", "(", "ann_ids", ")", "\n", "categories", "=", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "coco_annotations", "]", "\n", "# If all class tuples in categories", "\n", "if", "set", "(", "classes", ")", "<=", "set", "(", "categories", ")", ":", "\n", "                ", "all_c", "+=", "1", "\n", "# If just some class (or not class) tuples in categories", "\n", "", "elif", "len", "(", "set", "(", "classes", ")", ".", "intersection", "(", "categories", ")", ")", "==", "2", ":", "\n", "                ", "for", "ind", ",", "pair", "in", "enumerate", "(", "list", "(", "combinations", "(", "classes", ",", "2", ")", ")", ")", ":", "\n", "                    ", "if", "set", "(", "pair", ")", "<=", "set", "(", "categories", ")", ":", "\n", "                        ", "pairs", "[", "ind", "]", "=", "pairs", "[", "ind", "]", "+", "1", "\n", "", "", "", "", "d_len", "=", "[", "min", "(", "[", "pairs", "[", "p_", "]", "if", "p", "!=", "p", "else", "pairs", "[", "p_", "]", "//", "3", "for", "p_", ",", "_", "in", "enumerate", "(", "pairs", ")", "]", ")", "\n", "for", "p", ",", "_", "in", "enumerate", "(", "pairs", ")", "]", "\n", "if", "max", "(", "d_len", ")", ">=", "best_d_len", ":", "\n", "            ", "best_d_len", "=", "max", "(", "d_len", ")", "\n", "best_classes", "=", "(", "classes", ",", "[", "coco", ".", "loadCats", "(", "c", ")", "[", "0", "]", "[", "\"name\"", "]", "for", "c", "in", "classes", "]", ",", "d_len", ",", "all_c", ",", "pairs", ")", "\n", "print", "(", "best_classes", ")", "\n", "\n", "", "", "return", "best_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.find_best3": [[111, 142], ["pycocotools.coco.COCO", "list", "itertools.combinations", "pycocotools.coco.COCO.imgs.keys", "set", "enumerate", "min", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "pycocotools.coco.COCO.getAnnIds", "pycocotools.coco.COCO.loadAnns", "print", "range", "set", "set", "len", "enumerate", "set().intersection", "pycocotools.coco.COCO.loadCats", "set"], "function", ["None"], ["", "def", "find_best3", "(", ")", ":", "\n", "    ", "\"\"\"Finds the best objects to interact.\"\"\"", "\n", "coco", "=", "COCO", "(", "\"./annotations/instances_val2017.json\"", ")", "\n", "ids", "=", "list", "(", "coco", ".", "imgs", ".", "keys", "(", ")", ")", "\n", "best_d_len", "=", "0", "\n", "best_classes", "=", "None", "\n", "all_cat_ids", "=", "[", "coco_annotations", "[", "\"category_id\"", "]", "for", "id", "in", "ids", "for", "ann_ids", "in", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "for", "\n", "coco_annotations", "in", "coco", ".", "loadAnns", "(", "ann_ids", ")", "]", "\n", "for", "classes", "in", "combinations", "(", "set", "(", "all_cat_ids", ")", ",", "2", ")", ":", "\n", "        ", "all_c", "=", "0", "\n", "pairs", "=", "[", "0", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "# For each image", "\n", "for", "i", ",", "id", "in", "enumerate", "(", "ids", ")", ":", "\n", "            ", "ann_ids", "=", "coco", ".", "getAnnIds", "(", "imgIds", "=", "id", ")", "\n", "coco_annotations", "=", "coco", ".", "loadAnns", "(", "ann_ids", ")", "\n", "categories", "=", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "coco_annotations", "]", "\n", "# If all class tuples in categories", "\n", "if", "set", "(", "classes", ")", "<=", "set", "(", "categories", ")", ":", "\n", "                ", "all_c", "+=", "1", "\n", "# If just some class (or not class) tuples in categories", "\n", "", "elif", "len", "(", "set", "(", "classes", ")", ".", "intersection", "(", "categories", ")", ")", "==", "1", ":", "\n", "                ", "for", "ind", ",", "pair", "in", "enumerate", "(", "classes", ")", ":", "\n", "                    ", "if", "pair", "in", "categories", ":", "\n", "                        ", "pairs", "[", "ind", "]", "=", "pairs", "[", "ind", "]", "+", "1", "\n", "", "", "", "", "d_len", "=", "min", "(", "[", "all_c", "//", "2", ",", "pairs", "[", "0", "]", ",", "pairs", "[", "1", "]", "]", ")", "\n", "if", "d_len", ">=", "best_d_len", ":", "\n", "            ", "best_d_len", "=", "d_len", "\n", "best_classes", "=", "(", "classes", ",", "[", "coco", ".", "loadCats", "(", "c", ")", "[", "0", "]", "[", "\"name\"", "]", "for", "c", "in", "classes", "]", ",", "d_len", ",", "all_c", ",", "pairs", ")", "\n", "print", "(", "best_classes", ")", "\n", "\n", "", "", "return", "best_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.coco.fig2img": [[344, 352], ["skimage.io.BytesIO", "fig.savefig", "io.BytesIO.seek", "PIL.Image.open"], "function", ["None"], ["", "", "def", "fig2img", "(", "fig", ")", ":", "\n", "    ", "\"\"\"Convert a Matplotlib figure to a PIL Image and return it\"\"\"", "\n", "import", "io", "\n", "buf", "=", "io", ".", "BytesIO", "(", ")", "\n", "fig", ".", "savefig", "(", "buf", ")", "\n", "buf", ".", "seek", "(", "0", ")", "\n", "img", "=", "Image", ".", "open", "(", "buf", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.yield_or_go.center_generate": [[40, 50], ["numpy.random.randint", "len"], "function", ["None"], ["", "def", "center_generate", "(", "objects", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "pas", "=", "True", "\n", "center", "=", "np", ".", "random", ".", "randint", "(", "0", "+", "size", ",", "img_size", "-", "size", ",", "2", ")", "\n", "if", "len", "(", "objects", ")", ">", "0", ":", "\n", "            ", "for", "name", ",", "c", ",", "shape", "in", "objects", ":", "\n", "                ", "if", "(", "(", "center", "-", "c", ")", "**", "2", ")", ".", "sum", "(", ")", "<", "(", "(", "size", "*", "2", ")", "**", "2", ")", ":", "\n", "                    ", "pas", "=", "False", "\n", "", "", "", "if", "pas", ":", "\n", "            ", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.yield_or_go.build_dataset": [[53, 92], ["enumerate", "numpy.ones", "yield_or_go.center_generate", "random.random", "cv2.rectangle", "objects.append", "numpy.array", "np.array.reshape", "cv2.polylines", "cv2.fillPoly", "objects.append"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.sort_of_clevr.center_generate"], ["", "", "", "def", "build_dataset", "(", ")", ":", "\n", "    ", "objects", "=", "[", "]", "\n", "img", "=", "np", ".", "ones", "(", "(", "img_size", ",", "img_size", ",", "3", ")", ")", "*", "255", "\n", "yield_sign", "=", "False", "\n", "passing_car", "=", "False", "\n", "for", "color_id", ",", "color", "in", "enumerate", "(", "colors", ")", ":", "\n", "        ", "center", "=", "center_generate", "(", "objects", ")", "\n", "ran", "=", "0.32", "\n", "if", "color_id", "==", "0", ":", "\n", "            ", "ran", "=", ".32", "\n", "", "if", "random", ".", "random", "(", ")", "<", "ran", ":", "\n", "            ", "start", "=", "(", "center", "[", "0", "]", "-", "size", "+", "size", "//", "4", "+", "size", "//", "8", ",", "center", "[", "1", "]", "-", "size", "+", "size", "//", "8", ")", "\n", "end", "=", "(", "center", "[", "0", "]", "+", "size", "-", "size", "//", "4", "-", "size", "//", "8", ",", "center", "[", "1", "]", "+", "size", "-", "size", "//", "8", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "start", ",", "end", ",", "color", ",", "-", "1", ")", "\n", "objects", ".", "append", "(", "(", "color_id", ",", "center", ",", "'c'", ")", ")", "\n", "passing_car", "=", "True", "\n", "", "else", ":", "\n", "            ", "p1", "=", "[", "center", "[", "0", "]", "-", "size", "+", "size", "//", "6", ",", "center", "[", "1", "]", "-", "size", "+", "size", "//", "6", "]", "\n", "p2", "=", "[", "center", "[", "0", "]", "-", "size", "+", "size", "//", "6", ",", "center", "[", "1", "]", "+", "size", "-", "size", "//", "6", "]", "\n", "p3", "=", "[", "center", "[", "0", "]", "+", "size", "-", "size", "//", "6", ",", "center", "[", "1", "]", "]", "\n", "# draw a triangle", "\n", "vertices", "=", "np", ".", "array", "(", "[", "p1", ",", "p2", ",", "p3", "]", ",", "np", ".", "int32", ")", "\n", "pts", "=", "vertices", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "2", ")", ")", "\n", "cv2", ".", "polylines", "(", "img", ",", "[", "pts", "]", ",", "isClosed", "=", "True", ",", "color", "=", "(", "234", ",", "231", ",", "175", ")", ",", "thickness", "=", "size", "//", "6", ")", "\n", "\n", "\n", "# fill it", "\n", "cv2", ".", "fillPoly", "(", "img", ",", "[", "pts", "]", ",", "color", "=", "color", ")", "\n", "objects", ".", "append", "(", "(", "color_id", ",", "center", ",", "'y'", ")", ")", "\n", "if", "color_id", "==", "0", ":", "\n", "                ", "yield_sign", "=", "True", "\n", "\n", "", "", "", "rel_answers", "=", "0", "\n", "if", "passing_car", "and", "yield_sign", ":", "\n", "        ", "rel_answers", "=", "1", "\n", "\n", "", "img", "=", "img", "/", "255.", "\n", "dataset", "=", "(", "img", ",", "rel_answers", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.sort_of_clevr.center_generate": [[40, 50], ["numpy.random.randint", "len"], "function", ["None"], ["", "def", "center_generate", "(", "objects", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "pas", "=", "True", "\n", "center", "=", "np", ".", "random", ".", "randint", "(", "0", "+", "size", ",", "img_size", "-", "size", ",", "2", ")", "\n", "if", "len", "(", "objects", ")", ">", "0", ":", "\n", "            ", "for", "name", ",", "c", ",", "shape", "in", "objects", ":", "\n", "                ", "if", "(", "(", "center", "-", "c", ")", "**", "2", ")", ".", "sum", "(", ")", "<", "(", "(", "size", "*", "2", ")", "**", "2", ")", ":", "\n", "                    ", "pas", "=", "False", "\n", "", "", "", "if", "pas", ":", "\n", "            ", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.sort_of_clevr.build_dataset": [[53, 153], ["enumerate", "range", "range", "numpy.ones", "sort_of_clevr.center_generate", "numpy.zeros", "random.randint", "random.randint", "norel_questions.append", "norel_answers.append", "numpy.zeros", "random.randint", "random.randint", "rel_questions.append", "rel_answers.append", "random.random", "cv2.rectangle", "objects.append", "cv2.circle", "objects.append", "dist_list.index", "min", "dist_list.index", "dist_list.index", "max"], "function", ["home.repos.pwc.inspect_result.slerman12_ExplainingInteractions.Data.sort_of_clevr.center_generate"], ["", "", "", "def", "build_dataset", "(", ")", ":", "\n", "    ", "objects", "=", "[", "]", "\n", "img", "=", "np", ".", "ones", "(", "(", "img_size", ",", "img_size", ",", "3", ")", ")", "*", "255", "\n", "for", "color_id", ",", "color", "in", "enumerate", "(", "colors", ")", ":", "\n", "        ", "center", "=", "center_generate", "(", "objects", ")", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "start", "=", "(", "center", "[", "0", "]", "-", "size", ",", "center", "[", "1", "]", "-", "size", ")", "\n", "end", "=", "(", "center", "[", "0", "]", "+", "size", ",", "center", "[", "1", "]", "+", "size", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "start", ",", "end", ",", "color", ",", "-", "1", ")", "\n", "objects", ".", "append", "(", "(", "color_id", ",", "center", ",", "'r'", ")", ")", "\n", "", "else", ":", "\n", "            ", "center_", "=", "(", "center", "[", "0", "]", ",", "center", "[", "1", "]", ")", "\n", "cv2", ".", "circle", "(", "img", ",", "center_", ",", "size", ",", "color", ",", "-", "1", ")", "\n", "objects", ".", "append", "(", "(", "color_id", ",", "center", ",", "'c'", ")", ")", "\n", "\n", "\n", "", "", "rel_questions", "=", "[", "]", "\n", "norel_questions", "=", "[", "]", "\n", "rel_answers", "=", "[", "]", "\n", "norel_answers", "=", "[", "]", "\n", "\"\"\"Non-relational questions\"\"\"", "\n", "for", "_", "in", "range", "(", "nb_questions", ")", ":", "\n", "        ", "question", "=", "np", ".", "zeros", "(", "(", "question_size", ")", ")", "\n", "color", "=", "random", ".", "randint", "(", "0", ",", "5", ")", "\n", "question", "[", "color", "]", "=", "1", "\n", "question", "[", "6", "]", "=", "1", "\n", "subtype", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "question", "[", "subtype", "+", "8", "]", "=", "1", "\n", "norel_questions", ".", "append", "(", "question", ")", "\n", "\"\"\"Answer : [yes, no, rectangle, circle, r, g, b, o, k, y]\"\"\"", "\n", "if", "subtype", "==", "0", ":", "\n", "            ", "\"\"\"query shape->rectangle/circle\"\"\"", "\n", "if", "objects", "[", "color", "]", "[", "2", "]", "==", "'r'", ":", "\n", "                ", "answer", "=", "2", "\n", "", "else", ":", "\n", "                ", "answer", "=", "3", "\n", "\n", "", "", "elif", "subtype", "==", "1", ":", "\n", "            ", "\"\"\"query horizontal position->yes/no\"\"\"", "\n", "if", "objects", "[", "color", "]", "[", "1", "]", "[", "0", "]", "<", "img_size", "/", "2", ":", "\n", "                ", "answer", "=", "0", "\n", "", "else", ":", "\n", "                ", "answer", "=", "1", "\n", "\n", "", "", "elif", "subtype", "==", "2", ":", "\n", "            ", "\"\"\"query vertical position->yes/no\"\"\"", "\n", "if", "objects", "[", "color", "]", "[", "1", "]", "[", "1", "]", "<", "img_size", "/", "2", ":", "\n", "                ", "answer", "=", "0", "\n", "", "else", ":", "\n", "                ", "answer", "=", "1", "\n", "", "", "norel_answers", ".", "append", "(", "answer", ")", "\n", "\n", "", "\"\"\"Relational questions\"\"\"", "\n", "for", "i", "in", "range", "(", "nb_questions", ")", ":", "\n", "        ", "question", "=", "np", ".", "zeros", "(", "(", "question_size", ")", ")", "\n", "color", "=", "random", ".", "randint", "(", "0", ",", "5", ")", "\n", "question", "[", "color", "]", "=", "1", "\n", "question", "[", "7", "]", "=", "1", "\n", "subtype", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "question", "[", "subtype", "+", "8", "]", "=", "1", "\n", "rel_questions", ".", "append", "(", "question", ")", "\n", "\n", "if", "subtype", "==", "0", ":", "\n", "            ", "\"\"\"closest-to->rectangle/circle\"\"\"", "\n", "my_obj", "=", "objects", "[", "color", "]", "[", "1", "]", "\n", "dist_list", "=", "[", "(", "(", "my_obj", "-", "obj", "[", "1", "]", ")", "**", "2", ")", ".", "sum", "(", ")", "for", "obj", "in", "objects", "]", "\n", "dist_list", "[", "dist_list", ".", "index", "(", "0", ")", "]", "=", "np", ".", "inf", "\n", "closest", "=", "dist_list", ".", "index", "(", "min", "(", "dist_list", ")", ")", "\n", "if", "objects", "[", "closest", "]", "[", "2", "]", "==", "'r'", ":", "\n", "                ", "answer", "=", "2", "\n", "", "else", ":", "\n", "                ", "answer", "=", "3", "\n", "\n", "", "", "elif", "subtype", "==", "1", ":", "\n", "            ", "\"\"\"furthest-from->rectangle/circle\"\"\"", "\n", "my_obj", "=", "objects", "[", "color", "]", "[", "1", "]", "\n", "dist_list", "=", "[", "(", "(", "my_obj", "-", "obj", "[", "1", "]", ")", "**", "2", ")", ".", "sum", "(", ")", "for", "obj", "in", "objects", "]", "\n", "furthest", "=", "dist_list", ".", "index", "(", "max", "(", "dist_list", ")", ")", "\n", "if", "objects", "[", "furthest", "]", "[", "2", "]", "==", "'r'", ":", "\n", "                ", "answer", "=", "2", "\n", "", "else", ":", "\n", "                ", "answer", "=", "3", "\n", "\n", "", "", "elif", "subtype", "==", "2", ":", "\n", "            ", "\"\"\"count->1~6\"\"\"", "\n", "my_obj", "=", "objects", "[", "color", "]", "[", "2", "]", "\n", "count", "=", "-", "1", "\n", "for", "obj", "in", "objects", ":", "\n", "                ", "if", "obj", "[", "2", "]", "==", "my_obj", ":", "\n", "                    ", "count", "+=", "1", "\n", "", "", "answer", "=", "count", "+", "4", "\n", "\n", "", "rel_answers", ".", "append", "(", "answer", ")", "\n", "\n", "", "relations", "=", "(", "rel_questions", ",", "rel_answers", ")", "\n", "norelations", "=", "(", "norel_questions", ",", "norel_answers", ")", "\n", "\n", "img", "=", "img", "/", "255.", "\n", "dataset", "=", "(", "img", ",", "relations", ",", "norelations", ")", "\n", "return", "dataset", "\n", "\n"]]}