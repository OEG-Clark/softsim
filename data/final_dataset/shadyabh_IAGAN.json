{"home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.Config.__init__": [[6, 31], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "A", ",", "CSGM_iterations", ",", "IA_iterations", ",", "device", ",", "G_weights_dir", ",", "\n", "z_dim", ",", "n_z_init", ",", "noise_lvl", ",", "lr_z_CSGM", ",", "lr_z_IA", ",", "lr_G", ",", "print_every", ")", ":", "\n", "# The measurement operator (lambda function):", "\n", "        ", "self", ".", "A", "=", "A", "\n", "# Number of iterations for CSGM", "\n", "self", ".", "CSGM_iterations", "=", "CSGM_iterations", "\n", "# Number of image-adapted iterations", "\n", "self", ".", "IA_iterations", "=", "IA_iterations", "\n", "# The GPU to run with", "\n", "self", ".", "device", "=", "device", "\n", "# The generator ", "\n", "self", ".", "G_weights_dir", "=", "G_weights_dir", "\n", "# Size of the latent vector z", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "# Numebr of CSGM initialization ", "\n", "self", ".", "n_z_init", "=", "n_z_init", "\n", "# Noise level ", "\n", "self", ".", "noise_lvl", "=", "noise_lvl", "\n", "# Learning rates", "\n", "self", ".", "lr_z_CSGM", "=", "lr_z_CSGM", "\n", "self", ".", "lr_z_IA", "=", "lr_z_IA", "\n", "self", ".", "lr_G", "=", "lr_G", "\n", "# Print every", "\n", "self", ".", "print_every", "=", "print_every", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.bicubic_kernel_2D": [[32, 57], ["numpy.abs", "numpy.abs"], "function", ["None"], ["", "", "def", "bicubic_kernel_2D", "(", "x", ",", "y", ",", "a", "=", "-", "0.5", ")", ":", "\n", "# X", "\n", "    ", "abs_phase", "=", "np", ".", "abs", "(", "x", ")", "\n", "abs_phase3", "=", "abs_phase", "**", "3", "\n", "abs_phase2", "=", "abs_phase", "**", "2", "\n", "if", "abs_phase", "<", "1", ":", "\n", "        ", "out_x", "=", "(", "a", "+", "2", ")", "*", "abs_phase3", "-", "(", "a", "+", "3", ")", "*", "abs_phase2", "+", "1", "\n", "", "else", ":", "\n", "        ", "if", "abs_phase", ">=", "1", "and", "abs_phase", "<", "2", ":", "\n", "            ", "out_x", "=", "a", "*", "abs_phase3", "-", "5", "*", "a", "*", "abs_phase2", "+", "8", "*", "a", "*", "abs_phase", "-", "4", "*", "a", "\n", "", "else", ":", "\n", "            ", "out_x", "=", "0", "\n", "# Y", "\n", "", "", "abs_phase", "=", "np", ".", "abs", "(", "y", ")", "\n", "abs_phase3", "=", "abs_phase", "**", "3", "\n", "abs_phase2", "=", "abs_phase", "**", "2", "\n", "if", "abs_phase", "<", "1", ":", "\n", "        ", "out_y", "=", "(", "a", "+", "2", ")", "*", "abs_phase3", "-", "(", "a", "+", "3", ")", "*", "abs_phase2", "+", "1", "\n", "", "else", ":", "\n", "        ", "if", "abs_phase", ">=", "1", "and", "abs_phase", "<", "2", ":", "\n", "            ", "out_y", "=", "a", "*", "abs_phase3", "-", "5", "*", "a", "*", "abs_phase2", "+", "8", "*", "a", "*", "abs_phase", "-", "4", "*", "a", "\n", "", "else", ":", "\n", "            ", "out_y", "=", "0", "\n", "\n", "", "", "return", "out_x", "*", "out_y", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.downsample_bicubic_2D": [[58, 74], ["torch.zeros().float().to", "numpy.linspace", "range", "numpy.int", "torch.nn.functional.pad", "torch.nn.functional.conv2d", "numpy.mod", "numpy.mod", "range", "torch.sum", "torch.zeros().float", "IAGAN.bicubic_kernel_2D", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.bicubic_kernel_2D"], ["", "def", "downsample_bicubic_2D", "(", "I", ",", "scale", ",", "device", ")", ":", "\n", "# scale - integer > 1", "\n", "    ", "filter_supp", "=", "4", "*", "scale", "+", "np", ".", "mod", "(", "scale", ",", "2", ")", "\n", "is_even", "=", "1", "-", "np", ".", "mod", "(", "scale", ",", "2", ")", "\n", "Filter", "=", "torch", ".", "zeros", "(", "1", ",", "1", ",", "filter_supp", ",", "filter_supp", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "grid", "=", "np", ".", "linspace", "(", "-", "(", "filter_supp", "//", "2", ")", "+", "0.5", "*", "is_even", ",", "filter_supp", "//", "2", "-", "0.5", "*", "is_even", ",", "filter_supp", ")", "\n", "for", "n", "in", "range", "(", "filter_supp", ")", ":", "\n", "        ", "for", "m", "in", "range", "(", "filter_supp", ")", ":", "\n", "            ", "Filter", "[", "0", ",", "0", ",", "m", ",", "n", "]", "=", "bicubic_kernel_2D", "(", "grid", "[", "n", "]", "/", "scale", ",", "grid", "[", "m", "]", "/", "scale", ")", "\n", "\n", "", "", "Filter", "=", "Filter", "/", "torch", ".", "sum", "(", "Filter", ")", "\n", "pad", "=", "np", ".", "int", "(", "(", "filter_supp", "-", "scale", ")", "/", "2", ")", "\n", "I_padded", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "I", ",", "[", "pad", ",", "pad", ",", "pad", ",", "pad", "]", ",", "mode", "=", "'constant'", ")", "\n", "I_out", "=", "torch", ".", "nn", ".", "functional", ".", "conv2d", "(", "I_padded", ",", "Filter", ",", "stride", "=", "(", "scale", ",", "scale", ")", ")", "\n", "\n", "return", "I_out", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.downsample_bicubic": [[75, 80], ["torch.zeros().to", "range", "IAGAN.downsample_bicubic_2D", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.downsample_bicubic_2D"], ["", "def", "downsample_bicubic", "(", "I", ",", "scale", ",", "device", ")", ":", "\n", "    ", "out", "=", "torch", ".", "zeros", "(", "I", ".", "shape", "[", "0", "]", ",", "I", ".", "shape", "[", "1", "]", ",", "I", ".", "shape", "[", "2", "]", "//", "scale", ",", "I", ".", "shape", "[", "3", "]", "//", "scale", ")", ".", "to", "(", "device", ")", "\n", "for", "ch", "in", "range", "(", "out", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "out", "[", ":", ",", "ch", ":", "ch", "+", "1", ",", ":", ",", ":", "]", "=", "downsample_bicubic_2D", "(", "I", "[", ":", ",", "ch", ":", "ch", "+", "1", ",", ":", ",", ":", "]", ",", "scale", ",", "device", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.tensorImg2npImg": [[81, 83], ["numpy.moveaxis", "numpy.array", "I[].detach().cpu", "I[].detach"], "function", ["None"], ["", "def", "tensorImg2npImg", "(", "I", ")", ":", "\n", "    ", "return", "np", ".", "moveaxis", "(", "np", ".", "array", "(", "I", "[", "0", ",", ":", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", ",", "0", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.save_imag": [[84, 92], ["torch.clamp", "IAGAN.tensorImg2npImg", "Image.fromarray.save", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.uint8", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.tensorImg2npImg"], ["", "def", "save_imag", "(", "I", ",", "dir", ")", ":", "\n", "    ", "I", "=", "torch", ".", "clamp", "(", "I", ",", "0", ",", "1", ")", "\n", "I_np", "=", "tensorImg2npImg", "(", "I", ")", "\n", "if", "(", "I_np", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "\n", "        ", "I_PIL", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "I_np", "[", ":", ",", ":", ",", "0", "]", "*", "255", ")", ")", "\n", "", "else", ":", "\n", "        ", "I_PIL", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "I_np", "*", "255", ")", ")", "\n", "", "I_PIL", ".", "save", "(", "dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.load_img": [[93, 101], ["PIL.Image.open", "numpy.array", "torch.tensor().float().unsqueeze().unsqueeze().to", "torch.tensor().float().unsqueeze().to", "numpy.shape", "torch.tensor().float().unsqueeze().unsqueeze", "torch.tensor().float().unsqueeze", "torch.tensor().float().unsqueeze", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "numpy.moveaxis", "torch.tensor"], "function", ["None"], ["", "def", "load_img", "(", "dir", ",", "device", ")", ":", "\n", "    ", "I_PIL", "=", "Image", ".", "open", "(", "dir", ")", "\n", "I_np", "=", "np", ".", "array", "(", "I_PIL", ")", "/", "255.0", "\n", "if", "(", "np", ".", "shape", "(", "I_np", ".", "shape", ")", "[", "0", "]", "<", "3", ")", ":", "\n", "        ", "I", "=", "torch", ".", "tensor", "(", "I_np", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "I", "=", "torch", ".", "tensor", "(", "np", ".", "moveaxis", "(", "I_np", ",", "2", ",", "0", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "device", ")", "\n", "", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.CSGM": [[102, 137], ["G.load_state_dict", "G.eval", "G.to", "torch.nn.MSELoss", "torch.normal().to", "torch.zeros().to", "range", "torch.argmin", "G", "torch.load", "torch.autograd.Variable", "torch.optim.Adam", "print", "range", "torch.sum", "torch.autograd.Variable.detach", "torch.normal", "torch.zeros", "print", "torch.optim.Adam.zero_grad", "G", "config.A", "torch.nn.MSELoss.", "objective.backward", "torch.optim.Adam.step", "torch.zeros", "print", "objective.item"], "function", ["None"], ["", "def", "CSGM", "(", "y", ",", "G", ",", "config", ")", ":", "\n", "    ", "G", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", ".", "G_weights_dir", ",", "map_location", "=", "config", ".", "device", ")", ")", "\n", "G", ".", "eval", "(", ")", "\n", "G", ".", "to", "(", "config", ".", "device", ")", "\n", "\n", "objective", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "z_init", "=", "torch", ".", "normal", "(", "torch", ".", "zeros", "(", "config", ".", "z_dim", ")", ")", ".", "to", "(", "config", ".", "device", ")", "\n", "\n", "csgm_losses", "=", "torch", ".", "zeros", "(", "config", ".", "n_z_init", ")", ".", "to", "(", "config", ".", "device", ")", "\n", "# The following loop can be replaced by optimization in parallel, here it used ", "\n", "# due to memory limitation", "\n", "for", "i", "in", "range", "(", "config", ".", "n_z_init", ")", ":", "\n", "        ", "if", "(", "config", ".", "n_z_init", ">", "1", ")", ":", "\n", "            ", "print", "(", "'Z initialization number %d/%d'", "%", "(", "i", "+", "1", ",", "config", ".", "n_z_init", ")", ")", "\n", "", "Z", "=", "torch", ".", "autograd", ".", "Variable", "(", "z_init", "[", "i", ":", "i", "+", "1", ",", ":", "]", ",", "requires_grad", "=", "True", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "[", "{", "'params'", ":", "Z", ",", "'lr'", ":", "config", ".", "lr_z_CSGM", "}", "]", ")", "\n", "\n", "print", "(", "'Running CSGM:'", ")", "\n", "for", "step", "in", "range", "(", "config", ".", "CSGM_iterations", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "Gz", "=", "G", "(", "Z", ")", "\n", "AGz", "=", "config", ".", "A", "(", "Gz", ")", "\n", "loss", "=", "objective", "(", "AGz", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "if", "(", "step", "%", "config", ".", "print_every", "==", "0", ")", ":", "\n", "                ", "print", "(", "'CSGM step %d/%d, objective = %.5f'", "%", "(", "step", ",", "config", ".", "CSGM_iterations", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "csgm_losses", "[", "i", "]", "=", "torch", ".", "sum", "(", "(", "y", "-", "AGz", ")", "**", "2", ")", "\n", "z_init", "[", "i", ":", "i", "+", "1", ",", ":", "]", "=", "Z", ".", "detach", "(", ")", "\n", "", "z_hat_idx", "=", "torch", ".", "argmin", "(", "csgm_losses", ")", "\n", "z_hat", "=", "z_init", "[", "z_hat_idx", ":", "z_hat_idx", "+", "1", ",", ":", "]", "\n", "I_CSGM", "=", "G", "(", "z_hat", ")", "\n", "\n", "return", "I_CSGM", ",", "z_hat", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.IA": [[138, 160], ["G.load_state_dict", "G.eval", "G.to", "torch.autograd.Variable", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.MSELoss", "print", "range", "G.detach", "torch.load", "G.parameters", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "G", "config.A", "torch.nn.MSELoss.", "objective.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "print", "objective.item"], "function", ["None"], ["", "def", "IA", "(", "y", ",", "G", ",", "z_hat", ",", "config", ")", ":", "\n", "    ", "G", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", ".", "G_weights_dir", ",", "map_location", "=", "config", ".", "device", ")", ")", "\n", "G", ".", "eval", "(", ")", "\n", "G", ".", "to", "(", "config", ".", "device", ")", "\n", "Z", "=", "torch", ".", "autograd", ".", "Variable", "(", "z_hat", ",", "requires_grad", "=", "True", ")", "\n", "optimizer_G", "=", "torch", ".", "optim", ".", "Adam", "(", "G", ".", "parameters", "(", ")", ",", "lr", "=", "config", ".", "lr_G", ")", "\n", "optimizer_z", "=", "torch", ".", "optim", ".", "Adam", "(", "[", "{", "'params'", ":", "Z", ",", "'lr'", ":", "config", ".", "lr_z_IA", "}", "]", ")", "\n", "objective", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "print", "(", "'Running image adaptive stage:'", ")", "\n", "for", "step", "in", "range", "(", "config", ".", "IA_iterations", ")", ":", "\n", "        ", "optimizer_z", ".", "zero_grad", "(", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "Gz", "=", "G", "(", "Z", ")", "\n", "AGz", "=", "config", ".", "A", "(", "Gz", ")", "\n", "loss", "=", "objective", "(", "AGz", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "optimizer_z", ".", "step", "(", ")", "\n", "if", "(", "step", "%", "config", ".", "print_every", "==", "0", ")", ":", "\n", "            ", "print", "(", "'IA step %d/%d, objective = %.5f'", "%", "(", "step", ",", "config", ".", "IA_iterations", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "", "", "return", "Gz", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.rand_mask": [[161, 179], ["numpy.floor().astype", "numpy.mod", "numpy.mod", "torch.zeros", "numpy.meshgrid", "numpy.array", "torch.cat.unsqueeze().unsqueeze().unsqueeze", "torch.cat", "numpy.floor", "numpy.floor", "numpy.sum", "numpy.floor", "range", "torch.cat.unsqueeze().unsqueeze", "numpy.abs", "numpy.abs", "numpy.random.randn", "numpy.random.randn", "torch.cat.unsqueeze"], "function", ["None"], ["", "def", "rand_mask", "(", "size", ",", "thresh", ")", ":", "\n", "    ", "half_size", "=", "np", ".", "floor", "(", "size", "/", "2", ")", ".", "astype", "(", "'int32'", ")", "\n", "idxX", "=", "np", ".", "mod", "(", "np", ".", "floor", "(", "np", ".", "abs", "(", "np", ".", "random", ".", "randn", "(", "half_size", ",", "half_size", ")", ")", "*", "thresh", ")", ",", "half_size", ")", "\n", "idxY", "=", "np", ".", "mod", "(", "np", ".", "floor", "(", "np", ".", "abs", "(", "np", ".", "random", ".", "randn", "(", "half_size", ",", "half_size", ")", ")", "*", "thresh", ")", ",", "half_size", ")", "\n", "mask_t", "=", "torch", ".", "zeros", "(", "size", ",", "size", ")", "\n", "mask_t", "[", "idxY", ",", "idxX", "]", "=", "1", "\n", "# Duplicate", "\n", "dupIdx", "=", "[", "i", "for", "i", "in", "range", "(", "half_size", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "mask_t", "[", ":", "half_size", ",", "half_size", ":", "]", "=", "mask_t", "[", ":", "half_size", ",", "dupIdx", "]", "# flip x", "\n", "mask_t", "[", "half_size", ":", ",", ":", "half_size", "]", "=", "mask_t", "[", "dupIdx", ",", ":", "half_size", "]", "# flip y", "\n", "x", ",", "y", "=", "np", ".", "meshgrid", "(", "dupIdx", ",", "dupIdx", ")", "\n", "mask_t", "[", "half_size", ":", ",", "half_size", ":", "]", "=", "mask_t", "[", "y", ",", "x", "]", "# flip x and y", "\n", "mask", "=", "np", ".", "array", "(", "mask_t", ")", "\n", "\n", "ratio", "=", "np", ".", "sum", "(", "mask", "==", "1", ")", "/", "mask", ".", "size", "\n", "mask_t", "=", "mask_t", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "4", ")", "\n", "mask_t", "=", "torch", ".", "cat", "(", "(", "mask_t", ",", "mask_t", ")", ",", "4", ")", "\n", "return", "mask_t", ",", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.compress_FFT": [[180, 194], ["torch.rfft().float().view", "torch.rfft().float().view", "torch.rfft().float().view", "mask.view.view", "torch.cat", "torch.rfft().float", "torch.rfft().float", "torch.rfft().float", "R_masked.unsqueeze", "G_masked.unsqueeze", "B_masked.unsqueeze", "torch.rfft", "torch.rfft", "torch.rfft"], "function", ["None"], ["", "def", "compress_FFT", "(", "x", ",", "mask", ")", ":", "\n", "    ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "r", "=", "x", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "\n", "g", "=", "x", "[", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", "\n", "b", "=", "x", "[", ":", ",", "2", ":", "3", ",", ":", ",", ":", "]", "\n", "R", "=", "torch", ".", "rfft", "(", "r", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", ".", "float", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "G", "=", "torch", ".", "rfft", "(", "g", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", ".", "float", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "B", "=", "torch", ".", "rfft", "(", "b", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", ".", "float", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "mask", "=", "mask", ".", "view", "(", "-", "1", ")", "\n", "R_masked", "=", "R", "[", ":", ",", "mask", "==", "1", "]", "\n", "G_masked", "=", "G", "[", ":", ",", "mask", "==", "1", "]", "\n", "B_masked", "=", "B", "[", ":", ",", "mask", "==", "1", "]", "\n", "X_masked", "=", "torch", ".", "cat", "(", "(", "R_masked", ".", "unsqueeze", "(", "1", ")", ",", "G_masked", ".", "unsqueeze", "(", "1", ")", ",", "B_masked", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "X_masked", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.IAGAN.compress_FFT_t": [[195, 212], ["mask.view.view", "torch.zeros_like", "R.reshape.reshape", "torch.zeros_like", "G.reshape.reshape", "torch.zeros_like", "B.reshape.reshape", "torch.irfft", "torch.irfft", "torch.irfft", "torch.cat"], "function", ["None"], ["", "def", "compress_FFT_t", "(", "X", ",", "mask", ")", ":", "\n", "    ", "shape", "=", "mask", ".", "shape", "\n", "mask", "=", "mask", ".", "view", "(", "-", "1", ")", "\n", "R", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "R", "[", "mask", "==", "1", "]", "=", "X", "[", ":", ",", "0", "]", "\n", "R", "=", "R", ".", "reshape", "(", "shape", ")", "\n", "G", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "G", "[", "mask", "==", "1", "]", "=", "X", "[", ":", ",", "1", "]", "\n", "G", "=", "G", ".", "reshape", "(", "shape", ")", "\n", "B", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "B", "[", "mask", "==", "1", "]", "=", "X", "[", ":", ",", "2", "]", "\n", "B", "=", "B", ".", "reshape", "(", "shape", ")", "\n", "r", "=", "torch", ".", "irfft", "(", "R", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", "\n", "g", "=", "torch", ".", "irfft", "(", "G", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", "\n", "b", "=", "torch", ".", "irfft", "(", "B", ",", "signal_ndim", "=", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "r", ",", "g", ",", "b", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.PixelNormLayer.__init__": [[19, 21], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PixelNormLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.PixelNormLayer.forward": [[22, 24], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "/", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.WScaleLayer.__init__": [[27, 32], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", "WScaleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "size", ")", ")", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.WScaleLayer.forward": [[33, 39], ["x.size", "model.WScaleLayer.b.view().expand", "model.WScaleLayer.b.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", "*", "self", ".", "scale", "+", "self", ".", "b", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "expand", "(", "\n", "x_size", "[", "0", "]", ",", "self", ".", "size", ",", "x_size", "[", "2", "]", ",", "x_size", "[", "3", "]", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.NormConvBlock.__init__": [[42, 48], ["torch.Module.__init__", "model.PixelNormLayer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.WScaleLayer"], "methods", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", ")", ":", "\n", "        ", "super", "(", "NormConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "PixelNormLayer", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "1", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "wscale", "=", "WScaleLayer", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.NormConvBlock.forward": [[49, 54], ["model.NormConvBlock.norm", "model.NormConvBlock.conv", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.NormConvBlock.wscale"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "wscale", "(", "x", ")", ",", "negative_slope", "=", "0.2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.NormUpscaleConvBlock.__init__": [[57, 64], ["torch.Module.__init__", "model.PixelNormLayer", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.WScaleLayer"], "methods", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", ")", ":", "\n", "        ", "super", "(", "NormUpscaleConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "PixelNormLayer", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "1", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "wscale", "=", "WScaleLayer", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.NormUpscaleConvBlock.forward": [[65, 71], ["model.NormUpscaleConvBlock.norm", "model.NormUpscaleConvBlock.up", "model.NormUpscaleConvBlock.conv", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.NormUpscaleConvBlock.wscale"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "wscale", "(", "x", ")", ",", "negative_slope", "=", "0.2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__": [[74, 105], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.NormConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "model.NormUpscaleConvBlock", "model.NormConvBlock", "collections.OrderedDict", "model.PixelNormLayer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.WScaleLayer"], "methods", ["home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "NormConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "4", ",", "padding", "=", "3", ")", ",", "\n", "NormConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "512", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "256", ",", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormUpscaleConvBlock", "(", "32", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "NormConvBlock", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "output", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'norm'", ",", "PixelNormLayer", "(", ")", ")", ",", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "16", ",", "\n", "3", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ")", ")", ",", "\n", "(", "'wscale'", ",", "WScaleLayer", "(", "3", ")", ")", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.shadyabh_IAGAN.None.model.Generator.forward": [[107, 111], ["model.Generator.features", "model.Generator.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "output", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]]}