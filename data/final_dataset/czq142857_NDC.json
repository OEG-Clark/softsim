{"home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.ABC_pointcloud_hdf5.__init__": [[15, 82], ["open", "open.close", "print", "exit", "name.strip", "print", "open.readlines", "print", "print", "len", "print", "len", "len", "len", "print", "range", "print", "len", "int", "temp_hdf5_names.append", "temp_hdf5_gridsizes.append", "int", "len", "len", "len", "len", "int", "int", "len", "len", "len", "len", "temp_hdf5_names.append", "temp_hdf5_shape_scale.append", "str", "str", "str", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "input_point_num", ",", "output_grid_size", ",", "KNN_num", ",", "pooling_radius", ",", "input_type", ",", "train", ",", "out_bool", ",", "out_float", ",", "input_only", "=", "False", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "input_point_num", "=", "input_point_num", "\n", "self", ".", "output_grid_size", "=", "output_grid_size", "\n", "self", ".", "KNN_num", "=", "KNN_num", "\n", "self", ".", "pooling_radius", "=", "pooling_radius", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "input_type", "=", "input_type", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "self", ".", "input_only", "=", "input_only", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", "and", "self", ".", "train", ":", "\n", "            ", "print", "(", "\"ERROR: out_bool and out_float cannot both be activated in training\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "#self.hdf5_names = os.listdir(self.data_dir)", "\n", "#self.hdf5_names = [name[:-5] for name in self.hdf5_names if name[-5:]==\".hdf5\"]", "\n", "#self.hdf5_names = sorted(self.hdf5_names)", "\n", "\n", "", "fin", "=", "open", "(", "\"abc_obj_list.txt\"", ",", "'r'", ")", "\n", "self", ".", "hdf5_names", "=", "[", "name", ".", "strip", "(", ")", "for", "name", "in", "fin", ".", "readlines", "(", ")", "]", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "if", "self", ".", "input_type", "==", "\"pointcloud\"", ":", "\n", "            ", "if", "self", ".", "train", ":", "\n", "                ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", ":", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", "]", "\n", "print", "(", "\"Total#\"", ",", "\"train\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "#separate 32 and 64", "\n", "temp_hdf5_names", "=", "[", "]", "\n", "temp_hdf5_gridsizes", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "hdf5_names", ":", "\n", "                    ", "for", "grid_size", "in", "[", "32", ",", "64", "]", ":", "\n", "                        ", "temp_hdf5_names", ".", "append", "(", "name", ")", "\n", "temp_hdf5_gridsizes", ".", "append", "(", "grid_size", ")", "\n", "", "", "self", ".", "hdf5_names", "=", "temp_hdf5_names", "\n", "self", ".", "hdf5_gridsizes", "=", "temp_hdf5_gridsizes", "\n", "", "else", ":", "\n", "                ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", ":", "]", "\n", "self", ".", "hdf5_gridsizes", "=", "[", "self", ".", "output_grid_size", "]", "*", "len", "(", "self", ".", "hdf5_names", ")", "\n", "print", "(", "\"Total#\"", ",", "\"test\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n", "", "print", "(", "\"Non-trivial Total#\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n", "", "elif", "self", ".", "input_type", "==", "\"noisypc\"", ":", "#augmented data", "\n", "            ", "if", "self", ".", "train", ":", "\n", "                ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", ":", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", "]", "\n", "print", "(", "\"Total#\"", ",", "\"train\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "#augmented data", "\n", "temp_hdf5_names", "=", "[", "]", "\n", "temp_hdf5_shape_scale", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "len", "(", "self", ".", "hdf5_names", ")", ")", ":", "\n", "                    ", "for", "s", "in", "[", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", "]", ":", "\n", "                        ", "for", "i", "in", "[", "0", ",", "1", "]", ":", "\n", "                            ", "for", "j", "in", "[", "0", ",", "1", "]", ":", "\n", "                                ", "for", "k", "in", "[", "0", ",", "1", "]", ":", "\n", "                                    ", "newname", "=", "self", ".", "hdf5_names", "[", "t", "]", "+", "\"_\"", "+", "str", "(", "s", ")", "+", "\"_\"", "+", "str", "(", "i", ")", "+", "\"_\"", "+", "str", "(", "j", ")", "+", "\"_\"", "+", "str", "(", "k", ")", "\n", "temp_hdf5_names", ".", "append", "(", "newname", ")", "\n", "temp_hdf5_shape_scale", ".", "append", "(", "s", ")", "\n", "", "", "", "", "", "self", ".", "hdf5_names", "=", "temp_hdf5_names", "\n", "self", ".", "hdf5_shape_scale", "=", "temp_hdf5_shape_scale", "\n", "", "else", ":", "\n", "                ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", ":", "]", "\n", "self", ".", "hdf5_shape_scale", "=", "[", "10", "]", "*", "len", "(", "self", ".", "hdf5_names", ")", "\n", "print", "(", "\"Total#\"", ",", "\"test\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n", "", "print", "(", "\"Non-trivial Total#\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.ABC_pointcloud_hdf5.__len__": [[84, 86], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "hdf5_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.ABC_pointcloud_hdf5.__getitem__": [[87, 197], ["numpy.ascontiguousarray", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "numpy.floor().astype", "numpy.clip", "numpy.zeros", "range", "numpy.nonzero", "numpy.concatenate", "numpy.floor().astype", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "utils.read_and_augment_data_undc", "numpy.reshape", "numpy.reshape", "numpy.copy", "range", "numpy.concatenate.astype", "numpy.reshape", "numpy.reshape", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "utils.read_data_input_only", "utils.read_data", "numpy.random.shuffle", "numpy.random.seed", "numpy.floor", "range", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.floor", "numpy.random.randint", "numpy.random.shuffle", "int", "int", "numpy.random.randint", "numpy.random.randn().astype", "len", "len", "len", "range", "len", "len", "len", "numpy.random.randint", "numpy.random.randn"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_undc", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data_input_only", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "hdf5_dir", "=", "self", ".", "data_dir", "+", "\"/\"", "+", "self", ".", "hdf5_names", "[", "index", "]", "+", "\".hdf5\"", "\n", "if", "self", ".", "input_type", "==", "\"pointcloud\"", ":", "\n", "            ", "grid_size", "=", "self", ".", "hdf5_gridsizes", "[", "index", "]", "\n", "", "elif", "self", ".", "input_type", "==", "\"noisypc\"", ":", "#augmented data", "\n", "            ", "grid_size", "=", "self", ".", "output_grid_size", "\n", "shape_scale", "=", "self", ".", "hdf5_shape_scale", "[", "index", "]", "\n", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_and_augment_data_undc", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "input_only", ":", "\n", "                ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "is_undc", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "is_undc", "=", "True", ")", "\n", "\n", "\n", "", "", "if", "self", ".", "train", ":", "\n", "            ", "if", "self", ".", "input_type", "==", "\"pointcloud\"", ":", "\n", "#augment input point number depending on the grid size", "\n", "#grid   ideal?  range", "\n", "#32     1024    512-2048", "\n", "#64     4096    2048-8192", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "gt_input_", ")", "\n", "if", "grid_size", "==", "32", ":", "\n", "                    ", "count", "=", "np", ".", "random", ".", "randint", "(", "512", ",", "2048", ")", "\n", "", "elif", "grid_size", "==", "64", ":", "\n", "                    ", "count", "=", "np", ".", "random", ".", "randint", "(", "2048", ",", "8192", ")", "\n", "", "gt_input_", "=", "gt_input_", "[", ":", "count", "]", "\n", "", "elif", "self", ".", "input_type", "==", "\"noisypc\"", ":", "#augmented data", "\n", "#augment input point number depending on the shape scale", "\n", "#grid   ideal?  range", "\n", "#64     16384    8192-32768", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "gt_input_", ")", "\n", "rand_int_s", "=", "int", "(", "8192", "*", "(", "shape_scale", "/", "10.0", ")", "**", "2", ")", "\n", "rand_int_t", "=", "int", "(", "32768", "*", "(", "shape_scale", "/", "10.0", ")", "**", "2", ")", "\n", "count", "=", "np", ".", "random", ".", "randint", "(", "rand_int_s", ",", "rand_int_t", ")", "\n", "gt_input_", "=", "gt_input_", "[", ":", "count", "]", "\n", "", "", "else", ":", "\n", "            ", "gt_input_", "=", "gt_input_", "[", ":", "self", ".", "input_point_num", "]", "\n", "", "gt_input_", "=", "np", ".", "ascontiguousarray", "(", "gt_input_", ")", "\n", "\n", "#add Gaussian noise", "\n", "if", "self", ".", "input_type", "==", "\"noisypc\"", ":", "#augmented data", "\n", "            ", "if", "not", "self", ".", "train", ":", "\n", "                ", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "", "gt_input_", "=", "gt_input_", "+", "np", ".", "random", ".", "randn", "(", "gt_input_", ".", "shape", "[", "0", "]", ",", "gt_input_", ".", "shape", "[", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "*", "0.5", "\n", "\n", "\n", "#point cloud convolution, with KNN", "\n", "#basic building block:", "\n", "#-for each point", "\n", "#-find its K nearest neighbors", "\n", "#-and then use their relative positions to perform convolution", "\n", "#last layer (pooling):", "\n", "#-for each grid cell", "\n", "#-if it is within range to the point cloud", "\n", "#-find K nearest neighbors to the cell center", "\n", "#-and do convolution", "\n", "\n", "", "pc_xyz", "=", "gt_input_", "\n", "kd_tree", "=", "KDTree", "(", "pc_xyz", ",", "leaf_size", "=", "8", ")", "\n", "pc_KNN_idx", "=", "kd_tree", ".", "query", "(", "pc_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "pc_KNN_idx", "=", "np", ".", "reshape", "(", "pc_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "pc_KNN_xyz", "=", "pc_xyz", "[", "pc_KNN_idx", "]", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "pc_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "#this will be used to group point features", "\n", "\n", "#consider all grid cells within range to the point cloud", "\n", "pc_xyz_int", "=", "np", ".", "floor", "(", "pc_xyz", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "pc_xyz_int", "=", "np", ".", "clip", "(", "pc_xyz_int", ",", "0", ",", "grid_size", ")", "\n", "tmp_grid", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "tmp_grid", "[", "pc_xyz_int", "[", ":", ",", "0", "]", ",", "pc_xyz_int", "[", ":", ",", "1", "]", ",", "pc_xyz_int", "[", ":", ",", "2", "]", "]", "=", "1", "\n", "for", "ite", "in", "range", "(", "self", ".", "pooling_radius", ")", ":", "\n", "            ", "tmp_mask", "=", "np", ".", "copy", "(", "tmp_grid", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                        ", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "=", "tmp_mask", "|", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "\n", "", "", "", "", "voxel_x", ",", "voxel_y", ",", "voxel_z", "=", "np", ".", "nonzero", "(", "tmp_grid", ")", "\n", "voxel_xyz", "=", "np", ".", "concatenate", "(", "[", "np", ".", "reshape", "(", "voxel_x", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_y", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_z", ",", "[", "-", "1", ",", "1", "]", ")", "]", ",", "1", ")", "\n", "voxel_xyz", "=", "voxel_xyz", ".", "astype", "(", "np", ".", "float32", ")", "+", "0.5", "\n", "voxel_xyz_int", "=", "np", ".", "floor", "(", "voxel_xyz", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "voxel_KNN_idx", "=", "kd_tree", ".", "query", "(", "voxel_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "voxel_KNN_idx", "=", "np", ".", "reshape", "(", "voxel_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "voxel_KNN_xyz", "=", "pc_xyz", "[", "voxel_KNN_idx", "]", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "voxel_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "gt_output_bool", "=", "gt_output_bool_", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "\n", "gt_output_bool", "=", "np", ".", "ascontiguousarray", "(", "gt_output_bool", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "", "if", "self", ".", "out_float", ":", "\n", "            ", "gt_output_float", "=", "gt_output_float_", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "\n", "gt_output_float", "=", "np", ".", "ascontiguousarray", "(", "gt_output_float", ",", "np", ".", "float32", ")", "\n", "gt_output_float_mask", "=", "(", "gt_output_float", ">=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "\n", "", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "return", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ",", "gt_output_bool", ",", "gt_output_float", ",", "gt_output_float_mask", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "return", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ",", "gt_output_bool", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "return", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ",", "gt_output_float", ",", "gt_output_float_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.single_shape_pointcloud.__init__": [[203, 210], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "input_point_num", ",", "output_grid_size", ",", "KNN_num", ",", "pooling_radius", ",", "normalize", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "input_point_num", "=", "input_point_num", "\n", "self", ".", "output_grid_size", "=", "output_grid_size", "\n", "self", ".", "KNN_num", "=", "KNN_num", "\n", "self", ".", "pooling_radius", "=", "pooling_radius", "\n", "self", ".", "normalize", "=", "normalize", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.single_shape_pointcloud.__len__": [[211, 213], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.single_shape_pointcloud.__getitem__": [[214, 279], ["numpy.random.shuffle", "numpy.ascontiguousarray", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "numpy.floor().astype", "numpy.clip", "numpy.zeros", "range", "numpy.nonzero", "numpy.concatenate", "numpy.floor().astype", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "trimesh.load", "[].astype.vertices.astype", "numpy.min", "numpy.max", "len", "print", "numpy.reshape", "numpy.reshape", "numpy.copy", "range", "numpy.concatenate.astype", "numpy.reshape", "numpy.reshape", "datasetpc.single_shape_pointcloud.data_dir.split", "h5py.File", "[].astype", "h5py.File.close", "print", "exit", "numpy.sum", "numpy.reshape", "str", "str", "numpy.floor", "range", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.floor", "datasetpc.single_shape_pointcloud.data_dir.split", "len", "len", "len", "len", "range", "len", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "grid_size", "=", "self", ".", "output_grid_size", "\n", "\n", "if", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"ply\"", ":", "\n", "            ", "LOD_input", "=", "trimesh", ".", "load", "(", "self", ".", "data_dir", ")", "\n", "LOD_input", "=", "LOD_input", ".", "vertices", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"hdf5\"", ":", "\n", "            ", "hdf5_file", "=", "h5py", ".", "File", "(", "self", ".", "data_dir", ",", "'r'", ")", "\n", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "hdf5_file", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"ERROR: invalid input type - only support ply or hdf5\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "#normalize", "\n", "", "if", "self", ".", "normalize", ":", "\n", "            ", "LOD_input_min", "=", "np", ".", "min", "(", "LOD_input", ",", "0", ")", "\n", "LOD_input_max", "=", "np", ".", "max", "(", "LOD_input", ",", "0", ")", "\n", "LOD_input_mean", "=", "(", "LOD_input_min", "+", "LOD_input_max", ")", "/", "2", "\n", "LOD_input_scale", "=", "np", ".", "sum", "(", "(", "LOD_input_max", "-", "LOD_input_min", ")", "**", "2", ")", "**", "0.5", "\n", "LOD_input", "=", "LOD_input", "-", "np", ".", "reshape", "(", "LOD_input_mean", ",", "[", "1", ",", "3", "]", ")", "\n", "LOD_input", "=", "LOD_input", "/", "LOD_input_scale", "\n", "\n", "", "gt_input_", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "\n", "if", "len", "(", "gt_input_", ")", "<", "self", ".", "input_point_num", ":", "\n", "            ", "print", "(", "\"WARNING: you specified\"", ",", "str", "(", "self", ".", "input_point_num", ")", ",", "\"points as input but the given file only has\"", ",", "str", "(", "len", "(", "gt_input_", ")", ")", ",", "\"points\"", ")", "\n", "", "np", ".", "random", ".", "shuffle", "(", "gt_input_", ")", "\n", "gt_input_", "=", "gt_input_", "[", ":", "self", ".", "input_point_num", "]", "\n", "gt_input_", "=", "np", ".", "ascontiguousarray", "(", "gt_input_", ")", "\n", "\n", "#write_ply_point(str(index)+\".ply\", gt_input_)", "\n", "\n", "pc_xyz", "=", "gt_input_", "\n", "kd_tree", "=", "KDTree", "(", "pc_xyz", ",", "leaf_size", "=", "8", ")", "\n", "pc_KNN_idx", "=", "kd_tree", ".", "query", "(", "pc_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "pc_KNN_idx", "=", "np", ".", "reshape", "(", "pc_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "pc_KNN_xyz", "=", "pc_xyz", "[", "pc_KNN_idx", "]", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "pc_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "#this will be used to group point features", "\n", "\n", "#consider all grid cells within range to the point cloud", "\n", "pc_xyz_int", "=", "np", ".", "floor", "(", "pc_xyz", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "pc_xyz_int", "=", "np", ".", "clip", "(", "pc_xyz_int", ",", "0", ",", "grid_size", ")", "\n", "tmp_grid", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "tmp_grid", "[", "pc_xyz_int", "[", ":", ",", "0", "]", ",", "pc_xyz_int", "[", ":", ",", "1", "]", ",", "pc_xyz_int", "[", ":", ",", "2", "]", "]", "=", "1", "\n", "for", "ite", "in", "range", "(", "self", ".", "pooling_radius", ")", ":", "\n", "            ", "tmp_mask", "=", "np", ".", "copy", "(", "tmp_grid", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                        ", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "=", "tmp_mask", "|", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "\n", "", "", "", "", "voxel_x", ",", "voxel_y", ",", "voxel_z", "=", "np", ".", "nonzero", "(", "tmp_grid", ")", "\n", "voxel_xyz", "=", "np", ".", "concatenate", "(", "[", "np", ".", "reshape", "(", "voxel_x", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_y", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_z", ",", "[", "-", "1", ",", "1", "]", ")", "]", ",", "1", ")", "\n", "voxel_xyz", "=", "voxel_xyz", ".", "astype", "(", "np", ".", "float32", ")", "+", "0.5", "\n", "voxel_xyz_int", "=", "np", ".", "floor", "(", "voxel_xyz", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "voxel_KNN_idx", "=", "kd_tree", ".", "query", "(", "voxel_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "voxel_KNN_idx", "=", "np", ".", "reshape", "(", "voxel_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "voxel_KNN_xyz", "=", "pc_xyz", "[", "voxel_KNN_idx", "]", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "voxel_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "\n", "return", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.scene_crop_pointcloud.__init__": [[285, 315], ["numpy.min", "numpy.max", "numpy.max", "numpy.ceil().astype", "print", "trimesh.load", "[].astype.vertices.astype", "numpy.reshape", "datasetpc.scene_crop_pointcloud.data_dir.split", "h5py.File", "[].astype", "h5py.File.close", "print", "exit", "numpy.ceil", "datasetpc.scene_crop_pointcloud.data_dir.split", "numpy.max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "input_point_num", ",", "output_grid_size", ",", "KNN_num", ",", "pooling_radius", ",", "block_num_per_dim", ",", "block_padding", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "input_point_num", "=", "input_point_num", "\n", "self", ".", "output_grid_size", "=", "output_grid_size", "\n", "self", ".", "KNN_num", "=", "KNN_num", "\n", "self", ".", "pooling_radius", "=", "pooling_radius", "\n", "self", ".", "block_num_per_dim", "=", "block_num_per_dim", "\n", "self", ".", "block_padding", "=", "block_padding", "\n", "\n", "if", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"ply\"", ":", "\n", "            ", "LOD_input", "=", "trimesh", ".", "load", "(", "self", ".", "data_dir", ")", "\n", "LOD_input", "=", "LOD_input", ".", "vertices", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"hdf5\"", ":", "\n", "            ", "hdf5_file", "=", "h5py", ".", "File", "(", "self", ".", "data_dir", ",", "'r'", ")", "\n", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "hdf5_file", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"ERROR: invalid input type - only support ply or hdf5\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "#normalize to unit cube for each crop", "\n", "", "LOD_input_min", "=", "np", ".", "min", "(", "LOD_input", ",", "0", ")", "\n", "LOD_input_max", "=", "np", ".", "max", "(", "LOD_input", ",", "0", ")", "\n", "LOD_input_scale", "=", "np", ".", "max", "(", "LOD_input_max", "-", "LOD_input_min", ")", "\n", "LOD_input", "=", "LOD_input", "-", "np", ".", "reshape", "(", "LOD_input_min", ",", "[", "1", ",", "3", "]", ")", "\n", "LOD_input", "=", "LOD_input", "/", "(", "LOD_input_scale", "/", "self", ".", "block_num_per_dim", ")", "\n", "self", ".", "full_scene", "=", "LOD_input", "\n", "self", ".", "full_scene_size", "=", "np", ".", "ceil", "(", "np", ".", "max", "(", "self", ".", "full_scene", ",", "0", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "print", "(", "\"Crops:\"", ",", "self", ".", "full_scene_size", ")", "\n", "self", ".", "full_scene", "=", "self", ".", "full_scene", "*", "self", ".", "output_grid_size", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.scene_crop_pointcloud.__len__": [[317, 319], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "full_scene_size", "[", "0", "]", "*", "self", ".", "full_scene_size", "[", "1", "]", "*", "self", ".", "full_scene_size", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.datasetpc.scene_crop_pointcloud.__getitem__": [[320, 373], ["numpy.random.shuffle", "numpy.ascontiguousarray", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "numpy.floor().astype", "numpy.clip", "numpy.zeros", "range", "numpy.nonzero", "numpy.concatenate", "numpy.floor().astype", "sklearn.neighbors.KDTree.query", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.array", "numpy.reshape", "numpy.reshape", "numpy.copy", "range", "numpy.concatenate.astype", "numpy.reshape", "numpy.reshape", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.floor", "range", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.floor", "len", "len", "len", "range", "len", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "grid_size", "=", "self", ".", "output_grid_size", "+", "self", ".", "block_padding", "*", "2", "\n", "\n", "idx_x", "=", "index", "//", "(", "self", ".", "full_scene_size", "[", "1", "]", "*", "self", ".", "full_scene_size", "[", "2", "]", ")", "\n", "idx_yz", "=", "index", "%", "(", "self", ".", "full_scene_size", "[", "1", "]", "*", "self", ".", "full_scene_size", "[", "2", "]", ")", "\n", "idx_y", "=", "idx_yz", "//", "self", ".", "full_scene_size", "[", "2", "]", "\n", "idx_z", "=", "idx_yz", "%", "self", ".", "full_scene_size", "[", "2", "]", "\n", "\n", "gt_input_mask_", "=", "(", "self", ".", "full_scene", "[", ":", ",", "0", "]", ">", "idx_x", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", ")", "&", "(", "self", ".", "full_scene", "[", ":", ",", "0", "]", "<", "(", "idx_x", "+", "1", ")", "*", "self", ".", "output_grid_size", "+", "self", ".", "block_padding", ")", "&", "(", "self", ".", "full_scene", "[", ":", ",", "1", "]", ">", "idx_y", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", ")", "&", "(", "self", ".", "full_scene", "[", ":", ",", "1", "]", "<", "(", "idx_y", "+", "1", ")", "*", "self", ".", "output_grid_size", "+", "self", ".", "block_padding", ")", "&", "(", "self", ".", "full_scene", "[", ":", ",", "2", "]", ">", "idx_z", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", ")", "&", "(", "self", ".", "full_scene", "[", ":", ",", "2", "]", "<", "(", "idx_z", "+", "1", ")", "*", "self", ".", "output_grid_size", "+", "self", ".", "block_padding", ")", "\n", "\n", "if", "np", ".", "sum", "(", "gt_input_mask_", ")", "<", "100", ":", "\n", "            ", "return", "np", ".", "zeros", "(", "[", "1", "]", ",", "np", ".", "float32", ")", ",", "np", ".", "zeros", "(", "[", "1", "]", ",", "np", ".", "float32", ")", ",", "np", ".", "zeros", "(", "[", "1", "]", ",", "np", ".", "float32", ")", ",", "np", ".", "zeros", "(", "[", "1", "]", ",", "np", ".", "float32", ")", ",", "np", ".", "zeros", "(", "[", "1", "]", ",", "np", ".", "float32", ")", "\n", "\n", "", "gt_input_", "=", "self", ".", "full_scene", "[", "gt_input_mask_", "]", "-", "np", ".", "array", "(", "[", "[", "idx_x", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", ",", "idx_y", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", ",", "idx_z", "*", "self", ".", "output_grid_size", "-", "self", ".", "block_padding", "]", "]", ",", "np", ".", "float32", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "gt_input_", ")", "\n", "gt_input_", "=", "gt_input_", "[", ":", "self", ".", "input_point_num", "]", "\n", "gt_input_", "=", "np", ".", "ascontiguousarray", "(", "gt_input_", ")", "\n", "\n", "#write_ply_point(str(index)+\".ply\", gt_input_)", "\n", "\n", "pc_xyz", "=", "gt_input_", "\n", "kd_tree", "=", "KDTree", "(", "pc_xyz", ",", "leaf_size", "=", "8", ")", "\n", "pc_KNN_idx", "=", "kd_tree", ".", "query", "(", "pc_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "pc_KNN_idx", "=", "np", ".", "reshape", "(", "pc_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "pc_KNN_xyz", "=", "pc_xyz", "[", "pc_KNN_idx", "]", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "pc_xyz", ",", "[", "len", "(", "pc_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "pc_KNN_xyz", "=", "np", ".", "reshape", "(", "pc_KNN_xyz", ",", "[", "len", "(", "pc_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "#this will be used to group point features", "\n", "\n", "#consider all grid cells within range to the point cloud", "\n", "pc_xyz_int", "=", "np", ".", "floor", "(", "pc_xyz", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "pc_xyz_int", "=", "np", ".", "clip", "(", "pc_xyz_int", ",", "0", ",", "grid_size", ")", "\n", "tmp_grid", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "tmp_grid", "[", "pc_xyz_int", "[", ":", ",", "0", "]", ",", "pc_xyz_int", "[", ":", ",", "1", "]", ",", "pc_xyz_int", "[", ":", ",", "2", "]", "]", "=", "1", "\n", "for", "ite", "in", "range", "(", "self", ".", "pooling_radius", ")", ":", "\n", "            ", "tmp_mask", "=", "np", ".", "copy", "(", "tmp_grid", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                        ", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "=", "tmp_mask", "|", "tmp_grid", "[", "i", ":", "grid_size", "-", "1", "+", "i", ",", "j", ":", "grid_size", "-", "1", "+", "j", ",", "k", ":", "grid_size", "-", "1", "+", "k", "]", "\n", "", "", "", "", "voxel_x", ",", "voxel_y", ",", "voxel_z", "=", "np", ".", "nonzero", "(", "tmp_grid", ")", "\n", "voxel_xyz", "=", "np", ".", "concatenate", "(", "[", "np", ".", "reshape", "(", "voxel_x", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_y", ",", "[", "-", "1", ",", "1", "]", ")", ",", "np", ".", "reshape", "(", "voxel_z", ",", "[", "-", "1", ",", "1", "]", ")", "]", ",", "1", ")", "\n", "voxel_xyz", "=", "voxel_xyz", ".", "astype", "(", "np", ".", "float32", ")", "+", "0.5", "\n", "voxel_xyz_int", "=", "np", ".", "floor", "(", "voxel_xyz", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "voxel_KNN_idx", "=", "kd_tree", ".", "query", "(", "voxel_xyz", ",", "k", "=", "self", ".", "KNN_num", ",", "return_distance", "=", "False", ")", "\n", "voxel_KNN_idx", "=", "np", ".", "reshape", "(", "voxel_KNN_idx", ",", "[", "-", "1", "]", ")", "\n", "voxel_KNN_xyz", "=", "pc_xyz", "[", "voxel_KNN_idx", "]", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "self", ".", "KNN_num", ",", "3", "]", ")", "-", "np", ".", "reshape", "(", "voxel_xyz", ",", "[", "len", "(", "voxel_xyz", ")", ",", "1", ",", "3", "]", ")", "\n", "voxel_KNN_xyz", "=", "np", ".", "reshape", "(", "voxel_KNN_xyz", ",", "[", "len", "(", "voxel_xyz", ")", "*", "self", ".", "KNN_num", ",", "3", "]", ")", "\n", "\n", "return", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.main.worker_init_fn": [[125, 127], ["numpy.random.seed", "int", "time.time"], "function", ["None"], ["", "def", "worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "int", "(", "time", ".", "time", "(", ")", "*", "10000000", ")", "%", "10000000", "+", "worker_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_conv_first.__init__": [[11, 16], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "pc_conv_first", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "3", ",", "self", ".", "ef_dim", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_conv_first.forward": [[17, 29], ["modelpc.pc_conv_first.linear_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.pc_conv_first.linear_2", "output.view.view.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "KNN_xyz", ")", ":", "\n", "        ", "output", "=", "KNN_xyz", "\n", "#[newpointnum*KNN_num,3]", "\n", "output", "=", "self", ".", "linear_1", "(", "output", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "linear_2", "(", "output", ")", "\n", "#[newpointnum*KNN_num,ef_dim]", "\n", "output", "=", "output", ".", "view", "(", "-", "1", ",", "KNN_num", ",", "self", ".", "ef_dim", ")", "\n", "#[newpointnum,KNN_num,ef_dim]", "\n", "output", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "0", "]", "\n", "#[newpointnum,ef_dim]", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_conv.__init__": [[32, 37], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "pc_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", "+", "3", ",", "self", ".", "ef_dim", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_conv.forward": [[38, 54], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modelpc.pc_conv.linear_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.pc_conv.linear_2", "output.view.view.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "KNN_idx", ",", "KNN_xyz", ")", ":", "\n", "        ", "output", "=", "input", "\n", "#[pointnum,ef_dim]", "\n", "output", "=", "output", "[", "KNN_idx", "]", "\n", "#[newpointnum*KNN_num,ef_dim]", "\n", "output", "=", "torch", ".", "cat", "(", "[", "output", ",", "KNN_xyz", "]", ",", "1", ")", "\n", "#[newpointnum*KNN_num,ef_dim+3]", "\n", "output", "=", "self", ".", "linear_1", "(", "output", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "linear_2", "(", "output", ")", "\n", "#[newpointnum*KNN_num,ef_dim]", "\n", "output", "=", "output", ".", "view", "(", "-", "1", ",", "KNN_num", ",", "self", ".", "ef_dim", ")", "\n", "#[newpointnum,KNN_num,ef_dim]", "\n", "output", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "0", "]", "\n", "#[newpointnum,ef_dim]", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_resnet_block.__init__": [[57, 62], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "pc_resnet_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.pc_resnet_block.forward": [[63, 70], ["modelpc.pc_resnet_block.linear_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.pc_resnet_block.linear_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "self", ".", "linear_1", "(", "input", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "linear_2", "(", "output", ")", "\n", "output", "=", "output", "+", "input", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.resnet_block.__init__": [[73, 78], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "resnet_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "pc_conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "pc_conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.resnet_block.forward": [[79, 86], ["modelpc.resnet_block.pc_conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.resnet_block.pc_conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "self", ".", "pc_conv_1", "(", "input", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "pc_conv_2", "(", "output", ")", "\n", "output", "=", "output", "+", "input", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.resnet_block_rec3.__init__": [[89, 94], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "resnet_block_rec3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "pc_conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "pc_conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.resnet_block_rec3.forward": [[95, 102], ["modelpc.resnet_block_rec3.pc_conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.resnet_block_rec3.pc_conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "self", ".", "pc_conv_1", "(", "input", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "pc_conv_2", "(", "output", ")", "\n", "output", "=", "output", "+", "input", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.local_pointnet.__init__": [[106, 145], ["torch.Module.__init__", "modelpc.pc_conv_first", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ")", ":", "\n", "        ", "super", "(", "local_pointnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "128", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "pc_conv_0", "=", "pc_conv_first", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_1", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_1", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_2", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_2", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_3", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_3", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_4", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_4", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_5", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_5", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_6", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_6", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_7", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "conv_4", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_5", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "self", ".", "pc_conv_out_bool", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "3", ")", "\n", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "pc_conv_out_float", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.local_pointnet.forward": [[146, 218], ["modelpc.local_pointnet.pc_conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_1", "modelpc.local_pointnet.pc_conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_2", "modelpc.local_pointnet.pc_conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_3", "modelpc.local_pointnet.pc_conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_4", "modelpc.local_pointnet.pc_conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_5", "modelpc.local_pointnet.pc_conv_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_6", "modelpc.local_pointnet.pc_conv_6", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.pc_res_7", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "tmp_grid.permute().unsqueeze.permute().unsqueeze.permute().unsqueeze", "modelpc.local_pointnet.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.conv_3", "torch.leaky_relu.squeeze().permute", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet.conv_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "voxel_xyz_int_min.view", "modelpc.local_pointnet.pc_conv_out_bool", "modelpc.local_pointnet.pc_conv_out_float", "tmp_grid.permute().unsqueeze.permute().unsqueeze.permute", "torch.leaky_relu.squeeze", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "modelpc.local_pointnet.pc_conv_out_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "modelpc.local_pointnet.pc_conv_out_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ")", ":", "\n", "        ", "out", "=", "pc_KNN_xyz", "\n", "\n", "out", "=", "self", ".", "pc_conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_1", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_1", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_2", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_2", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_3", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_3", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_4", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_4", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_5", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_5", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_6", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_6", "(", "out", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_7", "(", "out", ")", "\n", "\n", "voxel_xyz_int_max", "=", "torch", ".", "max", "(", "voxel_xyz_int", ",", "0", ")", "[", "0", "]", "\n", "voxel_xyz_int_min", "=", "torch", ".", "min", "(", "voxel_xyz_int", ",", "0", ")", "[", "0", "]", "\n", "voxel_xyz_int_size", "=", "voxel_xyz_int_max", "-", "voxel_xyz_int_min", "+", "1", "\n", "voxel_xyz_int", "=", "voxel_xyz_int", "-", "voxel_xyz_int_min", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "tmp_grid", "=", "torch", ".", "zeros", "(", "voxel_xyz_int_size", "[", "0", "]", ",", "voxel_xyz_int_size", "[", "1", "]", ",", "voxel_xyz_int_size", "[", "2", "]", ",", "self", ".", "ef_dim", ",", "device", "=", "out", ".", "device", ")", "\n", "tmp_grid", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "=", "out", "\n", "tmp_grid", "=", "tmp_grid", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ".", "unsqueeze", "(", "0", ")", "\n", "out", "=", "tmp_grid", "\n", "\n", "\n", "out", "=", "self", ".", "conv_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", "\n", "out", "=", "out", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "\n", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "pc_conv_out_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "pc_conv_out_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "pc_conv_out_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "pc_conv_out_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.local_pointnet_larger.__init__": [[222, 266], ["torch.Module.__init__", "modelpc.pc_conv_first", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.pc_conv", "modelpc.pc_resnet_block", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "modelpc.resnet_block_rec3", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ")", ":", "\n", "        ", "super", "(", "local_pointnet_larger", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "128", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "pc_conv_0", "=", "pc_conv_first", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_1", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_1", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_2", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_2", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_3", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_3", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_4", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_4", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_5", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_5", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_6", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "pc_conv_6", "=", "pc_conv", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "pc_res_7", "=", "pc_resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "res_1", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_2", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_3", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_4", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_5", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_6", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_7", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_8", "=", "resnet_block_rec3", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "self", ".", "linear_bool", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "3", ")", "\n", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "linear_float", "=", "nn", ".", "Linear", "(", "self", ".", "ef_dim", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.local_pointnet_larger.forward": [[267, 336], ["modelpc.local_pointnet_larger.pc_conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_1", "modelpc.local_pointnet_larger.pc_conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_2", "modelpc.local_pointnet_larger.pc_conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_3", "modelpc.local_pointnet_larger.pc_conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_4", "modelpc.local_pointnet_larger.pc_conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_5", "modelpc.local_pointnet_larger.pc_conv_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_6", "modelpc.local_pointnet_larger.pc_conv_6", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.pc_res_7", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "tmp_grid.permute().unsqueeze.permute().unsqueeze.permute().unsqueeze", "modelpc.local_pointnet_larger.res_1", "modelpc.local_pointnet_larger.res_2", "modelpc.local_pointnet_larger.res_3", "modelpc.local_pointnet_larger.res_4", "modelpc.local_pointnet_larger.res_5", "modelpc.local_pointnet_larger.res_6", "modelpc.local_pointnet_larger.res_7", "modelpc.local_pointnet_larger.res_8", "torch.leaky_relu.squeeze().permute", "modelpc.local_pointnet_larger.linear_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "modelpc.local_pointnet_larger.linear_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "voxel_xyz_int_min.view", "modelpc.local_pointnet_larger.linear_bool", "modelpc.local_pointnet_larger.linear_float", "tmp_grid.permute().unsqueeze.permute().unsqueeze.permute", "torch.leaky_relu.squeeze", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "modelpc.local_pointnet_larger.linear_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "modelpc.local_pointnet_larger.linear_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ",", "voxel_xyz_int", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ")", ":", "\n", "        ", "out", "=", "pc_KNN_xyz", "\n", "\n", "out", "=", "self", ".", "pc_conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_1", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_1", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_2", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_2", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_3", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_3", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_4", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_4", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_5", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_5", "(", "out", ",", "pc_KNN_idx", ",", "pc_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_6", "(", "out", ")", "\n", "out", "=", "self", ".", "pc_conv_6", "(", "out", ",", "voxel_KNN_idx", ",", "voxel_KNN_xyz", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "pc_res_7", "(", "out", ")", "\n", "\n", "voxel_xyz_int_max", "=", "torch", ".", "max", "(", "voxel_xyz_int", ",", "0", ")", "[", "0", "]", "\n", "voxel_xyz_int_min", "=", "torch", ".", "min", "(", "voxel_xyz_int", ",", "0", ")", "[", "0", "]", "\n", "voxel_xyz_int_size", "=", "voxel_xyz_int_max", "-", "voxel_xyz_int_min", "+", "1", "\n", "voxel_xyz_int", "=", "voxel_xyz_int", "-", "voxel_xyz_int_min", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "tmp_grid", "=", "torch", ".", "zeros", "(", "voxel_xyz_int_size", "[", "0", "]", ",", "voxel_xyz_int_size", "[", "1", "]", ",", "voxel_xyz_int_size", "[", "2", "]", ",", "self", ".", "ef_dim", ",", "device", "=", "out", ".", "device", ")", "\n", "tmp_grid", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "=", "out", "\n", "tmp_grid", "=", "tmp_grid", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ".", "unsqueeze", "(", "0", ")", "\n", "out", "=", "tmp_grid", "\n", "\n", "out", "=", "self", ".", "res_1", "(", "out", ")", "\n", "out", "=", "self", ".", "res_2", "(", "out", ")", "\n", "out", "=", "self", ".", "res_3", "(", "out", ")", "\n", "out", "=", "self", ".", "res_4", "(", "out", ")", "\n", "out", "=", "self", ".", "res_5", "(", "out", ")", "\n", "out", "=", "self", ".", "res_6", "(", "out", ")", "\n", "out", "=", "self", ".", "res_7", "(", "out", ")", "\n", "out", "=", "self", ".", "res_8", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", "\n", "out", "=", "out", "[", "voxel_xyz_int", "[", ":", ",", "0", "]", ",", "voxel_xyz_int", "[", ":", ",", "1", "]", ",", "voxel_xyz_int", "[", ":", ",", "2", "]", "]", "\n", "\n", "out", "=", "self", ".", "linear_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "linear_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "linear_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "linear_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "linear_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "linear_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.modelpc.postprocessing": [[340, 462], ["range", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.max", "torch.max", "torch.max", "torch.zeros", "torch.zeros", "torch.zeros", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max.size", "torch.max.size", "torch.max.size"], "function", ["None"], ["", "", "", "def", "postprocessing", "(", "pred_output_bool", ")", ":", "\n", "    ", "for", "t", "in", "range", "(", "2", ")", ":", "\n", "\n", "#open edges", "\n", "        ", "gridedge_x_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "\n", "gridedge_x_outedge_y_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "\n", "gridedge_y_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "gridedge_y_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_z_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "outedge_x", "=", "gridedge_y_outedge_x_0", "+", "gridedge_y_outedge_x_1", "+", "gridedge_z_outedge_x_0", "+", "gridedge_z_outedge_x_1", "\n", "outedge_y", "=", "gridedge_x_outedge_y_0", "+", "gridedge_x_outedge_y_1", "+", "gridedge_z_outedge_y_0", "+", "gridedge_z_outedge_y_1", "\n", "outedge_z", "=", "gridedge_x_outedge_z_0", "+", "gridedge_x_outedge_z_1", "+", "gridedge_y_outedge_z_0", "+", "gridedge_y_outedge_z_1", "\n", "boundary_x_flag", "=", "(", "outedge_x", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_y_flag", "=", "(", "outedge_y", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_z_flag", "=", "(", "outedge_z", "==", "1", ")", ".", "int", "(", ")", "\n", "\n", "tmp_int", "=", "torch", ".", "zeros", "(", "pred_output_bool", ".", "size", "(", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "pred_output_bool", ".", "device", ")", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "\n", "#create a quad if meet 3 open edges", "\n", "pred_output_bool", "=", "torch", ".", "max", "(", "pred_output_bool", ",", "(", "tmp_int", ">=", "3", ")", ".", "int", "(", ")", ")", "\n", "\n", "#delete a quad if meet 3 open edges", "\n", "pred_output_bool", "=", "torch", ".", "min", "(", "pred_output_bool", ",", "(", "tmp_int", "<", "3", ")", ".", "int", "(", ")", ")", "\n", "\n", "\n", "", "for", "t", "in", "range", "(", "1", ")", ":", "#radical", "\n", "\n", "#open edges", "\n", "        ", "gridedge_x_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "\n", "gridedge_x_outedge_y_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "\n", "gridedge_y_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "gridedge_y_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_z_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "outedge_x", "=", "gridedge_y_outedge_x_0", "+", "gridedge_y_outedge_x_1", "+", "gridedge_z_outedge_x_0", "+", "gridedge_z_outedge_x_1", "\n", "outedge_y", "=", "gridedge_x_outedge_y_0", "+", "gridedge_x_outedge_y_1", "+", "gridedge_z_outedge_y_0", "+", "gridedge_z_outedge_y_1", "\n", "outedge_z", "=", "gridedge_x_outedge_z_0", "+", "gridedge_x_outedge_z_1", "+", "gridedge_y_outedge_z_0", "+", "gridedge_y_outedge_z_1", "\n", "boundary_x_flag", "=", "(", "outedge_x", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_y_flag", "=", "(", "outedge_y", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_z_flag", "=", "(", "outedge_z", "==", "1", ")", ".", "int", "(", ")", "\n", "\n", "tmp_int", "=", "torch", ".", "zeros", "(", "pred_output_bool", ".", "size", "(", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "pred_output_bool", ".", "device", ")", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "\n", "#create a quad if meet 2 open edges, only if it helps close a hole, see below code", "\n", "pred_output_bool_backup", "=", "pred_output_bool", "\n", "pred_output_bool", "=", "torch", ".", "max", "(", "pred_output_bool", ",", "(", "tmp_int", ">=", "2", ")", ".", "int", "(", ")", ")", "\n", "\n", "#open edges", "\n", "gridedge_x_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "\n", "gridedge_x_outedge_y_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "\n", "gridedge_x_outedge_z_1", "=", "pred_output_bool", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "\n", "gridedge_y_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "gridedge_y_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_y_outedge_z_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "gridedge_z_outedge_x_0", "=", "pred_output_bool", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_x_1", "=", "pred_output_bool", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_0", "=", "pred_output_bool", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "gridedge_z_outedge_y_1", "=", "pred_output_bool", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "outedge_x", "=", "gridedge_y_outedge_x_0", "+", "gridedge_y_outedge_x_1", "+", "gridedge_z_outedge_x_0", "+", "gridedge_z_outedge_x_1", "\n", "outedge_y", "=", "gridedge_x_outedge_y_0", "+", "gridedge_x_outedge_y_1", "+", "gridedge_z_outedge_y_0", "+", "gridedge_z_outedge_y_1", "\n", "outedge_z", "=", "gridedge_x_outedge_z_0", "+", "gridedge_x_outedge_z_1", "+", "gridedge_y_outedge_z_0", "+", "gridedge_y_outedge_z_1", "\n", "boundary_x_flag", "=", "(", "outedge_x", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_y_flag", "=", "(", "outedge_y", "==", "1", ")", ".", "int", "(", ")", "\n", "boundary_z_flag", "=", "(", "outedge_z", "==", "1", ")", ".", "int", "(", ")", "\n", "\n", "tmp_int", "=", "torch", ".", "zeros", "(", "pred_output_bool", ".", "size", "(", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "pred_output_bool", ".", "device", ")", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", "1", ":", ",", "1", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", ",", "1", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_x_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", "1", ":", ",", "0", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "+=", "boundary_y_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", "1", ":", ",", ":", ",", "0", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "tmp_int", "[", "1", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "+=", "boundary_z_flag", "\n", "\n", "pred_output_bool", "=", "torch", ".", "min", "(", "pred_output_bool", ",", "(", "tmp_int", "<", "2", ")", ".", "int", "(", ")", ")", "\n", "pred_output_bool", "=", "torch", ".", "max", "(", "pred_output_bool", ",", "pred_output_bool_backup", ")", "\n", "\n", "", "return", "pred_output_bool", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.ABC_grid_hdf5.__init__": [[11, 67], ["open", "open.close", "print", "print", "exit", "name.strip", "print", "print", "len", "open.readlines", "len", "len", "temp_hdf5_names.append", "temp_hdf5_gridsizes.append", "int", "int", "h5py.File", "numpy.any", "temp_hdf5_names.append", "temp_hdf5_gridsizes.append", "len", "len", "temp_hdf5_names.append", "temp_hdf5_gridsizes.append", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "output_grid_size", ",", "receptive_padding", ",", "input_type", ",", "train", ",", "out_bool", ",", "out_float", ",", "is_undc", ",", "input_only", "=", "False", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "output_grid_size", "=", "output_grid_size", "\n", "self", ".", "receptive_padding", "=", "receptive_padding", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "input_type", "=", "input_type", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "self", ".", "is_undc", "=", "is_undc", "\n", "self", ".", "input_only", "=", "input_only", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", "and", "self", ".", "train", ":", "\n", "            ", "print", "(", "\"ERROR: out_bool and out_float cannot both be activated in training\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "#self.hdf5_names = os.listdir(self.data_dir)", "\n", "#self.hdf5_names = [name[:-5] for name in self.hdf5_names if name[-5:]==\".hdf5\"]", "\n", "#self.hdf5_names = sorted(self.hdf5_names)", "\n", "\n", "", "fin", "=", "open", "(", "\"abc_obj_list.txt\"", ",", "'r'", ")", "\n", "self", ".", "hdf5_names", "=", "[", "name", ".", "strip", "(", ")", "for", "name", "in", "fin", ".", "readlines", "(", ")", "]", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", ":", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", "]", "\n", "print", "(", "\"Total#\"", ",", "\"train\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "hdf5_names", "=", "self", ".", "hdf5_names", "[", "int", "(", "len", "(", "self", ".", "hdf5_names", ")", "*", "0.8", ")", ":", "]", "\n", "print", "(", "\"Total#\"", ",", "\"test\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n", "#separate 32 and 64", "\n", "#remove empty", "\n", "", "temp_hdf5_names", "=", "[", "]", "\n", "temp_hdf5_gridsizes", "=", "[", "]", "\n", "if", "self", ".", "train", ":", "\n", "            ", "if", "(", "not", "self", ".", "is_undc", ")", "and", "self", ".", "out_float", ":", "\n", "                ", "for", "name", "in", "self", ".", "hdf5_names", ":", "\n", "                    ", "hdf5_file", "=", "h5py", ".", "File", "(", "self", ".", "data_dir", "+", "\"/\"", "+", "name", "+", "\".hdf5\"", ",", "'r'", ")", "\n", "for", "grid_size", "in", "[", "32", ",", "64", "]", ":", "\n", "                        ", "float_grid", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", "\n", "if", "np", ".", "any", "(", "float_grid", ">=", "0", ")", ":", "\n", "                            ", "temp_hdf5_names", ".", "append", "(", "name", ")", "\n", "temp_hdf5_gridsizes", ".", "append", "(", "grid_size", ")", "\n", "", "", "", "", "else", ":", "\n", "                ", "for", "name", "in", "self", ".", "hdf5_names", ":", "\n", "                    ", "for", "grid_size", "in", "[", "32", ",", "64", "]", ":", "\n", "                        ", "temp_hdf5_names", ".", "append", "(", "name", ")", "\n", "temp_hdf5_gridsizes", ".", "append", "(", "grid_size", ")", "\n", "", "", "", "", "else", ":", "\n", "            ", "for", "name", "in", "self", ".", "hdf5_names", ":", "\n", "                ", "temp_hdf5_names", ".", "append", "(", "name", ")", "\n", "temp_hdf5_gridsizes", ".", "append", "(", "self", ".", "output_grid_size", ")", "\n", "\n", "", "", "self", ".", "hdf5_names", "=", "temp_hdf5_names", "\n", "self", ".", "hdf5_gridsizes", "=", "temp_hdf5_gridsizes", "\n", "print", "(", "\"Non-trivial Total#\"", ",", "len", "(", "self", ".", "hdf5_names", ")", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.ABC_grid_hdf5.__len__": [[68, 70], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "hdf5_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.ABC_grid_hdf5.__getitem__": [[71, 253], ["numpy.expand_dims().astype", "numpy.clip", "numpy.abs", "numpy.transpose().astype", "numpy.zeros", "numpy.transpose", "numpy.max", "range", "numpy.max", "range", "numpy.max", "range", "utils.read_data_input_only", "utils.read_data", "numpy.expand_dims", "numpy.full", "numpy.full", "utils.read_and_augment_data_undc", "utils.read_and_augment_data_ndc", "numpy.transpose", "numpy.zeros", "numpy.max", "numpy.full", "numpy.full", "utils.read_and_augment_data_undc", "utils.read_and_augment_data_ndc", "numpy.max", "numpy.maximum"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data_input_only", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_undc", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_ndc", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_undc", "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_ndc"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "hdf5_dir", "=", "self", ".", "data_dir", "+", "\"/\"", "+", "self", ".", "hdf5_names", "[", "index", "]", "+", "\".hdf5\"", "\n", "grid_size", "=", "self", ".", "hdf5_gridsizes", "[", "index", "]", "\n", "\n", "if", "self", ".", "train", ":", "\n", "            ", "if", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "                ", "if", "self", ".", "is_undc", ":", "\n", "                    ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_and_augment_data_undc", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "False", ")", "\n", "", "else", ":", "\n", "                    ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "False", ")", "\n", "", "", "elif", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "                ", "if", "self", ".", "is_undc", ":", "\n", "                    ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_and_augment_data_undc", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", "\n", "", "else", ":", "\n", "                    ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", "\n", "", "", "", "else", ":", "\n", "            ", "if", "self", ".", "input_only", ":", "\n", "                ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "self", ".", "is_undc", ")", "\n", "", "else", ":", "\n", "                ", "gt_output_bool_", ",", "gt_output_float_", ",", "gt_input_", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "self", ".", "input_type", ",", "self", ".", "out_bool", ",", "self", ".", "out_float", ",", "self", ".", "is_undc", ")", "\n", "\n", "", "", "if", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "            ", "gt_input_", "=", "np", ".", "abs", "(", "gt_input_", ")", "\n", "\n", "\n", "", "if", "self", ".", "out_bool", ":", "\n", "            ", "gt_output_bool_", "=", "np", ".", "transpose", "(", "gt_output_bool_", ",", "[", "3", ",", "0", ",", "1", ",", "2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt_output_bool_mask_", "=", "np", ".", "zeros", "(", "gt_output_bool_", ".", "shape", ",", "np", ".", "float32", ")", "\n", "\n", "if", "self", ".", "is_undc", ":", "\n", "                ", "if", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "                    ", "tmp_mask", "=", "(", "(", "gt_input_", ">", "-", "1", ")", "&", "(", "gt_input_", "<", "1", ")", ")", "\n", "gt_output_bool_mask_", "[", "0", ",", ":", "-", "1", ",", ":", ",", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", ":", "]", "\n", "gt_output_bool_mask_", "[", "1", ",", ":", ",", ":", "-", "1", ",", ":", "]", "=", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", ":", "]", "\n", "gt_output_bool_mask_", "[", "2", ",", ":", ",", ":", ",", ":", "-", "1", "]", "=", "tmp_mask", "[", ":", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", ":", ",", "1", ":", "]", "\n", "", "elif", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "                    ", "tmp_mask", "=", "(", "gt_input_", "!=", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "gt_output_bool_mask_", "[", "0", ",", ":", ",", "1", ":", ",", "1", ":", "]", "=", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", "1", ":", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", "1", ":", "]", "\n", "gt_output_bool_mask_", "[", "1", ",", "1", ":", ",", ":", ",", "1", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", "1", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", "1", ":", "]", "\n", "gt_output_bool_mask_", "[", "2", ",", "1", ":", ",", "1", ":", ",", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", ":", "-", "1", ",", "1", ":", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", "1", ":", ",", ":", "]", "\n", "", "", "else", ":", "\n", "                ", "if", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "                    ", "tmp_mask", "=", "np", ".", "zeros", "(", "[", "grid_size", "-", "1", ",", "grid_size", "-", "1", ",", "grid_size", "-", "1", "]", ",", "np", ".", "uint8", ")", "\n", "gt_input_pos", "=", "(", "gt_input_", "!=", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "gt_input_neg", "=", "(", "gt_input_", "==", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "for", "i", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                        ", "for", "j", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                            ", "for", "k", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                                ", "tmp_mask", "=", "tmp_mask", "|", "gt_input_neg", "[", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", "\n", "", "", "", "tmp_mask", "=", "tmp_mask", "&", "gt_input_pos", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "for", "i", "in", "[", "0", ",", "1", "]", ":", "\n", "                        ", "for", "j", "in", "[", "0", ",", "1", "]", ":", "\n", "                            ", "for", "k", "in", "[", "0", ",", "1", "]", ":", "\n", "                                ", "gt_output_bool_mask_", "[", "0", ",", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", "=", "np", ".", "maximum", "(", "gt_output_bool_mask_", "[", "0", ",", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", ",", "tmp_mask", ")", "\n", "\n", "", "", "", "", "", "", "if", "self", ".", "out_float", ":", "\n", "            ", "gt_output_float_", "=", "np", ".", "transpose", "(", "gt_output_float_", ",", "[", "3", ",", "0", ",", "1", ",", "2", "]", ")", "\n", "gt_output_float_mask_", "=", "(", "gt_output_float_", ">=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "", "gt_input_", "=", "np", ".", "expand_dims", "(", "gt_input_", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "#crop to save space & time", "\n", "#get bounding box", "\n", "if", "self", ".", "train", ":", "\n", "            ", "if", "not", "self", ".", "out_float", ":", "\n", "                ", "valid_flag", "=", "gt_output_bool_mask_", "[", "0", "]", "\n", "", "elif", "not", "self", ".", "out_bool", ":", "\n", "                ", "valid_flag", "=", "np", ".", "max", "(", "gt_output_float_mask_", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "valid_flag", "=", "gt_output_bool_mask_", "[", "0", "]", "|", "np", ".", "max", "(", "gt_output_float_mask_", ",", "axis", "=", "0", ")", "\n", "\n", "#x", "\n", "", "ray", "=", "np", ".", "max", "(", "valid_flag", ",", "(", "1", ",", "2", ")", ")", "\n", "xmin", "=", "-", "1", "\n", "xmax", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "grid_size", "+", "1", ")", ":", "\n", "                ", "if", "ray", "[", "i", "]", ">", "0", ":", "\n", "                    ", "if", "xmin", "==", "-", "1", ":", "\n", "                        ", "xmin", "=", "i", "\n", "", "xmax", "=", "i", "\n", "#y", "\n", "", "", "ray", "=", "np", ".", "max", "(", "valid_flag", ",", "(", "0", ",", "2", ")", ")", "\n", "ymin", "=", "-", "1", "\n", "ymax", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "grid_size", "+", "1", ")", ":", "\n", "                ", "if", "ray", "[", "i", "]", ">", "0", ":", "\n", "                    ", "if", "ymin", "==", "-", "1", ":", "\n", "                        ", "ymin", "=", "i", "\n", "", "ymax", "=", "i", "\n", "#z", "\n", "", "", "ray", "=", "np", ".", "max", "(", "valid_flag", ",", "(", "0", ",", "1", ")", ")", "\n", "zmin", "=", "-", "1", "\n", "zmax", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "grid_size", "+", "1", ")", ":", "\n", "                ", "if", "ray", "[", "i", "]", ">", "0", ":", "\n", "                    ", "if", "zmin", "==", "-", "1", ":", "\n", "                        ", "zmin", "=", "i", "\n", "", "zmax", "=", "i", "\n", "\n", "", "", "xmax", "+=", "1", "\n", "ymax", "+=", "1", "\n", "zmax", "+=", "1", "\n", "\n", "", "else", ":", "\n", "            ", "xmin", "=", "0", "\n", "xmax", "=", "grid_size", "+", "1", "\n", "ymin", "=", "0", "\n", "ymax", "=", "grid_size", "+", "1", "\n", "zmin", "=", "0", "\n", "zmax", "=", "grid_size", "+", "1", "\n", "\n", "", "if", "self", ".", "out_bool", ":", "\n", "            ", "gt_output_bool", "=", "gt_output_bool_", "[", ":", ",", "xmin", ":", "xmax", ",", "ymin", ":", "ymax", ",", "zmin", ":", "zmax", "]", "\n", "gt_output_bool_mask", "=", "gt_output_bool_mask_", "[", ":", ",", "xmin", ":", "xmax", ",", "ymin", ":", "ymax", ",", "zmin", ":", "zmax", "]", "\n", "", "if", "self", ".", "out_float", ":", "\n", "            ", "gt_output_float", "=", "gt_output_float_", "[", ":", ",", "xmin", ":", "xmax", ",", "ymin", ":", "ymax", ",", "zmin", ":", "zmax", "]", "\n", "gt_output_float_mask", "=", "gt_output_float_mask_", "[", ":", ",", "xmin", ":", "xmax", ",", "ymin", ":", "ymax", ",", "zmin", ":", "zmax", "]", "\n", "\n", "", "xmin", "=", "xmin", "-", "self", ".", "receptive_padding", "\n", "xmax", "=", "xmax", "+", "self", ".", "receptive_padding", "\n", "ymin", "=", "ymin", "-", "self", ".", "receptive_padding", "\n", "ymax", "=", "ymax", "+", "self", ".", "receptive_padding", "\n", "zmin", "=", "zmin", "-", "self", ".", "receptive_padding", "\n", "zmax", "=", "zmax", "+", "self", ".", "receptive_padding", "\n", "\n", "xmin_pad", "=", "0", "\n", "xmax_pad", "=", "xmax", "-", "xmin", "\n", "ymin_pad", "=", "0", "\n", "ymax_pad", "=", "ymax", "-", "ymin", "\n", "zmin_pad", "=", "0", "\n", "zmax_pad", "=", "zmax", "-", "zmin", "\n", "if", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "            ", "if", "gt_input_", "[", "0", ",", "0", ",", "0", ",", "0", "]", ">", "0", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "xmax_pad", ",", "ymax_pad", ",", "zmax_pad", "]", ",", "10", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "xmax_pad", ",", "ymax_pad", ",", "zmax_pad", "]", ",", "-", "10", ",", "np", ".", "float32", ")", "\n", "", "", "elif", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "if", "gt_input_", "[", "0", ",", "0", ",", "0", ",", "0", "]", ">", "0", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "xmax_pad", ",", "ymax_pad", ",", "zmax_pad", "]", ",", "1", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "xmax_pad", ",", "ymax_pad", ",", "zmax_pad", "]", ",", "0", ",", "np", ".", "float32", ")", "\n", "\n", "", "", "if", "xmin", "<", "0", ":", "\n", "            ", "xmin_pad", "-=", "xmin", "\n", "xmin", "=", "0", "\n", "", "if", "xmax", ">", "grid_size", "+", "1", ":", "\n", "            ", "xmax_pad", "+=", "(", "grid_size", "+", "1", "-", "xmax", ")", "\n", "xmax", "=", "grid_size", "+", "1", "\n", "", "if", "ymin", "<", "0", ":", "\n", "            ", "ymin_pad", "-=", "ymin", "\n", "ymin", "=", "0", "\n", "", "if", "ymax", ">", "grid_size", "+", "1", ":", "\n", "            ", "ymax_pad", "+=", "(", "grid_size", "+", "1", "-", "ymax", ")", "\n", "ymax", "=", "grid_size", "+", "1", "\n", "", "if", "zmin", "<", "0", ":", "\n", "            ", "zmin_pad", "-=", "zmin", "\n", "zmin", "=", "0", "\n", "", "if", "zmax", ">", "grid_size", "+", "1", ":", "\n", "            ", "zmax_pad", "+=", "(", "grid_size", "+", "1", "-", "zmax", ")", "\n", "zmax", "=", "grid_size", "+", "1", "\n", "\n", "", "gt_input", "[", ":", ",", "xmin_pad", ":", "xmax_pad", ",", "ymin_pad", ":", "ymax_pad", ",", "zmin_pad", ":", "zmax_pad", "]", "=", "gt_input_", "[", ":", ",", "xmin", ":", "xmax", ",", "ymin", ":", "ymax", ",", "zmin", ":", "zmax", "]", "\n", "\n", "\n", "#the current code assumes that each cell in the input is a unit cube", "\n", "#clip to ignore far-away cells", "\n", "gt_input", "=", "np", ".", "clip", "(", "gt_input", ",", "-", "2", ",", "2", ")", "\n", "\n", "# #if you want to relax the unit-cube assumption, comment out the above clipping code, and uncomment the following code", "\n", "# if self.train and self.input_type==\"sdf\":", "\n", "#     if np.random.randint(2)==0:", "\n", "#         gt_input = gt_input * (np.random.random()*2+0.001)", "\n", "#     else:", "\n", "#         gt_input = gt_input * 10**(-np.random.random()*3)", "\n", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "return", "gt_input", ",", "gt_output_bool", ",", "gt_output_bool_mask", ",", "gt_output_float", ",", "gt_output_float_mask", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "return", "gt_input", ",", "gt_output_bool", ",", "gt_output_bool_mask", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "return", "gt_input", ",", "gt_output_float", ",", "gt_output_float_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.single_shape_grid.__init__": [[259, 264], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "receptive_padding", ",", "input_type", ",", "is_undc", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "receptive_padding", "=", "receptive_padding", "\n", "self", ".", "input_type", "=", "input_type", "\n", "self", ".", "is_undc", "=", "is_undc", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.single_shape_grid.__len__": [[265, 267], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.dataset.single_shape_grid.__getitem__": [[268, 370], ["numpy.expand_dims().astype", "numpy.clip", "numpy.zeros", "numpy.zeros", "utils.read_sdf_file_as_3d_array", "print", "exit", "numpy.abs", "numpy.zeros", "numpy.zeros", "numpy.expand_dims", "numpy.full", "numpy.full", "dataset.single_shape_grid.data_dir.split", "h5py.File", "h5py.File.close", "print", "exit", "utils.read_binvox_file_as_3d_array", "print", "exit", "numpy.full", "numpy.full", "dataset.single_shape_grid.data_dir.split", "dataset.single_shape_grid.data_dir.split", "h5py.File", "h5py.File.close", "print", "exit", "dataset.single_shape_grid.data_dir.split", "numpy.maximum", "str", "str"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_sdf_file_as_3d_array", "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_binvox_file_as_3d_array"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "            ", "if", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"sdf\"", ":", "\n", "                ", "LOD_input", "=", "read_sdf_file_as_3d_array", "(", "self", ".", "data_dir", ")", "\n", "", "elif", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"hdf5\"", ":", "\n", "                ", "grid_size", "=", "64", "\n", "hdf5_file", "=", "h5py", ".", "File", "(", "self", ".", "data_dir", ",", "'r'", ")", "\n", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "hdf5_file", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"ERROR: invalid input type - only support sdf or hdf5\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "if", "LOD_input", ".", "shape", "[", "1", "]", "!=", "LOD_input", ".", "shape", "[", "0", "]", "or", "LOD_input", ".", "shape", "[", "2", "]", "!=", "LOD_input", ".", "shape", "[", "0", "]", ":", "\n", "                ", "print", "(", "\"ERROR: the code only supports grids with dimx=dimy=dimz, but the given grid is\"", ",", "LOD_input", ".", "shape", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "grid_size", "=", "LOD_input", ".", "shape", "[", "0", "]", "-", "1", "\n", "gt_input_", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "\n", "if", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "                ", "gt_input_", "=", "np", ".", "abs", "(", "gt_input_", ")", "\n", "\n", "", "", "elif", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "if", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"binvox\"", ":", "\n", "                ", "LOD_input", "=", "read_binvox_file_as_3d_array", "(", "self", ".", "data_dir", ")", "\n", "", "elif", "self", ".", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"hdf5\"", ":", "\n", "                ", "grid_size", "=", "64", "\n", "hdf5_file", "=", "h5py", ".", "File", "(", "self", ".", "data_dir", ",", "'r'", ")", "\n", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "hdf5_file", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"ERROR: invalid input type - only support binvox or hdf5\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "if", "LOD_input", ".", "shape", "[", "1", "]", "!=", "LOD_input", ".", "shape", "[", "0", "]", "or", "LOD_input", ".", "shape", "[", "2", "]", "!=", "LOD_input", ".", "shape", "[", "0", "]", ":", "\n", "                ", "print", "(", "\"ERROR: the code only supports grids with dimx=dimy=dimz, but the given grid is\"", ",", "LOD_input", ".", "shape", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "grid_size", "=", "LOD_input", ".", "shape", "[", "0", "]", "+", "2", "\n", "#add padding", "\n", "gt_input_", "=", "np", ".", "zeros", "(", "[", "grid_size", ",", "grid_size", ",", "grid_size", "]", ",", "np", ".", "uint8", ")", "\n", "gt_input_", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "=", "LOD_input", "\n", "grid_size", "=", "grid_size", "-", "1", "\n", "\n", "\n", "#prepare mask", "\n", "", "if", "self", ".", "is_undc", ":", "\n", "            ", "gt_output_bool_mask_", "=", "np", ".", "zeros", "(", "[", "3", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", "]", ",", "np", ".", "float32", ")", "\n", "if", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "                ", "tmp_mask", "=", "(", "(", "gt_input_", ">", "-", "1", ")", "&", "(", "gt_input_", "<", "1", ")", ")", "\n", "gt_output_bool_mask_", "[", "0", ",", ":", "-", "1", ",", ":", ",", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", ":", "]", "\n", "gt_output_bool_mask_", "[", "1", ",", ":", ",", ":", "-", "1", ",", ":", "]", "=", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", ":", "]", "\n", "gt_output_bool_mask_", "[", "2", ",", ":", ",", ":", ",", ":", "-", "1", "]", "=", "tmp_mask", "[", ":", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", ":", ",", "1", ":", "]", "\n", "", "elif", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "                ", "tmp_mask", "=", "(", "gt_input_", "!=", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "gt_output_bool_mask_", "[", "0", ",", ":", ",", "1", ":", ",", "1", ":", "]", "=", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", ",", ":", "-", "1", ",", "1", ":", "]", "&", "tmp_mask", "[", ":", ",", "1", ":", ",", "1", ":", "]", "\n", "gt_output_bool_mask_", "[", "1", ",", "1", ":", ",", ":", ",", "1", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", ":", "-", "1", "]", "&", "tmp_mask", "[", ":", "-", "1", ",", ":", ",", "1", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", ",", "1", ":", "]", "\n", "gt_output_bool_mask_", "[", "2", ",", "1", ":", ",", "1", ":", ",", ":", "]", "=", "tmp_mask", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", ":", "-", "1", ",", ":", "]", "&", "tmp_mask", "[", ":", "-", "1", ",", "1", ":", ",", ":", "]", "&", "tmp_mask", "[", "1", ":", ",", "1", ":", ",", ":", "]", "\n", "", "", "else", ":", "\n", "            ", "gt_output_bool_mask_", "=", "np", ".", "zeros", "(", "[", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", "]", ",", "np", ".", "float32", ")", "\n", "if", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "                ", "tmp_mask", "=", "np", ".", "zeros", "(", "[", "grid_size", "-", "1", ",", "grid_size", "-", "1", ",", "grid_size", "-", "1", "]", ",", "np", ".", "uint8", ")", "\n", "gt_input_pos", "=", "(", "gt_input_", "!=", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "gt_input_neg", "=", "(", "gt_input_", "==", "gt_input_", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "for", "i", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                    ", "for", "j", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                        ", "for", "k", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                            ", "tmp_mask", "=", "tmp_mask", "|", "gt_input_neg", "[", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", "\n", "", "", "", "tmp_mask", "=", "tmp_mask", "&", "gt_input_pos", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "for", "i", "in", "[", "0", ",", "1", "]", ":", "\n", "                    ", "for", "j", "in", "[", "0", ",", "1", "]", ":", "\n", "                        ", "for", "k", "in", "[", "0", ",", "1", "]", ":", "\n", "                            ", "gt_output_bool_mask_", "[", "0", ",", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", "=", "np", ".", "maximum", "(", "gt_output_bool_mask_", "[", "0", ",", "1", "+", "i", ":", "grid_size", "+", "i", ",", "1", "+", "j", ":", "grid_size", "+", "j", ",", "1", "+", "k", ":", "grid_size", "+", "k", "]", ",", "tmp_mask", ")", "\n", "\n", "", "", "", "", "", "gt_input_", "=", "np", ".", "expand_dims", "(", "gt_input_", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "gt_output_bool_mask", "=", "gt_output_bool_mask_", "\n", "\n", "#receptive field padding", "\n", "padded", "=", "grid_size", "+", "1", "+", "self", ".", "receptive_padding", "*", "2", "\n", "\n", "if", "self", ".", "input_type", "==", "\"sdf\"", "or", "self", ".", "input_type", "==", "\"udf\"", ":", "\n", "            ", "if", "gt_input_", "[", "0", ",", "0", ",", "0", ",", "0", "]", ">", "0", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "padded", ",", "padded", ",", "padded", "]", ",", "10", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "padded", ",", "padded", ",", "padded", "]", ",", "-", "10", ",", "np", ".", "float32", ")", "\n", "", "", "elif", "self", ".", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "if", "gt_input_", "[", "0", ",", "0", ",", "0", ",", "0", "]", ">", "0", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "padded", ",", "padded", ",", "padded", "]", ",", "1", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "gt_input", "=", "np", ".", "full", "(", "[", "1", ",", "padded", ",", "padded", ",", "padded", "]", ",", "0", ",", "np", ".", "float32", ")", "\n", "\n", "", "", "gt_input", "[", ":", ",", "self", ".", "receptive_padding", ":", "-", "self", ".", "receptive_padding", ",", "self", ".", "receptive_padding", ":", "-", "self", ".", "receptive_padding", ",", "self", ".", "receptive_padding", ":", "-", "self", ".", "receptive_padding", "]", "=", "gt_input_", "\n", "\n", "\n", "#the current code assumes that each cell in the input is a unit cube", "\n", "#clip to ignore far-away cells", "\n", "gt_input", "=", "np", ".", "clip", "(", "gt_input", ",", "-", "2", ",", "2", ")", "\n", "\n", "return", "gt_input", ",", "gt_output_bool_mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.czq142857_NDC.None.eval_v_t_count.load_obj": [[16, 46], ["open", "open.readlines", "open.close", "range", "numpy.array", "numpy.array", "len", "lines[].split", "len", "float", "float", "float", "np.array.append", "int", "int", "int", "np.array.append", "len", "print", "exit", "line[].split", "line[].split", "line[].split"], "function", ["None"], ["def", "load_obj", "(", "dire", ")", ":", "\n", "    ", "fin", "=", "open", "(", "dire", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "vertices", "=", "[", "]", "\n", "triangles", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "        ", "line", "=", "lines", "[", "i", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "line", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "x", "=", "float", "(", "line", "[", "1", "]", ")", "\n", "y", "=", "float", "(", "line", "[", "2", "]", ")", "\n", "z", "=", "float", "(", "line", "[", "3", "]", ")", "\n", "vertices", ".", "append", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "", "if", "line", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "if", "len", "(", "line", ")", "!=", "4", ":", "\n", "                ", "print", "(", "\"obj: len(line)!=4\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "x", "=", "int", "(", "line", "[", "1", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "y", "=", "int", "(", "line", "[", "2", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "z", "=", "int", "(", "line", "[", "3", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "triangles", ".", "append", "(", "[", "x", "-", "1", ",", "y", "-", "1", ",", "z", "-", "1", "]", ")", "\n", "\n", "", "", "vertices", "=", "np", ".", "array", "(", "vertices", ",", "np", ".", "float32", ")", "\n", "triangles", "=", "np", ".", "array", "(", "triangles", ",", "np", ".", "int32", ")", "\n", "\n", "return", "vertices", ",", "triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.eval_v_t_count.get_v_t_count": [[48, 63], ["len", "range", "eval_v_t_count.load_obj", "print", "q.put", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.load_obj"], ["", "def", "get_v_t_count", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "gt_obj_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "pred_obj_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "\n", "#load gt", "\n", "#load pred", "\n", "v", ",", "t", "=", "load_obj", "(", "pred_obj_name", ")", "\n", "\n", "print", "(", "idx", ",", "len", "(", "v", ")", ",", "len", "(", "t", ")", ")", "\n", "q", ".", "put", "(", "[", "idx", ",", "len", "(", "v", ")", ",", "len", "(", "t", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.eval_tri_angle.load_obj": [[14, 44], ["open", "open.readlines", "open.close", "range", "numpy.array", "numpy.array", "len", "lines[].split", "len", "float", "float", "float", "np.array.append", "int", "int", "int", "np.array.append", "len", "print", "exit", "line[].split", "line[].split", "line[].split"], "function", ["None"], ["def", "load_obj", "(", "dire", ")", ":", "\n", "    ", "fin", "=", "open", "(", "dire", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "vertices", "=", "[", "]", "\n", "triangles", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "        ", "line", "=", "lines", "[", "i", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "line", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "x", "=", "float", "(", "line", "[", "1", "]", ")", "\n", "y", "=", "float", "(", "line", "[", "2", "]", ")", "\n", "z", "=", "float", "(", "line", "[", "3", "]", ")", "\n", "vertices", ".", "append", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "", "if", "line", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "if", "len", "(", "line", ")", "!=", "4", ":", "\n", "                ", "print", "(", "\"obj: len(line)!=4\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "x", "=", "int", "(", "line", "[", "1", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "y", "=", "int", "(", "line", "[", "2", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "z", "=", "int", "(", "line", "[", "3", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "triangles", ".", "append", "(", "[", "x", "-", "1", ",", "y", "-", "1", ",", "z", "-", "1", "]", ")", "\n", "\n", "", "", "vertices", "=", "np", ".", "array", "(", "vertices", ",", "np", ".", "float32", ")", "\n", "triangles", "=", "np", ".", "array", "(", "triangles", ",", "np", ".", "int32", ")", "\n", "\n", "return", "vertices", ",", "triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.eval_tri_angle.get_v_t_count": [[46, 88], ["len", "range", "eval_tri_angle.load_obj", "numpy.zeros", "range", "print", "q.put", "len", "range", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.arccos"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.load_obj"], ["", "def", "get_v_t_count", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "gt_obj_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "pred_obj_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "\n", "#load gt", "\n", "#load pred", "\n", "v", ",", "t", "=", "load_obj", "(", "pred_obj_name", ")", "\n", "\n", "slot", "=", "np", ".", "zeros", "(", "[", "180", "]", ",", "np", ".", "int32", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "t", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "                ", "v1i", "=", "t", "[", "i", ",", "(", "j", ")", "%", "3", "]", "\n", "v2i", "=", "t", "[", "i", ",", "(", "j", "+", "1", ")", "%", "3", "]", "\n", "v3i", "=", "t", "[", "i", ",", "(", "j", "+", "2", ")", "%", "3", "]", "\n", "\n", "v1", "=", "v", "[", "v1i", "]", "\n", "v2", "=", "v", "[", "v2i", "]", "\n", "v3", "=", "v", "[", "v3i", "]", "\n", "\n", "v12", "=", "v2", "-", "v1", "\n", "v13", "=", "v3", "-", "v1", "\n", "\n", "s_a", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "v12", "*", "v12", ")", "*", "np", ".", "sum", "(", "v13", "*", "v13", ")", ")", "\n", "if", "s_a", "<", "1e-10", ":", "\n", "                    ", "s_a", "=", "1e-10", "\n", "", "cos_a", "=", "np", ".", "sum", "(", "v12", "*", "v13", ")", "/", "s_a", "\n", "if", "cos_a", ">", "1", ":", "cos_a", "=", "1", "\n", "if", "cos_a", "<", "-", "1", ":", "cos_a", "=", "-", "1", "\n", "a", "=", "(", "np", ".", "arccos", "(", "cos_a", ")", "/", "np", ".", "pi", "*", "180", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "if", "a", ">=", "180", ":", "\n", "                    ", "a", "=", "180", "-", "1", "\n", "", "slot", "[", "a", "]", "+=", "1", "\n", "\n", "\n", "", "", "print", "(", "idx", ")", "\n", "q", ".", "put", "(", "[", "idx", ",", "slot", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.resnet_block.__init__": [[7, 12], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ef_dim", ")", ":", "\n", "        ", "super", "(", "resnet_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "ef_dim", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.resnet_block.forward": [[13, 20], ["model.resnet_block.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.resnet_block.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "self", ".", "conv_1", "(", "input", ")", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "output", "=", "self", ".", "conv_2", "(", "output", ")", "\n", "output", "=", "output", "+", "input", "\n", "output", "=", "F", ".", "leaky_relu", "(", "output", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec7_resnet.__init__": [[24, 55], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "model.resnet_block", "model.resnet_block", "model.resnet_block", "model.resnet_block", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", ":", "\n", "        ", "super", "(", "CNN_3d_rec7_resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "64", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "conv_0", "=", "nn", ".", "Conv3d", "(", "1", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_1", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_2", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_3", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_4", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_5", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_6", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_7", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_8", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_4", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "if", "is_undc", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "conv_out_float", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec7_resnet.forward": [[56, 92], ["model.CNN_3d_rec7_resnet.conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7_resnet.res_1", "model.CNN_3d_rec7_resnet.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7_resnet.res_2", "model.CNN_3d_rec7_resnet.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7_resnet.res_3", "model.CNN_3d_rec7_resnet.res_4", "model.CNN_3d_rec7_resnet.res_5", "model.CNN_3d_rec7_resnet.res_6", "model.CNN_3d_rec7_resnet.res_7", "model.CNN_3d_rec7_resnet.res_8", "model.CNN_3d_rec7_resnet.conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7_resnet.conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7_resnet.conv_out_bool", "model.CNN_3d_rec7_resnet.conv_out_float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec7_resnet.conv_out_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec7_resnet.conv_out_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_3", "(", "out", ")", "\n", "out", "=", "self", ".", "res_4", "(", "out", ")", "\n", "out", "=", "self", ".", "res_5", "(", "out", ")", "\n", "out", "=", "self", ".", "res_6", "(", "out", ")", "\n", "out", "=", "self", ".", "res_7", "(", "out", ")", "\n", "out", "=", "self", ".", "res_8", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15_resnet.__init__": [[96, 137], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "model.resnet_block", "model.resnet_block", "model.resnet_block", "model.resnet_block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", ":", "\n", "        ", "super", "(", "CNN_3d_rec15_resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "64", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "conv_0", "=", "nn", ".", "Conv3d", "(", "1", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_1", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_2", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_3", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_4", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_4", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_5", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_5", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_6", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "conv_6", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "res_7", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_8", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_9", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "self", ".", "res_10", "=", "resnet_block", "(", "self", ".", "ef_dim", ")", "\n", "\n", "self", ".", "conv_7", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_8", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "if", "is_undc", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "conv_out_float", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15_resnet.forward": [[138, 188], ["model.CNN_3d_rec15_resnet.conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_1", "model.CNN_3d_rec15_resnet.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_2", "model.CNN_3d_rec15_resnet.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_3", "model.CNN_3d_rec15_resnet.conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_4", "model.CNN_3d_rec15_resnet.conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_5", "model.CNN_3d_rec15_resnet.conv_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_6", "model.CNN_3d_rec15_resnet.conv_6", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.res_7", "model.CNN_3d_rec15_resnet.res_8", "model.CNN_3d_rec15_resnet.res_9", "model.CNN_3d_rec15_resnet.res_10", "model.CNN_3d_rec15_resnet.conv_7", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.conv_8", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15_resnet.conv_out_bool", "model.CNN_3d_rec15_resnet.conv_out_float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec15_resnet.conv_out_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec15_resnet.conv_out_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_3", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_4", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_5", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_6", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_6", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "res_7", "(", "out", ")", "\n", "out", "=", "self", ".", "res_8", "(", "out", ")", "\n", "out", "=", "self", ".", "res_9", "(", "out", ")", "\n", "out", "=", "self", ".", "res_10", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_7", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "conv_8", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec7.__init__": [[194, 213], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", ":", "\n", "        ", "super", "(", "CNN_3d_rec7", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "64", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "conv_0", "=", "nn", ".", "Conv3d", "(", "1", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_4", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "if", "is_undc", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "conv_out_float", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec7.forward": [[214, 242], ["model.CNN_3d_rec7.conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7.conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7.conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec7.conv_out_bool", "model.CNN_3d_rec7.conv_out_float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec7.conv_out_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec7.conv_out_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__": [[246, 269], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", ":", "\n", "        ", "super", "(", "CNN_3d_rec15", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ef_dim", "=", "32", "\n", "self", ".", "out_bool", "=", "out_bool", "\n", "self", ".", "out_float", "=", "out_float", "\n", "\n", "self", ".", "conv_0", "=", "nn", ".", "Conv3d", "(", "1", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_4", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_5", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_6", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_7", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_8", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "self", ".", "ef_dim", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", ":", "\n", "            ", "if", "is_undc", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_out_bool", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "", "if", "self", ".", "out_float", ":", "\n", "            ", "self", ".", "conv_out_float", "=", "nn", ".", "Conv3d", "(", "self", ".", "ef_dim", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.model.CNN_3d_rec15.forward": [[270, 310], ["model.CNN_3d_rec15.conv_0", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_6", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_7", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_8", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.CNN_3d_rec15.conv_out_bool", "model.CNN_3d_rec15.conv_out_float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec15.conv_out_bool", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.CNN_3d_rec15.conv_out_float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv_0", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_1", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_2", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_6", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_7", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "conv_8", "(", "out", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "negative_slope", "=", "0.01", ",", "inplace", "=", "True", ")", "\n", "\n", "if", "self", ".", "out_bool", "and", "self", ".", "out_float", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", ",", "out_float", "\n", "", "elif", "self", ".", "out_bool", ":", "\n", "            ", "out_bool", "=", "self", ".", "conv_out_bool", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out_bool", ")", "\n", "", "elif", "self", ".", "out_float", ":", "\n", "            ", "out_float", "=", "self", ".", "conv_out_float", "(", "out", ")", "\n", "return", "out_float", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.eval_100000.get_cd_nc_f1_ecd_ef1": [[20, 137], ["len", "range", "trimesh.load", "trimesh.load.sample", "trimesh.load", "trimesh.load.sample", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.mean", "numpy.square", "numpy.mean", "numpy.abs", "numpy.mean", "range", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.mean", "numpy.square", "numpy.mean", "numpy.abs", "numpy.mean", "range", "sklearn.neighbors.KDTree.query_radius", "numpy.zeros", "range", "numpy.ascontiguousarray", "sklearn.neighbors.KDTree.query_radius", "numpy.zeros", "range", "numpy.ascontiguousarray", "print", "q.put", "numpy.sum", "float", "numpy.sum", "gt2pred_na.append", "numpy.sum", "float", "numpy.sum", "pred2gt_na.append", "len", "len", "len", "numpy.zeros", "len", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.mean", "numpy.square", "numpy.mean", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.mean", "numpy.square", "numpy.mean", "len", "numpy.squeeze", "numpy.mean", "len", "numpy.squeeze", "numpy.mean", "len", "len", "numpy.abs", "numpy.any", "len", "len", "numpy.abs", "numpy.any", "numpy.sum", "float", "numpy.sum", "float", "numpy.sum", "numpy.sum", "len", "len", "numpy.cos", "numpy.cos"], "function", ["None"], ["def", "get_cd_nc_f1_ecd_ef1", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "gt_obj_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "pred_obj_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "\n", "#load gt", "\n", "gt_mesh", "=", "trimesh", ".", "load", "(", "gt_obj_name", ")", "\n", "gt_points", ",", "gt_indexs", "=", "gt_mesh", ".", "sample", "(", "sample_num", ",", "return_index", "=", "True", ")", "\n", "gt_normals", "=", "gt_mesh", ".", "face_normals", "[", "gt_indexs", "]", "\n", "#load pred", "\n", "pred_mesh", "=", "trimesh", ".", "load", "(", "pred_obj_name", ")", "\n", "pred_points", ",", "pred_indexs", "=", "pred_mesh", ".", "sample", "(", "sample_num", ",", "return_index", "=", "True", ")", "\n", "pred_points", "=", "pred_points", "/", "64", "-", "0.5", "\n", "pred_normals", "=", "pred_mesh", ".", "face_normals", "[", "pred_indexs", "]", "\n", "\n", "#cd and nc and f1", "\n", "\n", "# from gt to pred", "\n", "pred_tree", "=", "KDTree", "(", "pred_points", ")", "\n", "dist", ",", "inds", "=", "pred_tree", ".", "query", "(", "gt_points", ",", "k", "=", "1", ")", "\n", "recall", "=", "np", ".", "sum", "(", "dist", "<", "f1_threshold", ")", "/", "float", "(", "len", "(", "dist", ")", ")", "\n", "gt2pred_mean_cd1", "=", "np", ".", "mean", "(", "dist", ")", "\n", "dist", "=", "np", ".", "square", "(", "dist", ")", "\n", "gt2pred_mean_cd2", "=", "np", ".", "mean", "(", "dist", ")", "\n", "neighbor_normals", "=", "pred_normals", "[", "np", ".", "squeeze", "(", "inds", ",", "axis", "=", "1", ")", "]", "\n", "dotproduct", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "gt_normals", "*", "neighbor_normals", ",", "axis", "=", "1", ")", ")", "\n", "gt2pred_nc", "=", "np", ".", "mean", "(", "dotproduct", ")", "\n", "\n", "gt2pred_na", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "90", ")", ":", "\n", "            ", "gt2pred_na", ".", "append", "(", "np", ".", "mean", "(", "(", "dotproduct", "<", "np", ".", "cos", "(", "i", "/", "180.0", "*", "np", ".", "pi", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ")", "\n", "\n", "# from pred to gt", "\n", "", "gt_tree", "=", "KDTree", "(", "gt_points", ")", "\n", "dist", ",", "inds", "=", "gt_tree", ".", "query", "(", "pred_points", ",", "k", "=", "1", ")", "\n", "precision", "=", "np", ".", "sum", "(", "dist", "<", "f1_threshold", ")", "/", "float", "(", "len", "(", "dist", ")", ")", "\n", "pred2gt_mean_cd1", "=", "np", ".", "mean", "(", "dist", ")", "\n", "dist", "=", "np", ".", "square", "(", "dist", ")", "\n", "pred2gt_mean_cd2", "=", "np", ".", "mean", "(", "dist", ")", "\n", "neighbor_normals", "=", "gt_normals", "[", "np", ".", "squeeze", "(", "inds", ",", "axis", "=", "1", ")", "]", "\n", "dotproduct", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "pred_normals", "*", "neighbor_normals", ",", "axis", "=", "1", ")", ")", "\n", "pred2gt_nc", "=", "np", ".", "mean", "(", "dotproduct", ")", "\n", "\n", "pred2gt_na", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "90", ")", ":", "\n", "            ", "pred2gt_na", ".", "append", "(", "np", ".", "mean", "(", "(", "dotproduct", "<", "np", ".", "cos", "(", "i", "/", "180.0", "*", "np", ".", "pi", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ")", "\n", "\n", "", "cd1", "=", "gt2pred_mean_cd1", "+", "pred2gt_mean_cd1", "\n", "cd2", "=", "gt2pred_mean_cd2", "+", "pred2gt_mean_cd2", "\n", "nc", "=", "(", "gt2pred_nc", "+", "pred2gt_nc", ")", "/", "2", "\n", "if", "recall", "+", "precision", ">", "0", ":", "f1", "=", "2", "*", "recall", "*", "precision", "/", "(", "recall", "+", "precision", ")", "\n", "else", ":", "f1", "=", "0", "\n", "\n", "\n", "#sample gt edge points", "\n", "indslist", "=", "gt_tree", ".", "query_radius", "(", "gt_points", ",", "ef1_radius", ")", "\n", "flags", "=", "np", ".", "zeros", "(", "[", "len", "(", "gt_points", ")", "]", ",", "np", ".", "bool", ")", "\n", "for", "p", "in", "range", "(", "len", "(", "gt_points", ")", ")", ":", "\n", "            ", "inds", "=", "indslist", "[", "p", "]", "\n", "if", "len", "(", "inds", ")", ">", "0", ":", "\n", "                ", "this_normals", "=", "gt_normals", "[", "p", ":", "p", "+", "1", "]", "\n", "neighbor_normals", "=", "gt_normals", "[", "inds", "]", "\n", "dotproduct", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "this_normals", "*", "neighbor_normals", ",", "axis", "=", "1", ")", ")", "\n", "if", "np", ".", "any", "(", "dotproduct", "<", "ef1_dotproduct_threshold", ")", ":", "\n", "                    ", "flags", "[", "p", "]", "=", "True", "\n", "", "", "", "gt_edge_points", "=", "np", ".", "ascontiguousarray", "(", "gt_points", "[", "flags", "]", ")", "\n", "\n", "#sample pred edge points", "\n", "indslist", "=", "pred_tree", ".", "query_radius", "(", "pred_points", ",", "ef1_radius", ")", "\n", "flags", "=", "np", ".", "zeros", "(", "[", "len", "(", "pred_points", ")", "]", ",", "np", ".", "bool", ")", "\n", "for", "p", "in", "range", "(", "len", "(", "pred_points", ")", ")", ":", "\n", "            ", "inds", "=", "indslist", "[", "p", "]", "\n", "if", "len", "(", "inds", ")", ">", "0", ":", "\n", "                ", "this_normals", "=", "pred_normals", "[", "p", ":", "p", "+", "1", "]", "\n", "neighbor_normals", "=", "pred_normals", "[", "inds", "]", "\n", "dotproduct", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "this_normals", "*", "neighbor_normals", ",", "axis", "=", "1", ")", ")", "\n", "if", "np", ".", "any", "(", "dotproduct", "<", "ef1_dotproduct_threshold", ")", ":", "\n", "                    ", "flags", "[", "p", "]", "=", "True", "\n", "", "", "", "pred_edge_points", "=", "np", ".", "ascontiguousarray", "(", "pred_points", "[", "flags", "]", ")", "\n", "\n", "#write_ply_point(\"temp/\"+str(idx)+\"_gt.ply\", gt_edge_points)", "\n", "#write_ply_point(\"temp/\"+str(idx)+\"_pred.ply\", pred_edge_points)", "\n", "\n", "#ecd ef1", "\n", "\n", "if", "len", "(", "pred_edge_points", ")", "==", "0", ":", "pred_edge_points", "=", "np", ".", "zeros", "(", "[", "486", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "if", "len", "(", "gt_edge_points", ")", "==", "0", ":", "\n", "            ", "ecd", "=", "0", "\n", "ef1", "=", "1", "\n", "", "else", ":", "\n", "# from gt to pred", "\n", "            ", "tree", "=", "KDTree", "(", "pred_edge_points", ")", "\n", "dist", ",", "inds", "=", "tree", ".", "query", "(", "gt_edge_points", ",", "k", "=", "1", ")", "\n", "erecall", "=", "np", ".", "sum", "(", "dist", "<", "ef1_threshold", ")", "/", "float", "(", "len", "(", "dist", ")", ")", "\n", "gt2pred_mean_ecd1", "=", "np", ".", "mean", "(", "dist", ")", "\n", "dist", "=", "np", ".", "square", "(", "dist", ")", "\n", "gt2pred_mean_ecd2", "=", "np", ".", "mean", "(", "dist", ")", "\n", "\n", "# from pred to gt", "\n", "tree", "=", "KDTree", "(", "gt_edge_points", ")", "\n", "dist", ",", "inds", "=", "tree", ".", "query", "(", "pred_edge_points", ",", "k", "=", "1", ")", "\n", "eprecision", "=", "np", ".", "sum", "(", "dist", "<", "ef1_threshold", ")", "/", "float", "(", "len", "(", "dist", ")", ")", "\n", "pred2gt_mean_ecd1", "=", "np", ".", "mean", "(", "dist", ")", "\n", "dist", "=", "np", ".", "square", "(", "dist", ")", "\n", "pred2gt_mean_ecd2", "=", "np", ".", "mean", "(", "dist", ")", "\n", "\n", "ecd1", "=", "gt2pred_mean_ecd1", "+", "pred2gt_mean_ecd1", "\n", "ecd2", "=", "gt2pred_mean_ecd2", "+", "pred2gt_mean_ecd2", "\n", "if", "erecall", "+", "eprecision", ">", "0", ":", "ef1", "=", "2", "*", "erecall", "*", "eprecision", "/", "(", "erecall", "+", "eprecision", ")", "\n", "else", ":", "ef1", "=", "0", "\n", "\n", "", "print", "(", "idx", ",", "cd1", ",", "cd2", ",", "nc", ",", "f1", ",", "ecd1", ",", "ecd2", ",", "ef1", ")", "\n", "q", ".", "put", "(", "[", "idx", ",", "gt2pred_mean_cd1", ",", "gt2pred_mean_cd2", ",", "pred2gt_mean_cd1", ",", "pred2gt_mean_cd2", ",", "cd1", ",", "cd2", ",", "gt2pred_nc", ",", "gt2pred_na", ",", "pred2gt_nc", ",", "pred2gt_na", ",", "nc", ",", "recall", ",", "precision", ",", "f1", ",", "gt2pred_mean_ecd1", ",", "gt2pred_mean_ecd2", ",", "pred2gt_mean_ecd1", ",", "pred2gt_mean_ecd2", ",", "ecd1", ",", "ecd2", ",", "erecall", ",", "eprecision", ",", "ef1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_sdf_file_as_3d_array": [[6, 17], ["open", "open.readline().strip", "list", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "fp.readline.startswith", "IOError", "map", "open.read", "open.readline", "open.readline().strip().split", "open.readline().strip", "open.readline"], "function", ["None"], ["def", "read_sdf_file_as_3d_array", "(", "name", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#sdf'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a sdf file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_binvox_file_as_3d_array": [[21, 50], ["open", "open.readline().strip", "list", "list", "open.readline", "numpy.frombuffer", "numpy.repeat().astype", "np.transpose.reshape", "numpy.ascontiguousarray", "open.close", "fp.readline.startswith", "IOError", "map", "map", "list", "open.read", "numpy.transpose", "open.readline", "map", "numpy.repeat", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline", "open.readline"], "function", ["None"], ["", "def", "read_binvox_file_as_3d_array", "(", "name", ",", "fix_coords", "=", "True", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#binvox'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a binvox file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "translate", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "scale", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "[", "0", "]", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "raw_data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "# if just using reshape() on the raw data:", "\n", "# indexing the array as array[i,j,k], the indices map into the", "\n", "# coords as:", "\n", "# i -> x", "\n", "# j -> z", "\n", "# k -> y", "\n", "# if fix_coords is true, then data is rearranged so that", "\n", "# mapping is", "\n", "# i -> x", "\n", "# j -> y", "\n", "# k -> z", "\n", "values", ",", "counts", "=", "raw_data", "[", ":", ":", "2", "]", ",", "raw_data", "[", "1", ":", ":", "2", "]", "\n", "data", "=", "np", ".", "repeat", "(", "values", ",", "counts", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "if", "fix_coords", ":", "\n", "        ", "data", "=", "np", ".", "transpose", "(", "data", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "", "data", "=", "np", ".", "ascontiguousarray", "(", "data", ",", "np", ".", "uint8", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data_input_only": [[52, 75], ["h5py.File", "h5py.File.close", "numpy.zeros", "numpy.zeros", "numpy.zeros", "[].astype", "str", "str"], "function", ["None"], ["", "def", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "if", "is_undc", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data": [[77, 97], ["h5py.File", "h5py.File.close", "[].astype", "[].astype", "[].astype", "str", "str", "str", "str"], "function", ["None"], ["", "def", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_ndc": [[99, 231], ["utils.read_data", "numpy.random.randint", "numpy.zeros", "numpy.full", "numpy.ones", "numpy.transpose", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "len", "len"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data"], ["", "def", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", ":", "\n", "    ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "\n", "#read input hdf5", "\n", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", "\n", "\n", "newdict", "=", "{", "}", "\n", "\n", "if", "out_bool", ":", "\n", "        ", "newdict", "[", "'int_V_signs'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "newdict", "[", "'float_center_x_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "newdict", "[", "'input_sdf'", "]", "=", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "newdict", "[", "'input_voxel'", "]", "=", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "\n", "\n", "#augment data", "\n", "", "permutation_list", "=", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "1", ",", "2", ",", "0", "]", ",", "[", "2", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "reversal_list", "=", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", "\n", "if", "aug_permutation", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "permutation_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "0", "]", "\n", "", "if", "aug_reversal", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "reversal_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "0", "]", "\n", "", "if", "aug_inversion", ":", "\n", "        ", "inversion_flag", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "else", ":", "\n", "        ", "inversion_flag", "=", "0", "\n", "\n", "\n", "", "if", "reversal", "[", "0", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_x_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "", "if", "reversal", "[", "1", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_y_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "", "if", "reversal", "[", "2", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_z_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "\n", "\n", "", "", "if", "permutation", "==", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#transpose", "\n", "            ", "newdict", "[", "k", "]", "=", "np", ".", "transpose", "(", "newdict", "[", "k", "]", ",", "permutation", ")", "\n", "\n", "", "olddict", "=", "newdict", "\n", "newdict", "=", "{", "}", "\n", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "            ", "newdict", "[", "'input_sdf'", "]", "=", "olddict", "[", "'input_sdf'", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "newdict", "[", "'input_voxel'", "]", "=", "olddict", "[", "'input_voxel'", "]", "\n", "\n", "", "if", "out_bool", ":", "\n", "            ", "newdict", "[", "'int_V_signs'", "]", "=", "olddict", "[", "'int_V_signs'", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "            ", "if", "permutation", "==", "[", "0", ",", "2", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "0", ",", "2", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "1", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "2", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "0", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "\n", "\n", "#store outputs", "\n", "", "", "", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "1", "-", "newdict", "[", "'int_V_signs'", "]", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "newdict", "[", "'int_V_signs'", "]", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "3", "]", ",", "-", "1", ",", "np", ".", "float32", ")", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "=", "newdict", "[", "'float_center_x_'", "]", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "=", "newdict", "[", "'float_center_y_'", "]", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "=", "newdict", "[", "'float_center_z_'", "]", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "np", ".", "ones", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "=", "newdict", "[", "'input_sdf'", "]", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_input", "=", "-", "LOD_input", "\n", "\n", "", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "=", "newdict", "[", "'input_voxel'", "]", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_input", "=", "1", "-", "LOD_input", "\n", "\n", "", "", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_and_augment_data_undc": [[233, 434], ["utils.read_data", "numpy.random.randint", "numpy.zeros", "numpy.full", "numpy.ones", "numpy.transpose", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "numpy.zeros", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.None.utils.read_data"], ["", "def", "read_and_augment_data_undc", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", ":", "\n", "    ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "\n", "#read input hdf5", "\n", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "True", ")", "\n", "\n", "newdict", "=", "{", "}", "#store grid", "\n", "newpcdict", "=", "{", "}", "#store pointcloud", "\n", "\n", "if", "out_bool", ":", "\n", "        ", "newdict", "[", "'int_edge_x_'", "]", "=", "LOD_gt_int", "[", ":", "-", "1", ",", ":", ",", ":", ",", "0", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "newdict", "[", "'float_center_x_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "newdict", "[", "'input_sdf'", "]", "=", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "newdict", "[", "'input_voxel'", "]", "=", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "newpcdict", "[", "'input_x_'", "]", "=", "LOD_input", "[", ":", ",", "0", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "LOD_input", "[", ":", ",", "1", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "LOD_input", "[", ":", ",", "2", "]", "\n", "\n", "\n", "#augment data", "\n", "", "permutation_list", "=", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "1", ",", "2", ",", "0", "]", ",", "[", "2", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "reversal_list", "=", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", "\n", "if", "aug_permutation", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "permutation_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "0", "]", "\n", "", "if", "aug_reversal", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "reversal_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "0", "]", "\n", "", "if", "aug_inversion", ":", "\n", "        ", "inversion_flag", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "else", ":", "\n", "        ", "inversion_flag", "=", "0", "\n", "\n", "\n", "", "if", "reversal", "[", "0", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_x_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "            ", "k", "=", "'input_x_'", "\n", "newpcdict", "[", "k", "]", "=", "grid_size", "-", "newpcdict", "[", "k", "]", "\n", "", "", "if", "reversal", "[", "1", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_y_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "            ", "k", "=", "'input_y_'", "\n", "newpcdict", "[", "k", "]", "=", "grid_size", "-", "newpcdict", "[", "k", "]", "\n", "", "", "if", "reversal", "[", "2", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_z_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "            ", "k", "=", "'input_z_'", "\n", "newpcdict", "[", "k", "]", "=", "grid_size", "-", "newpcdict", "[", "k", "]", "\n", "\n", "\n", "", "", "if", "permutation", "==", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#transpose", "\n", "            ", "newdict", "[", "k", "]", "=", "np", ".", "transpose", "(", "newdict", "[", "k", "]", ",", "permutation", ")", "\n", "\n", "", "olddict", "=", "newdict", "\n", "newdict", "=", "{", "}", "\n", "oldpcdict", "=", "newpcdict", "\n", "newpcdict", "=", "{", "}", "\n", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "            ", "newdict", "[", "'input_sdf'", "]", "=", "olddict", "[", "'input_sdf'", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "newdict", "[", "'input_voxel'", "]", "=", "olddict", "[", "'input_voxel'", "]", "\n", "\n", "", "if", "permutation", "==", "[", "0", ",", "2", ",", "1", "]", ":", "\n", "            ", "if", "out_bool", ":", "\n", "                ", "newdict", "[", "'int_edge_x_'", "]", "=", "olddict", "[", "'int_edge_x_'", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "olddict", "[", "'int_edge_z_'", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "olddict", "[", "'int_edge_y_'", "]", "\n", "", "if", "out_float", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "                ", "newpcdict", "[", "'input_x_'", "]", "=", "oldpcdict", "[", "'input_x_'", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "oldpcdict", "[", "'input_z_'", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "oldpcdict", "[", "'input_y_'", "]", "\n", "", "", "elif", "permutation", "==", "[", "1", ",", "0", ",", "2", "]", ":", "\n", "            ", "if", "out_bool", ":", "\n", "                ", "newdict", "[", "'int_edge_x_'", "]", "=", "olddict", "[", "'int_edge_y_'", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "olddict", "[", "'int_edge_x_'", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "olddict", "[", "'int_edge_z_'", "]", "\n", "", "if", "out_float", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "                ", "newpcdict", "[", "'input_x_'", "]", "=", "oldpcdict", "[", "'input_y_'", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "oldpcdict", "[", "'input_x_'", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "oldpcdict", "[", "'input_z_'", "]", "\n", "", "", "elif", "permutation", "==", "[", "2", ",", "1", ",", "0", "]", ":", "\n", "            ", "if", "out_bool", ":", "\n", "                ", "newdict", "[", "'int_edge_x_'", "]", "=", "olddict", "[", "'int_edge_z_'", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "olddict", "[", "'int_edge_y_'", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "olddict", "[", "'int_edge_x_'", "]", "\n", "", "if", "out_float", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "                ", "newpcdict", "[", "'input_x_'", "]", "=", "oldpcdict", "[", "'input_z_'", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "oldpcdict", "[", "'input_y_'", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "oldpcdict", "[", "'input_x_'", "]", "\n", "", "", "elif", "permutation", "==", "[", "1", ",", "2", ",", "0", "]", ":", "\n", "            ", "if", "out_bool", ":", "\n", "                ", "newdict", "[", "'int_edge_x_'", "]", "=", "olddict", "[", "'int_edge_y_'", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "olddict", "[", "'int_edge_z_'", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "olddict", "[", "'int_edge_x_'", "]", "\n", "", "if", "out_float", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "                ", "newpcdict", "[", "'input_x_'", "]", "=", "oldpcdict", "[", "'input_y_'", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "oldpcdict", "[", "'input_z_'", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "oldpcdict", "[", "'input_x_'", "]", "\n", "", "", "elif", "permutation", "==", "[", "2", ",", "0", ",", "1", "]", ":", "\n", "            ", "if", "out_bool", ":", "\n", "                ", "newdict", "[", "'int_edge_x_'", "]", "=", "olddict", "[", "'int_edge_z_'", "]", "\n", "newdict", "[", "'int_edge_y_'", "]", "=", "olddict", "[", "'int_edge_x_'", "]", "\n", "newdict", "[", "'int_edge_z_'", "]", "=", "olddict", "[", "'int_edge_y_'", "]", "\n", "", "if", "out_float", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "if", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "                ", "newpcdict", "[", "'input_x_'", "]", "=", "oldpcdict", "[", "'input_z_'", "]", "\n", "newpcdict", "[", "'input_y_'", "]", "=", "oldpcdict", "[", "'input_x_'", "]", "\n", "newpcdict", "[", "'input_z_'", "]", "=", "oldpcdict", "[", "'input_y_'", "]", "\n", "\n", "\n", "#store outputs", "\n", "", "", "", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "3", "]", ",", "np", ".", "int32", ")", "\n", "LOD_gt_int", "[", ":", "-", "1", ",", ":", ",", ":", ",", "0", "]", "=", "newdict", "[", "'int_edge_x_'", "]", "\n", "LOD_gt_int", "[", ":", ",", ":", "-", "1", ",", ":", ",", "1", "]", "=", "newdict", "[", "'int_edge_y_'", "]", "\n", "LOD_gt_int", "[", ":", ",", ":", ",", ":", "-", "1", ",", "2", "]", "=", "newdict", "[", "'int_edge_z_'", "]", "\n", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "3", "]", ",", "-", "1", ",", "np", ".", "float32", ")", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "=", "newdict", "[", "'float_center_x_'", "]", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "=", "newdict", "[", "'float_center_y_'", "]", "\n", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "=", "newdict", "[", "'float_center_z_'", "]", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "np", ".", "ones", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "=", "newdict", "[", "'input_sdf'", "]", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_input", "=", "-", "LOD_input", "\n", "\n", "", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "=", "newdict", "[", "'input_voxel'", "]", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_input", "=", "1", "-", "LOD_input", "\n", "\n", "", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "np", ".", "zeros", "(", "[", "len", "(", "LOD_input", ")", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input", "[", ":", ",", "0", "]", "=", "newpcdict", "[", "'input_x_'", "]", "\n", "LOD_input", "[", ":", ",", "1", "]", "=", "newpcdict", "[", "'input_y_'", "]", "\n", "LOD_input", "[", ":", ",", "2", "]", "=", "newpcdict", "[", "'input_z_'", "]", "\n", "\n", "#vertices, triangles = dual_contouring_ndc_surface_test(LOD_gt_int, LOD_gt_float)", "\n", "#write_obj_triangle(\"samples/test_1.obj\", vertices, triangles)", "\n", "#write_ply_point(\"samples/test_1.ply\", LOD_input)", "\n", "#exit(0)", "\n", "\n", "", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.dual_contouring_ndc_test": [[439, 517], ["numpy.squeeze", "numpy.full", "range", "numpy.array", "range", "range", "range", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "range", "len", "np.array.append", "numpy.array", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append"], "function", ["None"], ["", "def", "dual_contouring_ndc_test", "(", "int_grid", ",", "float_grid", ")", ":", "\n", "    ", "all_vertices", "=", "[", "]", "\n", "all_triangles", "=", "[", "]", "\n", "\n", "int_grid", "=", "np", ".", "squeeze", "(", "int_grid", ")", "\n", "dimx", ",", "dimy", ",", "dimz", "=", "int_grid", ".", "shape", "\n", "vertices_grid", "=", "np", ".", "full", "(", "[", "dimx", ",", "dimy", ",", "dimz", "]", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "\n", "#all vertices", "\n", "for", "i", "in", "range", "(", "0", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "0", ",", "dimz", "-", "1", ")", ":", "\n", "\n", "                ", "v0", "=", "int_grid", "[", "i", ",", "j", ",", "k", "]", "\n", "v1", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", "]", "\n", "v2", "=", "int_grid", "[", "i", "+", "1", ",", "j", "+", "1", ",", "k", "]", "\n", "v3", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", "]", "\n", "v4", "=", "int_grid", "[", "i", ",", "j", ",", "k", "+", "1", "]", "\n", "v5", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", "+", "1", "]", "\n", "v6", "=", "int_grid", "[", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", "]", "\n", "v7", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", "+", "1", "]", "\n", "\n", "if", "v1", "!=", "v0", "or", "v2", "!=", "v0", "or", "v3", "!=", "v0", "or", "v4", "!=", "v0", "or", "v5", "!=", "v0", "or", "v6", "!=", "v0", "or", "v7", "!=", "v0", ":", "\n", "#add a vertex", "\n", "                    ", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "=", "len", "(", "all_vertices", ")", "\n", "pos", "=", "float_grid", "[", "i", ",", "j", ",", "k", "]", "+", "np", ".", "array", "(", "[", "i", ",", "j", ",", "k", "]", ",", "np", ".", "float32", ")", "\n", "all_vertices", ".", "append", "(", "pos", ")", "\n", "\n", "", "", "", "", "all_vertices", "=", "np", ".", "array", "(", "all_vertices", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "#all triangles", "\n", "\n", "#i-direction", "\n", "for", "i", "in", "range", "(", "0", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "1", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "v0", "=", "int_grid", "[", "i", ",", "j", ",", "k", "]", "\n", "v1", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", "]", "\n", "if", "v0", "!=", "v1", ":", "\n", "                    ", "if", "v0", "==", "0", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", "]", ")", "\n", "\n", "#j-direction", "\n", "", "", "", "", "", "for", "i", "in", "range", "(", "1", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "1", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "v0", "=", "int_grid", "[", "i", ",", "j", ",", "k", "]", "\n", "v1", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", "]", "\n", "if", "v0", "!=", "v1", ":", "\n", "                    ", "if", "v0", "==", "0", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "\n", "#k-direction", "\n", "", "", "", "", "", "for", "i", "in", "range", "(", "1", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "0", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "v0", "=", "int_grid", "[", "i", ",", "j", ",", "k", "]", "\n", "v1", "=", "int_grid", "[", "i", ",", "j", ",", "k", "+", "1", "]", "\n", "if", "v0", "!=", "v1", ":", "\n", "                    ", "if", "v0", "==", "0", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "\n", "", "", "", "", "", "all_triangles", "=", "np", ".", "array", "(", "all_triangles", ",", "np", ".", "int32", ")", "\n", "\n", "return", "all_vertices", ",", "all_triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.dual_contouring_undc_test": [[520, 585], ["numpy.full", "range", "numpy.array", "range", "range", "range", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "range", "len", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "numpy.array"], "function", ["None"], ["", "def", "dual_contouring_undc_test", "(", "int_grid", ",", "float_grid", ")", ":", "\n", "    ", "all_vertices", "=", "[", "]", "\n", "all_triangles", "=", "[", "]", "\n", "\n", "dimx", ",", "dimy", ",", "dimz", ",", "_", "=", "int_grid", ".", "shape", "\n", "vertices_grid", "=", "np", ".", "full", "(", "[", "dimx", ",", "dimy", ",", "dimz", "]", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "\n", "#all vertices", "\n", "for", "i", "in", "range", "(", "0", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "0", ",", "dimz", "-", "1", ")", ":", "\n", "\n", "                ", "ex0", "=", "int_grid", "[", "i", ",", "j", ",", "k", ",", "0", "]", "\n", "ex1", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", ",", "0", "]", "\n", "ex2", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", "+", "1", ",", "0", "]", "\n", "ex3", "=", "int_grid", "[", "i", ",", "j", ",", "k", "+", "1", ",", "0", "]", "\n", "\n", "ey0", "=", "int_grid", "[", "i", ",", "j", ",", "k", ",", "1", "]", "\n", "ey1", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", ",", "1", "]", "\n", "ey2", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", "+", "1", ",", "1", "]", "\n", "ey3", "=", "int_grid", "[", "i", ",", "j", ",", "k", "+", "1", ",", "1", "]", "\n", "\n", "ez0", "=", "int_grid", "[", "i", ",", "j", ",", "k", ",", "2", "]", "\n", "ez1", "=", "int_grid", "[", "i", "+", "1", ",", "j", ",", "k", ",", "2", "]", "\n", "ez2", "=", "int_grid", "[", "i", "+", "1", ",", "j", "+", "1", ",", "k", ",", "2", "]", "\n", "ez3", "=", "int_grid", "[", "i", ",", "j", "+", "1", ",", "k", ",", "2", "]", "\n", "\n", "if", "ex0", "or", "ex1", "or", "ex2", "or", "ex3", "or", "ey0", "or", "ey1", "or", "ey2", "or", "ey3", "or", "ez0", "or", "ez1", "or", "ez2", "or", "ez3", ":", "\n", "#add a vertex", "\n", "                    ", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "=", "len", "(", "all_vertices", ")", "\n", "pos", "=", "float_grid", "[", "i", ",", "j", ",", "k", "]", "+", "np", ".", "array", "(", "[", "i", ",", "j", ",", "k", "]", ",", "np", ".", "float32", ")", "\n", "all_vertices", ".", "append", "(", "pos", ")", "\n", "\n", "", "", "", "", "all_vertices", "=", "np", ".", "array", "(", "all_vertices", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "#all triangles", "\n", "\n", "#i-direction", "\n", "for", "i", "in", "range", "(", "0", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "1", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "if", "int_grid", "[", "i", ",", "j", ",", "k", ",", "0", "]", ":", "\n", "                    ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", "]", ")", "\n", "\n", "#j-direction", "\n", "", "", "", "", "for", "i", "in", "range", "(", "1", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "1", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "if", "int_grid", "[", "i", ",", "j", ",", "k", ",", "1", "]", ":", "\n", "                    ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "-", "1", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "-", "1", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "\n", "#k-direction", "\n", "", "", "", "", "for", "i", "in", "range", "(", "1", ",", "dimx", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "dimy", "-", "1", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "0", ",", "dimz", "-", "1", ")", ":", "\n", "                ", "if", "int_grid", "[", "i", ",", "j", ",", "k", ",", "2", "]", ":", "\n", "                    ", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", ",", "vertices_grid", "[", "i", "-", "1", ",", "j", ",", "k", "]", "]", ")", "\n", "all_triangles", ".", "append", "(", "[", "vertices_grid", "[", "i", "-", "1", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", "-", "1", ",", "k", "]", ",", "vertices_grid", "[", "i", ",", "j", ",", "k", "]", "]", ")", "\n", "\n", "", "", "", "", "all_triangles", "=", "np", ".", "array", "(", "all_triangles", ",", "np", ".", "int32", ")", "\n", "\n", "return", "all_vertices", ",", "all_triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.write_obj_triangle": [[589, 596], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "int", "str", "str", "int", "str", "str", "int"], "function", ["None"], ["", "def", "write_obj_triangle", "(", "name", ",", "vertices", ",", "triangles", ")", ":", "\n", "    ", "fout", "=", "open", "(", "name", ",", "'w'", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"v \"", "+", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "for", "ii", "in", "range", "(", "len", "(", "triangles", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"f \"", "+", "str", "(", "int", "(", "triangles", "[", "ii", ",", "0", "]", "+", "1", ")", ")", "+", "\" \"", "+", "str", "(", "int", "(", "triangles", "[", "ii", ",", "1", "]", "+", "1", ")", ")", "+", "\" \"", "+", "str", "(", "int", "(", "triangles", "[", "ii", ",", "2", "]", "+", "1", ")", ")", "+", "\"\\n\"", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.write_ply_triangle": [[597, 613], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "len", "len", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "write_ply_triangle", "(", "name", ",", "vertices", ",", "triangles", ")", ":", "\n", "    ", "fout", "=", "open", "(", "name", ",", "'w'", ")", "\n", "fout", ".", "write", "(", "\"ply\\n\"", ")", "\n", "fout", ".", "write", "(", "\"format ascii 1.0\\n\"", ")", "\n", "fout", ".", "write", "(", "\"element vertex \"", "+", "str", "(", "len", "(", "vertices", ")", ")", "+", "\"\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float x\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float y\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float z\\n\"", ")", "\n", "fout", ".", "write", "(", "\"element face \"", "+", "str", "(", "len", "(", "triangles", ")", ")", "+", "\"\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property list uchar int vertex_index\\n\"", ")", "\n", "fout", ".", "write", "(", "\"end_header\\n\"", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "for", "ii", "in", "range", "(", "len", "(", "triangles", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"3 \"", "+", "str", "(", "triangles", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.write_ply_point": [[614, 626], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "open.close", "len", "open.write", "str", "len", "str", "str", "str"], "function", ["None"], ["", "def", "write_ply_point", "(", "name", ",", "vertices", ")", ":", "\n", "    ", "fout", "=", "open", "(", "name", ",", "'w'", ")", "\n", "fout", ".", "write", "(", "\"ply\\n\"", ")", "\n", "fout", ".", "write", "(", "\"format ascii 1.0\\n\"", ")", "\n", "fout", ".", "write", "(", "\"element vertex \"", "+", "str", "(", "len", "(", "vertices", ")", ")", "+", "\"\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float x\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float y\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float z\\n\"", ")", "\n", "fout", ".", "write", "(", "\"end_header\\n\"", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.None.utils.write_ply_point_normal": [[627, 646], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "range", "range", "len", "open.write", "len", "open.write", "str", "len", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "write_ply_point_normal", "(", "name", ",", "vertices", ",", "normals", "=", "None", ")", ":", "\n", "    ", "fout", "=", "open", "(", "name", ",", "'w'", ")", "\n", "fout", ".", "write", "(", "\"ply\\n\"", ")", "\n", "fout", ".", "write", "(", "\"format ascii 1.0\\n\"", ")", "\n", "fout", ".", "write", "(", "\"element vertex \"", "+", "str", "(", "len", "(", "vertices", ")", ")", "+", "\"\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float x\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float y\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float z\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float nx\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float ny\\n\"", ")", "\n", "fout", ".", "write", "(", "\"property float nz\\n\"", ")", "\n", "fout", ".", "write", "(", "\"end_header\\n\"", ")", "\n", "if", "normals", "is", "None", ":", "\n", "        ", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "            ", "fout", ".", "write", "(", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "3", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "4", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "5", "]", ")", "+", "\"\\n\"", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "            ", "fout", ".", "write", "(", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\" \"", "+", "str", "(", "normals", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "normals", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "normals", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "", "fout", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.simplify_obj.load_obj": [[29, 75], ["open", "open.readlines", "open.close", "range", "numpy.array", "numpy.array", "numpy.max", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.min", "numpy.sqrt", "len", "lines[].split", "len", "float", "float", "float", "np.array.append", "int", "int", "int", "np.array.append", "line[].split", "line[].split", "line[].split"], "function", ["None"], ["def", "load_obj", "(", "dire", ")", ":", "\n", "    ", "fin", "=", "open", "(", "dire", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "vertices", "=", "[", "]", "\n", "triangles", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "        ", "line", "=", "lines", "[", "i", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "line", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "x", "=", "float", "(", "line", "[", "1", "]", ")", "\n", "y", "=", "float", "(", "line", "[", "2", "]", ")", "\n", "z", "=", "float", "(", "line", "[", "3", "]", ")", "\n", "vertices", ".", "append", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "", "if", "line", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "x", "=", "int", "(", "line", "[", "1", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "y", "=", "int", "(", "line", "[", "2", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "z", "=", "int", "(", "line", "[", "3", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "triangles", ".", "append", "(", "[", "x", "-", "1", ",", "y", "-", "1", ",", "z", "-", "1", "]", ")", "\n", "\n", "", "", "vertices", "=", "np", ".", "array", "(", "vertices", ",", "np", ".", "float32", ")", "\n", "triangles", "=", "np", ".", "array", "(", "triangles", ",", "np", ".", "int32", ")", "\n", "\n", "#normalize diagonal=1", "\n", "x_max", "=", "np", ".", "max", "(", "vertices", "[", ":", ",", "0", "]", ")", "\n", "y_max", "=", "np", ".", "max", "(", "vertices", "[", ":", ",", "1", "]", ")", "\n", "z_max", "=", "np", ".", "max", "(", "vertices", "[", ":", ",", "2", "]", ")", "\n", "x_min", "=", "np", ".", "min", "(", "vertices", "[", ":", ",", "0", "]", ")", "\n", "y_min", "=", "np", ".", "min", "(", "vertices", "[", ":", ",", "1", "]", ")", "\n", "z_min", "=", "np", ".", "min", "(", "vertices", "[", ":", ",", "2", "]", ")", "\n", "x_mid", "=", "(", "x_max", "+", "x_min", ")", "/", "2", "\n", "y_mid", "=", "(", "y_max", "+", "y_min", ")", "/", "2", "\n", "z_mid", "=", "(", "z_max", "+", "z_min", ")", "/", "2", "\n", "x_scale", "=", "x_max", "-", "x_min", "\n", "y_scale", "=", "y_max", "-", "y_min", "\n", "z_scale", "=", "z_max", "-", "z_min", "\n", "scale", "=", "np", ".", "sqrt", "(", "x_scale", "*", "x_scale", "+", "y_scale", "*", "y_scale", "+", "z_scale", "*", "z_scale", ")", "\n", "\n", "vertices", "[", ":", ",", "0", "]", "=", "(", "vertices", "[", ":", ",", "0", "]", "-", "x_mid", ")", "/", "scale", "\n", "vertices", "[", ":", ",", "1", "]", "=", "(", "vertices", "[", ":", ",", "1", "]", "-", "y_mid", ")", "/", "scale", "\n", "vertices", "[", ":", ",", "2", "]", "=", "(", "vertices", "[", ":", ",", "2", "]", "-", "z_mid", ")", "/", "scale", "\n", "\n", "return", "vertices", ",", "triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.simplify_obj.write_obj": [[76, 83], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "write_obj", "(", "dire", ",", "vertices", ",", "triangles", ")", ":", "\n", "    ", "fout", "=", "open", "(", "dire", ",", "'w'", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"v \"", "+", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "for", "ii", "in", "range", "(", "len", "(", "triangles", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"f \"", "+", "str", "(", "triangles", "[", "ii", ",", "0", "]", "+", "1", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "1", "]", "+", "1", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "2", "]", "+", "1", ")", "+", "\"\\n\"", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.load_obj": [[9, 36], ["open", "open.readlines", "open.close", "range", "numpy.array", "numpy.array", "len", "lines[].split", "len", "float", "float", "float", "np.array.append", "int", "int", "int", "np.array.append", "line[].split", "line[].split", "line[].split"], "function", ["None"], ["def", "load_obj", "(", "dire", ")", ":", "\n", "    ", "fin", "=", "open", "(", "dire", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "vertices", "=", "[", "]", "\n", "triangles", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "        ", "line", "=", "lines", "[", "i", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "line", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "x", "=", "float", "(", "line", "[", "1", "]", ")", "\n", "y", "=", "float", "(", "line", "[", "2", "]", ")", "\n", "z", "=", "float", "(", "line", "[", "3", "]", ")", "\n", "vertices", ".", "append", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "", "if", "line", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "x", "=", "int", "(", "line", "[", "1", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "y", "=", "int", "(", "line", "[", "2", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "z", "=", "int", "(", "line", "[", "3", "]", ".", "split", "(", "\"/\"", ")", "[", "0", "]", ")", "\n", "triangles", ".", "append", "(", "[", "x", "-", "1", ",", "y", "-", "1", ",", "z", "-", "1", "]", ")", "\n", "\n", "", "", "vertices", "=", "np", ".", "array", "(", "vertices", ",", "np", ".", "float32", ")", "\n", "triangles", "=", "np", ".", "array", "(", "triangles", ",", "np", ".", "int32", ")", "\n", "\n", "return", "vertices", ",", "triangles", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.write_obj": [[37, 44], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "write_obj", "(", "dire", ",", "vertices", ",", "triangles", ")", ":", "\n", "    ", "fout", "=", "open", "(", "dire", ",", "'w'", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "vertices", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"v \"", "+", "str", "(", "vertices", "[", "ii", ",", "0", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "1", "]", ")", "+", "\" \"", "+", "str", "(", "vertices", "[", "ii", ",", "2", "]", ")", "+", "\"\\n\"", ")", "\n", "", "for", "ii", "in", "range", "(", "len", "(", "triangles", ")", ")", ":", "\n", "        ", "fout", ".", "write", "(", "\"f \"", "+", "str", "(", "triangles", "[", "ii", ",", "0", "]", "+", "1", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "1", "]", "+", "1", ")", "+", "\" \"", "+", "str", "(", "triangles", "[", "ii", ",", "2", "]", "+", "1", ")", "+", "\"\\n\"", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.augment_objs": [[47, 75], ["len", "range", "print", "augment_obj.load_obj", "q.put", "os.makedirs", "augment_obj.write_obj", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.load_obj", "home.repos.pwc.inspect_result.czq142857_NDC.data_preprocessing.augment_obj.write_obj"], ["", "def", "augment_objs", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "\n", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "in_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "\n", "\n", "print", "(", "pid", ",", "idx", ",", "in_name", ")", "\n", "v", ",", "t", "=", "load_obj", "(", "in_name", "+", "\"/model.obj\"", ")", "\n", "\n", "for", "s", "in", "[", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", "]", ":", "\n", "            ", "for", "i", "in", "[", "0", ",", "1", "]", ":", "\n", "                ", "for", "j", "in", "[", "0", ",", "1", "]", ":", "\n", "                    ", "for", "k", "in", "[", "0", ",", "1", "]", ":", "\n", "                        ", "newdir", "=", "in_name", "+", "\"_\"", "+", "str", "(", "s", ")", "+", "\"_\"", "+", "str", "(", "i", ")", "+", "\"_\"", "+", "str", "(", "j", ")", "+", "\"_\"", "+", "str", "(", "k", ")", "\n", "os", ".", "makedirs", "(", "newdir", ")", "\n", "vvv", "=", "v", "*", "(", "s", "/", "10.0", ")", "\n", "if", "i", "==", "1", ":", "\n", "                            ", "vvv", "[", ":", ",", "0", "]", "=", "vvv", "[", ":", ",", "0", "]", "+", "0.5", "/", "64", "\n", "", "if", "j", "==", "1", ":", "\n", "                            ", "vvv", "[", ":", ",", "1", "]", "=", "vvv", "[", ":", ",", "1", "]", "+", "0.5", "/", "64", "\n", "", "if", "k", "==", "1", ":", "\n", "                            ", "vvv", "[", ":", ",", "2", "]", "=", "vvv", "[", ":", ",", "2", "]", "+", "0.5", "/", "64", "\n", "", "write_obj", "(", "newdir", "+", "\"/model.obj\"", ",", "vvv", ",", "t", ")", "\n", "\n", "", "", "", "", "q", ".", "put", "(", "[", "1", ",", "pid", ",", "idx", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.get_gt_LOD.get_gt_from_intersectionpn": [[33, 255], ["len", "range", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.zeros", "print", "os.system", "os.system", "os.system", "trimesh.load", "trimesh.load.sample", "numpy.random.shuffle", "utils.read_sdf_file_as_3d_array", "utils.read_intersectionpn_file_as_2d_array", "utils.read_binvox_file_as_3d_array", "h5py.File", "h5py.File.create_dataset", "h5py.File.close", "os.remove", "os.remove", "os.remove", "q.put", "time.time", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.zeros", "numpy.zeros", "cutils.get_input_voxel", "numpy.full", "numpy.full", "cutils.get_intersection_points_normals_in_cells", "numpy.full", "numpy.full", "range", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.create_dataset", "range", "len", "range", "str", "str", "str", "str", "len", "len", "numpy.zeros", "cutils.retrieve_intersection_points_normals_from_cells", "numpy.any", "numpy.any", "numpy.any", "numpy.sum", "numpy.mean", "scipy.linalg.lstsq", "range", "str", "str", "str", "str", "numpy.min", "numpy.max", "numpy.array", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "scipy.linalg.lstsq"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_sdf_file_as_3d_array", "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_intersectionpn_file_as_2d_array", "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_binvox_file_as_3d_array"], ["def", "get_gt_from_intersectionpn", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "\n", "cell_voxel_size", "=", "8", "\n", "\n", "num_of_int_params", "=", "3", "\n", "num_of_float_params", "=", "3", "\n", "\n", "point_sample_num", "=", "65536", "\n", "\n", "grid_size_list", "=", "[", "32", ",", "64", "]", "\n", "LOD_gt_int", "=", "{", "}", "\n", "LOD_gt_float", "=", "{", "}", "\n", "LOD_input_sdf", "=", "{", "}", "\n", "LOD_input_voxel", "=", "{", "}", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "        ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "LOD_gt_int", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_float", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_sdf", "[", "grid_size", "]", "=", "np", ".", "ones", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "\n", "", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "in_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "out_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "in_obj_name", "=", "in_name", "+", "\".obj\"", "\n", "in_sdf_name", "=", "in_name", "+", "\".sdf\"", "\n", "in_intersection_name", "=", "in_name", "+", "\".intersectionpn\"", "\n", "in_binvox_name", "=", "in_name", "+", "\".binvox\"", "\n", "out_hdf5_name", "=", "out_name", "+", "\".hdf5\"", "\n", "\n", "#if nid+1<name_num and os.path.exists(name_list[nid+1][3] + \".hdf5\"): continue", "\n", "#if os.path.exists(out_hdf5_name): continue", "\n", "\n", "print", "(", "pid", ",", "'  '", ",", "nid", ",", "'/'", ",", "name_num", ",", "idx", ",", "in_binvox_name", ")", "\n", "\n", "\n", "#run exe to get sdf, intersection, and binvox", "\n", "command", "=", "\"./VOXGen \"", "+", "in_obj_name", "+", "\" 1024 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./SDFGen \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./IntersectionXYZpn \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "\n", "#read", "\n", "gt_mesh", "=", "trimesh", ".", "load", "(", "in_obj_name", ")", "\n", "gt_points", "=", "gt_mesh", ".", "sample", "(", "point_sample_num", ",", "return_index", "=", "False", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "gt_points", ")", "\n", "\n", "sdf_129", "=", "utils", ".", "read_sdf_file_as_3d_array", "(", "in_sdf_name", ")", "#128", "\n", "\n", "inter_X", ",", "inter_Y", ",", "inter_Z", "=", "utils", ".", "read_intersectionpn_file_as_2d_array", "(", "in_intersection_name", ")", "#128", "\n", "\n", "voxel_1025", "=", "utils", ".", "read_binvox_file_as_3d_array", "(", "in_binvox_name", ",", "fix_coords", "=", "False", ")", "#1024", "\n", "\n", "#compute gt", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "            ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "voxel_size", "=", "grid_size", "*", "cell_voxel_size", "\n", "downscale", "=", "1024", "//", "voxel_size", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "#prepare downsampled voxels and intersections", "\n", "LOD_inter_X", "=", "np", ".", "copy", "(", "inter_X", "[", "(", "inter_X", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_X", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Y", "=", "np", ".", "copy", "(", "inter_Y", "[", "(", "inter_Y", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Y", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Z", "=", "np", ".", "copy", "(", "inter_Z", "[", "(", "inter_Z", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Z", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "\n", "LOD_voxels", "=", "np", ".", "zeros", "(", "[", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_voxels", "[", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", "]", "=", "voxel_1025", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "\n", "\n", "tmp_sdf", "=", "sdf_129", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "LOD_input_sdf", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_sdf", "\n", "\n", "tmp_voxel", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "cutils", ".", "get_input_voxel", "(", "voxel_1025", ",", "1024", ",", "grid_size", ",", "tmp_voxel", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_voxel", "\n", "\n", "#prepare an efficient data structure to store intersections", "\n", "LOD_intersection_maxlen", "=", "len", "(", "LOD_inter_X", ")", "+", "len", "(", "LOD_inter_Y", ")", "+", "len", "(", "LOD_inter_Z", ")", "+", "(", "grid_size_1", "**", "3", ")", "*", "2", "\n", "LOD_intersection_pointer", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", "]", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "LOD_intersection_data", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", ",", "6", "]", ",", "-", "1", ",", "np", ".", "float32", ")", "\n", "cutils", ".", "get_intersection_points_normals_in_cells", "(", "LOD_inter_X", ",", "LOD_inter_Y", ",", "LOD_inter_Z", ",", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ")", "\n", "\n", "#prepare arrays to store ground truth", "\n", "LOD_gt_tmp_int", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "0", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_tmp_float", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "-", "10", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "# ----- get_gt -----", "\n", "for", "i", "in", "range", "(", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "grid_size", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "grid_size", ")", ":", "\n", "                            ", "reference_V", "=", "np", ".", "zeros", "(", "[", "256", ",", "6", "]", ",", "np", ".", "float32", ")", "\n", "reference_V_len", "=", "cutils", ".", "retrieve_intersection_points_normals_from_cells", "(", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ",", "i", ",", "j", ",", "k", ",", "reference_V", ")", "\n", "if", "reference_V_len", "==", "0", ":", "#empty", "\n", "                                ", "continue", "\n", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "0", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "1", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "2", "]", "=", "1", "\n", "\n", "#prepare a(?,3) b(?)", "\n", "#n(x-p)=0 --> nx=np", "\n", "", "a", "=", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "\n", "b", "=", "np", ".", "sum", "(", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "*", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "\n", "#add regularization to avoid singular", "\n", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "mean", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                    ", "if", "reg_scale", ">", "1000", ":", "break", "\n", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "if", "reg_scale", ">", "1000", ":", "\n", "                                    ", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "array", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "np", ".", "float32", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                        ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                            ", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "", "", "for", "c", "in", "range", "(", "10", ")", ":", "\n", "                                    ", "tmp_scale", "=", "tmp_scale", "/", "2", "\n", "reg_scale", "=", "reg_scale", "-", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                        ", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "\n", "", "", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                    ", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "\n", "", "", "LOD_gt_tmp_float", "[", "i", ",", "j", ",", "k", "]", "=", "x", "\n", "# ----- get_gt end -----", "\n", "\n", "\n", "", "", "", "LOD_gt_int", "[", "grid_size", "]", "[", ":", "]", "=", "LOD_gt_tmp_int", "\n", "LOD_gt_float", "[", "grid_size", "]", "[", ":", "]", "=", "LOD_gt_tmp_float", "\n", "\n", "\n", "#print(time.time() - start_time)", "\n", "\n", "#vertices, triangles = utils.dual_contouring_undc_test(LOD_gt_int[grid_size][:,:,:,:], LOD_gt_float[grid_size][:,:,:,:])", "\n", "#vertices = vertices/grid_size-0.5", "\n", "#utils.write_obj_triangle(out_name+\"_\"+str(grid_size)+\".obj\", vertices, triangles)", "\n", "#utils.write_ply_point(out_name+\"_\"+str(grid_size)+\".ply\", gt_points)", "\n", "\n", "#os.system(\"cp \"+in_obj_name+\" \"+out_name+\"_x.obj\")", "\n", "#tmp_pc = np.concatenate([LOD_inter_X,LOD_inter_Y,LOD_inter_Z], axis=0)", "\n", "#utils.write_ply_point_normal(out_name+\"_\"+str(grid_size)+\".ply\", tmp_pc)", "\n", "\n", "\n", "#record data", "\n", "", "hdf5_file", "=", "h5py", ".", "File", "(", "out_hdf5_name", ",", "'w'", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "\"pointcloud\"", ",", "[", "point_sample_num", ",", "3", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", "=", "gt_points", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "            ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_int\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "np", ".", "uint8", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_float\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_sdf\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_voxel\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ",", "compression", "=", "9", ")", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", "=", "LOD_gt_int", "[", "grid_size", "]", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", "=", "LOD_gt_float", "[", "grid_size", "]", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "=", "LOD_input_sdf", "[", "grid_size", "]", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "=", "LOD_input_voxel", "[", "grid_size", "]", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "\n", "\n", "#delete sdf, intersection, and binvox to save space", "\n", "os", ".", "remove", "(", "in_sdf_name", ")", "\n", "os", ".", "remove", "(", "in_intersection_name", ")", "\n", "os", ".", "remove", "(", "in_binvox_name", ")", "\n", "\n", "del", "voxel_1025", "\n", "\n", "\n", "q", ".", "put", "(", "[", "1", ",", "pid", ",", "idx", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.dual_contouring_undc_test": [[5, 70], ["numpy.full", "range", "numpy.array", "range", "range", "range", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "range", "len", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "numpy.array"], "function", ["None"], ["#read sdf files produced by SDFGen", "\n", "def", "read_sdf_file_as_3d_array", "(", "name", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#sdf'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a sdf file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "#a simplified reader for binvox files", "\n", "#mostly copied from binvox_rw.py", "\n", "#https://github.com/dimatura/binvox-rw-py", "\n", "", "def", "read_binvox_file_as_3d_array", "(", "name", ",", "fix_coords", "=", "True", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#binvox'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a binvox file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "translate", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "scale", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "[", "0", "]", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "raw_data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "# if just using reshape() on the raw data:", "\n", "# indexing the array as array[i,j,k], the indices map into the", "\n", "# coords as:", "\n", "# i -> x", "\n", "# j -> z", "\n", "# k -> y", "\n", "# if fix_coords is true, then data is rearranged so that", "\n", "# mapping is", "\n", "# i -> x", "\n", "# j -> y", "\n", "# k -> z", "\n", "values", ",", "counts", "=", "raw_data", "[", ":", ":", "2", "]", ",", "raw_data", "[", "1", ":", ":", "2", "]", "\n", "data", "=", "np", ".", "repeat", "(", "values", ",", "counts", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "if", "fix_coords", ":", "\n", "        ", "data", "=", "np", ".", "transpose", "(", "data", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "", "data", "=", "np", ".", "ascontiguousarray", "(", "data", ",", "np", ".", "uint8", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "\n", "", "def", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "if", "is_undc", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.write_obj_triangle": [[73, 80], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "int", "str", "str", "int", "str", "str", "int"], "function", ["None"], ["", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n", "\n", "", "def", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.write_ply_triangle": [[81, 97], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "len", "len", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.write_ply_point": [[99, 111], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "open.close", "len", "open.write", "str", "len", "str", "str", "str"], "function", ["None"], ["", "def", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", ":", "\n", "    ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "\n", "#read input hdf5", "\n", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", "\n", "\n", "newdict", "=", "{", "}", "\n", "\n", "if", "out_bool", ":", "\n", "        ", "newdict", "[", "'int_V_signs'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "newdict", "[", "'float_center_x_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.write_ply_point_normal": [[112, 131], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "range", "range", "len", "open.write", "len", "open.write", "str", "len", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["newdict", "[", "'float_center_y_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "newdict", "[", "'input_sdf'", "]", "=", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "newdict", "[", "'input_voxel'", "]", "=", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "\n", "\n", "#augment data", "\n", "", "permutation_list", "=", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "1", ",", "2", ",", "0", "]", ",", "[", "2", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "reversal_list", "=", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", "\n", "if", "aug_permutation", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "permutation_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "0", "]", "\n", "", "if", "aug_reversal", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "reversal_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.read_intersectionpn_file_as_2d_array": [[133, 150], ["open", "open.readline().strip", "list", "numpy.array", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "range", "fp.readline.startswith", "IOError", "map", "list", "open.read", "len", "separated.append", "open.readline", "map", "numpy.sum", "numpy.ascontiguousarray", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline"], "function", ["None"], ["        ", "inversion_flag", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "else", ":", "\n", "        ", "inversion_flag", "=", "0", "\n", "\n", "\n", "", "if", "reversal", "[", "0", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_x_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "", "if", "reversal", "[", "1", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_y_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.read_sdf_file_as_3d_array": [[152, 163], ["open", "open.readline().strip", "list", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "fp.readline.startswith", "IOError", "map", "open.read", "open.readline", "open.readline().strip().split", "open.readline().strip", "open.readline"], "function", ["None"], ["", "", "if", "reversal", "[", "2", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_z_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "\n", "\n", "", "", "if", "permutation", "==", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC.utils.read_binvox_file_as_3d_array": [[167, 196], ["open", "open.readline().strip", "list", "list", "open.readline", "numpy.frombuffer", "numpy.repeat().astype", "np.transpose.reshape", "numpy.ascontiguousarray", "open.close", "fp.readline.startswith", "IOError", "map", "map", "list", "open.read", "numpy.transpose", "open.readline", "map", "numpy.repeat", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline", "open.readline"], "function", ["None"], ["", "olddict", "=", "newdict", "\n", "newdict", "=", "{", "}", "\n", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "            ", "newdict", "[", "'input_sdf'", "]", "=", "olddict", "[", "'input_sdf'", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "newdict", "[", "'input_voxel'", "]", "=", "olddict", "[", "'input_voxel'", "]", "\n", "\n", "", "if", "out_bool", ":", "\n", "            ", "newdict", "[", "'int_V_signs'", "]", "=", "olddict", "[", "'int_V_signs'", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "            ", "if", "permutation", "==", "[", "0", ",", "2", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "0", ",", "2", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "1", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "2", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "0", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.get_gt_LOD.get_gt_from_intersectionpn": [[33, 240], ["len", "range", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.zeros", "print", "os.system", "os.system", "os.system", "utils.read_sdf_file_as_3d_array", "utils.read_intersectionpn_file_as_2d_array", "utils.read_binvox_file_as_3d_array", "h5py.File", "h5py.File.close", "os.remove", "os.remove", "os.remove", "q.put", "time.time", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.zeros", "numpy.zeros", "cutils.get_input_voxel", "numpy.full", "numpy.full", "cutils.get_intersection_points_normals_in_cells", "numpy.full", "numpy.full", "range", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.create_dataset", "range", "len", "range", "str", "str", "str", "str", "len", "len", "numpy.max", "numpy.min", "numpy.zeros", "cutils.retrieve_intersection_points_normals_from_cells", "numpy.sum", "numpy.mean", "str", "str", "str", "str", "scipy.linalg.lstsq", "range", "numpy.min", "numpy.max", "numpy.array", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "scipy.linalg.lstsq"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_sdf_file_as_3d_array", "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_intersectionpn_file_as_2d_array", "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_binvox_file_as_3d_array"], ["def", "get_gt_from_intersectionpn", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "\n", "cell_voxel_size", "=", "8", "\n", "\n", "num_of_int_params", "=", "3", "\n", "num_of_float_params", "=", "3", "\n", "\n", "point_sample_num", "=", "65536", "\n", "\n", "grid_size_list", "=", "[", "32", ",", "64", "]", "\n", "LOD_gt_int", "=", "{", "}", "\n", "LOD_gt_float", "=", "{", "}", "\n", "LOD_input_sdf", "=", "{", "}", "\n", "LOD_input_voxel", "=", "{", "}", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "        ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "LOD_gt_int", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_float", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_sdf", "[", "grid_size", "]", "=", "np", ".", "ones", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "\n", "", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "in_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "out_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "in_obj_name", "=", "in_name", "+", "\".obj\"", "\n", "in_sdf_name", "=", "in_name", "+", "\".sdf\"", "\n", "in_intersection_name", "=", "in_name", "+", "\".intersectionpn\"", "\n", "in_binvox_name", "=", "in_name", "+", "\".binvox\"", "\n", "out_hdf5_name", "=", "out_name", "+", "\".hdf5\"", "\n", "\n", "#if nid+1<name_num and os.path.exists(name_list[nid+1][3] + \".hdf5\"): continue", "\n", "#if os.path.exists(out_hdf5_name): continue", "\n", "\n", "print", "(", "pid", ",", "'  '", ",", "nid", ",", "'/'", ",", "name_num", ",", "idx", ",", "in_binvox_name", ")", "\n", "\n", "\n", "#run exe to get sdf, intersection, and binvox", "\n", "command", "=", "\"./VOXGen \"", "+", "in_obj_name", "+", "\" 1024 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./SDFGen \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./IntersectionXYZpn \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "\n", "#read", "\n", "gt_mesh", "=", "trimesh", ".", "load", "(", "in_obj_name", ")", "\n", "gt_points", "=", "gt_mesh", ".", "sample", "(", "point_sample_num", ",", "return_index", "=", "False", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "gt_points", ")", "\n", "\n", "sdf_129", "=", "utils", ".", "read_sdf_file_as_3d_array", "(", "in_sdf_name", ")", "#128", "\n", "\n", "inter_X", ",", "inter_Y", ",", "inter_Z", "=", "utils", ".", "read_intersectionpn_file_as_2d_array", "(", "in_intersection_name", ")", "#128", "\n", "\n", "voxel_1025", "=", "utils", ".", "read_binvox_file_as_3d_array", "(", "in_binvox_name", ",", "fix_coords", "=", "False", ")", "#1024", "\n", "\n", "#compute gt", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "            ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "voxel_size", "=", "grid_size", "*", "cell_voxel_size", "\n", "downscale", "=", "1024", "//", "voxel_size", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "#prepare downsampled voxels and intersections", "\n", "LOD_inter_X", "=", "np", ".", "copy", "(", "inter_X", "[", "(", "inter_X", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_X", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Y", "=", "np", ".", "copy", "(", "inter_Y", "[", "(", "inter_Y", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Y", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Z", "=", "np", ".", "copy", "(", "inter_Z", "[", "(", "inter_Z", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Z", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "\n", "LOD_voxels", "=", "np", ".", "zeros", "(", "[", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_voxels", "[", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", "]", "=", "voxel_1025", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "\n", "\n", "tmp_sdf", "=", "sdf_129", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "LOD_input_sdf", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_sdf", "\n", "\n", "tmp_voxel", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "cutils", ".", "get_input_voxel", "(", "voxel_1025", ",", "1024", ",", "grid_size", ",", "tmp_voxel", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_voxel", "\n", "\n", "#prepare an efficient data structure to store intersections", "\n", "LOD_intersection_maxlen", "=", "len", "(", "LOD_inter_X", ")", "+", "len", "(", "LOD_inter_Y", ")", "+", "len", "(", "LOD_inter_Z", ")", "+", "(", "grid_size_1", "**", "3", ")", "*", "2", "\n", "LOD_intersection_pointer", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", "]", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "LOD_intersection_data", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", ",", "6", "]", ",", "-", "1", ",", "np", ".", "float32", ")", "\n", "cutils", ".", "get_intersection_points_normals_in_cells", "(", "LOD_inter_X", ",", "LOD_inter_Y", ",", "LOD_inter_Z", ",", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ")", "\n", "\n", "#prepare arrays to store ground truth", "\n", "LOD_gt_tmp_int", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "0", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_tmp_float", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "-", "10", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "# ----- get_gt -----", "\n", "for", "i", "in", "range", "(", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "grid_size", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "grid_size", ")", ":", "\n", "                            ", "reference_V", "=", "np", ".", "zeros", "(", "[", "256", ",", "6", "]", ",", "np", ".", "float32", ")", "\n", "reference_V_len", "=", "cutils", ".", "retrieve_intersection_points_normals_from_cells", "(", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ",", "i", ",", "j", ",", "k", ",", "reference_V", ")", "\n", "if", "reference_V_len", "==", "0", ":", "#empty", "\n", "                                ", "continue", "\n", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "0", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "1", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "2", "]", "=", "1", "\n", "\n", "#prepare a(?,3) b(?)", "\n", "#n(x-p)=0 --> nx=np", "\n", "", "a", "=", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "\n", "b", "=", "np", ".", "sum", "(", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "*", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "\n", "#add regularization to avoid singular", "\n", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "mean", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                    ", "if", "reg_scale", ">", "1000", ":", "break", "\n", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "if", "reg_scale", ">", "1000", ":", "\n", "                                    ", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "array", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "np", ".", "float32", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                        ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                            ", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "", "", "for", "c", "in", "range", "(", "10", ")", ":", "\n", "                                    ", "tmp_scale", "=", "tmp_scale", "/", "2", "\n", "reg_scale", "=", "reg_scale", "-", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                        ", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "\n", "", "", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                    ", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "\n", "", "", "LOD_gt_tmp_float", "[", "i", ",", "j", ",", "k", "]", "=", "x", "\n", "# ----- get_gt end -----", "\n", "\n", "\n", "", "", "", "LOD_gt_int", "[", "grid_size", "]", "[", ":", "]", "=", "LOD_gt_tmp_int", "\n", "LOD_gt_float", "[", "grid_size", "]", "[", ":", "]", "=", "LOD_gt_tmp_float", "\n", "\n", "\n", "#print(time.time() - start_time)", "\n", "\n", "#vertices, triangles = utils.dual_contouring_undc_test(LOD_gt_int[grid_size][:,:,:,:], LOD_gt_float[grid_size][:,:,:,:])", "\n", "#vertices = vertices/grid_size-0.5", "\n", "#utils.write_obj_triangle(out_name+\"_\"+str(grid_size)+\".obj\", vertices, triangles)", "\n", "#utils.write_ply_point(out_name+\"_\"+str(grid_size)+\".ply\", gt_points)", "\n", "\n", "#os.system(\"cp \"+in_obj_name+\" \"+out_name+\"_x.obj\")", "\n", "#tmp_pc = np.concatenate([LOD_inter_X,LOD_inter_Y,LOD_inter_Z], axis=0)", "\n", "#utils.write_ply_point_normal(out_name+\"_\"+str(grid_size)+\".ply\", tmp_pc)", "\n", "\n", "\n", "#record data", "\n", "", "hdf5_file", "=", "h5py", ".", "File", "(", "out_hdf5_name", ",", "'w'", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "\"pointcloud\"", ",", "[", "point_sample_num", ",", "3", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", "=", "gt_points", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "            ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_int\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "np", ".", "uint8", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_float\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_sdf\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ",", "compression", "=", "9", ")", "\n", "hdf5_file", ".", "create_dataset", "(", "str", "(", "grid_size", ")", "+", "\"_voxel\"", ",", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ",", "compression", "=", "9", ")", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", "=", "LOD_gt_int", "[", "grid_size", "]", "\n", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", "=", "LOD_gt_float", "[", "grid_size", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.dual_contouring_ndc_test": [[5, 83], ["numpy.squeeze", "numpy.full", "range", "numpy.array", "range", "range", "range", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "range", "len", "np.array.append", "numpy.array", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append"], "function", ["None"], ["#read sdf files produced by SDFGen", "\n", "def", "read_sdf_file_as_3d_array", "(", "name", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#sdf'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a sdf file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "#a simplified reader for binvox files", "\n", "#mostly copied from binvox_rw.py", "\n", "#https://github.com/dimatura/binvox-rw-py", "\n", "", "def", "read_binvox_file_as_3d_array", "(", "name", ",", "fix_coords", "=", "True", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#binvox'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a binvox file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "translate", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "scale", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "[", "0", "]", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "raw_data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "# if just using reshape() on the raw data:", "\n", "# indexing the array as array[i,j,k], the indices map into the", "\n", "# coords as:", "\n", "# i -> x", "\n", "# j -> z", "\n", "# k -> y", "\n", "# if fix_coords is true, then data is rearranged so that", "\n", "# mapping is", "\n", "# i -> x", "\n", "# j -> y", "\n", "# k -> z", "\n", "values", ",", "counts", "=", "raw_data", "[", ":", ":", "2", "]", ",", "raw_data", "[", "1", ":", ":", "2", "]", "\n", "data", "=", "np", ".", "repeat", "(", "values", ",", "counts", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "if", "fix_coords", ":", "\n", "        ", "data", "=", "np", ".", "transpose", "(", "data", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "", "data", "=", "np", ".", "ascontiguousarray", "(", "data", ",", "np", ".", "uint8", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "\n", "", "def", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "if", "is_undc", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n", "\n", "", "def", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.write_obj_triangle": [[86, 93], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "int", "str", "str", "int", "str", "str", "int"], "function", ["None"], ["        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.write_ply_triangle": [[94, 110], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "len", "len", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n", "\n", "", "def", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", ":", "\n", "    ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "\n", "#read input hdf5", "\n", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", "\n", "\n", "newdict", "=", "{", "}", "\n", "\n", "if", "out_bool", ":", "\n", "        ", "newdict", "[", "'int_V_signs'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "if", "out_float", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.write_ply_point": [[112, 124], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "open.close", "len", "open.write", "str", "len", "str", "str", "str"], "function", ["None"], ["newdict", "[", "'float_center_y_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "newdict", "[", "'input_sdf'", "]", "=", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "newdict", "[", "'input_voxel'", "]", "=", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "\n", "\n", "#augment data", "\n", "", "permutation_list", "=", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "1", ",", "2", ",", "0", "]", ",", "[", "2", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "reversal_list", "=", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", "\n", "if", "aug_permutation", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.write_ply_point_normal": [[125, 144], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "range", "range", "len", "open.write", "len", "open.write", "str", "len", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["        ", "permutation", "=", "permutation_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "permutation_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "0", "]", "\n", "", "if", "aug_reversal", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "reversal_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "0", "]", "\n", "", "if", "aug_inversion", ":", "\n", "        ", "inversion_flag", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "else", ":", "\n", "        ", "inversion_flag", "=", "0", "\n", "\n", "\n", "", "if", "reversal", "[", "0", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_x_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.read_intersectionpn_file_as_2d_array": [[146, 163], ["open", "open.readline().strip", "list", "numpy.array", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "range", "fp.readline.startswith", "IOError", "map", "list", "open.read", "len", "separated.append", "open.readline", "map", "numpy.sum", "numpy.ascontiguousarray", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline"], "function", ["None"], ["        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_y_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "", "if", "reversal", "[", "2", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_z_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "\n", "\n", "", "", "if", "permutation", "==", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.read_sdf_file_as_3d_array": [[165, 176], ["open", "open.readline().strip", "list", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "fp.readline.startswith", "IOError", "map", "open.read", "open.readline", "open.readline().strip().split", "open.readline().strip", "open.readline"], "function", ["None"], ["            ", "newdict", "[", "k", "]", "=", "np", ".", "transpose", "(", "newdict", "[", "k", "]", ",", "permutation", ")", "\n", "\n", "", "olddict", "=", "newdict", "\n", "newdict", "=", "{", "}", "\n", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "            ", "newdict", "[", "'input_sdf'", "]", "=", "olddict", "[", "'input_sdf'", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "newdict", "[", "'input_voxel'", "]", "=", "olddict", "[", "'input_voxel'", "]", "\n", "\n", "", "if", "out_bool", ":", "\n", "            ", "newdict", "[", "'int_V_signs'", "]", "=", "olddict", "[", "'int_V_signs'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_NDC.utils.read_binvox_file_as_3d_array": [[180, 209], ["open", "open.readline().strip", "list", "list", "open.readline", "numpy.frombuffer", "numpy.repeat().astype", "np.transpose.reshape", "numpy.ascontiguousarray", "open.close", "fp.readline.startswith", "IOError", "map", "map", "list", "open.read", "numpy.transpose", "open.readline", "map", "numpy.repeat", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline", "open.readline"], "function", ["None"], ["newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "0", ",", "2", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "1", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "2", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "0", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "\n", "\n", "#store outputs", "\n", "", "", "", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "if", "inversion_flag", ":", "\n", "            ", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "1", "-", "newdict", "[", "'int_V_signs'", "]", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "newdict", "[", "'int_V_signs'", "]", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.get_gt_LOD.get_gt_from_intersectionpn": [[33, 196], ["len", "range", "print", "time.time", "os.system", "trimesh.load", "trimesh.load.sample", "numpy.random.shuffle", "utils.read_intersectionpn_file_as_2d_array", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.full", "numpy.full", "cutils.get_intersection_points_normals_in_cells", "numpy.full", "numpy.full", "range", "h5py.File", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.close", "os.remove", "q.put", "range", "len", "range", "str", "str", "len", "len", "numpy.zeros", "cutils.retrieve_intersection_points_normals_from_cells", "numpy.any", "numpy.any", "numpy.any", "numpy.sum", "numpy.mean", "scipy.linalg.lstsq", "range", "str", "str", "numpy.min", "numpy.max", "numpy.array", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "scipy.linalg.lstsq", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "scipy.linalg.lstsq"], "function", ["home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_intersectionpn_file_as_2d_array"], ["def", "get_gt_from_intersectionpn", "(", "q", ",", "name_list", ")", ":", "\n", "    ", "name_num", "=", "len", "(", "name_list", ")", "\n", "\n", "cell_voxel_size", "=", "8", "\n", "\n", "num_of_int_params", "=", "3", "\n", "num_of_float_params", "=", "3", "\n", "\n", "point_sample_num", "=", "65536", "\n", "\n", "grid_size_list", "=", "[", "32", ",", "64", "]", "\n", "LOD_gt_int", "=", "{", "}", "\n", "LOD_gt_float", "=", "{", "}", "\n", "LOD_input_sdf", "=", "{", "}", "\n", "LOD_input_voxel", "=", "{", "}", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "        ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "LOD_gt_int", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_float", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_sdf", "[", "grid_size", "]", "=", "np", ".", "ones", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "float32", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "\n", "", "for", "nid", "in", "range", "(", "name_num", ")", ":", "\n", "        ", "pid", "=", "name_list", "[", "nid", "]", "[", "0", "]", "\n", "idx", "=", "name_list", "[", "nid", "]", "[", "1", "]", "\n", "in_name", "=", "name_list", "[", "nid", "]", "[", "2", "]", "\n", "out_name", "=", "name_list", "[", "nid", "]", "[", "3", "]", "\n", "\n", "in_obj_name", "=", "in_name", "+", "\".obj\"", "\n", "in_sdf_name", "=", "in_name", "+", "\".sdf\"", "\n", "in_intersection_name", "=", "in_name", "+", "\".intersectionpn\"", "\n", "in_binvox_name", "=", "in_name", "+", "\".binvox\"", "\n", "out_hdf5_name", "=", "out_name", "+", "\".hdf5\"", "\n", "\n", "#if nid+1<name_num and os.path.exists(name_list[nid+1][3] + \".hdf5\"): continue", "\n", "#if os.path.exists(out_hdf5_name): continue", "\n", "\n", "print", "(", "pid", ",", "'  '", ",", "nid", ",", "'/'", ",", "name_num", ",", "idx", ",", "in_binvox_name", ")", "\n", "\n", "\n", "#run exe to get sdf, intersection, and binvox", "\n", "command", "=", "\"./VOXGen \"", "+", "in_obj_name", "+", "\" 1024 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./SDFGen \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "\"./IntersectionXYZpn \"", "+", "in_obj_name", "+", "\" 128 0\"", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "\n", "#read", "\n", "gt_mesh", "=", "trimesh", ".", "load", "(", "in_obj_name", ")", "\n", "gt_points", "=", "gt_mesh", ".", "sample", "(", "point_sample_num", ",", "return_index", "=", "False", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "gt_points", ")", "\n", "\n", "sdf_129", "=", "utils", ".", "read_sdf_file_as_3d_array", "(", "in_sdf_name", ")", "#128", "\n", "\n", "inter_X", ",", "inter_Y", ",", "inter_Z", "=", "utils", ".", "read_intersectionpn_file_as_2d_array", "(", "in_intersection_name", ")", "#128", "\n", "\n", "voxel_1025", "=", "utils", ".", "read_binvox_file_as_3d_array", "(", "in_binvox_name", ",", "fix_coords", "=", "False", ")", "#1024", "\n", "\n", "#compute gt", "\n", "for", "grid_size", "in", "grid_size_list", ":", "\n", "            ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "voxel_size", "=", "grid_size", "*", "cell_voxel_size", "\n", "downscale", "=", "1024", "//", "voxel_size", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "#prepare downsampled voxels and intersections", "\n", "LOD_inter_X", "=", "np", ".", "copy", "(", "inter_X", "[", "(", "inter_X", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_X", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Y", "=", "np", ".", "copy", "(", "inter_Y", "[", "(", "inter_Y", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Y", "[", ":", ",", "2", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_Z", "=", "np", ".", "copy", "(", "inter_Z", "[", "(", "inter_Z", "[", ":", ",", "0", "]", "%", "downscale", "==", "0", ")", "&", "(", "inter_Z", "[", ":", ",", "1", "]", "%", "downscale", "==", "0", ")", "]", ")", "\n", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_X", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Y", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "=", "LOD_inter_Z", "[", ":", ",", ":", "3", "]", "/", "downscale", "\n", "\n", "LOD_voxels", "=", "np", ".", "zeros", "(", "[", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", ",", "voxel_size", "+", "cell_voxel_size", "+", "1", "]", ",", "np", ".", "uint8", ")", "\n", "LOD_voxels", "[", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", ",", "0", ":", "voxel_size", "+", "1", "]", "=", "voxel_1025", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "\n", "\n", "tmp_sdf", "=", "sdf_129", "[", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", ",", "0", ":", ":", "downscale", "]", "\n", "LOD_input_sdf", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_sdf", "\n", "\n", "tmp_voxel", "=", "np", ".", "zeros", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", "]", ",", "np", ".", "uint8", ")", "\n", "cutils", ".", "get_input_voxel", "(", "voxel_1025", ",", "1024", ",", "grid_size", ",", "tmp_voxel", ")", "\n", "LOD_input_voxel", "[", "grid_size", "]", "[", ":", "]", "=", "tmp_voxel", "\n", "\n", "#prepare an efficient data structure to store intersections", "\n", "LOD_intersection_maxlen", "=", "len", "(", "LOD_inter_X", ")", "+", "len", "(", "LOD_inter_Y", ")", "+", "len", "(", "LOD_inter_Z", ")", "+", "(", "grid_size_1", "**", "3", ")", "*", "2", "\n", "LOD_intersection_pointer", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", "]", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "LOD_intersection_data", "=", "np", ".", "full", "(", "[", "LOD_intersection_maxlen", ",", "6", "]", ",", "-", "1", ",", "np", ".", "float32", ")", "\n", "cutils", ".", "get_intersection_points_normals_in_cells", "(", "LOD_inter_X", ",", "LOD_inter_Y", ",", "LOD_inter_Z", ",", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ")", "\n", "\n", "#prepare arrays to store ground truth", "\n", "LOD_gt_tmp_int", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_int_params", "]", ",", "0", ",", "np", ".", "uint8", ")", "\n", "LOD_gt_tmp_float", "=", "np", ".", "full", "(", "[", "grid_size_1", ",", "grid_size_1", ",", "grid_size_1", ",", "num_of_float_params", "]", ",", "-", "10", ",", "np", ".", "float32", ")", "\n", "\n", "\n", "# ----- get_gt -----", "\n", "for", "i", "in", "range", "(", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "grid_size", ")", ":", "\n", "                    ", "for", "k", "in", "range", "(", "grid_size", ")", ":", "\n", "                            ", "reference_V", "=", "np", ".", "zeros", "(", "[", "256", ",", "6", "]", ",", "np", ".", "float32", ")", "\n", "reference_V_len", "=", "cutils", ".", "retrieve_intersection_points_normals_from_cells", "(", "grid_size_1", ",", "LOD_intersection_pointer", ",", "LOD_intersection_data", ",", "i", ",", "j", ",", "k", ",", "reference_V", ")", "\n", "if", "reference_V_len", "==", "0", ":", "#empty", "\n", "                                ", "continue", "\n", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "0", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "2", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "1", "]", "=", "1", "\n", "", "if", "np", ".", "any", "(", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", "]", "==", "0", ")", "&", "(", "reference_V", "[", ":", "reference_V_len", ",", "1", "]", "==", "0", ")", ")", ":", "\n", "                                ", "LOD_gt_tmp_int", "[", "i", ",", "j", ",", "k", ",", "2", "]", "=", "1", "\n", "\n", "#prepare a(?,3) b(?)", "\n", "#n(x-p)=0 --> nx=np", "\n", "", "a", "=", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "\n", "b", "=", "np", ".", "sum", "(", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "3", ":", "6", "]", "*", "reference_V", "[", ":", "reference_V_len", "+", "3", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "\n", "#add regularization to avoid singular", "\n", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "mean", "(", "reference_V", "[", ":", "reference_V_len", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                    ", "if", "reg_scale", ">", "1000", ":", "break", "\n", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "if", "reg_scale", ">", "1000", ":", "\n", "                                    ", "reg_scale", "=", "1e-6", "\n", "reg_pos", "=", "np", ".", "array", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "np", ".", "float32", ")", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "if", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                        ", "tmp_scale", "=", "1", "\n", "while", "np", ".", "min", "(", "x", ")", "<", "0", "or", "np", ".", "max", "(", "x", ")", ">", "1", ":", "\n", "                                            ", "reg_scale", "=", "reg_scale", "+", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n", "x", "=", "lstsq", "(", "a", ",", "b", ")", "[", "0", "]", "\n", "\n", "", "", "", "for", "c", "in", "range", "(", "10", ")", ":", "\n", "                                    ", "tmp_scale", "=", "tmp_scale", "/", "2", "\n", "reg_scale", "=", "reg_scale", "-", "tmp_scale", "\n", "a", "[", "reference_V_len", "+", "0", ",", ":", "]", "=", "[", "reg_scale", ",", "0", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "1", ",", ":", "]", "=", "[", "0", ",", "reg_scale", ",", "0", "]", "\n", "a", "[", "reference_V_len", "+", "2", ",", ":", "]", "=", "[", "0", ",", "0", ",", "reg_scale", "]", "\n", "b", "[", "reference_V_len", ":", "reference_V_len", "+", "3", "]", "=", "reg_pos", "*", "reg_scale", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.dual_contouring_undc_test": [[5, 70], ["numpy.full", "range", "numpy.array", "range", "range", "range", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "range", "len", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "numpy.array"], "function", ["None"], ["#read sdf files produced by SDFGen", "\n", "def", "read_sdf_file_as_3d_array", "(", "name", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#sdf'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a sdf file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "#a simplified reader for binvox files", "\n", "#mostly copied from binvox_rw.py", "\n", "#https://github.com/dimatura/binvox-rw-py", "\n", "", "def", "read_binvox_file_as_3d_array", "(", "name", ",", "fix_coords", "=", "True", ")", ":", "\n", "    ", "fp", "=", "open", "(", "name", ",", "'rb'", ")", "\n", "line", "=", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ".", "startswith", "(", "b'#binvox'", ")", ":", "\n", "        ", "raise", "IOError", "(", "'Not a binvox file'", ")", "\n", "", "dims", "=", "list", "(", "map", "(", "int", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "translate", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "\n", "scale", "=", "list", "(", "map", "(", "float", ",", "fp", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "b' '", ")", "[", "1", ":", "]", ")", ")", "[", "0", "]", "\n", "line", "=", "fp", ".", "readline", "(", ")", "\n", "raw_data", "=", "np", ".", "frombuffer", "(", "fp", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "# if just using reshape() on the raw data:", "\n", "# indexing the array as array[i,j,k], the indices map into the", "\n", "# coords as:", "\n", "# i -> x", "\n", "# j -> z", "\n", "# k -> y", "\n", "# if fix_coords is true, then data is rearranged so that", "\n", "# mapping is", "\n", "# i -> x", "\n", "# j -> y", "\n", "# k -> z", "\n", "values", ",", "counts", "=", "raw_data", "[", ":", ":", "2", "]", ",", "raw_data", "[", "1", ":", ":", "2", "]", "\n", "data", "=", "np", ".", "repeat", "(", "values", ",", "counts", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "data", "=", "data", ".", "reshape", "(", "dims", ")", "\n", "if", "fix_coords", ":", "\n", "        ", "data", "=", "np", ".", "transpose", "(", "data", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "", "data", "=", "np", ".", "ascontiguousarray", "(", "data", ",", "np", ".", "uint8", ")", "\n", "fp", ".", "close", "(", ")", "\n", "return", "data", "\n", "\n", "\n", "", "def", "read_data_input_only", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "if", "is_undc", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "int32", ")", "\n", "", "else", ":", "\n", "            ", "LOD_gt_int", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "1", "]", ",", "np", ".", "int32", ")", "\n", "", "", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "np", ".", "zeros", "(", "[", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "grid_size", "+", "1", ",", "3", "]", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.write_obj_triangle": [[73, 80], ["open", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "int", "str", "str", "int", "str", "str", "int"], "function", ["None"], ["", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n", "\n", "", "def", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", ")", ":", "\n", "    ", "hdf5_file", "=", "h5py", ".", "File", "(", "hdf5_dir", ",", "'r'", ")", "\n", "if", "out_bool", ":", "\n", "        ", "LOD_gt_int", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_int\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.write_ply_triangle": [[81, 97], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "range", "open.close", "len", "open.write", "len", "open.write", "str", "str", "len", "len", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "else", ":", "\n", "        ", "LOD_gt_int", "=", "None", "\n", "", "if", "out_float", ":", "\n", "        ", "LOD_gt_float", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_float\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "LOD_gt_float", "=", "None", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_sdf\"", "]", "[", ":", "]", "\n", "LOD_input", "=", "LOD_input", "*", "grid_size", "#denormalize", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "str", "(", "grid_size", ")", "+", "\"_voxel\"", "]", "[", ":", "]", "\n", "", "elif", "input_type", "==", "\"pointcloud\"", "or", "input_type", "==", "\"noisypc\"", ":", "\n", "        ", "LOD_input", "=", "hdf5_file", "[", "\"pointcloud\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LOD_input", "=", "(", "LOD_input", "+", "0.5", ")", "*", "grid_size", "#denormalize", "\n", "", "hdf5_file", ".", "close", "(", ")", "\n", "return", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "\n", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.write_ply_point": [[99, 111], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "range", "open.close", "len", "open.write", "str", "len", "str", "str", "str"], "function", ["None"], ["", "def", "read_and_augment_data_ndc", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "aug_permutation", "=", "True", ",", "aug_reversal", "=", "True", ",", "aug_inversion", "=", "True", ")", ":", "\n", "    ", "grid_size_1", "=", "grid_size", "+", "1", "\n", "\n", "#read input hdf5", "\n", "LOD_gt_int", ",", "LOD_gt_float", ",", "LOD_input", "=", "read_data", "(", "hdf5_dir", ",", "grid_size", ",", "input_type", ",", "out_bool", ",", "out_float", ",", "is_undc", "=", "False", ")", "\n", "\n", "newdict", "=", "{", "}", "\n", "\n", "if", "out_bool", ":", "\n", "        ", "newdict", "[", "'int_V_signs'", "]", "=", "LOD_gt_int", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "        ", "newdict", "[", "'float_center_x_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "0", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.write_ply_point_normal": [[112, 131], ["open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "range", "range", "len", "open.write", "len", "open.write", "str", "len", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["newdict", "[", "'float_center_y_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "1", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "LOD_gt_float", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", ",", "2", "]", "\n", "\n", "", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "        ", "newdict", "[", "'input_sdf'", "]", "=", "LOD_input", "[", ":", ",", ":", ",", ":", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "        ", "newdict", "[", "'input_voxel'", "]", "=", "LOD_input", "[", ":", "-", "1", ",", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "\n", "\n", "#augment data", "\n", "", "permutation_list", "=", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "1", ",", "2", ",", "0", "]", ",", "[", "2", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "reversal_list", "=", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", "\n", "if", "aug_permutation", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "permutation_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "permutation", "=", "permutation_list", "[", "0", "]", "\n", "", "if", "aug_reversal", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "reversal_list", ")", ")", "]", "\n", "", "else", ":", "\n", "        ", "reversal", "=", "reversal_list", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_intersectionpn_file_as_2d_array": [[133, 150], ["open", "open.readline().strip", "list", "numpy.array", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "range", "fp.readline.startswith", "IOError", "map", "list", "open.read", "len", "separated.append", "open.readline", "map", "numpy.sum", "numpy.ascontiguousarray", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline"], "function", ["None"], ["        ", "inversion_flag", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "else", ":", "\n", "        ", "inversion_flag", "=", "0", "\n", "\n", "\n", "", "if", "reversal", "[", "0", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_x_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "", "", "if", "reversal", "[", "1", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_y_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_sdf_file_as_3d_array": [[152, 163], ["open", "open.readline().strip", "list", "open.readline", "numpy.frombuffer", "data.reshape.reshape", "open.close", "fp.readline.startswith", "IOError", "map", "open.read", "open.readline", "open.readline().strip().split", "open.readline().strip", "open.readline"], "function", ["None"], ["", "", "if", "reversal", "[", "2", "]", ":", "\n", "        ", "for", "k", "in", "newdict", ":", "#reverse", "\n", "            ", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "out_float", ":", "\n", "            ", "k", "=", "'float_center_z_'", "\n", "mask", "=", "(", "newdict", "[", "k", "]", ">=", "0", ")", "\n", "newdict", "[", "k", "]", "=", "newdict", "[", "k", "]", "*", "(", "1", "-", "mask", ")", "+", "(", "1", "-", "newdict", "[", "k", "]", ")", "*", "mask", "\n", "\n", "\n", "", "", "if", "permutation", "==", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.czq142857_NDC.get_groundtruth_UNDC_augmented.utils.read_binvox_file_as_3d_array": [[167, 196], ["open", "open.readline().strip", "list", "list", "open.readline", "numpy.frombuffer", "numpy.repeat().astype", "np.transpose.reshape", "numpy.ascontiguousarray", "open.close", "fp.readline.startswith", "IOError", "map", "map", "list", "open.read", "numpy.transpose", "open.readline", "map", "numpy.repeat", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip().split", "open.readline().strip", "open.readline().strip", "open.readline().strip", "open.readline", "open.readline", "open.readline"], "function", ["None"], ["", "olddict", "=", "newdict", "\n", "newdict", "=", "{", "}", "\n", "if", "input_type", "==", "\"sdf\"", "or", "input_type", "==", "\"udf\"", ":", "\n", "            ", "newdict", "[", "'input_sdf'", "]", "=", "olddict", "[", "'input_sdf'", "]", "\n", "", "elif", "input_type", "==", "\"voxel\"", ":", "\n", "            ", "newdict", "[", "'input_voxel'", "]", "=", "olddict", "[", "'input_voxel'", "]", "\n", "\n", "", "if", "out_bool", ":", "\n", "            ", "newdict", "[", "'int_V_signs'", "]", "=", "olddict", "[", "'int_V_signs'", "]", "\n", "\n", "", "if", "out_float", ":", "\n", "            ", "if", "permutation", "==", "[", "0", ",", "2", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "0", ",", "2", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "1", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "1", ",", "2", ",", "0", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_y_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_z_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n", "", "elif", "permutation", "==", "[", "2", ",", "0", ",", "1", "]", ":", "\n", "                ", "newdict", "[", "'float_center_x_'", "]", "=", "olddict", "[", "'float_center_z_'", "]", "\n", "newdict", "[", "'float_center_y_'", "]", "=", "olddict", "[", "'float_center_x_'", "]", "\n"]]}