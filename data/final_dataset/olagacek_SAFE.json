{"home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.Variable.__init__": [[13, 17], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "name", ",", "index", ")", ":", "\n", "\t\t", "self", ".", "original_name", "=", "name", "\n", "self", ".", "original_index", "=", "index", "\n", "self", ".", "new_names", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.NumericVariable.__init__": [[21, 28], ["SafeTransformer.Variable.__init__"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.__init__"], ["\t", "def", "__init__", "(", "self", ",", "name", ",", "index", ",", "penalty", ",", "pelt_model", ",", "no_changepoint_strategy", "=", "'median'", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "name", ",", "index", ")", "\n", "self", ".", "changepoints", "=", "[", "]", "\n", "self", ".", "penalty", "=", "penalty", "\n", "self", ".", "pelt_model", "=", "pelt_model", "\n", "self", ".", "changepoint_values", "=", "[", "]", "\n", "self", ".", "no_changepoint_strategy", "=", "no_changepoint_strategy", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.NumericVariable._get_partial_dependence": [[29, 45], ["numpy.linspace", "X.copy", "min", "max", "axes.append", "hasattr", "numpy.mean", "pdp.append", "numpy.array", "model.predict_proba", "model.predict"], "methods", ["None"], ["", "def", "_get_partial_dependence", "(", "self", ",", "model", ",", "X", ",", "grid_resolution", "=", "1000", ")", ":", "\n", "\t\t", "axes", "=", "[", "]", "\n", "pdp", "=", "[", "]", "\n", "points", "=", "np", ".", "linspace", "(", "min", "(", "X", ".", "loc", "[", ":", ",", "self", ".", "original_name", "]", ")", ",", "max", "(", "\n", "X", ".", "loc", "[", ":", ",", "self", ".", "original_name", "]", ")", ",", "grid_resolution", ")", "\n", "X_copy", "=", "X", ".", "copy", "(", ")", "\n", "for", "point", "in", "points", ":", "\n", "\t\t\t", "axes", ".", "append", "(", "point", ")", "\n", "X_copy", ".", "loc", "[", ":", ",", "self", ".", "original_name", "]", "=", "point", "\n", "if", "(", "hasattr", "(", "model", ",", "'predict_proba'", ")", ")", ":", "\n", "\t\t\t\t", "predictions", "=", "model", ".", "predict_proba", "(", "X_copy", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "predictions", "=", "model", ".", "predict", "(", "X_copy", ")", "\n", "", "val", "=", "np", ".", "mean", "(", "predictions", ",", "axis", "=", "0", ")", "\n", "pdp", ".", "append", "(", "val", ")", "\n", "", "return", "np", ".", "array", "(", "pdp", ")", ",", "axes", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.NumericVariable.fit": [[46, 60], ["SafeTransformer.NumericVariable._get_partial_dependence", "ruptures.Pelt().fit", "ruptures.Pelt().fit.predict", "print", "ruptures.Pelt", "numpy.median", "range", "str", "range", "len", "len", "str"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable._get_partial_dependence", "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.fit"], ["", "def", "fit", "(", "self", ",", "model", ",", "X", ",", "verbose", ")", ":", "\n", "\t\t", "if", "verbose", ":", "\n", "\t\t\t", "print", "(", "'Fitting variable:'", "+", "str", "(", "self", ".", "original_name", ")", ")", "\n", "", "pdp", ",", "axis", "=", "self", ".", "_get_partial_dependence", "(", "model", ",", "X", ",", "grid_resolution", "=", "1000", ")", "\n", "algo", "=", "rpt", ".", "Pelt", "(", "model", "=", "self", ".", "pelt_model", ")", ".", "fit", "(", "pdp", ")", "\n", "self", ".", "changepoints", "=", "algo", ".", "predict", "(", "pen", "=", "self", ".", "penalty", ")", "\n", "self", ".", "changepoint_values", "=", "[", "axis", "[", "i", "]", "for", "i", "in", "self", ".", "changepoints", "[", ":", "-", "1", "]", "]", "\n", "if", "not", "self", ".", "changepoint_values", "and", "self", ".", "no_changepoint_strategy", "==", "'median'", ":", "\n", "\t\t\t", "self", ".", "changepoint_values", "=", "[", "np", ".", "median", "(", "X", ")", "]", "\n", "", "changepoint_names", "=", "[", "'%.2f'", "%", "self", ".", "changepoint_values", "[", "i", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "changepoint_values", ")", ")", "]", "+", "[", "'Inf'", "]", "\n", "self", ".", "new_names", "=", "[", "str", "(", "self", ".", "original_name", ")", "+", "\"_[\"", "+", "changepoint_names", "[", "i", "]", "+", "\", \"", "+", "\n", "changepoint_names", "[", "i", "+", "1", "]", "+", "\")\"", "for", "i", "in", "range", "(", "len", "(", "changepoint_names", ")", "-", "1", ")", "]", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.NumericVariable.transform": [[61, 71], ["numpy.zeros", "enumerate", "pandas.DataFrame", "print", "len", "list", "len", "len", "str", "filter"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ",", "verbose", ")", ":", "\n", "\t\t", "if", "verbose", ":", "\n", "\t\t\t", "print", "(", "'Transforming variable:'", "+", "str", "(", "self", ".", "original_name", ")", ")", "\n", "", "new_data", "=", "[", "len", "(", "list", "(", "filter", "(", "lambda", "e", ":", "x", ">=", "e", ",", "self", ".", "changepoint_values", ")", ")", ")", "\n", "for", "x", "in", "X", ".", "loc", "[", ":", ",", "self", ".", "original_name", "]", "]", "\n", "ret", "=", "np", ".", "zeros", "(", "[", "len", "(", "new_data", ")", ",", "len", "(", "self", ".", "changepoint_values", ")", "]", ")", "\n", "for", "row_num", ",", "val", "in", "enumerate", "(", "new_data", ")", ":", "\n", "\t\t\t", "if", "val", ">", "0", ":", "\n", "\t\t\t\t", "ret", "[", "row_num", ",", "val", "-", "1", "]", "=", "1", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "ret", ",", "columns", "=", "self", ".", "new_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.NumericVariable.summary": [[72, 82], ["range", "range", "len", "len"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", ":", "\n", "\t\t", "summary", "=", "'Numerical Variable '", "+", "self", ".", "original_name", "+", "'\\n'", "\n", "summary", "+=", "'Selected intervals:\\n'", "\n", "changepoint_names", "=", "[", "'%.2f'", "%", "self", ".", "changepoint_values", "[", "i", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "changepoint_values", ")", ")", "]", "+", "[", "'Inf'", "]", "\n", "interval_names", "=", "[", "'\\t[-Inf, '", "+", "changepoint_names", "[", "0", "]", "+", "')'", "]", "\n", "interval_names", "+=", "[", "\"\\t[\"", "+", "changepoint_names", "[", "i", "]", "+", "\", \"", "+", "\n", "changepoint_names", "[", "i", "+", "1", "]", "+", "\")\"", "for", "i", "in", "range", "(", "len", "(", "changepoint_names", ")", "-", "1", ")", "]", "\n", "summary", "+=", "'\\n'", ".", "join", "(", "interval_names", ")", "\n", "return", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable.__init__": [[86, 95], ["SafeTransformer.Variable.__init__", "SafeTransformer.CategoricalVariable.levels.sort"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.__init__"], ["\t", "def", "__init__", "(", "self", ",", "name", ",", "index", ",", "dummy_names", ",", "levels", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "name", ",", "index", ")", "\n", "self", ".", "dummy_names", "=", "dummy_names", "\n", "self", ".", "axes", "=", "None", "\n", "self", ".", "clusters", "=", "None", "\n", "self", ".", "Z", "=", "None", "\n", "self", ".", "pdp", "=", "None", "\n", "self", ".", "levels", "=", "levels", "\n", "self", ".", "levels", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable.fit": [[96, 137], ["SafeTransformer.CategoricalVariable._get_partial_dependence", "scipy.cluster.hierarchy.ward", "print", "numpy.reshape", "scipy.cluster.hierarchy.cut_tree", "range", "len", "enumerate", "SafeTransformer.CategoricalVariable.new_names.append", "kneed.KneeLocator.KneeLocator", "str", "len", "numpy.unique", "range", "scipy.cluster.hierarchy.cut_tree", "range", "len", "enumerate", "SafeTransformer.CategoricalVariable.new_names.append", "names.append", "names.append", "numpy.unique", "names.append", "names.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable._get_partial_dependence"], ["", "def", "fit", "(", "self", ",", "model", ",", "X", ",", "verbose", ")", ":", "\n", "\t\t", "if", "verbose", ":", "\n", "\t\t\t", "print", "(", "'Fitting variable:'", "+", "str", "(", "self", ".", "original_name", ")", ")", "\n", "", "pdp", ",", "names", "=", "self", ".", "_get_partial_dependence", "(", "model", ",", "X", ")", "\n", "self", ".", "pdp", "=", "pdp", "\n", "self", ".", "axes", "=", "names", "\n", "if", "pdp", ".", "ndim", "==", "1", ":", "\n", "\t\t\t", "arr", "=", "np", ".", "reshape", "(", "pdp", ",", "(", "len", "(", "pdp", ")", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "arr", "=", "pdp", "\n", "", "self", ".", "Z", "=", "ward", "(", "arr", ")", "\n", "if", "pdp", ".", "shape", "[", "0", "]", "==", "3", ":", "\n", "\t\t\t", "self", ".", "clusters", "=", "cut_tree", "(", "\n", "self", ".", "Z", ",", "height", "=", "self", ".", "Z", "[", "0", ",", "2", "]", "-", "sys", ".", "float_info", ".", "epsilon", ")", "\n", "self", ".", "new_names", "=", "[", "]", "\n", "for", "cluster", "in", "range", "(", "len", "(", "np", ".", "unique", "(", "self", ".", "clusters", ")", ")", ")", ":", "\n", "\t\t\t\t", "names", "=", "[", "]", "\n", "for", "idx", ",", "c_val", "in", "enumerate", "(", "self", ".", "clusters", ")", ":", "\n", "\t\t\t\t\t", "if", "c_val", "==", "cluster", ":", "\n", "\t\t\t\t\t\t", "if", "idx", "==", "0", ":", "\n", "\t\t\t\t\t\t\t", "names", ".", "append", "(", "'base'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "names", ".", "append", "(", "self", ".", "dummy_names", "[", "idx", "-", "1", "]", "[", "len", "(", "self", ".", "original_name", ")", "+", "1", ":", "]", ")", "\n", "", "", "", "self", ".", "new_names", ".", "append", "(", "self", ".", "original_name", "+", "'_'", "+", "\"_\"", ".", "join", "(", "names", ")", ")", "\n", "", "", "elif", "pdp", ".", "shape", "[", "0", "]", ">", "3", ":", "\n", "\t\t\t", "kneed", "=", "KneeLocator", "(", "\n", "range", "(", "self", ".", "Z", ".", "shape", "[", "0", "]", ")", ",", "self", ".", "Z", "[", ":", ",", "2", "]", ",", "direction", "=", "'increasing'", ",", "curve", "=", "'convex'", ")", "\n", "if", "kneed", ".", "knee", "is", "not", "None", ":", "\n", "\t\t\t\t", "self", ".", "clusters", "=", "cut_tree", "(", "\n", "self", ".", "Z", ",", "height", "=", "self", ".", "Z", "[", "kneed", ".", "knee", "+", "1", ",", "2", "]", "-", "sys", ".", "float_info", ".", "epsilon", ")", "\n", "self", ".", "new_names", "=", "[", "]", "\n", "for", "cluster", "in", "range", "(", "len", "(", "np", ".", "unique", "(", "self", ".", "clusters", ")", ")", ")", ":", "\n", "\t\t\t\t\t", "names", "=", "[", "]", "\n", "for", "idx", ",", "c_val", "in", "enumerate", "(", "self", ".", "clusters", ")", ":", "\n", "\t\t\t\t\t\t", "if", "c_val", "==", "cluster", ":", "\n", "\t\t\t\t\t\t\t", "if", "idx", "==", "0", ":", "\n", "\t\t\t\t\t\t\t\t", "names", ".", "append", "(", "'base'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t\t", "names", ".", "append", "(", "self", ".", "dummy_names", "[", "idx", "-", "1", "]", "[", "len", "(", "self", ".", "original_name", ")", "+", "1", ":", "]", ")", "\n", "", "", "", "self", ".", "new_names", ".", "append", "(", "self", ".", "original_name", "+", "'_'", "+", "\"_\"", ".", "join", "(", "names", ")", ")", "\n", "", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable.transform": [[138, 153], ["pandas.get_dummies", "print", "numpy.zeros", "range", "pandas.DataFrame", "len", "str", "numpy.unique", "numpy.sum", "numpy.argwhere"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ",", "verbose", ")", ":", "\n", "\t\t", "if", "verbose", ":", "\n", "\t\t\t", "print", "(", "'Transforming variable:'", "+", "str", "(", "self", ".", "original_name", ")", ")", "\n", "", "dummies", "=", "pd", ".", "get_dummies", "(", "\n", "X", ".", "loc", "[", ":", ",", "self", ".", "original_name", "]", ",", "prefix", "=", "self", ".", "original_name", ",", "drop_first", "=", "True", ")", "\n", "if", "self", ".", "clusters", "is", "not", "None", ":", "\n", "\t\t\t", "ret_len", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "clusters", ")", ")", "-", "1", "\n", "ret", "=", "np", ".", "zeros", "(", "[", "X", ".", "shape", "[", "0", "]", ",", "ret_len", "]", ")", "\n", "for", "row_num", "in", "range", "(", "dummies", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t", "if", "not", "np", ".", "sum", "(", "dummies", ".", "iloc", "[", "row_num", ",", ":", "]", ")", "==", "0", ":", "\n", "\t\t\t\t\t", "idx", "=", "np", ".", "argwhere", "(", "dummies", ".", "iloc", "[", "row_num", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "if", "self", ".", "clusters", "[", "idx", "+", "1", "]", ">", "0", ":", "\n", "\t\t\t\t\t\t", "ret", "[", "row_num", ",", "self", ".", "clusters", "[", "idx", "+", "1", "]", "-", "1", "]", "=", "1", "\n", "", "", "", "return", "pd", ".", "DataFrame", "(", "ret", ",", "columns", "=", "self", ".", "new_names", "[", "1", ":", "]", ")", "\n", "", "return", "dummies", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable._get_partial_dependence": [[154, 177], ["X.copy", "axes.append", "hasattr", "numpy.mean", "pdp.append", "model.predict_proba", "model.predict", "axes.append", "hasattr", "numpy.mean", "pdp.append", "numpy.array", "model.predict_proba", "model.predict"], "methods", ["None"], ["", "def", "_get_partial_dependence", "(", "self", ",", "model", ",", "X", ")", ":", "\n", "\t\t", "pdp", "=", "[", "]", "\n", "axes", "=", "[", "]", "\n", "X_copy", "=", "X", ".", "copy", "(", ")", "\n", "axes", ".", "append", "(", "'base'", ")", "\n", "X_copy", ".", "loc", "[", ":", ",", "self", ".", "dummy_names", "]", "=", "0", "\n", "if", "(", "hasattr", "(", "model", ",", "'predict_proba'", ")", ")", ":", "\n", "\t\t\t", "predictions", "=", "model", ".", "predict_proba", "(", "X_copy", ")", "\n", "", "else", ":", "\n", "\t\t\t", "predictions", "=", "model", ".", "predict", "(", "X_copy", ")", "\n", "", "val", "=", "np", ".", "mean", "(", "predictions", ",", "axis", "=", "0", ")", "\n", "pdp", ".", "append", "(", "val", ")", "\n", "for", "colname", "in", "self", ".", "dummy_names", ":", "\n", "\t\t\t", "axes", ".", "append", "(", "colname", ")", "\n", "X_copy", ".", "loc", "[", ":", ",", "self", ".", "dummy_names", "]", "=", "0", "\n", "X_copy", ".", "loc", "[", ":", ",", "colname", "]", "=", "1", "\n", "if", "(", "hasattr", "(", "model", ",", "'predict_proba'", ")", ")", ":", "\n", "\t\t\t\t", "predictions", "=", "model", ".", "predict_proba", "(", "X_copy", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "predictions", "=", "model", ".", "predict", "(", "X_copy", ")", "\n", "", "val", "=", "np", ".", "mean", "(", "predictions", ",", "axis", "=", "0", ")", "\n", "pdp", ".", "append", "(", "val", ")", "\n", "", "return", "np", ".", "array", "(", "pdp", ")", ",", "axes", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.CategoricalVariable.summary": [[178, 193], ["summary.rstrip", "range", "len", "numpy.unique", "list", "names.index", "numpy.argwhere", "len"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", ":", "\n", "\t\t", "summary", "=", "'Categorical Variable '", "+", "self", ".", "original_name", "+", "'\\n'", "\n", "summary", "+=", "'Created variable levels:\\n'", "\n", "if", "self", ".", "clusters", "is", "None", ":", "\n", "\t\t\t", "for", "level", "in", "self", ".", "levels", ":", "\n", "\t\t\t\t", "summary", "+=", "'\\t'", "+", "level", "+", "' -> '", "+", "level", "+", "'\\n'", "\n", "", "", "else", ":", "\n", "\t\t\t", "for", "i", "in", "range", "(", "len", "(", "np", ".", "unique", "(", "self", ".", "clusters", ")", ")", ")", ":", "\n", "\t\t\t\t", "names", "=", "[", "self", ".", "axes", "[", "index", "]", "\n", "for", "index", "in", "list", "(", "np", ".", "argwhere", "(", "self", ".", "clusters", "==", "i", ")", "[", ":", ",", "0", "]", ")", "]", "\n", "if", "'base'", "in", "names", ":", "\n", "\t\t\t\t\t", "names", "[", "names", ".", "index", "(", "'base'", ")", "]", "=", "self", ".", "original_name", "+", "'_'", "+", "self", ".", "levels", "[", "0", "]", "\n", "", "names", "=", "[", "x", "[", "len", "(", "self", ".", "original_name", ")", "+", "1", ":", "]", "for", "x", "in", "names", "]", "\n", "summary", "+=", "'\\t'", "+", "', '", ".", "join", "(", "names", ")", "+", "' -> '", "+", "'_'", ".", "join", "(", "names", ")", "+", "'\\n'", "\n", "", "", "return", "summary", ".", "rstrip", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.__init__": [[211, 230], ["ValueError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "model", ",", "penalty", "=", "3", ",", "pelt_model", "=", "'l2'", ",", "model_params", "=", "{", "}", ",", "no_changepoint_strategy", "=", "'median'", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tInitialize new transformer instance\n\n\t\t:param model: Surrogate model. If model is not fitted, y parameter must be passed to fit method. Regression models should implement predict method, while classification models should implement predict_proba for getting predictions. If predict_proba  methode exists model is assumed to be a classification model\n\t\t:param penalty: Penalty corresponding to adding a new changepoint. The higher the value of penalty the smaller nunber of levels of transformed variableswill be created (Default value = 3)\n\t\t:param pelt_model: Cost function used in pelt algorith, possible values: 'l2', 'l1', 'rbf' (Default value = 'l2')\n\t\t:param model_params: Dictionary of parameters passed to fit method of surrogate model. Only used if passed surrogate model is not alreedy fitted.\n\t\t:param no_changepoint_strategy: String specifying strategy to take, when no changepoint was detected. Should be one of: 'median', 'no_value'. If median is chosen, then there will be one changepoint set to 'median' value of a column. If 'no_value' is specified column will be removed. Default value = 'median'.\n\t\t\"\"\"", "\n", "self", ".", "variables", "=", "[", "]", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "penalty", "=", "penalty", "\n", "self", ".", "pelt_model", "=", "pelt_model", "\n", "self", ".", "model_params", "=", "model_params", "\n", "self", ".", "is_fitted", "=", "False", "\n", "if", "no_changepoint_strategy", "!=", "'median'", "and", "no_changepoint_strategy", "!=", "'no_value'", ":", "\n", "\t\t\t", "raise", "ValueError", "(", "'Incorrect no changepoint strategy value. Should be one of: median or no_value.'", ")", "\n", "", "self", ".", "no_changepoint_strategy", "=", "no_changepoint_strategy", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer._is_model_fitted": [[231, 239], ["SafeTransformer.SafeTransformer.model.predict", "data.head"], "methods", ["None"], ["", "def", "_is_model_fitted", "(", "self", ",", "data", ")", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "self", ".", "model", ".", "predict", "(", "data", ".", "head", "(", "1", ")", ")", "\n", "return", "True", "\n", "", "except", "NotFittedError", "as", "e", ":", "\n", "\t\t\t", "return", "False", "\n", "", "except", ":", "\n", "\t\t\t", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.fit": [[240, 269], ["list", "enumerate", "isinstance", "ValueError", "RuntimeError", "SafeTransformer.SafeTransformer._is_model_fitted", "SafeTransformer.SafeTransformer.model.fit", "variable.fit", "str", "numpy.unique", "pandas.get_dummies", "pandas.concat.columns.get_loc", "pandas.concat", "SafeTransformer.SafeTransformer.variables.append", "SafeTransformer.SafeTransformer.variables.append", "SafeTransformer.CategoricalVariable", "SafeTransformer.NumericVariable", "list", "range", "range", "len"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer._is_model_fitted", "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.fit", "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.fit"], ["", "", "def", "fit", "(", "self", ",", "X", ",", "y", "=", "None", ",", "verbose", "=", "False", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tFit the transformer. For continous variables intervals for which reponse of surrogate models does not vary are found. For categorical variables average reponses foreach level are found, and then levels with similiar reponse leveles are marked for merging.\n\t\t\n\t\t:param X: A pandas data frame of predictors. Columns of dtypes category and object are assumed to be categorical variables, while other columns will be treatedas continous variables\n\t\t:param y:  A vector of response. Only used if passed surrogate model is not already fitted to fit the surrogate model.(Default value = None)\n\t\t:param verbose:  If true logs will be printed.(Default value = False)\n\n\t\t\"\"\"", "\n", "if", "not", "isinstance", "(", "X", ",", "pd", ".", "DataFrame", ")", ":", "\n", "\t\t\t", "raise", "ValueError", "(", "\"Data must be a pandas DataFrame\"", ")", "\n", "", "if", "self", ".", "is_fitted", ":", "\n", "\t\t\t", "raise", "RuntimeError", "(", "'Model is already fitted'", ")", "\n", "", "colnames", "=", "list", "(", "X", ")", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "colnames", ")", ":", "\n", "\t\t\t", "if", "str", "(", "X", ".", "loc", "[", ":", ",", "name", "]", ".", "dtype", ")", "in", "self", ".", "categorical_dtypes", ":", "\n", "\t\t\t\t", "levels", "=", "np", ".", "unique", "(", "X", ".", "loc", "[", ":", ",", "name", "]", ")", "\n", "dummies", "=", "pd", ".", "get_dummies", "(", "X", ".", "loc", "[", ":", ",", "name", "]", ",", "prefix", "=", "name", ",", "drop_first", "=", "True", ")", "\n", "dummy_index", "=", "X", ".", "columns", ".", "get_loc", "(", "name", ")", "\n", "X", "=", "pd", ".", "concat", "(", "[", "X", ".", "iloc", "[", ":", ",", "range", "(", "dummy_index", ")", "]", ",", "dummies", ",", "X", ".", "iloc", "[", ":", ",", "range", "(", "dummy_index", "+", "1", ",", "len", "(", "X", ".", "columns", ")", ")", "]", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "variables", ".", "append", "(", "CategoricalVariable", "(", "name", ",", "idx", ",", "list", "(", "dummies", ")", ",", "levels", "=", "levels", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "variables", ".", "append", "(", "NumericVariable", "(", "name", ",", "idx", ",", "self", ".", "penalty", ",", "self", ".", "pelt_model", ",", "self", ".", "no_changepoint_strategy", ")", ")", "\n", "", "", "if", "not", "self", ".", "_is_model_fitted", "(", "X", ")", ":", "\n", "\t\t\t", "self", ".", "model", ".", "fit", "(", "X", ",", "y", ",", "**", "self", ".", "model_params", ")", "\n", "", "for", "variable", "in", "self", ".", "variables", ":", "\n", "\t\t\t", "variable", ".", "fit", "(", "self", ".", "model", ",", "X", ",", "verbose", "=", "verbose", ")", "\n", "", "self", ".", "is_fitted", "=", "True", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.transform": [[270, 282], ["pandas.concat", "RuntimeError", "var.transform().reset_index", "var.transform"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.transform"], ["", "def", "transform", "(", "self", ",", "X", ",", "verbose", "=", "False", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tTransforms a data frame of predictors. Continous variables are transformed into a discrete variable, with each level corresponding to an interval of originalvariable for which reponses of surrogate model did not vary. For categorical variables levels with similiar model response will be merged into one new level.All variable are one-hot encoded in p-1 columns where p is the number of levels (first level is represented by having zeros in each column).\n\t\t\n\t\t:param X: A pandas date frame to be transformed. Should have the same columns as the one passed  to fit.\n\t\t:param verbose:  If true logs will be printed.(Default value = False)\n\n\t\t\"\"\"", "\n", "if", "not", "self", ".", "is_fitted", ":", "\n", "\t\t\t", "raise", "RuntimeError", "(", "'Model is not fitted'", ")", "\n", "", "vals", "=", "[", "var", ".", "transform", "(", "X", ",", "verbose", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "for", "var", "in", "self", ".", "variables", "]", "\n", "return", "pd", ".", "concat", "(", "vals", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.summary": [[283, 295], ["print", "var.summary", "var.summary", "filter"], "methods", ["home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.summary", "home.repos.pwc.inspect_result.olagacek_SAFE.SafeTransformer.SafeTransformer.SafeTransformer.summary"], ["", "def", "summary", "(", "self", ",", "variable_name", "=", "None", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tDescribes how variables were transformed in human readable way. For continous variables intervals corresponding to levels of newly created categorical variable are printed.For categorical variables information about which levels were merged is shown.\n\t\t\n\t\t:param variable_name: If None summary for all variables will be printed. Otherwise summary will be shown only for the selected variable.  (Default value = None)\n\n\t\t\"\"\"", "\n", "if", "variable_name", "!=", "None", ":", "\n", "\t\t\t", "summaries", "=", "[", "var", ".", "summary", "(", ")", "for", "var", "in", "filter", "(", "lambda", "var", ":", "var", ".", "original_name", "==", "variable_name", ",", "self", ".", "variables", ")", "]", "\n", "", "else", ":", "\n", "\t\t\t", "summaries", "=", "[", "var", ".", "summary", "(", ")", "for", "var", "in", "self", ".", "variables", "]", "\n", "", "print", "(", "'\\n'", ".", "join", "(", "summaries", ")", ")", "\n", "", "", ""]]}