{"home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.__init__": [[45, 67], ["model_check_noop.ModelChecker.env.reset", "model_check_noop.ModelChecker.get_order", "model_check_noop.ModelChecker.env.save", "model_check_noop.ModelChecker.history.append", "model_check_noop.HistoryEntry"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["    ", "def", "__init__", "(", "self", ",", "action_function", ",", "env", ",", "actions", ",", "noops", ",", "shield", "=", "0", ",", "render", "=", "False", ",", "verbose", "=", "False", ",", "max_frames", "=", "10000", ",", "\n", "action_repeat", "=", "0", ")", ":", "\n", "        ", "self", ".", "render", "=", "render", "\n", "self", ".", "get_order", "=", "action_function", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "num_actions", "=", "actions", "\n", "self", ".", "shield", "=", "shield", "\n", "self", ".", "history", "=", "[", "]", "\n", "self", ".", "tot_reward", "=", "0", "\n", "self", ".", "frame", "=", "0", "\n", "self", ".", "violation", "=", "\"None\"", "\n", "self", ".", "noop_violation", "=", "\"None\"", "\n", "self", ".", "noops", "=", "noops", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "max_frames", "=", "max_frames", "\n", "self", ".", "next_action", "=", "0", "\n", "self", ".", "stored_action", "=", "None", "\n", "self", ".", "action_repeat", "=", "action_repeat", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "action_list", "=", "self", ".", "get_order", "(", "obs", ")", "\n", "state", "=", "self", ".", "env", ".", "save", "(", ")", "\n", "self", ".", "history", ".", "append", "(", "HistoryEntry", "(", "state", ",", "action_list", ",", "0", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.commit_step": [[68, 71], ["model_check_noop.ModelChecker.history.pop"], "methods", ["None"], ["", "def", "commit_step", "(", "self", ")", ":", "\n", "        ", "entry", "=", "self", ".", "history", ".", "pop", "(", "0", ")", "\n", "self", ".", "tot_reward", "+=", "entry", ".", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.get_action": [[72, 85], ["None"], "methods", ["None"], ["", "def", "get_action", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "next_action", "!=", "0", ":", "\n", "            ", "self", ".", "next_action", "-=", "1", "\n", "return", "self", ".", "stored_action", "\n", "", "if", "self", ".", "frame", "<=", "self", ".", "noops", ":", "\n", "            ", "self", ".", "stored_action", "=", "0", "\n", "self", ".", "next_action", "=", "self", ".", "action_repeat", "\n", "return", "0", "\n", "", "else", ":", "\n", "            ", "current", "=", "self", ".", "history", "[", "-", "1", "]", "\n", "self", ".", "stored_action", "=", "current", ".", "action_list", "[", "current", ".", "index", "]", "\n", "self", ".", "next_action", "=", "self", ".", "action_repeat", "\n", "return", "current", ".", "action_list", "[", "current", ".", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.evaluate_step": [[86, 94], ["model_check_noop.ModelChecker.env.step", "model_check_noop.ModelChecker.env.render", "model_check_noop.ModelChecker.get_action"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.get_action"], ["", "", "def", "evaluate_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "render", ":", "\n", "            ", "self", ".", "env", ".", "render", "(", ")", "\n", "", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "self", ".", "get_action", "(", ")", ")", "\n", "if", "(", "self", ".", "frame", ">", "self", ".", "noops", "and", "self", ".", "violation", "!=", "\"None\"", ")", "or", "(", "\n", "self", ".", "frame", "<=", "self", ".", "noops", "and", "self", ".", "noop_violation", "!=", "\"None\"", ")", ":", "\n", "            ", "info", "[", "'label'", "]", "=", "False", "\n", "", "return", "obs", ",", "reward", ",", "done", ",", "info", "[", "'label'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.take_step": [[95, 100], ["model_check_noop.ModelChecker.get_order", "model_check_noop.ModelChecker.env.save", "model_check_noop.ModelChecker.history.append", "model_check_noop.HistoryEntry"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "take_step", "(", "self", ",", "obs", ",", "reward", ")", ":", "\n", "        ", "action_list", "=", "self", ".", "get_order", "(", "obs", ")", "\n", "state", "=", "self", ".", "env", ".", "save", "(", ")", "\n", "self", ".", "history", ".", "append", "(", "HistoryEntry", "(", "state", ",", "action_list", ",", "0", ",", "reward", ")", ")", "\n", "self", ".", "frame", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.next_best": [[101, 112], ["new.increment_index", "model_check_noop.ModelChecker.env.restore", "model_check_noop.ModelChecker.history.pop", "model_check_noop.ModelChecker.record_violation", "len", "len"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.HistoryEntry.increment_index", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.restore", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.record_violation"], ["", "def", "next_best", "(", "self", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "history", ")", ">", "1", "and", "self", ".", "history", "[", "-", "1", "]", ".", "index", ">=", "self", ".", "num_actions", "-", "1", ":", "\n", "            ", "self", ".", "history", ".", "pop", "(", ")", "\n", "self", ".", "frame", "-=", "1", "\n", "", "new", "=", "self", ".", "history", "[", "-", "1", "]", "\n", "new", ".", "increment_index", "(", ")", "\n", "if", "new", ".", "index", ">=", "self", ".", "num_actions", ":", "\n", "            ", "assert", "len", "(", "self", ".", "history", ")", "==", "1", "\n", "new", ".", "index", "=", "0", "\n", "self", ".", "record_violation", "(", ")", "\n", "", "self", ".", "env", ".", "restore", "(", "new", ".", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.record_violation": [[113, 120], ["print"], "methods", ["None"], ["", "def", "record_violation", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "'Property violated in all possible %d lookaheads from step %d'", "%", "(", "self", ".", "shield", ",", "self", ".", "frame", ")", ")", "\n", "", "if", "self", ".", "frame", "<=", "self", ".", "noops", ":", "\n", "            ", "self", ".", "noop_violation", "=", "self", ".", "frame", "\n", "", "else", ":", "\n", "            ", "self", ".", "violation", "=", "self", ".", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.end": [[121, 125], ["len", "model_check_noop.ModelChecker.commit_step"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.commit_step"], ["", "", "def", "end", "(", "self", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "history", ")", ">", "0", ":", "\n", "            ", "self", ".", "commit_step", "(", ")", "\n", "", "return", "self", ".", "violation", ",", "self", ".", "noop_violation", ",", "self", ".", "tot_reward", ",", "self", ".", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.max_lookahead": [[126, 128], ["len"], "methods", ["None"], ["", "def", "max_lookahead", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "history", ")", ">=", "self", ".", "shield", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.step": [[129, 143], ["model_check_noop.ModelChecker.evaluate_step", "model_check_noop.ModelChecker.next_best", "model_check_noop.ModelChecker.max_lookahead", "model_check_noop.ModelChecker.take_step", "model_check_noop.ModelChecker.record_violation", "model_check_noop.ModelChecker.commit_step", "model_check_noop.ModelChecker.end"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.evaluate_step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.next_best", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.max_lookahead", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.take_step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.record_violation", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.commit_step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.ModelChecker.end"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "obs", ",", "reward", ",", "done", ",", "unsafe", "=", "self", ".", "evaluate_step", "(", ")", "# evaluates result of taking step", "\n", "if", "unsafe", "and", "self", ".", "shield", ">", "0", ":", "\n", "            ", "self", ".", "next_best", "(", ")", "# switches to next-best option (estimated by policy) among possible deviations up to $shield steps back. Logs a violation if no other options remain.", "\n", "", "else", ":", "\n", "            ", "if", "unsafe", ":", "\n", "                ", "self", ".", "record_violation", "(", ")", "# only reached with no shielding", "\n", "", "if", "self", ".", "max_lookahead", "(", ")", ":", "# the oldest non-commited action can be safely commited since full lookahead has been done.", "\n", "                ", "self", ".", "commit_step", "(", ")", "# commits the oldest action, such that it can no longer be retracted", "\n", "", "self", ".", "take_step", "(", "obs", ",", "\n", "reward", ")", "# takes the evaluated step, but stores the state and can be retracted until the step is committed", "\n", "if", "done", "or", "self", ".", "frame", ">", "self", ".", "max_frames", ":", "\n", "                ", "return", "self", ".", "end", "(", ")", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.HistoryEntry.__init__": [[146, 151], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "state", ",", "action_list", ",", "index", ",", "reward", ")", ":", "\n", "        ", "self", ".", "state", "=", "state", "\n", "self", ".", "action_list", "=", "action_list", "\n", "self", ".", "index", "=", "index", "\n", "self", ".", "reward", "=", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.HistoryEntry.increment_index": [[152, 154], ["None"], "methods", ["None"], ["", "def", "increment_index", "(", "self", ")", ":", "\n", "        ", "self", ".", "index", "+=", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.check_noops": [[10, 42], ["prescience.get_wrapped", "time.time", "range", "gym.wrappers.Monitor.close", "gym.wrappers.Monitor", "print", "model_check_noop.ModelChecker", "violation_list.append", "noop_violation_list.append", "reward_list.append", "print", "print", "model_check_noop.ModelChecker.step", "print", "print", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.get_wrapped", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step"], ["def", "check_noops", "(", "env_str", ",", "method_str", ",", "prop_str", ",", "action_function", ",", "max_noops", "=", "29", ",", "render", "=", "False", ",", "max_frames", "=", "100000", ",", "\n", "verbose", "=", "False", ",", "min_noops", "=", "0", ",", "shield", "=", "0", ",", "demand_full_safety", "=", "False", ",", "record", "=", "False", ")", ":", "\n", "    ", "env", "=", "get_wrapped", "(", "env_str", ",", "method_str", ",", "prop_str", ")", "\n", "if", "record", ":", "\n", "        ", "env", "=", "Monitor", "(", "env", ",", "\"recording\"", ",", "force", "=", "True", ",", "video_callable", "=", "lambda", "episode_id", ":", "True", ")", "\n", "", "violation_list", "=", "[", "]", "\n", "noop_violation_list", "=", "[", "]", "\n", "reward_list", "=", "[", "]", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "'Checking if %s ever violates %s in %s, with a lookahead of %d'", "%", "(", "method_str", ",", "prop_str", ",", "env_str", ",", "shield", ")", ")", "\n", "", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "min_noops", ",", "max_noops", ")", ":", "\n", "        ", "if", "verbose", ":", "\n", "            ", "print", "(", "'Running with %d noops'", "%", "i", ")", "\n", "", "checker", "=", "ModelChecker", "(", "action_function", ",", "env", ",", "env", ".", "action_space", ".", "n", ",", "i", ",", "shield", "=", "shield", ",", "render", "=", "render", ",", "\n", "verbose", "=", "verbose", ",", "max_frames", "=", "max_frames", ")", "\n", "output", "=", "None", "\n", "while", "output", "==", "None", ":", "\n", "            ", "output", "=", "checker", ".", "step", "(", ")", "\n", "", "violation_list", ".", "append", "(", "output", "[", "0", "]", ")", "\n", "noop_violation_list", ".", "append", "(", "output", "[", "1", "]", ")", "\n", "reward_list", ".", "append", "(", "output", "[", "2", "]", ")", "\n", "if", "output", "[", "0", "]", "!=", "\"None\"", "and", "demand_full_safety", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "print", "(", "\"Found unsafe trace, property not fully satisfied.\"", ")", "\n", "", "break", "\n", "", "if", "verbose", ":", "\n", "            ", "print", "(", "\"Steps taken during run: %d. Time taken: %d\"", "%", "(", "output", "[", "3", "]", ",", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "", "", "if", "verbose", ":", "\n", "        ", "print", "(", "\"Finished checking traces in %d seconds\"", "%", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "", "env", ".", "close", "(", ")", "\n", "return", "violation_list", ",", "noop_violation_list", ",", "reward_list", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreWrapper.__init__": [[22, 25], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "env", "=", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreWrapper.save": [[26, 28], ["atari_wrappers.SaveRestoreWrapper.env.save"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreWrapper._restore": [[29, 31], ["atari_wrappers.SaveRestoreWrapper.env._restore"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "env", ".", "_restore", "(", "savelist", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreWrapper.restore": [[32, 34], ["atari_wrappers.SaveRestoreWrapper._restore", "len"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "restore", "(", "self", ",", "savelist", ")", ":", "\n", "        ", "self", ".", "_restore", "(", "savelist", ",", "len", "(", "savelist", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreObsWrapper.__init__": [[37, 40], ["gym.ObservationWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "env", "=", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreObsWrapper.save": [[41, 43], ["atari_wrappers.SaveRestoreObsWrapper.env.save"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreObsWrapper._restore": [[44, 46], ["atari_wrappers.SaveRestoreObsWrapper.env._restore"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "env", ".", "_restore", "(", "savelist", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreObsWrapper.restore": [[47, 49], ["atari_wrappers.SaveRestoreObsWrapper._restore", "len"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "restore", "(", "self", ",", "savelist", ")", ":", "\n", "        ", "self", ".", "_restore", "(", "savelist", ",", "len", "(", "savelist", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreRewardWrapper.__init__": [[52, 55], ["gym.RewardWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "env", "=", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreRewardWrapper.save": [[56, 58], ["atari_wrappers.SaveRestoreRewardWrapper.env.save"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreRewardWrapper._restore": [[59, 61], ["atari_wrappers.SaveRestoreRewardWrapper.env._restore"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "env", ".", "_restore", "(", "savelist", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreRewardWrapper.restore": [[62, 64], ["atari_wrappers.SaveRestoreRewardWrapper._restore", "len"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "restore", "(", "self", ",", "savelist", ")", ":", "\n", "        ", "self", ".", "_restore", "(", "savelist", ",", "len", "(", "savelist", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LabellingEnv.__init__": [[69, 73], ["atari_wrappers.SaveRestoreWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["def", "__init__", "(", "self", ",", "env", ",", "labeller", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "labeller", "=", "labeller", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LabellingEnv.reset": [[74, 78], ["atari_wrappers.LabellingEnv.labeller.reset", "atari_wrappers.LabellingEnv.env.reset"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "labeller", ".", "reset", "(", ")", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LabellingEnv.step": [[79, 83], ["atari_wrappers.LabellingEnv.env.step", "atari_wrappers.LabellingEnv.labeller.label"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.label"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "info", "[", "'label'", "]", "=", "self", ".", "labeller", ".", "label", "(", "obs", ",", "reward", ",", "done", ",", "info", ")", "\n", "return", "obs", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LabellingEnv.save": [[84, 86], ["atari_wrappers.LabellingEnv.env.save", "atari_wrappers.LabellingEnv.labeller.save"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "save", "(", ")", "+", "[", "self", ".", "labeller", ".", "save", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LabellingEnv._restore": [[87, 90], ["atari_wrappers.LabellingEnv.labeller.restore", "atari_wrappers.LabellingEnv.env._restore"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.restore", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "labeller", ".", "restore", "(", "savelist", "[", "i", "]", ")", "\n", "self", ".", "env", ".", "_restore", "(", "savelist", ",", "i", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FireResetEnv.__init__": [[93, 98], ["atari_wrappers.SaveRestoreWrapper.__init__", "len", "env.unwrapped.get_action_meanings", "env.unwrapped.get_action_meanings"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "\"\"\"Take action on reset for environments that are fixed until firing.\"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "assert", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", "[", "1", "]", "==", "'FIRE'", "\n", "assert", "len", "(", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", ")", ">=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FireResetEnv.reset": [[99, 108], ["atari_wrappers.FireResetEnv.env.reset", "atari_wrappers.FireResetEnv.env.step", "atari_wrappers.FireResetEnv.env.step", "atari_wrappers.FireResetEnv.env.reset", "atari_wrappers.FireResetEnv.env.reset"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset"], ["", "def", "reset", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "env", ".", "reset", "(", "**", "kwargs", ")", "\n", "obs", ",", "_", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "1", ")", "\n", "if", "done", ":", "\n", "            ", "self", ".", "env", ".", "reset", "(", "**", "kwargs", ")", "\n", "", "obs", ",", "_", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "2", ")", "\n", "if", "done", ":", "\n", "            ", "self", ".", "env", ".", "reset", "(", "**", "kwargs", ")", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FireResetEnv.step": [[109, 111], ["atari_wrappers.FireResetEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step"], ["", "def", "step", "(", "self", ",", "ac", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "step", "(", "ac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.ClipRewardEnv.__init__": [[114, 116], ["atari_wrappers.SaveRestoreRewardWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.ClipRewardEnv.reward": [[117, 120], ["numpy.sign"], "methods", ["None"], ["", "def", "reward", "(", "self", ",", "reward", ")", ":", "\n", "        ", "\"\"\"Bin reward to {+1, 0, -1} by its sign.\"\"\"", "\n", "return", "np", ".", "sign", "(", "reward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.WarpFrame.__init__": [[123, 163], ["atari_wrappers.SaveRestoreObsWrapper.__init__", "gym.spaces.Box", "tensorflow.placeholder", "atari_wrappers.WarpFrame._transform", "len", "list"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.WarpFrame._transform"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "width", "=", "84", ",", "height", "=", "84", ",", "grayscale", "=", "True", ",", "dict_space_key", "=", "None", ",", "channel_order", "=", "'hwc'", ",", "\n", "resize_style", "=", "'baseline'", ")", ":", "\n", "        ", "\"\"\"\n        Warp frames to 84x84 as done in the Nature paper and later work.\n\n        If the environment uses dictionary observations, `dict_space_key` can be specified which indicates which\n        observation should be warped.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "_width", "=", "width", "\n", "self", ".", "_height", "=", "height", "\n", "self", ".", "_grayscale", "=", "grayscale", "\n", "self", ".", "_key", "=", "dict_space_key", "\n", "self", ".", "resize_style", "=", "resize_style", "\n", "if", "self", ".", "_grayscale", ":", "\n", "            ", "num_colors", "=", "1", "\n", "", "else", ":", "\n", "            ", "num_colors", "=", "3", "\n", "", "shape", "=", "{", "\n", "'hwc'", ":", "(", "self", ".", "_height", ",", "self", ".", "_width", ",", "num_colors", ")", ",", "\n", "'chw'", ":", "(", "num_colors", ",", "self", ".", "_height", ",", "self", ".", "_width", ")", ",", "\n", "}", "\n", "new_space", "=", "gym", ".", "spaces", ".", "Box", "(", "\n", "low", "=", "0", ",", "\n", "high", "=", "255", ",", "\n", "shape", "=", "shape", "[", "channel_order", "]", ",", "\n", "dtype", "=", "np", ".", "uint8", ",", "\n", ")", "\n", "if", "self", ".", "_key", "is", "None", ":", "\n", "            ", "original_space", "=", "self", ".", "observation_space", "\n", "self", ".", "observation_space", "=", "new_space", "\n", "", "else", ":", "\n", "            ", "original_space", "=", "self", ".", "observation_space", ".", "spaces", "[", "self", ".", "_key", "]", "\n", "self", ".", "observation_space", ".", "spaces", "[", "self", ".", "_key", "]", "=", "new_space", "\n", "", "assert", "original_space", ".", "dtype", "==", "np", ".", "uint8", "and", "len", "(", "original_space", ".", "shape", ")", "==", "3", "\n", "\n", "if", "self", ".", "resize_style", "==", "'tf'", ":", "\n", "            ", "self", ".", "inp_shape", "=", "[", "None", "]", "+", "list", "(", "env", ".", "observation_space", ".", "shape", "[", ":", "2", "]", ")", "+", "[", "1", ",", "]", "\n", "self", ".", "x_t", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "self", ".", "inp_shape", ",", "name", "=", "'warp_ph'", ")", "\n", "self", ".", "transform_op", "=", "self", ".", "_transform", "(", "self", ".", "x_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.WarpFrame._transform": [[164, 168], ["tensorflow.image.resize_bilinear", "tensorflow.reshape"], "methods", ["None"], ["", "", "def", "_transform", "(", "self", ",", "obs", ")", ":", "\n", "        ", "obs", "=", "tf", ".", "image", ".", "resize_bilinear", "(", "obs", ",", "(", "self", ".", "_width", ",", "self", ".", "_height", ")", ",", "align_corners", "=", "True", ")", "\n", "obs", "=", "tf", ".", "reshape", "(", "obs", ",", "(", "self", ".", "_width", ",", "self", ".", "_height", ")", "+", "(", "1", ",", ")", ")", "\n", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.WarpFrame.observation": [[169, 197], ["cv2.resize", "obs.copy.copy.reshape", "numpy.dot", "atari_wrappers.WarpFrame.transform_op.eval", "numpy.dot", "numpy.array", "numpy.expand_dims.reshape", "cv2.cvtColor", "numpy.expand_dims", "obs.copy.copy.copy", "obs.copy.copy.astype", "numpy.array", "obs.copy.copy.astype", "numpy.array", "PIL.Image.fromarray().resize", "PIL.Image.fromarray"], "methods", ["None"], ["", "def", "observation", "(", "self", ",", "obs", ")", ":", "\n", "        ", "if", "self", ".", "resize_style", "==", "'baseline'", ":", "\n", "            ", "frame", "=", "obs", "\n", "if", "self", ".", "_grayscale", ":", "\n", "                ", "frame", "=", "cv2", ".", "cvtColor", "(", "frame", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", "\n", "", "frame", "=", "cv2", ".", "resize", "(", "\n", "frame", ",", "(", "self", ".", "_width", ",", "self", ".", "_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", "\n", ")", "\n", "if", "self", ".", "_grayscale", ":", "\n", "                ", "frame", "=", "np", ".", "expand_dims", "(", "frame", ",", "-", "1", ")", "\n", "\n", "", "if", "self", ".", "_key", "is", "None", ":", "\n", "                ", "obs", "=", "frame", "\n", "", "else", ":", "\n", "                ", "obs", "=", "obs", ".", "copy", "(", ")", "\n", "obs", "[", "self", ".", "_key", "]", "=", "frame", "\n", "", "return", "obs", ".", "reshape", "(", "self", ".", "observation_space", ".", "low", ".", "shape", ")", "\n", "", "if", "self", ".", "resize_style", "==", "'tf'", ":", "\n", "            ", "frame", "=", "np", ".", "dot", "(", "obs", ".", "astype", "(", "'float32'", ")", ",", "np", ".", "array", "(", "[", "0.299", ",", "0.587", ",", "0.114", "]", ",", "'float32'", ")", ")", "\n", "frame", "=", "frame", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "frame", "=", "frame", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "\n", "return", "self", ".", "transform_op", ".", "eval", "(", "{", "self", ".", "x_t", ":", "frame", "}", ")", "\n", "", "if", "self", ".", "resize_style", "==", "'np'", ":", "\n", "            ", "frame", "=", "np", ".", "dot", "(", "obs", ".", "astype", "(", "'float32'", ")", ",", "np", ".", "array", "(", "[", "0.299", ",", "0.587", ",", "0.114", "]", ",", "'float32'", ")", ")", "\n", "frame", "=", "np", ".", "array", "(", "Image", ".", "fromarray", "(", "frame", ")", ".", "resize", "(", "(", "self", ".", "_width", ",", "self", ".", "_height", ")", ",", "\n", "resample", "=", "Image", ".", "BILINEAR", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "frame", ".", "reshape", "(", "(", "self", ".", "_width", ",", "self", ".", "_height", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.__init__": [[200, 216], ["atari_wrappers.SaveRestoreWrapper.__init__", "collections.deque", "numpy.repeat", "numpy.repeat", "gym.spaces.Box"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "k", ",", "channel_order", "=", "'hwc'", ")", ":", "\n", "        ", "\"\"\"Stack k last frames.\n        Returns lazy array, which is much more memory efficient.\n        See Also\n        --------\n        baselines.common.atari_wrappers.LazyFrames\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "frames", "=", "deque", "(", "[", "]", ",", "maxlen", "=", "k", "*", "4", ")", "\n", "self", ".", "stack_axis", "=", "{", "'hwc'", ":", "2", ",", "'chw'", ":", "0", "}", "[", "channel_order", "]", "\n", "orig_obs_space", "=", "env", ".", "observation_space", "\n", "low", "=", "np", ".", "repeat", "(", "orig_obs_space", ".", "low", ",", "k", ",", "axis", "=", "self", ".", "stack_axis", ")", "\n", "high", "=", "np", ".", "repeat", "(", "orig_obs_space", ".", "high", ",", "k", ",", "axis", "=", "self", ".", "stack_axis", ")", "\n", "self", ".", "observation_space", "=", "spaces", ".", "Box", "(", "\n", "low", "=", "low", ",", "high", "=", "high", ",", "dtype", "=", "orig_obs_space", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.reset": [[217, 222], ["atari_wrappers.FrameStack.env.reset", "range", "atari_wrappers.FrameStack._get_ob", "atari_wrappers.FrameStack.frames.append"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack._get_ob"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "ob", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "k", "*", "4", ")", ":", "\n", "            ", "self", ".", "frames", ".", "append", "(", "ob", ")", "\n", "", "return", "self", ".", "_get_ob", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step": [[223, 227], ["atari_wrappers.FrameStack.env.step", "atari_wrappers.FrameStack.frames.append", "atari_wrappers.FrameStack._get_ob"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack._get_ob"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "ob", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "self", ".", "frames", ".", "append", "(", "ob", ")", "\n", "return", "self", ".", "_get_ob", "(", ")", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack._get_ob": [[228, 231], ["atari_wrappers.LazyFrames", "len", "atari_wrappers.FrameStack.max_and_skip"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.max_and_skip"], ["", "def", "_get_ob", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "frames", ")", "==", "self", ".", "k", "*", "4", "\n", "return", "LazyFrames", "(", "self", ".", "max_and_skip", "(", ")", ",", "stack_axis", "=", "self", ".", "stack_axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.max_and_skip": [[232, 237], ["range", "numpy.maximum"], "methods", ["None"], ["", "def", "max_and_skip", "(", "self", ")", ":", "\n", "        ", "self", ".", "max_skip_frames", "=", "[", "None", "]", "*", "4", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "max_skip_frames", "[", "i", "]", "=", "np", ".", "maximum", "(", "self", ".", "frames", "[", "4", "*", "i", "+", "2", "]", ",", "self", ".", "frames", "[", "4", "*", "i", "+", "3", "]", ")", "\n", "", "return", "self", ".", "max_skip_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.save": [[238, 240], ["atari_wrappers.FrameStack.env.save"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "save", "(", ")", "+", "[", "self", ".", "frames", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack._restore": [[241, 244], ["atari_wrappers.FrameStack.env._restore"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "frames", "=", "savelist", "[", "i", "]", "\n", "self", ".", "env", ".", "_restore", "(", "savelist", ",", "i", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv.__init__": [[247, 250], ["atari_wrappers.SaveRestoreWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "aleenv", "=", "env", ".", "unwrapped", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv.save": [[251, 253], ["atari_wrappers.SaveRestoreEnv.aleenv.clone_full_state"], "methods", ["None"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "aleenv", ".", "clone_full_state", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.SaveRestoreEnv._restore": [[254, 256], ["atari_wrappers.SaveRestoreEnv.aleenv.restore_full_state"], "methods", ["None"], ["", "def", "_restore", "(", "self", ",", "savelist", ",", "i", ")", ":", "\n", "        ", "self", ".", "aleenv", ".", "restore_full_state", "(", "savelist", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.GreyscaleEnv.__init__": [[259, 262], ["atari_wrappers.SaveRestoreObsWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "env", "=", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.GreyscaleEnv.observation": [[263, 266], ["atari_wrappers.GreyscaleEnv.env.ale.getScreenGrayscale"], "methods", ["None"], ["", "def", "observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "self", ".", "env", ".", "ale", ".", "getScreenGrayscale", "(", "observation", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.ScaledFloatFrame.__init__": [[269, 272], ["atari_wrappers.SaveRestoreObsWrapper.__init__", "gym.spaces.Box"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", "=", "0", ",", "high", "=", "1", ",", "shape", "=", "env", ".", "observation_space", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.ScaledFloatFrame.observation": [[273, 277], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "observation", "(", "self", ",", "observation", ")", ":", "\n", "# careful! This undoes the memory optimization, use", "\n", "# with smaller replay buffers only.", "\n", "        ", "return", "np", ".", "array", "(", "observation", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.__init__": [[280, 291], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "frames", ",", "stack_axis", "=", "2", ")", ":", "\n", "        ", "\"\"\"This object ensures that common frames between the observations are only stored once.\n        It exists purely to optimize memory usage which can be huge for DQN's 1M frames replay\n        buffers.\n\n        This object should only be converted to numpy array before being passed to the model.\n\n        You'd not believe how complex the previous solution was.\"\"\"", "\n", "self", ".", "_frames", "=", "frames", "\n", "self", ".", "_out", "=", "None", "\n", "self", ".", "stack_axis", "=", "stack_axis", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force": [[292, 297], ["numpy.concatenate"], "methods", ["None"], ["", "def", "_force", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_out", "is", "None", ":", "\n", "            ", "self", ".", "_out", "=", "np", ".", "concatenate", "(", "self", ".", "_frames", ",", "axis", "=", "self", ".", "stack_axis", ")", "\n", "self", ".", "_frames", "=", "None", "\n", "", "return", "self", ".", "_out", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.__array__": [[298, 303], ["atari_wrappers.LazyFrames._force", "out.astype.astype.astype"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force"], ["", "def", "__array__", "(", "self", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "_force", "(", ")", "\n", "if", "dtype", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", ".", "astype", "(", "dtype", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.__len__": [[304, 306], ["len", "atari_wrappers.LazyFrames._force"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_force", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.__getitem__": [[307, 309], ["atari_wrappers.LazyFrames._force"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "_force", "(", ")", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.count": [[310, 313], ["atari_wrappers.LazyFrames._force"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force"], ["", "def", "count", "(", "self", ")", ":", "\n", "        ", "frames", "=", "self", ".", "_force", "(", ")", "\n", "return", "frames", ".", "shape", "[", "frames", ".", "ndim", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames.frame": [[314, 316], ["atari_wrappers.LazyFrames._force"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.LazyFrames._force"], ["", "def", "frame", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "_force", "(", ")", "[", "...", ",", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.make_base": [[318, 325], ["gym.make", "SaveRestoreEnv.seed", "atari_wrappers.SaveRestoreEnv"], "function", ["None"], ["", "", "def", "make_base", "(", "env_id", ",", "full_action_space", "=", "True", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "env_id", ",", "full_action_space", "=", "full_action_space", ")", "\n", "env", "=", "env", ".", "unwrapped", "# remove default timelimit", "\n", "env", ".", "seed", "(", "SEED", ")", "\n", "assert", "'NoFrameskip'", "in", "env", ".", "spec", ".", "id", "\n", "env", "=", "SaveRestoreEnv", "(", "env", ")", "\n", "return", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.wrap_deepmind": [[327, 344], ["atari_wrappers.LabellingEnv", "atari_wrappers.WarpFrame", "FrameStack.unwrapped.get_action_meanings", "atari_wrappers.FireResetEnv", "atari_wrappers.GreyscaleEnv", "atari_wrappers.ScaledFloatFrame", "atari_wrappers.ClipRewardEnv", "atari_wrappers.FrameStack"], "function", ["None"], ["", "def", "wrap_deepmind", "(", "env", ",", "labeller", ",", "episode_life", "=", "False", ",", "clip_rewards", "=", "False", ",", "frame_stack", "=", "True", ",", "scale", "=", "False", ",", "\n", "channel_order", "=", "'hwc'", ",", "resize_style", "=", "'baseline'", ",", "standard_greyscale", "=", "True", ")", ":", "\n", "    ", "\"\"\"Configure environment for DeepMind-style Atari.\n    \"\"\"", "\n", "env", "=", "LabellingEnv", "(", "env", ",", "labeller", ")", "\n", "if", "'FIRE'", "in", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", ":", "\n", "        ", "env", "=", "FireResetEnv", "(", "env", ")", "\n", "", "if", "not", "standard_greyscale", ":", "\n", "        ", "env", "=", "GreyscaleEnv", "(", "env", ")", "\n", "", "env", "=", "WarpFrame", "(", "env", ",", "channel_order", "=", "channel_order", ",", "resize_style", "=", "resize_style", ",", "grayscale", "=", "standard_greyscale", ")", "\n", "if", "scale", ":", "\n", "        ", "env", "=", "ScaledFloatFrame", "(", "env", ")", "\n", "", "if", "clip_rewards", ":", "\n", "        ", "env", "=", "ClipRewardEnv", "(", "env", ")", "\n", "", "if", "frame_stack", ":", "\n", "        ", "env", "=", "FrameStack", "(", "env", ",", "4", ",", "channel_order", "=", "channel_order", ")", "\n", "", "return", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.get_wrapped": [[346, 367], ["atari_wrappers.make_base", "prescience.labelling.get_property", "atari_wrappers.wrap_deepmind"], "function", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.make_base", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.properties.get_property", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.wrap_deepmind"], ["", "def", "get_wrapped", "(", "env_id", ",", "method", ",", "label", ")", ":", "\n", "    ", "if", "method", "in", "[", "\"Rainbow\"", ",", "\"IQN\"", ",", "\"DQN-C\"", ",", "\"A3C\"", ",", "\"PPO\"", ",", "\"ACER\"", ",", "\"C51\"", "]", ":", "\n", "        ", "channel_order", "=", "'chw'", "\n", "resize_style", "=", "'baseline'", "\n", "scale", "=", "False", "\n", "", "if", "method", "in", "[", "'IMPALA-U'", "]", ":", "\n", "        ", "channel_order", "=", "'hwc'", "\n", "resize_style", "=", "'np'", "\n", "scale", "=", "True", "\n", "", "if", "method", "in", "[", "'A2C'", ",", "'APEX'", "]", ":", "\n", "        ", "channel_order", "=", "'hwc'", "\n", "resize_style", "=", "'tf'", "\n", "scale", "=", "True", "\n", "", "if", "method", "in", "[", "'DQN-D'", ",", "'Rainbow-D'", "]", ":", "\n", "        ", "channel_order", "=", "'hwc'", "\n", "resize_style", "=", "'baseline'", "\n", "scale", "=", "True", "\n", "", "env", "=", "make_base", "(", "env_id", ",", "full_action_space", "=", "False", ")", "\n", "labeller", "=", "get_property", "(", "env", ",", "label", ")", "\n", "env", "=", "wrap_deepmind", "(", "env", ",", "labeller", ",", "channel_order", "=", "channel_order", ",", "resize_style", "=", "resize_style", ",", "scale", "=", "scale", ")", "\n", "return", "env", "\n", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.AtariAgent.action_order": [[27, 43], ["numpy.expand_dims", "chainerrl.agents.AtariAgent.agent.model", "numpy.argsort().astype", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.using_config", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainerrl.agents.AtariAgent.agent._evaluate_model_and_update_recurrent_states", "numpy.argsort().astype", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainer.no_backprop_mode", "chainerrl.agents.AtariAgent.agent.batch_states", "chainerrl.agents.AtariAgent.agent.model.pi_and_v", "numpy.argsort().astype", "chainerrl.agents.AtariAgent.agent.phi", "numpy.argsort", "numpy.argsort", "numpy.argsort"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.A3CFF.pi_and_v"], ["    ", "def", "action_order", "(", "self", ",", "obs", ")", ":", "\n", "        ", "if", "self", ".", "alg", "==", "\"DQN-C\"", "or", "self", ".", "alg", "==", "\"Rainbow\"", "or", "self", ".", "alg", "==", "\"IQN\"", ":", "\n", "            ", "with", "chainer", ".", "using_config", "(", "'train'", ",", "False", ")", ",", "chainer", ".", "no_backprop_mode", "(", ")", ":", "\n", "                ", "action_value", "=", "self", ".", "agent", ".", "_evaluate_model_and_update_recurrent_states", "(", "[", "obs", "]", ",", "test", "=", "True", ")", "\n", "qvalues", "=", "action_value", ".", "q_values", ".", "array", "\n", "return", "np", ".", "argsort", "(", "-", "qvalues", "[", "0", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "", "if", "self", ".", "alg", "==", "\"A3C\"", ":", "\n", "            ", "with", "chainer", ".", "no_backprop_mode", "(", ")", ":", "\n", "                ", "statevar", "=", "self", ".", "agent", ".", "batch_states", "(", "[", "obs", "]", ",", "np", ",", "self", ".", "agent", ".", "phi", ")", "\n", "pout", ",", "_", "=", "self", ".", "agent", ".", "model", ".", "pi_and_v", "(", "statevar", ")", "\n", "return", "np", ".", "argsort", "(", "-", "pout", ".", "all_prob", ".", "array", "[", "0", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "", "if", "self", ".", "alg", "==", "\"ACER\"", ":", "\n", "            ", "statevar", "=", "np", ".", "expand_dims", "(", "self", ".", "agent", ".", "phi", "(", "obs", ")", ",", "0", ")", "\n", "action_distrib", ",", "_", ",", "_", "=", "self", ".", "agent", ".", "model", "(", "statevar", ")", "\n", "return", "np", ".", "argsort", "(", "action_distrib", ".", "all_prob", ".", "array", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.AtariAgent.act": [[44, 46], ["chainerrl.agents.AtariAgent.agent.act"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.AtariAgent.act"], ["", "", "def", "act", "(", "self", ",", "obs", ")", ":", "\n", "        ", "return", "self", ".", "agent", ".", "act", "(", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.AtariAgent.__init__": [[47, 188], ["chainerrl.misc.set_random_seed", "chainer.optimizers.RMSpropGraves", "chainer.optimizers.RMSpropGraves", "chainer.optimizers.RMSpropGraves", "chainer.optimizers.RMSpropGraves.setup", "chainerrl.replay_buffer.ReplayBuffer", "chainerrl.agents.AtariAgent.agent.load", "chainerrl.links.Sequence", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.initializers.LeCunNormal", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainerrl.links.Sequence", "chainerrl.agents.acer.ACERSharedModel", "chainerrl.agents.A3CFF", "chainerrl.q_functions.DistributionalDuelingDQN", "chainerrl.links.to_factorized_noisy", "chainerrl.agents.iqn.ImplicitQuantileQFunction", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainer.Variable", "chainerrl.agents.IQN", "chainerrl.agents.a3c.A3C", "chainerrl.agents.CategoricalDoubleDQN", "chainerrl.agents.DQN", "chainerrl.agents.CategoricalDQN", "chainerrl.agents.acer.ACER", "chainerrl.agents.PPO", "os.path.join", "gym.make", "chainerrl.links.NatureDQNHead", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainerrl.links.Branched", "chainerrl.links.NatureDQNHead", "chainerrl.q_functions.DistributionalFCStateQFunctionWithDiscreteAction", "chainerrl.recurrent.state_reset", "chainerrl.misc.collect_variables", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainerrl.misc.collect_variables", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainer.computational_graph.build_computational_graph", "chainerrl.misc.collect_variables", "numpy.asarray", "env.replace", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Sequential", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainerrl.links.Sequence", "chainerrl.links.Sequence", "chainerrl.links.Sequence", "chainerrl.links.Sequence", "chainerrl.links.Sequence", "chainerrl.links.Sequence", "numpy.zeros", "numpy.zeros", "numpy.zeros", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainerrl.links.NIPSDQNHead", "chainer.LSTM", "chainer.LSTM", "chainer.LSTM", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "chainer.Convolution2D", "functools.partial", "chainerrl.agents.iqn.CosineBasisLinear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainer.Linear", "chainerrl.agents.iqn.ImplicitQuantileQFunction.", "chainerrl.agents.iqn.ImplicitQuantileQFunction.", "chainerrl.agents.iqn.ImplicitQuantileQFunction.", "numpy.zeros"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "alg", ",", "env", ",", "model_path", ")", ":", "\n", "        ", "self", ".", "alg", "=", "alg", "\n", "seed", "=", "0", "\n", "n_actions", "=", "gym", ".", "make", "(", "env", ")", ".", "action_space", ".", "n", "\n", "gpus", "=", "[", "-", "1", "]", "\n", "gpu", "=", "None", "\n", "misc", ".", "set_random_seed", "(", "seed", ",", "gpus", "=", "gpus", ")", "\n", "if", "alg", "==", "\"DQN-C\"", ":", "\n", "            ", "model", "=", "links", ".", "Sequence", "(", "\n", "links", ".", "NatureDQNHead", "(", ")", ",", "\n", "L", ".", "Linear", "(", "512", ",", "n_actions", ")", ",", "\n", "DiscreteActionValue", ")", "\n", "", "if", "alg", "==", "\"PPO\"", ":", "\n", "            ", "winit_last", "=", "chainer", ".", "initializers", ".", "LeCunNormal", "(", "1e-2", ")", "\n", "model", "=", "chainer", ".", "Sequential", "(", "\n", "L", ".", "Convolution2D", "(", "None", ",", "32", ",", "8", ",", "stride", "=", "4", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Convolution2D", "(", "None", ",", "64", ",", "4", ",", "stride", "=", "2", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Convolution2D", "(", "None", ",", "64", ",", "3", ",", "stride", "=", "1", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Linear", "(", "None", ",", "512", ")", ",", "\n", "F", ".", "relu", ",", "\n", "links", ".", "Branched", "(", "\n", "chainer", ".", "Sequential", "(", "\n", "L", ".", "Linear", "(", "None", ",", "n_actions", ",", "initialW", "=", "winit_last", ")", ",", "\n", "SoftmaxDistribution", ",", "\n", ")", ",", "\n", "L", ".", "Linear", "(", "None", ",", "1", ")", ",", "\n", ")", "\n", ")", "\n", "", "if", "alg", "==", "\"C51\"", ":", "\n", "            ", "n_atoms", "=", "51", "\n", "v_max", "=", "10", "\n", "v_min", "=", "-", "10", "\n", "model", "=", "links", ".", "Sequence", "(", "\n", "links", ".", "NatureDQNHead", "(", ")", ",", "\n", "DistributionalFCStateQFunctionWithDiscreteAction", "(", "\n", "None", ",", "n_actions", ",", "n_atoms", ",", "v_min", ",", "v_max", ",", "\n", "n_hidden_channels", "=", "0", ",", "n_hidden_layers", "=", "0", ")", ",", "\n", ")", "\n", "", "if", "alg", "==", "\"ACER\"", ":", "\n", "            ", "model", "=", "agents", ".", "acer", ".", "ACERSharedModel", "(", "\n", "shared", "=", "links", ".", "Sequence", "(", "\n", "links", ".", "NIPSDQNHead", "(", ")", ",", "\n", "L", ".", "LSTM", "(", "256", ",", "256", ")", ")", ",", "\n", "pi", "=", "links", ".", "Sequence", "(", "\n", "L", ".", "Linear", "(", "256", ",", "n_actions", ")", ",", "\n", "SoftmaxDistribution", ")", ",", "\n", "q", "=", "links", ".", "Sequence", "(", "\n", "L", ".", "Linear", "(", "256", ",", "n_actions", ")", ",", "\n", "DiscreteActionValue", ")", ",", "\n", ")", "\n", "", "if", "alg", "==", "\"A3C\"", ":", "\n", "            ", "model", "=", "A3CFF", "(", "n_actions", ")", "\n", "", "if", "alg", "==", "\"Rainbow\"", ":", "\n", "            ", "n_atoms", "=", "51", "\n", "v_max", "=", "10", "\n", "v_min", "=", "-", "10", "\n", "model", "=", "DistributionalDuelingDQN", "(", "n_actions", ",", "n_atoms", ",", "v_min", ",", "v_max", ")", "\n", "links", ".", "to_factorized_noisy", "(", "model", ",", "sigma_scale", "=", "0.5", ")", "\n", "", "if", "alg", "==", "\"IQN\"", ":", "\n", "            ", "model", "=", "agents", ".", "iqn", ".", "ImplicitQuantileQFunction", "(", "\n", "psi", "=", "chainerrl", ".", "links", ".", "Sequence", "(", "\n", "L", ".", "Convolution2D", "(", "None", ",", "32", ",", "8", ",", "stride", "=", "4", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Convolution2D", "(", "None", ",", "64", ",", "4", ",", "stride", "=", "2", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Convolution2D", "(", "None", ",", "64", ",", "3", ",", "stride", "=", "1", ")", ",", "\n", "F", ".", "relu", ",", "\n", "functools", ".", "partial", "(", "F", ".", "reshape", ",", "shape", "=", "(", "-", "1", ",", "3136", ")", ")", ",", "\n", ")", ",", "\n", "phi", "=", "chainerrl", ".", "links", ".", "Sequence", "(", "\n", "chainerrl", ".", "agents", ".", "iqn", ".", "CosineBasisLinear", "(", "64", ",", "3136", ")", ",", "\n", "F", ".", "relu", ",", "\n", ")", ",", "\n", "f", "=", "chainerrl", ".", "links", ".", "Sequence", "(", "\n", "L", ".", "Linear", "(", "None", ",", "512", ")", ",", "\n", "F", ".", "relu", ",", "\n", "L", ".", "Linear", "(", "None", ",", "n_actions", ")", ",", "\n", ")", ",", "\n", ")", "\n", "", "if", "alg", "in", "[", "\"A3C\"", "]", ":", "\n", "            ", "fake_obs", "=", "chainer", ".", "Variable", "(", "\n", "np", ".", "zeros", "(", "(", "4", ",", "84", ",", "84", ")", ",", "dtype", "=", "np", ".", "float32", ")", "[", "None", "]", ",", "\n", "name", "=", "'observation'", ")", "\n", "with", "chainerrl", ".", "recurrent", ".", "state_reset", "(", "model", ")", ":", "\n", "# The state of the model is reset again after drawing the graph", "\n", "                ", "variables", "=", "misc", ".", "collect_variables", "(", "[", "model", "(", "fake_obs", ")", "]", ")", "\n", "chainer", ".", "computational_graph", ".", "build_computational_graph", "(", "variables", ")", "\n", "", "", "elif", "alg", "in", "[", "\"Rainbow\"", ",", "\"DQN-C\"", ",", "\"C51\"", ",", "\"ACER\"", ",", "\"PPO\"", "]", ":", "\n", "            ", "variables", "=", "misc", ".", "collect_variables", "(", "[", "model", "(", "np", ".", "zeros", "(", "(", "4", ",", "84", ",", "84", ")", ",", "dtype", "=", "np", ".", "float32", ")", "[", "None", "]", ")", "]", ")", "\n", "chainer", ".", "computational_graph", ".", "build_computational_graph", "(", "variables", ")", "\n", "", "else", ":", "\n", "            ", "fake_obs", "=", "np", ".", "zeros", "(", "(", "4", ",", "84", ",", "84", ")", ",", "dtype", "=", "np", ".", "float32", ")", "[", "None", "]", "\n", "fake_taus", "=", "np", ".", "zeros", "(", "32", ",", "dtype", "=", "np", ".", "float32", ")", "[", "None", "]", "\n", "variables", "=", "misc", ".", "collect_variables", "(", "[", "model", "(", "fake_obs", ")", "(", "fake_taus", ")", "]", ")", "\n", "\n", "", "def", "phi", "(", "x", ")", ":", "\n", "# Feature extractor", "\n", "            ", "return", "np", ".", "asarray", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255", "\n", "\n", "", "opt", "=", "optimizers", ".", "RMSpropGraves", "(", ")", "\n", "opt", ".", "setup", "(", "model", ")", "\n", "rbuf", "=", "replay_buffer", ".", "ReplayBuffer", "(", "1", ")", "\n", "if", "alg", "==", "\"IQN\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "IQN", "(", "model", ",", "opt", ",", "rbuf", ",", "gpu", "=", "gpu", ",", "gamma", "=", "0.99", ",", "act_deterministically", "=", "True", ",", "explorer", "=", "None", ",", "\n", "replay_start_size", "=", "1", ",", "minibatch_size", "=", "1", ",", "target_update_interval", "=", "None", ",", "clip_delta", "=", "True", ",", "\n", "update_interval", "=", "4", ",", "phi", "=", "phi", ")", "\n", "", "if", "alg", "==", "\"A3C\"", ":", "\n", "            ", "self", ".", "agent", "=", "a3c", ".", "A3C", "(", "model", ",", "opt", ",", "t_max", "=", "5", ",", "gamma", "=", "0.99", ",", "phi", "=", "phi", ",", "act_deterministically", "=", "True", ")", "\n", "", "if", "alg", "==", "\"Rainbow\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "CategoricalDoubleDQN", "(", "model", ",", "opt", ",", "rbuf", ",", "gpu", "=", "gpu", ",", "gamma", "=", "0.99", ",", "explorer", "=", "None", ",", "\n", "replay_start_size", "=", "1", ",", "minibatch_size", "=", "1", ",", "target_update_interval", "=", "None", ",", "\n", "clip_delta", "=", "True", ",", "update_interval", "=", "4", ",", "phi", "=", "phi", ")", "\n", "", "if", "alg", "==", "\"DQN-C\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "DQN", "(", "model", ",", "opt", ",", "rbuf", ",", "gpu", "=", "gpu", ",", "gamma", "=", "0.99", ",", "explorer", "=", "None", ",", "replay_start_size", "=", "1", ",", "\n", "minibatch_size", "=", "1", ",", "target_update_interval", "=", "None", ",", "clip_delta", "=", "True", ",", "update_interval", "=", "4", ",", "\n", "phi", "=", "phi", ")", "\n", "", "if", "alg", "==", "\"C51\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "CategoricalDQN", "(", "\n", "model", ",", "opt", ",", "rbuf", ",", "gpu", "=", "gpu", ",", "gamma", "=", "0.99", ",", "\n", "explorer", "=", "None", ",", "replay_start_size", "=", "1", ",", "\n", "minibatch_size", "=", "1", ",", "\n", "target_update_interval", "=", "None", ",", "\n", "clip_delta", "=", "True", ",", "\n", "update_interval", "=", "4", ",", "\n", "phi", "=", "phi", ",", "\n", ")", "\n", "", "if", "alg", "==", "\"ACER\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "acer", ".", "ACER", "(", "model", ",", "opt", ",", "t_max", "=", "5", ",", "gamma", "=", "0.99", ",", "\n", "replay_buffer", "=", "rbuf", ",", "\n", "n_times_replay", "=", "4", ",", "\n", "replay_start_size", "=", "1", ",", "\n", "act_deterministically", "=", "True", ",", "\n", "phi", "=", "phi", "\n", ")", "\n", "", "if", "alg", "==", "\"PPO\"", ":", "\n", "            ", "self", ".", "agent", "=", "agents", ".", "PPO", "(", "model", ",", "opt", ",", "gpu", "=", "gpu", ",", "phi", "=", "phi", ",", "update_interval", "=", "4", ",", "minibatch_size", "=", "1", ",", "clip_eps", "=", "0.1", ",", "\n", "recurrent", "=", "False", ",", "act_deterministically", "=", "True", ")", "\n", "", "self", ".", "agent", ".", "load", "(", "os", ".", "path", ".", "join", "(", "model_path", ",", "'chainer'", ",", "alg", ",", "env", ".", "replace", "(", "\"NoFrameskip-v4\"", ",", "\"\"", ")", ",", "'final'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.A3CFF.__init__": [[192, 198], ["chainerrl.links.NIPSDQNHead", "chainerrl.policies.FCSoftmaxPolicy", "chainerrl.v_functions.FCVFunction", "chainer.ChainList.__init__", "chainer.ChainList.__init__", "chainer.ChainList.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_actions", ")", ":", "\n", "        ", "self", ".", "head", "=", "links", ".", "NIPSDQNHead", "(", ")", "\n", "self", ".", "pi", "=", "policies", ".", "FCSoftmaxPolicy", "(", "\n", "self", ".", "head", ".", "n_output_channels", ",", "n_actions", ")", "\n", "self", ".", "v", "=", "v_functions", ".", "FCVFunction", "(", "self", ".", "head", ".", "n_output_channels", ")", "\n", "super", "(", ")", ".", "__init__", "(", "self", ".", "head", ",", "self", ".", "pi", ",", "self", ".", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.agents.A3CFF.pi_and_v": [[199, 202], ["chainerrl.agents.A3CFF.head", "chainerrl.agents.A3CFF.pi", "chainerrl.agents.A3CFF.v"], "methods", ["None"], ["", "def", "pi_and_v", "(", "self", ",", "state", ")", ":", "\n", "        ", "out", "=", "self", ".", "head", "(", "state", ")", "\n", "return", "self", ".", "pi", "(", "out", ")", ",", "self", ".", "v", "(", "out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Dynamite.__init__": [[8, 13], ["collections.deque", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "dynamite_exploded", "=", "False", "\n", "self", ".", "counter", "=", "0", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Dynamite.reset": [[14, 18], ["collections.deque"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "dynamite_exploded", "=", "False", "\n", "self", ".", "counter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Dynamite.label": [[19, 42], ["numpy.sum", "numpy.all", "Hero.Dynamite.lives_history.append", "print", "len", "Hero.Dynamite.lives_history.popleft"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# create a unique color map", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for dynamite explosion", "\n", "if", "np", ".", "all", "(", "observation", "[", "15", ",", "8", ":", "160", "]", "==", "576", ")", ":", "\n", "            ", "self", ".", "dynamite_exploded", "=", "True", "\n", "print", "(", "'Boom!'", ")", "\n", "self", ".", "counter", "=", "0", "\n", "# check for 31 frames", "\n", "", "if", "self", ".", "dynamite_exploded", "and", "self", ".", "counter", "<", "36", ":", "\n", "            ", "self", ".", "counter", "+=", "1", "\n", "", "elif", "self", ".", "counter", ">=", "36", ":", "\n", "            ", "self", ".", "counter", "=", "0", "\n", "self", ".", "dynamite_exploded", "=", "False", "\n", "", "self", ".", "lives_history", ".", "append", "(", "info", "[", "'ale.lives'", "]", ")", "\n", "if", "len", "(", "self", ".", "lives_history", ")", ">", "35", ":", "\n", "            ", "self", ".", "lives_history", ".", "popleft", "(", ")", "\n", "# check for death after dynamite explosion", "\n", "", "if", "self", ".", "dynamite_exploded", "and", "self", ".", "lives_history", "[", "0", "]", ">", "info", "[", "'ale.lives'", "]", ":", "\n", "            ", "self", ".", "dynamite_exploded", "=", "False", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Dynamite.save": [[43, 45], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "lives_history", ",", "self", ".", "dynamite_exploded", ",", "self", ".", "counter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Dynamite.restore": [[46, 48], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "lives_history", ",", "self", ".", "dynamite_exploded", ",", "self", ".", "counter", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Out_Of_Power.__init__": [[51, 54], ["collections.deque", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Out_Of_Power.reset": [[55, 57], ["collections.deque"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Hero.Out_Of_Power.label": [[58, 80], ["numpy.sum", "numpy.all", "Hero.Out_Of_Power.lives_history.append", "len", "Hero.Out_Of_Power.lives_history.popleft"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# create a unique color map", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for dynamite explosion", "\n", "if", "np", ".", "all", "(", "observation", "[", "15", ",", "8", ":", "160", "]", "==", "576", ")", ":", "\n", "            ", "self", ".", "dynamite_exploded", "=", "True", "\n", "self", ".", "counter", "=", "0", "\n", "# check for 31 frames", "\n", "", "if", "self", ".", "dynamite_exploded", "and", "self", ".", "counter", "<", "36", ":", "\n", "            ", "self", ".", "counter", "+=", "1", "\n", "", "elif", "self", ".", "counter", ">=", "36", ":", "\n", "            ", "self", ".", "counter", "=", "0", "\n", "self", ".", "dynamite_exploded", "=", "False", "\n", "", "self", ".", "lives_history", ".", "append", "(", "info", "[", "'ale.lives'", "]", ")", "\n", "if", "len", "(", "self", ".", "lives_history", ")", ">", "35", ":", "\n", "            ", "self", ".", "lives_history", ".", "popleft", "(", ")", "\n", "# check for death after dynamite explosion", "\n", "", "if", "self", ".", "dynamite_exploded", "and", "self", ".", "lives_history", "[", "0", "]", ">", "info", "[", "'ale.lives'", "]", ":", "\n", "            ", "self", ".", "dynamite_exploded", "=", "False", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.InstantNegativeReward.Instant_Negative_Reward.__init__": [[7, 9], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.InstantNegativeReward.Instant_Negative_Reward.reset": [[10, 12], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.InstantNegativeReward.Instant_Negative_Reward.label": [[13, 18], ["None"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "if", "reward", "<", "0", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Below_Reward.Below_Reward.__init__": [[7, 13], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "threshold", ",", "count_pos", "=", "True", ",", "count_neg", "=", "True", ")", ":", "\n", "        ", "self", ".", "total_reward", "=", "0", "\n", "self", ".", "threshold", "=", "threshold", "\n", "self", ".", "count_pos", "=", "count_pos", "\n", "self", ".", "count_neg", "=", "count_neg", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Below_Reward.Below_Reward.reset": [[14, 16], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "total_reward", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Below_Reward.Below_Reward.label": [[17, 24], ["None"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "if", "(", "reward", ">", "0", "and", "self", ".", "count_pos", ")", "or", "(", "reward", "<", "0", "and", "self", ".", "count_neg", ")", ":", "\n", "            ", "self", ".", "total_reward", "+=", "reward", "\n", "", "if", "done", "and", "self", ".", "total_reward", "<", "self", ".", "threshold", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Below_Reward.Below_Reward.save": [[25, 27], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Below_Reward.Below_Reward.restore": [[28, 30], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "total_reward", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.save": [[9, 11], ["None"], "methods", ["None"], ["def", "save", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.restore": [[12, 14], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.reset": [[15, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.__init__": [[18, 20], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.label": [[21, 24], ["None"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "\"\"\"Returns True if the safety property is violated, False otherwise\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.test_random": [[25, 44], ["Labeller.Labeller.env.reset", "Labeller.Labeller.env.close", "Labeller.Labeller.env.action_space.sample", "Labeller.Labeller.env.step", "Labeller.Labeller.env.render", "Labeller.Labeller.env.render", "Labeller.Labeller.label", "print", "time.sleep", "time.sleep"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.FrameStack.step", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.label"], ["", "def", "test_random", "(", "self", ",", "pause", "=", "1", ",", "grace", "=", "30", ",", "max_steps", "=", "10000", ",", "speed", "=", "0.001", ")", ":", "\n", "        ", "self", ".", "env", ".", "reset", "(", ")", "\n", "done", "=", "False", "\n", "step", "=", "0", "\n", "last_violation", "=", "0", "\n", "while", "(", "not", "done", ")", "and", "step", "<", "max_steps", ":", "\n", "            ", "action", "=", "self", ".", "env", ".", "action_space", ".", "sample", "(", ")", "\n", "_", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "obs", "=", "self", ".", "env", ".", "render", "(", "'rgb_array'", ")", "\n", "self", ".", "env", ".", "render", "(", ")", "\n", "step", "+=", "1", "\n", "if", "self", ".", "label", "(", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "                ", "print", "(", "'Property violated at step %d'", "%", "step", ")", "\n", "if", "step", "-", "last_violation", ">", "grace", ":", "\n", "                    ", "time", ".", "sleep", "(", "pause", ")", "\n", "last_violation", "=", "step", "\n", "", "", "else", ":", "\n", "                ", "time", ".", "sleep", "(", "speed", ")", "\n", "", "", "self", ".", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.test_human": [[45, 56], ["play", "Labeller.Labeller.label", "print", "Labeller.Labeller.reset"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.label", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset"], ["", "def", "test_human", "(", "self", ",", "fps", "=", "60", ")", ":", "\n", "        ", "from", "gym", ".", "utils", ".", "play", "import", "play", "# Import here since it requires pygame and it is incompatible with python 3.8", "\n", "\"\"\"This doesn't work if the environment has been wrapped with image preprocessing\"\"\"", "\n", "\n", "def", "callback_label", "(", "obs_t", ",", "obs_tp1", ",", "action", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "            ", "if", "self", ".", "label", "(", "obs_tp1", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "                ", "print", "(", "'Property violated!'", ")", "\n", "", "if", "done", ":", "\n", "                ", "self", ".", "reset", "(", ")", "\n", "\n", "", "", "play", "(", "self", ".", "env", ",", "callback", "=", "callback_label", ",", "zoom", "=", "4", ",", "fps", "=", "fps", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Hit.__init__": [[7, 10], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Hit.reset": [[11, 13], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Hit.label": [[14, 30], ["numpy.sum", "numpy.any", "numpy.all", "numpy.sum"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "if", "self", ".", "need_initial", ":", "\n", "# store the initial layout of the pins", "\n", "            ", "self", ".", "pins_initial_layout", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "[", "119", ":", "159", ",", "121", ":", "135", "]", "\n", "self", ".", "need_initial", "=", "False", "\n", "# create a unique color map", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check if the ball has returned", "\n", "ball_returned", "=", "np", ".", "any", "(", "observation", "[", "170", ",", "10", ":", "17", "]", "==", "279", ")", "\n", "# check for no hit", "\n", "if", "ball_returned", "and", "np", ".", "all", "(", "observation", "[", "119", ":", "159", ",", "121", ":", "135", "]", "==", "self", ".", "pins_initial_layout", ")", ":", "\n", "            ", "self", ".", "need_initial", "=", "True", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Hit.save": [[31, 33], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "need_initial", ",", "self", ".", "pins_initial_layout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Hit.restore": [[34, 36], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "need_initial", ",", "self", ".", "pins_initial_layout", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Strike.__init__": [[39, 42], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "False", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Strike.reset": [[43, 45], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Bowling.No_Strike.label": [[46, 57], ["numpy.sum", "numpy.any", "numpy.any"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# create a unique color map", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check if the ball has returned", "\n", "ball_returned", "=", "np", ".", "any", "(", "observation", "[", "170", ",", "10", ":", "17", "]", "==", "279", ")", "\n", "# check for no strike", "\n", "if", "ball_returned", "and", "np", ".", "any", "(", "observation", "[", "119", ":", "159", ",", "121", ":", "135", "]", "==", "279", ")", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Freeway.Hit.__init__": [[7, 10], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Freeway.Hit.reset": [[11, 13], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Freeway.Hit.label": [[14, 33], ["numpy.sum", "numpy.max", "numpy.where"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# The first frame doesn't contain the chicken", "\n", "        ", "if", "self", ".", "first_frame", ":", "\n", "            ", "self", ".", "first_frame", "=", "False", "\n", "return", "False", "\n", "# create a unique color map", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# find the chicken location", "\n", "try", ":", "\n", "            ", "agent_row", "=", "np", ".", "max", "(", "np", ".", "where", "(", "(", "observation", "[", ":", ",", "48", "]", "==", "588", ")", ")", ")", "\n", "", "except", ":", "\n", "            ", "return", "False", "\n", "# check for the hit or win", "\n", "", "if", "observation", "[", "agent_row", "-", "5", ",", "45", "]", "==", "588", "and", "agent_row", "-", "5", "!=", "104", "and", "agent_row", "-", "5", "!=", "102", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Freeway.Hit.save": [[34, 36], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "first_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Freeway.Hit.restore": [[37, 39], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Frostbite.Freezing.__init__": [[7, 14], ["numpy.array", "range", "prescience.labelling.Labeller.__init__", "numpy.vstack"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "# store the freezing timer pixels", "\n", "        ", "self", ".", "timer_pixels_when_zero", "=", "np", ".", "array", "(", "[", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "528", ",", "528", ",", "528", ",", "528", ",", "279", "]", ")", "\n", "for", "_", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "timer_pixels_when_zero", "=", "np", ".", "vstack", "(", "\n", "(", "self", ".", "timer_pixels_when_zero", ",", "[", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "279", ",", "528", ",", "528", ",", "279", ",", "279", ",", "528", ",", "528", "]", ")", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Frostbite.Freezing.reset": [[15, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Frostbite.Freezing.label": [[18, 26], ["numpy.sum", "numpy.all"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# create a unique color map", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for freezing", "\n", "if", "np", ".", "all", "(", "observation", "[", "22", ":", "27", ",", "23", ":", "37", "]", "==", "self", ".", "timer_pixels_when_zero", ")", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Assault.Overheat.__init__": [[8, 12], ["collections.deque", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "over_heat_happened", "=", "False", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Assault.Overheat.reset": [[13, 16], ["collections.deque"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "over_heat_happened", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Assault.Overheat.label": [[17, 31], ["Assault.Overheat.lives_history.append", "numpy.sum", "numpy.all", "len", "Assault.Overheat.lives_history.popleft"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "self", ".", "lives_history", ".", "append", "(", "info", "[", "'ale.lives'", "]", ")", "\n", "if", "len", "(", "self", ".", "lives_history", ")", ">", "2", ":", "\n", "            ", "self", ".", "lives_history", ".", "popleft", "(", ")", "\n", "# create a unique color map", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for overheat", "\n", "if", "np", ".", "all", "(", "observation", "[", "229", ":", "237", ",", "156", ":", "160", "]", "!=", "0", ")", ":", "\n", "            ", "self", ".", "over_heat_happened", "=", "True", "\n", "", "if", "self", ".", "over_heat_happened", "and", "self", ".", "lives_history", "[", "0", "]", ">", "info", "[", "'ale.lives'", "]", ":", "\n", "            ", "self", ".", "over_heat_happened", "=", "False", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Assault.Overheat.save": [[32, 34], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "lives_history", ",", "self", ".", "over_heat_happened", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Assault.Overheat.restore": [[35, 37], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "lives_history", ",", "self", ".", "over_heat_happened", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Gravitar.Fuel.__init__": [[8, 26], ["collections.deque", "numpy.array", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "fuel_cir", "=", "False", "\n", "self", ".", "fuel_area", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "513", ",", "\n", "513", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", "]", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Gravitar.Fuel.reset": [[27, 44], ["collections.deque", "numpy.array"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "lives_history", "=", "deque", "(", ")", "\n", "self", ".", "fuel_cir", "=", "False", "\n", "self", ".", "fuel_area", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "\n", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "0", ",", "0", ",", "513", ",", "513", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "513", ",", "\n", "513", ",", "0", ",", "0", ",", "0", ",", "513", ",", "513", ",", "513", ",", "513", ",", "0", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Gravitar.Fuel.label": [[45, 59], ["Gravitar.Fuel.lives_history.append", "numpy.sum", "numpy.all", "len", "Gravitar.Fuel.lives_history.popleft"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "self", ".", "lives_history", ".", "append", "(", "info", "[", "'ale.lives'", "]", ")", "\n", "if", "len", "(", "self", ".", "lives_history", ")", ">", "3", ":", "\n", "            ", "self", ".", "lives_history", ".", "popleft", "(", ")", "\n", "# create a unique color map", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for fuel", "\n", "if", "np", ".", "all", "(", "observation", "[", "17", ":", "24", ",", "72", ":", "94", "]", "==", "self", ".", "fuel_area", ")", ":", "\n", "            ", "self", ".", "fuel_cir", "=", "True", "\n", "", "if", "self", ".", "fuel_cir", "and", "self", ".", "lives_history", "[", "0", "]", ">", "info", "[", "'ale.lives'", "]", ":", "\n", "            ", "self", ".", "fuel_cir", "=", "False", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Gravitar.Fuel.save": [[60, 62], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "fuel_cir", ",", "self", ".", "lives_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Gravitar.Fuel.restore": [[63, 65], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "fuel_cur", ",", "self", ".", "lives_history", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Out_Of_Bounds.__init__": [[7, 10], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Out_Of_Bounds.reset": [[11, 13], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Out_Of_Bounds.label": [[14, 20], ["numpy.sum", "numpy.all"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "if", "np", ".", "all", "(", "observation", "[", "209", ":", "216", ",", "95", "]", "==", "309", ")", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Shoot_Bf_Clear.__init__": [[23, 26], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Shoot_Bf_Clear.reset": [[27, 29], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "need_initial", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Shoot_Bf_Clear.label": [[30, 44], ["numpy.sum", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "if", "self", ".", "need_initial", ":", "\n", "            ", "self", ".", "look_out_for_sbc", "=", "0", "\n", "self", ".", "need_initial", "=", "False", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "if", "np", ".", "all", "(", "observation", "[", "209", ":", "214", ",", "103", "]", "==", "309", ")", ":", "\n", "            ", "self", ".", "look_out_for_sbc", "=", "1", "\n", "return", "False", "\n", "", "elif", "np", ".", "all", "(", "observation", "[", "209", ":", "216", ",", "58", ":", "60", "]", "==", "309", ")", "and", "self", ".", "look_out_for_sbc", "==", "1", ":", "\n", "            ", "self", ".", "look_out_for_sbc", "=", "0", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "look_out_for_sbc", "=", "0", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Shoot_Bf_Clear.save": [[45, 47], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "need_initial", ",", "self", ".", "look_out_for_sbc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.DoubleDunk.Shoot_Bf_Clear.restore": [[48, 50], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "need_initial", ",", "self", ".", "look_out_for_sbc", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.KungFuMaster.Energy_Loss.__init__": [[8, 11], ["collections.deque", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "energy_bar", "=", "deque", "(", ")", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.KungFuMaster.Energy_Loss.reset": [[12, 14], ["collections.deque"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "energy_bar", "=", "deque", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.KungFuMaster.Energy_Loss.label": [[15, 26], ["numpy.sum", "KungFuMaster.Energy_Loss.energy_bar.append", "numpy.sum", "len", "KungFuMaster.Energy_Loss.energy_bar.popleft"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# create a unique color map", "\n", "        ", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "self", ".", "energy_bar", ".", "append", "(", "np", ".", "sum", "(", "observation", "[", "49", ":", "88", ",", "41", ":", "46", "]", ")", ")", "\n", "if", "len", "(", "self", ".", "energy_bar", ")", ">", "2", ":", "\n", "            ", "self", ".", "energy_bar", ".", "popleft", "(", ")", "\n", "# check for energy", "\n", "if", "self", ".", "energy_bar", "[", "1", "]", "<", "self", ".", "energy_bar", "[", "0", "]", ":", "\n", "                ", "return", "True", "\n", "", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.KungFuMaster.Energy_Loss.save": [[27, 29], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "energy_bar", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.KungFuMaster.Energy_Loss.restore": [[30, 32], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "energy_bar", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Death.Death.__init__": [[6, 9], ["Death.Death.env.unwrapped.ale.lives"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "self", ".", "current_lives", "=", "self", ".", "env", ".", "unwrapped", ".", "ale", ".", "lives", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Death.Death.reset": [[10, 12], ["Death.Death.env.unwrapped.ale.lives"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_lives", "=", "self", ".", "env", ".", "unwrapped", ".", "ale", ".", "lives", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Death.Death.label": [[13, 21], ["None"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "        ", "new_lives", "=", "info", "[", "'ale.lives'", "]", "\n", "if", "new_lives", "<", "self", ".", "current_lives", ":", "\n", "            ", "self", ".", "current_lives", "=", "new_lives", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "current_lives", "=", "new_lives", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Death.Death.save": [[22, 24], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "current_lives", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Death.Death.restore": [[25, 27], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "current_lives", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Early_Surface.__init__": [[8, 11], ["prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Early_Surface.reset": [[12, 14], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Early_Surface.label": [[15, 28], ["numpy.sum", "numpy.any"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# The first frame has to be discarded", "\n", "        ", "if", "self", ".", "first_frame", ":", "\n", "            ", "self", ".", "first_frame", "=", "False", "\n", "return", "False", "\n", "# create a unique color map", "\n", "", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "# check for early surface", "\n", "if", "np", ".", "any", "(", "observation", "[", "46", ",", ":", "]", "==", "708", ")", "and", "observation", "[", "186", ",", "58", "]", "!=", "217", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Early_Surface.save": [[29, 31], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "first_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Early_Surface.restore": [[32, 34], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__": [[37, 41], ["collections.deque", "prescience.labelling.Labeller.__init__"], "methods", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "self", ".", "bar_history", "=", "deque", "(", ")", "\n", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset": [[42, 45], ["collections.deque"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "first_frame", "=", "True", "\n", "self", ".", "bar_history", "=", "deque", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.label": [[46, 64], ["Seaquest.Out_Of_Oxygen.bar_history.append", "numpy.any", "len", "Seaquest.Out_Of_Oxygen.bar_history.popleft", "numpy.sum", "sum", "numpy.sum"], "methods", ["None"], ["", "def", "label", "(", "self", ",", "obs", ",", "reward", ",", "done", ",", "info", ")", ":", "\n", "# the first frame has to be discarded", "\n", "        ", "if", "self", ".", "first_frame", ":", "\n", "            ", "self", ".", "first_frame", "=", "False", "\n", "return", "False", "\n", "# looking at the history of the oxygen bar", "\n", "", "self", ".", "bar_history", ".", "append", "(", "np", ".", "any", "(", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "[", "170", ":", "175", ",", "49", "]", "==", "0", ")", ")", "\n", "\n", "if", "len", "(", "self", ".", "bar_history", ")", ">", "20", ":", "\n", "            ", "self", ".", "bar_history", ".", "popleft", "(", ")", "\n", "# create a unique color map of current frame", "\n", "observation", "=", "np", ".", "sum", "(", "obs", ",", "axis", "=", "2", ")", "\n", "if", "observation", "[", "170", ",", "49", "]", "==", "241", "and", "sum", "(", "self", ".", "bar_history", ")", ">", "0", ":", "\n", "                ", "return", "True", "\n", "", "else", ":", "\n", "                ", "return", "False", "\n", "", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.save": [[65, 67], ["None"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "first_frame", ",", "self", ".", "bar_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.restore": [[68, 70], ["None"], "methods", ["None"], ["", "def", "restore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "first_frame", ",", "self", ".", "bar_history", "=", "state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.properties.get_property": [[126, 130], ["properties.strip_env_string"], "function", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.properties.strip_env_string"], ["def", "get_property", "(", "env", ",", "prop_string", ")", ":", "\n", "    ", "env_string", "=", "env", ".", "unwrapped", ".", "spec", ".", "id", "\n", "to_call", "=", "prop_map", "[", "strip_env_string", "(", "env_string", ")", "]", "[", "prop_string", "]", "\n", "return", "to_call", "[", "0", "]", "(", "env", ",", "**", "to_call", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.properties.strip_env_string": [[132, 136], ["string.endswith", "len"], "function", ["None"], ["", "def", "strip_env_string", "(", "string", ")", ":", "\n", "    ", "for", "suffix", "in", "env_endings", ":", "\n", "        ", "if", "string", ".", "endswith", "(", "suffix", ")", ":", "\n", "            ", "return", "string", "[", ":", "-", "len", "(", "suffix", ")", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.download_pretrained.main": [[12, 18], ["chainerrl.misc.download_model", "print"], "function", ["None"], ["def", "main", "(", "argv", ")", ":", "\n", "    ", "env", "=", "FLAGS", ".", "env", "+", "\"NoFrameskip-v4\"", "\n", "try", ":", "\n", "        ", "misc", ".", "download_model", "(", "FLAGS", ".", "alg", ",", "env", ",", "model_type", "=", "\"final\"", ")", "[", "0", "]", "\n", "", "except", "HTTPError", ":", "\n", "        ", "print", "(", "\"ERROR: Could not download %s for %s\"", "%", "(", "alg", ",", "env", ")", ")", "\n", "", "", "if", "__name__", "==", "\"__main__\"", ":", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.main": [[23, 79], ["m.load_graphdef", "print", "tf.ConfigProto", "AtariAgent", "prescience.model_check_noop.check_noops", "open", "f.write", "f.write", "f.write", "MakeAtariModel", "print", "tf.Graph().as_default", "tf.Session", "prescience.get_wrapped", "tf.placeholder", "import_model", "import_model.", "tf.argsort", "print", "prescience.model_check_noop.check_noops", "f.tell", "f.write", "check_noops.format_list", "check_noops.format_list", "check_noops.format_list", "action_function", "check_noops.format_list", "tf.Graph", "list", "prescience.get_wrapped.reset", "str", "range", "sess.run"], "function", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.check_noops", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.atari_wrappers.get_wrapped", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.prescience.model_check_noop.check_noops", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.format_list", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.format_list", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.format_list", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.format_list", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Seaquest.Out_Of_Oxygen.reset"], ["def", "main", "(", "argv", ")", ":", "\n", "    ", "if", "FLAGS", ".", "method", "in", "[", "'DQN-D'", ",", "'Rainbow-D'", ",", "'APEX'", ",", "'IMPALA-U'", ",", "'A2C'", "]", ":", "\n", "        ", "import", "lucid", "\n", "from", "lucid", ".", "modelzoo", ".", "vision_base", "import", "Model", "\n", "from", "lucid", ".", "misc", ".", "io", "import", "show", "\n", "import", "lucid", ".", "optvis", ".", "objectives", "as", "objectives", "\n", "import", "lucid", ".", "optvis", ".", "param", "as", "param", "\n", "import", "lucid", ".", "optvis", ".", "transform", "as", "transform", "\n", "import", "lucid", ".", "optvis", ".", "render", "as", "render", "\n", "import", "tensorflow", "as", "tf", "\n", "\n", "from", "atari_zoo", "import", "MakeAtariModel", "\n", "from", "lucid", ".", "optvis", ".", "render", "import", "import_model", "\n", "model_name_map", "=", "{", "\n", "'A2C'", ":", "'a2c'", ",", "\n", "'DQN-D'", ":", "'dqn'", ",", "\n", "'Rainbow-D'", ":", "'rainbow'", ",", "\n", "'IMPALA-U'", ":", "'impala'", ",", "\n", "'APEX'", ":", "'apex'", "\n", "}", "\n", "m", "=", "MakeAtariModel", "(", "model_name_map", "[", "FLAGS", ".", "method", "]", ",", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ",", "1", ",", "tag", "=", "'final'", ")", "(", ")", "\n", "if", "FLAGS", ".", "verbose", ":", "\n", "            ", "print", "(", "'Loading Model-Zoo graph for %s on %s.'", "%", "(", "FLAGS", ".", "method", ",", "FLAGS", ".", "env", ")", ")", "\n", "", "m", ".", "load_graphdef", "(", ")", "\n", "print", "(", "'Finished loading graph'", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", "\n", "device_count", "=", "{", "'GPU'", ":", "1", "}", "\n", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", "as", "graph", ",", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "            ", "env", "=", "get_wrapped", "(", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ",", "FLAGS", ".", "method", ",", "FLAGS", ".", "prop", ")", "\n", "\n", "nA", "=", "env", ".", "action_space", ".", "n", "\n", "X_t", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", "]", "+", "list", "(", "env", ".", "observation_space", ".", "shape", ")", ")", "\n", "T", "=", "import_model", "(", "m", ",", "X_t", ",", "X_t", ")", "\n", "policy", "=", "T", "(", "m", ".", "layers", "[", "-", "1", "]", "[", "'name'", "]", ")", "\n", "order", "=", "tf", ".", "argsort", "(", "-", "policy", ",", "axis", "=", "-", "1", ")", "\n", "action_function", "=", "lambda", "x", ":", "sess", ".", "run", "(", "[", "order", "]", ",", "feed_dict", "=", "{", "X_t", ":", "x", "[", "None", "]", "}", ")", "[", "0", "]", "[", "0", "]", "\n", "print", "(", "action_function", "(", "env", ".", "reset", "(", ")", ")", ")", "\n", "violation_list", ",", "noop_violation_list", ",", "reward_list", "=", "check_noops", "(", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ",", "FLAGS", ".", "method", ",", "FLAGS", ".", "prop", ",", "action_function", ",", "max_frames", "=", "FLAGS", ".", "max_frames", ",", "max_noops", "=", "FLAGS", ".", "max_noops", ",", "render", "=", "FLAGS", ".", "render", ",", "min_noops", "=", "FLAGS", ".", "min_noops", ",", "shield", "=", "FLAGS", ".", "lookahead", ",", "verbose", "=", "FLAGS", ".", "verbose", ",", "demand_full_safety", "=", "FLAGS", ".", "stop_at_violation", ",", "record", "=", "FLAGS", ".", "record", ")", "\n", "", "", "else", ":", "\n", "        ", "from", "prescience", ".", "agents", "import", "AtariAgent", "\n", "agent", "=", "AtariAgent", "(", "FLAGS", ".", "method", ",", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ",", "FLAGS", ".", "model_path", ")", "\n", "violation_list", ",", "noop_violation_list", ",", "reward_list", "=", "check_noops", "(", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ",", "FLAGS", ".", "method", ",", "FLAGS", ".", "prop", ",", "agent", ".", "action_order", ",", "max_frames", "=", "FLAGS", ".", "max_frames", ",", "max_noops", "=", "FLAGS", ".", "max_noops", ",", "render", "=", "FLAGS", ".", "render", ",", "min_noops", "=", "FLAGS", ".", "min_noops", ",", "shield", "=", "FLAGS", ".", "lookahead", ",", "verbose", "=", "FLAGS", ".", "verbose", ",", "demand_full_safety", "=", "FLAGS", ".", "stop_at_violation", ",", "record", "=", "FLAGS", ".", "record", ")", "\n", "\n", "", "info", "=", "[", "FLAGS", ".", "env", ",", "FLAGS", ".", "method", ",", "FLAGS", ".", "prop", ",", "FLAGS", ".", "max_frames", ",", "FLAGS", ".", "lookahead", "]", "\n", "info_noop", "=", "[", "FLAGS", ".", "env", ",", "'no-ops'", ",", "FLAGS", ".", "prop", ",", "FLAGS", ".", "max_frames", ",", "FLAGS", ".", "lookahead", "]", "\n", "info_reward", "=", "[", "FLAGS", ".", "env", ",", "FLAGS", ".", "method", ",", "'Reward'", ",", "FLAGS", ".", "max_frames", ",", "FLAGS", ".", "lookahead", "]", "\n", "with", "open", "(", "FLAGS", ".", "output", ",", "\"a\"", ")", "as", "f", ":", "\n", "        ", "if", "f", ".", "tell", "(", ")", "==", "0", ":", "\n", "            ", "labels", "=", "[", "'Environment'", ",", "'Agent'", ",", "'Property'", ",", "'Max Frames'", ",", "'Lookahead'", "]", "\n", "noops", "=", "[", "(", "str", "(", "x", ")", "+", "\" noops\"", ")", "for", "x", "in", "range", "(", "FLAGS", ".", "max_noops", ")", "]", "\n", "f", ".", "write", "(", "format_list", "(", "labels", "+", "noops", ")", ")", "\n", "", "f", ".", "write", "(", "format_list", "(", "info", "+", "violation_list", ")", ")", "\n", "f", ".", "write", "(", "format_list", "(", "info_noop", "+", "noop_violation_list", ")", ")", "\n", "f", ".", "write", "(", "format_list", "(", "info_reward", "+", "reward_list", ")", ")", "\n", "", "", "def", "format_list", "(", "ls", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.check_noops.format_list": [[79, 84], ["str", "str"], "function", ["None"], ["", "", "def", "format_list", "(", "ls", ")", ":", "\n", "    ", "string", "=", "str", "(", "ls", "[", "0", "]", ")", "\n", "for", "item", "in", "ls", "[", "1", ":", "]", ":", "\n", "        ", "string", "+=", "','", "+", "str", "(", "item", ")", "\n", "", "return", "string", "+", "'\\n'", "\n", "", "if", "__name__", "==", "\"__main__\"", ":", "\n"]], "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.scripts.test_property.main": [[17, 24], ["gym.make", "prescience.labelling.get_property", "prescience.labelling.get_property.test_human", "prescience.labelling.get_property.test_random"], "function", ["home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.properties.get_property", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.test_human", "home.repos.pwc.inspect_result.HjalmarWijk_bounded-prescience.labelling.Labeller.Labeller.test_random"], ["def", "main", "(", "_", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "FLAGS", ".", "env", "+", "'NoFrameskip-v4'", ")", "\n", "labeller", "=", "get_property", "(", "env", ",", "FLAGS", ".", "prop", ")", "\n", "if", "FLAGS", ".", "human", ":", "\n", "        ", "labeller", ".", "test_human", "(", "fps", "=", "FLAGS", ".", "fps", ")", "\n", "", "else", ":", "\n", "        ", "labeller", ".", "test_random", "(", "pause", "=", "FLAGS", ".", "pause", ",", "grace", "=", "FLAGS", ".", "grace", ",", "max_steps", "=", "FLAGS", ".", "max_frames", ",", "speed", "=", "FLAGS", ".", "speed", ")", "\n", "\n"]]}