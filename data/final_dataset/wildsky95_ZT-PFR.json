{"home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.initialize.SFC.__init__": [[7, 13], ["numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_node", "=", "5", ",", "num_sfc", "=", "3", ",", "num_vnf", "=", "3", ")", ":", "\n", "        ", "self", ".", "num_node", "=", "num_node", "\n", "self", ".", "num_sfc", "=", "num_sfc", "\n", "self", ".", "num_vnf", "=", "num_vnf", "+", "2", "\n", "self", ".", "num_all_nodes", "=", "num_node", "+", "2", "\n", "self", ".", "availability_matrix", "=", "np", ".", "zeros", "(", "(", "num_sfc", ",", "num_vnf", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.initialize.SFC.physical_node": [[15, 29], ["networkx.complete_graph", "initialize.SFC.phy_graph.nodes", "initialize.SFC.phy_graph.edges", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["None"], ["", "def", "physical_node", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "phy_graph", "=", "nx", ".", "complete_graph", "(", "self", ".", "num_node", ")", "\n", "for", "(", "i", ")", "in", "self", ".", "phy_graph", ".", "nodes", "(", ")", ":", "\n", "            ", "self", ".", "phy_graph", ".", "nodes", "[", "i", "]", "[", "'CPU'", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "250", ",", "high", "=", "400", ")", "\n", "self", ".", "phy_graph", ".", "nodes", "[", "i", "]", "[", "'storage'", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "350", ",", "high", "=", "570", ")", "\n", "self", ".", "phy_graph", ".", "nodes", "[", "i", "]", "[", "'memory'", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "500", ",", "high", "=", "850", ")", "\n", "self", ".", "phy_graph", ".", "nodes", "[", "i", "]", "[", "'avail'", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.95", ",", "high", "=", "0.99999", ")", "\n", "\n", "", "for", "(", "u", ",", "v", ")", "in", "self", ".", "phy_graph", ".", "edges", "(", ")", ":", "\n", "            ", "self", ".", "phy_graph", ".", "edges", "[", "u", ",", "v", "]", "[", "\"bw\"", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "150", ",", "high", "=", "250", ")", "\n", "\n", "#         nx.draw(phy_graph, with_labels = True)", "\n", "", "return", "self", ".", "phy_graph", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.initialize.SFC.random_sfc": [[31, 48], ["networkx.complete_graph", "list", "range", "random.sample", "numpy.array", "numpy.delete", "numpy.zeros", "numpy.random.uniform", "numpy.ndenumerate", "networkx.all_simple_paths", "len", "len", "_r.append"], "methods", ["None"], ["", "def", "random_sfc", "(", "self", ")", ":", "\n", "        ", "phy_graph", "=", "nx", ".", "complete_graph", "(", "self", ".", "num_all_nodes", ")", "\n", "sg", "=", "list", "(", "nx", ".", "all_simple_paths", "(", "phy_graph", ",", "source", "=", "self", ".", "num_all_nodes", "-", "2", ",", "target", "=", "self", ".", "num_all_nodes", "-", "1", ")", ")", "\n", "_r", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "sg", ")", ")", ":", "\n", "            ", "if", "len", "(", "sg", "[", "i", "]", ")", "==", "self", ".", "num_vnf", ":", "\n", "                ", "_r", ".", "append", "(", "sg", "[", "i", "]", ")", "\n", "", "", "rand_sfc", "=", "sample", "(", "_r", ",", "self", ".", "num_sfc", ")", "\n", "sfc", "=", "np", ".", "array", "(", "rand_sfc", ")", "\n", "sfc_mapping", "=", "np", ".", "delete", "(", "sfc", ",", "obj", "=", "[", "0", ",", "self", ".", "num_vnf", "-", "1", "]", ",", "axis", "=", "1", ")", "\n", "tr_violation", "=", "np", ".", "zeros", "(", "(", "sfc_mapping", ".", "shape", "[", "0", "]", ",", "sfc_mapping", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "availability_req", "=", "np", ".", "random", ".", "uniform", "(", "high", "=", "0.99999999", ",", "low", "=", "0.98", ",", "size", "=", "(", "self", ".", "num_sfc", ",", "1", ")", ")", "\n", "for", "idx", ",", "node", "in", "np", ".", "ndenumerate", "(", "sfc_mapping", ")", ":", "\n", "            ", "self", ".", "availability_matrix", "[", "idx", "]", "=", "self", ".", "phy_graph", ".", "nodes", "[", "node", "]", "[", "'avail'", "]", "\n", "\n", "", "return", "sfc_mapping", ",", "tr_violation", ",", "availability_req", ",", "self", ".", "availability_matrix", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.SAC.create_networks": [[70, 90], ["tf_agents.networks.actor_distribution_rnn_network.ActorDistributionRnnNetwork", "tf_agents.agents.ddpg.critic_rnn_network.CriticRnnNetwork", "tf_env.observation_spec", "tf_env.action_spec", "tf_env.observation_spec", "tf_env.action_spec"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.observation_spec", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.action_spec", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.observation_spec", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.action_spec"], ["", "def", "create_networks", "(", "tf_env", ")", ":", "\n", "    ", "actor_net", "=", "actor_distribution_rnn_network", ".", "ActorDistributionRnnNetwork", "(", "\n", "tf_env", ".", "observation_spec", "(", ")", ",", "\n", "tf_env", ".", "action_spec", "(", ")", ",", "\n", "input_fc_layer_params", "=", "(", "512", ",", "512", ",", ")", ",", "\n", "\n", "lstm_size", "=", "(", "100", ",", "100", ",", ")", ",", "\n", "# rnn_construction_fn=(layers.LSTM(256 , return_sequences=True), layers.LSTM(256)),", "\n", "output_fc_layer_params", "=", "(", "256", ",", "256", ",", ")", ")", "\n", "\n", "value_net", "=", "critic_rnn_network", ".", "CriticRnnNetwork", "(", "(", "tf_env", ".", "observation_spec", "(", ")", ",", "tf_env", ".", "action_spec", "(", ")", ")", ",", "\n", "joint_fc_layer_params", "=", "(", "512", ",", "512", ",", ")", ",", "\n", "\n", "lstm_size", "=", "(", "100", ",", "100", ",", ")", ",", "\n", "output_fc_layer_params", "=", "(", "256", ",", "256", ",", ")", ",", "\n", "\n", ")", "\n", "\n", "\n", "return", "actor_net", ",", "value_net", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.SAC.monitoring_policy": [[92, 104], ["range", "tf_environment.reset", "tf_environment.step.is_last", "policy.action", "tf_environment.step", "tf_environment.step.is_last", "print", "py_environment.monitor"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.monitor"], ["", "def", "monitoring_policy", "(", "policy", ",", "py_environment", ",", "tf_environment", ",", "num_episodes", "=", "10", ")", ":", "\n", "    ", "for", "_", "in", "range", "(", "num_episodes", ")", ":", "\n", "\n", "        ", "time_step", "=", "tf_environment", ".", "reset", "(", ")", "\n", "py_environment", ".", "monitor_mode", "=", "True", "\n", "\n", "while", "not", "time_step", ".", "is_last", "(", ")", ":", "\n", "            ", "action_step", "=", "policy", ".", "action", "(", "time_step", ")", "\n", "time_step", "=", "tf_environment", ".", "step", "(", "action_step", ".", "action", ")", "\n", "if", "time_step", ".", "is_last", "(", ")", ":", "\n", "                ", "print", "(", "time_step", ")", "\n", "py_environment", ".", "monitor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.SAC.train": [[108, 325], ["os.path.expanduser", "os.path.join", "os.path.join", "os.path.join", "tensorflow.summary.create_file_writer", "tf.summary.create_file_writer.set_as_default", "tensorflow.summary.create_file_writer", "tensorflow.compat.v1.train.get_or_create_global_step", "SAC.train.evaluate"], "function", ["None"], ["", "", "", "", "def", "train", "(", "root_dir", ")", ":", "\n", "######### DIRECTORY #################", "\n", "    ", "root_dir", "=", "os", ".", "path", ".", "expanduser", "(", "root_dir", ")", "\n", "train_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"TRAIN\"", ")", "\n", "eval_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"EVAL\"", ")", "\n", "saved_model_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"Policy Saved Model\"", ")", "\n", "\n", "########### summary And Metric Objects ################", "\n", "\n", "train_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "train_dir", ",", "flush_millis", "=", "summaries_flush_secs", "*", "1000", ")", "\n", "train_summary_writer", ".", "set_as_default", "(", ")", "\n", "\n", "eval_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "eval_dir", ",", "flush_millis", "=", "summaries_flush_secs", "*", "1000", ")", "\n", "eval_metrics", "=", "[", "\n", "tf_metrics", ".", "AverageReturnMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", ",", "\n", "tf_metrics", ".", "AverageEpisodeLengthMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", "\n", "]", "\n", "######################################################################################3", "\n", "global_step", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "\n", "with", "tf", ".", "summary", ".", "record_if", "(", "global_step", "%", "summary_interval", "==", "0", ")", ":", "\n", "\n", "################# ENV_setup ###########################", "\n", "        ", "eval_py_env", "=", "SFC_run", "(", ")", "\n", "\n", "eval_tf_env", "=", "tf_py_environment", ".", "TFPyEnvironment", "(", "eval_py_env", ")", "\n", "tf_env", "=", "tf_py_environment", ".", "TFPyEnvironment", "(", "\n", "parallel_py_environment", ".", "ParallelPyEnvironment", "(", "[", "SFC_run", "]", "*", "num_parallel_environments", ")", ")", "\n", "################# AGENT ################################", "\n", "\n", "optimizer", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ",", "epsilon", "=", "1e-5", ")", "\n", "\n", "actor_net", ",", "critic_net", "=", "create_networks", "(", "tf_env", ")", "\n", "\n", "tf_agent", "=", "sac_agent", ".", "SacAgent", "(", "time_step_spec", "=", "tf_env", ".", "time_step_spec", "(", ")", ",", "\n", "action_spec", "=", "tf_env", ".", "action_spec", "(", ")", ",", "\n", "actor_network", "=", "actor_net", ",", "\n", "critic_network", "=", "critic_net", ",", "\n", "actor_optimizer", "=", "optimizer", ",", "\n", "critic_optimizer", "=", "optimizer", ",", "\n", "alpha_optimizer", "=", "optimizer", ",", "\n", "target_update_tau", "=", "target_update_tau", ",", "\n", "target_update_period", "=", "target_update_period", ",", "\n", "td_errors_loss_fn", "=", "tf", ".", "math", ".", "squared_difference", ",", "\n", "gamma", "=", "gamma", ",", "\n", "reward_scale_factor", "=", "reward_scale_factor", ",", "\n", ")", "\n", "\n", "tf_agent", ".", "initialize", "(", ")", "\n", "\n", "################## TRAIN METRICS ##############################", "\n", "\n", "environment_step_metrics", "=", "tf_metrics", ".", "EnvironmentSteps", "(", ")", "\n", "step_metrics", "=", "[", "tf_metrics", ".", "NumberOfEpisodes", "(", ")", ",", "\n", "environment_step_metrics", ",", "]", "\n", "\n", "train_metrics", "=", "step_metrics", "+", "[", "\n", "tf_metrics", ".", "AverageReturnMetric", "(", "batch_size", "=", "num_parallel_environments", ")", ",", "\n", "tf_metrics", ".", "AverageEpisodeLengthMetric", "(", "batch_size", "=", "num_parallel_environments", ")", ",", "\n", "]", "\n", "################ POLICY ##########################################", "\n", "\n", "eval_policy", "=", "tf_agent", ".", "policy", "\n", "collect_policy", "=", "tf_agent", ".", "collect_policy", "\n", "\n", "############### REPLAY_BUFFER ####################################", "\n", "\n", "replay_buffer", "=", "tf_uniform_replay_buffer", ".", "TFUniformReplayBuffer", "(", "\n", "tf_agent", ".", "collect_data_spec", ",", "\n", "batch_size", "=", "num_parallel_environments", ",", "\n", "max_length", "=", "replay_buffer_capacity", "\n", ")", "\n", "############# CHECKPOINTER_OBJECTS ################################", "\n", "\n", "train_checkpointer", "=", "common", ".", "Checkpointer", "(", "ckpt_dir", "=", "train_dir", ",", "agent", "=", "tf_agent", ",", "\n", "global_step", "=", "global_step", ",", "\n", "metrics", "=", "metric_utils", ".", "MetricsGroup", "(", "train_metrics", ",", "\"train_metrics\"", ")", "\n", ")", "\n", "\n", "policy_checkpointer", "=", "common", ".", "Checkpointer", "(", "ckpt_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"POLICY\"", ")", ",", "\n", "policy", "=", "eval_policy", ",", "global_step", "=", "global_step", ",", "\n", ")", "\n", "\n", "saved_model", "=", "policy_saver", ".", "PolicySaver", "(", "policy", "=", "eval_policy", ",", "train_step", "=", "global_step", ")", "\n", "\n", "train_checkpointer", ".", "initialize_or_restore", "(", ")", "\n", "\n", "############## TRAINING_FUNCS ##########################################", "\n", "\n", "collect_driver", "=", "dynamic_episode_driver", ".", "DynamicEpisodeDriver", "(", "tf_env", ",", "collect_policy", ",", "\n", "observers", "=", "[", "replay_buffer", ".", "add_batch", "]", "+", "\n", "train_metrics", ",", "\n", "num_episodes", "=", "collect_episodes_per_iteration", ")", "\n", "\n", "def", "train_step", "(", ")", ":", "\n", "            ", "trajectories", "=", "replay_buffer", ".", "gather_all", "(", ")", "\n", "return", "tf_agent", ".", "train", "(", "experience", "=", "trajectories", ")", "\n", "\n", "", "def", "evaluate", "(", ")", ":", "\n", "            ", "metric_utils", ".", "eager_compute", "(", "eval_metrics", ",", "eval_tf_env", ",", "eval_policy", ",", "num_eval_episodes", ",", "global_step", ",", "\n", "eval_summary_writer", ",", "'Metrics'", ")", "\n", "\n", "", "def", "monitoring_policy", "(", "policy", ",", "py_environment", ",", "tf_environment", ",", "num_episodes", "=", "10", ",", "episode", "=", "global_step", ".", "numpy", "(", ")", ")", ":", "\n", "            ", "crit", "=", "0", "\n", "warn", "=", "0", "\n", "norm", "=", "0", "\n", "k_crit", "=", "0.0001", "\n", "k_warn", "=", "0", "\n", "k_norm", "=", "0", "\n", "reactive", "=", "0", "\n", "proactive", "=", "0", "\n", "fail", "=", "0", "\n", "for", "_", "in", "range", "(", "num_episodes", ")", ":", "\n", "\n", "                ", "time_step", "=", "tf_environment", ".", "reset", "(", ")", "\n", "state", "=", "policy", ".", "get_initial_state", "(", "tf_environment", ".", "batch_size", ")", "\n", "\n", "# py_environment.monitor_mode = True", "\n", "\n", "while", "not", "time_step", ".", "is_last", "(", ")", ":", "\n", "                    ", "st", "=", "copy", ".", "deepcopy", "(", "py_environment", ".", "VNF_state", ")", "\n", "policy_step", "=", "policy", ".", "action", "(", "time_step", ",", "state", ")", "\n", "state", "=", "policy_step", ".", "state", "\n", "a", "=", "policy_step", ".", "action", "\n", "action_space", "=", "np", ".", "array", "(", "a", ")", ".", "reshape", "(", "py_environment", ".", "sfc_map", ".", "shape", ")", "\n", "time_step", "=", "tf_environment", ".", "step", "(", "a", ")", "\n", "for", "idx", ",", "val", "in", "np", ".", "ndenumerate", "(", "st", ")", ":", "\n", "                        ", "if", "val", "==", "2", ":", "\n", "                            ", "fail", "+=", "1", "\n", "crit", "+=", "1", "\n", "if", "-", "0.3", "<=", "action_space", "[", "idx", "]", "<", "0.3", ":", "\n", "\n", "                                ", "k_crit", "+=", "1", "\n", "if", "py_environment", ".", "backup_map", "[", "idx", "]", "!=", "-", "1", ":", "\n", "                                    ", "proactive", "+=", "1", "\n", "", "else", ":", "\n", "                                    ", "reactive", "+=", "1", "\n", "", "", "", "elif", "val", "==", "1", ":", "\n", "                            ", "warn", "+=", "1", "\n", "if", "-", "1", "<=", "action_space", "[", "idx", "]", "<", "-", "0.3", ":", "\n", "                                ", "k_warn", "+=", "1", "\n", "", "", "else", ":", "\n", "                            ", "norm", "+=", "1", "\n", "if", "0.3", "<=", "action_space", "[", "idx", "]", "<=", "1", ":", "\n", "                                ", "k_norm", "+=", "1", "\n", "# py_environment.availability_ratio()", "\n", "", "", "", "", "", "with", "open", "(", "'data.csv'", ",", "'a'", ")", "as", "csv_file", ":", "\n", "                ", "csv_writer", "=", "csv", ".", "DictWriter", "(", "csv_file", ",", "fieldnames", "=", "fieldnames", ")", "\n", "# \"critical_accuracy\", \"warning_accuracy\", \"normal_accuracy\", \"Proactive\", \"Reactive\"", "\n", "info", "=", "{", "\n", "\"episode\"", ":", "episode", ",", "\n", "\"critical_accuracy\"", ":", "k_crit", "/", "crit", ",", "\n", "\"warning_accuracy\"", ":", "k_warn", "/", "warn", ",", "\n", "\"normal_accuracy\"", ":", "k_norm", "/", "norm", ",", "\n", "\"Proactive\"", ":", "proactive", "/", "k_crit", ",", "\n", "\"Reactive\"", ":", "reactive", "/", "k_crit", "\n", "}", "\n", "\n", "csv_writer", ".", "writerow", "(", "info", ")", "\n", "\n", "", "", "if", "use_tf_functions", ":", "\n", "# TODO(b/123828980): Enable once the cause for slowdown was identified.", "\n", "            ", "collect_driver", ".", "run", "=", "common", ".", "function", "(", "collect_driver", ".", "run", ",", "autograph", "=", "True", ")", "\n", "tf_agent", ".", "train", "=", "common", ".", "function", "(", "tf_agent", ".", "train", ",", "autograph", "=", "True", ")", "\n", "train_step", "=", "common", ".", "function", "(", "train_step", ")", "\n", "\n", "##################### TRAINING !!!!!!!!########################", "\n", "\n", "", "collect_time", "=", "0", "\n", "train_time", "=", "0", "\n", "time_at_step", "=", "global_step", ".", "numpy", "(", ")", "\n", "\n", "while", "environment_step_metrics", ".", "result", "(", ")", "<", "num_environment_steps", ":", "\n", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "collect_driver", ".", "run", "(", ")", "\n", "collect_time", "+=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "total_loss", "=", "train_step", "(", ")", "\n", "\n", "replay_buffer", ".", "clear", "(", ")", "\n", "train_time", "=", "+", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "for", "train_metric", "in", "train_metrics", ":", "\n", "                ", "train_metric", ".", "tf_summaries", "(", "train_step", "=", "global_step", ",", "step_metrics", "=", "step_metrics", ")", "\n", "\n", "", "global_step_val", "=", "global_step", ".", "numpy", "(", ")", "\n", "\n", "if", "global_step_val", "%", "log_interval", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\"step = %d , loss = %f\"", ",", "global_step_val", ",", "total_loss", ".", "loss", ")", "\n", "step_per_sec", "=", "(", "(", "global_step_val", "-", "time_at_step", ")", "/", "(", "collect_time", "+", "train_time", ")", ")", "\n", "logging", ".", "info", "(", "\"%.3f steps/sec\"", ",", "step_per_sec", ")", "\n", "logging", ".", "info", "(", "\"collect time = {} , train time = {}\"", ".", "format", "(", "collect_time", ",", "train_time", ")", ")", "\n", "\n", "with", "tf", ".", "summary", ".", "record_if", "(", "True", ")", ":", "\n", "                    ", "tf", ".", "summary", ".", "scalar", "(", "name", "=", "\"global step per sec\"", ",", "data", "=", "step_per_sec", ",", "step", "=", "global_step", ")", "\n", "\n", "", "time_at_step", "=", "global_step_val", "\n", "collect_time", "=", "0", "\n", "train_time", "=", "0", "\n", "", "if", "global_step_val", "%", "eval_interval", "==", "0", "and", "global_step_val", ">", "0", ":", "\n", "                ", "evaluate", "(", ")", "\n", "\n", "", "if", "global_step_val", "%", "50", "==", "0", "and", "global_step_val", ">", "0", ":", "\n", "                ", "monitoring_policy", "(", "eval_policy", ",", "eval_py_env", ",", "eval_tf_env", ",", "episode", "=", "global_step_val", ")", "\n", "\n", "# if global_step_val % 100 == 0 and global_step_val > 0:", "\n", "#     monitoring_policy(eval_policy,eval_py_env, eval_tf_env , episode=global_step_val)", "\n", "\n", "", "if", "global_step_val", "%", "checkpoint_interval", "==", "0", ":", "\n", "                ", "train_checkpointer", ".", "save", "(", "global_step", "=", "global_step_val", ")", "\n", "policy_checkpointer", ".", "save", "(", "global_step", "=", "global_step_val", ")", "\n", "saved_model_path", "=", "os", ".", "path", ".", "join", "(", "saved_model_dir", ",", "\"Policy_\"", "+", "(", "\"%d\"", "%", "global_step_val", ")", ".", "zfill", "(", "9", ")", ")", "\n", "saved_model", ".", "save", "(", "saved_model_path", ")", "\n", "\n", "", "", "", "evaluate", "(", ")", "\n", "# monitoring_policy(eval_policy, eval_py_env, eval_tf_env)", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.SAC.main": [[328, 335], ["absl.logging.set_verbosity", "SAC.train", "AttributeError"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.train"], ["", "def", "main", "(", "_", ")", ":", "\n", "    ", "logging", ".", "set_verbosity", "(", "logging", ".", "INFO", ")", "\n", "\n", "if", "FLAGS", ".", "root_dir", "is", "None", ":", "\n", "        ", "raise", "AttributeError", "(", "\"train_eval requires a root dir\"", ")", "\n", "\n", "", "train", "(", "root_dir", "=", "FLAGS", ".", "root_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.__init__": [[31, 75], ["tf_agents.environments.py_environment.PyEnvironment.__init__", "numpy.zeros", "numpy.zeros", "numpy.array", "copy.deepcopy", "copy.deepcopy", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.full", "copy.deepcopy", "numpy.zeros", "copy.deepcopy", "numpy.zeros", "copy.deepcopy", "copy.deepcopy", "tf_agents.specs.array_spec.BoundedArraySpec", "tf_agents.specs.array_spec.BoundedArraySpec", "new_SFC.SFC_run.GetObservationDimension", "new_SFC.SFC_run.GetActionDimension", "new_SFC.SFC_run.GetActionDimension"], "methods", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.__init__", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetObservationDimension", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetActionDimension", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetActionDimension"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "VNF_state", "=", "np", ".", "zeros", "(", "(", "sfc_map", ".", "shape", ")", ")", "\n", "self", ".", "trans_step", "=", "np", ".", "zeros", "(", "(", "sfc_map", ".", "shape", ")", ")", "\n", "self", ".", "posible_states", "=", "np", ".", "array", "(", "[", "0", ",", "1", ",", "2", "]", ")", "\n", "self", ".", "phy_nodes", "=", "copy", ".", "deepcopy", "(", "phy_nodes", ")", "\n", "self", ".", "phy_nodes_init", "=", "copy", ".", "deepcopy", "(", "phy_nodes", ")", "\n", "self", ".", "sfc_map", "=", "sfc_map", "\n", "self", ".", "th", "=", "sfc_th", "\n", "self", ".", "transition_prob", "=", "transition_prob", "\n", "self", ".", "_state", "=", "None", "\n", "self", ".", "th_store", "=", "np", ".", "zeros", "(", "(", "sfc_th", ".", "shape", ")", ")", "\n", "self", ".", "failure", "=", "np", ".", "zeros", "(", "(", "self", ".", "sfc_map", ".", "shape", ")", ")", "\n", "self", ".", "fail_th", "=", "np", ".", "array", "(", "[", "2", ",", "4", ",", "5", "]", ")", "\n", "self", ".", "action_index", "=", "None", "\n", "self", ".", "backup_node_req", "=", "[", "50", ",", "70", ",", "100", "]", "\n", "self", ".", "backup_bw_req", "=", "[", "50", ",", "100", "]", "\n", "self", ".", "backup_map", "=", "np", ".", "full", "(", "(", "self", ".", "sfc_map", ".", "shape", ")", ",", "-", "1", ")", "\n", "self", ".", "backup_map_init", "=", "copy", ".", "deepcopy", "(", "self", ".", "backup_map", ")", "\n", "self", ".", "backup_availability", "=", "np", ".", "zeros", "(", "(", "self", ".", "sfc_map", ".", "shape", ")", ")", "\n", "self", ".", "backup_availability_init", "=", "copy", ".", "deepcopy", "(", "self", ".", "backup_availability", ")", "\n", "self", ".", "paths", "=", "None", "\n", "self", ".", "failure_protocol_map", "=", "np", ".", "zeros", "(", "self", ".", "sfc_map", ".", "shape", ")", "\n", "self", ".", "last_chosen_path", "=", "[", "]", "\n", "self", ".", "borrowed_bw", "=", "[", "]", "\n", "self", ".", "step_num", "=", "0", "\n", "self", ".", "_episode_ended", "=", "False", "\n", "self", ".", "episode_length", "=", "200", "\n", "self", ".", "availability_matrix", "=", "copy", ".", "deepcopy", "(", "availability_matrix", ")", "\n", "self", ".", "availability_req", "=", "copy", ".", "deepcopy", "(", "availability", ")", "\n", "self", ".", "monitor_mode", "=", "False", "\n", "self", ".", "lost", "=", "0", "\n", "self", ".", "wrong_backup_action", "=", "0", "\n", "self", ".", "wrong_fail_action", "=", "0", "\n", "self", ".", "not_enough_backup_resource", "=", "False", "\n", "\n", "self", ".", "_action_spec", "=", "array_spec", ".", "BoundedArraySpec", "(", "shape", "=", "(", "self", ".", "GetActionDimension", "(", ")", "[", "0", "]", "*", "self", ".", "GetActionDimension", "(", ")", "[", "1", "]", ",", ")", ",", "dtype", "=", "np", ".", "float32", ",", "\n", "minimum", "=", "-", "1.0", ",", "\n", "maximum", "=", "1.0", ",", "name", "=", "'action'", ")", "\n", "self", ".", "_observation_spec", "=", "array_spec", ".", "BoundedArraySpec", "(", "shape", "=", "(", "self", ".", "GetObservationDimension", "(", ")", ",", ")", ",", "dtype", "=", "np", ".", "float32", ",", "minimum", "=", "0.0", ",", "maximum", "=", "2", ",", "name", "=", "'observation'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.markov_trans": [[78, 99], ["numpy.ndenumerate", "numpy.random.choice", "numpy.random.choice"], "methods", ["None"], ["", "def", "markov_trans", "(", "self", ")", ":", "\n", "        ", "self", ".", "lost", "=", "0", "\n", "for", "idx", ",", "state", "in", "np", ".", "ndenumerate", "(", "self", ".", "VNF_state", ")", ":", "\n", "            ", "if", "state", "==", "0", ":", "\n", "                ", "self", ".", "VNF_state", "[", "idx", "]", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "\n", "p", "=", "[", "1", "-", "(", "self", ".", "transition_prob", "[", "idx", "[", "0", "]", ",", "idx", "[", "1", "]", ",", "0", "]", ")", ",", "\n", "self", ".", "transition_prob", "[", "idx", "[", "0", "]", ",", "idx", "[", "1", "]", ",", "0", "]", "]", ")", "\n", "self", ".", "trans_step", "[", "idx", "]", "=", "1", "if", "self", ".", "VNF_state", "[", "idx", "]", "==", "1", "else", "0", "\n", "\n", "", "elif", "state", "==", "1", ":", "\n", "                ", "if", "self", ".", "trans_step", "[", "idx", "]", ">", "2", ":", "\n", "                    ", "p2", "=", "self", ".", "transition_prob", "[", "idx", "[", "0", "]", ",", "idx", "[", "1", "]", ",", "1", "]", "*", "(", "self", ".", "trans_step", "[", "idx", "]", "-", "2", ")", "\n", "if", "p2", ">=", "1", ":", "\n", "                        ", "p2", "=", "1", "\n", "", "self", ".", "VNF_state", "[", "idx", "]", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", "]", ",", "p", "=", "[", "(", "1", "-", "p2", ")", "/", "2", ",", "(", "1", "-", "p2", ")", "/", "2", ",", "p2", "]", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "trans_step", "[", "idx", "]", "+=", "1", "\n", "", "", "elif", "state", "==", "2", ":", "\n", "\n", "                ", "self", ".", "VNF_state", "[", "idx", "]", "=", "0", "\n", "self", ".", "lost", "-=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.backup_placement": [[100, 158], ["networkx.get_node_attributes", "sorted", "len", "len"], "methods", ["None"], ["", "", "", "def", "backup_placement", "(", "self", ",", "action_idx", ")", ":", "\n", "        ", "chosen_node", "=", "None", "\n", "\n", "if", "self", ".", "backup_map", "[", "action_idx", "]", "==", "-", "1", ":", "\n", "            ", "self", ".", "wrong_backup_action", "=", "0", "\n", "\n", "cpu_cap_dict", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes", ",", "\"CPU\"", ")", "\n", "self", ".", "sorted_CPU", "=", "sorted", "(", "cpu_cap_dict", ",", "key", "=", "cpu_cap_dict", ".", "get", ",", "reverse", "=", "True", ")", "\n", "i", "=", "0", "\n", "done", "=", "False", "\n", "self", ".", "not_enough_backup_resource", "=", "False", "\n", "\n", "while", "not", "done", ":", "#### choosing backup nodewith greedy policy on CPU capacity", "\n", "                ", "if", "i", "<", "len", "(", "self", ".", "sorted_CPU", ")", "and", "self", ".", "sorted_CPU", "[", "i", "]", "==", "self", ".", "sfc_map", "[", "action_idx", "]", ":", "\n", "                    ", "i", "+=", "1", "\n", "", "else", ":", "\n", "#### backup node must not be the mapping node", "\n", "\n", "                    ", "if", "i", "<", "len", "(", "self", ".", "sorted_CPU", ")", ":", "\n", "                        ", "if", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "sorted_CPU", "[", "i", "]", "]", "[", "'CPU'", "]", "-", "self", ".", "backup_node_req", "[", "0", "]", ">=", "0", "and", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "sorted_CPU", "[", "i", "]", "]", "[", "'storage'", "]", "-", "self", ".", "backup_node_req", "[", "1", "]", ">=", "0", "and", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "sorted_CPU", "[", "i", "]", "]", "[", "'memory'", "]", "-", "self", ".", "backup_node_req", "[", "2", "]", ">=", "0", "and", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "self", ".", "sorted_CPU", "[", "i", "]", "]", "[", "'bw'", "]", "-", "self", ".", "backup_bw_req", "[", "0", "]", ">=", "0", ":", "\n", "                            ", "done", "=", "True", "\n", "self", ".", "not_enough_backup_resource", "=", "False", "\n", "chosen_node", "=", "self", ".", "sorted_CPU", "[", "i", "]", "\n", "\n", "", "else", ":", "\n", "                            ", "done", "=", "False", "\n", "\n", "\n", "\n", "", "", "else", ":", "\n", "                        ", "self", ".", "not_enough_backup_resource", "=", "True", "\n", "\n", "done", "=", "True", "\n", "\n", "", "", "i", "+=", "1", "\n", "\n", "# negative reward", "\n", "", "if", "self", ".", "not_enough_backup_resource", ":", "\n", "                ", "pass", "\n", "\n", "\n", "", "else", ":", "\n", "                ", "reward", "=", "+", "10", "\n", "self", ".", "backup_map", "[", "action_idx", "]", "=", "chosen_node", "\n", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "chosen_node", "]", "[", "'CPU'", "]", "-=", "self", ".", "backup_node_req", "[", "0", "]", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "chosen_node", "]", "[", "'storage'", "]", "-=", "self", ".", "backup_node_req", "[", "1", "]", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "chosen_node", "]", "[", "'memory'", "]", "-=", "self", ".", "backup_node_req", "[", "2", "]", "\n", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "chosen_node", "]", "[", "'bw'", "]", "-=", "self", ".", "backup_bw_req", "[", "0", "]", "\n", "\n", "\n", "", "", "else", ":", "\n", "\n", "            ", "self", ".", "wrong_backup_action", "=", "-", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.backup_removal": [[161, 177], ["new_SFC.SFC_run.phy_nodes.nodes.data", "new_SFC.SFC_run.phy_nodes.edges.data"], "methods", ["None"], ["", "", "def", "backup_removal", "(", "self", ",", "action_idx", ")", ":", "\n", "\n", "        ", "if", "self", ".", "backup_map", "[", "action_idx", "]", "==", "-", "1", ":", "\n", "            ", "pass", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'CPU'", "]", "+=", "self", ".", "backup_node_req", "[", "0", "]", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'storage'", "]", "+=", "self", ".", "backup_node_req", "[", "1", "]", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'memory'", "]", "+=", "self", ".", "backup_node_req", "[", "2", "]", "\n", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'bw'", "]", "+=", "self", ".", "backup_bw_req", "[", "0", "]", "\n", "\n", "self", ".", "backup_map", "[", "action_idx", "]", "=", "-", "1", "\n", "self", ".", "backup_availability", "[", "action_idx", "]", "=", "0", "\n", "\n", "", "return", "self", ".", "backup_map", ",", "self", ".", "phy_nodes", ".", "nodes", ".", "data", "(", ")", ",", "self", ".", "phy_nodes", ".", "edges", ".", "data", "(", ")", ",", "self", ".", "backup_availability", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.failure_protocol": [[179, 230], ["list", "networkx.shortest_simple_paths", "new_SFC.SFC_run.borrowed_bw.append", "new_SFC.SFC_run.last_chosen_path.append", "new_SFC.SFC_run.borrowed_bw.append", "new_SFC.SFC_run.last_chosen_path.append", "range", "all", "len", "len", "range", "len"], "methods", ["None"], ["", "def", "failure_protocol", "(", "self", ",", "action_idx", ")", ":", "\n", "        ", "chosen_path", "=", "None", "\n", "reward", "=", "0", "\n", "not_enough_resource", "=", "False", "\n", "i", "=", "0", "\n", "done", "=", "False", "\n", "if", "self", ".", "backup_map", "[", "action_idx", "]", "!=", "-", "1", ":", "\n", "            ", "self", ".", "wrong_fail_action", "=", "0", "\n", "\n", "self", ".", "paths", "=", "list", "(", "nx", ".", "shortest_simple_paths", "(", "self", ".", "phy_nodes", ",", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "\n", "self", ".", "backup_map", "[", "action_idx", "]", ")", ")", "\n", "\n", "while", "not", "done", ":", "\n", "\n", "                ", "if", "i", "<", "len", "(", "self", ".", "paths", ")", "-", "1", ":", "\n", "\n", "                    ", "done", "=", "all", "(", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "paths", "[", "i", "]", "[", "j", "]", ",", "self", ".", "paths", "[", "i", "]", "[", "j", "+", "1", "]", "]", "[", "\"bw\"", "]", "-", "self", ".", "backup_bw_req", "[", "1", "]", ">=", "0", "for", "j", "in", "range", "(", "len", "(", "self", ".", "paths", "[", "i", "]", ")", "-", "1", ")", ")", "\n", "chosen_path", "=", "i", "\n", "\n", "", "else", ":", "\n", "                    ", "done", "=", "True", "\n", "chosen_path", "=", "0", "\n", "not_enough_resource", "=", "True", "\n", "\n", "", "i", "+=", "1", "\n", "\n", "", "if", "not_enough_resource", ":", "\n", "\n", "                ", "self", ".", "borrowed_bw", ".", "append", "(", "self", ".", "backup_bw_req", "[", "1", "]", "-", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'bw'", "]", ")", "\n", "\n", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "sfc_map", "[", "action_idx", "]", ",", "self", ".", "backup_map", "[", "action_idx", "]", "]", "[", "'bw'", "]", "=", "0", "\n", "self", ".", "last_chosen_path", ".", "append", "(", "self", ".", "paths", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "borrowed_bw", ".", "append", "(", "0", ")", "\n", "\n", "self", ".", "last_chosen_path", ".", "append", "(", "self", ".", "paths", "[", "chosen_path", "]", ")", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "paths", "[", "chosen_path", "]", ")", "-", "1", ")", ":", "\n", "                    ", "self", ".", "phy_nodes", ".", "edges", "[", "self", ".", "paths", "[", "chosen_path", "]", "[", "j", "]", ",", "self", ".", "paths", "[", "chosen_path", "]", "[", "j", "+", "1", "]", "]", "[", "'bw'", "]", "-=", "self", ".", "backup_bw_req", "[", "1", "]", "\n", "\n", "", "", "self", ".", "failure_protocol_map", "[", "action_idx", "]", "=", "1", "\n", "\n", "\n", "\n", "", "else", ":", "\n", "# no backup", "\n", "            ", "self", ".", "wrong_fail_action", "=", "-", "50", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.failure_protocol_cleanup": [[233, 251], ["numpy.ndenumerate", "numpy.zeros", "numpy.zeros", "len", "enumerate", "new_SFC.SFC_run.backup_removal", "range", "len"], "methods", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.backup_removal"], ["", "", "def", "failure_protocol_cleanup", "(", "self", ")", ":", "\n", "        ", "for", "idx", ",", "val", "in", "np", ".", "ndenumerate", "(", "self", ".", "failure_protocol_map", ")", ":", "\n", "            ", "if", "val", "==", "1", ":", "\n", "                ", "self", ".", "backup_removal", "(", "idx", ")", "\n", "", "", "self", ".", "failure_protocol_map", "=", "np", ".", "zeros", "(", "self", ".", "sfc_map", ".", "shape", ")", "\n", "if", "len", "(", "self", ".", "last_chosen_path", ")", "!=", "0", ":", "\n", "            ", "for", "path", "in", "enumerate", "(", "self", ".", "last_chosen_path", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "path", "[", "1", "]", ")", "-", "1", ")", ":", "\n", "                    ", "self", ".", "phy_nodes", ".", "edges", "[", "path", "[", "1", "]", "[", "j", "]", ",", "path", "[", "1", "]", "[", "j", "+", "1", "]", "]", "[", "'bw'", "]", "+=", "(", "self", ".", "backup_bw_req", "[", "1", "]", "-", "self", ".", "borrowed_bw", "[", "path", "[", "0", "]", "]", ")", "\n", "\n", "\n", "", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "self", ".", "last_chosen_path", "=", "[", "]", "\n", "self", ".", "failure_protocol_map", "=", "np", ".", "zeros", "(", "self", ".", "sfc_map", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetBW": [[252, 258], ["networkx.get_edge_attributes", "networkx.get_edge_attributes", "numpy.fromiter", "bw_availablity.values", "networkx.get_edge_attributes.keys"], "methods", ["None"], ["", "def", "GetBW", "(", "self", ")", ":", "\n", "        ", "d2", "=", "nx", ".", "get_edge_attributes", "(", "self", ".", "phy_nodes", ",", "\"bw\"", ")", "\n", "d1", "=", "nx", ".", "get_edge_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"bw\"", ")", "\n", "bw_availablity", "=", "{", "k", ":", "d2", "[", "k", "]", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "&", "d2", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "bw_availablity", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetBWRatio": [[259, 265], ["networkx.get_edge_attributes", "numpy.fromiter", "bw_req_ratio.values", "networkx.get_edge_attributes.keys"], "methods", ["None"], ["", "def", "GetBWRatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "self", ".", "backup_bw_req", "[", "0", "]", "\n", "d1", "=", "nx", ".", "get_edge_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"bw\"", ")", "\n", "bw_req_ratio", "=", "{", "k", ":", "d2", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "bw_req_ratio", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetCPURatio": [[268, 274], ["networkx.get_node_attributes", "networkx.get_node_attributes", "numpy.fromiter", "CPU_availablity.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetCPURatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes", ",", "\"CPU\"", ")", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"CPU\"", ")", "\n", "CPU_availablity", "=", "{", "k", ":", "d2", "[", "k", "]", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "&", "d2", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "CPU_availablity", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetCPUReqRatio": [[275, 281], ["networkx.get_node_attributes", "numpy.fromiter", "CPU_req_ratio.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetCPUReqRatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "self", ".", "backup_node_req", "[", "0", "]", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"CPU\"", ")", "\n", "CPU_req_ratio", "=", "{", "k", ":", "d2", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "CPU_req_ratio", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetStorage": [[282, 288], ["networkx.get_node_attributes", "networkx.get_node_attributes", "numpy.fromiter", "storage_availablity.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetStorage", "(", "self", ")", ":", "\n", "        ", "d2", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes", ",", "\"storage\"", ")", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"storage\"", ")", "\n", "storage_availablity", "=", "{", "k", ":", "d2", "[", "k", "]", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "&", "d2", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "storage_availablity", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetStorageReqRatio": [[289, 295], ["networkx.get_node_attributes", "numpy.fromiter", "storage_req_ratio.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetStorageReqRatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "self", ".", "backup_node_req", "[", "1", "]", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"storage\"", ")", "\n", "storage_req_ratio", "=", "{", "k", ":", "d2", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "storage_req_ratio", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetMemoryRatio": [[296, 302], ["networkx.get_node_attributes", "networkx.get_node_attributes", "numpy.fromiter", "mem_availablity.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetMemoryRatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes", ",", "\"memory\"", ")", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"memory\"", ")", "\n", "mem_availablity", "=", "{", "k", ":", "d2", "[", "k", "]", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "&", "d2", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "mem_availablity", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetMemoryReqRatio": [[303, 309], ["networkx.get_node_attributes", "numpy.fromiter", "memory_req_ratio.values", "networkx.get_node_attributes.keys"], "methods", ["None"], ["", "def", "GetMemoryReqRatio", "(", "self", ")", ":", "\n", "        ", "d2", "=", "self", ".", "backup_node_req", "[", "2", "]", "\n", "d1", "=", "nx", ".", "get_node_attributes", "(", "self", ".", "phy_nodes_init", ",", "\"memory\"", ")", "\n", "memory_req_ratio", "=", "{", "k", ":", "d2", "/", "d1", "[", "k", "]", "for", "k", "in", "d1", ".", "keys", "(", ")", "}", "\n", "\n", "return", "np", ".", "fromiter", "(", "memory_req_ratio", ".", "values", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.Getbackup_availability": [[310, 316], ["numpy.ndenumerate", "new_SFC.SFC_run.backup_availability.flatten"], "methods", ["None"], ["", "def", "Getbackup_availability", "(", "self", ")", ":", "\n", "\n", "        ", "for", "idx", ",", "i", "in", "np", ".", "ndenumerate", "(", "self", ".", "backup_map", ")", ":", "\n", "            ", "self", ".", "backup_availability", "[", "idx", "]", "=", "1", "if", "i", "!=", "-", "1", "else", "0", "\n", "\n", "", "return", "self", ".", "backup_availability", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.Observation": [[317, 327], ["observation.extend", "new_SFC.SFC_run.VNF_state.flatten().tolist", "new_SFC.SFC_run.VNF_state.flatten"], "methods", ["None"], ["", "def", "Observation", "(", "self", ")", ":", "\n", "        ", "observation", "=", "[", "]", "\n", "#         observation.extend(self.GetBW().tolist())", "\n", "#         observation.extend(self.GetCPURatio().tolist())", "\n", "#         observation.extend(self.GetStorage().tolist())", "\n", "#         observation.extend(self.GetMemoryRatio().tolist())", "\n", "observation", ".", "extend", "(", "self", ".", "VNF_state", ".", "flatten", "(", ")", ".", "tolist", "(", ")", ")", "\n", "#         observation.extend(self.Getbackup_availability().tolist())", "\n", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetObservationDimension": [[328, 330], ["len", "new_SFC.SFC_run.Observation"], "methods", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.Observation"], ["", "def", "GetObservationDimension", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "Observation", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.GetActionDimension": [[331, 333], ["None"], "methods", ["None"], ["", "def", "GetActionDimension", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sfc_map", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.action_spec": [[334, 336], ["None"], "methods", ["None"], ["", "def", "action_spec", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_action_spec", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.observation_spec": [[337, 339], ["None"], "methods", ["None"], ["", "def", "observation_spec", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_observation_spec", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run._reset": [[340, 345], ["new_SFC.SFC_run.__init__", "new_SFC.SFC_run.Observation", "tf_agents.trajectories.time_step.restart", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.__init__", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.Observation"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "__init__", "(", ")", "\n", "self", ".", "_state", "=", "self", ".", "Observation", "(", ")", "\n", "self", ".", "_episode_ended", "=", "False", "\n", "return", "ts", ".", "restart", "(", "np", ".", "array", "(", "self", ".", "_state", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.availability": [[347, 358], ["numpy.ndenumerate"], "methods", ["None"], ["", "def", "availability", "(", "self", ")", ":", "\n", "        ", "for", "idx", ",", "node", "in", "np", ".", "ndenumerate", "(", "self", ".", "sfc_map", ")", ":", "\n", "            ", "if", "self", ".", "backup_map", "[", "idx", "]", "!=", "-", "1", ":", "\n", "                ", "self", ".", "availability_matrix", "[", "idx", "]", "=", "self", ".", "phy_nodes", ".", "nodes", "[", "node", "]", "[", "'avail'", "]", "+", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "backup_map", "[", "idx", "]", "]", "[", "'avail'", "]", "-", "(", "self", ".", "phy_nodes", ".", "nodes", "[", "self", ".", "backup_map", "[", "idx", "]", "]", "[", "'avail'", "]", "*", "\n", "self", ".", "phy_nodes", ".", "nodes", "[", "node", "]", "[", "'avail'", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "availability_matrix", "[", "idx", "]", "=", "self", ".", "phy_nodes", ".", "nodes", "[", "node", "]", "[", "'avail'", "]", "\n", "\n", "", "", "return", "self", ".", "availability_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.availability_ratio": [[359, 361], ["numpy.prod"], "methods", ["None"], ["", "def", "availability_ratio", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "prod", "(", "self", ".", "availability_matrix", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "-", "self", ".", "availability_req", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run._step": [[390, 447], ["_action.reshape", "new_SFC.SFC_run.failure_protocol_cleanup", "numpy.ndenumerate", "new_SFC.SFC_run.markov_trans", "new_SFC.SFC_run.Observation", "new_SFC.SFC_run.reset", "tf_agents.trajectories.time_step.termination", "tf_agents.trajectories.time_step.transition", "new_SFC.SFC_run.backup_placement", "numpy.array", "numpy.array", "new_SFC.SFC_run.backup_removal", "new_SFC.SFC_run.failure_protocol"], "methods", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.failure_protocol_cleanup", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.markov_trans", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.Observation", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.backup_placement", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.backup_removal", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.failure_protocol"], ["", "def", "_step", "(", "self", ",", "_action", ")", ":", "\n", "        ", "action", "=", "_action", ".", "reshape", "(", "self", ".", "sfc_map", ".", "shape", "[", "0", "]", ",", "self", ".", "sfc_map", ".", "shape", "[", "1", "]", ")", "\n", "if", "self", ".", "_episode_ended", ":", "\n", "            ", "return", "self", ".", "reset", "(", ")", "\n", "\n", "", "_reward", "=", "0", "\n", "\n", "self", ".", "failure_protocol_cleanup", "(", ")", "\n", "\n", "for", "idx", ",", "val", "in", "np", ".", "ndenumerate", "(", "action", ")", ":", "\n", "            ", "if", "-", "1", "<=", "val", "<", "-", "0.3", ":", "\n", "                ", "self", ".", "backup_placement", "(", "idx", ")", "\n", "if", "self", ".", "VNF_state", "[", "idx", "]", "==", "1", ":", "\n", "                    ", "_reward", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "_reward", "-=", "1", "\n", "\n", "", "", "elif", "-", "0.3", "<=", "val", "<", "0.3", ":", "\n", "                ", "if", "self", ".", "VNF_state", "[", "idx", "]", "==", "2", ":", "\n", "\n", "                    ", "if", "self", ".", "backup_map", "[", "idx", "]", "!=", "-", "1", ":", "\n", "                        ", "self", ".", "failure_protocol", "(", "idx", ")", "\n", "_reward", "+=", "1e2", "\n", "", "else", ":", "\n", "                        ", "self", ".", "failure_protocol_map", "[", "idx", "]", "=", "1", "\n", "_reward", "+=", "1", "\n", "", "self", ".", "VNF_state", "[", "idx", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "_reward", "-=", "1", "\n", "\n", "", "", "elif", "0.3", "<=", "val", "<=", "1", ":", "\n", "                ", "self", ".", "backup_removal", "(", "idx", ")", "\n", "\n", "if", "self", ".", "VNF_state", "[", "idx", "]", "==", "0", ":", "\n", "                    ", "_reward", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "_reward", "-=", "2", "\n", "\n", "#         self.availability()", "\n", "#         _reward += self.reward() + self.lost", "\n", "", "", "", "self", ".", "markov_trans", "(", ")", "\n", "_reward", "+=", "self", ".", "lost", "\n", "self", ".", "_state", "=", "self", ".", "Observation", "(", ")", "\n", "\n", "self", ".", "step_num", "+=", "1", "\n", "if", "self", ".", "step_num", ">=", "100", ":", "\n", "            ", "self", ".", "_episode_ended", "=", "True", "\n", "\n", "", "if", "self", ".", "_episode_ended", ":", "\n", "#             if self.monitor_mode:", "\n", "#                 self.monitor()", "\n", "\n", "            ", "return", "ts", ".", "termination", "(", "np", ".", "array", "(", "self", ".", "_state", ",", "dtype", "=", "np", ".", "float32", ")", ",", "reward", "=", "_reward", ")", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "return", "ts", ".", "transition", "(", "np", ".", "array", "(", "self", ".", "_state", ",", "dtype", "=", "np", ".", "float32", ")", ",", "reward", "=", "_reward", ",", "discount", "=", "0.99", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.monitor": [[448, 456], ["print", "print", "print", "print", "print", "print", "print", "numpy.prod"], "methods", ["None"], ["", "", "def", "monitor", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"EPISODE:\"", ",", "\"\\n\"", ")", "\n", "print", "(", "\"\\n\"", ",", "\"SFC map\"", ",", "\"\\n\"", ",", "self", ".", "sfc_map", ")", "\n", "print", "(", "\"\\n\"", ",", "\"availability\"", ",", "\"\\n\"", ",", "self", ".", "availability_matrix", ")", "\n", "print", "(", "\"\\n\"", ",", "\"SFC_avail\"", ",", "\"\\n\"", ",", "np", ".", "prod", "(", "self", ".", "availability_matrix", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "print", "(", "\"\\n\"", ",", "\"backup_map\"", ",", "\"\\n\"", ",", "self", ".", "backup_map", ")", "\n", "print", "(", "\"\\n\"", ",", "\"failure protocol\"", ",", "\"\\n\"", ",", "self", ".", "failure_protocol_map", ")", "\n", "print", "(", "\"\\n\"", ",", "\"failure map\"", ",", "\"\\n\"", ",", "self", ".", "failure", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.create_networks": [[65, 110], ["tf_agents.networks.actor_distribution_rnn_network.ActorDistributionRnnNetwork", "tf_agents.networks.value_rnn_network.ValueRnnNetwork", "tf_env.observation_spec", "tf_env.action_spec", "tf_env.observation_spec"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.observation_spec", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.action_spec", "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.observation_spec"], ["", "def", "create_networks", "(", "tf_env", ")", ":", "\n", "    ", "actor_net", "=", "actor_distribution_rnn_network", ".", "ActorDistributionRnnNetwork", "(", "\n", "tf_env", ".", "observation_spec", "(", ")", ",", "\n", "tf_env", ".", "action_spec", "(", ")", ",", "\n", "input_fc_layer_params", "=", "(", "512", ",", "512", ")", ",", "\n", "\n", "lstm_size", "=", "(", "100", ",", ")", ",", "\n", "# rnn_construction_fn=(layers.LSTM(256 , return_sequences=True), layers.LSTM(256)),", "\n", "output_fc_layer_params", "=", "(", "256", ",", "128", ",", ")", ")", "\n", "\n", "value_net", "=", "value_rnn_network", ".", "ValueRnnNetwork", "(", "tf_env", ".", "observation_spec", "(", ")", ",", "\n", "input_fc_layer_params", "=", "(", "512", ",", "512", ",", ")", ",", "\n", "# rnn_construction_fn = (layers.LSTM(100,100 , return_sequences=True), layers.LSTM(256)),", "\n", "\n", "lstm_size", "=", "(", "100", ",", ")", ",", "\n", "output_fc_layer_params", "=", "(", "256", ",", "128", ",", ")", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "elu", "\n", ")", "\n", "\n", "# normalized_observation = tf.nest.map_structure(", "\n", "#     lambda s: tf.TensorSpec(", "\n", "#         dtype=tf.float32, shape=s.shape, name=s.name", "\n", "#     ),", "\n", "#     tf_env.observation_spec()", "\n", "# )", "\n", "#", "\n", "# actor_net = actor_distribution_network.ActorDistributionNetwork(input_tensor_spec=normalized_observation,", "\n", "#                                                                 output_tensor_spec=tf_env.action_spec(),", "\n", "#                                                                 fc_layer_params=(", "\n", "#                                                                 512, 512, 512, 512, 512, 512, 512, 512, 512, 512,", "\n", "#                                                                 256, 128),", "\n", "#                                                                 kernel_initializer='glorot_uniform',", "\n", "#", "\n", "#                                                                 dropout_layer_params=(", "\n", "#                                                                 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4,", "\n", "#                                                                 0.2, 0.2))", "\n", "#", "\n", "# value_net = value_network.ValueNetwork(input_tensor_spec=normalized_observation,", "\n", "#                                        fc_layer_params=(512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 256, 128),", "\n", "#                                        kernel_initializer='glorot_uniform',", "\n", "#                                        dropout_layer_params=(", "\n", "#                                        0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.2, 0.2)", "\n", "#                                        )", "\n", "\n", "return", "actor_net", ",", "value_net", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.monitoring_policy": [[112, 124], ["range", "tf_environment.reset", "tf_environment.step.is_last", "policy.action", "tf_environment.step", "tf_environment.step.is_last", "print", "py_environment.monitor"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.new_SFC.SFC_run.monitor"], ["", "def", "monitoring_policy", "(", "policy", ",", "py_environment", ",", "tf_environment", ",", "num_episodes", "=", "10", ")", ":", "\n", "    ", "for", "_", "in", "range", "(", "num_episodes", ")", ":", "\n", "\n", "        ", "time_step", "=", "tf_environment", ".", "reset", "(", ")", "\n", "py_environment", ".", "monitor_mode", "=", "True", "\n", "\n", "while", "not", "time_step", ".", "is_last", "(", ")", ":", "\n", "            ", "action_step", "=", "policy", ".", "action", "(", "time_step", ")", "\n", "time_step", "=", "tf_environment", ".", "step", "(", "action_step", ".", "action", ")", "\n", "if", "time_step", ".", "is_last", "(", ")", ":", "\n", "                ", "print", "(", "time_step", ")", "\n", "py_environment", ".", "monitor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.train": [[128, 347], ["os.path.expanduser", "os.path.join", "os.path.join", "os.path.join", "tensorflow.summary.create_file_writer", "tf.summary.create_file_writer.set_as_default", "tensorflow.summary.create_file_writer", "tensorflow.compat.v1.train.get_or_create_global_step", "PPO.train.evaluate"], "function", ["None"], ["", "", "", "", "def", "train", "(", "root_dir", ")", ":", "\n", "######### DIRECTORY #################", "\n", "    ", "root_dir", "=", "os", ".", "path", ".", "expanduser", "(", "root_dir", ")", "\n", "train_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"TRAIN\"", ")", "\n", "eval_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"EVAL\"", ")", "\n", "saved_model_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"Policy Saved Model\"", ")", "\n", "\n", "########### summary And Metric Objects ################", "\n", "\n", "train_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "train_dir", ",", "flush_millis", "=", "summaries_flush_secs", "*", "1000", ")", "\n", "train_summary_writer", ".", "set_as_default", "(", ")", "\n", "\n", "eval_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "eval_dir", ",", "flush_millis", "=", "summaries_flush_secs", "*", "1000", ")", "\n", "eval_metrics", "=", "[", "\n", "tf_metrics", ".", "AverageReturnMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", ",", "\n", "tf_metrics", ".", "AverageEpisodeLengthMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", "\n", "]", "\n", "######################################################################################3", "\n", "global_step", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "\n", "with", "tf", ".", "summary", ".", "record_if", "(", "global_step", "%", "summary_interval", "==", "0", ")", ":", "\n", "\n", "################# ENV_setup ###########################", "\n", "        ", "eval_py_env", "=", "SFC_run", "(", ")", "\n", "\n", "eval_tf_env", "=", "tf_py_environment", ".", "TFPyEnvironment", "(", "eval_py_env", ")", "\n", "tf_env", "=", "tf_py_environment", ".", "TFPyEnvironment", "(", "\n", "parallel_py_environment", ".", "ParallelPyEnvironment", "(", "[", "SFC_run", "]", "*", "num_parallel_environments", ")", ")", "\n", "################# AGENT ################################", "\n", "\n", "optimizer", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ",", "epsilon", "=", "1e-5", ")", "\n", "\n", "actor_net", ",", "value_net", "=", "create_networks", "(", "tf_env", ")", "\n", "\n", "tf_agent", "=", "ppo_clip_agent", ".", "PPOClipAgent", "(", "time_step_spec", "=", "tf_env", ".", "time_step_spec", "(", ")", ",", "\n", "action_spec", "=", "tf_env", ".", "action_spec", "(", ")", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "actor_net", "=", "actor_net", ",", "\n", "value_net", "=", "value_net", ",", "\n", "\n", "importance_ratio_clipping", "=", "0.2", ",", "\n", "num_epochs", "=", "num_epochs", ",", "\n", "entropy_regularization", "=", "1e-2", ",", "\n", "use_gae", "=", "True", ",", "\n", "use_td_lambda_return", "=", "True", ",", "\n", "gradient_clipping", "=", "0.5", "\n", "\n", ")", "\n", "\n", "tf_agent", ".", "initialize", "(", ")", "\n", "\n", "################## TRAIN METRICS ##############################", "\n", "\n", "environment_step_metrics", "=", "tf_metrics", ".", "EnvironmentSteps", "(", ")", "\n", "step_metrics", "=", "[", "tf_metrics", ".", "NumberOfEpisodes", "(", ")", ",", "\n", "environment_step_metrics", ",", "]", "\n", "\n", "train_metrics", "=", "step_metrics", "+", "[", "\n", "tf_metrics", ".", "AverageReturnMetric", "(", "batch_size", "=", "num_parallel_environments", ")", ",", "\n", "tf_metrics", ".", "AverageEpisodeLengthMetric", "(", "batch_size", "=", "num_parallel_environments", ")", ",", "\n", "]", "\n", "################ POLICY ##########################################", "\n", "\n", "eval_policy", "=", "tf_agent", ".", "policy", "\n", "collect_policy", "=", "tf_agent", ".", "collect_policy", "\n", "\n", "############### REPLAY_BUFFER ####################################", "\n", "\n", "replay_buffer", "=", "tf_uniform_replay_buffer", ".", "TFUniformReplayBuffer", "(", "\n", "tf_agent", ".", "collect_data_spec", ",", "\n", "batch_size", "=", "num_parallel_environments", ",", "\n", "max_length", "=", "replay_buffer_capacity", "\n", ")", "\n", "############# CHECKPOINTER_OBJECTS ################################", "\n", "\n", "train_checkpointer", "=", "common", ".", "Checkpointer", "(", "ckpt_dir", "=", "train_dir", ",", "agent", "=", "tf_agent", ",", "\n", "global_step", "=", "global_step", ",", "\n", "metrics", "=", "metric_utils", ".", "MetricsGroup", "(", "train_metrics", ",", "\"train_metrics\"", ")", "\n", ")", "\n", "\n", "policy_checkpointer", "=", "common", ".", "Checkpointer", "(", "ckpt_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "\"POLICY\"", ")", ",", "\n", "policy", "=", "eval_policy", ",", "global_step", "=", "global_step", ",", "\n", ")", "\n", "\n", "saved_model", "=", "policy_saver", ".", "PolicySaver", "(", "policy", "=", "eval_policy", ",", "train_step", "=", "global_step", ")", "\n", "\n", "train_checkpointer", ".", "initialize_or_restore", "(", ")", "\n", "\n", "############## TRAINING_FUNCS ##########################################", "\n", "\n", "collect_driver", "=", "dynamic_episode_driver", ".", "DynamicEpisodeDriver", "(", "tf_env", ",", "collect_policy", ",", "\n", "observers", "=", "[", "replay_buffer", ".", "add_batch", "]", "+", "\n", "train_metrics", ",", "\n", "num_episodes", "=", "collect_episodes_per_iteration", ")", "\n", "\n", "def", "train_step", "(", ")", ":", "\n", "            ", "trajectories", "=", "replay_buffer", ".", "gather_all", "(", ")", "\n", "return", "tf_agent", ".", "train", "(", "experience", "=", "trajectories", ")", "\n", "\n", "", "def", "evaluate", "(", ")", ":", "\n", "            ", "metric_utils", ".", "eager_compute", "(", "eval_metrics", ",", "eval_tf_env", ",", "eval_policy", ",", "num_eval_episodes", ",", "global_step", ",", "\n", "eval_summary_writer", ",", "'Metrics'", ")", "\n", "\n", "", "def", "monitoring_policy", "(", "policy", ",", "py_environment", ",", "tf_environment", ",", "num_episodes", "=", "10", ",", "episode", "=", "global_step", ".", "numpy", "(", ")", ")", ":", "\n", "            ", "crit", "=", "0", "\n", "warn", "=", "0", "\n", "norm", "=", "0", "\n", "k_crit", "=", "0", "\n", "k_warn", "=", "0", "\n", "k_norm", "=", "0", "\n", "reactive", "=", "0", "\n", "proactive", "=", "0", "\n", "fail", "=", "0", "\n", "for", "_", "in", "range", "(", "num_episodes", ")", ":", "\n", "\n", "                ", "time_step", "=", "tf_environment", ".", "reset", "(", ")", "\n", "state", "=", "policy", ".", "get_initial_state", "(", "tf_environment", ".", "batch_size", ")", "\n", "\n", "# py_environment.monitor_mode = True", "\n", "\n", "while", "not", "time_step", ".", "is_last", "(", ")", ":", "\n", "                    ", "st", "=", "copy", ".", "deepcopy", "(", "py_environment", ".", "VNF_state", ")", "\n", "policy_step", "=", "policy", ".", "action", "(", "time_step", ",", "state", ")", "\n", "state", "=", "policy_step", ".", "state", "\n", "a", "=", "policy_step", ".", "action", "\n", "action_space", "=", "np", ".", "array", "(", "a", ")", ".", "reshape", "(", "py_environment", ".", "sfc_map", ".", "shape", ")", "\n", "time_step", "=", "tf_environment", ".", "step", "(", "a", ")", "\n", "for", "idx", ",", "val", "in", "np", ".", "ndenumerate", "(", "st", ")", ":", "\n", "                        ", "if", "val", "==", "2", ":", "\n", "                            ", "fail", "+=", "1", "\n", "crit", "+=", "1", "\n", "if", "action_space", "[", "idx", "]", "==", "2", ":", "\n", "\n", "                                ", "k_crit", "+=", "1", "\n", "if", "py_environment", ".", "backup_map", "[", "idx", "]", "!=", "-", "1", ":", "\n", "                                    ", "proactive", "+=", "1", "\n", "", "else", ":", "\n", "                                    ", "reactive", "+=", "1", "\n", "", "", "", "elif", "val", "==", "1", ":", "\n", "                            ", "warn", "+=", "1", "\n", "if", "action_space", "[", "idx", "]", "==", "1", ":", "\n", "                                ", "k_warn", "+=", "1", "\n", "", "", "else", ":", "\n", "                            ", "norm", "+=", "1", "\n", "if", "action_space", "[", "idx", "]", "==", "0", ":", "\n", "                                ", "k_norm", "+=", "1", "\n", "# py_environment.availability_ratio()", "\n", "", "", "", "", "", "with", "open", "(", "'data.csv'", ",", "'a'", ")", "as", "csv_file", ":", "\n", "                ", "csv_writer", "=", "csv", ".", "DictWriter", "(", "csv_file", ",", "fieldnames", "=", "fieldnames", ")", "\n", "# \"critical_accuracy\", \"warning_accuracy\", \"normal_accuracy\", \"Proactive\", \"Reactive\"", "\n", "info", "=", "{", "\n", "\"episode\"", ":", "episode", ",", "\n", "\"critical_accuracy\"", ":", "k_crit", "/", "crit", ",", "\n", "\"warning_accuracy\"", ":", "k_warn", "/", "warn", ",", "\n", "\"normal_accuracy\"", ":", "k_norm", "/", "norm", ",", "\n", "\"Proactive\"", ":", "proactive", "/", "k_crit", ",", "\n", "\"Reactive\"", ":", "reactive", "/", "k_crit", "\n", "}", "\n", "\n", "csv_writer", ".", "writerow", "(", "info", ")", "\n", "\n", "", "", "if", "use_tf_functions", ":", "\n", "# TODO(b/123828980): Enable once the cause for slowdown was identified.", "\n", "            ", "collect_driver", ".", "run", "=", "common", ".", "function", "(", "collect_driver", ".", "run", ",", "autograph", "=", "True", ")", "\n", "tf_agent", ".", "train", "=", "common", ".", "function", "(", "tf_agent", ".", "train", ",", "autograph", "=", "True", ")", "\n", "train_step", "=", "common", ".", "function", "(", "train_step", ")", "\n", "\n", "##################### TRAINING !!!!!!!!########################", "\n", "\n", "", "collect_time", "=", "0", "\n", "train_time", "=", "0", "\n", "time_at_step", "=", "global_step", ".", "numpy", "(", ")", "\n", "\n", "while", "environment_step_metrics", ".", "result", "(", ")", "<", "num_environment_steps", ":", "\n", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "collect_driver", ".", "run", "(", ")", "\n", "collect_time", "+=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "total_loss", "=", "train_step", "(", ")", "\n", "\n", "replay_buffer", ".", "clear", "(", ")", "\n", "train_time", "=", "+", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "for", "train_metric", "in", "train_metrics", ":", "\n", "                ", "train_metric", ".", "tf_summaries", "(", "train_step", "=", "global_step", ",", "step_metrics", "=", "step_metrics", ")", "\n", "\n", "", "global_step_val", "=", "global_step", ".", "numpy", "(", ")", "\n", "\n", "if", "global_step_val", "%", "log_interval", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\"step = %d , loss = %f\"", ",", "global_step_val", ",", "total_loss", ".", "loss", ")", "\n", "step_per_sec", "=", "(", "(", "global_step_val", "-", "time_at_step", ")", "/", "(", "collect_time", "+", "train_time", ")", ")", "\n", "logging", ".", "info", "(", "\"%.3f steps/sec\"", ",", "step_per_sec", ")", "\n", "logging", ".", "info", "(", "\"collect time = {} , train time = {}\"", ".", "format", "(", "collect_time", ",", "train_time", ")", ")", "\n", "\n", "with", "tf", ".", "summary", ".", "record_if", "(", "True", ")", ":", "\n", "                    ", "tf", ".", "summary", ".", "scalar", "(", "name", "=", "\"global step per sec\"", ",", "data", "=", "step_per_sec", ",", "step", "=", "global_step", ")", "\n", "\n", "", "time_at_step", "=", "global_step_val", "\n", "collect_time", "=", "0", "\n", "train_time", "=", "0", "\n", "", "if", "global_step_val", "%", "eval_interval", "==", "0", "and", "global_step_val", ">", "0", ":", "\n", "                ", "evaluate", "(", ")", "\n", "\n", "\n", "", "if", "global_step_val", "%", "50", "==", "0", "and", "global_step_val", ">", "0", ":", "\n", "                ", "monitoring_policy", "(", "eval_policy", ",", "eval_py_env", ",", "eval_tf_env", ",", "episode", "=", "global_step_val", ")", "\n", "\n", "# if global_step_val % 100 == 0 and global_step_val > 0:", "\n", "#     monitoring_policy(eval_policy,eval_py_env, eval_tf_env , episode=global_step_val)", "\n", "\n", "", "if", "global_step_val", "%", "checkpoint_interval", "==", "0", ":", "\n", "                ", "train_checkpointer", ".", "save", "(", "global_step", "=", "global_step_val", ")", "\n", "policy_checkpointer", ".", "save", "(", "global_step", "=", "global_step_val", ")", "\n", "saved_model_path", "=", "os", ".", "path", ".", "join", "(", "saved_model_dir", ",", "\"Policy_\"", "+", "(", "\"%d\"", "%", "global_step_val", ")", ".", "zfill", "(", "9", ")", ")", "\n", "saved_model", ".", "save", "(", "saved_model_path", ")", "\n", "\n", "", "", "", "evaluate", "(", ")", "\n", "# monitoring_policy(eval_policy, eval_py_env, eval_tf_env)", "\n"]], "home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.main": [[350, 357], ["absl.logging.set_verbosity", "PPO.train", "AttributeError"], "function", ["home.repos.pwc.inspect_result.wildsky95_ZT-PFR.None.PPO.train"], ["", "def", "main", "(", "_", ")", ":", "\n", "    ", "logging", ".", "set_verbosity", "(", "logging", ".", "INFO", ")", "\n", "\n", "if", "FLAGS", ".", "root_dir", "is", "None", ":", "\n", "        ", "raise", "AttributeError", "(", "\"train_eval requires a root dir\"", ")", "\n", "\n", "", "train", "(", "root_dir", "=", "FLAGS", ".", "root_dir", ")", "\n", "\n"]]}