{"home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.check_keys": [[11, 32], ["set", "set", "logger.info", "pretrained_state_dict.keys", "model.state_dict().keys", "len", "logger.info", "logger.info", "len", "logger.info", "logger.info", "len", "len", "model.state_dict", "x.endswith", "len", "len"], "function", ["None"], ["def", "check_keys", "(", "model", ",", "pretrained_state_dict", ")", ":", "\n", "    ", "ckpt_keys", "=", "set", "(", "pretrained_state_dict", ".", "keys", "(", ")", ")", "\n", "model_keys", "=", "set", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "\n", "used_pretrained_keys", "=", "model_keys", "&", "ckpt_keys", "\n", "unused_pretrained_keys", "=", "ckpt_keys", "-", "model_keys", "\n", "missing_keys", "=", "model_keys", "-", "ckpt_keys", "\n", "# filter 'num_batches_tracked'", "\n", "missing_keys", "=", "[", "x", "for", "x", "in", "missing_keys", "\n", "if", "not", "x", ".", "endswith", "(", "'num_batches_tracked'", ")", "]", "\n", "if", "len", "(", "missing_keys", ")", ">", "0", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning] missing keys: {}'", ".", "format", "(", "missing_keys", ")", ")", "\n", "logger", ".", "info", "(", "'missing keys:{}'", ".", "format", "(", "len", "(", "missing_keys", ")", ")", ")", "\n", "", "if", "len", "(", "unused_pretrained_keys", ")", ">", "0", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning] unused_pretrained_keys: {}'", ".", "format", "(", "\n", "unused_pretrained_keys", ")", ")", "\n", "logger", ".", "info", "(", "'unused checkpoint keys:{}'", ".", "format", "(", "\n", "len", "(", "unused_pretrained_keys", ")", ")", ")", "\n", "", "logger", ".", "info", "(", "'used keys:{}'", ".", "format", "(", "len", "(", "used_pretrained_keys", ")", ")", ")", "\n", "assert", "len", "(", "used_pretrained_keys", ")", ">", "0", ",", "'load NONE from pretrained checkpoint'", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.remove_prefix": [[34, 40], ["logger.info", "f", "x.startswith", "state_dict.items", "x.split"], "function", ["None"], ["", "def", "remove_prefix", "(", "state_dict", ",", "prefix", ")", ":", "\n", "    ", "''' Old style model is stored with all names of parameters\n    share common prefix 'module.' '''", "\n", "logger", ".", "info", "(", "'remove prefix \\'{}\\''", ".", "format", "(", "prefix", ")", ")", "\n", "f", "=", "lambda", "x", ":", "x", ".", "split", "(", "prefix", ",", "1", ")", "[", "-", "1", "]", "if", "x", ".", "startswith", "(", "prefix", ")", "else", "x", "\n", "return", "{", "f", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.load_pretrain": [[42, 66], ["logger.info", "torch.cuda.current_device", "torch.load", "model.load_state_dict", "remove_prefix.keys", "model_load.remove_prefix", "model_load.remove_prefix", "model_load.check_keys", "logger.info", "remove_prefix.items", "model_load.check_keys", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.remove_prefix", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.remove_prefix", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.check_keys", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.check_keys"], ["", "def", "load_pretrain", "(", "model", ",", "pretrained_path", ")", ":", "\n", "    ", "logger", ".", "info", "(", "'load pretrained model from {}'", ".", "format", "(", "pretrained_path", ")", ")", "\n", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained_path", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "if", "\"state_dict\"", "in", "pretrained_dict", ".", "keys", "(", ")", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", "[", "'state_dict'", "]", ",", "\n", "'module.'", ")", "\n", "", "else", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", ",", "'module.'", ")", "\n", "\n", "", "try", ":", "\n", "        ", "check_keys", "(", "model", ",", "pretrained_dict", ")", "\n", "", "except", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning]: using pretrain as features.\\\n                Adding \"features.\" as prefix'", ")", "\n", "new_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "            ", "k", "=", "'features.'", "+", "k", "\n", "new_dict", "[", "k", "]", "=", "v", "\n", "", "pretrained_dict", "=", "new_dict", "\n", "check_keys", "(", "model", ",", "pretrained_dict", ")", "\n", "", "model", ".", "load_state_dict", "(", "pretrained_dict", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.restore_from": [[68, 81], ["torch.cuda.current_device", "torch.load", "model_load.remove_prefix", "model_load.check_keys", "model.load_state_dict", "model_load.check_keys", "optimizer.load_state_dict", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.remove_prefix", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.check_keys", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.check_keys"], ["", "def", "restore_from", "(", "model", ",", "optimizer", ",", "ckpt_path", ")", ":", "\n", "    ", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_path", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "\n", "ckpt_model_dict", "=", "remove_prefix", "(", "ckpt", "[", "'state_dict'", "]", ",", "'module.'", ")", "\n", "check_keys", "(", "model", ",", "ckpt_model_dict", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt_model_dict", ",", "strict", "=", "False", ")", "\n", "\n", "check_keys", "(", "optimizer", ",", "ckpt", "[", "'optimizer'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "return", "model", ",", "optimizer", ",", "epoch", "\n", "", ""]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.corner2center": [[14, 31], ["isinstance", "Center"], "function", ["None"], ["def", "corner2center", "(", "corner", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, x2, y2) to (cx, cy, w, h)\n    Args:\n        conrner: Corner or np.array (4*N)\n    Return:\n        Center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "corner", ",", "Corner", ")", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "\n", "return", "Center", "(", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "(", "x2", "-", "x1", ")", ",", "(", "y2", "-", "y1", ")", ")", "\n", "", "else", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "[", "0", "]", ",", "corner", "[", "1", "]", ",", "corner", "[", "2", "]", ",", "corner", "[", "3", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "*", "0.5", "\n", "y", "=", "(", "y1", "+", "y2", ")", "*", "0.5", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "return", "x", ",", "y", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.center2corner": [[33, 50], ["isinstance", "Corner"], "function", ["None"], ["", "", "def", "center2corner", "(", "center", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, x2, y2)\n    Args:\n        center: Center or np.array (4 * N)\n    Return:\n        center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "center", ",", "Center", ")", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "\n", "return", "Corner", "(", "x", "-", "w", "*", "0.5", ",", "y", "-", "h", "*", "0.5", ",", "x", "+", "w", "*", "0.5", ",", "y", "+", "h", "*", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "[", "0", "]", ",", "center", "[", "1", "]", ",", "center", "[", "2", "]", ",", "center", "[", "3", "]", "\n", "x1", "=", "x", "-", "w", "*", "0.5", "\n", "y1", "=", "y", "-", "h", "*", "0.5", "\n", "x2", "=", "x", "+", "w", "*", "0.5", "\n", "y2", "=", "y", "+", "h", "*", "0.5", "\n", "return", "x1", ",", "y1", ",", "x2", ",", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.IoU": [[52, 77], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["", "", "def", "IoU", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "\"\"\" caculate interection over union\n    Args:\n        rect1: (x1, y1, x2, y2)\n        rect2: (x1, y1, x2, y2)\n    Returns:\n        iou\n    \"\"\"", "\n", "# overlap", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "rect1", "[", "0", "]", ",", "rect1", "[", "1", "]", ",", "rect1", "[", "2", "]", ",", "rect1", "[", "3", "]", "\n", "tx1", ",", "ty1", ",", "tx2", ",", "ty2", "=", "rect2", "[", "0", "]", ",", "rect2", "[", "1", "]", ",", "rect2", "[", "2", "]", ",", "rect2", "[", "3", "]", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "tx1", ",", "x1", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "ty1", ",", "y1", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "tx2", ",", "x2", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "ty2", ",", "y2", ")", "\n", "\n", "ww", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "hh", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "target_a", "=", "(", "tx2", "-", "tx1", ")", "*", "(", "ty2", "-", "ty1", ")", "\n", "inter", "=", "ww", "*", "hh", "\n", "iou", "=", "inter", "/", "(", "area", "+", "target_a", "-", "inter", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.cxy_wh_2_rect": [[79, 83], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.rect_2_cxy_wh": [[85, 90], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.cxy_wh_2_rect1": [[92, 96], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect1", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", "+", "1", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", "+", "1", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.rect1_2_cxy_wh": [[98, 103], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect1_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", "-", "1", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "-", "1", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.get_axis_aligned_bbox": [[105, 130], ["numpy.mean", "numpy.mean", "min", "max", "min", "max", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "get_axis_aligned_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by axis aligned box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "A1", "=", "np", ".", "linalg", ".", "norm", "(", "region", "[", "0", ":", "2", "]", "-", "region", "[", "2", ":", "4", "]", ")", "*", "np", ".", "linalg", ".", "norm", "(", "region", "[", "2", ":", "4", "]", "-", "region", "[", "4", ":", "6", "]", ")", "\n", "A2", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "A1", "/", "A2", ")", "\n", "w", "=", "s", "*", "(", "x2", "-", "x1", ")", "+", "1", "\n", "h", "=", "s", "*", "(", "y2", "-", "y1", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.get_min_max_bbox": [[132, 153], ["numpy.mean", "numpy.mean", "min", "max", "min", "max"], "function", ["None"], ["", "def", "get_min_max_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by mim-max box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "", ""]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.anchor.Anchors.__init__": [[14, 26], ["anchor.Anchors.generate_anchors", "len", "len"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tools.anchor.Anchors.generate_anchors"], ["def", "__init__", "(", "self", ",", "stride", ",", "ratios", ",", "scales", ",", "image_center", "=", "0", ",", "size", "=", "0", ")", ":", "\n", "        ", "self", ".", "stride", "=", "stride", "\n", "self", ".", "ratios", "=", "ratios", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "image_center", "=", "0", "\n", "self", ".", "size", "=", "0", "\n", "\n", "self", ".", "anchor_num", "=", "len", "(", "self", ".", "scales", ")", "*", "len", "(", "self", ".", "ratios", ")", "\n", "\n", "self", ".", "anchors", "=", "None", "\n", "\n", "self", ".", "generate_anchors", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.anchor.Anchors.generate_anchors": [[27, 43], ["numpy.zeros", "int", "int", "math.sqrt"], "methods", ["None"], ["", "def", "generate_anchors", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        generate anchors based on predefined configuration\n        \"\"\"", "\n", "self", ".", "anchors", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "self", ".", "stride", "*", "self", ".", "stride", "\n", "count", "=", "0", "\n", "for", "r", "in", "self", ".", "ratios", ":", "\n", "            ", "ws", "=", "int", "(", "math", ".", "sqrt", "(", "size", "*", "1.", "/", "r", ")", ")", "\n", "hs", "=", "int", "(", "ws", "*", "r", ")", "\n", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "                ", "w", "=", "ws", "*", "s", "\n", "h", "=", "hs", "*", "s", "\n", "self", ".", "anchors", "[", "count", "]", "[", ":", "]", "=", "[", "-", "w", "*", "0.5", ",", "-", "h", "*", "0.5", ",", "w", "*", "0.5", ",", "h", "*", "0.5", "]", "[", ":", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tools.anchor.Anchors.generate_all_anchors": [[44, 81], ["numpy.array", "map", "tools.bbox.corner2center", "numpy.zeros", "map", "tools.bbox.center2corner", "numpy.arange().reshape", "numpy.arange().reshape", "numpy.stack().astype", "numpy.stack().astype", "x.reshape", "numpy.arange", "numpy.arange", "numpy.stack", "numpy.stack"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.corner2center", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.bbox.center2corner"], ["", "", "", "def", "generate_all_anchors", "(", "self", ",", "im_c", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        im_c: image center\n        size: image size\n        \"\"\"", "\n", "if", "self", ".", "image_center", "==", "im_c", "and", "self", ".", "size", "==", "size", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "image_center", "=", "im_c", "\n", "self", ".", "size", "=", "size", "\n", "\n", "a0x", "=", "im_c", "-", "size", "//", "2", "*", "self", ".", "stride", "\n", "ori", "=", "np", ".", "array", "(", "[", "a0x", "]", "*", "4", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "zero_anchors", "=", "self", ".", "anchors", "+", "ori", "\n", "\n", "x1", "=", "zero_anchors", "[", ":", ",", "0", "]", "\n", "y1", "=", "zero_anchors", "[", ":", ",", "1", "]", "\n", "x2", "=", "zero_anchors", "[", ":", ",", "2", "]", "\n", "y2", "=", "zero_anchors", "[", ":", ",", "3", "]", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "lambda", "x", ":", "x", ".", "reshape", "(", "self", ".", "anchor_num", ",", "1", ",", "1", ")", ",", "\n", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "corner2center", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n", "disp_x", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ")", "*", "self", ".", "stride", "\n", "disp_y", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ")", "*", "self", ".", "stride", "\n", "\n", "cx", "=", "cx", "+", "disp_x", "\n", "cy", "=", "cy", "+", "disp_y", "\n", "\n", "# broadcast", "\n", "zero", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "map", "(", "lambda", "x", ":", "x", "+", "zero", ",", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "center2corner", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "\n", "self", ".", "all_anchors", "=", "(", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "np", ".", "stack", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "return", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.__init__": [[27, 31], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "ret", "=", "{", "}", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "out_feature", "=", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.crop_and_resize": [[32, 47], ["data_loader.combinate", "data_loader.RGBDDataLoader.ret[].copy", "cv2.resize", "numpy.round", "numpy.round", "region.copy", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.combinate"], ["", "def", "crop_and_resize", "(", "self", ",", "image_rgb", ",", "image_depth", ",", "region", ")", ":", "\n", "        ", "self", ".", "ret", "[", "'image'", "]", "=", "combinate", "(", "image_rgb", ",", "image_depth", ",", "region", ".", "copy", "(", ")", ")", "\n", "self", ".", "ret", "[", "'target_cxcywh'", "]", "=", "[", "int", "(", "region", "[", "0", "]", "+", "region", "[", "2", "]", "/", "2", ")", ",", "\n", "int", "(", "region", "[", "1", "]", "+", "region", "[", "3", "]", "/", "2", ")", ",", "\n", "int", "(", "region", "[", "2", "]", ")", ",", "\n", "int", "(", "region", "[", "3", "]", ")", ",", "]", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "self", ".", "ret", "[", "'target_cxcywh'", "]", ".", "copy", "(", ")", "\n", "\n", "# crop", "\n", "self", ".", "ret", "[", "'img_cropped'", "]", "=", "self", ".", "ret", "[", "'image'", "]", "[", "cy", "-", "h", "//", "2", ":", "cy", "+", "h", "//", "2", ",", "cx", "-", "w", "//", "2", ":", "cx", "+", "w", "//", "2", "]", "\n", "# resize", "\n", "self", ".", "ret", "[", "'img_cropped_resized'", "]", "=", "cv2", ".", "resize", "(", "self", ".", "ret", "[", "'img_cropped'", "]", ",", "\n", "(", "self", ".", "out_feature", ",", "self", ".", "out_feature", ")", ")", "\n", "self", ".", "ret", "[", "'w_resized_ratio'", "]", "=", "np", ".", "round", "(", "self", ".", "out_feature", "/", "w", ",", "2", ")", "\n", "self", ".", "ret", "[", "'h_resized_ratio'", "]", "=", "np", ".", "round", "(", "self", ".", "out_feature", "/", "h", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader._tranform": [[48, 55], ["data_loader.get_transform_for_train", "data_loader.RGBDDataLoader.ret[].copy", "get_transform_for_train.", "get_transform_for_train.unsqueeze", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.get_transform_for_train"], ["", "def", "_tranform", "(", "self", ")", ":", "\n", "        ", "transform", "=", "get_transform_for_train", "(", ")", "\n", "img", "=", "self", ".", "ret", "[", "'img_cropped_resized'", "]", ".", "copy", "(", ")", "\n", "img_tensor", "=", "transform", "(", "img", ")", "\n", "self", ".", "ret", "[", "'img_tensor'", "]", "=", "img_tensor", ".", "unsqueeze", "(", "0", ")", "\n", "self", ".", "ret", "[", "'img_rgb_tensor'", "]", "=", "self", ".", "ret", "[", "'img_tensor'", "]", "[", ":", ",", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", "\n", "self", ".", "ret", "[", "'img_ddd_tensor'", "]", "=", "torch", ".", "cat", "(", "(", "self", ".", "ret", "[", "'img_tensor'", "]", "[", ":", ",", "[", "3", "]", ",", ":", ",", ":", "]", ",", "self", ".", "ret", "[", "'img_tensor'", "]", "[", ":", ",", "[", "3", "]", ",", ":", ",", ":", "]", ",", "self", ".", "ret", "[", "'img_tensor'", "]", "[", ":", ",", "[", "3", "]", ",", ":", ",", ":", "]", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.__get__": [[56, 61], ["data_loader.RGBDDataLoader.crop_and_resize", "data_loader.RGBDDataLoader._tranform"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.crop_and_resize", "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader._tranform"], ["", "def", "__get__", "(", "self", ",", "image_rgb", ",", "image_depth", ",", "region", ")", ":", "\n", "        ", "self", ".", "crop_and_resize", "(", "image_rgb", ",", "image_depth", ",", "region", ")", "\n", "self", ".", "_tranform", "(", ")", "\n", "self", ".", "count", "+=", "1", "\n", "return", "self", ".", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.get_transform_for_train": [[7, 12], ["transform_list.append", "transform_list.append", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["def", "get_transform_for_train", "(", ")", ":", "\n", "    ", "transform_list", "=", "[", "]", "\n", "transform_list", ".", "append", "(", "transforms", ".", "ToTensor", "(", ")", ")", "\n", "transform_list", ".", "append", "(", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ")", ")", ")", "\n", "return", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.combinate": [[14, 24], ["numpy.array", "numpy.array", "numpy.mean", "numpy.expand_dims", "numpy.concatenate", "np.concatenate.astype", "numpy.max", "int", "int", "int", "int"], "function", ["None"], ["", "def", "combinate", "(", "rgb", ",", "d", ",", "region", ")", ":", "\n", "    ", "rgbn", "=", "np", ".", "array", "(", "rgb", ")", "\n", "dn", "=", "np", ".", "array", "(", "d", ")", "\n", "dn_crop", "=", "dn", "[", "int", "(", "region", "[", "1", "]", ")", ":", "int", "(", "region", "[", "1", "]", "+", "region", "[", "3", "]", ")", ",", "int", "(", "region", "[", "0", "]", ")", ":", "int", "(", "region", "[", "0", "]", "+", "region", "[", "2", "]", ")", "]", "\n", "dn_mean", "=", "np", ".", "mean", "(", "dn_crop", ")", "\n", "dn", "[", "dn", ">", "dn_mean", "*", "3", "]", "=", "dn_mean", "*", "3", "\n", "dn", "=", "(", "dn", "/", "np", ".", "max", "(", "dn", ")", "*", "255", ")", "#.astype(np.int16)", "\n", "dn", "=", "np", ".", "expand_dims", "(", "dn", ",", "2", ")", "\n", "rgbdn", "=", "np", ".", "concatenate", "(", "(", "rgbn", ",", "dn", ")", ",", "axis", "=", "2", ")", "\n", "return", "rgbdn", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.net.FuseNet.__init__": [[8, 86], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "FuseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "#branch1", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "96", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,96,22,22]", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "96", ",", "256", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,256,8,8]", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "384", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,384,6,6]", "\n", "self", ".", "layer4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,384,4,4]", "\n", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", ")", "#out:[1,384,2,2]", "\n", "\n", "#branch2", "\n", "self", ".", "layer1d", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "96", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,96,22,22]", "\n", "self", ".", "layer2d", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "96", ",", "256", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,256,8,8]", "\n", "self", ".", "layer3d", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "384", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,384,6,6]", "\n", "self", ".", "layer4d", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "#out:[1,384,4,4]", "\n", "\n", "self", ".", "layer5d", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", ")", "#out:[1,384,2,2]", "\n", "\n", "#pool", "\n", "self", ".", "poolNet", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ")", "\n", ")", "\n", "\n", "#fuse", "\n", "self", ".", "secondNet", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", "*", "4", ",", "128", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "#regress", "\n", "self", ".", "denseNet", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", "*", "2", "*", "2", ",", "16", "*", "2", "*", "2", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "16", "*", "2", "*", "2", ",", "4", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.net.FuseNet.forward": [[88, 112], ["net.FuseNet.layer1", "net.FuseNet.layer1d", "net.FuseNet.layer2", "net.FuseNet.layer2d", "net.FuseNet.poolNet", "net.FuseNet.poolNet", "net.FuseNet.layer3", "net.FuseNet.layer3d", "net.FuseNet.layer4", "net.FuseNet.layer4d", "net.FuseNet.layer5", "net.FuseNet.layer5d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "net.FuseNet.secondNet", "result.squeeze.squeeze.view", "net.FuseNet.denseNet", "result.squeeze.squeeze.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "rgb", ",", "ddd", ")", ":", "\n", "        ", "result1", "=", "self", ".", "layer1", "(", "rgb", ")", "\n", "result2", "=", "self", ".", "layer1d", "(", "ddd", ")", "\n", "result1", "=", "self", ".", "layer2", "(", "result1", ")", "\n", "result2", "=", "self", ".", "layer2d", "(", "result2", ")", "\n", "\n", "left1", "=", "self", ".", "poolNet", "(", "result1", ")", "\n", "left2", "=", "self", ".", "poolNet", "(", "result2", ")", "\n", "\n", "right1", "=", "self", ".", "layer3", "(", "result1", ")", "\n", "right2", "=", "self", ".", "layer3d", "(", "result2", ")", "\n", "right1", "=", "self", ".", "layer4", "(", "right1", ")", "\n", "right2", "=", "self", ".", "layer4d", "(", "right2", ")", "\n", "right1", "=", "self", ".", "layer5", "(", "right1", ")", "\n", "right2", "=", "self", ".", "layer5d", "(", "right2", ")", "\n", "\n", "result", "=", "torch", ".", "cat", "(", "(", "left1", ",", "left2", ",", "right1", ",", "right2", ")", ",", "1", ")", "\n", "result", "=", "self", ".", "secondNet", "(", "result", ")", "\n", "result", "=", "result", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "result", "=", "self", ".", "denseNet", "(", "result", ")", "\n", "result", "=", "result", ".", "squeeze", "(", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.__init__": [[49, 58], ["cv2.getStructuringElement"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "region", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "self", ".", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "11", ",", "11", ")", ")", "\n", "self", ".", "depth", "=", "1000", "\n", "self", ".", "gama", "=", "5000", "\n", "self", ".", "isWork", "=", "True", "\n", "self", ".", "double_color", "=", "True", "\n", "self", ".", "mask_color1", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "self", ".", "mask_color2", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.general_mask": [[59, 97], ["numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.array", "cv2.morphologyEx.astype", "cv2.dilate", "cv2.morphologyEx", "numpy.array", "int", "int", "int", "int", "numpy.random.randint"], "methods", ["None"], ["", "def", "general_mask", "(", "self", ",", "image_rgb", ",", "image_depth", ")", ":", "\n", "        ", "depth", "=", "self", ".", "depth", "\n", "h", ",", "w", "=", "image_depth", ".", "shape", "[", "0", "]", ",", "image_depth", ".", "shape", "[", "1", "]", "\n", "obw", ",", "obh", "=", "self", ".", "region", "[", "2", "]", ",", "self", ".", "region", "[", "3", "]", "\n", "cx", ",", "cy", "=", "self", ".", "region", "[", "0", "]", "+", "self", ".", "region", "[", "2", "]", "/", "2", ",", "self", ".", "region", "[", "1", "]", "+", "self", ".", "region", "[", "3", "]", "/", "2", "\n", "x1", ",", "y1", "=", "cx", "-", "0.75", "*", "obw", ",", "cy", "-", "0.75", "*", "obh", "\n", "x2", ",", "y2", "=", "cx", "+", "0.75", "*", "obw", ",", "cy", "+", "0.75", "*", "obh", "\n", "x1", "=", "np", ".", "clip", "(", "int", "(", "x1", ")", ",", "0", ",", "w", ")", "\n", "y1", "=", "np", ".", "clip", "(", "int", "(", "y1", ")", ",", "0", ",", "h", ")", "\n", "x2", "=", "np", ".", "clip", "(", "int", "(", "x2", ")", ",", "0", ",", "w", ")", "\n", "y2", "=", "np", ".", "clip", "(", "int", "(", "y2", ")", ",", "0", ",", "h", ")", "\n", "\n", "# get M", "\n", "mask", "=", "np", ".", "array", "(", "image_depth", ")", "\n", "mask", "[", "mask", "<", "depth", "/", "2", "]", "=", "0", "\n", "mask", "[", "mask", ">", "depth", "*", "2", "]", "=", "0", "\n", "mask", "[", "mask", ">", "0", "]", "=", "255", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "255", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "mask", "=", "cv2", ".", "dilate", "(", "mask", ",", "self", ".", "kernel", ")", "\n", "mask", "=", "cv2", ".", "morphologyEx", "(", "mask", ",", "cv2", ".", "MORPH_CLOSE", ",", "self", ".", "kernel", ")", "\n", "\n", "# get Mc and Xm", "\n", "image_rgb", "=", "np", ".", "array", "(", "image_rgb", ")", "\n", "if", "self", ".", "double_color", ":", "\n", "            ", "mask", "[", "mask", "!=", "255", "]", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "mask", "[", "mask", "!=", "255", "]", ".", "shape", ")", "\n", "image_rgb", "[", ":", ",", ":", ",", "0", "]", "[", "mask", "==", "1", "]", "=", "self", ".", "mask_color1", "[", "0", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "0", "]", "[", "mask", "==", "0", "]", "=", "self", ".", "mask_color2", "[", "0", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "1", "]", "[", "mask", "==", "1", "]", "=", "self", ".", "mask_color1", "[", "1", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "1", "]", "[", "mask", "==", "0", "]", "=", "self", ".", "mask_color2", "[", "1", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "2", "]", "[", "mask", "==", "1", "]", "=", "self", ".", "mask_color1", "[", "2", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "2", "]", "[", "mask", "==", "0", "]", "=", "self", ".", "mask_color2", "[", "2", "]", "\n", "", "else", ":", "\n", "            ", "image_rgb", "[", ":", ",", ":", ",", "0", "]", "[", "mask", "!=", "255", "]", "=", "self", ".", "mask_color1", "[", "0", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "1", "]", "[", "mask", "!=", "255", "]", "=", "self", ".", "mask_color1", "[", "1", "]", "\n", "image_rgb", "[", ":", ",", ":", ",", "2", "]", "[", "mask", "!=", "255", "]", "=", "self", ".", "mask_color1", "[", "2", "]", "\n", "\n", "", "return", "image_rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.get_depth": [[98, 129], ["region.copy", "numpy.array", "numpy.array.copy().reshape", "len", "len", "numpy.uint8", "cv2.threshold", "numpy.mean", "abs", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.max", "numpy.min", "int", "int", "int", "int", "numpy.array.copy"], "methods", ["None"], ["", "def", "get_depth", "(", "self", ",", "image_depth", ",", "region", ",", "confidence", ")", ":", "\n", "        ", "self", ".", "region", "=", "region", "\n", "#crop object", "\n", "h", ",", "w", "=", "image_depth", ".", "shape", "[", "0", "]", ",", "image_depth", ".", "shape", "[", "1", "]", "\n", "x1", ",", "y1", "=", "np", ".", "clip", "(", "int", "(", "region", "[", "0", "]", ")", ",", "0", ",", "w", "-", "1", ")", ",", "np", ".", "clip", "(", "int", "(", "region", "[", "1", "]", ")", ",", "0", ",", "h", "-", "1", ")", "\n", "x2", ",", "y2", "=", "np", ".", "clip", "(", "int", "(", "region", "[", "0", "]", "+", "region", "[", "2", "]", ")", ",", "x1", "+", "1", ",", "w", ")", ",", "np", ".", "clip", "(", "int", "(", "region", "[", "1", "]", "+", "region", "[", "3", "]", ")", ",", "y1", "+", "1", ",", "h", ")", "\n", "self", ".", "region", "=", "region", ".", "copy", "(", ")", "\n", "object_depth", "=", "image_depth", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "\n", "object_depth", "=", "np", ".", "array", "(", "object_depth", ")", "\n", "\n", "# get mean value of object", "\n", "sequence_depth", "=", "object_depth", ".", "copy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "len1", "=", "len", "(", "sequence_depth", "[", "sequence_depth", "<", "10", "]", ")", "\n", "len2", "=", "len", "(", "sequence_depth", ")", "\n", "if", "len1", ">", "len2", "*", "0.7", ":", "\n", "            ", "self", ".", "isWork", "=", "False", "\n", "return", "\n", "", "sequence_depth", "=", "sequence_depth", "[", "sequence_depth", ">", "10", "]", "\n", "depth_max", ",", "depth_min", "=", "np", ".", "max", "(", "sequence_depth", ")", ",", "np", ".", "min", "(", "sequence_depth", ")", "\n", "sequence_depth", "=", "np", ".", "uint8", "(", "(", "sequence_depth", "-", "depth_min", ")", "/", "(", "depth_max", "-", "depth_min", ")", "*", "255", ")", "\n", "thresh", ",", "_", "=", "cv2", ".", "threshold", "(", "sequence_depth", ",", "0", ",", "255", ",", "cv2", ".", "THRESH_OTSU", ")", "\n", "current_depth", "=", "np", ".", "mean", "(", "sequence_depth", "[", "sequence_depth", "<", "thresh", "]", ")", "\n", "current_depth", "=", "current_depth", "*", "(", "depth_max", "-", "depth_min", ")", "/", "255", "+", "depth_min", "\n", "current_erro", "=", "abs", "(", "self", ".", "depth", "-", "current_depth", ")", "\n", "\n", "# whether to stop M-g", "\n", "if", "(", "current_erro", ">", "self", ".", "gama", "and", "confidence", "<", "0.65", ")", "or", "(", "confidence", "<", "0.55", ")", ":", "\n", "            ", "self", ".", "isWork", "=", "False", "\n", "return", "\n", "", "else", ":", "\n", "            ", "self", ".", "depth", "=", "current_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.start_mask": [[130, 165], ["numpy.array", "numpy.array", "numpy.mean", "numpy.mean().astype", "numpy.mean().astype", "numpy.mean().astype", "Depth_mask.bgr2hsv", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "Depth_mask.hsv2bgr", "Depth_mask.hsv2bgr", "Depth_mask.hsv2bgr", "int", "int", "int", "int", "numpy.max", "numpy.min", "numpy.mean", "numpy.mean", "numpy.mean", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.bgr2hsv", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.hsv2bgr", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.hsv2bgr", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.hsv2bgr"], ["", "", "def", "start_mask", "(", "self", ",", "image_rgb", ",", "image_depth", ",", "region", ")", ":", "\n", "        ", "self", ".", "region", "=", "region", "\n", "h", ",", "w", "=", "image_depth", ".", "shape", "[", "0", "]", ",", "image_depth", ".", "shape", "[", "1", "]", "\n", "x1", ",", "y1", "=", "np", ".", "clip", "(", "int", "(", "region", "[", "0", "]", ")", ",", "0", ",", "w", "-", "1", ")", ",", "np", ".", "clip", "(", "int", "(", "region", "[", "1", "]", ")", ",", "0", ",", "h", "-", "1", ")", "\n", "x2", ",", "y2", "=", "np", ".", "clip", "(", "int", "(", "region", "[", "0", "]", "+", "region", "[", "2", "]", ")", ",", "x1", "+", "1", ",", "w", ")", ",", "np", ".", "clip", "(", "int", "(", "region", "[", "1", "]", "+", "region", "[", "3", "]", ")", ",", "y1", "+", "1", ",", "h", ")", "\n", "object_depth", "=", "image_depth", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "\n", "object_depth", "=", "np", ".", "array", "(", "object_depth", ")", "\n", "object_rgb", "=", "image_rgb", "[", "y1", ":", "y2", ",", "x1", ":", "x2", ",", ":", "]", "\n", "object_rgb", "=", "np", ".", "array", "(", "object_rgb", ")", "\n", "self", ".", "depth", "=", "np", ".", "mean", "(", "object_depth", ")", "\n", "self", ".", "isWork", "=", "True", "\n", "\n", "# get limit between two frams", "\n", "self", ".", "gama", "=", "(", "np", ".", "max", "(", "image_depth", ")", "-", "np", ".", "min", "(", "image_depth", ")", ")", "/", "100", "\n", "\n", "# get color of Mc", "\n", "color", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "color", "[", "0", "]", "=", "np", ".", "mean", "(", "image_rgb", "[", ":", ",", ":", ",", "0", "]", ")", ".", "astype", "(", "'uint8'", ")", "\n", "color", "[", "1", "]", "=", "np", ".", "mean", "(", "image_rgb", "[", ":", ",", ":", ",", "1", "]", ")", ".", "astype", "(", "'uint8'", ")", "\n", "color", "[", "2", "]", "=", "np", ".", "mean", "(", "image_rgb", "[", ":", ",", ":", ",", "2", "]", ")", ".", "astype", "(", "'uint8'", ")", "\n", "color", "=", "bgr2hsv", "(", "color", ")", "\n", "if", "self", ".", "double_color", ":", "\n", "            ", "self", ".", "mask_color1", "[", "0", "]", "=", "int", "(", "120", "+", "color", "[", "0", "]", ")", "%", "360", "\n", "self", ".", "mask_color2", "[", "0", "]", "=", "int", "(", "240", "+", "color", "[", "0", "]", ")", "%", "360", "\n", "self", ".", "mask_color1", "[", "1", "]", "=", "1", "#1-color[1]", "\n", "self", ".", "mask_color2", "[", "1", "]", "=", "1", "#1-color[1]", "\n", "self", ".", "mask_color1", "[", "2", "]", "=", "0.7", "#max(1 - color[2], color[1])", "\n", "self", ".", "mask_color2", "[", "2", "]", "=", "0.7", "#max(1 - color[2], color[1])", "\n", "self", ".", "mask_color1", "=", "hsv2bgr", "(", "self", ".", "mask_color1", ")", "\n", "self", ".", "mask_color2", "=", "hsv2bgr", "(", "self", ".", "mask_color2", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mask_color1", "[", "0", "]", "=", "int", "(", "180", "+", "color", "[", "0", "]", ")", "%", "360", "\n", "self", ".", "mask_color1", "[", "1", "]", "=", "color", "[", "1", "]", "\n", "self", ".", "mask_color1", "[", "2", "]", "=", "color", "[", "2", "]", "\n", "self", ".", "mask_color1", "=", "hsv2bgr", "(", "self", ".", "mask_color1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.hsv2bgr": [[7, 27], ["float", "float", "float", "math.floor", "int", "int", "int", "int"], "function", ["None"], ["def", "hsv2bgr", "(", "color_hsv", ")", ":", "\n", "    ", "h", "=", "float", "(", "color_hsv", "[", "0", "]", ")", "\n", "s", "=", "float", "(", "color_hsv", "[", "1", "]", ")", "\n", "v", "=", "float", "(", "color_hsv", "[", "2", "]", ")", "\n", "h60", "=", "h", "/", "60.0", "\n", "h60f", "=", "math", ".", "floor", "(", "h60", ")", "\n", "hi", "=", "int", "(", "h60f", ")", "%", "6", "\n", "f", "=", "h60", "-", "h60f", "\n", "p", "=", "v", "*", "(", "1", "-", "s", ")", "\n", "q", "=", "v", "*", "(", "1", "-", "f", "*", "s", ")", "\n", "t", "=", "v", "*", "(", "1", "-", "(", "1", "-", "f", ")", "*", "s", ")", "\n", "r", ",", "g", ",", "b", "=", "0", ",", "0", ",", "0", "\n", "if", "hi", "==", "0", ":", "r", ",", "g", ",", "b", "=", "v", ",", "t", ",", "p", "\n", "elif", "hi", "==", "1", ":", "r", ",", "g", ",", "b", "=", "q", ",", "v", ",", "p", "\n", "elif", "hi", "==", "2", ":", "r", ",", "g", ",", "b", "=", "p", ",", "v", ",", "t", "\n", "elif", "hi", "==", "3", ":", "r", ",", "g", ",", "b", "=", "p", ",", "q", ",", "v", "\n", "elif", "hi", "==", "4", ":", "r", ",", "g", ",", "b", "=", "t", ",", "p", ",", "v", "\n", "elif", "hi", "==", "5", ":", "r", ",", "g", ",", "b", "=", "v", ",", "p", ",", "q", "\n", "r", ",", "g", ",", "b", "=", "int", "(", "r", "*", "255", ")", ",", "int", "(", "g", "*", "255", ")", ",", "int", "(", "b", "*", "255", ")", "\n", "return", "[", "b", ",", "g", ",", "r", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.bgr2hsv": [[28, 47], ["max", "min"], "function", ["None"], ["", "def", "bgr2hsv", "(", "color_bgr", ")", ":", "\n", "    ", "b", ",", "g", ",", "r", "=", "color_bgr", "[", "0", "]", "/", "255.0", ",", "color_bgr", "[", "1", "]", "/", "255.0", ",", "color_bgr", "[", "2", "]", "/", "255.0", "\n", "mx", "=", "max", "(", "r", ",", "g", ",", "b", ")", "\n", "mn", "=", "min", "(", "r", ",", "g", ",", "b", ")", "\n", "df", "=", "mx", "-", "mn", "\n", "if", "mx", "==", "mn", ":", "\n", "        ", "h", "=", "0", "\n", "", "elif", "mx", "==", "r", ":", "\n", "        ", "h", "=", "(", "60", "*", "(", "(", "g", "-", "b", ")", "/", "df", ")", "+", "360", ")", "%", "360", "\n", "", "elif", "mx", "==", "g", ":", "\n", "        ", "h", "=", "(", "60", "*", "(", "(", "b", "-", "r", ")", "/", "df", ")", "+", "120", ")", "%", "360", "\n", "", "elif", "mx", "==", "b", ":", "\n", "        ", "h", "=", "(", "60", "*", "(", "(", "r", "-", "g", ")", "/", "df", ")", "+", "240", ")", "%", "360", "\n", "", "if", "mx", "==", "0", ":", "\n", "        ", "s", "=", "0", "\n", "", "else", ":", "\n", "        ", "s", "=", "df", "/", "mx", "\n", "", "v", "=", "mx", "\n", "return", "[", "h", ",", "s", ",", "v", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetRes.MySiamRPNRes.__init__": [[10, 15], ["torch.Module.__init__", "models.SiamRPN.backbone.resnet_atrous.ResNet50", "models.SiamRPN.neck.AdjustAllLayer", "models.SiamRPN.rpn.MultiRPN"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MySiamRPNRes", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "ResNet50", "(", ")", "\n", "self", ".", "neck", "=", "AdjustAllLayer", "(", ")", "\n", "self", ".", "rpn_head", "=", "MultiRPN", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetRes.MySiamRPNRes.template": [[16, 20], ["SiamNetRes.MySiamRPNRes.backbone", "SiamNetRes.MySiamRPNRes.neck"], "methods", ["None"], ["", "def", "template", "(", "self", ",", "z", ")", ":", "\n", "        ", "zf", "=", "self", ".", "backbone", "(", "z", ")", "\n", "zf_s", "=", "self", ".", "neck", "(", "zf", ")", "\n", "self", ".", "zf_s", "=", "zf_s", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetRes.MySiamRPNRes.track": [[21, 28], ["SiamNetRes.MySiamRPNRes.backbone", "SiamNetRes.MySiamRPNRes.neck", "SiamNetRes.MySiamRPNRes.rpn_head"], "methods", ["None"], ["", "def", "track", "(", "self", ",", "x", ")", ":", "\n", "        ", "xf", "=", "self", ".", "backbone", "(", "x", ")", "\n", "xf_s", "=", "self", ".", "neck", "(", "xf", ")", "\n", "cls", ",", "loc", "=", "self", ".", "rpn_head", "(", "self", ".", "zf_s", ",", "xf_s", ")", "\n", "return", "{", "\n", "'cls'", ":", "cls", ",", "\n", "'loc'", ":", "loc", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseXCorr.__init__": [[8, 25], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "hidden", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "hidden_kernel_size", "=", "5", ")", ":", "\n", "        ", "super", "(", "DepthwiseXCorr", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_kernel", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "kernel_size", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv_search", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "kernel_size", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "hidden", ",", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseXCorr.xcorr_depthwise": [[27, 37], ["kernel.view.view.size", "kernel.view.view.size", "x.view.view.view", "kernel.view.view.view", "torch.conv2d", "torch.conv2d", "torch.conv2d", "out.view.view.view", "x.view.view.size", "x.view.view.size", "kernel.view.view.size", "kernel.view.view.size", "out.view.view.size", "out.view.view.size"], "methods", ["None"], ["", "def", "xcorr_depthwise", "(", "self", ",", "x", ",", "kernel", ")", ":", "\n", "        ", "\"\"\"depthwise cross correlation\n        \"\"\"", "\n", "batch", "=", "kernel", ".", "size", "(", "0", ")", "\n", "channel", "=", "kernel", ".", "size", "(", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "batch", "*", "channel", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "kernel", "=", "kernel", ".", "view", "(", "batch", "*", "channel", ",", "1", ",", "kernel", ".", "size", "(", "2", ")", ",", "kernel", ".", "size", "(", "3", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "x", ",", "kernel", ",", "groups", "=", "batch", "*", "channel", ")", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "channel", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseXCorr.forward": [[38, 44], ["rpn.DepthwiseXCorr.conv_kernel", "rpn.DepthwiseXCorr.conv_search", "rpn.DepthwiseXCorr.xcorr_depthwise", "rpn.DepthwiseXCorr.head"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseXCorr.xcorr_depthwise"], ["", "def", "forward", "(", "self", ",", "kernel", ",", "search", ")", ":", "\n", "        ", "kernel", "=", "self", ".", "conv_kernel", "(", "kernel", ")", "\n", "search", "=", "self", ".", "conv_search", "(", "search", ")", "\n", "feature", "=", "self", ".", "xcorr_depthwise", "(", "search", ",", "kernel", ")", "\n", "out", "=", "self", ".", "head", "(", "feature", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseRPN.__init__": [[47, 51], ["torch.Module.__init__", "rpn.DepthwiseXCorr", "rpn.DepthwiseXCorr"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", "=", "5", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ")", ":", "\n", "        ", "super", "(", "DepthwiseRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cls", "=", "DepthwiseXCorr", "(", "in_channels", ",", "out_channels", ",", "2", "*", "anchor_num", ")", "\n", "self", ".", "loc", "=", "DepthwiseXCorr", "(", "in_channels", ",", "out_channels", ",", "4", "*", "anchor_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.DepthwiseRPN.forward": [[52, 56], ["rpn.DepthwiseRPN.cls", "rpn.DepthwiseRPN.loc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "cls", "=", "self", ".", "cls", "(", "z_f", ",", "x_f", ")", "\n", "loc", "=", "self", ".", "loc", "(", "z_f", ",", "x_f", ")", "\n", "return", "cls", ",", "loc", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.MultiRPN.__init__": [[59, 68], ["torch.Module.__init__", "range", "len", "rpn.MultiRPN.add_module", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "rpn.DepthwiseRPN", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "str", "len", "len"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", "=", "5", ",", "in_channels", "=", "[", "128", ",", "256", ",", "512", "]", ",", "Weighted", "=", "True", ")", ":", "\n", "        ", "super", "(", "MultiRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "'rpn'", "+", "str", "(", "i", "+", "2", ")", ",", "\n", "DepthwiseRPN", "(", "anchor_num", ",", "in_channels", "[", "i", "]", ",", "in_channels", "[", "i", "]", ")", ")", "\n", "", "self", ".", "Weighted", "=", "Weighted", "\n", "if", "self", ".", "Weighted", "==", "True", ":", "\n", "            ", "self", ".", "cls_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ")", "\n", "self", ".", "loc_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.rpn.MultiRPN.forward": [[69, 95], ["enumerate", "zip", "getattr", "getattr.", "cls.append", "loc.append", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "range", "sum", "len", "len", "getattr.MultiRPN.forward.weighted_avg"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "z_fs", ",", "x_fs", ")", ":", "\n", "        ", "cls", "=", "[", "]", "\n", "loc", "=", "[", "]", "\n", "for", "idx", ",", "(", "z_f", ",", "x_f", ")", "in", "enumerate", "(", "zip", "(", "z_fs", ",", "x_fs", ")", ",", "start", "=", "2", ")", ":", "\n", "            ", "rpn", "=", "getattr", "(", "self", ",", "'rpn'", "+", "str", "(", "idx", ")", ")", "\n", "c", ",", "l", "=", "rpn", "(", "z_f", ",", "x_f", ")", "\n", "cls", ".", "append", "(", "c", ")", "\n", "loc", ".", "append", "(", "l", ")", "\n", "\n", "", "if", "self", ".", "Weighted", "==", "True", ":", "\n", "            ", "cls_weight", "=", "F", ".", "softmax", "(", "self", ".", "cls_weight", ",", "0", ")", "\n", "loc_weight", "=", "F", ".", "softmax", "(", "self", ".", "loc_weight", ",", "0", ")", "\n", "\n", "", "def", "avg", "(", "lst", ")", ":", "\n", "            ", "return", "sum", "(", "lst", ")", "/", "len", "(", "lst", ")", "\n", "\n", "", "def", "weighted_avg", "(", "lst", ",", "weight", ")", ":", "\n", "            ", "s", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "weight", ")", ")", ":", "\n", "                ", "s", "+=", "lst", "[", "i", "]", "*", "weight", "[", "i", "]", "\n", "", "return", "s", "\n", "\n", "", "if", "self", ".", "Weighted", "==", "True", ":", "\n", "            ", "return", "weighted_avg", "(", "cls", ",", "cls_weight", ")", ",", "weighted_avg", "(", "loc", ",", "loc_weight", ")", "\n", "", "else", ":", "\n", "            ", "return", "avg", "(", "cls", ")", ",", "avg", "(", "loc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.neck.AdjustLayer.__init__": [[6, 13], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "center_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "AdjustLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", ")", "\n", "self", ".", "center_size", "=", "center_size", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.neck.AdjustLayer.forward": [[14, 21], ["neck.AdjustLayer.downsample", "neck.AdjustLayer.size", "neck.AdjustLayer.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "if", "x", ".", "size", "(", "3", ")", "<", "20", ":", "\n", "            ", "l", "=", "(", "x", ".", "size", "(", "3", ")", "-", "self", ".", "center_size", ")", "//", "2", "\n", "r", "=", "l", "+", "self", ".", "center_size", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "l", ":", "r", ",", "l", ":", "r", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.neck.AdjustAllLayer.__init__": [[24, 33], ["torch.Module.__init__", "len", "range", "neck.AdjustAllLayer.add_module", "neck.AdjustLayer", "str"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "[", "512", ",", "1024", ",", "2048", "]", ",", "out_channels", "=", "[", "128", ",", "256", ",", "512", "]", ",", "center_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "AdjustAllLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num", "=", "len", "(", "out_channels", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ",", "\n", "AdjustLayer", "(", "in_channels", "[", "i", "]", ",", "\n", "out_channels", "[", "i", "]", ",", "\n", "center_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.neck.AdjustAllLayer.forward": [[34, 40], ["range", "getattr", "out.append", "getattr.", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "            ", "adj_layer", "=", "getattr", "(", "self", ",", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ")", "\n", "out", ".", "append", "(", "adj_layer", "(", "features", "[", "i", "]", ")", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetAlex.MySiamRPNAlex.__init__": [[10, 14], ["torch.Module.__init__", "models.SiamRPN.backbone.alexnet.AlexNetLegacy", "models.SiamRPN.rpn.DepthwiseRPN"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MySiamRPNAlex", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "AlexNetLegacy", "(", ")", "\n", "self", ".", "rpn_head", "=", "DepthwiseRPN", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetAlex.MySiamRPNAlex.template": [[15, 17], ["SiamNetAlex.MySiamRPNAlex.backbone"], "methods", ["None"], ["", "def", "template", "(", "self", ",", "z", ")", ":", "\n", "        ", "self", ".", "zf", "=", "self", ".", "backbone", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetAlex.MySiamRPNAlex.track": [[18, 24], ["SiamNetAlex.MySiamRPNAlex.backbone", "SiamNetAlex.MySiamRPNAlex.rpn_head"], "methods", ["None"], ["", "def", "track", "(", "self", ",", "x", ")", ":", "\n", "        ", "xf", "=", "self", ".", "backbone", "(", "x", ")", "\n", "cls", ",", "loc", "=", "self", ".", "rpn_head", "(", "self", ".", "zf", ",", "xf", ")", "\n", "return", "{", "\n", "'cls'", ":", "cls", ",", "\n", "'loc'", ":", "loc", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.__init__": [[10, 15], ["torch.Module.__init__", "models.SiamRPN.backbone.mobile_v2.MobileNetV2", "models.SiamRPN.neck.AdjustAllLayer", "models.SiamRPN.rpn.MultiRPN"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MySiamRPNMob", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "MobileNetV2", "(", ")", "\n", "self", ".", "neck", "=", "AdjustAllLayer", "(", "in_channels", "=", "[", "44", ",", "134", ",", "448", "]", ",", "out_channels", "=", "[", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "rpn_head", "=", "MultiRPN", "(", "in_channels", "=", "[", "256", ",", "256", ",", "256", "]", ",", "Weighted", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.template": [[16, 20], ["SiamNetMob.MySiamRPNMob.backbone", "SiamNetMob.MySiamRPNMob.neck"], "methods", ["None"], ["", "def", "template", "(", "self", ",", "z", ")", ":", "\n", "        ", "zf", "=", "self", ".", "backbone", "(", "z", ")", "\n", "zf_s", "=", "self", ".", "neck", "(", "zf", ")", "\n", "self", ".", "zf_s", "=", "zf_s", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.track": [[21, 28], ["SiamNetMob.MySiamRPNMob.backbone", "SiamNetMob.MySiamRPNMob.neck", "SiamNetMob.MySiamRPNMob.rpn_head"], "methods", ["None"], ["", "def", "track", "(", "self", ",", "x", ")", ":", "\n", "        ", "xf", "=", "self", ".", "backbone", "(", "x", ")", "\n", "xf_s", "=", "self", ".", "neck", "(", "xf", ")", "\n", "cls", ",", "loc", "=", "self", ".", "rpn_head", "(", "self", ".", "zf_s", ",", "xf_s", ")", "\n", "return", "{", "\n", "'cls'", ":", "cls", ",", "\n", "'loc'", ":", "loc", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.Bottleneck.__init__": [[15, 38], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "padding", "=", "2", "-", "stride", "\n", "if", "downsample", "is", "not", "None", "and", "dilation", ">", "1", ":", "\n", "            ", "dilation", "=", "dilation", "//", "2", "\n", "padding", "=", "dilation", "\n", "\n", "", "assert", "stride", "==", "1", "or", "dilation", "==", "1", ",", "\"stride and dilation must have one equals to zero at least\"", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.Bottleneck.forward": [[39, 61], ["resnet_atrous.Bottleneck.conv1", "resnet_atrous.Bottleneck.bn1", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv2", "resnet_atrous.Bottleneck.bn2", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv3", "resnet_atrous.Bottleneck.bn3", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50.__init__": [[64, 90], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_atrous.ResNet50._make_layer", "resnet_atrous.ResNet50._make_layer", "resnet_atrous.ResNet50._make_layer", "resnet_atrous.ResNet50._make_layer", "resnet_atrous.ResNet50.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__", "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50._make_layer", "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50._make_layer", "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50._make_layer", "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "# 3", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "feature_size", "=", "128", "*", "block", ".", "expansion", "\n", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ")", "# 15x15, 7x7", "\n", "self", ".", "feature_size", "=", "(", "256", "+", "128", ")", "*", "block", ".", "expansion", "\n", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ")", "# 7x7, 3x3", "\n", "self", ".", "feature_size", "=", "512", "*", "block", ".", "expansion", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50._make_layer": [[91, 123], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "dd", "=", "dilation", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "stride", "==", "1", "and", "dilation", "==", "1", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "if", "dilation", ">", "1", ":", "\n", "                    ", "dd", "=", "dilation", "//", "2", "\n", "padding", "=", "dd", "\n", "", "else", ":", "\n", "                    ", "dd", "=", "1", "\n", "padding", "=", "0", "\n", "", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "bias", "=", "False", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dd", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "\n", "downsample", ",", "dilation", "=", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.ResNet50.forward": [[124, 136], ["resnet_atrous.ResNet50.conv1", "resnet_atrous.ResNet50.bn1", "resnet_atrous.ResNet50.relu", "resnet_atrous.ResNet50.maxpool", "resnet_atrous.ResNet50.layer1", "resnet_atrous.ResNet50.layer2", "resnet_atrous.ResNet50.layer3", "resnet_atrous.ResNet50.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x_", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x_", ")", "\n", "\n", "p1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "p2", "=", "self", ".", "layer2", "(", "p1", ")", "\n", "p3", "=", "self", ".", "layer3", "(", "p2", ")", "\n", "p4", "=", "self", ".", "layer4", "(", "p3", ")", "\n", "out", "=", "[", "p2", ",", "p3", ",", "p4", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.resnet_atrous.conv3x3": [[6, 10], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.InvertedResidual.__init__": [[22, 46], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "padding", "=", "2", "-", "stride", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "inp", "*", "expand_ratio", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "inp", "*", "expand_ratio", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "inp", "*", "expand_ratio", ",", "inp", "*", "expand_ratio", ",", "3", ",", "\n", "stride", ",", "padding", ",", "dilation", "=", "dilation", ",", "\n", "groups", "=", "inp", "*", "expand_ratio", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "inp", "*", "expand_ratio", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "inp", "*", "expand_ratio", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.InvertedResidual.forward": [[48, 53], ["mobile_v2.InvertedResidual.conv", "mobile_v2.InvertedResidual.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.MobileNetV2.__init__": [[56, 117], ["torch.Sequential.__init__", "int", "mobile_v2.MobileNetV2.add_module", "enumerate", "int", "int", "mobile_v2.conv_bn", "int", "range", "mobile_v2.MobileNetV2.add_module", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "max", "mobile_v2.InvertedResidual", "mobile_v2.InvertedResidual"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__", "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "width_mult", "=", "1.4", ",", "used_layers", "=", "[", "3", ",", "5", ",", "7", "]", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "# 0,2,3,4,6", "\n", "\n", "self", ".", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "1", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", ",", "2", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "1", ",", "4", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", ",", "4", "]", ",", "\n", "]", "\n", "\n", "self", ".", "channels", "=", "[", "24", ",", "32", ",", "96", ",", "320", "]", "\n", "self", ".", "channels", "=", "[", "int", "(", "c", "*", "width_mult", ")", "for", "c", "in", "self", ".", "channels", "]", "\n", "\n", "input_channel", "=", "int", "(", "32", "*", "width_mult", ")", "\n", "self", ".", "last_channel", "=", "int", "(", "1280", "*", "width_mult", ")", "if", "width_mult", ">", "1.0", "else", "1280", "\n", "\n", "self", ".", "add_module", "(", "'layer0'", ",", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ",", "0", ")", ")", "\n", "\n", "last_dilation", "=", "1", "\n", "\n", "self", ".", "used_layers", "=", "used_layers", "\n", "\n", "for", "idx", ",", "(", "t", ",", "c", ",", "n", ",", "s", ",", "d", ")", "in", "enumerate", "(", "self", ".", "interverted_residual_setting", ",", "start", "=", "1", ")", ":", "\n", "            ", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "if", "d", "==", "last_dilation", ":", "\n", "                        ", "dd", "=", "d", "\n", "", "else", ":", "\n", "                        ", "dd", "=", "max", "(", "d", "//", "2", ",", "1", ")", "\n", "", "layers", ".", "append", "(", "InvertedResidual", "(", "input_channel", ",", "\n", "output_channel", ",", "s", ",", "t", ",", "dd", ")", ")", "\n", "", "else", ":", "\n", "                    ", "layers", ".", "append", "(", "InvertedResidual", "(", "input_channel", ",", "\n", "output_channel", ",", "1", ",", "t", ",", "d", ")", ")", "\n", "", "input_channel", "=", "output_channel", "\n", "\n", "", "last_dilation", "=", "d", "\n", "\n", "self", ".", "add_module", "(", "'layer%d'", "%", "(", "idx", ")", ",", "nn", ".", "Sequential", "(", "*", "layers", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.MobileNetV2.forward": [[118, 129], ["range", "outputs.append", "len", "getattr"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "8", ")", ":", "\n", "            ", "name", "=", "\"layer%d\"", "%", "idx", "\n", "x", "=", "getattr", "(", "self", ",", "name", ")", "(", "x", ")", "\n", "outputs", ".", "append", "(", "x", ")", "\n", "", "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", "=", "[", "outputs", "[", "i", "]", "for", "i", "in", "[", "1", ",", "2", ",", "3", ",", "5", ",", "7", "]", "]", "\n", "out", "=", "[", "outputs", "[", "i", "]", "for", "i", "in", "self", ".", "used_layers", "]", "\n", "if", "len", "(", "out", ")", "==", "1", ":", "\n", "            ", "return", "out", "[", "0", "]", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.conv_bn": [[5, 10], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ",", "padding", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.mobile_v2.conv_1x1_bn": [[13, 18], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.alexnet.AlexNetLegacy.__init__": [[4, 26], ["torch.Module.__init__", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "width_mult", "=", "1", ")", ":", "\n", "        ", "super", "(", "AlexNetLegacy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "configs", "=", "[", "3", ",", "96", ",", "256", ",", "384", ",", "384", ",", "256", "]", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "0", "]", ",", "configs", "[", "1", "]", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "1", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "1", "]", ",", "configs", "[", "2", "]", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "2", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "2", "]", ",", "configs", "[", "3", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "3", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "3", "]", ",", "configs", "[", "4", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "4", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "4", "]", ",", "configs", "[", "5", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "5", "]", ")", ",", "\n", ")", "\n", "self", ".", "feature_size", "=", "configs", "[", "5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.alexnet.AlexNetLegacy.forward": [[27, 30], ["alexnet.AlexNetLegacy.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.alexnet.AlexNet.__init__": [[35, 67], ["list", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "map", "torch.Conv2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "int"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "width_mult", "=", "1", ")", ":", "\n", "        ", "configs", "=", "list", "(", "map", "(", "lambda", "x", ":", "3", "if", "x", "==", "3", "else", "\n", "int", "(", "x", "*", "width_mult", ")", ",", "AlexNet", ".", "configs", ")", ")", "\n", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "0", "]", ",", "configs", "[", "1", "]", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "1", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "1", "]", ",", "configs", "[", "2", "]", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "2", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "2", "]", ",", "configs", "[", "3", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "3", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "3", "]", ",", "configs", "[", "4", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "4", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "4", "]", ",", "configs", "[", "5", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "5", "]", ")", ",", "\n", ")", "\n", "self", ".", "feature_size", "=", "configs", "[", "5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.backbone.alexnet.AlexNet.forward": [[68, 75], ["alexnet.AlexNet.layer1", "alexnet.AlexNet.layer2", "alexnet.AlexNet.layer3", "alexnet.AlexNet.layer4", "alexnet.AlexNet.layer5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.TSDMTrack.TSDMTracker.__init__": [[17, 36], ["models.Mask_generator.Depth_mask.Depth_mask", "TSDMTrack.TSDMTracker.Masker.start_mask", "models.SiamRPN.SiamNetRes.MySiamRPNRes", "tools.model_load.load_pretrain().cuda().eval", "tracker.SiamResTrack.MySiamRPNResTracker", "TSDMTrack.TSDMTracker.SiamRestracker.init", "models.SiamRPN.SiamNetRes.MySiamRPNRes", "tools.model_load.load_pretrain().cuda().eval", "tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker", "TSDMTrack.TSDMTracker.SiamForMasktracker.init", "models.Depth_refiner.data_loader.RGBDDataLoader", "models.Depth_refiner.net.FuseNet().cuda().eval", "TSDMTrack.TSDMTracker.Dr_net.load_state_dict", "tools.model_load.load_pretrain().cuda", "tools.model_load.load_pretrain().cuda", "models.Depth_refiner.net.FuseNet().cuda", "torch.load", "tools.model_load.load_pretrain", "tools.model_load.load_pretrain", "models.Depth_refiner.net.FuseNet"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.start_mask", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.init", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.init", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.load_pretrain", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.load_pretrain"], ["    ", "def", "__init__", "(", "self", ",", "SiamRes_model_path", ",", "SiamMask_model_path", ",", "Dr_model_path", ",", "image_rgb", ",", "image_depth", ",", "region", ")", ":", "\n", "#M-g", "\n", "        ", "self", ".", "Masker", "=", "Depth_mask", "(", ")", "\n", "self", ".", "Masker", ".", "start_mask", "(", "image_rgb", ",", "image_depth", ",", "region", ")", "\n", "#SiamRPN++", "\n", "model1", "=", "MySiamRPNRes", "(", ")", "\n", "model1", "=", "load_pretrain", "(", "model1", ",", "SiamRes_model_path", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "self", ".", "SiamRestracker", "=", "MySiamRPNResTracker", "(", "model1", ")", "\n", "self", ".", "SiamRestracker", ".", "init", "(", "image_rgb", ",", "region", ")", "\n", "model2", "=", "MySiamRPNRes", "(", ")", "#MySiamRPNRes() MySiamRPNMob()", "\n", "model2", "=", "load_pretrain", "(", "model2", ",", "SiamMask_model_path", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "self", ".", "SiamForMasktracker", "=", "MySiamRPNResForMaskTracker", "(", "model2", ")", "\n", "self", ".", "SiamForMasktracker", ".", "init", "(", "image_rgb", ",", "region", ")", "\n", "#D-r", "\n", "self", ".", "Dr_loader", "=", "RGBDDataLoader", "(", ")", "\n", "self", ".", "Dr_net", "=", "FuseNet", "(", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "self", ".", "Dr_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Dr_model_path", ")", "[", "'state_dict'", "]", ")", "\n", "#output", "\n", "self", ".", "result", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.TSDMTrack.TSDMTracker.track": [[37, 118], ["region.copy", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "TSDMTrack.TSDMTracker.Dr_loader.__get__", "TSDMTrack.TSDMTracker.Dr_net", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape", "TSDMTrack.TSDMTracker.Masker.general_mask", "image_rgb.copy", "TSDMTrack.TSDMTracker.SiamForMasktracker.track", "numpy.array", "numpy.array", "TSDMTrack.TSDMTracker.SiamRestracker.update_state", "TSDMTrack.TSDMTracker.SiamRestracker.track", "numpy.array", "numpy.array", "TSDMTrack.TSDMTracker.SiamForMasktracker.update_state", "numpy.zeros", "range", "min", "min", "max", "max", "ret[].cuda", "ret[].cuda", "abs", "TSDMTrack.TSDMTracker.Masker.get_depth", "TSDMTrack.TSDMTracker.Masker.start_mask", "image_rgb.copy", "image_depth.copy", "state[].copy", "state[].copy", "state[].copy", "state[].copy", "len", "numpy.maximum", "numpy.maximum", "region.copy.copy", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach().numpy", "image_depth.copy", "keep.append", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach", "numpy.minimum", "numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.where", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.__get__", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.general_mask", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.update_state", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.update_state", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.get_depth", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.start_mask"], ["", "def", "track", "(", "self", ",", "image_rgb", ",", "image_depth", ")", ":", "\n", "# M-g", "\n", "        ", "if", "self", ".", "Masker", ".", "isWork", "==", "True", ":", "\n", "            ", "img_rgb", "=", "self", ".", "Masker", ".", "general_mask", "(", "image_rgb", ".", "copy", "(", ")", ",", "image_depth", ".", "copy", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "img_rgb", "=", "image_rgb", ".", "copy", "(", ")", "\n", "", "self", ".", "result", "[", "'Xm'", "]", "=", "img_rgb", "\n", "\n", "# SiamRPN++", "\n", "if", "self", ".", "Masker", ".", "isWork", "==", "True", ":", "\n", "            ", "state", "=", "self", ".", "SiamForMasktracker", ".", "track", "(", "img_rgb", ")", "\n", "bbox", "=", "np", ".", "array", "(", "state", "[", "'bbox'", "]", ".", "copy", "(", ")", ")", "\n", "bboxes", "=", "np", ".", "array", "(", "state", "[", "'bbox16'", "]", ".", "copy", "(", ")", ")", "\n", "self", ".", "SiamRestracker", ".", "update_state", "(", "bbox", ")", "\n", "", "else", ":", "\n", "            ", "state", "=", "self", ".", "SiamRestracker", ".", "track", "(", "img_rgb", ")", "\n", "bbox", "=", "np", ".", "array", "(", "state", "[", "'bbox'", "]", ".", "copy", "(", ")", ")", "\n", "bboxes", "=", "np", ".", "array", "(", "state", "[", "'bbox16'", "]", ".", "copy", "(", ")", ")", "\n", "self", ".", "SiamForMasktracker", ".", "update_state", "(", "bbox", ")", "\n", "", "self", ".", "result", "[", "'region_Siam'", "]", "=", "bbox", "\n", "self", ".", "result", "[", "'score'", "]", "=", "state", "[", "'best_score'", "]", "\n", "\n", "#NMS+Amplification", "\n", "if", "not", "len", "(", "bboxes", ".", "shape", ")", "==", "1", ":", "\n", "            ", "boxes_num", "=", "bboxes", ".", "shape", "[", "1", "]", "\n", "proposal_16_x1", "=", "bboxes", "[", "0", ",", ":", "]", "\n", "proposal_16_y1", "=", "bboxes", "[", "1", ",", ":", "]", "\n", "proposal_16_x2", "=", "bboxes", "[", "0", ",", ":", "]", "+", "bboxes", "[", "2", ",", ":", "]", "\n", "proposal_16_y2", "=", "bboxes", "[", "1", ",", ":", "]", "+", "bboxes", "[", "3", ",", ":", "]", "\n", "areas", "=", "(", "proposal_16_x2", "-", "proposal_16_x1", "+", "1", ")", "*", "(", "proposal_16_y2", "-", "proposal_16_y1", "+", "1", ")", "\n", "neeSuppress", "=", "np", ".", "zeros", "(", "boxes_num", ",", "dtype", "=", "np", ".", "int", ")", "\n", "keep", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "0", ",", "boxes_num", ")", ":", "\n", "                ", "if", "neeSuppress", "[", "j", "]", "==", "0", ":", "\n", "                    ", "keep", ".", "append", "(", "j", ")", "\n", "", "w", "=", "np", ".", "maximum", "(", "0.0", ",", "np", ".", "minimum", "(", "proposal_16_x2", "[", "j", "]", ",", "proposal_16_x2", ")", "-", "np", ".", "maximum", "(", "proposal_16_x1", "[", "j", "]", ",", "proposal_16_x1", ")", "+", "1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0.0", ",", "np", ".", "minimum", "(", "proposal_16_y2", "[", "j", "]", ",", "proposal_16_y2", ")", "-", "np", ".", "maximum", "(", "proposal_16_y1", "[", "j", "]", ",", "proposal_16_y1", ")", "+", "1", ")", "\n", "inter", "=", "w", "*", "h", "\n", "iou", "=", "inter", "/", "(", "areas", "[", "j", "]", "+", "areas", "-", "inter", ")", "\n", "neeSuppress", "[", "np", ".", "where", "(", "(", "iou", ">", "0.9", ")", "|", "(", "iou", "<", "0.05", ")", ")", "[", "0", "]", "]", "=", "1", "\n", "", "proposal_result_x1", "=", "min", "(", "proposal_16_x1", "[", "keep", "]", ")", "\n", "proposal_result_y1", "=", "min", "(", "proposal_16_y1", "[", "keep", "]", ")", "\n", "proposal_result_x2", "=", "max", "(", "proposal_16_x2", "[", "keep", "]", ")", "\n", "proposal_result_y2", "=", "max", "(", "proposal_16_y2", "[", "keep", "]", ")", "\n", "proposal_result_cx", "=", "(", "proposal_result_x1", "+", "proposal_result_x2", ")", "//", "2", "\n", "proposal_result_cy", "=", "(", "proposal_result_y1", "+", "proposal_result_y2", ")", "//", "2", "\n", "proposal_result_w", "=", "proposal_result_x2", "-", "proposal_result_x1", "\n", "proposal_result_h", "=", "proposal_result_y2", "-", "proposal_result_y1", "\n", "region", "=", "[", "proposal_result_x1", ",", "proposal_result_y1", ",", "proposal_result_w", ",", "proposal_result_h", "]", "\n", "", "else", ":", "\n", "            ", "region", "=", "[", "bboxes", "[", "0", "]", ",", "bboxes", "[", "1", "]", ",", "bboxes", "[", "2", "]", ",", "bboxes", "[", "3", "]", "]", "\n", "", "region", "=", "[", "region", "[", "0", "]", "-", "region", "[", "2", "]", "*", "0.1", ",", "region", "[", "1", "]", "-", "region", "[", "3", "]", "*", "0.1", ",", "region", "[", "2", "]", "*", "1.2", ",", "region", "[", "3", "]", "*", "1.2", "]", "\n", "imgw", ",", "imgh", "=", "image_rgb", ".", "shape", "[", "1", "]", ",", "image_rgb", ".", "shape", "[", "0", "]", "\n", "region_nms", "=", "region", ".", "copy", "(", ")", "\n", "region_nms", "[", "0", "]", "=", "np", ".", "clip", "(", "region", "[", "0", "]", ",", "0", ",", "imgw", ")", "\n", "region_nms", "[", "1", "]", "=", "np", ".", "clip", "(", "region", "[", "1", "]", ",", "0", ",", "imgh", ")", "\n", "region_nms", "[", "2", "]", "=", "np", ".", "clip", "(", "region", "[", "2", "]", ",", "0", ",", "imgw", "-", "region_nms", "[", "0", "]", ")", "\n", "region_nms", "[", "3", "]", "=", "np", ".", "clip", "(", "region", "[", "3", "]", ",", "0", ",", "imgh", "-", "region_nms", "[", "1", "]", ")", "\n", "self", ".", "result", "[", "'region_nms'", "]", "=", "region_nms", "\n", "\n", "#D-r", "\n", "ret", "=", "self", ".", "Dr_loader", ".", "__get__", "(", "image_rgb", ",", "image_depth", ",", "region", "=", "region_nms", ".", "copy", "(", ")", ")", "\n", "result", "=", "self", ".", "Dr_net", "(", "ret", "[", "'img_rgb_tensor'", "]", ".", "cuda", "(", ")", ",", "ret", "[", "'img_ddd_tensor'", "]", ".", "cuda", "(", ")", ")", "\n", "result", "=", "result", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "x1", ",", "y1", ",", "w", ",", "h", "=", "(", "result", "[", "2", "]", "-", "result", "[", "0", "]", ")", "*", "100", "/", "ret", "[", "'w_resized_ratio'", "]", "+", "region", "[", "0", "]", ",", "(", "result", "[", "3", "]", "-", "result", "[", "1", "]", ")", "*", "100", "/", "ret", "[", "'h_resized_ratio'", "]", "+", "region", "[", "1", "]", ",", "result", "[", "0", "]", "*", "100", "/", "ret", "[", "'w_resized_ratio'", "]", ",", "result", "[", "1", "]", "*", "100", "/", "ret", "[", "'h_resized_ratio'", "]", "\n", "if", "abs", "(", "w", "*", "h", "-", "bbox", "[", "2", "]", "*", "bbox", "[", "3", "]", ")", ">", "(", "bbox", "[", "2", "]", "*", "bbox", "[", "3", "]", ")", "*", "0.01", ":", "\n", "            ", "region", "=", "[", "x1", ",", "y1", ",", "w", ",", "h", "]", "\n", "", "else", ":", "\n", "            ", "region", "=", "[", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ",", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", "\n", "", "self", ".", "result", "[", "'region_Dr'", "]", "=", "region", "\n", "\n", "# M-g", "\n", "if", "self", ".", "Masker", ".", "isWork", "==", "True", ":", "\n", "            ", "self", ".", "Masker", ".", "get_depth", "(", "image_depth", ",", "region", ",", "state", "[", "'best_score'", "]", ")", "\n", "", "if", "self", ".", "Masker", ".", "isWork", "==", "False", "and", "state", "[", "'best_score'", "]", ">=", "0.92", ":", "\n", "            ", "self", ".", "Masker", ".", "start_mask", "(", "image_rgb", ",", "image_depth", ".", "copy", "(", ")", ",", "region", ")", "\n", "\n", "", "return", "self", ".", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.__init__": [[26, 32], ["SiamResForMaskTrack.MySiamRPNResForMaskTracker.model.eval", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "anchor_num", "=", "len", "(", "ANCHOR_RATIOS", ")", "*", "len", "(", "ANCHOR_SCALES", ")", "\n", "self", ".", "interval", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.generate_anchor": [[33, 50], ["tools.anchor.Anchors", "numpy.stack", "numpy.tile().reshape", "numpy.meshgrid", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "methods", ["None"], ["", "def", "generate_anchor", "(", "self", ",", "score_size", ")", ":", "\n", "        ", "anchors", "=", "Anchors", "(", "ANCHOR_STRIDE", ",", "\n", "ANCHOR_RATIOS", ",", "\n", "ANCHOR_SCALES", ")", "\n", "anchor", "=", "anchors", ".", "anchors", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", ",", "anchor", "[", ":", ",", "2", "]", ",", "anchor", "[", ":", ",", "3", "]", "\n", "anchor", "=", "np", ".", "stack", "(", "[", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "]", ",", "1", ")", "\n", "total_stride", "=", "anchors", ".", "stride", "\n", "anchor_num", "=", "anchor", ".", "shape", "[", "0", "]", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "anchor", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker._convert_bbox": [[51, 60], ["delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous().view", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.exp", "numpy.exp", "delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu", "delta.data.cpu().numpy.data.cpu().numpy.permute"], "methods", ["None"], ["", "def", "_convert_bbox", "(", "self", ",", "delta", ",", "anchor", ")", ":", "\n", "        ", "delta", "=", "delta", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "4", ",", "-", "1", ")", "\n", "delta", "=", "delta", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", ":", ",", "2", "]", "+", "anchor", "[", ":", ",", "0", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", ":", ",", "3", "]", "+", "anchor", "[", ":", ",", "1", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "2", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "3", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker._convert_score": [[61, 65], ["torch.softmax().data[].cpu().numpy.permute().contiguous().view().permute", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu().numpy.permute().contiguous", "torch.softmax().data[].cpu().numpy.permute", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_convert_score", "(", "self", ",", "score", ")", ":", "\n", "        ", "score", "=", "score", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "2", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "score", "=", "F", ".", "softmax", "(", "score", ",", "dim", "=", "1", ")", ".", "data", "[", ":", ",", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker._bbox_clip": [[66, 72], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.update_state": [[73, 76], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "region", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "region", "[", "0", "]", "+", "region", "[", "2", "]", "/", "2", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "region", "[", "2", "]", ",", "region", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.get_subwindow": [[77, 125], ["isinstance", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "cv2.resize.transpose", "cv2.resize.astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "cv2.resize.cuda", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_subwindow", "(", "self", ",", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ")", ":", "\n", "        ", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "            ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "            ", "size", "=", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "                ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "                ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "            ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "\n", "", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "return", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.init": [[126, 149], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "round", "numpy.mean", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.get_subwindow", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.model.template", "numpy.sqrt", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.template"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "\n", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "0", "]", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "1", "]", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "0", "]", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "1", "]", "]", ")", "\n", "\n", "# calculate z crop size", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "\n", "# calculate channle average", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# get crop", "\n", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "EXEMPLAR_SIZE", ",", "s_z", ",", "\n", "self", ".", "channel_average", ")", "\n", "self", ".", "model", ".", "template", "(", "z_crop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResForMaskTrack.MySiamRPNResForMaskTracker.track": [[150, 246], ["numpy.sqrt", "numpy.hanning", "numpy.outer", "numpy.tile", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.generate_anchor", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.get_subwindow", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.model.track", "SiamResForMaskTrack.MySiamRPNResForMaskTracker._convert_score", "SiamResForMaskTrack.MySiamRPNResForMaskTracker._convert_bbox", "SiamResForMaskTrack.MySiamRPNResForMaskTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "score_size", "=", "(", "INSTANCE_SIZE", "-", "EXEMPLAR_SIZE", ")", "//", "ANCHOR_STRIDE", "+", "1", "+", "BASE_SIZE", "\n", "hanning", "=", "np", ".", "hanning", "(", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "anchors", "=", "self", ".", "generate_anchor", "(", "score_size", ")", "\n", "\n", "s_x", "=", "s_z", "*", "(", "INSTANCE_SIZE", "/", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "INSTANCE_SIZE", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "# scale penalty", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "\n", "# aspect ratio penalty", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "# window penalty", "\n", "pscore", "=", "pscore", "*", "(", "1", "-", "WINDOW_INFLUENCE", ")", "+", "window", "*", "WINDOW_INFLUENCE", "\n", "\n", "# get 'best_score' and the most important 'scores' and 'boxes' and 'lr'", "\n", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "best_score", "=", "pscore", "[", "best_idx", "]", "\n", "\n", "best_idx16", "=", "np", ".", "argsort", "(", "pscore", ")", "[", ":", ":", "-", "1", "]", "[", ":", "16", "]", "\n", "best_idx16", "=", "best_idx16", "[", "pscore", "[", "best_idx16", "]", ">", "pscore", "[", "best_idx", "]", "*", "0.95", "]", ".", "tolist", "(", ")", "\n", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx16", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx16", "]", "*", "score", "[", "best_idx16", "]", "*", "LR", "\n", "\n", "# get position and size", "\n", "if", "best_score", ">=", "0.65", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", ",", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", ",", "0", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "2", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "3", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "\n", "self", ".", "cx16", "=", "bbox", "[", "0", ",", ":", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "self", ".", "cy16", "=", "bbox", "[", "1", ",", ":", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "self", ".", "width16", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", ",", ":", "]", "*", "lr", "\n", "self", ".", "height16", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", ",", ":", "]", "*", "lr", "\n", "", "else", ":", "\n", "            ", "cx", "=", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "cx", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "cy", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "width", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "height", "]", ")", "\n", "\n", "# clip boundary", "\n", "", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "# udpate state", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "\n", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "\n", "height", "]", "\n", "\n", "bbox16", "=", "[", "self", ".", "cx16", "-", "self", ".", "width16", "/", "2", ",", "\n", "self", ".", "cy16", "-", "self", ".", "height16", "/", "2", ",", "\n", "self", ".", "width16", ",", "\n", "self", ".", "height16", "]", "\n", "\n", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'bbox16'", ":", "bbox16", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.__init__": [[28, 34], ["SiamMobTrack.MySiamRPNMobTracker.model.eval", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "anchor_num", "=", "len", "(", "ANCHOR_RATIOS", ")", "*", "len", "(", "ANCHOR_SCALES", ")", "\n", "self", ".", "interval", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.generate_anchor": [[35, 52], ["tools.anchor.Anchors", "numpy.stack", "numpy.tile().reshape", "numpy.meshgrid", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "methods", ["None"], ["", "def", "generate_anchor", "(", "self", ",", "score_size", ")", ":", "\n", "        ", "anchors", "=", "Anchors", "(", "ANCHOR_STRIDE", ",", "\n", "ANCHOR_RATIOS", ",", "\n", "ANCHOR_SCALES", ")", "\n", "anchor", "=", "anchors", ".", "anchors", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", ",", "anchor", "[", ":", ",", "2", "]", ",", "anchor", "[", ":", ",", "3", "]", "\n", "anchor", "=", "np", ".", "stack", "(", "[", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "]", ",", "1", ")", "\n", "total_stride", "=", "anchors", ".", "stride", "\n", "anchor_num", "=", "anchor", ".", "shape", "[", "0", "]", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "anchor", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker._convert_bbox": [[53, 62], ["delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous().view", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.exp", "numpy.exp", "delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu", "delta.data.cpu().numpy.data.cpu().numpy.permute"], "methods", ["None"], ["", "def", "_convert_bbox", "(", "self", ",", "delta", ",", "anchor", ")", ":", "\n", "        ", "delta", "=", "delta", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "4", ",", "-", "1", ")", "\n", "delta", "=", "delta", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", ":", ",", "2", "]", "+", "anchor", "[", ":", ",", "0", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", ":", ",", "3", "]", "+", "anchor", "[", ":", ",", "1", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "2", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "3", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker._convert_score": [[63, 67], ["torch.softmax().data[].cpu().numpy.permute().contiguous().view().permute", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu().numpy.permute().contiguous", "torch.softmax().data[].cpu().numpy.permute", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_convert_score", "(", "self", ",", "score", ")", ":", "\n", "        ", "score", "=", "score", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "2", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "score", "=", "F", ".", "softmax", "(", "score", ",", "dim", "=", "1", ")", ".", "data", "[", ":", ",", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker._bbox_clip": [[68, 74], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.update_state": [[75, 78], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "region", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "region", "[", "0", "]", "+", "region", "[", "2", "]", "/", "2", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "region", "[", "2", "]", ",", "region", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.get_subwindow": [[79, 127], ["isinstance", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "cv2.resize.transpose", "cv2.resize.astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "cv2.resize.cuda", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_subwindow", "(", "self", ",", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ")", ":", "\n", "        ", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "            ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "            ", "size", "=", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "                ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "                ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "            ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "\n", "", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "return", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.init": [[128, 151], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "round", "numpy.mean", "SiamMobTrack.MySiamRPNMobTracker.get_subwindow", "SiamMobTrack.MySiamRPNMobTracker.model.template", "numpy.sqrt", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.template"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "\n", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "0", "]", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "1", "]", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "0", "]", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "1", "]", "]", ")", "\n", "\n", "# calculate z crop size", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "\n", "# calculate channle average", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# get crop", "\n", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "EXEMPLAR_SIZE", ",", "s_z", ",", "\n", "self", ".", "channel_average", ")", "\n", "self", ".", "model", ".", "template", "(", "z_crop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobTrack.MySiamRPNMobTracker.track": [[152, 266], ["numpy.sqrt", "numpy.hanning", "numpy.outer", "numpy.tile", "SiamMobTrack.MySiamRPNMobTracker.generate_anchor", "SiamMobTrack.MySiamRPNMobTracker.get_subwindow", "SiamMobTrack.MySiamRPNMobTracker.model.track", "SiamMobTrack.MySiamRPNMobTracker._convert_score", "SiamMobTrack.MySiamRPNMobTracker._convert_bbox", "SiamMobTrack.MySiamRPNMobTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "if", "self", ".", "longterm_state", ":", "\n", "            ", "instance_size", "=", "LOST_INSTANCE_SIZE", "\n", "", "else", ":", "\n", "            ", "instance_size", "=", "INSTANCE_SIZE", "\n", "\n", "", "score_size", "=", "(", "instance_size", "-", "EXEMPLAR_SIZE", ")", "//", "ANCHOR_STRIDE", "+", "1", "+", "BASE_SIZE", "\n", "hanning", "=", "np", ".", "hanning", "(", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "anchors", "=", "self", ".", "generate_anchor", "(", "score_size", ")", "\n", "\n", "s_x", "=", "s_z", "*", "(", "instance_size", "/", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "instance_size", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "# scale penalty", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "\n", "# aspect ratio penalty", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "# window penalty", "\n", "if", "not", "self", ".", "longterm_state", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "WINDOW_INFLUENCE", ")", "+", "window", "*", "WINDOW_INFLUENCE", "\n", "", "else", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "0.001", ")", "+", "window", "*", "0.001", "\n", "\n", "# get 'best_score' and the most important 'scores' and 'boxes' and 'lr'", "\n", "", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "best_score", "=", "pscore", "[", "best_idx", "]", "\n", "\n", "best_idx16", "=", "np", ".", "argsort", "(", "pscore", ")", "[", ":", ":", "-", "1", "]", "[", ":", "16", "]", "\n", "best_idx16", "=", "best_idx16", "[", "pscore", "[", "best_idx16", "]", ">", "pscore", "[", "best_idx", "]", "*", "0.95", "]", ".", "tolist", "(", ")", "\n", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx16", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx16", "]", "*", "score", "[", "best_idx16", "]", "*", "LR", "\n", "\n", "# get position and size", "\n", "if", "best_score", ">=", "CONFIDENCE_LOW", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", ",", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", ",", "0", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "2", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "3", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "\n", "self", ".", "cx16", "=", "bbox", "[", "0", ",", ":", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "self", ".", "cy16", "=", "bbox", "[", "1", ",", ":", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "self", ".", "width16", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", ",", ":", "]", "*", "lr", "\n", "self", ".", "height16", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", ",", ":", "]", "*", "lr", "\n", "", "else", ":", "\n", "            ", "cx", "=", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "cx", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "cy", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "width", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "height", "]", ")", "\n", "\n", "# clip boundary", "\n", "", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "# udpate state", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "\n", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "\n", "height", "]", "\n", "\n", "bbox16", "=", "[", "self", ".", "cx16", "-", "self", ".", "width16", "/", "2", ",", "\n", "self", ".", "cy16", "-", "self", ".", "height16", "/", "2", ",", "\n", "self", ".", "width16", ",", "\n", "self", ".", "height16", "]", "\n", "\n", "if", "best_score", "<", "CONFIDENCE_LOW", ":", "\n", "            ", "self", ".", "interval", "+=", "1", "\n", "self", ".", "longterm_state", "=", "False", "\n", "if", "self", ".", "interval", ">=", "10", ":", "\n", "                ", "self", ".", "longterm_state", "=", "True", "\n", "self", ".", "interval", "=", "0", "\n", "", "", "elif", "best_score", ">", "CONFIDENCE_HIGH", ":", "\n", "            ", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "interval", "=", "0", "\n", "\n", "", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'bbox16'", ":", "bbox16", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.__init__": [[28, 34], ["SiamResTrack.MySiamRPNResTracker.model.eval", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "anchor_num", "=", "len", "(", "ANCHOR_RATIOS", ")", "*", "len", "(", "ANCHOR_SCALES", ")", "\n", "self", ".", "interval", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.generate_anchor": [[35, 52], ["tools.anchor.Anchors", "numpy.stack", "numpy.tile().reshape", "numpy.meshgrid", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "methods", ["None"], ["", "def", "generate_anchor", "(", "self", ",", "score_size", ")", ":", "\n", "        ", "anchors", "=", "Anchors", "(", "ANCHOR_STRIDE", ",", "\n", "ANCHOR_RATIOS", ",", "\n", "ANCHOR_SCALES", ")", "\n", "anchor", "=", "anchors", ".", "anchors", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", ",", "anchor", "[", ":", ",", "2", "]", ",", "anchor", "[", ":", ",", "3", "]", "\n", "anchor", "=", "np", ".", "stack", "(", "[", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "]", ",", "1", ")", "\n", "total_stride", "=", "anchors", ".", "stride", "\n", "anchor_num", "=", "anchor", ".", "shape", "[", "0", "]", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "anchor", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker._convert_bbox": [[53, 62], ["delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous().view", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.exp", "numpy.exp", "delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu", "delta.data.cpu().numpy.data.cpu().numpy.permute"], "methods", ["None"], ["", "def", "_convert_bbox", "(", "self", ",", "delta", ",", "anchor", ")", ":", "\n", "        ", "delta", "=", "delta", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "4", ",", "-", "1", ")", "\n", "delta", "=", "delta", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", ":", ",", "2", "]", "+", "anchor", "[", ":", ",", "0", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", ":", ",", "3", "]", "+", "anchor", "[", ":", ",", "1", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "2", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "3", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker._convert_score": [[63, 67], ["torch.softmax().data[].cpu().numpy.permute().contiguous().view().permute", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu().numpy.permute().contiguous", "torch.softmax().data[].cpu().numpy.permute", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_convert_score", "(", "self", ",", "score", ")", ":", "\n", "        ", "score", "=", "score", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "2", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "score", "=", "F", ".", "softmax", "(", "score", ",", "dim", "=", "1", ")", ".", "data", "[", ":", ",", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker._bbox_clip": [[68, 74], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.update_state": [[75, 78], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "region", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "region", "[", "0", "]", "+", "region", "[", "2", "]", "/", "2", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "region", "[", "2", "]", ",", "region", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.get_subwindow": [[79, 127], ["isinstance", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "cv2.resize.transpose", "cv2.resize.astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "cv2.resize.cuda", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_subwindow", "(", "self", ",", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ")", ":", "\n", "        ", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "            ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "            ", "size", "=", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "                ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "                ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "            ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "\n", "", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "return", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.init": [[128, 151], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "round", "numpy.mean", "SiamResTrack.MySiamRPNResTracker.get_subwindow", "SiamResTrack.MySiamRPNResTracker.model.template", "numpy.sqrt", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.template"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "\n", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "0", "]", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "1", "]", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "0", "]", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "1", "]", "]", ")", "\n", "\n", "# calculate z crop size", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "\n", "# calculate channle average", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# get crop", "\n", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "EXEMPLAR_SIZE", ",", "s_z", ",", "\n", "self", ".", "channel_average", ")", "\n", "self", ".", "model", ".", "template", "(", "z_crop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamResTrack.MySiamRPNResTracker.track": [[152, 266], ["numpy.sqrt", "numpy.hanning", "numpy.outer", "numpy.tile", "SiamResTrack.MySiamRPNResTracker.generate_anchor", "SiamResTrack.MySiamRPNResTracker.get_subwindow", "SiamResTrack.MySiamRPNResTracker.model.track", "SiamResTrack.MySiamRPNResTracker._convert_score", "SiamResTrack.MySiamRPNResTracker._convert_bbox", "SiamResTrack.MySiamRPNResTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "if", "self", ".", "longterm_state", ":", "\n", "            ", "instance_size", "=", "LOST_INSTANCE_SIZE", "\n", "", "else", ":", "\n", "            ", "instance_size", "=", "INSTANCE_SIZE", "\n", "\n", "", "score_size", "=", "(", "instance_size", "-", "EXEMPLAR_SIZE", ")", "//", "ANCHOR_STRIDE", "+", "1", "+", "BASE_SIZE", "\n", "hanning", "=", "np", ".", "hanning", "(", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "anchors", "=", "self", ".", "generate_anchor", "(", "score_size", ")", "\n", "\n", "s_x", "=", "s_z", "*", "(", "instance_size", "/", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "instance_size", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "# scale penalty", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "\n", "# aspect ratio penalty", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "# window penalty", "\n", "if", "not", "self", ".", "longterm_state", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "WINDOW_INFLUENCE", ")", "+", "window", "*", "WINDOW_INFLUENCE", "\n", "", "else", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "0.001", ")", "+", "window", "*", "0.001", "\n", "\n", "# get 'best_score' and the most important 'scores' and 'boxes' and 'lr'", "\n", "", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "best_score", "=", "pscore", "[", "best_idx", "]", "\n", "\n", "best_idx16", "=", "np", ".", "argsort", "(", "pscore", ")", "[", ":", ":", "-", "1", "]", "[", ":", "16", "]", "\n", "best_idx16", "=", "best_idx16", "[", "pscore", "[", "best_idx16", "]", ">", "pscore", "[", "best_idx", "]", "*", "0.95", "]", ".", "tolist", "(", ")", "\n", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx16", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx16", "]", "*", "score", "[", "best_idx16", "]", "*", "LR", "\n", "\n", "# get position and size", "\n", "if", "best_score", ">=", "CONFIDENCE_LOW", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", ",", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", ",", "0", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "2", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "3", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "\n", "self", ".", "cx16", "=", "bbox", "[", "0", ",", ":", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "self", ".", "cy16", "=", "bbox", "[", "1", ",", ":", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "self", ".", "width16", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", ",", ":", "]", "*", "lr", "\n", "self", ".", "height16", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", ",", ":", "]", "*", "lr", "\n", "", "else", ":", "\n", "            ", "cx", "=", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "cx", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "cy", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "width", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "height", "]", ")", "\n", "\n", "# clip boundary", "\n", "", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "# udpate state", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "\n", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "\n", "height", "]", "\n", "\n", "bbox16", "=", "[", "self", ".", "cx16", "-", "self", ".", "width16", "/", "2", ",", "\n", "self", ".", "cy16", "-", "self", ".", "height16", "/", "2", ",", "\n", "self", ".", "width16", ",", "\n", "self", ".", "height16", "]", "\n", "\n", "if", "best_score", "<", "CONFIDENCE_LOW", ":", "\n", "            ", "self", ".", "interval", "+=", "1", "\n", "self", ".", "longterm_state", "=", "False", "\n", "if", "self", ".", "interval", ">=", "20", ":", "\n", "                ", "self", ".", "longterm_state", "=", "True", "\n", "self", ".", "interval", "=", "0", "\n", "", "", "elif", "best_score", ">", "CONFIDENCE_HIGH", ":", "\n", "            ", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "interval", "=", "0", "\n", "\n", "", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'bbox16'", ":", "bbox16", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.__init__": [[26, 32], ["SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.model.eval", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "longterm_state", "=", "False", "\n", "self", ".", "anchor_num", "=", "len", "(", "ANCHOR_RATIOS", ")", "*", "len", "(", "ANCHOR_SCALES", ")", "\n", "self", ".", "interval", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor": [[33, 50], ["tools.anchor.Anchors", "numpy.stack", "numpy.tile().reshape", "numpy.meshgrid", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "methods", ["None"], ["", "def", "generate_anchor", "(", "self", ",", "score_size", ")", ":", "\n", "        ", "anchors", "=", "Anchors", "(", "ANCHOR_STRIDE", ",", "\n", "ANCHOR_RATIOS", ",", "\n", "ANCHOR_SCALES", ")", "\n", "anchor", "=", "anchors", ".", "anchors", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", ",", "anchor", "[", ":", ",", "2", "]", ",", "anchor", "[", ":", ",", "3", "]", "\n", "anchor", "=", "np", ".", "stack", "(", "[", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "]", ",", "1", ")", "\n", "total_stride", "=", "anchors", ".", "stride", "\n", "anchor_num", "=", "anchor", ".", "shape", "[", "0", "]", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "anchor", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox": [[51, 60], ["delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous().view", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.exp", "numpy.exp", "delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu", "delta.data.cpu().numpy.data.cpu().numpy.permute"], "methods", ["None"], ["", "def", "_convert_bbox", "(", "self", ",", "delta", ",", "anchor", ")", ":", "\n", "        ", "delta", "=", "delta", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "4", ",", "-", "1", ")", "\n", "delta", "=", "delta", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", ":", ",", "2", "]", "+", "anchor", "[", ":", ",", "0", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", ":", ",", "3", "]", "+", "anchor", "[", ":", ",", "1", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "2", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "3", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score": [[61, 65], ["torch.softmax().data[].cpu().numpy.permute().contiguous().view().permute", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu().numpy.permute().contiguous", "torch.softmax().data[].cpu().numpy.permute", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "_convert_score", "(", "self", ",", "score", ")", ":", "\n", "        ", "score", "=", "score", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "2", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "score", "=", "F", ".", "softmax", "(", "score", ",", "dim", "=", "1", ")", ".", "data", "[", ":", ",", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._bbox_clip": [[66, 72], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.update_state": [[73, 76], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "region", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "region", "[", "0", "]", "+", "region", "[", "2", "]", "/", "2", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "region", "[", "2", "]", ",", "region", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow": [[77, 125], ["isinstance", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "cv2.resize.transpose", "cv2.resize.astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "cv2.resize.cuda", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_subwindow", "(", "self", ",", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ")", ":", "\n", "        ", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "            ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "            ", "size", "=", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "                ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "                ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "            ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "\n", "", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "return", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.init": [[126, 149], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "round", "numpy.mean", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.model.template", "numpy.sqrt", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.SiamRPN.SiamNetMob.MySiamRPNMob.template"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "\n", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "0", "]", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "self", ".", "center_pos", "[", "1", "]", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "0", "]", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "self", ".", "size", "[", "1", "]", "]", ")", "\n", "\n", "# calculate z crop size", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "\n", "# calculate channle average", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# get crop", "\n", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "EXEMPLAR_SIZE", ",", "s_z", ",", "\n", "self", ".", "channel_average", ")", "\n", "self", ".", "model", ".", "template", "(", "z_crop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.track": [[150, 246], ["numpy.sqrt", "numpy.hanning", "numpy.outer", "numpy.tile", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.model.track", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox", "SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.generate_anchor", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.get_subwindow", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_score", "home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "score_size", "=", "(", "INSTANCE_SIZE", "-", "EXEMPLAR_SIZE", ")", "//", "ANCHOR_STRIDE", "+", "1", "+", "BASE_SIZE", "\n", "hanning", "=", "np", ".", "hanning", "(", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "anchors", "=", "self", ".", "generate_anchor", "(", "score_size", ")", "\n", "\n", "s_x", "=", "s_z", "*", "(", "INSTANCE_SIZE", "/", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "\n", "INSTANCE_SIZE", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "# scale penalty", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "\n", "# aspect ratio penalty", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "# window penalty", "\n", "pscore", "=", "pscore", "*", "(", "1", "-", "WINDOW_INFLUENCE", ")", "+", "window", "*", "WINDOW_INFLUENCE", "\n", "\n", "# get 'best_score' and the most important 'scores' and 'boxes' and 'lr'", "\n", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "best_score", "=", "pscore", "[", "best_idx", "]", "\n", "\n", "best_idx16", "=", "np", ".", "argsort", "(", "pscore", ")", "[", ":", ":", "-", "1", "]", "[", ":", "16", "]", "\n", "best_idx16", "=", "best_idx16", "[", "pscore", "[", "best_idx16", "]", ">", "pscore", "[", "best_idx", "]", "*", "0.95", "]", ".", "tolist", "(", ")", "\n", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx16", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx16", "]", "*", "score", "[", "best_idx16", "]", "*", "LR", "\n", "\n", "# get position and size", "\n", "if", "best_score", ">=", "0.65", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", ",", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", ",", "0", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "2", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", "[", "0", "]", ")", "+", "bbox", "[", "3", ",", "0", "]", "*", "lr", "[", "0", "]", "\n", "\n", "self", ".", "cx16", "=", "bbox", "[", "0", ",", ":", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "self", ".", "cy16", "=", "bbox", "[", "1", ",", ":", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "self", ".", "width16", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", ",", ":", "]", "*", "lr", "\n", "self", ".", "height16", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", ",", ":", "]", "*", "lr", "\n", "", "else", ":", "\n", "            ", "cx", "=", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "\n", "\n", "self", ".", "cx16", "=", "np", ".", "array", "(", "[", "cx", "]", ")", "\n", "self", ".", "cy16", "=", "np", ".", "array", "(", "[", "cy", "]", ")", "\n", "self", ".", "width16", "=", "np", ".", "array", "(", "[", "width", "]", ")", "\n", "self", ".", "height16", "=", "np", ".", "array", "(", "[", "height", "]", ")", "\n", "\n", "# clip boundary", "\n", "", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "# udpate state", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "\n", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "\n", "height", "]", "\n", "\n", "bbox16", "=", "[", "self", ".", "cx16", "-", "self", ".", "width16", "/", "2", ",", "\n", "self", ".", "cy16", "-", "self", ".", "height16", "/", "2", ",", "\n", "self", ".", "width16", ",", "\n", "self", ".", "height16", "]", "\n", "\n", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'bbox16'", ":", "bbox16", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.__init__": [[23, 25], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "Noinit", "=", "True", "\n", "", "def", "track", "(", "self", ",", "name", ",", "gt_bbox_", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track": [[25, 195], ["mypysot.models.zpyMyNet.MySiamRPN", "mypysot.utils.model_load.load_pretrain().cuda().eval", "mypysot.tracker.zpyMyTrack.MySiamRPNTracker", "mypysot.RGBDNET.Depth_mask.Depth_mask", "mypysot.RGBDNET.data_loader.RGBDDataLoader", "mypysot.RGBDNET.net.RGBDNET().cuda", "torch.load", "mypysot.RGBDNET.net.RGBDNET().cuda.load_state_dict", "cv2.imread", "mypysot.tracker.zpyMyTrack.MySiamRPNTracker.init", "PIL.Image.open", "mypysot.RGBDNET.Depth_mask.Depth_mask.start_mask", "range", "os.path.exists", "sys.exit", "cv2.imread", "PIL.Image.open", "mypysot.tracker.zpyMyTrack.MySiamRPNTracker.track", "numpy.array", "numpy.array", "print", "print", "range", "cv2.putText", "cv2.imwrite", "np.array.copy.copy", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "mypysot.RGBDNET.data_loader.RGBDDataLoader.__get__", "mypysot.RGBDNET.net.RGBDNET().cuda.", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape", "ret[].copy", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw.line", "numpy.array.copy", "PIL.ImageDraw.Draw.line", "PIL.ImageDraw.Draw.line", "ret[].copy.save", "print", "mypysot.utils.model_load.load_pretrain().cuda", "mypysot.RGBDNET.net.RGBDNET", "os.path.exists", "print", "print", "print", "cv2.imread.copy", "state[].copy", "state[].copy", "cv2.line", "cv2.line", "cv2.line", "cv2.line", "str", "numpy.zeros", "range", "min", "min", "max", "max", "ret[].cuda", "ret[].cuda", "abs", "print", "open", "str().zfill", "str().zfill", "mypysot.RGBDNET.Depth_mask.Depth_mask.generral_mask", "cv2.imread.copy", "int", "len", "numpy.maximum", "numpy.maximum", "str().zfill", "str().zfill", "bbox.copy.copy.copy", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach().numpy", "mypysot.RGBDNET.Depth_mask.Depth_mask.get_depth", "mypysot.RGBDNET.Depth_mask.Depth_mask.start_mask", "os.path.join", "f2.write", "f2.write", "f2.write", "f2.write", "str().zfill", "mypysot.utils.model_load.load_pretrain", "cv2.imread.copy", "PIL.Image.open.copy", "str", "str().zfill", "str().zfill", "keep.append", "PIL.Image.open.copy", "str", "str", "round", "str", "str", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu().detach", "str", "str", "str", "str", "numpy.minimum", "numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.where", "result.cpu().detach().numpy().reshape.cpu().detach().numpy().reshape.cpu", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.tracker.SiamMobForMaskTrack.MySiamRPNMobForMaskTracker.init", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.start_mask", "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_PTB.PTB_track.ptb_track.track", "home.repos.pwc.inspect_result.lql-team_TSDM.Depth_refiner.data_loader.RGBDDataLoader.__get__", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.get_depth", "home.repos.pwc.inspect_result.lql-team_TSDM.Mask_generator.Depth_mask.Depth_mask.start_mask", "home.repos.pwc.inspect_result.lql-team_TSDM.tools.model_load.load_pretrain"], ["", "def", "track", "(", "self", ",", "name", ",", "gt_bbox_", ")", ":", "\n", "        ", "model", "=", "MySiamRPN", "(", ")", "\n", "model_load_path", "=", "'/home/guo/zpy/Mypysot/mypysot/dataset/weight/model.pth'", "\n", "model", "=", "load_pretrain", "(", "model", ",", "model_load_path", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "mytrack", "=", "MySiamRPNTracker", "(", "model", ")", "\n", "\n", "Masker", "=", "Depth_mask", "(", ")", "\n", "loader", "=", "RGBDDataLoader", "(", ")", "\n", "net_file", "=", "'/home/guo/zpy/Siamese-RPN-pytorch-master/dataset/weight/RGBDnet_weightsV12.2-0050000.pth.tar'", "\n", "rgbdnet", "=", "RGBDNET", "(", ")", ".", "cuda", "(", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "net_file", ")", "\n", "rgbdnet", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "\n", "s", "=", "'/home/guo/zpy/Mypysot/mypysot/result/result4'", "\n", "\n", "image_file1", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/rgb/00000001.png'", "\n", "image_file2", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/depth/00000001.png'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_file1", ")", ":", "\n", "            ", "sys", ".", "exit", "(", "0", ")", "\n", "", "img", "=", "cv2", ".", "imread", "(", "image_file1", ")", "\n", "mytrack", ".", "init", "(", "img", ",", "gt_bbox_", ")", "\n", "img_depth", "=", "Image", ".", "open", "(", "image_file2", ")", "\n", "Masker", ".", "start_mask", "(", "img", ",", "img_depth", ",", "gt_bbox_", ")", "\n", "\n", "#track", "\n", "confidence_count", "=", "0", "\n", "for", "i", "in", "range", "(", "2", ",", "5000", ")", ":", "\n", "#track of the first stage", "\n", "            ", "image_file1", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/rgb/'", "\n", "image_file1", "=", "image_file1", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.png'", "\n", "image_file2", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/depth/'", "\n", "image_file2", "=", "image_file2", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.png'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_file1", ")", ":", "\n", "                ", "print", "(", "'confidence_count:'", ")", "\n", "print", "(", "confidence_count", ")", "\n", "break", "\n", "", "img_rgb", "=", "cv2", ".", "imread", "(", "image_file1", ")", "\n", "img_depth", "=", "Image", ".", "open", "(", "image_file2", ")", "\n", "\n", "args_mask", "=", "True", "\n", "if", "args_mask", ":", "\n", "                ", "print", "(", "Masker", ".", "isWork", ")", "\n", "if", "Masker", ".", "isWork", "==", "True", ":", "\n", "                    ", "img", "=", "Masker", ".", "generral_mask", "(", "img_rgb", ".", "copy", "(", ")", ",", "img_depth", ".", "copy", "(", ")", ")", "\n", "masked", "=", "0.85", "\n", "", "else", ":", "\n", "                    ", "img", "=", "img_rgb", ".", "copy", "(", ")", "\n", "masked", "=", "1", "\n", "", "", "else", ":", "\n", "                ", "img", "=", "img_rgb", ".", "copy", "(", ")", "\n", "masked", "=", "1", "\n", "\n", "", "state", "=", "mytrack", ".", "track", "(", "img", ",", "masked", ")", "\n", "bbox", "=", "np", ".", "array", "(", "state", "[", "'bbox'", "]", ".", "copy", "(", ")", ")", "\n", "bboxes", "=", "np", ".", "array", "(", "state", "[", "'bbox16'", "]", ".", "copy", "(", ")", ")", "\n", "if", "(", "state", "[", "'confidence'", "]", "==", "1", ")", ":", "\n", "                ", "confidence_count", "=", "confidence_count", "+", "1", "\n", "", "print", "(", "state", "[", "'confidence'", "]", ")", "\n", "print", "(", "state", "[", "'best_score'", "]", ")", "\n", "\n", "\n", "for", "j", "in", "range", "(", "bboxes", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "region", "=", "[", "int", "(", "i", ")", "for", "i", "in", "bboxes", "[", ":", ",", "j", "]", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "region", "[", "0", "]", ",", "region", "[", "1", "]", ",", "region", "[", "0", "]", "+", "region", "[", "2", "]", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "\n", "cv2", ".", "line", "(", "img", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "x1", ",", "y2", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "x1", ",", "y1", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "", "text", "=", "'best_score: '", "+", "str", "(", "round", "(", "state", "[", "'best_score'", "]", ",", "3", ")", ")", "+", "'   confidence: '", "+", "str", "(", "state", "[", "'confidence'", "]", ")", "\n", "img", "=", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "50", ",", "50", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "if", "not", "args_mask", ":", "\n", "                ", "save_path", "=", "'/home/guo/zpy/Mypysot/mypysot/result/result1/siam_predict_'", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.jpg'", "\n", "", "else", ":", "\n", "                ", "save_path", "=", "'/home/guo/zpy/Mypysot/mypysot/result/result3/siam_predict_'", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.jpg'", "\n", "", "cv2", ".", "imwrite", "(", "save_path", ",", "img", ")", "\n", "\n", "\n", "\n", "#nms+\u5408\u5e76", "\n", "if", "not", "len", "(", "bboxes", ".", "shape", ")", "==", "1", ":", "\n", "                ", "boxes_num", "=", "bboxes", ".", "shape", "[", "1", "]", "\n", "proposal_16_x1", "=", "bboxes", "[", "0", ",", ":", "]", "\n", "proposal_16_y1", "=", "bboxes", "[", "1", ",", ":", "]", "\n", "proposal_16_x2", "=", "bboxes", "[", "0", ",", ":", "]", "+", "bboxes", "[", "2", ",", ":", "]", "\n", "proposal_16_y2", "=", "bboxes", "[", "1", ",", ":", "]", "+", "bboxes", "[", "3", ",", ":", "]", "\n", "areas", "=", "(", "proposal_16_x2", "-", "proposal_16_x1", "+", "1", ")", "*", "(", "proposal_16_y2", "-", "proposal_16_y1", "+", "1", ")", "\n", "neeSuppress", "=", "np", ".", "zeros", "(", "boxes_num", ",", "dtype", "=", "np", ".", "int", ")", "\n", "keep", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "0", ",", "boxes_num", ")", ":", "\n", "                    ", "if", "neeSuppress", "[", "j", "]", "==", "0", ":", "\n", "                        ", "keep", ".", "append", "(", "j", ")", "\n", "", "w", "=", "np", ".", "maximum", "(", "0.0", ",", "np", ".", "minimum", "(", "proposal_16_x2", "[", "j", "]", ",", "proposal_16_x2", ")", "-", "np", ".", "maximum", "(", "proposal_16_x1", "[", "j", "]", ",", "proposal_16_x1", ")", "+", "1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0.0", ",", "np", ".", "minimum", "(", "proposal_16_y2", "[", "j", "]", ",", "proposal_16_y2", ")", "-", "np", ".", "maximum", "(", "proposal_16_y1", "[", "j", "]", ",", "proposal_16_y1", ")", "+", "1", ")", "\n", "inter", "=", "w", "*", "h", "\n", "iou", "=", "inter", "/", "(", "areas", "[", "j", "]", "+", "areas", "-", "inter", ")", "\n", "neeSuppress", "[", "np", ".", "where", "(", "(", "iou", ">", "0.9", ")", "|", "(", "iou", "<", "0.05", ")", ")", "[", "0", "]", "]", "=", "1", "\n", "#print(keep)", "\n", "", "proposal_result_x1", "=", "min", "(", "proposal_16_x1", "[", "keep", "]", ")", "\n", "proposal_result_y1", "=", "min", "(", "proposal_16_y1", "[", "keep", "]", ")", "\n", "proposal_result_x2", "=", "max", "(", "proposal_16_x2", "[", "keep", "]", ")", "\n", "proposal_result_y2", "=", "max", "(", "proposal_16_y2", "[", "keep", "]", ")", "\n", "proposal_result_cx", "=", "(", "proposal_result_x1", "+", "proposal_result_x2", ")", "//", "2", "\n", "proposal_result_cy", "=", "(", "proposal_result_y1", "+", "proposal_result_y2", ")", "//", "2", "\n", "proposal_result_w", "=", "proposal_result_x2", "-", "proposal_result_x1", "\n", "proposal_result_h", "=", "proposal_result_y2", "-", "proposal_result_y1", "\n", "region", "=", "[", "proposal_result_x1", ",", "proposal_result_y1", ",", "proposal_result_w", ",", "proposal_result_h", "]", "\n", "", "else", ":", "\n", "                ", "region", "=", "[", "bboxes", "[", "0", "]", ",", "bboxes", "[", "1", "]", ",", "bboxes", "[", "2", "]", ",", "bboxes", "[", "3", "]", "]", "\n", "", "region", "=", "[", "region", "[", "0", "]", "-", "region", "[", "2", "]", "*", "0.1", ",", "region", "[", "1", "]", "-", "region", "[", "3", "]", "*", "0.1", ",", "region", "[", "2", "]", "*", "1.2", ",", "region", "[", "3", "]", "*", "1.2", "]", "\n", "imgw", ",", "imgh", "=", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", "\n", "region_nms", "=", "region", ".", "copy", "(", ")", "\n", "region_nms", "[", "0", "]", "=", "np", ".", "clip", "(", "region", "[", "0", "]", ",", "0", ",", "imgw", ")", "\n", "region_nms", "[", "1", "]", "=", "np", ".", "clip", "(", "region", "[", "1", "]", ",", "0", ",", "imgh", ")", "\n", "region_nms", "[", "2", "]", "=", "np", ".", "clip", "(", "region", "[", "2", "]", ",", "0", ",", "imgw", "-", "region_nms", "[", "0", "]", ")", "\n", "region_nms", "[", "3", "]", "=", "np", ".", "clip", "(", "region", "[", "3", "]", ",", "0", ",", "imgh", "-", "region_nms", "[", "1", "]", ")", "\n", "\n", "\n", "#track of the second stage", "\n", "image_file_rgb", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/rgb/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.png'", "\n", "image_file_d", "=", "'/media/guo/DataUbuntu/PTB_dataset/'", "+", "name", "+", "'/depth/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.png'", "\n", "img_path", "=", "[", "image_file_rgb", ",", "image_file_d", "]", "\n", "ret", "=", "loader", ".", "__get__", "(", "img_path", "=", "img_path", ",", "region", "=", "region_nms", ".", "copy", "(", ")", ")", "\n", "result", "=", "rgbdnet", "(", "ret", "[", "'img_rgb_tensor'", "]", ".", "cuda", "(", ")", ",", "ret", "[", "'img_d3_tensor'", "]", ".", "cuda", "(", ")", ")", "\n", "result", "=", "result", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "x1", ",", "y1", ",", "w", ",", "h", "=", "(", "result", "[", "2", "]", "-", "result", "[", "0", "]", ")", "*", "100", "/", "ret", "[", "'w_resized_ratio'", "]", "+", "region", "[", "0", "]", ",", "(", "result", "[", "3", "]", "-", "result", "[", "1", "]", ")", "*", "100", "/", "ret", "[", "'h_resized_ratio'", "]", "+", "region", "[", "1", "]", ",", "result", "[", "0", "]", "*", "100", "/", "ret", "[", "'w_resized_ratio'", "]", ",", "result", "[", "1", "]", "*", "100", "/", "ret", "[", "'h_resized_ratio'", "]", "\n", "if", "abs", "(", "w", "*", "h", "-", "bbox", "[", "2", "]", "*", "bbox", "[", "3", "]", ")", ">", "(", "bbox", "[", "2", "]", "*", "bbox", "[", "3", "]", ")", "*", "0.1", ":", "\n", "                ", "region", "=", "[", "x1", ",", "y1", ",", "w", ",", "h", "]", "\n", "print", "(", "'RGBDNET works!-------------------'", ")", "\n", "", "else", ":", "\n", "                ", "region", "=", "[", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ",", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", "\n", "\n", "", "if", "args_mask", ":", "\n", "                ", "if", "Masker", ".", "isWork", "==", "True", ":", "\n", "                    ", "Masker", ".", "get_depth", "(", "img_depth", ",", "region", ",", "state", "[", "'best_score'", "]", ">=", "0.68", ")", "\n", "", "if", "Masker", ".", "isWork", "==", "False", "and", "state", "[", "'best_score'", "]", ">=", "0.9", ":", "\n", "                    ", "Masker", ".", "start_mask", "(", "img_rgb", ",", "img_depth", ".", "copy", "(", ")", ",", "region", ")", "\n", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "s", ",", "name", "+", "'.txt'", ")", ",", "'a+'", ")", "as", "f2", ":", "\n", "                ", "if", "state", "[", "'best_score'", "]", ">", "0.2", ":", "\n", "                    ", "f2", ".", "write", "(", "str", "(", "'{:.1f}'", ".", "format", "(", "region", "[", "0", "]", ")", ")", "+", "','", "+", "\n", "str", "(", "'{:.1f}'", ".", "format", "(", "region", "[", "1", "]", ")", ")", "+", "','", "+", "\n", "str", "(", "'{:.1f}'", ".", "format", "(", "region", "[", "0", "]", "+", "region", "[", "2", "]", ")", ")", "+", "','", "+", "\n", "str", "(", "'{:.1f}'", ".", "format", "(", "region", "[", "1", "]", "+", "region", "[", "3", "]", ")", ")", ")", "\n", "f2", ".", "write", "(", "'\\n'", ")", "\n", "", "else", ":", "\n", "                    ", "f2", ".", "write", "(", "'NaN,NaN,NaN,NaN'", ")", "\n", "f2", ".", "write", "(", "'\\n'", ")", "\n", "\n", "", "", "save_path", "=", "'/home/guo/zpy/Mypysot/mypysot/result/result2/rgbd_predict_'", "+", "str", "(", "i", ")", ".", "zfill", "(", "8", ")", "+", "'.jpg'", "\n", "image", "=", "ret", "[", "'img_rgb'", "]", ".", "copy", "(", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "image", ")", "\n", "x1", ",", "y1", "=", "region", "[", "0", "]", ",", "region", "[", "1", "]", "\n", "x2", ",", "y2", "=", "region", "[", "0", "]", "+", "region", "[", "2", "]", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "\n", "draw", ".", "line", "(", "[", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y1", ")", "]", ",", "width", "=", "2", ",", "fill", "=", "'blue'", ")", "\n", "\n", "region", "=", "bbox", ".", "copy", "(", ")", "\n", "x1", ",", "y1", "=", "region", "[", "0", "]", ",", "region", "[", "1", "]", "\n", "x2", ",", "y2", "=", "region", "[", "0", "]", "+", "region", "[", "2", "]", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "\n", "draw", ".", "line", "(", "[", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y1", ")", "]", ",", "width", "=", "2", ",", "fill", "=", "'red'", ")", "\n", "\n", "region", "=", "region_nms", "\n", "x1", ",", "y1", "=", "region", "[", "0", "]", ",", "region", "[", "1", "]", "\n", "x2", ",", "y2", "=", "region", "[", "0", "]", "+", "region", "[", "2", "]", ",", "region", "[", "1", "]", "+", "region", "[", "3", "]", "\n", "draw", ".", "line", "(", "[", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y1", ")", "]", ",", "width", "=", "2", ",", "fill", "=", "'yellow'", ")", "\n", "image", ".", "save", "(", "save_path", ")", "\n", "\n", "print", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__init__": [[27, 59], ["trax.Server", "vot.VOT._trax.wait", "isinstance", "vot.VOT._trax.status", "Polygon", "Rectangle", "x.path", "len", "vot.VOT.image.items", "Point", "vot.VOT.region.bounds", "Exception"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "region_format", ",", "channels", "=", "None", ")", ":", "\n", "        ", "\"\"\" Constructor\n\n        Args:\n            region_format: Region format options\n        \"\"\"", "\n", "assert", "(", "region_format", "in", "[", "trax", ".", "Region", ".", "RECTANGLE", ",", "trax", ".", "Region", ".", "POLYGON", "]", ")", "\n", "\n", "if", "channels", "is", "None", ":", "\n", "            ", "channels", "=", "[", "'color'", "]", "\n", "", "elif", "channels", "==", "'rgbd'", ":", "\n", "            ", "channels", "=", "[", "'color'", ",", "'depth'", "]", "\n", "", "elif", "channels", "==", "'rgbt'", ":", "\n", "            ", "channels", "=", "[", "'color'", ",", "'ir'", "]", "\n", "", "elif", "channels", "==", "'ir'", ":", "\n", "            ", "channels", "=", "[", "'ir'", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Illegal configuration {}.'", ".", "format", "(", "channels", ")", ")", "\n", "\n", "", "self", ".", "_trax", "=", "trax", ".", "Server", "(", "[", "region_format", "]", ",", "[", "trax", ".", "Image", ".", "PATH", "]", ",", "channels", ")", "\n", "\n", "request", "=", "self", ".", "_trax", ".", "wait", "(", ")", "\n", "assert", "(", "request", ".", "type", "==", "'initialize'", ")", "\n", "if", "isinstance", "(", "request", ".", "region", ",", "trax", ".", "Polygon", ")", ":", "\n", "            ", "self", ".", "_region", "=", "Polygon", "(", "[", "Point", "(", "x", "[", "0", "]", ",", "x", "[", "1", "]", ")", "for", "x", "in", "request", ".", "region", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_region", "=", "Rectangle", "(", "*", "request", ".", "region", ".", "bounds", "(", ")", ")", "\n", "", "self", ".", "_image", "=", "[", "x", ".", "path", "(", ")", "for", "k", ",", "x", "in", "request", ".", "image", ".", "items", "(", ")", "]", "\n", "if", "len", "(", "self", ".", "_image", ")", "==", "1", ":", "\n", "            ", "self", ".", "_image", "=", "self", ".", "_image", "[", "0", "]", "\n", "\n", "", "self", ".", "_trax", ".", "status", "(", "request", ".", "region", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.region": [[60, 70], ["None"], "methods", ["None"], ["", "def", "region", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Send configuration message to the client and receive the initialization\n        region and the path of the first image\n\n        Returns:\n            initialization region\n        \"\"\"", "\n", "\n", "return", "self", ".", "_region", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.report": [[71, 87], ["isinstance", "vot.VOT._trax.status", "isinstance", "isinstance", "trax.Polygon.create", "trax.Rectangle.create"], "methods", ["None"], ["", "def", "report", "(", "self", ",", "region", ",", "confidence", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Report the tracking results to the client\n\n        Arguments:\n            region: region for the frame\n        \"\"\"", "\n", "assert", "(", "isinstance", "(", "region", ",", "Rectangle", ")", "or", "isinstance", "(", "region", ",", "Polygon", ")", ")", "\n", "if", "isinstance", "(", "region", ",", "Polygon", ")", ":", "\n", "            ", "tregion", "=", "trax", ".", "Polygon", ".", "create", "(", "[", "(", "x", ".", "x", ",", "x", ".", "y", ")", "for", "x", "in", "region", ".", "points", "]", ")", "\n", "", "else", ":", "\n", "            ", "tregion", "=", "trax", ".", "Rectangle", ".", "create", "(", "region", ".", "x", ",", "region", ".", "y", ",", "region", ".", "width", ",", "region", ".", "height", ")", "\n", "", "properties", "=", "{", "}", "\n", "if", "not", "confidence", "is", "None", ":", "\n", "            ", "properties", "[", "'confidence'", "]", "=", "confidence", "\n", "", "self", ".", "_trax", ".", "status", "(", "tregion", ",", "properties", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.frame": [[88, 109], ["hasattr", "vot.VOT._trax.wait", "x.path", "len", "vot.VOT.image.items"], "methods", ["None"], ["", "def", "frame", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Get a frame (image path) from client\n\n        Returns:\n            absolute path of the image\n        \"\"\"", "\n", "if", "hasattr", "(", "self", ",", "\"_image\"", ")", ":", "\n", "            ", "image", "=", "self", ".", "_image", "\n", "del", "self", ".", "_image", "\n", "return", "image", "\n", "\n", "", "request", "=", "self", ".", "_trax", ".", "wait", "(", ")", "\n", "\n", "if", "request", ".", "type", "==", "'frame'", ":", "\n", "            ", "image", "=", "[", "x", ".", "path", "(", ")", "for", "k", ",", "x", "in", "request", ".", "image", ".", "items", "(", ")", "]", "\n", "if", "len", "(", "image", ")", "==", "1", ":", "\n", "                ", "return", "image", "[", "0", "]", "\n", "", "return", "image", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.quit": [[111, 114], ["hasattr", "vot.VOT._trax.quit"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.quit"], ["", "", "def", "quit", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'_trax'", ")", ":", "\n", "            ", "self", ".", "_trax", ".", "quit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.__del__": [[115, 117], ["vot.VOT.quit"], "methods", ["home.repos.pwc.inspect_result.lql-team_TSDM.Evaluation_VOT.vot.VOT.quit"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "quit", "(", ")", "\n", "\n"]]}