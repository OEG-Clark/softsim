{"home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.config.get_args": [[11, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--network'", ",", "type", "=", "str", ",", "default", "=", "'vgg_nb'", ",", "help", "=", "'classification model'", ")", "\n", "# training settings", "\n", "parser", ".", "add_argument", "(", "'--optim'", ",", "type", "=", "str", ",", "default", "=", "'sgd'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-2", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_step\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_gamma\"", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "\"--wd\"", ",", "type", "=", "float", ",", "default", "=", "1e-6", ")", "\n", "parser", ".", "add_argument", "(", "'--batch'", ",", "type", "=", "int", ",", "default", "=", "16", ",", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--iters'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'iterations for communication'", ")", "\n", "parser", ".", "add_argument", "(", "'--wk_iters'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'optimization iters in local worker between communication'", ")", "\n", "# fedprox and fedbn", "\n", "# parser.add_argument('--weight', type = bool, default=True, help='class imbalance weight')", "\n", "# parser.add_argument('--mu', type=float, default=1e-2, help='The hyper parameter for fedprox')", "\n", "# PFA", "\n", "parser", ".", "add_argument", "(", "\"--l_rate\"", ",", "type", "=", "float", ",", "default", "=", "0.7", ")", "\n", "# DET", "\n", "parser", ".", "add_argument", "(", "'--alpha1'", ",", "type", "=", "float", ",", "default", "=", "0.7", ",", "help", "=", "'alpha1'", ")", "\n", "parser", ".", "add_argument", "(", "'--alpha2'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "'alpha2'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'seed'", ")", "\n", "parser", ".", "add_argument", "(", "'--theme'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'comments for training'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "'./experiment/'", ",", "help", "=", "'path to save the checkpoint'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.config.args_info": [[41, 55], ["utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "utils.print_cz", "os.getcwd", "time.strftime", "time.localtime"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz"], ["", "def", "args_info", "(", "args", ",", "device", ",", "logfile", "=", "None", ")", ":", "\n", "    ", "print_cz", "(", "os", ".", "getcwd", "(", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'Device: {}'", ".", "format", "(", "device", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'==={}==='", ".", "format", "(", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ",", "time", ".", "localtime", "(", ")", ")", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'===Setting==='", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    l_rate: {}'", ".", "format", "(", "args", ".", "l_rate", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    optim: {}'", ".", "format", "(", "args", ".", "optim", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    lr: {}'", ".", "format", "(", "args", ".", "lr", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    lr_step: {}'", ".", "format", "(", "args", ".", "lr_step", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    iters: {}'", ".", "format", "(", "args", ".", "iters", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    wk_iters: {}'", ".", "format", "(", "args", ".", "wk_iters", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    network: {}'", ".", "format", "(", "args", ".", "network", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    alpha1: {}'", ".", "format", "(", "args", ".", "alpha1", ")", ",", "f", "=", "logfile", ")", "\n", "print_cz", "(", "'    alpha2: {}'", ".", "format", "(", "args", ".", "alpha2", ")", ",", "f", "=", "logfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.local_train.DET": [[15, 147], ["local_train.test", "local_train.test", "model.train", "model_deputy.train", "model.to", "model_deputy.to", "iter", "range", "numpy.concatenate", "numpy.array", "utils.print_cz", "len", "optimizer.zero_grad", "optimizer_deputy.zero_grad", "next", "y.to().long.size", "x.to().float.to().float", "y.to().long.to().long", "model", "model_deputy", "model.topk", "pred_list_cz.extend", "label_list_cz.extend", "loss.backward", "loss_deputy.backward", "loss_fun.item", "loss_fun.item", "optimizer.step", "optimizer_deputy.step", "pred.eq().sum().item", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.roc_auc_score", "utils.print_cz", "pred_cz.cpu().numpy().tolist", "y.to().long.cpu().numpy().tolist", "loss_fun", "torch.kl_div", "loss_fun", "torch.kl_div", "output_list_cz.append", "model.data.max", "len", "len", "utils.print_cz", "utils.print_cz", "x.to().float.to", "y.to().long.to", "torch.log_softmax", "torch.softmax", "torch.log_softmax", "torch.softmax", "loss_fun", "loss_fun", "torch.kl_div", "torch.nn.functional.softmax().cpu().detach().numpy", "torch.nn.functional.softmax().cpu().detach().numpy", "pred.eq().sum", "pred_cz.cpu().numpy", "y.to().long.cpu().numpy", "model_deputy.clone().detach", "model.clone().detach", "torch.log_softmax", "torch.softmax", "loss_fun", "torch.kl_div", "loss_fun", "torch.kl_div", "model.clone().detach", "torch.log_softmax", "torch.softmax", "torch.log_softmax", "torch.softmax", "loss_fun", "torch.kl_div", "loss_fun", "loss_fun", "torch.kl_div", "loss_fun", "torch.kl_div", "torch.nn.functional.softmax().cpu().detach", "torch.nn.functional.softmax().cpu().detach", "pred.eq", "pred_cz.cpu", "y.to().long.cpu", "model_deputy.clone", "model.clone", "model_deputy.clone().detach", "model.clone().detach", "torch.log_softmax", "torch.softmax", "torch.log_softmax", "torch.softmax", "torch.log_softmax", "torch.softmax", "y.to().long.view", "model.clone", "model_deputy.clone().detach", "model_deputy.clone().detach", "model.clone().detach", "torch.nn.functional.softmax().cpu", "torch.nn.functional.softmax().cpu", "model_deputy.clone", "model.clone", "model_deputy.clone", "model_deputy.clone", "model.clone", "torch.nn.functional.softmax", "torch.nn.functional.softmax"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.local_train.test", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.local_train.test", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz"], ["def", "DET", "(", "\n", "args", ",", "\n", "model_deputy", ",", "\n", "model", ",", "\n", "train_loader", ",", "\n", "optimizer_deputy", ",", "\n", "optimizer", ",", "\n", "loss_fun", ",", "\n", "device", ",", "\n", "DET_stage", ",", "\n", "logfile", "=", "None", "\n", ")", ":", "\n", "\n", "    ", "train_loss", ",", "train_acc", ",", "train_f1", ",", "train_multi_auc", "=", "test", "(", "model", ",", "train_loader", ",", "loss_fun", ",", "device", ")", "\n", "train_loss_deputy", ",", "train_acc_deputy", ",", "train_f1_deputy", ",", "train_multi_auc_deputy", "=", "test", "(", "model_deputy", ",", "train_loader", ",", "loss_fun", ",", "device", ")", "\n", "alpha1", "=", "args", ".", "alpha1", "\n", "alpha2", "=", "args", ".", "alpha2", "\n", "# print_cz('-', f=logfile)", "\n", "\n", "if", "(", "train_f1_deputy", "<", "alpha1", "*", "train_f1", ")", "or", "DET_stage", "==", "0", ":", "\n", "        ", "DET_stage", "=", "1", "\n", "print_cz", "(", "'recover'", ",", "f", "=", "logfile", ")", "\n", "# print_cz('personalized is teacher', f=logfile)", "\n", "", "elif", "(", "train_f1_deputy", ">=", "alpha1", "*", "train_f1", "and", "DET_stage", "==", "1", ")", "or", "(", "DET_stage", ">=", "2", "and", "train_f1_deputy", "<", "alpha2", "*", "train_f1", ")", ":", "\n", "        ", "DET_stage", "=", "2", "\n", "print_cz", "(", "'exchange'", ",", "f", "=", "logfile", ")", "\n", "# print_cz('mutual learning', f=logfile)        ", "\n", "", "elif", "train_f1_deputy", ">=", "alpha2", "*", "train_f1", "and", "DET_stage", ">=", "2", ":", "\n", "        ", "DET_stage", "=", "3", "\n", "print_cz", "(", "'sublimate'", ",", "f", "=", "logfile", ")", "\n", "# print_cz('deputy is teacher', f=logfile)", "\n", "", "else", ":", "\n", "        ", "print_cz", "(", "'***********************Logic error************************'", ",", "f", "=", "logfile", ")", "\n", "DET_stage", "=", "4", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "model_deputy", ".", "train", "(", ")", "\n", "model", ".", "to", "(", "device", ")", "# ", "\n", "model_deputy", ".", "to", "(", "device", ")", "# ", "\n", "num_data", "=", "0", "\n", "correct", "=", "0", "\n", "loss_all", "=", "0", "\n", "loss_deputy_all", "=", "0", "\n", "\n", "label_list_cz", "=", "[", "]", "# cz", "\n", "pred_list_cz", "=", "[", "]", "# cz", "\n", "output_list_cz", "=", "[", "]", "\n", "\n", "train_iter", "=", "iter", "(", "train_loader", ")", "\n", "for", "step", "in", "range", "(", "len", "(", "train_iter", ")", ")", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "# cz mark", "\n", "optimizer_deputy", ".", "zero_grad", "(", ")", "\n", "x", ",", "y", "=", "next", "(", "train_iter", ")", "\n", "num_data", "+=", "y", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "y", "=", "y", ".", "to", "(", "device", ")", ".", "long", "(", ")", "\n", "output", "=", "model", "(", "x", ")", "\n", "output_deputy", "=", "model_deputy", "(", "x", ")", "\n", "\n", "# cz ", "\n", "_", ",", "pred_cz", "=", "output", ".", "topk", "(", "1", ",", "1", ",", "True", ",", "True", ")", "\n", "pred_list_cz", ".", "extend", "(", "\n", "(", "(", "pred_cz", ".", "cpu", "(", ")", ")", ".", "numpy", "(", ")", ")", ".", "tolist", "(", ")", ")", "\n", "label_list_cz", ".", "extend", "(", "\n", "(", "(", "y", ".", "cpu", "(", ")", ")", ".", "numpy", "(", ")", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "if", "args", ".", "wk_iters", "<", "2", ":", "\n", "# default mutual learning if wk_iters == 1", "\n", "            ", "loss_ce", "=", "loss_fun", "(", "output", ",", "y", ")", "\n", "loss_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output_deputy", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss", "=", "loss_ce", "+", "loss_kl", "\n", "\n", "loss_deputy_ce", "=", "loss_fun", "(", "output_deputy", ",", "y", ")", "\n", "loss_deputy_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output_deputy", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss_deputy", "=", "loss_deputy_ce", "+", "loss_deputy_kl", "\n", "", "else", ":", "# args.wk_iters>=2, default 5", "\n", "            ", "if", "DET_stage", "==", "1", ":", "\n", "# personalized is teacher                ", "\n", "                ", "loss_ce", "=", "loss_fun", "(", "output", ",", "y", ")", "\n", "loss", "=", "loss_ce", "\n", "\n", "loss_deputy_ce", "=", "loss_fun", "(", "output_deputy", ",", "y", ")", "\n", "loss_deputy_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output_deputy", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss_deputy", "=", "loss_deputy_ce", "+", "loss_deputy_kl", "\n", "\n", "", "elif", "DET_stage", "==", "2", ":", "\n", "# mutual learning DET_stage = 2", "\n", "                ", "loss_ce", "=", "loss_fun", "(", "output", ",", "y", ")", "\n", "loss_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output_deputy", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss", "=", "loss_ce", "+", "loss_kl", "\n", "\n", "loss_deputy_ce", "=", "loss_fun", "(", "output_deputy", ",", "y", ")", "\n", "loss_deputy_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output_deputy", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss_deputy", "=", "loss_deputy_ce", "+", "loss_deputy_kl", "\n", "\n", "", "elif", "DET_stage", "==", "3", ":", "\n", "# deputy is teacher", "\n", "                ", "loss_ce", "=", "loss_fun", "(", "output", ",", "y", ")", "\n", "loss_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output_deputy", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss", "=", "loss_ce", "+", "loss_kl", "\n", "\n", "loss_deputy_ce", "=", "loss_fun", "(", "output_deputy", ",", "y", ")", "\n", "loss_deputy", "=", "loss_deputy_ce", "\n", "\n", "", "else", ":", "\n", "# default mutual learning", "\n", "                ", "loss_ce", "=", "loss_fun", "(", "output", ",", "y", ")", "\n", "loss_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output_deputy", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss", "=", "loss_ce", "+", "loss_kl", "\n", "\n", "loss_deputy_ce", "=", "loss_fun", "(", "output_deputy", ",", "y", ")", "\n", "loss_deputy_kl", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "output_deputy", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "output", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "reduction", "=", "'batchmean'", ")", "\n", "loss_deputy", "=", "loss_deputy_ce", "+", "loss_deputy_kl", "\n", "", "output_list_cz", ".", "append", "(", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "output", ",", "dim", "=", "-", "1", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "loss_deputy", ".", "backward", "(", ")", "\n", "loss_all", "+=", "loss_ce", ".", "item", "(", ")", "\n", "loss_deputy_all", "+=", "loss_deputy_ce", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer_deputy", ".", "step", "(", ")", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "+=", "pred", ".", "eq", "(", "y", ".", "view", "(", "-", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "# cz", "\n", "", "test_pred", "=", "np", ".", "concatenate", "(", "output_list_cz", ",", "axis", "=", "0", ")", "\n", "test_label", "=", "np", ".", "array", "(", "label_list_cz", ")", "\n", "mean_acc", "=", "100", "*", "metrics", ".", "accuracy_score", "(", "label_list_cz", ",", "pred_list_cz", ")", "\n", "f1_macro", "=", "100", "*", "metrics", ".", "f1_score", "(", "y_true", "=", "label_list_cz", ",", "y_pred", "=", "pred_list_cz", ",", "average", "=", "'macro'", ")", "\n", "auc", "=", "100.0", "*", "roc_auc_score", "(", "y_true", "=", "test_label", ",", "y_score", "=", "test_pred", ",", "multi_class", "=", "'ovr'", ")", "\n", "\n", "return", "DET_stage", ",", "loss_all", "/", "len", "(", "train_iter", ")", ",", "loss_deputy_all", "/", "len", "(", "train_iter", ")", ",", "mean_acc", ",", "f1_macro", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.local_train.test": [[149, 190], ["model.eval", "model.to", "numpy.concatenate", "numpy.array", "data.to().float.to().float", "target.to().long.to().long", "targets.append", "model", "model.topk", "pred_list_cz.extend", "label_list_cz.extend", "loss_fun().item", "output_list_cz.append", "pred.eq().sum().item", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.roc_auc_score", "target.to().long.detach().cpu().numpy", "pred_cz.cpu().numpy().tolist", "target.to().long.cpu().numpy().tolist", "model.data.max", "torch.nn.functional.softmax().cpu().detach().numpy", "torch.nn.functional.softmax().cpu().detach().numpy", "len", "data.to().float.to", "target.to().long.to", "loss_fun", "pred.eq().sum", "target.to().long.detach().cpu", "pred_cz.cpu().numpy", "target.to().long.cpu().numpy", "torch.nn.functional.softmax().cpu().detach", "torch.nn.functional.softmax().cpu().detach", "pred.eq", "target.to().long.detach", "pred_cz.cpu", "target.to().long.cpu", "torch.nn.functional.softmax().cpu", "torch.nn.functional.softmax().cpu", "target.to().long.view", "torch.nn.functional.softmax", "torch.nn.functional.softmax"], "function", ["None"], ["", "def", "test", "(", "\n", "model", ",", "\n", "test_loader", ",", "\n", "loss_fun", ",", "\n", "device", "\n", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "model", ".", "to", "(", "device", ")", "# ", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "targets", "=", "[", "]", "\n", "\n", "label_list_cz", "=", "[", "]", "# cz", "\n", "pred_list_cz", "=", "[", "]", "# cz", "\n", "output_list_cz", "=", "[", "]", "\n", "\n", "for", "data", ",", "target", "in", "test_loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "target", "=", "target", ".", "to", "(", "device", ")", ".", "long", "(", ")", "\n", "targets", ".", "append", "(", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "output", "=", "model", "(", "data", ")", "\n", "# cz ", "\n", "_", ",", "pred_cz", "=", "output", ".", "topk", "(", "1", ",", "1", ",", "True", ",", "True", ")", "#", "\n", "pred_list_cz", ".", "extend", "(", "\n", "(", "(", "pred_cz", ".", "cpu", "(", ")", ")", ".", "numpy", "(", ")", ")", ".", "tolist", "(", ")", ")", "\n", "label_list_cz", ".", "extend", "(", "\n", "(", "(", "target", ".", "cpu", "(", ")", ")", ".", "numpy", "(", ")", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "test_loss", "+=", "loss_fun", "(", "output", ",", "target", ")", ".", "item", "(", ")", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "output_list_cz", ".", "append", "(", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "output", ",", "dim", "=", "-", "1", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view", "(", "-", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "# cz", "\n", "", "test_pred", "=", "np", ".", "concatenate", "(", "output_list_cz", ",", "axis", "=", "0", ")", "\n", "test_label", "=", "np", ".", "array", "(", "label_list_cz", ")", "\n", "mean_acc", "=", "100", "*", "metrics", ".", "accuracy_score", "(", "label_list_cz", ",", "pred_list_cz", ")", "\n", "f1_macro", "=", "100", "*", "metrics", ".", "f1_score", "(", "y_true", "=", "label_list_cz", ",", "y_pred", "=", "pred_list_cz", ",", "average", "=", "'macro'", ")", "\n", "auc", "=", "100.0", "*", "roc_auc_score", "(", "y_true", "=", "test_label", ",", "y_score", "=", "test_pred", ",", "multi_class", "=", "'ovr'", ")", "\n", "\n", "return", "test_loss", "/", "len", "(", "test_loader", ")", ",", "mean_acc", ",", "f1_macro", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.avg_freq": [[17, 70], ["len", "numpy.zeros", "range", "range", "weights[].size", "weights[].size", "weights[].cpu().numpy", "numpy.fft.fft2", "numpy.fft.fftshift", "numpy.fft.fft2", "numpy.fft.fftshift", "numpy.floor().astype", "numpy.floor().astype", "numpy.floor().astype", "numpy.floor().astype", "numpy.fft.ifftshift", "numpy.fft.ifft2", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "weights[].permute().reshape", "numpy.abs", "numpy.angle", "numpy.abs", "numpy.angle", "numpy.exp", "numpy.real", "weights[].reshape().permute", "weights[].cpu", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "weights[].permute", "weights[].reshape"], "function", ["None"], ["def", "avg_freq", "(", "\n", "weights", ",", "\n", "L", "=", "0.1", ",", "\n", "is_conv", "=", "True", "\n", ")", ":", "\n", "    ", "client_num", "=", "len", "(", "weights", ")", "\n", "\n", "if", "is_conv", ":", "\n", "        ", "N", ",", "C", ",", "D1", ",", "D2", "=", "weights", "[", "0", "]", ".", "size", "(", ")", "\n", "", "else", ":", "\n", "        ", "N", "=", "1", "\n", "C", "=", "1", "\n", "D1", ",", "D2", "=", "weights", "[", "0", "]", ".", "size", "(", ")", "\n", "#print(N, C, D1, D2)", "\n", "", "temp_low", "=", "np", ".", "zeros", "(", "(", "C", "*", "D1", ",", "D2", "*", "N", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "client_num", ")", ":", "\n", "# N, C, D1, D2 = weights[i].size()", "\n", "#weights[i] = weights[i].cpu().numpy()", "\n", "        ", "if", "is_conv", ":", "\n", "            ", "weights", "[", "i", "]", "=", "weights", "[", "i", "]", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "reshape", "(", "(", "C", "*", "D1", ",", "D2", "*", "N", ")", ")", "\n", "", "weights", "[", "i", "]", "=", "weights", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "client_fft", "=", "np", ".", "fft", ".", "fft2", "(", "weights", "[", "i", "]", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "amp_fft", ",", "pha_fft", "=", "np", ".", "abs", "(", "client_fft", ")", ",", "np", ".", "angle", "(", "client_fft", ")", "# FFT", "\n", "low_part", "=", "np", ".", "fft", ".", "fftshift", "(", "amp_fft", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "temp_low", "+=", "low_part", "\n", "", "temp_low", "=", "temp_low", "/", "4", "# avg the low-frequency", "\n", "\n", "for", "i", "in", "range", "(", "client_num", ")", ":", "\n", "        ", "client_fft", "=", "np", ".", "fft", ".", "fft2", "(", "weights", "[", "i", "]", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "amp_fft", ",", "pha_fft", "=", "np", ".", "abs", "(", "client_fft", ")", ",", "np", ".", "angle", "(", "client_fft", ")", "\n", "low_part", "=", "np", ".", "fft", ".", "fftshift", "(", "amp_fft", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "h", ",", "w", "=", "low_part", ".", "shape", "\n", "b_h", "=", "(", "np", ".", "floor", "(", "h", "*", "L", "/", "2", ")", ")", ".", "astype", "(", "int", ")", "\n", "b_w", "=", "(", "np", ".", "floor", "(", "w", "*", "L", "/", "2", ")", ")", ".", "astype", "(", "int", ")", "\n", "c_h", "=", "np", ".", "floor", "(", "h", "/", "2.0", ")", ".", "astype", "(", "int", ")", "\n", "c_w", "=", "np", ".", "floor", "(", "w", "/", "2.0", ")", ".", "astype", "(", "int", ")", "\n", "\n", "h1", "=", "c_h", "-", "b_h", "\n", "h2", "=", "c_h", "+", "b_h", "\n", "w1", "=", "c_w", "-", "b_w", "\n", "w2", "=", "c_w", "+", "b_w", "\n", "low_part", "[", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "=", "temp_low", "[", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "# averaged low-freq + individual high-freq", "\n", "low_part", "=", "np", ".", "fft", ".", "ifftshift", "(", "low_part", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "fft_back_", "=", "low_part", "*", "np", ".", "exp", "(", "1j", "*", "pha_fft", ")", "# ", "\n", "# get the mutated image", "\n", "fft_back_", "=", "np", ".", "fft", ".", "ifft2", "(", "fft_back_", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "weights", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "np", ".", "real", "(", "fft_back_", ")", ")", "\n", "if", "is_conv", ":", "\n", "            ", "weights", "[", "i", "]", "=", "weights", "[", "i", "]", ".", "reshape", "(", "C", ",", "D1", ",", "D2", ",", "N", ")", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "", "", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.PFA": [[72, 78], ["server.avg_freq"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.avg_freq"], ["", "def", "PFA", "(", "\n", "weights", ",", "\n", "L", ",", "\n", "is_conv", "\n", ")", ":", "\n", "    ", "return", "avg_freq", "(", "weights", "=", "weights", ",", "L", "=", "L", ",", "is_conv", "=", "is_conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.communication": [[82, 132], ["len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "server_model.state_dict().keys", "server_model.state_dict", "server.PFA", "range", "[].data.copy_", "server.PFA", "range", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "[].data.copy_", "range", "[].data.copy_", "[].data.copy_", "server_model.state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "server_model.state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "models[].state_dict", "server_model.state_dict", "models[].state_dict", "models[].state_dict"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.PFA", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.server.PFA"], ["", "def", "communication", "(", "\n", "args", ",", "\n", "server_model", ",", "\n", "models", ",", "\n", "original_models", ",", "\n", "client_weights", ",", "\n", "a_iter", "\n", ")", ":", "\n", "    ", "pfa_rate", "=", "args", ".", "l_rate", "+", "(", "a_iter", "/", "args", ".", "iters", ")", "*", "(", "0.95", "-", "args", ".", "l_rate", ")", "\n", "client_num", "=", "len", "(", "client_weights", ")", "# ", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# aggregate params", "\n", "        ", "for", "key", "in", "server_model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "if", "'bn'", "not", "in", "key", ":", "#not bn", "\n", "                ", "if", "'conv'", "in", "key", "and", "'weight'", "in", "key", ":", "\n", "                    ", "temp_weights", "=", "PFA", "(", "\n", "[", "\n", "models", "[", "0", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "1", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "2", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "3", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", "\n", "]", ",", "\n", "L", "=", "pfa_rate", ",", "\n", "is_conv", "=", "True", "\n", ")", "\n", "for", "client_idx", "in", "range", "(", "client_num", ")", ":", "# copy from server to each client", "\n", "                        ", "models", "[", "client_idx", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ".", "copy_", "(", "temp_weights", "[", "client_idx", "]", ")", "\n", "", "", "elif", "'linear'", "in", "key", "and", "'weight'", "in", "key", ":", "\n", "                    ", "temp_weights", "=", "PFA", "(", "\n", "[", "\n", "models", "[", "0", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "1", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "2", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ",", "\n", "models", "[", "3", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", "\n", "]", ",", "\n", "L", "=", "pfa_rate", ",", "\n", "is_conv", "=", "False", "\n", ")", "\n", "for", "client_idx", "in", "range", "(", "client_num", ")", ":", "# ", "\n", "                        ", "models", "[", "client_idx", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ".", "copy_", "(", "temp_weights", "[", "client_idx", "]", ")", "\n", "", "", "else", ":", "\n", "                    ", "print", "(", "key", ",", "'\\t not bn, conv, fc layer, with param!'", ")", "\n", "temp", "=", "torch", ".", "zeros_like", "(", "server_model", ".", "state_dict", "(", ")", "[", "key", "]", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "for", "client_idx", "in", "range", "(", "client_num", ")", ":", "\n", "                        ", "temp", "+=", "client_weights", "[", "client_idx", "]", "*", "models", "[", "client_idx", "]", ".", "state_dict", "(", ")", "[", "key", "]", "\n", "", "server_model", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ".", "copy_", "(", "temp", ")", "# non-bn layer\uff0cupdate the server model", "\n", "for", "client_idx", "in", "range", "(", "client_num", ")", ":", "# non-bn layer, from server to each client", "\n", "                        ", "models", "[", "client_idx", "]", ".", "state_dict", "(", ")", "[", "key", "]", ".", "data", ".", "copy_", "(", "server_model", ".", "state_dict", "(", ")", "[", "key", "]", ")", "\n", "\n", "", "", "", "", "", "return", "server_model", ",", "models", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.init_dict": [[13, 18], ["None"], "function", ["None"], ["def", "init_dict", "(", "keys", ")", ":", "\n", "    ", "d", "=", "{", "}", "\n", "for", "key", "in", "keys", ":", "\n", "        ", "d", "[", "key", "]", "=", "[", "]", "\n", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.save_dict": [[20, 24], ["open", "f.write", "os.path.join", "json.dumps"], "function", ["None"], ["", "def", "save_dict", "(", "info_dict", ",", "theme", ",", "save_dir", ")", ":", "\n", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'infodict-{}.json'", ".", "format", "(", "theme", ")", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "json", ".", "dumps", "(", "info_dict", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.curve_save": [[26, 43], ["matplotlib.figure", "matplotlib.grid", "isinstance", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.legend", "plt.figure.savefig", "matplotlib.close", "enumerate", "matplotlib.plot", "os.path.join", "zip", "matplotlib.plot"], "function", ["None"], ["", "", "def", "curve_save", "(", "x", ",", "y", ",", "tag", ",", "yaxis", ",", "theme", ",", "save_dir", ")", ":", "\n", "    ", "color", "=", "[", "'r'", ",", "'b'", ",", "'g'", ",", "'c'", ",", "'orange'", ",", "'lightsteelblue'", ",", "'cornflowerblue'", ",", "'indianred'", "]", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "# ax = plt.subplot()", "\n", "plt", ".", "grid", "(", "linestyle", "=", "'-'", ",", "linewidth", "=", "0.5", ",", "alpha", "=", "0.5", ")", "\n", "if", "isinstance", "(", "tag", ",", "list", ")", ":", "\n", "        ", "for", "i", ",", "(", "y_term", ",", "tag_term", ")", "in", "enumerate", "(", "zip", "(", "y", ",", "tag", ")", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "x", ",", "y_term", ",", "color", "[", "i", "]", ",", "label", "=", "tag_term", ",", "alpha", "=", "0.7", ")", "\n", "", "", "else", ":", "\n", "        ", "plt", ".", "plot", "(", "x", ",", "y", ",", "color", "[", "0", "]", ",", "label", "=", "tag", ",", "alpha", "=", "0.7", ")", "\n", "", "plt", ".", "xlabel", "(", "'Epoch'", ",", "fontsize", "=", "12", ")", "\n", "plt", ".", "ylabel", "(", "yaxis", ",", "fontsize", "=", "12", ")", "\n", "plt", ".", "title", "(", "'curve-{}'", ".", "format", "(", "theme", ")", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "\n", "fig", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'curve-{}.png'", ".", "format", "(", "theme", ")", ")", ",", "dpi", "=", "300", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "####", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.time_mark": [[44, 50], ["int", "time.localtime", "time.strftime", "time.time"], "function", ["None"], ["", "def", "time_mark", "(", ")", ":", "\n", "    ", "time_now", "=", "int", "(", "time", ".", "time", "(", ")", ")", "\n", "time_local", "=", "time", ".", "localtime", "(", "time_now", ")", "\n", "\n", "dt", "=", "time", ".", "strftime", "(", "'%Y%m%d-%H%M%S'", ",", "time_local", ")", "\n", "return", "(", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.print_cz": [[51, 57], ["print", "print", "random.randint", "f.flush"], "function", ["None"], ["", "def", "print_cz", "(", "str", ",", "f", "=", "None", ")", ":", "\n", "    ", "if", "f", "is", "not", "None", ":", "\n", "        ", "print", "(", "str", ",", "file", "=", "f", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "20", ")", "<", "3", ":", "\n", "            ", "f", ".", "flush", "(", ")", "\n", "", "", "print", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.update_lr": [[58, 62], ["None"], "function", ["None"], ["", "def", "update_lr", "(", "lr", ",", "epoch", ",", "lr_step", "=", "20", ",", "lr_gamma", "=", "0.5", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 0.5 every 20 epochs\"\"\"", "\n", "lr", "=", "lr", "*", "(", "lr_gamma", "**", "(", "epoch", "//", "lr_step", ")", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.remove_oldfile": [[64, 68], ["os.listdir", "os.remove", "os.path.join"], "function", ["None"], ["", "def", "remove_oldfile", "(", "dirname", ",", "file_keyword", ")", ":", "\n", "    ", "for", "filename", "in", "os", ".", "listdir", "(", "dirname", ")", ":", "\n", "        ", "if", "file_keyword", "in", "filename", ":", "\n", "            ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "dirname", ",", "filename", ")", ")", "\n", "#########", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.metric_macro": [[69, 72], ["numpy.mean"], "function", ["None"], ["", "", "", "def", "metric_macro", "(", "metric_clients", ")", ":", "\n", "    ", "result", "=", "np", ".", "mean", "(", "metric_clients", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.None.utils.overall_performance": [[73, 87], ["open", "open.close", "os.path.join"], "function", ["None"], ["", "def", "overall_performance", "(", "dirname", ",", "F1_m", ",", "AUC_m", ",", "iters", ",", "tag", "=", "'_overall_'", ")", ":", "\n", "    ", "f", "=", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "dirname", ",", "\n", "'{}-F1-m{:.2f}-AUC-m{:.2f}-iters{:d}.txt'", ".", "format", "(", "\n", "tag", ",", "\n", "F1_m", ",", "\n", "AUC_m", ",", "\n", "iters", "\n", ")", "\n", ")", ",", "\n", "'w'", "\n", ")", "\n", "f", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.SkinDataset.__init__": [[41, 82], ["torch.utils.data.Dataset.__init__", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "print", "os.path.abspath", "os.path.abspath", "os.path.abspath", "os.path.abspath", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "print", "data_path.split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "print", "print", "data_path.split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "data_path.split", "data_path.split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "data_path.split", "data_path.split", "data_path.split"], "methods", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked_Biased.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_path", "=", "'./FedSkinLesion_dataset/client1_vidir_modern'", ",", "state", "=", "0", ",", "fine_task", "=", "True", ",", "low_resolution", "=", "True", ",", "transform", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        data_path: 4 clients as client1_vidir_modern, client2_vidir_molemax, client3_rosendahl, client4_msk_isic2017;\n        fine_task: default True for three-category (nv=0, bkl=1, mel=2)\uff0cFalse for binray-category (benign vs malignant, [nv, bkl]=0, mel=1);\n        low_resolution: default True for 128 resolution, False for 256 resolution\n        \"\"\"", "\n", "super", "(", "SkinDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "low_resolution", ":", "\n", "            ", "self", ".", "resolution", "=", "128", "\n", "", "else", ":", "\n", "            ", "self", ".", "resolution", "=", "256", "\n", "\n", "", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'img_resize{:d}'", ".", "format", "(", "self", ".", "resolution", ")", ")", "\n", "# print(self.img_dir)", "\n", "# for filename in os.listdir(os.path.join(config.csv_folder, data_path.split('/')[-1])):", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "abspath", "(", "config", ".", "csv_folder", ")", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", ")", ":", "\n", "            ", "if", "'train_'", "in", "filename", "and", "'.csv'", "in", "filename", ":", "\n", "                ", "filename_train_csv", "=", "filename", "\n", "", "elif", "'valid_'", "in", "filename", "and", "'.csv'", "in", "filename", ":", "\n", "                ", "filename_valid_csv", "=", "filename", "\n", "", "elif", "'test_'", "in", "filename", "and", "'.csv'", "in", "filename", ":", "\n", "                ", "filename_test_csv", "=", "filename", "\n", "", "", "if", "state", "==", "0", ":", "# ", "\n", "            ", "self", ".", "csv_file", "=", "pd", ".", "read_csv", "(", "filepath_or_buffer", "=", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_train_csv", ")", ",", "sep", "=", "','", ")", "\n", "print", "(", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_train_csv", ")", ")", "\n", "", "elif", "state", "==", "1", ":", "\n", "            ", "self", ".", "csv_file", "=", "pd", ".", "read_csv", "(", "filepath_or_buffer", "=", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_valid_csv", ")", ",", "sep", "=", "','", ")", "\n", "print", "(", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_valid_csv", ")", ")", "\n", "", "elif", "state", "==", "2", ":", "# ", "\n", "            ", "self", ".", "csv_file", "=", "pd", ".", "read_csv", "(", "filepath_or_buffer", "=", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_test_csv", ")", ",", "sep", "=", "','", ")", "\n", "print", "(", "os", ".", "path", ".", "join", "(", "config", ".", "csv_folder", ",", "data_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "filename_test_csv", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'dataset state error!'", ")", "\n", "#", "\n", "", "self", ".", "imgnames", "=", "self", ".", "csv_file", "[", "'image_id'", "]", "\n", "if", "fine_task", ":", "# default three-category", "\n", "            ", "self", ".", "labels", "=", "self", ".", "csv_file", "[", "'label'", "]", "\n", "", "else", ":", "# binary-category", "\n", "            ", "self", ".", "labels", "=", "self", ".", "csv_file", "[", "'label_binary'", "]", "\n", "\n", "", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.SkinDataset.__getitem__": [[83, 94], ["cv2.imread", "cv2.cvtColor", "image.astype.astype.transpose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_skin.SkinDataset.transform", "res[].astype", "image.astype.astype.astype"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "self", ".", "imgnames", "[", "idx", "]", "+", "'.png'", ")", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "res", "=", "self", ".", "transform", "(", "image", "=", "image", ")", "\n", "image", "=", "res", "[", "'image'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "image", "=", "image", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.SkinDataset.__len__": [[95, 97], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.get_transforms": [[19, 39], ["albumentations.Compose", "albumentations.Compose", "albumentations.VerticalFlip", "albumentations.HorizontalFlip", "albumentations.RandomBrightness", "albumentations.OneOf", "albumentations.ShiftScaleRotate", "albumentations.Normalize", "albumentations.Normalize", "albumentations.MedianBlur", "albumentations.GaussianBlur", "albumentations.GaussNoise"], "function", ["None"], ["def", "get_transforms", "(", "image_size", ")", ":", "\n", "\n", "    ", "transforms_train", "=", "albumentations", ".", "Compose", "(", "[", "\n", "albumentations", ".", "VerticalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "albumentations", ".", "HorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "albumentations", ".", "RandomBrightness", "(", "limit", "=", "0.2", ",", "p", "=", "0.75", ")", ",", "\n", "albumentations", ".", "OneOf", "(", "[", "\n", "albumentations", ".", "MedianBlur", "(", "blur_limit", "=", "5", ")", ",", "\n", "albumentations", ".", "GaussianBlur", "(", "blur_limit", "=", "5", ")", ",", "\n", "albumentations", ".", "GaussNoise", "(", "var_limit", "=", "(", "5.0", ",", "30.0", ")", ")", ",", "\n", "]", ",", "p", "=", "0.7", ")", ",", "\n", "albumentations", ".", "ShiftScaleRotate", "(", "shift_limit", "=", "0.1", ",", "scale_limit", "=", "0.1", ",", "rotate_limit", "=", "15", ",", "border_mode", "=", "0", ",", "p", "=", "0.85", ",", "\n", ")", ",", "\n", "albumentations", ".", "Normalize", "(", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "]", ")", "\n", "\n", "transforms_test", "=", "albumentations", ".", "Compose", "(", "[", "\n", "albumentations", ".", "Normalize", "(", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "]", ")", "\n", "return", "transforms_train", ",", "transforms_test", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.prepare_data_client": [[100, 156], ["dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "dataset_skin.SkinDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataset_skin.get_transforms", "dataset_skin.get_transforms", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.get_transforms", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.dataset.dataset_skin.get_transforms"], ["", "", "def", "prepare_data_client", "(", "\n", "batch_size", "=", "32", ",", "\n", "data_dir", "=", "'./FedSkinLesion_dataset/'", ",", "\n", "fine_task", "=", "True", ",", "\n", "low_resolution", "=", "True", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    return train, valid and test dataloader list for 4 clients \n    intensity to [0,1]\n    \"\"\"", "\n", "# Prepare data", "\n", "if", "low_resolution", ":", "# default resolution is 128", "\n", "        ", "transform_train", ",", "transform_test", "=", "get_transforms", "(", "128", ")", "\n", "", "else", ":", "\n", "        ", "transform_train", ",", "transform_test", "=", "get_transforms", "(", "256", ")", "\n", "\n", "## dataset", "\n", "# A client", "\n", "", "trainset_A", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientA'", ")", ",", "state", "=", "0", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_train", ")", "\n", "validset_A", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientA'", ")", ",", "state", "=", "1", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "testset_A", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientA'", ")", ",", "state", "=", "2", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "# B client", "\n", "trainset_B", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientB'", ")", ",", "state", "=", "0", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_train", ")", "\n", "validset_B", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientB'", ")", ",", "state", "=", "1", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "testset_B", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientB'", ")", ",", "state", "=", "2", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "# C client", "\n", "trainset_C", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientC'", ")", ",", "state", "=", "0", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_train", ")", "\n", "validset_C", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientC'", ")", ",", "state", "=", "1", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "testset_C", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientC'", ")", ",", "state", "=", "2", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "# D client", "\n", "trainset_D", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientD'", ")", ",", "state", "=", "0", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_train", ")", "\n", "validset_D", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientD'", ")", ",", "state", "=", "1", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "testset_D", "=", "SkinDataset", "(", "data_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'clientD'", ")", ",", "state", "=", "2", ",", "fine_task", "=", "fine_task", ",", "low_resolution", "=", "low_resolution", ",", "transform", "=", "transform_test", ")", "\n", "\n", "## dataloader", "\n", "train_loader_A", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_A", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "valid_loader_A", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "validset_A", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "test_loader_A", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset_A", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "train_loader_B", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_B", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "valid_loader_B", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "validset_B", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "test_loader_B", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset_B", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "train_loader_C", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_C", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "valid_loader_C", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "validset_C", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "test_loader_C", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset_C", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "train_loader_D", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_D", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "valid_loader_D", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "validset_D", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "test_loader_D", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset_D", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "# construct 4 clients", "\n", "train_loaders", "=", "[", "train_loader_A", ",", "train_loader_B", ",", "train_loader_C", ",", "train_loader_D", "]", "\n", "valid_loaders", "=", "[", "valid_loader_A", ",", "valid_loader_B", ",", "valid_loader_C", ",", "valid_loader_D", "]", "\n", "test_loaders", "=", "[", "test_loader_A", ",", "test_loader_B", ",", "test_loader_C", ",", "test_loader_D", "]", "\n", "\n", "return", "train_loaders", ",", "valid_loaders", ",", "test_loaders", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked.__init__": [[36, 54], ["torch.Module.__init__", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "torch.Sequential", "torch.Sequential", "torch.Sequential", "vgg_checked.vgg_fc_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "collections.OrderedDict", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked_Biased.__init__", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_fc_layer"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", "=", "3", ")", ":", "\n", "        ", "super", "(", "VGG16_Slim_Checked", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#", "\n", "# Conv blocks (BatchNorm + ReLU activation added in each block)", "\n", "self", ".", "layer1", "=", "vgg_conv_block", "(", "[", "3", ",", "32", "]", ",", "[", "32", ",", "32", "]", ",", "[", "3", ",", "3", "]", ",", "[", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer2", "=", "vgg_conv_block", "(", "[", "32", ",", "64", "]", ",", "[", "64", ",", "64", "]", ",", "[", "3", ",", "3", "]", ",", "[", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer3", "=", "vgg_conv_block", "(", "[", "64", ",", "128", ",", "128", "]", ",", "[", "128", ",", "128", ",", "128", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer4", "=", "vgg_conv_block", "(", "[", "128", ",", "128", ",", "128", "]", ",", "[", "128", ",", "128", ",", "128", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer5", "=", "vgg_conv_block", "(", "[", "128", ",", "256", ",", "256", "]", ",", "[", "256", ",", "256", ",", "256", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "#", "\n", "self", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ")", "\n", "# FC layers", "\n", "self", ".", "fc1", "=", "vgg_fc_layer", "(", "256", ",", "64", ")", "\n", "\n", "# Final layer", "\n", "self", ".", "fc2", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'linear'", ",", "nn", ".", "Linear", "(", "64", ",", "n_classes", ",", "bias", "=", "False", ")", ")", "#no_biased", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked.forward": [[57, 73], ["vgg_checked.VGG16_Slim_Checked.layer1", "vgg_checked.VGG16_Slim_Checked.layer2", "vgg_checked.VGG16_Slim_Checked.layer3", "vgg_checked.VGG16_Slim_Checked.layer4", "vgg_checked.VGG16_Slim_Checked.avgpool", "vgg_checked.VGG16_Slim_Checked.view", "vgg_checked.VGG16_Slim_Checked.fc1", "vgg_checked.VGG16_Slim_Checked.fc2", "vgg_checked.VGG16_Slim_Checked.layer5", "vgg_checked.VGG16_Slim_Checked.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "vgg16_features", "=", "self", ".", "avgpool", "(", "\n", "self", ".", "layer5", "(", "\n", "out", "\n", ")", "\n", ")", "\n", "out", "=", "vgg16_features", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked_Biased.__init__": [[76, 94], ["torch.Module.__init__", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "vgg_checked.vgg_conv_block", "torch.Sequential", "torch.Sequential", "torch.Sequential", "vgg_checked.vgg_fc_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "collections.OrderedDict", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked_Biased.__init__", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block", "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_fc_layer"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", "=", "3", ")", ":", "\n", "        ", "super", "(", "VGG16_Slim_Checked_Biased", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#", "\n", "# Conv blocks (BatchNorm + ReLU activation added in each block)", "\n", "self", ".", "layer1", "=", "vgg_conv_block", "(", "[", "3", ",", "32", "]", ",", "[", "32", ",", "32", "]", ",", "[", "3", ",", "3", "]", ",", "[", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer2", "=", "vgg_conv_block", "(", "[", "32", ",", "64", "]", ",", "[", "64", ",", "64", "]", ",", "[", "3", ",", "3", "]", ",", "[", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer3", "=", "vgg_conv_block", "(", "[", "64", ",", "128", ",", "128", "]", ",", "[", "128", ",", "128", ",", "128", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer4", "=", "vgg_conv_block", "(", "[", "128", ",", "128", ",", "128", "]", ",", "[", "128", ",", "128", ",", "128", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "layer5", "=", "vgg_conv_block", "(", "[", "128", ",", "256", ",", "256", "]", ",", "[", "256", ",", "256", ",", "256", "]", ",", "[", "3", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "1", "]", ",", "2", ",", "2", ")", "\n", "#", "\n", "self", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ")", "\n", "# FC layers", "\n", "self", ".", "fc1", "=", "vgg_fc_layer", "(", "256", ",", "64", ")", "\n", "\n", "# Final layer", "\n", "self", ".", "fc2", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'linear'", ",", "nn", ".", "Linear", "(", "64", ",", "n_classes", ")", ")", "#### biased", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.VGG16_Slim_Checked_Biased.forward": [[97, 113], ["vgg_checked.VGG16_Slim_Checked_Biased.layer1", "vgg_checked.VGG16_Slim_Checked_Biased.layer2", "vgg_checked.VGG16_Slim_Checked_Biased.layer3", "vgg_checked.VGG16_Slim_Checked_Biased.layer4", "vgg_checked.VGG16_Slim_Checked_Biased.avgpool", "vgg_checked.VGG16_Slim_Checked_Biased.view", "vgg_checked.VGG16_Slim_Checked_Biased.fc1", "vgg_checked.VGG16_Slim_Checked_Biased.fc2", "vgg_checked.VGG16_Slim_Checked_Biased.layer5", "vgg_checked.VGG16_Slim_Checked_Biased.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "vgg16_features", "=", "self", ".", "avgpool", "(", "\n", "self", ".", "layer5", "(", "\n", "out", "\n", ")", "\n", ")", "\n", "out", "=", "vgg16_features", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.conv_layer": [[9, 18], ["torch.Sequential", "collections.OrderedDict", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["def", "conv_layer", "(", "chann_in", ",", "chann_out", ",", "k_size", ",", "p_size", ")", ":", "\n", "    ", "layer", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "chann_in", ",", "chann_out", ",", "kernel_size", "=", "k_size", ",", "padding", "=", "p_size", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "chann_out", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "]", ")", "\n", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_conv_block": [[19, 23], ["torch.Sequential", "vgg_checked.conv_layer", "torch.MaxPool2d", "range", "len"], "function", ["home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.conv_layer"], ["", "def", "vgg_conv_block", "(", "in_list", ",", "out_list", ",", "k_list", ",", "p_list", ",", "pooling_k", ",", "pooling_s", ")", ":", "\n", "    ", "block", "=", "[", "conv_layer", "(", "in_list", "[", "i", "]", ",", "out_list", "[", "i", "]", ",", "k_list", "[", "i", "]", ",", "p_list", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "in_list", ")", ")", "]", "\n", "block", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "pooling_k", ",", "stride", "=", "pooling_s", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cityu-aim-group_prr-fl.nets.vgg_checked.vgg_fc_layer": [[24, 33], ["torch.Sequential", "collections.OrderedDict", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU"], "function", ["None"], ["", "def", "vgg_fc_layer", "(", "size_in", ",", "size_out", ")", ":", "\n", "    ", "layer", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'linear'", ",", "nn", ".", "Linear", "(", "size_in", ",", "size_out", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm1d", "(", "size_out", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "]", ")", "\n", ")", "\n", "return", "layer", "\n", "\n"]]}