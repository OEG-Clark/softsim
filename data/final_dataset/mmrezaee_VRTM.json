{"home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.load_dataset": [[59, 104], ["collections.Counter().most_common", "dict", "len", "len", "len", "len", "main.load_dataset.get_data"], "function", ["None"], ["def", "load_dataset", "(", "params", ",", "frequency_limit", ")", ":", "\n", "    ", "with", "open", "(", "dir_path", "+", "\"/stop_words.txt\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "    \t", "stop_words", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", ".", "readlines", "(", ")", "if", "line", ".", "strip", "(", ")", "]", "\n", "stop_words", ".", "append", "(", "UNK", ")", "\n", "stop_words", ".", "append", "(", "EOS", ")", "\n", "", "with", "open", "(", "dir_path", "+", "data_set_dict", "[", "params", ".", "dataset", "]", "+", "'train.txt'", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "words", "=", "f", ".", "read", "(", ")", ".", "replace", "(", "\"\\n\"", ",", "\"\"", ")", ".", "split", "(", ")", "\n", "words", "=", "[", "word", ".", "lower", "(", ")", "for", "word", "in", "words", "]", "\n", "", "word_counter", "=", "collections", ".", "Counter", "(", "words", ")", ".", "most_common", "(", ")", "\n", "vocab_list", "=", "[", "]", "\n", "for", "word", ",", "frequency", "in", "word_counter", ":", "\n", "        ", "if", "frequency", ">", "frequency_limit", ":", "\n", "            ", "if", "word", "not", "in", "stop_words", ":", "\n", "                ", "vocab_list", ".", "insert", "(", "0", ",", "word", ")", "\n", "", "else", ":", "\n", "                ", "vocab_list", ".", "insert", "(", "-", "1", ",", "word", ")", "\n", "\n", "", "", "", "vocab", "=", "dict", "(", "zip", "(", "vocab_list", ",", "list", "(", "np", ".", "arange", "(", "len", "(", "vocab_list", ")", ")", ")", ")", ")", "\n", "\n", "vocab", "[", "EOS", "]", "=", "len", "(", "vocab", ")", "\n", "vocab", "[", "UNK", "]", "=", "len", "(", "vocab", ")", "\n", "\n", "vocab_wo_stop", "=", "vocab", "\n", "# vocab_wo_stop[EOS] = EOS_ID", "\n", "# vocab_wo_stop[UNK] = UNK_ID", "\n", "\n", "params", ".", "vocab_size", "=", "len", "(", "vocab", ")", "\n", "params", ".", "vocab_wo_size", "=", "len", "(", "vocab_wo_stop", ")", "\n", "def", "get_data", "(", "filename", ",", "vocab", ",", "vocab_size", ")", ":", "\n", "      ", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "data", "=", "list", "(", "map", "(", "lambda", "s", ":", "s", ".", "strip", "(", ")", ".", "split", "(", ")", ",", "lines", ")", ")", "\n", "# data=[[vocab.get(x,vocab[UNK]) for x in line if x in vocab.keys()] for line in data]      ", "\n", "data", "=", "[", "[", "vocab", ".", "get", "(", "x", ".", "lower", "(", ")", ",", "vocab", "[", "UNK", "]", ")", "for", "x", "in", "line", "]", "for", "line", "in", "data", "]", "\n", "\n", "\n", "return", "data", "\n", "\n", "", "", "train_x", "=", "get_data", "(", "dir_path", "+", "data_set_dict", "[", "params", ".", "dataset", "]", "+", "'train.txt'", ",", "vocab", ",", "params", ".", "vocab_size", ")", "\n", "valid_x", "=", "get_data", "(", "dir_path", "+", "data_set_dict", "[", "params", ".", "dataset", "]", "+", "'valid.txt'", ",", "vocab", ",", "params", ".", "vocab_size", ")", "\n", "\n", "stop_words_ids", "=", "set", "(", "[", "vocab", "[", "k", "]", "for", "k", "in", "stop_words", "if", "k", "in", "vocab", "]", ")", "\n", "train", "=", "train_x", "\n", "valid", "=", "valid_x", "\n", "return", "train", ",", "valid", ",", "vocab", ",", "stop_words_ids", ",", "vocab_wo_stop", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.iterator": [[106, 148], ["numpy.random.permutation", "range", "len", "len", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "range", "list", "target.count", "numpy.asarray", "map", "len", "len", "len"], "function", ["None"], ["", "def", "iterator", "(", "data", ",", "stop_words_ids", ",", "params", ",", "vocab_wo_stop", ",", "dropout", ",", "vocab", ",", "model", "=", "\"train\"", ")", ":", "\n", "  ", "def", "batchify", "(", ")", ":", "\n", "    ", "x", "=", "data", "\n", "batch_size", "=", "params", ".", "batch_size", "\n", "max_seqlen", "=", "params", ".", "max_seqlen", "\n", "shuffle_idx", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "x", ")", ")", "\n", "num_batches_per_epoch", "=", "len", "(", "x", ")", "//", "batch_size", "\n", "\n", "for", "i", "in", "range", "(", "num_batches_per_epoch", ")", ":", "\n", "      ", "samples", "=", "[", "x", "[", "shuffle_idx", "[", "j", "]", "]", "for", "j", "in", "range", "(", "i", "*", "batch_size", ",", "i", "*", "batch_size", "+", "batch_size", ")", "]", "\n", "samples", "=", "[", "sample", "[", ":", "max_seqlen", "-", "1", "]", "for", "sample", "in", "samples", "]", "\n", "length", "=", "[", "l", "+", "1", "for", "l", "in", "list", "(", "map", "(", "len", ",", "samples", ")", ")", "]", "\n", "# width = max(length)", "\n", "width", "=", "max_seqlen", "\n", "\n", "eos_word", "=", "[", "vocab", "[", "EOS", "]", "]", "\n", "\n", "tokens", "=", "[", "eos_word", "+", "sample", "+", "eos_word", "*", "(", "width", "-", "1", "-", "len", "(", "sample", ")", ")", "for", "sample", "in", "samples", "]", "\n", "targets", "=", "[", "sample", "+", "eos_word", "*", "(", "width", "-", "len", "(", "sample", ")", ")", "for", "sample", "in", "samples", "]", "\n", "\n", "indicators", "=", "[", "[", "1", "if", "token", "in", "stop_words_ids", "else", "0", "for", "token", "in", "sample", "]", "for", "sample", "in", "targets", "]", "\n", "indicators", "=", "[", "indicator", "+", "[", "1", "]", "*", "(", "width", "-", "len", "(", "indicator", ")", ")", "for", "indicator", "in", "indicators", "]", "\n", "\n", "feature", "=", "[", "[", "target", ".", "count", "(", "x", ")", "for", "x", "in", "target", "]", "for", "target", "in", "targets", "]", "\n", "feature", "=", "np", ".", "asarray", "(", "feature", ",", "dtype", "=", "'int32'", ")", "*", "(", "1", "-", "np", ".", "asarray", "(", "indicators", ",", "dtype", "=", "'int32'", ")", ")", "\n", "\n", "\n", "output", "=", "{", "\"tokens\"", ":", "np", ".", "asarray", "(", "tokens", ",", "dtype", "=", "'int32'", ")", ",", "\n", "\"targets\"", ":", "np", ".", "asarray", "(", "targets", ",", "dtype", "=", "'int32'", ")", ",", "\n", "\"indicators\"", ":", "np", ".", "asarray", "(", "indicators", ",", "dtype", "=", "'int32'", ")", ",", "\n", "\"length\"", ":", "np", ".", "asarray", "(", "length", ",", "dtype", "=", "'int32'", ")", ",", "\n", "\"frequency\"", ":", "np", ".", "asarray", "(", "feature", ",", "dtype", "=", "'int32'", ")", ",", "\n", "\"dropout\"", ":", "dropout", ",", "\n", "\"model\"", ":", "model", ",", "\n", "}", "\n", "\"\"\"\n      for v in output.values():\n        print(v.shape)\n      \"\"\"", "\n", "yield", "output", "\n", "\n", "", "", "return", "batchify", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.main": [[149, 204], ["parser.parse_args", "print", "main.load_dataset", "str().split", "print", "print", "print", "print", "main.iterator", "dict", "main.iterator", "str", "numpy.asarray", "tensorflow.ConfigProto", "print", "len", "len", "len", "zip", "vars", "str", "tensorflow.Session", "vrtm_model.Train", "vrtm_model.Train.build_graph", "vrtm_model.Train.run", "str", "vocab.values", "vocab.keys", "vars", "vrtm_model.Train.saver.restore", "print", "tensorflow.global_variables_initializer().run", "vars", "range", "str", "str", "tensorflow.global_variables_initializer"], "function", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.load_dataset", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.iterator", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.main.iterator", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.build_graph", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run"], ["", "def", "main", "(", ")", ":", "\n", "  ", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "'VRTM added ...'", ")", "\n", "if", "params", ".", "dataset", "==", "'imdb'", ":", "\n", "    ", "if", "params", ".", "num_topics", "==", "25", "or", "params", ".", "num_topics", "==", "20", ":", "\n", "      ", "params", ".", "batch_size", "=", "50", "\n", "", "elif", "params", ".", "num_topics", "==", "15", ":", "\n", "      ", "params", ".", "batch_size", "=", "100", "\n", "", "elif", "params", ".", "num_topics", "==", "10", ":", "\n", "      ", "params", ".", "batch_size", "=", "150", "\n", "", "elif", "params", ".", "num_topics", "==", "5", ":", "\n", "      ", "params", ".", "batch_size", "=", "300", "\n", "\n", "\n", "\n", "\n", "", "", "data_train", ",", "data_valid", ",", "vocab", ",", "stop_words_ids", ",", "vocab_wo_stop", "=", "load_dataset", "(", "params", ",", "frequency_limit", "=", "params", ".", "frequency_limit", ")", "\n", "for", "item", "in", "str", "(", "vars", "(", "params", ")", ")", ".", "split", "(", "','", ")", ":", "\n", "    ", "print", "(", "item", ")", "\n", "\n", "", "print", "(", "' ------------ Dataset ------------'", ")", "\n", "print", "(", "'train: '", ",", "len", "(", "data_train", ")", ")", "\n", "print", "(", "'valid: '", ",", "len", "(", "data_valid", ")", ")", "\n", "print", "(", "'----------------------------------'", ")", "\n", "\n", "train_num_batches", "=", "len", "(", "data_train", ")", "//", "params", ".", "batch_size", "\n", "data_train", "=", "iterator", "(", "data_train", ",", "stop_words_ids", ",", "params", ",", "vocab_wo_stop", ",", "params", ".", "dropout", ",", "vocab", ",", "model", "=", "\"Train\"", ")", "\n", "\n", "\n", "reverse_vocab", "=", "dict", "(", "zip", "(", "vocab", ".", "values", "(", ")", ",", "vocab", ".", "keys", "(", ")", ")", ")", "\n", "data_valid", "=", "iterator", "(", "data_valid", ",", "stop_words_ids", ",", "params", ",", "vocab_wo_stop", ",", "1.", ",", "vocab", ",", "model", "=", "\"Valid\"", ")", "\n", "params_str", "=", "str", "(", "vars", "(", "params", ")", ")", "\n", "\n", "params", ".", "stop_words", "=", "np", ".", "asarray", "(", "[", "1", "if", "i", "in", "stop_words_ids", "else", "0", "for", "i", "in", "range", "(", "params", ".", "vocab_size", ")", "]", ")", "\n", "params", ".", "vocab", "=", "vocab", "\n", "save_file_name", "=", "str", "(", "params", ".", "dataset", ")", "+", "'_k_'", "+", "str", "(", "params", ".", "num_topics", ")", "+", "'_prior_'", "+", "str", "(", "params", ".", "prior", ")", "\n", "\n", "save_info", "=", "[", "params_str", ",", "save_file_name", "]", "\n", "\n", "configproto", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "configproto", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "configproto", ".", "allow_soft_placement", "=", "True", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "configproto", ")", "as", "sess", ":", "\n", "# train =  vrtm_model.Train(vars(params))    ", "\n", "    ", "train", "=", "vrtm_model", ".", "Train", "(", "vars", "(", "params", ")", ")", "\n", "train", ".", "build_graph", "(", ")", "\n", "\n", "if", "params", ".", "init_from", ":", "\n", "      ", "train", ".", "saver", ".", "restore", "(", "sess", ",", "params", ".", "init_from", ")", "\n", "print", "(", "'Model restored from {0}'", ".", "format", "(", "params", ".", "init_from", ")", ")", "\n", "", "else", ":", "\n", "      ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "train", ".", "run", "(", "sess", ",", "(", "data_train", ",", "data_valid", ",", ")", ",", "train_num_batches", ",", "vocab", ",", "save_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.vsTopic.__init__": [[26, 65], ["int", "tensorflow.get_variable", "tensorflow.constant", "print", "gensim.models.KeyedVectors.load_word2vec_format", "vrtm_model.vsTopic.word2vec.vocab.keys", "vrtm_model.vsTopic.vocab.keys", "numpy.vstack", "print", "tensorflow.name_scope", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.where", "vrtm_model.vsTopic.pretrained_vecs.append", "vrtm_model.vsTopic.pretrained_vecs.append", "numpy.array", "numpy.array"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "num_units", ",", "dim_emb", ",", "vocab_size", ",", "num_topics", ",", "num_hidden", ",", "num_layers", ",", "stop_words", ",", "max_seqlen", ",", "vocab", ",", "use_word2vec", "=", "False", ",", "word2vec_path", "=", "'/scratch/mehdi/word2vec/GoogleNews-vectors-negative300.bin'", ")", ":", "\n", "    ", "self", ".", "num_units", "=", "num_units", "\n", "self", ".", "dim_emb", "=", "dim_emb", "\n", "self", ".", "num_topics", "=", "num_topics", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "vocab_size", "=", "vocab_size", "\n", "self", ".", "stop_words", "=", "stop_words", "# vocab size of 01, 1 = stop_words", "\n", "self", ".", "max_seqlen", "=", "max_seqlen", "\n", "self", ".", "non_stop_len", "=", "int", "(", "np", ".", "where", "(", "stop_words", "==", "1", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "self", ".", "theta_weight", "=", "tf", ".", "get_variable", "(", "shape", "=", "[", "self", ".", "dim_emb", ",", "self", ".", "max_seqlen", ",", "self", ".", "num_topics", "]", ",", "name", "=", "\"theta_weight\"", ")", "\n", "self", ".", "paddings", "=", "tf", ".", "constant", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "self", ".", "vocab_size", "-", "self", ".", "non_stop_len", "]", "]", ")", "\n", "self", ".", "use_word2vec", "=", "use_word2vec", "\n", "if", "self", ".", "use_word2vec", ":", "\n", "        ", "print", "(", "'Using word2vec pretrained embedding'", ")", "\n", "self", ".", "word2vec", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "word2vec_path", ",", "binary", "=", "True", ")", "\n", "self", ".", "pretrained_keys", "=", "self", ".", "word2vec", ".", "vocab", ".", "keys", "(", ")", "\n", "self", ".", "vocab_keys", "=", "self", ".", "vocab", ".", "keys", "(", ")", "\n", "self", ".", "pretrained_vecs", "=", "[", "]", "\n", "for", "key", "in", "self", ".", "vocab_keys", ":", "\n", "            ", "if", "key", "in", "self", ".", "pretrained_keys", ":", "\n", "                ", "self", ".", "pretrained_vecs", ".", "append", "(", "np", ".", "array", "(", "self", ".", "word2vec", "[", "key", "]", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "pretrained_vecs", ".", "append", "(", "np", ".", "array", "(", "[", "0", "]", "*", "self", ".", "dim_emb", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "", "", "self", ".", "pretrained_vecs", "=", "np", ".", "vstack", "(", "self", ".", "pretrained_vecs", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Training embedding from scratch'", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"beta\"", ")", ":", "\n", "      ", "''' This matrix reserves the topics '''", "\n", "self", ".", "beta", "=", "tf", ".", "get_variable", "(", "name", "=", "\"beta\"", ",", "shape", "=", "(", "[", "self", ".", "num_topics", ",", "self", ".", "vocab_size", "]", ")", ")", "\n", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"embedding\"", ")", ":", "\n", "        ", "if", "self", ".", "use_word2vec", ":", "\n", "            ", "self", ".", "embedding", "=", "tf", ".", "get_variable", "(", "\"embedding\"", ",", "initializer", "=", "self", ".", "pretrained_vecs", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embedding", "=", "tf", ".", "get_variable", "(", "\"embedding\"", ",", "shape", "=", "[", "self", ".", "vocab_size", ",", "self", ".", "dim_emb", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.vsTopic.forward": [[67, 164], ["tensorflow.to_float", "tensorflow.to_float", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.sequence_mask", "tensorflow.to_float", "tensorflow.name_scope", "tensorflow.nn.embedding_lookup", "tensorflow.nn.rnn_cell.MultiRNNCell", "tensorflow.nn.dynamic_rnn", "tensorflow.name_scope", "tensorflow.nn.softplus", "tensorflow.distributions.Dirichlet", "tensorflow.distributions.Dirichlet", "tensorflow.distributions.Dirichlet.kl_divergence", "tensorflow.reduce_mean", "tensorflow.distributions.Dirichlet.sample", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.nn.softplus", "tensorflow.nn.softplus", "tensorflow.tile", "tensorflow.losses.sparse_softmax_cross_entropy", "print", "tensorflow.name_scope", "tensorflow.squeeze", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.nn.sigmoid", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.exp", "tensorflow.name_scope", "tensorflow.expand_dims", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.argmax", "print", "print", "print", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.one_hot", "tensorflow.expand_dims", "tensorflow.nn.embedding_lookup", "tensorflow.tensordot", "tensorflow.ones_like", "tensorflow.contrib.layers.batch_norm", "tensorflow.expand_dims", "tensorflow.contrib.layers.batch_norm", "tensorflow.expand_dims", "tensorflow.losses.sparse_softmax_cross_entropy.get_shape", "tensorflow.contrib.layers.batch_norm", "tensorflow.reduce_sum", "tensorflow.to_float", "tensorflow.expand_dims", "tensorflow.squeeze", "tensorflow.reduce_sum", "tensorflow.argmax.get_shape", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.rnn_cell.DropoutWrapper", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.to_float", "tensorflow.equal", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.to_float", "tensorflow.nn.rnn_cell.GRUCell", "range", "tensorflow.nn.rnn_cell.DropoutWrapper", "tensorflow.expand_dims", "tensorflow.layers.dense", "tensorflow.round", "tensorflow.to_float", "tensorflow.reduce_sum", "tensorflow.to_float", "tensorflow.squeeze", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.log", "tensorflow.nn.rnn_cell.LSTMCell", "range", "tensorflow.nn.rnn_cell.DropoutWrapper", "tensorflow.expand_dims", "tensorflow.layers.dense", "tensorflow.nn.sigmoid", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.squeeze", "tensorflow.reduce_sum", "tensorflow.nn.rnn_cell.BasicRNNCell", "range", "tensorflow.log"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "inputs", ",", "params", ",", "mode", "=", "\"Train\"", ")", ":", "\n", "    ", "''' Stopword labels (1 or 0) '''", "\n", "stop_indicator", "=", "tf", ".", "to_float", "(", "tf", ".", "expand_dims", "(", "inputs", "[", "\"indicators\"", "]", ",", "-", "1", ")", ")", "\n", "seq_mask", "=", "tf", ".", "to_float", "(", "tf", ".", "sequence_mask", "(", "inputs", "[", "\"length\"", "]", ",", "self", ".", "max_seqlen", ")", ")", "\n", "''' one-hot representation for targets '''", "\n", "target_to_onehot", "=", "tf", ".", "expand_dims", "(", "tf", ".", "to_float", "(", "tf", ".", "one_hot", "(", "inputs", "[", "\"targets\"", "]", ",", "self", ".", "vocab_size", ")", ")", ",", "2", ")", "\n", "\n", "'''RNN Cell'''", "\n", "with", "tf", ".", "name_scope", "(", "\"RNN_CELL\"", ")", ":", "\n", "      ", "emb", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding", ",", "inputs", "[", "\"tokens\"", "]", ")", "\n", "if", "params", "[", "\"rnn_model\"", "]", "==", "'GRU'", ":", "\n", "        ", "cells", "=", "[", "tf", ".", "nn", ".", "rnn_cell", ".", "DropoutWrapper", "(", "tf", ".", "nn", ".", "rnn_cell", ".", "GRUCell", "(", "self", ".", "num_units", ")", ")", "for", "_", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "", "elif", "params", "[", "\"rnn_model\"", "]", "==", "'LSTM'", ":", "\n", "        ", "cells", "=", "[", "tf", ".", "nn", ".", "rnn_cell", ".", "DropoutWrapper", "(", "tf", ".", "nn", ".", "rnn_cell", ".", "LSTMCell", "(", "self", ".", "num_units", ")", ",", "output_keep_prob", "=", "inputs", "[", "\"dropout\"", "]", ")", "for", "_", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "", "elif", "params", "[", "\"rnn_model\"", "]", "==", "'basicRNN'", ":", "\n", "        ", "cells", "=", "[", "tf", ".", "nn", ".", "rnn_cell", ".", "DropoutWrapper", "(", "tf", ".", "nn", ".", "rnn_cell", ".", "BasicRNNCell", "(", "self", ".", "num_units", ")", ",", "output_keep_prob", "=", "inputs", "[", "\"dropout\"", "]", ")", "for", "_", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "\n", "", "cell", "=", "tf", ".", "nn", ".", "rnn_cell", ".", "MultiRNNCell", "(", "cells", ")", "\n", "rnn_outputs", ",", "final_output", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "cell", ",", "inputs", "=", "emb", ",", "sequence_length", "=", "inputs", "[", "\"length\"", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "", "''' Sampling theta q(theta|w;alpha)'''", "\n", "with", "tf", ".", "name_scope", "(", "\"theta\"", ")", ":", "\n", "        ", "emb_wo", "=", "tf", ".", "expand_dims", "(", "inputs", "[", "\"frequency\"", "]", ",", "-", "1", ")", "*", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding", ",", "inputs", "[", "\"targets\"", "]", ")", "\n", "alpha", "=", "tf", ".", "nn", ".", "softplus", "(", "tf", ".", "tensordot", "(", "emb_wo", ",", "self", ".", "theta_weight", ",", "[", "[", "1", ",", "2", "]", ",", "[", "0", ",", "1", "]", "]", ")", ")", "\n", "gamma", "=", "params", "[", "\"prior\"", "]", "*", "tf", ".", "ones_like", "(", "alpha", ")", "\n", "pst_dist", "=", "tf", ".", "distributions", ".", "Dirichlet", "(", "alpha", ")", "\n", "pri_dist", "=", "tf", ".", "distributions", ".", "Dirichlet", "(", "gamma", ")", "\n", "'''kl_divergence for theta'''", "\n", "theta_kl_loss", "=", "pst_dist", ".", "kl_divergence", "(", "pri_dist", ")", "\n", "theta_kl_loss", "=", "tf", ".", "reduce_mean", "(", "theta_kl_loss", ",", "-", "1", ")", "\n", "self", ".", "theta", "=", "pst_dist", ".", "sample", "(", ")", "\n", "\n", "", "''' Phi Matrix '''", "\n", "with", "tf", ".", "name_scope", "(", "\"Phi\"", ")", ":", "\n", "      ", "self", ".", "phi", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "tf", ".", "layers", ".", "dense", "(", "emb_wo", ",", "self", ".", "num_topics", ")", ",", "-", "1", ")", ")", "\n", "self", ".", "phi", "=", "(", "(", "1", "-", "stop_indicator", ")", "*", "self", ".", "phi", ")", "+", "(", "(", "stop_indicator", ")", "*", "(", "1.", "/", "self", ".", "num_topics", ")", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"token_loss\"", ")", ":", "\n", "      ", "self", ".", "h_to_vocab", "=", "tf", ".", "nn", ".", "softplus", "(", "tf", ".", "expand_dims", "(", "tf", ".", "layers", ".", "dense", "(", "rnn_outputs", ",", "units", "=", "self", ".", "vocab_size", ",", "use_bias", "=", "False", ",", "name", "=", "'h_to_vocab'", ")", ",", "2", ")", ")", "\n", "self", ".", "b_to_vocab", "=", "tf", ".", "nn", ".", "softplus", "(", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "self", ".", "beta", ")", ")", "\n", "self", ".", "token_all_logits", "=", "self", ".", "h_to_vocab", "+", "(", "(", "1", "-", "tf", ".", "expand_dims", "(", "stop_indicator", ",", "-", "1", ")", ")", "*", "self", ".", "b_to_vocab", ")", "\n", "labels", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "inputs", "[", "'targets'", "]", ",", "-", "1", ")", ",", "[", "1", ",", "1", ",", "self", ".", "num_topics", "]", ")", "\n", "token_loss", "=", "tf", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "labels", "=", "labels", ",", "logits", "=", "self", ".", "token_all_logits", ",", "weights", "=", "(", "1.", "/", "params", "[", "'batch_size'", "]", ")", "*", "tf", ".", "expand_dims", "(", "seq_mask", ",", "-", "1", ")", "*", "self", ".", "phi", ",", "reduction", "=", "tf", ".", "losses", ".", "Reduction", ".", "SUM", ")", "\n", "print", "(", "'token_loss_before_mask: '", ",", "token_loss", ".", "get_shape", "(", ")", ")", "\n", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"indicator_loss\"", ")", ":", "\n", "      ", "self", ".", "indicator_logits", "=", "tf", ".", "squeeze", "(", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "tf", ".", "layers", ".", "dense", "(", "tf", ".", "layers", ".", "dense", "(", "tf", ".", "layers", ".", "dense", "(", "rnn_outputs", ",", "units", "=", "300", ",", "activation", "=", "tf", ".", "nn", ".", "softplus", ")", ",", "units", "=", "50", ",", "activation", "=", "tf", ".", "nn", ".", "softplus", ")", ",", "units", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "softplus", ")", ")", ",", "axis", "=", "2", ")", "\n", "indicator_loss", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "tf", ".", "to_float", "(", "inputs", "[", "\"indicators\"", "]", ")", ",", "logits", "=", "self", ".", "indicator_logits", ",", "name", "=", "\"indicator_loss\"", ")", "\n", "indicator_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "seq_mask", "*", "indicator_loss", ",", "-", "1", ")", ")", "\n", "indicator_acc", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "to_float", "(", "tf", ".", "equal", "(", "tf", ".", "round", "(", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "indicator_logits", ")", ")", ",", "tf", ".", "to_float", "(", "inputs", "[", "\"indicators\"", "]", ")", ")", ")", ",", "-", "1", ")", "\n", "indicator_acc", "=", "tf", ".", "reduce_mean", "(", "indicator_acc", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Perplexity\"", ")", ":", "\n", "        ", "self", ".", "token_ppx_non_prob", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "h_to_vocab", "+", "self", ".", "b_to_vocab", ",", "-", "1", ")", "\n", "self", ".", "stop_prob", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "indicator_logits", ")", "\n", "self", ".", "h_part", "=", "tf", ".", "expand_dims", "(", "self", ".", "stop_prob", ",", "-", "1", ")", "*", "tf", ".", "squeeze", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "h_to_vocab", ",", "-", "1", ")", ",", "2", ")", "\n", "self", ".", "theta_part", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "1", "-", "self", ".", "stop_prob", ",", "-", "1", ")", "*", "tf", ".", "expand_dims", "(", "self", ".", "theta", ",", "1", ")", ",", "-", "1", ")", "*", "self", ".", "token_ppx_non_prob", ",", "2", ")", "\n", "token_ppl_log", "=", "tf", ".", "log", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "squeeze", "(", "target_to_onehot", ",", "2", ")", "*", "(", "self", ".", "h_part", "+", "self", ".", "theta_part", ")", ",", "-", "1", ")", "+", "1e-10", ")", "\n", "token_ppl", "=", "tf", ".", "exp", "(", "-", "tf", ".", "reduce_sum", "(", "seq_mask", "*", "token_ppl_log", ")", "/", "(", "1e-10", "+", "tf", ".", "to_float", "(", "tf", ".", "reduce_sum", "(", "inputs", "[", "\"length\"", "]", ")", ")", ")", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Phi_theta_kl\"", ")", ":", "\n", "      ", "theta", "=", "tf", ".", "expand_dims", "(", "self", ".", "theta", ",", "1", ")", "\n", "phi_theta_kl_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "squeeze", "(", "1", "-", "stop_indicator", ",", "-", "1", ")", "*", "tf", ".", "reduce_sum", "(", "(", "1", "-", "stop_indicator", ")", "*", "self", ".", "phi", "*", "tf", ".", "log", "(", "(", "(", "(", "1", "-", "stop_indicator", ")", "*", "self", ".", "phi", ")", "/", "(", "theta", "+", "1e-10", ")", ")", "+", "1e-10", ")", ",", "-", "1", ")", ",", "-", "1", ")", ")", "\n", "\n", "", "total_loss", "=", "token_loss", "+", "theta_kl_loss", "+", "indicator_loss", "+", "phi_theta_kl_loss", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"SwitchP\"", ")", ":", "\n", "      ", "all_topics", "=", "tf", ".", "argmax", "(", "self", ".", "phi", ",", "-", "1", ")", "\n", "print", "(", "'-'", "*", "100", ")", "\n", "print", "(", "'all_topics'", ",", "all_topics", ".", "get_shape", "(", ")", ")", "\n", "print", "(", "'-'", "*", "100", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Entropies\"", ")", ":", "\n", "      ", "''' Checking the entropy of parameters '''", "\n", "phi_entropy", "=", "tf", ".", "reduce_sum", "(", "-", "(", "1", "-", "stop_indicator", ")", "*", "self", ".", "phi", "*", "tf", ".", "log", "(", "self", ".", "phi", "+", "1e-10", ")", ")", "/", "tf", ".", "reduce_sum", "(", "tf", ".", "to_float", "(", "1", "-", "inputs", "[", "\"indicators\"", "]", ")", ")", "\n", "theta_entropy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "-", "self", ".", "theta", "*", "tf", ".", "log", "(", "self", ".", "theta", "+", "1e-10", ")", ",", "-", "1", ")", ")", "\n", "\n", "\n", "", "outputs", "=", "{", "\n", "\"token_loss\"", ":", "token_loss", ",", "\n", "\"token_ppl\"", ":", "token_ppl", ",", "\n", "\"indicator_loss\"", ":", "indicator_loss", ",", "\n", "\"theta_kl_loss\"", ":", "theta_kl_loss", ",", "\n", "\"phi_theta_kl_loss\"", ":", "phi_theta_kl_loss", ",", "\n", "\"loss\"", ":", "total_loss", ",", "\n", "\"theta\"", ":", "self", ".", "theta", ",", "\n", "\"repre\"", ":", "final_output", "[", "-", "1", "]", "[", "1", "]", ",", "\n", "\"beta\"", ":", "self", ".", "beta", ",", "\n", "\"all_topics\"", ":", "all_topics", ",", "\n", "\"non_stop_indic\"", ":", "1", "-", "inputs", "[", "\"indicators\"", "]", ",", "\n", "\"phi\"", ":", "self", ".", "phi", ",", "\n", "\"accuracy\"", ":", "indicator_acc", ",", "\n", "\"theta_entropy\"", ":", "theta_entropy", ",", "\n", "\"phi_entropy\"", ":", "phi_entropy", "\n", "}", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.vsTopic.textGenerate": [[165, 169], ["tensorflow.distributions.Categorical().sample", "tensorflow.distributions.Categorical"], "methods", ["None"], ["", "def", "textGenerate", "(", "self", ")", ":", "\n", "# self.theta_part=tf.reduce_sum(tf.expand_dims(tf.expand_dims(1-self.stop_prob,-1)*tf.expand_dims(theta_gen,1),-1)*self.token_ppx_non_prob,2)", "\n", "      ", "pred_next_token_theta", "=", "dist", ".", "Categorical", "(", "probs", "=", "self", ".", "h_part", "+", "self", ".", "theta_part", ")", ".", "sample", "(", ")", "\n", "return", "pred_next_token_theta", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.__init__": [[175, 177], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train._create_placeholder": [[178, 188], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["", "def", "_create_placeholder", "(", "self", ")", ":", "\n", "    ", "self", ".", "inputs", "=", "{", "\n", "\"tokens\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "self", ".", "params", "[", "\"max_seqlen\"", "]", "]", ",", "name", "=", "\"tokens\"", ")", ",", "\n", "\"indicators\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "self", ".", "params", "[", "\"max_seqlen\"", "]", "]", ",", "name", "=", "\"indicators\"", ")", ",", "\n", "\"length\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "\"length\"", ")", ",", "\n", "\"frequency\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "params", "[", "\"max_seqlen\"", "]", "]", ",", "name", "=", "\"frequency\"", ")", ",", "\n", "\"targets\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "self", ".", "params", "[", "\"max_seqlen\"", "]", "]", ",", "name", "=", "\"targets\"", ")", ",", "\n", "\"dropout\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "None", ",", "name", "=", "\"dropout\"", ")", ",", "\n", "\"learn_rate\"", ":", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "]", ",", "name", "=", "\"learning_rate\"", ")", ",", "\n", "\"model\"", ":", "\" \"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.build_graph": [[190, 223], ["vrtm_model.Train._create_placeholder", "tensorflow.get_variable", "tensorflow.RunOptions", "vrtm_model.vsTopic", "tensorflow.trainable_variables", "print", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.train.Saver", "tensorflow.variable_scope", "vrtm_model.Train.model.forward", "print", "tensorflow.trainable_variables", "tensorflow.clip_by_value", "zip", "tensorflow.global_variables", "tensorflow.constant_initializer", "tensorflow.trainable_variables"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train._create_placeholder", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.vsTopic.forward"], ["", "def", "build_graph", "(", "self", ")", ":", "\n", "    ", "self", ".", "_create_placeholder", "(", ")", "\n", "self", ".", "global_step", "=", "tf", ".", "get_variable", "(", "'global_step'", ",", "[", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0", ")", ",", "trainable", "=", "False", ")", "\n", "self", ".", "run_opts", "=", "tf", ".", "RunOptions", "(", "report_tensor_allocations_upon_oom", "=", "True", ")", "\n", "\n", "# with tf.device('/cpu:0'):", "\n", "self", ".", "model", "=", "vsTopic", "(", "num_units", "=", "self", ".", "params", "[", "\"num_units\"", "]", ",", "\n", "dim_emb", "=", "self", ".", "params", "[", "\"dim_emb\"", "]", ",", "\n", "vocab_size", "=", "self", ".", "params", "[", "\"vocab_size\"", "]", ",", "\n", "num_topics", "=", "self", ".", "params", "[", "\"num_topics\"", "]", ",", "\n", "num_layers", "=", "self", ".", "params", "[", "\"num_layers\"", "]", ",", "\n", "num_hidden", "=", "self", ".", "params", "[", "\"num_hidden\"", "]", ",", "\n", "stop_words", "=", "self", ".", "params", "[", "\"stop_words\"", "]", ",", "\n", "max_seqlen", "=", "self", ".", "params", "[", "\"max_seqlen\"", "]", ",", "\n", "vocab", "=", "self", ".", "params", "[", "\"vocab\"", "]", ",", "\n", "use_word2vec", "=", "self", ".", "params", "[", "\"use_word2vec\"", "]", ",", "\n", ")", "\n", "\n", "# train output", "\n", "with", "tf", ".", "variable_scope", "(", "'VSTM'", ")", ":", "\n", "      ", "self", ".", "outputs_train", "=", "self", ".", "model", ".", "forward", "(", "self", ".", "inputs", ",", "self", ".", "params", ",", "mode", "=", "\"Train\"", ")", "\n", "self", ".", "outputs_test", "=", "self", ".", "outputs_train", "#same here", "\n", "\n", "\n", "", "for", "item", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "      ", "print", "(", "item", ")", "\n", "", "print", "(", "'-'", "*", "100", ")", "\n", "grads", "=", "tf", ".", "gradients", "(", "self", ".", "outputs_train", "[", "\"loss\"", "]", ",", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "grads", "=", "[", "tf", ".", "clip_by_value", "(", "g", ",", "-", "10.0", ",", "10.0", ")", "for", "g", "in", "grads", "]", "\n", "grads", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "grads", ",", "20.0", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "inputs", "[", "\"learn_rate\"", "]", ")", "\n", "self", ".", "train_op", "=", "optimizer", ".", "apply_gradients", "(", "zip", "(", "grads", ",", "tf", ".", "trainable_variables", "(", ")", ")", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "global_variables", "(", ")", ",", "max_to_keep", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.batch_train": [[224, 233], ["list", "sess.run", "vrtm_model.Train.outputs_train.keys", "range", "len", "vrtm_model.Train.inputs.keys"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run"], ["", "def", "batch_train", "(", "self", ",", "sess", ",", "inputs", ")", ":", "\n", "    ", "keys", "=", "list", "(", "self", ".", "outputs_train", ".", "keys", "(", ")", ")", "\n", "outputs", "=", "[", "self", ".", "outputs_train", "[", "key", "]", "for", "key", "in", "keys", "]", "\n", "self", ".", "inputs", "[", "\"model\"", "]", "=", "inputs", "[", "\"model\"", "]", "\n", "outputs", "=", "sess", ".", "run", "(", "[", "self", ".", "train_op", ",", "self", ".", "global_step", "]", "+", "outputs", ",", "feed_dict", "=", "{", "self", ".", "inputs", "[", "k", "]", ":", "inputs", "[", "k", "]", "for", "k", "in", "self", ".", "inputs", ".", "keys", "(", ")", "if", "k", "!=", "\"model\"", "}", ",", "options", "=", "self", ".", "run_opts", ")", "\n", "ret", "=", "{", "keys", "[", "i", "]", ":", "outputs", "[", "i", "+", "2", "]", "for", "i", "in", "range", "(", "len", "(", "keys", ")", ")", "}", "\n", "ret", "[", "\"global_step\"", "]", "=", "outputs", "[", "1", "]", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.batch_test": [[234, 239], ["list", "sess.run", "vrtm_model.Train.outputs_test.keys", "range", "len", "vrtm_model.Train.inputs.keys"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run"], ["", "def", "batch_test", "(", "self", ",", "sess", ",", "inputs", ")", ":", "\n", "    ", "keys", "=", "list", "(", "self", ".", "outputs_test", ".", "keys", "(", ")", ")", "\n", "outputs", "=", "[", "self", ".", "outputs_test", "[", "key", "]", "for", "key", "in", "keys", "]", "\n", "outputs", "=", "sess", ".", "run", "(", "outputs", ",", "feed_dict", "=", "{", "self", ".", "inputs", "[", "k", "]", ":", "inputs", "[", "k", "]", "for", "k", "in", "self", ".", "inputs", ".", "keys", "(", ")", "if", "k", "!=", "\"model\"", "}", ")", "\n", "return", "{", "keys", "[", "i", "]", ":", "outputs", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "keys", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.freq_calc": [[240, 243], ["sample_input.tolist", "sample_input_list[].count"], "methods", ["None"], ["", "def", "freq_calc", "(", "self", ",", "sample_input", ")", ":", "\n", "    ", "sample_input_list", "=", "sample_input", ".", "tolist", "(", ")", "\n", "return", "(", "[", "[", "sample_input_list", "[", "0", "]", ".", "count", "(", "word", ")", "*", "(", "1", "-", "self", ".", "params", "[", "\"stop_words\"", "]", "[", "word", "]", ")", "for", "word", "in", "sample_input_list", "[", "0", "]", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.test_textGen": [[244, 263], ["numpy.array", "vrtm_model.Train.freq_calc", "range", "sess.run", "vrtm_model.Train.freq_calc", "vrtm_model.Train.model.textGenerate", "numpy.append().reshape", "[].reshape", "range", "range", "numpy.append"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.freq_calc", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.freq_calc", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.vsTopic.textGenerate"], ["", "def", "test_textGen", "(", "self", ",", "sess", ")", ":", "\n", "    ", "sample_input_list", "=", "[", "[", "self", ".", "vocab", "[", "'<EOS>'", "]", "for", "_", "in", "range", "(", "self", ".", "params", "[", "\"max_seqlen\"", "]", ")", "]", "]", "\n", "sample_input", "=", "np", ".", "array", "(", "sample_input_list", ")", "\n", "sample_input_total", "=", "sample_input", "\n", "sample_frequency", "=", "self", ".", "freq_calc", "(", "sample_input", ")", "\n", "seq_len", "=", "self", ".", "params", "[", "\"generate_len\"", "]", "\n", "for", "k", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "feed_dict_text", "=", "{", "self", ".", "inputs", "[", "\"tokens\"", "]", ":", "sample_input", ",", "self", ".", "inputs", "[", "\"targets\"", "]", ":", "sample_input", ",", "self", ".", "inputs", "[", "\"frequency\"", "]", ":", "sample_frequency", ",", "self", ".", "inputs", "[", "\"length\"", "]", ":", "[", "k", "+", "1", "]", ",", "self", ".", "inputs", "[", "'dropout'", "]", ":", "1.0", "}", "\n", "generated_idx", "=", "sess", ".", "run", "(", "self", ".", "model", ".", "textGenerate", "(", ")", ",", "feed_dict", "=", "feed_dict_text", ")", "\n", "revised_text", "=", "\" \"", ".", "join", "(", "[", "self", ".", "reverse_vocab", "[", "sample_input_total", "[", "0", "]", "[", "idx", "]", "]", "for", "idx", "in", "range", "(", "k", "+", "1", ")", "]", ")", "\n", "generated_text", "=", "\" \"", ".", "join", "(", "[", "self", ".", "reverse_vocab", "[", "item", "]", "for", "item", "in", "generated_idx", "[", "0", "]", "]", ")", "\n", "if", "k", "<", "self", ".", "params", "[", "\"max_seqlen\"", "]", "-", "1", ":", "\n", "        ", "sample_input", "[", "0", "]", "[", "k", "+", "1", "]", "=", "generated_idx", "[", "0", "]", "[", "k", "]", "\n", "sample_input_total", "=", "sample_input", "\n", "", "else", ":", "\n", "        ", "sample_input_total", "=", "np", ".", "append", "(", "sample_input_total", ",", "generated_idx", "[", "0", "]", "[", "-", "1", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "sample_input", "=", "sample_input_total", "[", "0", "]", "[", "-", "self", ".", "params", "[", "\"max_seqlen\"", "]", ":", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "", "sample_frequency", "=", "self", ".", "freq_calc", "(", "sample_input", ")", "\n", "", "return", "revised_text", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run_epoch": [[265, 410], ["dict", "tqdm", "tqdm.tqdm", "tqdm.tqdm", "tqdm.tqdm.tqdm", "print", "dataset_dev", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "print", "print", "print", "print", "zip", "numpy.mean", "range", "next", "vrtm_model.Train.batch_train", "numpy.mean.append", "numpy.mean.append", "numpy.mean.append", "numpy.mean.append", "numpy.mean.append", "train_theta.append", "train_repre.append", "numpy.mean.append", "numpy.mean.append", "numpy.mean.append", "numpy.mean.append", "vrtm_model.Train.run_epoch.switch_calc"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.batch_train"], ["", "def", "run_epoch", "(", "self", ",", "sess", ",", "datasets", ",", "train_num_batches", ",", "vocab", ",", "epoch_num", ")", ":", "\n", "    ", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "reverse_vocab", "=", "dict", "(", "zip", "(", "vocab", ".", "values", "(", ")", ",", "vocab", ".", "keys", "(", ")", ")", ")", "\n", "\n", "decay_epoch", "=", "self", ".", "params", "[", "\"decay_epoch\"", "]", "\n", "if", "epoch_num", "%", "decay_epoch", "==", "0", "and", "epoch_num", ">", "(", "decay_epoch", "-", "1", ")", ":", "\n", "      ", "self", ".", "params", "[", "\"learning_rate\"", "]", "*=", "0.4", "\n", "\n", "", "def", "switch_calc", "(", "topics_all", ",", "topics_non_idx", ")", ":", "\n", "      ", "non_topics", "=", "[", "[", "item", "[", "0", "]", "[", "item", "[", "1", "]", ">", "0", "]", "for", "item", "in", "list", "(", "zip", "(", "topics_all", ",", "topics_non_idx", ")", ")", "]", "]", "[", "0", "]", "\n", "topics_roll", "=", "[", "np", ".", "roll", "(", "item", ",", "shift", "=", "-", "1", ")", "for", "item", "in", "non_topics", "]", "\n", "next_compare", "=", "[", "x", "==", "y", "for", "(", "x", ",", "y", ")", "in", "zip", "(", "non_topics", ",", "topics_roll", ")", "]", "\n", "next_compare", "=", "[", "item", "[", ":", "-", "1", "]", "for", "item", "in", "next_compare", "]", "\n", "Switch_P", "=", "np", ".", "mean", "(", "[", "np", ".", "mean", "(", "item", ")", "for", "item", "in", "next_compare", "]", ")", "\n", "return", "Switch_P", "\n", "\n", "", "train_ppl", "=", "[", "]", "\n", "valid_ppl", "=", "[", "]", "\n", "\n", "\n", "train_token", ",", "train_indic", ",", "train_theta_kl", ",", "train_phi_theta", ",", "train_switch", ",", "train_acc", ",", "train_theta_ent", ",", "train_phi_ent", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "valid_token", ",", "valid_indic", ",", "valid_theta_kl", ",", "valid_phi_theta", ",", "valid_switch", ",", "valid_acc", ",", "valid_theta_ent", ",", "valid_phi_ent", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "train_loss", ",", "valid_loss", "=", "[", "]", ",", "[", "]", "\n", "train_theta", ",", "valid_theta", "=", "[", "]", ",", "[", "]", "\n", "train_repre", ",", "valid_repre", "=", "[", "]", ",", "[", "]", "\n", "\n", "dataset_train", ",", "dataset_dev", "=", "datasets", "\n", "# print('dataset_train_len',len(dataset_train))", "\n", "pbar", "=", "tqdm", "(", "range", "(", "train_num_batches", ")", ")", "\n", "for", "_", "in", "pbar", ":", "\n", "      ", "batch", "=", "next", "(", "dataset_train", "(", ")", ")", "\n", "batch", "[", "'learn_rate'", "]", "=", "self", ".", "params", "[", "\"learning_rate\"", "]", "\n", "train_outputs", "=", "self", ".", "batch_train", "(", "sess", ",", "batch", ")", "\n", "train_loss", ".", "append", "(", "train_outputs", "[", "\"loss\"", "]", ")", "\n", "train_phi_theta", ".", "append", "(", "train_outputs", "[", "\"phi_theta_kl_loss\"", "]", ")", "\n", "train_theta_kl", ".", "append", "(", "train_outputs", "[", "\"theta_kl_loss\"", "]", ")", "\n", "train_indic", ".", "append", "(", "train_outputs", "[", "\"indicator_loss\"", "]", ")", "\n", "train_token", ".", "append", "(", "train_outputs", "[", "\"token_loss\"", "]", ")", "\n", "train_theta", ".", "append", "(", "train_outputs", "[", "\"theta\"", "]", ")", "\n", "train_repre", ".", "append", "(", "train_outputs", "[", "\"repre\"", "]", ")", "\n", "train_ppl", ".", "append", "(", "train_outputs", "[", "\"token_ppl\"", "]", ")", "\n", "train_acc", ".", "append", "(", "train_outputs", "[", "\"accuracy\"", "]", ")", "\n", "train_theta_ent", ".", "append", "(", "train_outputs", "[", "\"theta_entropy\"", "]", ")", "\n", "train_phi_ent", ".", "append", "(", "train_outputs", "[", "\"phi_entropy\"", "]", ")", "\n", "\n", "\n", "\n", "beta", "=", "train_outputs", "[", "\"beta\"", "]", "\n", "theta", "=", "train_outputs", "[", "\"theta\"", "]", "\n", "\n", "topics_all", "=", "train_outputs", "[", "\"all_topics\"", "]", "\n", "topics_non_idx", "=", "train_outputs", "[", "\"non_stop_indic\"", "]", "\n", "\n", "\n", "train_mini_switch", "=", "switch_calc", "(", "topics_all", ",", "topics_non_idx", ")", "\n", "if", "not", "np", ".", "isnan", "(", "train_mini_switch", ")", ":", "\n", "        ", "train_switch", ".", "append", "(", "train_mini_switch", ")", "\n", "\n", "\n", "", "pbar", ".", "set_description", "(", "\"token: %.2f, theta_kl: %.2f, indic: %.2f, phi_theta: %.2f, ppx: %.4f, theta_ent: %.2f, phi_ent: %.2f\"", "%", "(", "train_outputs", "[", "\"token_loss\"", "]", ",", "train_outputs", "[", "\"theta_kl_loss\"", "]", ",", "train_outputs", "[", "\"indicator_loss\"", "]", ",", "train_outputs", "[", "\"phi_theta_kl_loss\"", "]", ",", "train_outputs", "[", "\"token_ppl\"", "]", ",", "train_outputs", "[", "\"theta_entropy\"", "]", ",", "train_outputs", "[", "\"phi_entropy\"", "]", ")", ")", "\n", "\n", "\n", "# self.writer.add_summary(train_outputs[\"summary\"], train_outputs[\"global_step\"])", "\n", "\n", "", "self", ".", "non_topics", "=", "[", "]", "\n", "self", ".", "original_text", "=", "[", "]", "\n", "print", "(", "'epoch_num: '", ",", "epoch_num", ")", "\n", "if", "epoch_num", "==", "(", "self", ".", "params", "[", "\"num_epochs\"", "]", "-", "1", ")", ":", "\n", "      ", "self", ".", "non_topics", "=", "[", "[", "(", "[", "self", ".", "reverse_vocab", "[", "word", "]", "for", "word", "in", "item", "[", "2", "]", "[", "item", "[", "1", "]", ">", "0", "]", "]", ",", "item", "[", "0", "]", "[", "item", "[", "1", "]", ">", "0", "]", ")", "for", "item", "in", "list", "(", "zip", "(", "topics_all", "[", "5", ":", "40", "]", ",", "topics_non_idx", "[", "5", ":", "40", "]", ",", "batch", "[", "\"targets\"", "]", "[", "5", ":", "40", "]", ")", ")", "]", "]", "[", "0", "]", "\n", "self", ".", "original_text", "=", "[", "\" \"", ".", "join", "(", "[", "self", ".", "reverse_vocab", "[", "word", "]", "for", "word", "in", "sentence", "]", ")", "for", "sentence", "in", "batch", "[", "\"targets\"", "]", "[", "5", ":", "40", "]", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "non_topics", ")", ")", ":", "\n", "# print(self.non_topics[k])", "\n", "        ", "print", "(", "list", "(", "zip", "(", "self", ".", "non_topics", "[", "k", "]", "[", "0", "]", ",", "self", ".", "non_topics", "[", "k", "]", "[", "1", "]", ")", ")", ")", "\n", "print", "(", "self", ".", "original_text", "[", "k", "]", ")", "\n", "print", "(", "'-'", "*", "50", ")", "\n", "\n", "\n", "", "", "for", "batch", "in", "dataset_dev", "(", ")", ":", "\n", "      ", "batch", "[", "'learn_rate'", "]", "=", "0.0", "\n", "valid_outputs", "=", "self", ".", "batch_test", "(", "sess", ",", "batch", ")", "\n", "valid_loss", ".", "append", "(", "valid_outputs", "[", "\"loss\"", "]", ")", "\n", "valid_theta_kl", ".", "append", "(", "valid_outputs", "[", "\"theta_kl_loss\"", "]", ")", "\n", "valid_phi_theta", ".", "append", "(", "valid_outputs", "[", "\"phi_theta_kl_loss\"", "]", ")", "\n", "valid_indic", ".", "append", "(", "valid_outputs", "[", "\"indicator_loss\"", "]", ")", "\n", "valid_token", ".", "append", "(", "valid_outputs", "[", "\"token_loss\"", "]", ")", "\n", "valid_theta", ".", "append", "(", "valid_outputs", "[", "\"theta\"", "]", ")", "\n", "valid_repre", ".", "append", "(", "valid_outputs", "[", "\"repre\"", "]", ")", "\n", "valid_ppl", ".", "append", "(", "valid_outputs", "[", "\"token_ppl\"", "]", ")", "\n", "valid_acc", ".", "append", "(", "valid_outputs", "[", "\"accuracy\"", "]", ")", "\n", "valid_theta_ent", ".", "append", "(", "valid_outputs", "[", "\"theta_entropy\"", "]", ")", "\n", "valid_phi_ent", ".", "append", "(", "valid_outputs", "[", "\"phi_entropy\"", "]", ")", "\n", "args_dict_valid", "=", "{", "'valid_loss'", ":", "valid_loss", "[", "-", "1", "]", ",", "'valid_ppl'", ":", "valid_ppl", "[", "-", "1", "]", ",", "'valid_theta_ent'", ":", "valid_theta_ent", "[", "-", "1", "]", "}", "\n", "\n", "valid_topics_all", "=", "valid_outputs", "[", "\"all_topics\"", "]", "\n", "valid_topics_non_idx", "=", "valid_outputs", "[", "\"non_stop_indic\"", "]", "\n", "valid_mini_switch", "=", "switch_calc", "(", "valid_topics_all", ",", "valid_topics_non_idx", ")", "\n", "if", "not", "np", ".", "isnan", "(", "valid_mini_switch", ")", ":", "\n", "        ", "valid_switch", ".", "append", "(", "valid_mini_switch", ")", "\n", "\n", "", "", "self", ".", "sample_text", "=", "[", "]", "\n", "if", "epoch_num", "==", "(", "self", ".", "params", "[", "\"num_epochs\"", "]", "-", "1", ")", ":", "\n", "      ", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "        ", "self", ".", "sample_text", ".", "append", "(", "[", "self", ".", "test_textGen", "(", "sess", ")", "]", ")", "\n", "print", "(", "self", ".", "sample_text", "[", "-", "1", "]", ")", "\n", "\n", "\n", "\n", "\n", "", "", "train_loss", "=", "np", ".", "mean", "(", "train_loss", ")", "\n", "train_token", "=", "np", ".", "mean", "(", "train_token", ")", "\n", "train_indic", "=", "np", ".", "mean", "(", "train_indic", ")", "\n", "train_theta_kl", "=", "np", ".", "mean", "(", "train_theta_kl", ")", "\n", "train_phi_theta", "=", "np", ".", "mean", "(", "train_phi_theta", ")", "\n", "train_switch", "=", "np", ".", "mean", "(", "train_switch", ")", "\n", "train_ppl", "=", "np", ".", "mean", "(", "train_ppl", ")", "\n", "train_acc", "=", "np", ".", "mean", "(", "train_acc", ")", "\n", "train_theta_ent", "=", "np", ".", "mean", "(", "train_theta_ent", ")", "\n", "train_phi_ent", "=", "np", ".", "mean", "(", "train_phi_ent", ")", "\n", "\n", "valid_loss", "=", "np", ".", "mean", "(", "valid_loss", ")", "\n", "valid_token", "=", "np", ".", "mean", "(", "valid_token", ")", "\n", "valid_theta_kl", "=", "np", ".", "mean", "(", "valid_theta_kl", ")", "\n", "valid_phi_theta", "=", "np", ".", "mean", "(", "valid_phi_theta", ")", "\n", "valid_indic", "=", "np", ".", "mean", "(", "valid_indic", ")", "\n", "valid_switch", "=", "np", ".", "mean", "(", "valid_switch", ")", "\n", "valid_ppl", "=", "np", ".", "mean", "(", "valid_ppl", ")", "\n", "valid_acc", "=", "np", ".", "mean", "(", "valid_acc", ")", "\n", "valid_theta_ent", "=", "np", ".", "mean", "(", "valid_theta_ent", ")", "\n", "valid_phi_ent", "=", "np", ".", "mean", "(", "valid_phi_ent", ")", "\n", "\n", "\n", "\n", "train_theta", ",", "valid_theta", "=", "np", ".", "vstack", "(", "train_theta", ")", ",", "np", ".", "vstack", "(", "valid_theta", ")", "\n", "train_repre", ",", "valid_repre", "=", "np", ".", "vstack", "(", "train_repre", ")", ",", "np", ".", "vstack", "(", "valid_repre", ")", "\n", "train_res", "=", "{", "\"train_loss\"", ":", "train_loss", ",", "\"train_token\"", ":", "train_token", ",", "\"train_indic\"", ":", "train_indic", ",", "\"train_theta_kl\"", ":", "train_theta_kl", ",", "\"train_phi_theta\"", ":", "train_phi_theta", ",", "\"train_ppl\"", ":", "train_ppl", ",", "\"train_acc\"", ":", "train_acc", ",", "\"train_theta_ent\"", ":", "train_theta_ent", ",", "\"train_phi_ent\"", ":", "train_phi_ent", "}", "\n", "valid_res", "=", "{", "\"valid_loss\"", ":", "valid_loss", ",", "\"valid_token\"", ":", "valid_token", ",", "\"valid_indic\"", ":", "valid_indic", ",", "\"valid_theta_kl\"", ":", "valid_theta_kl", ",", "\"valid_phi_theta\"", ":", "valid_phi_theta", ",", "\"valid_ppl\"", ":", "valid_ppl", ",", "\"valid_switch\"", ":", "valid_switch", ",", "\"valid_acc\"", ":", "valid_acc", ",", "\"valid_theta_ent\"", ":", "valid_theta_ent", ",", "\"valid_phi_ent\"", ":", "valid_phi_ent", "}", "\n", "\n", "\n", "print", "(", "'\\n'", ")", "\n", "print", "(", "\"train ==> loss: {:.4f}, token: {:.4f}, indic: {:.4f} , kl: {:.4f}, phi_theta: {:.4f}, swth:{:.4f}, ppl: {:.4f}, thet_ent: {:.4f}, phi_ent: {:.4f}, acc: {:.4f}, lr: {:.8f}\"", ".", "format", "(", "train_loss", ",", "train_token", ",", "train_indic", ",", "train_theta_kl", ",", "train_phi_theta", ",", "train_switch", ",", "train_ppl", ",", "train_theta_ent", ",", "train_phi_ent", ",", "train_acc", ",", "self", ".", "params", "[", "\"learning_rate\"", "]", ")", ")", "\n", "print", "(", "\"valid ==> loss: {:.4f}, token: {:.4f}, indic: {:.4f} , kl: {:.4f}, phi_theta: {:.4f}, swth:{:.4f}, ppl: {:.4f}, thet_ent: {:.4f}, phi_ent: {:.4f}, acc: {:.4f}\"", ".", "format", "(", "valid_loss", ",", "valid_token", ",", "valid_indic", ",", "valid_theta_kl", ",", "valid_phi_theta", ",", "valid_switch", ",", "valid_ppl", ",", "valid_theta_ent", ",", "valid_phi_ent", ",", "valid_acc", ")", ")", "\n", "print", "(", "'\\n'", ")", "\n", "\n", "return", "train_res", ",", "valid_res", ",", "beta", ",", "self", ".", "sample_text", ",", "self", ".", "non_topics", ",", "self", ".", "original_text", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run": [[411, 434], ["print", "range", "os.path.dirname", "vrtm_model.Train.run_epoch", "os.path.realpath", "open", "pickle.dump", "train_dict[].append", "valid_dict[].append", "vrtm_model.print_top_words", "os.path.join", "list", "zip", "sorted", "vocab.items"], "methods", ["home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.Train.run_epoch", "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.print_top_words"], ["", "def", "run", "(", "self", ",", "sess", ",", "datasets", ",", "train_num_batches", ",", "vocab", ",", "save_info", ")", ":", "\n", "    ", "experiment_name", "=", "'{}_rnn_{}_dataset_{}_topics_{}_emb'", ".", "format", "(", "self", ".", "params", "[", "'rnn_model'", "]", ",", "self", ".", "params", "[", "'dataset'", "]", ",", "self", ".", "params", "[", "'num_topics'", "]", ",", "self", ".", "params", "[", "'dim_emb'", "]", ")", "\n", "print", "(", "'experiment_name: {}'", ".", "format", "(", "experiment_name", ")", ")", "\n", "\n", "best_valid_loss", "=", "1e10", "\n", "train_dict", "=", "{", "\"train_loss\"", ":", "[", "]", ",", "\"train_token\"", ":", "[", "]", ",", "\"train_indic\"", ":", "[", "]", ",", "\"train_theta_kl\"", ":", "[", "]", ",", "\"train_phi_theta\"", ":", "[", "]", ",", "\"train_acc\"", ":", "[", "]", ",", "\"train_theta_ent\"", ":", "[", "]", ",", "\"train_phi_ent\"", ":", "[", "]", "}", "\n", "valid_dict", "=", "{", "\"valid_loss\"", ":", "[", "]", ",", "\"valid_token\"", ":", "[", "]", ",", "\"valid_indic\"", ":", "[", "]", ",", "\"valid_theta_kl\"", ":", "[", "]", ",", "\"valid_phi_theta\"", ":", "[", "]", ",", "\"valid_ppl\"", ":", "[", "]", ",", "\"valid_switch\"", ":", "[", "]", ",", "\"valid_acc\"", ":", "[", "]", ",", "\"valid_theta_ent\"", ":", "[", "]", ",", "\"valid_phi_ent\"", ":", "[", "]", "}", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "params", "[", "\"num_epochs\"", "]", ")", ":", "\n", "      ", "train_res", ",", "valid_res", ",", "beta", ",", "output_text", ",", "non_topics", ",", "original_text", "=", "self", ".", "run_epoch", "(", "sess", ",", "datasets", ",", "train_num_batches", ",", "vocab", ",", "i", ")", "\n", "for", "key", "in", "train_dict", ":", "\n", "        ", "train_dict", "[", "key", "]", ".", "append", "(", "train_res", "[", "key", "]", ")", "\n", "", "for", "key", "in", "valid_dict", ":", "\n", "        ", "valid_dict", "[", "key", "]", ".", "append", "(", "valid_res", "[", "key", "]", ")", "\n", "", "if", "i", "%", "4", "==", "0", ":", "\n", "        ", "beta_list", ",", "beta_values", "=", "print_top_words", "(", "beta", ",", "list", "(", "zip", "(", "*", "sorted", "(", "vocab", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", ")", ")", "[", "0", "]", ",", "name_beta", "=", "\"\"", ")", "\n", "", "", "dir_path", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", "+", "\"/\"", "+", "self", ".", "params", "[", "\"save_dir\"", "]", ",", "save_info", "[", "1", "]", "+", "\".pkl\"", ")", ",", "\"wb\"", ")", "as", "f", ":", "\n", "      ", "beta_dict", "=", "{", "\"beta_names\"", ":", "beta_list", ",", "\"beta_values\"", ":", "beta_values", "}", "\n", "generated", "=", "{", "\"gen_text\"", ":", "output_text", "}", "\n", "assigned_topics", "=", "{", "\"non_topics\"", ":", "non_topics", "}", "\n", "original_text", "=", "{", "\"original_text\"", ":", "original_text", "}", "\n", "pkl", ".", "dump", "(", "[", "train_dict", ",", "valid_dict", ",", "beta_list", ",", "save_info", "[", "0", "]", ",", "beta_dict", ",", "generated", ",", "assigned_topics", ",", "original_text", "]", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mmrezaee_VRTM.None.vrtm_model.print_top_words": [[13, 23], ["print", "range", "print", "len", "beta_values.append", "beta_list.append", "print", "str", "beta[].argsort", "beta[].argsort", "beta[].argsort"], "function", ["None"], ["def", "print_top_words", "(", "beta", ",", "feature_names", ",", "n_top_words", "=", "20", ",", "name_beta", "=", "\" \"", ")", ":", "\n", "  ", "beta_list", "=", "[", "]", "\n", "beta_values", "=", "[", "]", "\n", "print", "(", "'---------------Printing the Topics------------------'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "beta", ")", ")", ":", "\n", "    ", "beta_values", ".", "append", "(", "\" \"", ".", "join", "(", "[", "\" \"", ".", "join", "(", "[", "feature_names", "[", "j", "]", ",", "':'", ",", "str", "(", "beta", "[", "i", "]", "[", "j", "]", ")", ",", "', '", "]", ")", "for", "j", "in", "beta", "[", "i", "]", ".", "argsort", "(", ")", "[", ":", "-", "n_top_words", "-", "1", ":", "-", "1", "]", "]", ")", ")", "\n", "beta_list", ".", "append", "(", "\" \"", ".", "join", "(", "[", "feature_names", "[", "j", "]", "for", "j", "in", "beta", "[", "i", "]", ".", "argsort", "(", ")", "[", ":", "-", "n_top_words", "-", "1", ":", "-", "1", "]", "]", ")", ")", "\n", "print", "(", "i", ",", "\": \"", ",", "\" \"", ".", "join", "(", "[", "feature_names", "[", "j", "]", "for", "j", "in", "beta", "[", "i", "]", ".", "argsort", "(", ")", "[", ":", "-", "n_top_words", "-", "1", ":", "-", "1", "]", "]", ")", ")", "\n", "", "print", "(", "'---------------End of Topics------------------'", ")", "\n", "return", "(", "beta_list", ",", "beta_values", ")", "\n", "\n"]]}