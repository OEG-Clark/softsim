{"home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Encoder_hot": [[4, 29], ["int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.flatten", "tensorflow.fully_connected", "tensorflow.nn.softmax", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["def", "Encoder_hot", "(", "images", ",", "image_size", ",", "hot_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Encoder_hot'", ")", ":", "\n", "# image_size = 32", "\n", "    ", "init_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d", "(", "images", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv1'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv2'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 128]", "\n", "mid", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "mid", ",", "256", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, image_size/8, image_size/8, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "init_size", ",", "init_size", "]", ",", "padding", "=", "'VALID'", ",", "scope", "=", "'conv4'", ")", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn4'", ")", "\n", "fmap", "=", "slim", ".", "flatten", "(", "net", ")", "# [batch_size, 128]", "\n", "logits", "=", "slim", ".", "fully_connected", "(", "fmap", ",", "hot_size", ",", "activation_fn", "=", "None", ",", "scope", "=", "'logits'", ")", "\n", "# [batch_size, hot_size]", "\n", "hot_code", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", ",", "name", "=", "'hot_code'", ")", "\n", "# hot_code = tf.nn.sigmoid(logits)", "\n", "return", "mid", ",", "logits", ",", "hot_code", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Encoder_calm": [[30, 49], ["tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.flatten", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "", "def", "Encoder_calm", "(", "mid", ",", "calm_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Encoder_calm'", ")", ":", "\n", "# mid_size = 8", "\n", "    ", "final_size", "=", "4", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d", "(", "mid", ",", "256", ",", "[", "1", ",", "1", "]", ",", "stride", "=", "1", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, mid_size, mid_size, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv4'", ")", "\n", "# [batch_size, mid_size/2, mid_size/2, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn4'", ")", "\n", "calm_code", "=", "slim", ".", "conv2d", "(", "net", ",", "calm_size", ",", "[", "final_size", ",", "final_size", "]", ",", "\n", "padding", "=", "'VALID'", ",", "scope", "=", "'conv5'", ")", "\n", "# [batch_size, 1, 1, calm_size]", "\n", "calm_code", "=", "slim", ".", "flatten", "(", "calm_code", ")", "# [batch_size, calm_size]", "\n", "return", "calm_code", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Decoder_hot": [[50, 69], ["int", "tensorflow.fully_connected", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "", "def", "Decoder_hot", "(", "hot_code", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_hot'", ")", ":", "\n", "    ", "init_size", "=", "int", "(", "image_size", "/", "4", ")", "\n", "# hot_code = tf.log(hot_code)  # [batch_size, hot_size]", "\n", "hot_code", "=", "slim", ".", "fully_connected", "(", "hot_code", ",", "128", ",", "activation_fn", "=", "None", ")", "# [batch_size, 128]", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "hot_code", ",", "1", ")", "# [batch_size, 1, 128]", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "inputs", ",", "1", ",", "name", "=", "'inputs'", ")", "# [batch_size, 1, 1, 128]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "64", ",", "[", "init_size", ",", "init_size", "]", ",", "padding", "=", "'VALID'", ",", "\n", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "32", ",", "[", "3", ",", "3", "]", ",", "padding", "=", "'SAME'", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Decoder_calm": [[70, 89], ["int", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "", "def", "Decoder_calm", "(", "calm_code", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_calm'", ")", ":", "\n", "    ", "mid_size", "=", "int", "(", "image_size", "/", "2", ")", "\n", "batch_size", "=", "100", "\n", "inputs", "=", "slim", ".", "fully_connected", "(", "calm_code", ",", "mid_size", "*", "mid_size", "*", "16", ",", "activation_fn", "=", "None", ")", "\n", "# [batch_size, mid_size*mid_size*16]", "\n", "inputs", "=", "tf", ".", "reshape", "(", "inputs", ",", "[", "batch_size", ",", "mid_size", ",", "mid_size", ",", "16", "]", ")", "\n", "# [batch_size, mid_size, mid_size, 16]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "1", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "32", ",", "[", "1", ",", "1", "]", ",", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, mid_size, mid_size, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "32", ",", "[", "2", ",", "2", "]", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, mid_size, mid_size, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Decoder_image": [[90, 104], ["tensorflow.concat", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "", "def", "Decoder_image", "(", "mid_hot", ",", "mid_calm", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_image'", ")", ":", "\n", "    ", "inputs", "=", "tf", ".", "concat", "(", "[", "mid_hot", ",", "mid_calm", "]", ",", "axis", "=", "3", ")", "# [batch_size, mid_size, mid_size, 64]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "32", ",", "[", "3", ",", "3", "]", ",", "stride", "=", "2", ",", "scope", "=", "'conv_t3'", ")", "\n", "# [batch_size, image_size, image_size, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "[", "1", ",", "1", "]", ",", "activation_fn", "=", "tf", ".", "tanh", ",", "stride", "=", "1", ",", "\n", "scope", "=", "'conv_t4'", ")", "\n", "# [batch_size, image_size, image_size, 3]", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Decoder_ctnn_shallow": [[105, 130], ["tensorflow.expand_dims", "tensorflow.expand_dims", "int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "", "def", "Decoder_ctnn_shallow", "(", "latent_code", ",", "image_size", ",", "code_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "\n", "name", "=", "'Decoder_cnnt_shallow'", ")", ":", "\n", "# latent_code: [batch_size, code_size]", "\n", "    ", "inputs", "=", "tf", ".", "expand_dims", "(", "latent_code", ",", "1", ")", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "inputs", ",", "1", ",", "name", "=", "'inputs'", ")", "# [batch_size, 1, 1, code_size]", "\n", "init_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "128", ",", "[", "init_size", ",", "init_size", "]", ",", "\n", "padding", "=", "'VALID'", ",", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, init_size, init_size, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "256", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, 2*init_size, 2*init_size, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv_t3'", ")", "\n", "# [batch_size, 4*init_szie, 4*init_size, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "[", "3", ",", "3", "]", ",", "activation_fn", "=", "tf", ".", "nn", ".", "tanh", ",", "\n", "scope", "=", "'conv_t4'", ")", "\n", "# [batch_size, image_size, image_size, 3]", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Discriminator_lc_fn": [[131, 140], ["tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["None"], ["", "", "", "", "def", "Discriminator_lc_fn", "(", "latent_code", ",", "code_size", ",", "reuse", "=", "False", ",", "name", "=", "'Discriminator_lc_fn'", ")", ":", "\n", "# latent_code: [batch_size, code_size]", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ")", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "latent_code", ",", "256", ",", "scope", "=", "'fn1'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "64", ",", "scope", "=", "'fn2'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "16", ",", "scope", "=", "'fn3'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ",", "scope", "=", "'logits'", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.nets.Discriminator_image_cnn": [[141, 164], ["int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.flatten", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "", "", "def", "Discriminator_image_cnn", "(", "images", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "\n", "name", "=", "'Discriminator_image_cnn'", ")", ":", "\n", "# images: [batch_size, image_size, image_size, 3]", "\n", "    ", "final_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d", "(", "images", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv1'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv2'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, image_size/8, image_size/8, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "1", ",", "[", "final_size", ",", "final_size", "]", ",", "padding", "=", "'VALID'", ",", "scope", "=", "'conv4'", ")", "\n", "# [batch_size, 1, 1, 1]", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ",", "scope", "=", "'logits'", ")", "\n", "# [batch_size, 1]", "\n", "return", "net", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_mnsit.resize_images": [[8, 21], ["numpy.zeros", "enumerate", "PIL.Image.fromarray", "Image.fromarray.resize", "numpy.zeros"], "function", ["None"], ["def", "resize_images", "(", "image_arrays", ",", "size", "=", "[", "32", ",", "32", "]", ")", ":", "\n", "# convert float type to integer", "\n", "    ", "image_arrays", "=", "(", "image_arrays", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "resized_image_arrays", "=", "np", ".", "zeros", "(", "[", "image_arrays", ".", "shape", "[", "0", "]", "]", "+", "size", "+", "[", "3", "]", ")", "\n", "for", "i", ",", "image_array", "in", "enumerate", "(", "image_arrays", ")", ":", "\n", "        ", "image", "=", "Image", ".", "fromarray", "(", "image_array", ")", "\n", "resized_image", "=", "image", ".", "resize", "(", "size", "=", "size", ",", "resample", "=", "Image", ".", "ANTIALIAS", ")", "\n", "final_image", "=", "np", ".", "zeros", "(", "size", "+", "[", "3", "]", ")", "\n", "final_image", "[", ":", ",", ":", ",", "0", "]", "=", "final_image", "[", ":", ",", ":", ",", "1", "]", "=", "final_image", "[", ":", ",", ":", ",", "2", "]", "=", "resized_image", "\n", "resized_image_arrays", "[", "i", "]", "=", "final_image", "\n", "\n", "", "return", "resized_image_arrays", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_mnsit.resize_cover_images": [[22, 32], ["numpy.zeros"], "function", ["None"], ["", "def", "resize_cover_images", "(", "image_arrays", ",", "size", "=", "[", "32", ",", "32", "]", ")", ":", "\n", "    ", "ori_size", "=", "image_arrays", ".", "shape", "[", "1", "]", "\n", "new_size", "=", "size", "[", "0", "]", "\n", "s", "=", "(", "new_size", "-", "ori_size", ")", "//", "2", "\n", "image_arrays", "=", "(", "image_arrays", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "resized_image_arrays", "=", "np", ".", "zeros", "(", "[", "image_arrays", ".", "shape", "[", "0", "]", "]", "+", "size", "+", "[", "3", "]", ")", "\n", "resized_image_arrays", "[", ":", ",", "s", ":", "s", "+", "ori_size", ",", "s", ":", "s", "+", "ori_size", ",", "0", "]", "=", "resized_image_arrays", "[", ":", ",", "s", ":", "s", "+", "ori_size", ",", "s", ":", "s", "+", "ori_size", ",", "1", "]", "=", "resized_image_arrays", "[", ":", ",", "s", ":", "s", "+", "ori_size", ",", "s", ":", "s", "+", "ori_size", ",", "2", "]", "=", "image_arrays", "\n", "return", "resized_image_arrays", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_mnsit.save_pickle": [[33, 37], ["open", "pickle.dump", "print"], "function", ["None"], ["", "def", "save_pickle", "(", "data", ",", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "data", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "print", "(", "'Saved %s..'", "%", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_mnsit.main": [[38, 55], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "list", "np.array.extend", "numpy.array", "list", "np.array.extend", "numpy.array", "preprocess_mnsit.save_pickle", "preprocess_mnsit.save_pickle", "list", "list", "preprocess_mnsit.resize_images", "preprocess_mnsit.resize_images", "np.array.reshape", "test_x.reshape"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_images"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'MNIST_data'", ")", "\n", "train_x", "=", "list", "(", "mnist", ".", "train", ".", "images", ")", "\n", "train_x", ".", "extend", "(", "list", "(", "mnist", ".", "validation", ".", "images", ")", ")", "\n", "train_x", "=", "np", ".", "array", "(", "train_x", ")", "\n", "train_y", "=", "list", "(", "mnist", ".", "train", ".", "labels", ")", "\n", "train_y", ".", "extend", "(", "list", "(", "mnist", ".", "validation", ".", "labels", ")", ")", "\n", "train_y", "=", "np", ".", "array", "(", "train_y", ")", "\n", "test_x", "=", "mnist", ".", "test", ".", "images", "\n", "test_y", "=", "mnist", ".", "test", ".", "labels", "\n", "train", "=", "{", "'X'", ":", "resize_images", "(", "train_x", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ")", ")", ",", "\n", "'y'", ":", "train_y", "}", "\n", "test", "=", "{", "'X'", ":", "resize_images", "(", "test_x", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ")", ")", ",", "\n", "'y'", ":", "test_y", "}", "\n", "\n", "save_pickle", "(", "train", ",", "r'F:\\mnist\\train.pkl'", ")", "\n", "save_pickle", "(", "test", ",", "r'F:\\mnist\\test.pkl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_images": [[15, 28], ["numpy.zeros", "enumerate", "PIL.Image.fromarray", "Image.fromarray.resize", "numpy.zeros", "numpy.asarray"], "function", ["None"], ["def", "resize_images", "(", "image_arrays", ",", "size", "=", "[", "32", ",", "32", "]", ")", ":", "\n", "# convert float type to integer", "\n", "    ", "image_arrays", "=", "(", "image_arrays", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "resized_image_arrays", "=", "np", ".", "zeros", "(", "[", "image_arrays", ".", "shape", "[", "0", "]", "]", "+", "size", "+", "[", "3", "]", ")", "\n", "for", "i", ",", "image_array", "in", "enumerate", "(", "image_arrays", ")", ":", "\n", "        ", "image", "=", "Image", ".", "fromarray", "(", "image_array", ")", "\n", "resized_image", "=", "image", ".", "resize", "(", "size", "=", "size", ",", "resample", "=", "Image", ".", "ANTIALIAS", ")", "\n", "final_image", "=", "np", ".", "zeros", "(", "size", "+", "[", "3", "]", ")", "\n", "final_image", "[", ":", ",", ":", ",", "0", "]", "=", "final_image", "[", ":", ",", ":", ",", "1", "]", "=", "final_image", "[", ":", ",", ":", ",", "2", "]", "=", "resized_image", "\n", "resized_image_arrays", "[", "i", "]", "=", "np", ".", "asarray", "(", "final_image", ")", "\n", "\n", "", "return", "resized_image_arrays", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_cover_images": [[29, 39], ["numpy.ones"], "function", ["None"], ["", "def", "resize_cover_images", "(", "image_arrays", ",", "size", "=", "[", "22", ",", "22", "]", ")", ":", "\n", "# image_arrays = (image_arrays * 255).astype('uint8')", "\n", "    ", "ori_size", "=", "image_arrays", ".", "shape", "[", "1", "]", "\n", "new_size", "=", "size", "[", "0", "]", "\n", "s", "=", "(", "new_size", "-", "ori_size", ")", "//", "2", "\n", "resized_image_arrays", "=", "np", ".", "ones", "(", "[", "image_arrays", ".", "shape", "[", "0", "]", "]", "+", "size", ")", "*", "-", "1", "\n", "resized_image_arrays", "[", ":", ",", "s", ":", "s", "+", "ori_size", ",", "s", ":", "s", "+", "ori_size", "]", "=", "image_arrays", "\n", "resized_image_arrays", "=", "(", "resized_image_arrays", "+", "1", ")", "/", "2", "\n", "# resized_image_arrays = (resized_image_arrays*255).astype('unit8')", "\n", "return", "resized_image_arrays", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.save_pickle": [[40, 44], ["open", "pickle.dump", "print"], "function", ["None"], ["", "def", "save_pickle", "(", "data", ",", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "data", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "print", "(", "'Saved %s..'", "%", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.main": [[45, 60], ["sklearn.datasets.load_svmlight_file", "sklearn.datasets.load_svmlight_file", "numpy.array", "numpy.array", "preprocess_usps.save_pickle", "preprocess_usps.save_pickle", "np.array.todense", "np.array.todense", "preprocess_usps.resize_images", "numpy.array", "preprocess_usps.resize_images", "numpy.array", "preprocess_usps.resize_cover_images", "preprocess_usps.resize_cover_images", "np.array.reshape", "np.array.reshape"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_cover_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_usps.resize_cover_images"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "train_path", "=", "r'F:\\digit-data\\usps\\usps_train'", "\n", "test_path", "=", "r'F:\\digit-data\\usps\\usps_test'", "\n", "train_x", ",", "train_y", "=", "ds", ".", "load_svmlight_file", "(", "train_path", ")", "\n", "test_x", ",", "test_y", "=", "ds", ".", "load_svmlight_file", "(", "test_path", ")", "\n", "train_x", "=", "np", ".", "array", "(", "train_x", ".", "todense", "(", ")", ")", "\n", "test_x", "=", "np", ".", "array", "(", "test_x", ".", "todense", "(", ")", ")", "\n", "train", "=", "{", "'X'", ":", "resize_images", "(", "resize_cover_images", "(", "train_x", ".", "reshape", "(", "-", "1", ",", "16", ",", "16", ")", ")", ")", ",", "\n", "'y'", ":", "np", ".", "array", "(", "[", "y", "-", "1", "for", "y", "in", "train_y", "]", ")", "}", "\n", "\n", "test", "=", "{", "'X'", ":", "resize_images", "(", "resize_cover_images", "(", "test_x", ".", "reshape", "(", "-", "1", ",", "16", ",", "16", ")", ")", ")", ",", "\n", "'y'", ":", "np", ".", "array", "(", "[", "y", "-", "1", "for", "y", "in", "test_y", "]", ")", "}", "\n", "\n", "save_pickle", "(", "train", ",", "r'F:\\digit-data\\usps_1\\train.pkl'", ")", "\n", "save_pickle", "(", "test", ",", "r'F:\\digit-data\\usps_1\\test.pkl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle": [[5, 9], ["open", "pickle.dump", "print"], "function", ["None"], ["def", "save_pickle", "(", "data", ",", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "data", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "print", "(", "'Saved %s..'", "%", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.main": [[10, 26], ["scipy.io.loadmat", "scipy.io.loadmat", "numpy.transpose", "numpy.transpose", "train_data[].reshape", "test_data[].reshape", "preprocess_svhn.save_pickle", "preprocess_svhn.save_pickle", "numpy.where", "numpy.where"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.preprocess_svhn.save_pickle"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "train_data", "=", "scipy", ".", "io", ".", "loadmat", "(", "r'F:\\svhn\\extra_32x32'", ")", "\n", "test_data", "=", "scipy", ".", "io", ".", "loadmat", "(", "r'F:\\svhn\\test_32x32'", ")", "\n", "train_x", "=", "np", ".", "transpose", "(", "train_data", "[", "'X'", "]", ",", "[", "3", ",", "0", ",", "1", ",", "2", "]", ")", "\n", "test_x", "=", "np", ".", "transpose", "(", "test_data", "[", "'X'", "]", ",", "[", "3", ",", "0", ",", "1", ",", "2", "]", ")", "\n", "train_y", "=", "train_data", "[", "'y'", "]", ".", "reshape", "(", "-", "1", ")", "\n", "train_y", "[", "np", ".", "where", "(", "train_y", "==", "10", ")", "]", "=", "0", "\n", "test_y", "=", "test_data", "[", "'y'", "]", ".", "reshape", "(", "-", "1", ")", "\n", "test_y", "[", "np", ".", "where", "(", "test_y", "==", "10", ")", "]", "=", "0", "\n", "train", "=", "{", "'X'", ":", "train_x", ",", "\n", "'y'", ":", "train_y", "}", "\n", "test", "=", "{", "'X'", ":", "test_x", ",", "\n", "'y'", ":", "test_y", "}", "\n", "\n", "save_pickle", "(", "train", ",", "r'F:\\svhn\\train.pkl'", ")", "\n", "save_pickle", "(", "test", ",", "r'F:\\svhn\\test.pkl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.domain_adaptation.load_data": [[12, 22], ["os.path.join", "print", "print", "open", "pickle.load"], "function", ["None"], ["def", "load_data", "(", "image_dir", ",", "mode", "=", "'train'", ")", ":", "\n", "    ", "image_file", "=", "'train.pkl'", "if", "mode", "==", "'train'", "else", "'test.pkl'", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_file", ")", "\n", "print", "(", "'loading data: %s ...'", "%", "image_dir", ")", "\n", "with", "open", "(", "image_dir", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "images", "=", "data", "[", "'X'", "]", "/", "127.5", "-", "1", "\n", "labels", "=", "data", "[", "'y'", "]", "\n", "print", "(", "'finished loading data: %s!'", "%", "image_dir", ")", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.domain_adaptation.merge_images": [[24, 35], ["int", "numpy.zeros", "enumerate", "numpy.sqrt", "zip"], "function", ["None"], ["", "def", "merge_images", "(", "batch_size", ",", "sources", ",", "targets", ",", "k", "=", "10", ")", ":", "\n", "    ", "_", ",", "h", ",", "w", ",", "_", "=", "sources", ".", "shape", "\n", "row", "=", "int", "(", "np", ".", "sqrt", "(", "batch_size", ")", ")", "\n", "merged", "=", "np", ".", "zeros", "(", "[", "row", "*", "h", ",", "row", "*", "w", "*", "2", ",", "3", "]", ")", "\n", "\n", "for", "idx", ",", "(", "s", ",", "t", ")", "in", "enumerate", "(", "zip", "(", "sources", ",", "targets", ")", ")", ":", "\n", "        ", "i", "=", "idx", "//", "row", "\n", "j", "=", "idx", "%", "row", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", ")", "*", "h", ":", "(", "j", "*", "2", "+", "1", ")", "*", "h", ",", ":", "]", "=", "s", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", "+", "1", ")", "*", "h", ":", "(", "j", "*", "2", "+", "2", ")", "*", "h", ",", ":", "]", "=", "t", "\n", "", "return", "merged", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.domain_adaptation.train": [[37, 294], ["model.Model", "model.Model.build", "tensorflow.ConfigProto", "tensorflow.gfile.Exists", "tensorflow.gfile.MakeDirs", "domain_adaptation.load_data", "domain_adaptation.load_data", "domain_adaptation.load_data", "domain_adaptation.load_data", "range", "numpy.array", "numpy.array", "range", "tensorflow.gfile.DeleteRecursively", "numpy.random.shuffle", "numpy.random.shuffle", "np.array.extend", "np.array.extend", "range", "tensorflow.Session", "open", "tensorflow.global_variables_initializer().run", "tensorflow.summary.FileWriter", "tensorflow.train.Saver", "print", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.array", "numpy.mean", "open.write", "print", "tf.summary.FileWriter.close", "open.close", "list", "list", "list.extend", "time.time", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.add_summary", "print", "time.time", "int", "sess.run", "numpy.argmax", "np.array.extend", "numpy.zeros", "sess.run", "numpy.argmax", "np.array.extend", "numpy.where", "numpy.where", "tensorflow.global_variables_initializer", "tensorflow.get_default_graph", "int", "list", "numpy.random.shuffle", "int", "list", "numpy.random.shuffle", "sess.run", "sess.run", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.array", "numpy.array", "print", "numpy.random.randint", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "sess.run", "sess.run", "sess.run", "tf.train.Saver.save", "print", "numpy.array", "numpy.array", "numpy.zeros", "range", "numpy.random.randint", "sess.run", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "domain_adaptation.merge_images", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "list", "list", "list", "range", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.array", "numpy.array", "print", "int", "sess.run", "numpy.max", "numpy.argmax", "numpy.where", "trg_train_images_su_next.extend", "trg_train_labels_su_next.extend", "int", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.random.randn", "numpy.random.randn", "list", "range", "len", "len", "int", "sess.run", "numpy.max", "numpy.argmax", "numpy.where", "trg_train_images_su_next.extend", "trg_train_labels_su_next.extend", "range", "numpy.random.randint", "list", "list", "list", "list", "list", "list", "len", "len", "len", "range", "numpy.random.randint", "numpy.random.randn", "numpy.random.randn", "time.time", "len", "len", "math.exp", "math.exp"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.build", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images"], ["", "def", "train", "(", "image_size", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ",", "batch_size", ",", "\n", "train_iters", ",", "src_dir", ",", "trg_dir", ",", "log_dir", ",", "model_dir", ",", "sample_dir", ",", "pre_steps", "=", "2000", ",", "\n", "boost", "=", "False", ",", "init_threshold", "=", "0.85", ",", "scale", "=", "10000", ")", ":", "\n", "    ", "m", "=", "Model", "(", "image_size", "=", "image_size", ",", "hot_size", "=", "hot_size", ",", "calm_size_src", "=", "calm_size_src", ",", "\n", "calm_size_trg", "=", "calm_size_trg", ",", "learning_rate", "=", "learning_rate", ")", "\n", "m", ".", "build", "(", "is_training", "=", "True", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "0.1", ",", "beta2", "=", "0.1", ",", "\n", "beta3", "=", "0.1", ",", "gamma1", "=", "2.0", ",", "gamma2", "=", "0.15", ",", "lambda1", "=", "5.0", ",", "lambda2", "=", "0.5", ",", "eta1", "=", "0.3", ",", "eta2", "=", "0.3", ")", "\n", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n", "if", "tf", ".", "gfile", ".", "Exists", "(", "log_dir", ")", ":", "\n", "        ", "tf", ".", "gfile", ".", "DeleteRecursively", "(", "log_dir", ")", "\n", "", "tf", ".", "gfile", ".", "MakeDirs", "(", "log_dir", ")", "\n", "\n", "src_train_images_su", ",", "src_train_labels_su", "=", "load_data", "(", "src_dir", ",", "mode", "=", "'train'", ")", "\n", "trg_train_images_un", ",", "_", "=", "load_data", "(", "trg_dir", ",", "mode", "=", "'train'", ")", "\n", "src_test_images", ",", "src_test_labels", "=", "load_data", "(", "src_dir", ",", "mode", "=", "'test'", ")", "\n", "trg_test_images", ",", "trg_test_labels", "=", "load_data", "(", "trg_dir", ",", "mode", "=", "'test'", ")", "\n", "\n", "src_samples", "=", "[", "]", "\n", "trg_samples", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "cur_src_images", "=", "src_test_images", "[", "np", ".", "where", "(", "src_test_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_src_images", ")", "\n", "cur_trg_images", "=", "trg_test_images", "[", "np", ".", "where", "(", "trg_test_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_trg_images", ")", "\n", "src_samples", ".", "extend", "(", "list", "(", "cur_src_images", "[", "0", ":", "100", "]", ")", ")", "\n", "trg_samples", ".", "extend", "(", "list", "(", "cur_trg_images", "[", "0", ":", "100", "]", ")", ")", "\n", "", "src_samples", "=", "np", ".", "array", "(", "src_samples", ")", "\n", "trg_samples", "=", "np", ".", "array", "(", "trg_samples", ")", "\n", "idxes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "            ", "idxes", ".", "extend", "(", "[", "j", "*", "100", "+", "i", "*", "10", "+", "k", "for", "k", "in", "range", "(", "10", ")", "]", ")", "\n", "", "", "src_samples", "=", "src_samples", "[", "idxes", "]", "\n", "trg_samples", "=", "trg_samples", "[", "idxes", "]", "\n", "\n", "trg_train_images_su", "=", "[", "]", "\n", "trg_train_labels_su", "=", "[", "]", "\n", "trg_train_images_su_next", "=", "[", "]", "\n", "trg_train_labels_su_next", "=", "[", "]", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "log_file", "=", "open", "(", "'log_result.txt'", ",", "'w'", ")", "\n", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", "=", "log_dir", ",", "graph", "=", "tf", ".", "get_default_graph", "(", ")", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "print", "(", "\"start training...\"", ")", "\n", "step", "=", "0", "\n", "while", "(", "step", "<", "train_iters", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "i_su", "=", "step", "%", "int", "(", "src_train_images_su", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "i_su", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "len", "(", "src_train_images_su", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "src_train_images_su", "=", "src_train_images_su", "[", "idxes", "]", "\n", "src_train_labels_su", "=", "src_train_labels_su", "[", "idxes", "]", "\n", "", "src_batch_images_su", "=", "src_train_images_su", "[", "i_su", "*", "batch_size", ":", "(", "i_su", "+", "1", ")", "*", "batch_size", "]", "\n", "src_batch_labels_su", "=", "src_train_labels_su", "[", "i_su", "*", "batch_size", ":", "(", "i_su", "+", "1", ")", "*", "batch_size", "]", "\n", "j_un", "=", "step", "%", "int", "(", "trg_train_images_un", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "j_un", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "len", "(", "trg_train_images_un", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "trg_train_images_un", "=", "trg_train_images_un", "[", "idxes", "]", "\n", "if", "(", "step", ">", "pre_steps", ")", ":", "\n", "                    ", "if", "boost", ":", "\n", "                        ", "threshold", "=", "init_threshold", "+", "(", "1", "-", "math", ".", "exp", "(", "-", "step", "/", "scale", ")", ")", "*", "(", "1.0", "-", "init_threshold", ")", "\n", "", "else", ":", "\n", "                        ", "threshold", "=", "init_threshold", "\n", "", "trg_train_images_su_next", "=", "[", "]", "\n", "trg_train_labels_su_next", "=", "[", "]", "\n", "ph_images", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "ph_hot", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "ph_calm_src", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "calm_size_src", "]", ")", "\n", "ph_calm_trg", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "calm_size_trg", "]", ")", "\n", "for", "k", "in", "range", "(", "int", "(", "len", "(", "trg_train_images_un", ")", "/", "batch_size", ")", ")", ":", "\n", "                        ", "trg_batch_images", "=", "trg_train_images_un", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_images", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "ph_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "ph_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "ph_calm_trg", "}", "\n", "cur_prob", "=", "sess", ".", "run", "(", "m", ".", "hot_trg", ",", "feed_dict", ")", "\n", "pred_prob", "=", "np", ".", "max", "(", "cur_prob", ",", "axis", "=", "1", ")", "\n", "cur_pred", "=", "np", ".", "argmax", "(", "cur_prob", ",", "axis", "=", "1", ")", "\n", "cur_idxes", "=", "np", ".", "where", "(", "pred_prob", ">=", "threshold", ")", "\n", "trg_train_images_su_next", ".", "extend", "(", "list", "(", "trg_batch_images", "[", "cur_idxes", "]", ")", ")", "\n", "trg_train_labels_su_next", ".", "extend", "(", "list", "(", "cur_pred", "[", "cur_idxes", "]", ")", ")", "\n", "", "trg_train_images_su", "=", "np", ".", "array", "(", "trg_train_images_su_next", ")", "\n", "trg_train_labels_su", "=", "np", ".", "array", "(", "trg_train_labels_su_next", ")", "\n", "print", "(", "\"evaluated supervised trg: [%d], threshold: %f.\"", "%", "(", "len", "(", "trg_train_labels_su_next", ")", ",", "threshold", ")", ")", "\n", "mnist_images_su_next", "=", "[", "]", "\n", "mnist_labels_su_next", "=", "[", "]", "\n", "", "", "trg_batch_images_un", "=", "trg_train_images_un", "[", "j_un", "*", "batch_size", ":", "(", "j_un", "+", "1", ")", "*", "batch_size", "]", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "hot_code", "[", "range", "(", "batch_size", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "hot_size", ",", "batch_size", ")", "]", "=", "1", "\n", "# hot_code = np.random.randint(0, 2, [batch_size, hot_size])", "\n", "calm_code_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "calm_code_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_images_su", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images_un", ",", "\n", "m", ".", "label_src", ":", "src_batch_labels_su", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "_", ",", "summary_su", "=", "sess", ".", "run", "(", "[", "m", ".", "train_op_su_src", ",", "m", ".", "summary_op_su", "]", ",", "feed_dict", ")", "\n", "if", "(", "step", ">", "pre_steps", ")", ":", "\n", "                ", "sess", ".", "run", "(", "[", "m", ".", "train_op_auto", ",", "m", ".", "train_op_cc_suun", "]", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_D", ",", "m", ".", "train_op_Cen", ",", "m", ".", "train_op_Hen", "]", ",", "feed_dict", ")", "\n", "", "summary", "=", "sess", ".", "run", "(", "m", ".", "summary_op", ",", "feed_dict", ")", "\n", "step", "+=", "1", "\n", "summary_writer", ".", "add_summary", "(", "summary_su", ",", "step", ")", "\n", "summary_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "if", "(", "step", "==", "pre_steps", ")", ":", "\n", "                ", "if", "boost", ":", "\n", "                    ", "threshold", "=", "init_threshold", "+", "(", "1", "-", "math", ".", "exp", "(", "-", "step", "/", "scale", ")", ")", "*", "(", "1.0", "-", "init_threshold", ")", "\n", "", "else", ":", "\n", "                    ", "threshold", "=", "init_threshold", "\n", "", "trg_train_images_su_next", "=", "[", "]", "\n", "trg_train_labels_su_next", "=", "[", "]", "\n", "ph_images", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "ph_hot", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "ph_calm_src", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "calm_size_src", "]", ")", "\n", "ph_calm_trg", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "calm_size_trg", "]", ")", "\n", "for", "k", "in", "range", "(", "int", "(", "len", "(", "trg_train_images_un", ")", "/", "batch_size", ")", ")", ":", "\n", "                    ", "trg_batch_images", "=", "trg_train_images_un", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_images", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "ph_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "ph_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "ph_calm_trg", "}", "\n", "cur_prob", "=", "sess", ".", "run", "(", "m", ".", "hot_trg", ",", "feed_dict", ")", "\n", "pred_prob", "=", "np", ".", "max", "(", "cur_prob", ",", "axis", "=", "1", ")", "\n", "cur_pred", "=", "np", ".", "argmax", "(", "cur_prob", ",", "axis", "=", "1", ")", "\n", "cur_idxes", "=", "np", ".", "where", "(", "pred_prob", ">=", "threshold", ")", "\n", "trg_train_images_su_next", ".", "extend", "(", "list", "(", "trg_batch_images", "[", "cur_idxes", "]", ")", ")", "\n", "trg_train_labels_su_next", ".", "extend", "(", "list", "(", "cur_pred", "[", "cur_idxes", "]", ")", ")", "\n", "", "trg_train_images_su", "=", "np", ".", "array", "(", "trg_train_images_su_next", ")", "\n", "trg_train_labels_su", "=", "np", ".", "array", "(", "trg_train_labels_su_next", ")", "\n", "print", "(", "\"evaluated supervised trg: [%d], threshold: %f.\"", "%", "(", "len", "(", "trg_train_labels_su_next", ")", ",", "threshold", ")", ")", "\n", "mnist_images_su_next", "=", "[", "]", "\n", "mnist_labels_su_next", "=", "[", "]", "\n", "", "if", "(", "step", ">", "pre_steps", ")", ":", "\n", "                ", "j_su", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "int", "(", "len", "(", "trg_train_labels_su", ")", "/", "batch_size", ")", ")", "\n", "trg_batch_images_su", "=", "trg_train_images_su", "[", "j_su", "*", "batch_size", ":", "(", "j_su", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_batch_labels_su", "=", "trg_train_labels_su", "[", "j_su", "*", "batch_size", ":", "(", "j_su", "+", "1", ")", "*", "batch_size", "]", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "hot_code", "[", "range", "(", "batch_size", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "hot_size", ",", "batch_size", ")", "]", "=", "1", "\n", "# hot_code = np.random.randint(0, 2, [batch_size, hot_size])", "\n", "calm_code_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "calm_code_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_images_su", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images_su", ",", "\n", "m", ".", "label_src", ":", "src_batch_labels_su", ",", "\n", "m", ".", "label_trg", ":", "trg_batch_labels_su", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "sess", ".", "run", "(", "m", ".", "train_op_su_trg", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_D", ",", "m", ".", "train_op_Cen", ",", "m", ".", "train_op_Hen", "]", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_auto", ",", "m", ".", "train_op_cc_suun", "]", ",", "feed_dict", ")", "\n", "", "if", "(", "step", "%", "100", "==", "0", ")", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'m'", ")", ",", "global_step", "=", "step", ")", "\n", "print", "(", "'model/m-%d saved'", "%", "step", ")", "\n", "calm_code_src", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_src", ")", ")", "*", "10", ")", "\n", "calm_code_trg", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_trg", ")", ")", "*", "10", ")", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "for", "k", "in", "range", "(", "10", ")", ":", "\n", "                    ", "hot_code", "[", "k", "*", "10", ":", "(", "k", "+", "1", ")", "*", "10", ",", "k", "]", "=", "1", "\n", "", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "src_batch_samples", "=", "src_samples", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_batch_samples", "=", "trg_samples", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_samples", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_samples", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "fsrc_from_src", ",", "ftrg_from_trg", ",", "gsrc_from_src", ",", "gtrg_from_trg", ",", "gsrc_from_trg", ",", "gtrg_from_src", ",", "gsrc_from_prior", ",", "gtrg_from_prior", "=", "sess", ".", "run", "(", "[", "m", ".", "fsrc_from_src", ",", "\n", "m", ".", "ftrg_from_trg", ",", "\n", "m", ".", "gsrc_from_src", ",", "\n", "m", ".", "gtrg_from_trg", ",", "\n", "m", ".", "gsrc_from_trg", ",", "\n", "m", ".", "gtrg_from_src", ",", "\n", "m", ".", "gsrc_from_prior", ",", "\n", "m", ".", "gtrg_from_prior", "]", ",", "feed_dict", ")", "\n", "merged_fsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "fsrc_from_src", ")", "\n", "merged_ftrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "ftrg_from_trg", ")", "\n", "merged_gsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "gsrc_from_src", ")", "\n", "merged_gtrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "gtrg_from_trg", ")", "\n", "merged_gsrc_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "gsrc_from_trg", ")", "\n", "merged_gtrg_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "gtrg_from_src", ")", "\n", "merged_image_from_prior", "=", "merge_images", "(", "batch_size", ",", "gsrc_from_prior", ",", "gtrg_from_prior", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'fsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_fsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'ftrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_ftrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_trg-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_src-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'image_from_prior-%d.png'", "%", "step", ")", ",", "\n", "merged_image_from_prior", ")", "\n", "", "print", "(", "\"step: %d, time used: %.3f\"", "%", "(", "step", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "calm_code_src", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_src", ")", ")", "*", "10", ")", "\n", "calm_code_trg", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_trg", ")", ")", "*", "10", ")", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "ph_images", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "for", "k", "in", "range", "(", "10", ")", ":", "\n", "            ", "hot_code", "[", "k", "*", "10", ":", "(", "k", "+", "1", ")", "*", "10", ",", "k", "]", "=", "1", "\n", "", "pred", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "int", "(", "trg_test_images", ".", "shape", "[", "0", "]", "/", "batch_size", ")", ")", ":", "\n", "            ", "trg_batch_images", "=", "trg_test_images", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_images", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "p", "=", "sess", ".", "run", "(", "m", ".", "hot_trg", ",", "feed_dict", ")", "\n", "p", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "pred", ".", "extend", "(", "list", "(", "p", ")", ")", "\n", "", "num_left", "=", "trg_test_images", ".", "shape", "[", "0", "]", "%", "batch_size", "\n", "if", "(", "num_left", ">", "0", ")", ":", "\n", "            ", "trg_batch_images", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "trg_batch_images", "[", ":", "num_left", ",", ":", ",", ":", ",", ":", "]", "=", "trg_test_images", "[", "-", "num_left", ":", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_images", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "p", "=", "sess", ".", "run", "(", "m", ".", "hot_trg", ",", "feed_dict", ")", "\n", "p", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "pred", ".", "extend", "(", "list", "(", "p", ")", "[", ":", "num_left", "]", ")", "\n", "", "pred", "=", "np", ".", "array", "(", "pred", ")", "\n", "acc", "=", "np", ".", "mean", "(", "pred", "==", "trg_test_labels", ")", "\n", "log_file", ".", "write", "(", "\"step:[%d/%d]--acc:[%f]\\n\"", "%", "(", "step", ",", "train_iters", ",", "acc", ")", ")", "\n", "print", "(", "\"step:[%d/%d]--acc:[%f]\\n\"", "%", "(", "step", ",", "train_iters", ",", "acc", ")", ")", "\n", "summary_writer", ".", "close", "(", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.cdaae.load_data": [[10, 20], ["os.path.join", "print", "print", "open", "pickle.load"], "function", ["None"], ["def", "load_data", "(", "image_dir", ",", "mode", "=", "'train'", ")", ":", "\n", "    ", "image_file", "=", "'train.pkl'", "if", "mode", "==", "'train'", "else", "'test.pkl'", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_file", ")", "\n", "print", "(", "'loading data: %s ...'", "%", "image_dir", ")", "\n", "with", "open", "(", "image_dir", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "images", "=", "data", "[", "'X'", "]", "/", "127.5", "-", "1", "\n", "labels", "=", "data", "[", "'y'", "]", "\n", "print", "(", "'finished loading data: %s!'", "%", "image_dir", ")", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.cdaae.merge_images": [[22, 33], ["int", "numpy.zeros", "enumerate", "numpy.sqrt", "zip"], "function", ["None"], ["", "def", "merge_images", "(", "batch_size", ",", "sources", ",", "targets", ",", "k", "=", "10", ")", ":", "\n", "    ", "_", ",", "h", ",", "w", ",", "_", "=", "sources", ".", "shape", "\n", "row", "=", "int", "(", "np", ".", "sqrt", "(", "batch_size", ")", ")", "\n", "merged", "=", "np", ".", "zeros", "(", "[", "row", "*", "h", ",", "row", "*", "w", "*", "2", ",", "3", "]", ")", "\n", "\n", "for", "idx", ",", "(", "s", ",", "t", ")", "in", "enumerate", "(", "zip", "(", "sources", ",", "targets", ")", ")", ":", "\n", "        ", "i", "=", "idx", "//", "row", "\n", "j", "=", "idx", "%", "row", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", ")", "*", "h", ":", "(", "j", "*", "2", "+", "1", ")", "*", "h", ",", ":", "]", "=", "s", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", "+", "1", ")", "*", "h", ":", "(", "j", "*", "2", "+", "2", ")", "*", "h", ",", ":", "]", "=", "t", "\n", "", "return", "merged", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.cdaae.train": [[34, 227], ["model.Model", "model.Model.build", "tensorflow.ConfigProto", "tensorflow.gfile.Exists", "tensorflow.gfile.MakeDirs", "cdaae.load_data", "cdaae.load_data", "cdaae.load_data", "cdaae.load_data", "range", "numpy.array", "numpy.array", "range", "tensorflow.gfile.DeleteRecursively", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.random.shuffle", "numpy.random.shuffle", "np.array.extend", "np.array.extend", "range", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.summary.FileWriter", "tensorflow.train.Saver", "print", "tf.summary.FileWriter.close", "numpy.random.shuffle", "np.array.extend", "np.array.extend", "np.array.extend", "numpy.random.shuffle", "np.array.extend", "np.array.extend", "np.array.extend", "list", "list", "list.extend", "time.time", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.add_summary", "print", "time.time", "list", "list", "list", "list", "numpy.where", "numpy.where", "tensorflow.global_variables_initializer", "tensorflow.get_default_graph", "int", "list", "numpy.random.shuffle", "int", "list", "numpy.random.shuffle", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "numpy.zeros", "sess.run", "numpy.array", "numpy.array", "numpy.zeros", "range", "numpy.random.randint", "numpy.zeros", "sess.run", "cdaae.merge_images", "cdaae.merge_images", "cdaae.merge_images", "cdaae.merge_images", "cdaae.merge_images", "cdaae.merge_images", "cdaae.merge_images", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "numpy.where", "numpy.where", "range", "range", "int", "numpy.random.shuffle", "int", "numpy.random.shuffle", "tf.train.Saver.save", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "range", "len", "len", "range", "numpy.random.randint", "os.path.join", "list", "list", "range", "numpy.random.randint", "time.time", "numpy.random.randn", "numpy.random.randn"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.build", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images"], ["", "def", "train", "(", "image_size", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ",", "batch_size", ",", "\n", "train_iters", ",", "src_dir", ",", "trg_dir", ",", "log_dir", ",", "model_dir", ",", "sample_dir", ",", "semi_supervise", "=", "False", ",", "\n", "labeled_image_num", "=", "-", "1", ",", "pre_steps", "=", "0", ")", ":", "\n", "    ", "m", "=", "Model", "(", "image_size", "=", "image_size", ",", "hot_size", "=", "hot_size", ",", "calm_size_src", "=", "calm_size_src", ",", "\n", "calm_size_trg", "=", "calm_size_trg", ",", "learning_rate", "=", "learning_rate", ")", "\n", "m", ".", "build", "(", "is_training", "=", "True", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "0.0", ",", "beta2", "=", "0.0", ",", "\n", "beta3", "=", "1.0", ",", "gamma1", "=", "2.0", ",", "gamma2", "=", "0.15", ",", "lambda1", "=", "5.0", ",", "lambda2", "=", "0.5", ",", "eta1", "=", "0.3", ",", "eta2", "=", "0.3", ")", "\n", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n", "if", "tf", ".", "gfile", ".", "Exists", "(", "log_dir", ")", ":", "\n", "        ", "tf", ".", "gfile", ".", "DeleteRecursively", "(", "log_dir", ")", "\n", "", "tf", ".", "gfile", ".", "MakeDirs", "(", "log_dir", ")", "\n", "\n", "src_train_images", ",", "src_train_labels", "=", "load_data", "(", "src_dir", ",", "mode", "=", "'train'", ")", "\n", "trg_train_images", ",", "trg_train_labels", "=", "load_data", "(", "trg_dir", ",", "mode", "=", "'train'", ")", "\n", "src_test_images", ",", "src_test_labels", "=", "load_data", "(", "src_dir", ",", "mode", "=", "'test'", ")", "\n", "trg_test_images", ",", "trg_test_labels", "=", "load_data", "(", "trg_dir", ",", "mode", "=", "'test'", ")", "\n", "\n", "src_train_images_su", "=", "[", "]", "\n", "src_train_labels_su", "=", "[", "]", "\n", "trg_train_images_su", "=", "[", "]", "\n", "trg_train_labels_su", "=", "[", "]", "\n", "src_train_images_un", "=", "[", "]", "\n", "trg_train_images_un", "=", "[", "]", "\n", "if", "(", "semi_supervise", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "cur_src_images", "=", "src_train_images", "[", "np", ".", "where", "(", "src_train_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_src_images", ")", "\n", "src_train_images_su", ".", "extend", "(", "list", "(", "cur_src_images", "[", "0", ":", "labeled_image_num", "]", ")", ")", "\n", "src_train_images_un", ".", "extend", "(", "list", "(", "cur_src_images", "[", "labeled_image_num", ":", "]", ")", ")", "\n", "src_train_labels_su", ".", "extend", "(", "[", "i", "]", "*", "labeled_image_num", ")", "\n", "cur_trg_images", "=", "trg_train_images", "[", "np", ".", "where", "(", "trg_train_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_trg_images", ")", "\n", "trg_train_images_su", ".", "extend", "(", "list", "(", "cur_trg_images", "[", "0", ":", "labeled_image_num", "]", ")", ")", "\n", "trg_train_images_un", ".", "extend", "(", "list", "(", "cur_trg_images", "[", "labeled_image_num", ":", "]", ")", ")", "\n", "trg_train_labels_su", ".", "extend", "(", "[", "i", "]", "*", "labeled_image_num", ")", "\n", "", "src_train_images_su", "=", "np", ".", "array", "(", "src_train_images_su", ")", "\n", "src_train_labels_su", "=", "np", ".", "array", "(", "src_train_labels_su", ")", "\n", "trg_train_images_su", "=", "np", ".", "array", "(", "trg_train_images_su", ")", "\n", "trg_train_labels_su", "=", "np", ".", "array", "(", "trg_train_labels_su", ")", "\n", "src_train_images_un", "=", "np", ".", "array", "(", "src_train_images_un", ")", "\n", "trg_train_images_un", "=", "np", ".", "array", "(", "trg_train_images_un", ")", "\n", "", "else", ":", "\n", "        ", "src_train_images_su", "=", "src_train_images", "\n", "src_train_labels_su", "=", "src_train_labels", "\n", "trg_train_images_su", "=", "trg_train_images", "\n", "trg_train_labels_su", "=", "trg_train_labels", "\n", "svhn_images_un", "=", "None", "\n", "mnist_images_un", "=", "None", "\n", "\n", "", "del", "src_train_images", "\n", "del", "src_train_labels", "\n", "del", "trg_train_images", "\n", "del", "trg_train_labels", "\n", "\n", "src_samples", "=", "[", "]", "\n", "trg_samples", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "cur_src_images", "=", "src_test_images", "[", "np", ".", "where", "(", "src_test_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_src_images", ")", "\n", "cur_trg_images", "=", "trg_test_images", "[", "np", ".", "where", "(", "trg_test_labels", "==", "i", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_trg_images", ")", "\n", "src_samples", ".", "extend", "(", "list", "(", "cur_src_images", "[", "0", ":", "100", "]", ")", ")", "\n", "trg_samples", ".", "extend", "(", "list", "(", "cur_trg_images", "[", "0", ":", "100", "]", ")", ")", "\n", "", "src_samples", "=", "np", ".", "array", "(", "src_samples", ")", "\n", "trg_samples", "=", "np", ".", "array", "(", "trg_samples", ")", "\n", "idxes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "            ", "idxes", ".", "extend", "(", "[", "j", "*", "100", "+", "i", "*", "10", "+", "k", "for", "k", "in", "range", "(", "10", ")", "]", ")", "\n", "", "", "src_samples", "=", "src_samples", "[", "idxes", "]", "\n", "trg_samples", "=", "trg_samples", "[", "idxes", "]", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", "=", "log_dir", ",", "graph", "=", "tf", ".", "get_default_graph", "(", ")", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "300", ")", "\n", "print", "(", "\"start training...\"", ")", "\n", "step", "=", "0", "\n", "while", "(", "step", "<", "train_iters", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "i_su", "=", "step", "%", "int", "(", "src_train_images_su", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "i_su", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "len", "(", "src_train_images_su", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "src_train_images_su", "=", "src_train_images_su", "[", "idxes", "]", "\n", "src_train_labels_su", "=", "src_train_labels_su", "[", "idxes", "]", "\n", "", "src_batch_images_su", "=", "src_train_images_su", "[", "i_su", "*", "batch_size", ":", "(", "i_su", "+", "1", ")", "*", "batch_size", "]", "\n", "src_batch_labels_su", "=", "src_train_labels_su", "[", "i_su", "*", "batch_size", ":", "(", "i_su", "+", "1", ")", "*", "batch_size", "]", "\n", "j_su", "=", "step", "%", "int", "(", "trg_train_images_su", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "j_su", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "len", "(", "trg_train_images_su", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "trg_train_images_su", "=", "trg_train_images_su", "[", "idxes", "]", "\n", "trg_train_labels_su", "=", "trg_train_labels_su", "[", "idxes", "]", "\n", "", "trg_batch_images_su", "=", "trg_train_images_su", "[", "j_su", "*", "batch_size", ":", "(", "j_su", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_batch_labels_su", "=", "trg_train_labels_su", "[", "j_su", "*", "batch_size", ":", "(", "j_su", "+", "1", ")", "*", "batch_size", "]", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "hot_code", "[", "range", "(", "batch_size", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "hot_size", ",", "batch_size", ")", "]", "=", "1", "\n", "# hot_code = np.random.randint(0, 2, [batch_size, hot_size])", "\n", "calm_code_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "calm_code_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_images_su", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images_su", ",", "\n", "m", ".", "label_src", ":", "src_batch_labels_su", ",", "\n", "m", ".", "label_trg", ":", "trg_batch_labels_su", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_D", ",", "m", ".", "train_op_Cen", "]", ",", "feed_dict", ")", "\n", "_", ",", "summary_su", "=", "sess", ".", "run", "(", "[", "m", ".", "train_op_su", ",", "m", ".", "summary_op_su", "]", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "m", ".", "train_op_auto", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_cc_su", "]", ",", "feed_dict", ")", "\n", "if", "(", "semi_supervise", "and", "step", ">", "pre_steps", ")", ":", "\n", "                ", "i", "=", "step", "%", "int", "(", "src_train_images_un", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "i", "==", "0", ")", ":", "\n", "                    ", "np", ".", "random", ".", "shuffle", "(", "src_train_images_un", ")", "\n", "", "src_batch_images_un", "=", "src_train_images_un", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "j", "=", "step", "%", "int", "(", "trg_train_images_un", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "j", "==", "0", ")", ":", "\n", "                    ", "np", ".", "random", ".", "shuffle", "(", "trg_train_images_un", ")", "\n", "", "trg_batch_images_un", "=", "trg_train_images_un", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "hot_code", "[", "range", "(", "batch_size", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "hot_size", ",", "batch_size", ")", "]", "=", "1", "\n", "# hot_code = np.random.randint(0, 2, [batch_size, hot_size])", "\n", "calm_code_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "calm_code_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "batch_size", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_images_un", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_images_un", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_auto", ",", "m", ".", "train_op_D", ",", "m", ".", "train_op_Hen", ",", "m", ".", "train_op_Cen", ",", "m", ".", "train_op_cc_un", "]", ",", "\n", "feed_dict", ")", "\n", "", "summary", "=", "sess", ".", "run", "(", "m", ".", "summary_op", ",", "feed_dict", ")", "\n", "step", "+=", "1", "\n", "summary_writer", ".", "add_summary", "(", "summary_su", ",", "step", ")", "\n", "summary_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "print", "(", "\"step: %d, time used: %.3f\"", "%", "(", "step", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "(", "step", "%", "100", "==", "0", ")", ":", "\n", "                ", "if", "(", "step", "%", "200", "==", "0", ")", ":", "\n", "                    ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'m'", ")", ",", "global_step", "=", "step", ")", "\n", "print", "(", "'model/m-%d saved'", "%", "step", ")", "\n", "", "calm_code_src", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_src", ")", ")", "*", "10", ")", "\n", "calm_code_trg", "=", "np", ".", "array", "(", "list", "(", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_trg", ")", ")", "*", "10", ")", "\n", "hot_code", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "for", "k", "in", "range", "(", "10", ")", ":", "\n", "                    ", "hot_code", "[", "k", "*", "10", ":", "(", "k", "+", "1", ")", "*", "10", ",", "k", "]", "=", "1", "\n", "", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "ph_labels", "=", "np", ".", "zeros", "(", "batch_size", ")", "\n", "src_batch_samples", "=", "src_samples", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_batch_samples", "=", "trg_samples", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_batch_samples", ",", "\n", "m", ".", "image_trg", ":", "trg_batch_samples", ",", "\n", "m", ".", "label_src", ":", "ph_labels", ",", "\n", "m", ".", "label_trg", ":", "ph_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "fsrc_from_src", ",", "ftrg_from_trg", ",", "gsrc_from_src", ",", "gtrg_from_trg", ",", "gsrc_from_trg", ",", "gtrg_from_src", ",", "gsrc_from_prior", ",", "gtrg_from_prior", "=", "sess", ".", "run", "(", "[", "m", ".", "fsrc_from_src", ",", "\n", "m", ".", "ftrg_from_trg", ",", "\n", "m", ".", "gsrc_from_src", ",", "\n", "m", ".", "gtrg_from_trg", ",", "\n", "m", ".", "gsrc_from_trg", ",", "\n", "m", ".", "gtrg_from_src", ",", "\n", "m", ".", "gsrc_from_prior", ",", "\n", "m", ".", "gtrg_from_prior", "]", ",", "feed_dict", ")", "\n", "merged_fsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "fsrc_from_src", ")", "\n", "merged_ftrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "ftrg_from_trg", ")", "\n", "merged_gsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "gsrc_from_src", ")", "\n", "merged_gtrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "gtrg_from_trg", ")", "\n", "merged_gsrc_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_batch_samples", ",", "gsrc_from_trg", ")", "\n", "merged_gtrg_from_src", "=", "merge_images", "(", "batch_size", ",", "src_batch_samples", ",", "gtrg_from_src", ")", "\n", "merged_image_from_prior", "=", "merge_images", "(", "batch_size", ",", "gsrc_from_prior", ",", "gtrg_from_prior", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'fsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_fsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'ftrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_ftrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_trg-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_src-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'image_from_prior-%d.png'", "%", "step", ")", ",", "\n", "merged_image_from_prior", ")", "\n", "", "", "summary_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.cdaae.eval": [[229, 372], ["model.Model", "model.Model.build", "tensorflow.ConfigProto", "cdaae.load_data", "cdaae.load_data", "os.path.join", "os.path.isdir", "os.mkdir", "os.path.isdir", "os.mkdir", "tensorflow.Session", "print", "tensorflow.train.Saver", "tf.train.Saver.restore", "print", "list", "list", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "range", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "range", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "numpy.random.randn", "numpy.random.randn", "int", "numpy.random.randn", "numpy.random.randn", "sess.run", "t2s_image.extend", "t2s_label.extend", "t2t_image.extend", "t2t_label.extend", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "sess.run", "t2s_image.extend", "t2s_label.extend", "t2t_image.extend", "t2t_label.extend", "open", "open", "open", "open", "int", "numpy.random.randn", "numpy.random.randn", "sess.run", "s2t_image.extend", "s2t_label.extend", "s2s_image.extend", "s2s_label.extend", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "sess.run", "s2t_image.extend", "s2t_label.extend", "s2s_image.extend", "s2s_label.extend", "open", "open", "open", "open", "numpy.zeros", "int", "range", "open", "open", "open", "open", "list", "list", "list", "list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "list", "list", "list", "list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.random.randn", "numpy.random.randn", "sess.run", "p2s_image.extend", "p2s_label.extend", "p2t_image.extend", "p2t_label.extend", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "list", "list", "list", "list", "list", "list", "list", "list", "list", "list"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.build", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data"], ["", "", "def", "eval", "(", "image_size", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ",", "batch_size", ",", "\n", "model_path", ",", "src_dir", ",", "trg_dir", ",", "result_dir", ",", "num_per_class", ",", "num_per_image", ")", ":", "\n", "    ", "m", "=", "Model", "(", "image_size", "=", "image_size", ",", "hot_size", "=", "hot_size", ",", "calm_size_src", "=", "calm_size_src", ",", "\n", "calm_size_trg", "=", "calm_size_trg", ",", "learning_rate", "=", "learning_rate", ")", "\n", "m", ".", "build", "(", "is_training", "=", "False", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "0.0", ",", "beta2", "=", "0.0", ",", "\n", "beta3", "=", "1.0", ",", "gamma1", "=", "2.0", ",", "gamma2", "=", "0.15", ",", "lambda1", "=", "5.0", ",", "lambda2", "=", "0.5", ",", "eta1", "=", "0.3", ",", "eta2", "=", "0.3", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "src_test_images", ",", "src_test_labels", "=", "load_data", "(", "src_dir", ",", "mode", "=", "'test'", ")", "\n", "trg_test_images", ",", "trg_test_labels", "=", "load_data", "(", "trg_dir", ",", "mode", "=", "'test'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "result_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "result_dir", ")", "\n", "", "ori_path", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'ori'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "ori_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "ori_path", ")", "\n", "", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "print", "(", "\"loading model...\"", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "model_path", ")", "\n", "print", "(", "\"done!\"", ")", "\n", "prior_calm_src", "=", "list", "(", "np", ".", "random", ".", "randn", "(", "num_per_image", ",", "calm_size_src", ")", ")", "\n", "prior_calm_trg", "=", "list", "(", "np", ".", "random", ".", "randn", "(", "num_per_image", ",", "calm_size_trg", ")", ")", "\n", "s2s_image", "=", "[", "]", "\n", "t2t_image", "=", "[", "]", "\n", "s2t_image", "=", "[", "]", "\n", "t2s_image", "=", "[", "]", "\n", "p2s_image", "=", "[", "]", "\n", "p2t_image", "=", "[", "]", "\n", "s2s_label", "=", "[", "]", "\n", "t2t_label", "=", "[", "]", "\n", "s2t_label", "=", "[", "]", "\n", "t2s_label", "=", "[", "]", "\n", "p2s_label", "=", "[", "]", "\n", "p2t_label", "=", "[", "]", "\n", "ph_label", "=", "np", ".", "zeros", "(", "batch_size", ")", "\n", "ph_image", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "batch_prior_hot", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "trg_test_images", ".", "shape", "[", "0", "]", "/", "batch_size", ")", ")", ":", "\n", "            ", "trg_image_batch", "=", "trg_test_images", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_label_batch", "=", "trg_test_labels", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "prior_calm_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "prior_calm_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_image", ",", "\n", "m", ".", "image_trg", ":", "trg_image_batch", ",", "\n", "m", ".", "label_src", ":", "ph_label", ",", "\n", "m", ".", "label_trg", ":", "ph_label", ",", "\n", "m", ".", "prior_hot", ":", "batch_prior_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "prior_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "prior_calm_trg", "}", "\n", "gsrc_from_trg", ",", "gtrg_from_trg", "=", "sess", ".", "run", "(", "[", "m", ".", "gsrc_from_trg", ",", "m", ".", "gtrg_from_trg", "]", ",", "feed_dict", ")", "\n", "t2s_image", ".", "extend", "(", "list", "(", "gsrc_from_trg", ")", ")", "\n", "t2s_label", ".", "extend", "(", "list", "(", "trg_label_batch", ")", ")", "\n", "t2t_image", ".", "extend", "(", "list", "(", "gtrg_from_trg", ")", ")", "\n", "t2t_label", ".", "extend", "(", "list", "(", "trg_label_batch", ")", ")", "\n", "", "if", "(", "trg_test_images", ".", "shape", "[", "0", "]", "%", "batch_size", ">", "0", ")", ":", "\n", "            ", "trg_image_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "trg_label_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "num_left", "=", "trg_test_images", ".", "shape", "[", "0", "]", "%", "batch_size", "\n", "trg_image_batch", "[", ":", "num_left", ",", ":", ",", ":", ",", ":", "]", "=", "trg_test_images", "[", "-", "num_left", ":", "]", "\n", "trg_label_batch", "[", ":", "num_left", "]", "=", "trg_test_labels", "[", "-", "num_left", ":", "]", "\n", "prior_calm_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "prior_calm_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_image", ",", "\n", "m", ".", "image_trg", ":", "trg_image_batch", ",", "\n", "m", ".", "label_src", ":", "ph_label", ",", "\n", "m", ".", "label_trg", ":", "ph_label", ",", "\n", "m", ".", "prior_hot", ":", "batch_prior_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "prior_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "prior_calm_trg", "}", "\n", "gsrc_from_trg", ",", "gtrg_from_trg", "=", "sess", ".", "run", "(", "[", "m", ".", "gsrc_from_trg", ",", "m", ".", "gtrg_from_trg", "]", ",", "feed_dict", ")", "\n", "t2s_image", ".", "extend", "(", "list", "(", "gsrc_from_trg", ")", "[", ":", "num_left", "]", ")", "\n", "t2s_label", ".", "extend", "(", "list", "(", "trg_label_batch", ")", "[", ":", "num_left", "]", ")", "\n", "t2t_image", ".", "extend", "(", "list", "(", "gtrg_from_trg", ")", "[", ":", "num_left", "]", ")", "\n", "t2t_label", ".", "extend", "(", "list", "(", "trg_label_batch", ")", "[", ":", "num_left", "]", ")", "\n", "", "pickle", ".", "dump", "(", "t2t_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2t_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "t2t_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2t_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "t2s_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2s_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "t2s_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2s_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "src_test_images", ".", "shape", "[", "0", "]", "/", "batch_size", ")", ")", ":", "\n", "            ", "src_image_batch", "=", "src_test_images", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "src_label_batch", "=", "src_test_labels", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "prior_calm_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "prior_calm_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_image_batch", ",", "\n", "m", ".", "image_trg", ":", "ph_image", ",", "\n", "m", ".", "label_src", ":", "ph_label", ",", "\n", "m", ".", "label_trg", ":", "ph_label", ",", "\n", "m", ".", "prior_hot", ":", "batch_prior_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "prior_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "prior_calm_trg", "}", "\n", "gtrg_from_src", ",", "gsrc_from_src", "=", "sess", ".", "run", "(", "[", "m", ".", "gtrg_from_src", ",", "m", ".", "gsrc_from_src", "]", ",", "feed_dict", ")", "\n", "s2t_image", ".", "extend", "(", "list", "(", "gtrg_from_src", ")", ")", "\n", "s2t_label", ".", "extend", "(", "list", "(", "src_label_batch", ")", ")", "\n", "s2s_image", ".", "extend", "(", "list", "(", "gsrc_from_src", ")", ")", "\n", "s2s_label", ".", "extend", "(", "list", "(", "src_label_batch", ")", ")", "\n", "", "if", "(", "src_test_images", ".", "shape", "[", "0", "]", "%", "batch_size", ">", "0", ")", ":", "\n", "            ", "src_image_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "src_label_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "num_left", "=", "src_test_images", ".", "shape", "[", "0", "]", "%", "batch_size", "\n", "src_image_batch", "[", ":", "num_left", ",", ":", ",", ":", ",", ":", "]", "=", "src_test_images", "[", "-", "num_left", ":", "]", "\n", "src_label_batch", "[", ":", "num_left", "]", "=", "src_test_labels", "[", "-", "num_left", ":", "]", "\n", "prior_calm_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "prior_calm_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_image_batch", ",", "\n", "m", ".", "image_trg", ":", "ph_image", ",", "\n", "m", ".", "label_src", ":", "ph_label", ",", "\n", "m", ".", "label_trg", ":", "ph_label", ",", "\n", "m", ".", "prior_hot", ":", "batch_prior_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "prior_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "prior_calm_trg", "}", "\n", "gtrg_from_src", ",", "gsrc_from_src", "=", "sess", ".", "run", "(", "[", "m", ".", "gtrg_from_src", ",", "m", ".", "gsrc_from_src", "]", ",", "feed_dict", ")", "\n", "s2t_image", ".", "extend", "(", "list", "(", "gtrg_from_src", ")", "[", ":", "num_left", "]", ")", "\n", "s2t_label", ".", "extend", "(", "list", "(", "src_label_batch", ")", "[", ":", "num_left", "]", ")", "\n", "s2s_image", ".", "extend", "(", "list", "(", "gsrc_from_src", ")", "[", ":", "num_left", "]", ")", "\n", "s2s_label", ".", "extend", "(", "list", "(", "src_label_batch", ")", "[", ":", "num_left", "]", ")", "\n", "", "pickle", ".", "dump", "(", "s2s_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2s_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "s2s_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2s_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "s2t_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2t_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "s2t_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2t_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "for", "i", "in", "range", "(", "hot_size", ")", ":", "\n", "            ", "prior_hot", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "hot_size", "]", ")", "\n", "prior_hot", "[", ":", ",", "i", "]", "=", "1", "\n", "rounds", "=", "int", "(", "num_per_image", "*", "num_per_class", "/", "batch_size", ")", "\n", "for", "j", "in", "range", "(", "rounds", ")", ":", "\n", "                ", "batch_calm_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "batch_calm_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "ph_image", ",", "\n", "m", ".", "image_trg", ":", "ph_image", ",", "\n", "m", ".", "label_src", ":", "ph_label", ",", "\n", "m", ".", "label_trg", ":", "ph_label", ",", "\n", "m", ".", "prior_hot", ":", "prior_hot", ",", "\n", "m", ".", "prior_calm_src", ":", "batch_calm_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "batch_calm_trg", "}", "\n", "p2s", ",", "p2t", "=", "sess", ".", "run", "(", "[", "m", ".", "gsrc_from_prior", ",", "\n", "m", ".", "gtrg_from_prior", "]", ",", "feed_dict", "=", "feed_dict", ")", "\n", "p2s_image", ".", "extend", "(", "list", "(", "p2s", ")", ")", "\n", "p2s_label", ".", "extend", "(", "[", "i", "]", "*", "batch_size", ")", "\n", "p2t_image", ".", "extend", "(", "list", "(", "p2t", ")", ")", "\n", "p2t_label", ".", "extend", "(", "[", "i", "]", "*", "batch_size", ")", "\n", "", "", "pickle", ".", "dump", "(", "p2s_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2s_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "p2s_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2s_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "p2t_image", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2t_image'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "pickle", ".", "dump", "(", "p2t_label", ",", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2t_label'", ")", ",", "'wb'", ")", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.model.Model.__init__": [[5, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_size", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ")", ":", "\n", "        ", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "hot_size", "=", "hot_size", "\n", "self", ".", "calm_size_src", "=", "calm_size_src", "\n", "self", ".", "calm_size_trg", "=", "calm_size_trg", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.model.Model.build": [[12, 317], ["tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "nets.Encoder_hot", "nets.Encoder_hot", "nets.Encoder_calm", "nets.Encoder_calm", "tf.cast", "tf.cast", "tf.reduce_mean", "tf.reduce_mean", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Encoder_hot", "nets.Encoder_hot", "nets.Encoder_hot", "nets.Encoder_hot", "tf.cast", "tf.cast", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "tf.reduce_mean", "tf.reduce_mean", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "tf.summary.merge", "tf.summary.merge", "tf.arg_max", "tf.arg_max", "tf.cast", "tf.cast", "tf.one_hot", "tf.one_hot", "tf.arg_max", "tf.arg_max", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "tf.square", "tf.square", "tf.zeros_like", "tf.zeros_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.zeros_like", "tf.zeros_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.trainable_variables", "vars_auto.extend", "vars_auto.extend", "vars_auto_c.extend", "vars_auto_c.extend", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "tf.equal", "tf.equal", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar"], "methods", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_calm", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_calm", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn"], ["", "def", "build", "(", "self", ",", "is_training", "=", "True", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "1.0", ",", "\n", "beta2", "=", "1.0", ",", "beta3", "=", "1.0", ",", "gamma1", "=", "1.0", ",", "gamma2", "=", "1.0", ",", "lambda1", "=", "1.0", ",", "lambda2", "=", "1.0", ",", "eta1", "=", "1.0", ",", "eta2", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "image_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "image_size", ",", "self", ".", "image_size", ",", "3", "]", ",", "\n", "name", "=", "'image_src'", ")", "\n", "self", ".", "image_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "image_size", ",", "self", ".", "image_size", ",", "3", "]", ",", "\n", "name", "=", "'image_trg'", ")", "\n", "self", ".", "label_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'label_src'", ")", "\n", "self", ".", "label_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'label_trg'", ")", "\n", "self", ".", "prior_hot", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "hot_size", "]", ",", "name", "=", "'prior_hot'", ")", "\n", "self", ".", "prior_calm_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "calm_size_src", "]", ",", "\n", "name", "=", "'prior_calm_src'", ")", "\n", "self", ".", "prior_calm_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "calm_size_trg", "]", ",", "\n", "name", "=", "'prior_calm_trg'", ")", "\n", "\n", "self", ".", "code_mid_src", ",", "self", ".", "logits_src", ",", "self", ".", "hot_src", "=", "Encoder_hot", "(", "self", ".", "image_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "is_training", "=", "is_training", ",", "\n", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_trg", ",", "self", ".", "logits_trg", ",", "self", ".", "hot_trg", "=", "Encoder_hot", "(", "self", ".", "image_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "calm_src", "=", "Encoder_calm", "(", "self", ".", "code_mid_src", ",", "self", ".", "calm_size_src", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_calm_src'", ")", "\n", "self", ".", "calm_trg", "=", "Encoder_calm", "(", "self", ".", "code_mid_trg", ",", "self", ".", "calm_size_trg", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_calm_trg'", ")", "\n", "\n", "self", ".", "pred_src", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_src", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "pred_trg", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_trg", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "acc_src", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "self", ".", "pred_src", ",", "self", ".", "label_src", ")", ",", "tf", ".", "float32", ")", ")", "\n", "self", ".", "acc_trg", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "self", ".", "pred_trg", ",", "self", ".", "label_trg", ")", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "if", "(", "is_training", "==", "False", ")", ":", "\n", "            ", "self", ".", "hot_src", "=", "tf", ".", "one_hot", "(", "self", ".", "pred_src", ",", "self", ".", "hot_size", ")", "\n", "self", ".", "hot_trg", "=", "tf", ".", "one_hot", "(", "self", ".", "pred_trg", ",", "self", ".", "hot_size", ")", "\n", "\n", "", "self", ".", "code_src", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_trg", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_s2s", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_t2t", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_s2t", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_t2s", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_sprior", "=", "tf", ".", "concat", "(", "[", "self", ".", "prior_hot", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_tprior", "=", "tf", ".", "concat", "(", "[", "self", ".", "prior_hot", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "\n", "self", ".", "fsrc_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_src", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "ftrg_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_trg", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_s2s", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_t2t", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_t2s", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_s2t", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_prior", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_sprior", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_prior", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_tprior", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "\n", "self", ".", "code_mid_s2t", ",", "self", ".", "logits_s2t", ",", "self", ".", "hot_s2t", "=", "Encoder_hot", "(", "self", ".", "gtrg_from_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_t2s", ",", "self", ".", "logits_t2s", ",", "self", ".", "hot_t2s", "=", "Encoder_hot", "(", "self", ".", "gsrc_from_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_s2s", ",", "self", ".", "logits_s2s", ",", "self", ".", "hot_s2s", "=", "Encoder_hot", "(", "self", ".", "gsrc_from_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_t2t", ",", "self", ".", "logits_t2t", ",", "self", ".", "hot_t2t", "=", "Encoder_hot", "(", "self", ".", "gtrg_from_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "\n", "self", ".", "pred_s2t", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_s2t", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "pred_t2s", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_t2s", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "\n", "self", ".", "loss_cc_su_s2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2t", ",", "self", ".", "label_src", ")", "\n", "self", ".", "loss_cc_su_t2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2s", ",", "self", ".", "label_trg", ")", "\n", "self", ".", "loss_cc_s2t_su", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_src", ",", "self", ".", "pred_s2t", ")", "\n", "self", ".", "loss_cc_t2s_su", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_trg", ",", "self", ".", "pred_t2s", ")", "\n", "self", ".", "loss_cc_un_s2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2t", ",", "self", ".", "pred_src", ")", "\n", "self", ".", "loss_cc_un_t2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2s", ",", "self", ".", "pred_trg", ")", "\n", "self", ".", "loss_cc_auto_su_s2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2s", ",", "self", ".", "label_src", ")", "\n", "self", ".", "loss_cc_auto_su_t2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2t", ",", "self", ".", "label_trg", ")", "\n", "self", ".", "loss_cc_auto_un_s2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2s", ",", "self", ".", "pred_src", ")", "\n", "self", ".", "loss_cc_auto_un_t2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2t", ",", "self", ".", "pred_trg", ")", "\n", "\n", "# self.fsrc_mid_hsrc = Decoder_hot(self.hot_src, self.image_size, is_training=is_training,", "\n", "#                                  name='Decoder_hot')", "\n", "# self.ftrg_mid_htrg = Decoder_hot(self.hot_trg, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.fsrc_mid_csrc = Decoder_calm(self.calm_src, self.image_size, is_training=is_training,", "\n", "#                                   name='Decoder_calm_src')", "\n", "# self.ftrg_mid_ctrg = Decoder_calm(self.calm_trg, self.image_size, is_training=is_training,", "\n", "#                                   name='Decoder_calm_trg')", "\n", "# self.fsrc_from_src = Decoder_image(self.fsrc_mid_hsrc, self.fsrc_mid_csrc,", "\n", "#                                    is_training=is_training, name='Decoder_image_src')", "\n", "# self.ftrg_from_trg = Decoder_image(self.ftrg_mid_htrg, self.ftrg_mid_ctrg,", "\n", "#                                    is_training=is_training, name='Decoder_image_trg')", "\n", "#", "\n", "# self.gsrc_mid_htrg = Decoder_hot(self.hot_trg, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.gtrg_mid_hsrc = Decoder_hot(self.hot_src, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.gsrc_mid_cprior = Decoder_calm(self.prior_calm_src, self.image_size, reuse=True,", "\n", "#                                     is_training=is_training, name='Decoder_calm_src')", "\n", "# self.gtrg_mid_cprior = Decoder_calm(self.prior_calm_trg, self.image_size, reuse=True,", "\n", "#                                     is_training=is_training, name='Decoder_calm_trg')", "\n", "# self.gsrc_from_trg = Decoder_image(self.gsrc_mid_htrg, self.gsrc_mid_cprior, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_image_src')", "\n", "# self.gtrg_from_src = Decoder_image(self.gtrg_mid_hsrc, self.gtrg_mid_cprior, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_image_trg')", "\n", "#", "\n", "# self.gsrc_mid_hprior = Decoder_hot(self.prior_hot, self.image_size, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_hot')", "\n", "# self.gtrg_mid_hprior = self.gsrc_mid_hprior", "\n", "# self.gsrc_from_prior = Decoder_image(self.gsrc_mid_hprior, self.gsrc_mid_cprior, reuse=True,", "\n", "#                                      is_training=is_training, name='Decoder_image_src')", "\n", "# self.gtrg_from_prior = Decoder_image(self.gtrg_mid_hprior, self.gtrg_mid_cprior, reuse=True,", "\n", "#                                      is_training=is_training, name='Decoder_image_trg')", "\n", "\n", "self", ".", "logits_isHPrior_src", "=", "Discriminator_lc_fn", "(", "self", ".", "hot_src", ",", "self", ".", "hot_size", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isHPrior_trg", "=", "Discriminator_lc_fn", "(", "self", ".", "hot_trg", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isCPrior_src", "=", "Discriminator_lc_fn", "(", "self", ".", "calm_src", ",", "self", ".", "calm_size_src", ",", "\n", "name", "=", "'Discriminator_isCPrior_src'", ")", "\n", "self", ".", "logits_isCPrior_trg", "=", "Discriminator_lc_fn", "(", "self", ".", "calm_trg", ",", "self", ".", "calm_size_trg", ",", "\n", "name", "=", "'Discriminator_isCPrior_trg'", ")", "\n", "self", ".", "logits_isHPrior_prior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_hot", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isCPrior_sprior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_calm_src", ",", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isCPrior_src'", ")", "\n", "self", ".", "logits_isCPrior_tprior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_calm_trg", ",", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isCPrior_trg'", ")", "\n", "\n", "self", ".", "loss_hot_su_src", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_src", ",", "self", ".", "label_src", ")", "*", "lambda1", "\n", "self", ".", "loss_hot_su_trg", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_trg", ",", "self", ".", "label_trg", ")", "*", "lambda2", "\n", "\n", "self", ".", "loss_const_src", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "self", ".", "fsrc_from_src", "-", "self", ".", "image_src", ")", ")", "\n", "self", ".", "loss_const_trg", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "self", ".", "ftrg_from_trg", "-", "self", ".", "image_trg", ")", ")", "\n", "\n", "self", ".", "loss_isHPD_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_src", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isHPrior_src", ")", ")", "\n", "self", ".", "loss_isHPD_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_trg", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isHPrior_trg", ")", ")", "\n", "self", ".", "loss_isHPD_prior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_prior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_prior", ")", ")", "\n", "self", ".", "loss_isHPD", "=", "beta1", "*", "self", ".", "loss_isHPD_src", "+", "beta2", "*", "self", ".", "loss_isHPD_trg", "+", "beta3", "*", "self", ".", "loss_isHPD_prior", "\n", "\n", "self", ".", "loss_isHPen_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_src", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_src", ")", ")", "\n", "self", ".", "loss_isHPen_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_trg", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_trg", ")", ")", "\n", "self", ".", "loss_isHPen", "=", "beta1", "*", "self", ".", "loss_isHPen_src", "+", "beta2", "*", "self", ".", "loss_isHPen_trg", "\n", "\n", "self", ".", "loss_isCPD_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_src", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isCPrior_src", ")", ")", "\n", "self", ".", "loss_isCPD_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_trg", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isCPrior_trg", ")", ")", "\n", "self", ".", "loss_isCPD_sprior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_sprior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_sprior", ")", ")", "\n", "self", ".", "loss_isCPD_tprior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_tprior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_tprior", ")", ")", "\n", "self", ".", "loss_isCPD", "=", "alpha1", "*", "self", ".", "loss_isCPD_src", "+", "alpha2", "*", "self", ".", "loss_isCPD_trg", "+", "alpha3", "*", "self", ".", "loss_isCPD_sprior", "+", "alpha4", "*", "self", ".", "loss_isCPD_tprior", "\n", "\n", "self", ".", "loss_isCPen_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_src", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_src", ")", ")", "\n", "self", ".", "loss_isCPen_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_trg", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_trg", ")", ")", "\n", "self", ".", "loss_isCPen", "=", "alpha1", "*", "self", ".", "loss_isCPen_src", "+", "alpha2", "*", "self", ".", "loss_isCPen_trg", "\n", "\n", "self", ".", "loss_auto", "=", "gamma1", "*", "self", ".", "loss_const_src", "+", "gamma2", "*", "self", ".", "loss_const_trg", "\n", "self", ".", "loss_hot_su", "=", "self", ".", "loss_hot_su_src", "+", "self", ".", "loss_hot_su_trg", "\n", "# self.loss_en = self.loss_isHPen+self.loss_isCPen", "\n", "self", ".", "loss_Hen", "=", "self", ".", "loss_isHPen", "\n", "self", ".", "loss_Cen", "=", "self", ".", "loss_isCPen", "\n", "self", ".", "loss_D", "=", "self", ".", "loss_isHPD", "+", "self", ".", "loss_isCPD", "\n", "self", ".", "loss_cc_su", "=", "eta1", "*", "self", ".", "loss_cc_su_s2t", "+", "eta2", "*", "self", ".", "loss_cc_su_t2s", "\n", "self", ".", "loss_cc_un", "=", "eta1", "*", "self", ".", "loss_cc_un_s2t", "+", "eta2", "*", "self", ".", "loss_cc_un_t2s", "\n", "self", ".", "loss_cc_suun", "=", "eta1", "*", "self", ".", "loss_cc_su_s2t", "+", "eta2", "*", "self", ".", "loss_cc_t2s_su", "\n", "self", ".", "loss_cc_unsu", "=", "eta1", "*", "self", ".", "loss_cc_s2t_su", "+", "eta2", "*", "self", ".", "loss_cc_su_t2s", "\n", "self", ".", "loss_cc_auto_su", "=", "eta1", "*", "self", ".", "loss_cc_auto_su_s2s", "+", "eta2", "*", "self", ".", "loss_cc_auto_su_t2t", "\n", "self", ".", "loss_cc_auto_un", "=", "eta1", "*", "self", ".", "loss_cc_auto_un_s2s", "+", "eta2", "*", "self", ".", "loss_cc_auto_un_t2t", "\n", "\n", "if", "is_training", ":", "\n", "            ", "self", ".", "optimizer_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_auto", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_D", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "# self.optimizer_en = tf.train.AdamOptimizer(self.learning_rate)", "\n", "self", ".", "optimizer_Hen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_Cen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_auto_c", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_un", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_suun", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_unsu", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_auto_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_auto_un", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_su_src", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_su_trg", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "# self.optimizer_Hen_src = tf.train.AdamOptimizer(self.learning_rate)", "\n", "# self.optimizer_Hen_trg = tf.train.AdamOptimizer(self.learning_rate)", "\n", "\n", "vars_total", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "vars_en", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Encoder'", "in", "var", ".", "name", "]", "\n", "vars_de", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Decoder'", "in", "var", ".", "name", "]", "\n", "vars_cen", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Encoder_clam'", "in", "var", ".", "name", "]", "\n", "vars_auto", "=", "[", "]", "\n", "vars_auto", ".", "extend", "(", "vars_en", ")", "\n", "vars_auto", ".", "extend", "(", "vars_de", ")", "\n", "vars_auto_c", "=", "[", "]", "\n", "vars_auto_c", ".", "extend", "(", "vars_cen", ")", "\n", "vars_auto_c", ".", "extend", "(", "vars_de", ")", "\n", "vars_D", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Discriminator'", "in", "var", ".", "name", "]", "\n", "\n", "self", ".", "train_op_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su", ",", "self", ".", "optimizer_su", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_su_src", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su_src", ",", "\n", "self", ".", "optimizer_su_src", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_su_trg", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su_trg", ",", "\n", "self", ".", "optimizer_su_trg", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_auto", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_auto", ",", "self", ".", "optimizer_auto", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_auto_c", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_auto", ",", "self", ".", "optimizer_auto_c", ",", "\n", "variables_to_train", "=", "vars_auto_c", ")", "\n", "self", ".", "train_op_D", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_D", ",", "self", ".", "optimizer_D", ",", "\n", "variables_to_train", "=", "vars_D", ")", "\n", "# self.train_op_en = slim.learning.create_train_op(self.loss_en, self.optimizer_en,", "\n", "#                                                  variables_to_train=vars_en)", "\n", "self", ".", "train_op_Hen", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Hen", ",", "self", ".", "optimizer_Hen", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "# self.train_op_Hen_src = slim.learning.create_train_op(self.loss_isHPen_src,", "\n", "#                                                       self.optimizer_Hen_src,", "\n", "#                                                       variables_to_train=vars_en)", "\n", "# self.train_op_Hen_trg = slim.learning.create_train_op(self.loss_isHPen_trg,", "\n", "#                                                       self.optimizer_Hen_trg,", "\n", "#                                                       variables_to_train=vars_en)", "\n", "self", ".", "train_op_Cen", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Cen", ",", "self", ".", "optimizer_Cen", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_cc_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_su", ",", "self", ".", "optimizer_cc_su", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_un", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_un", ",", "self", ".", "optimizer_cc_un", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_suun", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_suun", ",", "self", ".", "optimizer_cc_suun", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_unsu", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_unsu", ",", "self", ".", "optimizer_cc_unsu", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_auto_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_auto_su", ",", "self", ".", "optimizer_cc_auto_su", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_auto_un", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_auto_un", ",", "self", ".", "optimizer_cc_auto_un", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "\n", "", "self", ".", "summary_op_su", "=", "tf", ".", "summary", ".", "merge", "(", "[", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su_src'", ",", "self", ".", "loss_hot_su_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su_trg'", ",", "self", ".", "loss_hot_su_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su'", ",", "self", ".", "loss_hot_su", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_su_s2t'", ",", "self", ".", "loss_cc_su_s2t", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_su_t2s'", ",", "self", ".", "loss_cc_su_t2s", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_s2t_su'", ",", "self", ".", "loss_cc_s2t_su", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_t2s_su'", ",", "self", ".", "loss_cc_t2s_su", ")", "\n", "]", ")", "\n", "self", ".", "summary_op", "=", "tf", ".", "summary", ".", "merge", "(", "[", "\n", "tf", ".", "summary", ".", "scalar", "(", "'acc_src'", ",", "self", ".", "acc_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'acc_trg'", ",", "self", ".", "acc_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_const_src'", ",", "self", ".", "loss_const_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_const_trg'", ",", "self", ".", "loss_const_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_auto'", ",", "self", ".", "loss_auto", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPD_src'", ",", "self", ".", "loss_isHPD_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPD_trg'", ",", "self", ".", "loss_isHPD_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPD_prior'", ",", "self", ".", "loss_isHPD_prior", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPD_src'", ",", "self", ".", "loss_isCPD_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPD_trg'", ",", "self", ".", "loss_isCPD_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPD_sprior'", ",", "self", ".", "loss_isCPD_sprior", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPD_tprior'", ",", "self", ".", "loss_isCPD_tprior", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPD'", ",", "self", ".", "loss_isCPD", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPen_src'", ",", "self", ".", "loss_isHPen_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPen_trg'", ",", "self", ".", "loss_isHPen_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isHPen'", ",", "self", ".", "loss_isHPen", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPen_src'", ",", "self", ".", "loss_isCPen_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPen_trg'", ",", "self", ".", "loss_isCPen_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_isCPen'", ",", "self", ".", "loss_isCPen", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_un_s2t'", ",", "self", ".", "loss_cc_un_s2t", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_un_t2s'", ",", "self", ".", "loss_cc_un_t2s", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_auto_su_s2s'", ",", "self", ".", "loss_cc_auto_su_s2s", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_auto_su_t2t'", ",", "self", ".", "loss_cc_auto_su_t2t", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_auto_un_s2s'", ",", "self", ".", "loss_cc_auto_un_s2s", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_auto_un_t2t'", ",", "self", ".", "loss_cc_auto_un_t2t", ")", "\n", "# tf.summary.image('image_src', self.image_src),", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data": [[10, 20], ["os.path.join", "print", "print", "open", "pickle.load"], "function", ["None"], ["def", "load_data", "(", "image_dir", ",", "mode", "=", "'train'", ")", ":", "\n", "    ", "image_file", "=", "'train.pkl'", "if", "mode", "==", "'train'", "else", "'test.pkl'", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_file", ")", "\n", "print", "(", "'loading data: %s ...'", "%", "image_dir", ")", "\n", "with", "open", "(", "image_dir", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "images", "=", "data", "[", "'X'", "]", "/", "127.5", "-", "1", "\n", "labels", "=", "data", "[", "'y'", "]", "\n", "print", "(", "'finished loading data: %s!'", "%", "image_dir", ")", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc": [[22, 49], ["list", "numpy.random.shuffle", "range", "range", "int", "sess.run", "numpy.argmax", "numpy.sum", "numpy.zeros", "numpy.zeros", "sess.run", "numpy.argmax", "numpy.sum", "len", "len", "len", "len"], "function", ["None"], ["", "def", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "data_test", ",", "label_test", ",", "batch_size", ")", ":", "\n", "    ", "image_size", "=", "data_test", ".", "shape", "[", "1", "]", "\n", "idxes", "=", "list", "(", "range", "(", "len", "(", "data_test", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "data_test", "=", "data_test", "[", "idxes", "]", "\n", "label_test", "=", "label_test", "[", "idxes", "]", "\n", "total", "=", "0", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "int", "(", "len", "(", "data_test", ")", "/", "batch_size", ")", ")", ":", "\n", "        ", "data_batch", "=", "data_test", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "label_batch", "=", "label_test", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "p", "=", "sess", ".", "run", "(", "prob", ",", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "total", "+=", "batch_size", "\n", "correct", "+=", "np", ".", "sum", "(", "pred", "==", "label_batch", ")", "\n", "", "if", "(", "len", "(", "data_test", ")", "%", "batch_size", ">", "0", ")", ":", "\n", "        ", "num_left", "=", "len", "(", "data_test", ")", "%", "batch_size", "\n", "data_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "label_batch", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "data_batch", "[", ":", "num_left", ",", ":", ",", ":", ",", ":", "]", "=", "data_test", "[", "-", "num_left", ":", "]", "\n", "label_batch", "[", ":", "num_left", "]", "=", "label_test", "[", "-", "num_left", ":", "]", "\n", "p", "=", "sess", ".", "run", "(", "prob", ",", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "total", "+=", "num_left", "\n", "correct", "+=", "np", ".", "sum", "(", "pred", "[", ":", "num_left", "]", "==", "label_batch", "[", ":", "num_left", "]", ")", "\n", "", "acc", "=", "correct", "/", "total", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.train": [[50, 130], ["tf.placeholder", "tf.placeholder", "nets.Encoder_hot", "slim.losses.sparse_softmax_cross_entropy", "tf.train.AdamOptimizer", "slim.learning.create_train_op", "tf.ConfigProto", "classifier.load_data", "classifier.load_data", "tf.Session", "tf.global_variables_initializer().run", "tf.train.Saver", "print", "time.time", "tf.trainable_variables", "classifier.load_data", "classifier.load_data", "classifier.load_data", "np.array.extend", "np.array.extend", "classifier.load_data", "np.array.extend", "np.array.extend", "numpy.array", "numpy.array", "classifier.load_data", "classifier.load_data", "sess.run", "list", "list", "list", "list", "tf.global_variables_initializer", "int", "list", "numpy.random.shuffle", "tf.train.Saver.save", "print", "time.time", "range", "os.path.join", "list", "numpy.random.shuffle", "sess.run", "numpy.argmax", "print", "list", "numpy.random.shuffle", "sess.run", "numpy.argmax", "list", "numpy.random.shuffle", "sess.run", "numpy.argmax", "print", "len", "range", "numpy.sum", "range", "numpy.sum", "range", "numpy.sum", "len", "len", "len", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data"], ["", "def", "train", "(", "image_size", ",", "hot_size", ",", "mode", ",", "svhn_dir", ",", "mnist_dir", ",", "model_dir", ",", "batch_size", ",", "learning_rate", ",", "\n", "max_step", ")", ":", "\n", "    ", "images", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ")", "\n", "_", ",", "logits", ",", "prob", "=", "Encoder_hot", "(", "images", ",", "image_size", ",", "hot_size", ",", "is_training", "=", "True", ",", "name", "=", "mode", ")", "\n", "loss", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "logits", ",", "labels", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ")", "\n", "train_op", "=", "slim", ".", "learning", ".", "create_train_op", "(", "loss", ",", "optimizer", ",", "variables_to_train", "=", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n", "if", "(", "mode", "==", "'svhn'", ")", ":", "\n", "        ", "data_train", ",", "label_train", "=", "load_data", "(", "svhn_dir", ",", "mode", "=", "'train'", ")", "\n", "data_test", ",", "label_test", "=", "load_data", "(", "svhn_dir", ",", "mode", "=", "'test'", ")", "\n", "", "elif", "(", "mode", "==", "'mnist'", ")", ":", "\n", "        ", "data_train", ",", "label_train", "=", "load_data", "(", "mnist_dir", ",", "mode", "=", "'train'", ")", "\n", "data_test", ",", "label_test", "=", "load_data", "(", "mnist_dir", ",", "mode", "=", "'test'", ")", "\n", "", "else", ":", "\n", "        ", "data_train", "=", "[", "]", "\n", "label_train", "=", "[", "]", "\n", "data_tmp", ",", "label_tmp", "=", "load_data", "(", "svhn_dir", ",", "mode", "=", "'train'", ")", "\n", "data_train", ".", "extend", "(", "list", "(", "data_tmp", ")", ")", "\n", "label_train", ".", "extend", "(", "list", "(", "label_tmp", ")", ")", "\n", "data_tmp", ",", "label_tmp", "=", "load_data", "(", "mnist_dir", ",", "mode", "=", "'train'", ")", "\n", "data_train", ".", "extend", "(", "list", "(", "data_tmp", ")", ")", "\n", "label_train", ".", "extend", "(", "list", "(", "label_tmp", ")", ")", "\n", "data_train", "=", "np", ".", "array", "(", "data_train", ")", "\n", "label_train", "=", "np", ".", "array", "(", "label_train", ")", "\n", "svhn_data_test", ",", "svhn_label_test", "=", "load_data", "(", "svhn_dir", ",", "mode", "=", "'test'", ")", "\n", "mnist_data_test", ",", "mnist_label_test", "=", "load_data", "(", "mnist_dir", ",", "mode", "=", "'test'", ")", "\n", "", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "print", "(", "\"start training...\"", ")", "\n", "step", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "while", "(", "step", "<", "max_step", ")", ":", "\n", "            ", "i", "=", "step", "%", "int", "(", "data_train", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "i", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "len", "(", "data_train", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "data_train", "=", "data_train", "[", "idxes", "]", "\n", "label_train", "=", "label_train", "[", "idxes", "]", "\n", "", "data_batch", "=", "data_train", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "label_batch", "=", "label_train", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "feed_dict", "=", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", "\n", "sess", ".", "run", "(", "train_op", ",", "feed_dict", ")", "\n", "step", "+=", "1", "\n", "if", "(", "step", "%", "100", "==", "0", ")", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "model_dir", ",", "mode", "+", "'-classifier'", ")", ",", "global_step", "=", "step", ")", "\n", "print", "(", "'model/'", "+", "mode", "+", "'-classifier-%d saved'", "%", "step", ")", "\n", "if", "(", "mode", "==", "'svhn'", "or", "mode", "==", "'mnist'", ")", ":", "\n", "                    ", "idxes", "=", "list", "(", "range", "(", "len", "(", "data_test", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "data_batch", "=", "data_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "label_batch", "=", "label_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "p", ",", "l", "=", "sess", ".", "run", "(", "[", "prob", ",", "loss", "]", ",", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "acc", "=", "np", ".", "sum", "(", "pred", "==", "label_batch", ")", "/", "batch_size", "\n", "print", "(", "\"[%d/%d]--[loss:%.3f]--[acc on %s:%.3f]--[time used:%.3f]\"", "\n", "%", "(", "step", ",", "max_step", ",", "l", ",", "mode", ",", "acc", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "idxes", "=", "list", "(", "range", "(", "len", "(", "svhn_data_test", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "data_batch", "=", "svhn_data_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "label_batch", "=", "svhn_label_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "p", ",", "l1", "=", "sess", ".", "run", "(", "[", "prob", ",", "loss", "]", ",", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "acc_svhn", "=", "np", ".", "sum", "(", "pred", "==", "label_batch", ")", "/", "batch_size", "\n", "idxes", "=", "list", "(", "range", "(", "len", "(", "mnist_data_test", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "data_batch", "=", "mnist_data_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "label_batch", "=", "mnist_label_test", "[", "idxes", "[", ":", "batch_size", "]", "]", "\n", "p", ",", "l2", "=", "sess", ".", "run", "(", "[", "prob", ",", "loss", "]", ",", "{", "images", ":", "data_batch", ",", "labels", ":", "label_batch", "}", ")", "\n", "l", "=", "(", "l1", "+", "l2", ")", "/", "2.0", "\n", "pred", "=", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "\n", "acc_mnist", "=", "np", ".", "sum", "(", "pred", "==", "label_batch", ")", "/", "batch_size", "\n", "print", "(", "\"[%d/%d]--[loss:%.3f]--[acc on svhn:%.3f]--[acc on mnist:%.3f]--[time used:%.3f]\"", "%", "\n", "(", "step", ",", "max_step", ",", "l", ",", "acc_svhn", ",", "acc_mnist", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.eval": [[131, 189], ["tf.placeholder", "tf.placeholder", "nets.Encoder_hot", "slim.losses.sparse_softmax_cross_entropy", "tf.train.AdamOptimizer", "slim.learning.create_train_op", "tf.ConfigProto", "open", "open.close", "tf.Session", "print", "tf.train.Saver", "tf.train.Saver.restore", "print", "range", "os.path.join", "classifier.load_data", "classifier.load_data", "str", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "classifier.run_acc", "classifier.run_acc", "classifier.run_acc", "classifier.run_acc", "open.write", "open.write", "open.write", "open.write", "classifier.run_acc", "classifier.run_acc", "classifier.run_acc", "classifier.run_acc", "open.write", "open.write", "open.write", "open.write", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "open", "open", "open", "open", "open", "open", "open", "open", "open", "open", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.load_data", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc", "home.repos.pwc.inspect_result.luckycallor_CDAAE.None.classifier.run_acc"], ["", "", "", "", "def", "eval", "(", "image_size", ",", "hot_size", ",", "mode", ",", "svhn_dir", ",", "mnist_dir", ",", "result_dir", ",", "model_path", ",", "batch_size", ",", "\n", "learning_rate", ")", ":", "\n", "    ", "images", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "image_size", ",", "image_size", ",", "3", "]", ")", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ")", "\n", "_", ",", "logits", ",", "prob", "=", "Encoder_hot", "(", "images", ",", "image_size", ",", "hot_size", ",", "is_training", "=", "False", ",", "name", "=", "mode", ")", "\n", "loss", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "logits", ",", "labels", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ")", "\n", "train_op", "=", "slim", ".", "learning", ".", "create_train_op", "(", "loss", ",", "optimizer", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "f_log", "=", "open", "(", "mode", "+", "'_eval.txt'", ",", "'w'", ")", "\n", "root_result_dir", "=", "result_dir", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "print", "(", "\"loading model...\"", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "model_path", ")", "\n", "print", "(", "\"done!\"", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "101", ")", ":", "\n", "            ", "step", "=", "i", "*", "200", "\n", "result_dir", "=", "os", ".", "path", ".", "join", "(", "root_result_dir", ",", "str", "(", "step", ")", ")", "\n", "if", "(", "mode", "==", "'svhn'", "or", "mode", "==", "'both'", ")", ":", "\n", "                ", "p2s_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2s_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "p2s_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2s_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "s2s_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2s_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "s2s_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2s_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "t2s_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2s_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "t2s_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2s_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "", "if", "(", "mode", "==", "'mnist'", "or", "mode", "==", "'both'", ")", ":", "\n", "                ", "p2t_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2t_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "p2t_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'p2t_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "t2t_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2t_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "t2t_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'t2t_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "s2t_data", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2t_image'", ")", ",", "'rb'", ")", ")", ")", "\n", "s2t_label", "=", "np", ".", "array", "(", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'s2t_label'", ")", ",", "'rb'", ")", ")", ")", "\n", "", "svhn_data_test", ",", "svhn_label_test", "=", "load_data", "(", "svhn_dir", ",", "mode", "=", "'test'", ")", "\n", "mnist_data_test", ",", "mnist_label_test", "=", "load_data", "(", "mnist_dir", ",", "mode", "=", "'test'", ")", "\n", "if", "(", "mode", "==", "'svhn'", "or", "mode", "==", "'both'", ")", ":", "\n", "                ", "svhn_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "svhn_data_test", ",", "svhn_label_test", ",", "\n", "batch_size", ")", "\n", "p2s_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "p2s_data", ",", "p2s_label", ",", "batch_size", ")", "\n", "s2s_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "s2s_data", ",", "s2s_label", ",", "batch_size", ")", "\n", "t2s_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "t2s_data", ",", "t2s_label", ",", "batch_size", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on svhn test data: %f\\n\"", "%", "svhn_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on p2s data: %f\\n\"", "%", "p2s_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on s2s data: %f\\n\"", "%", "s2s_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on t2s data: %f\\n\"", "%", "t2s_acc", ")", "\n", "", "if", "(", "mode", "==", "'mnist'", "or", "mode", "==", "'both'", ")", ":", "\n", "                ", "mnist_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "mnist_data_test", ",", "mnist_label_test", ",", "\n", "batch_size", ")", "\n", "p2t_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "p2t_data", ",", "p2t_label", ",", "batch_size", ")", "\n", "t2t_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "t2t_data", ",", "t2t_label", ",", "batch_size", ")", "\n", "s2t_acc", "=", "run_acc", "(", "sess", ",", "prob", ",", "images", ",", "labels", ",", "s2t_data", ",", "s2t_label", ",", "batch_size", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on mnist test data: %f\\n\"", "%", "mnist_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on p2t data: %f\\n\"", "%", "p2t_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on t2t data: %f\\n\"", "%", "t2t_acc", ")", "\n", "f_log", ".", "write", "(", "\"classifier acc on s2t data: %f\\n\"", "%", "s2t_acc", ")", "\n", "", "", "", "f_log", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot": [[4, 35], ["int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.flatten", "tensorflow.fully_connected", "tensorflow.nn.softmax", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["def", "Encoder_hot", "(", "images", ",", "image_size", ",", "hot_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Encoder_hot'", ")", ":", "\n", "# image_size = 32", "\n", "    ", "init_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d", "(", "images", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv1'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv2'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 128]", "\n", "mid", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "mid", ",", "256", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, image_size/8, image_size/8, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "init_size", ",", "init_size", "]", ",", "padding", "=", "'VALID'", ",", "scope", "=", "'conv4'", ")", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn4'", ")", "\n", "fmap", "=", "slim", ".", "flatten", "(", "net", ")", "# [batch_size, 128]", "\n", "logits", "=", "slim", ".", "fully_connected", "(", "fmap", ",", "hot_size", ",", "activation_fn", "=", "None", ",", "scope", "=", "'logits'", ")", "\n", "# [batch_size, hot_size]", "\n", "hot_code", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", ",", "name", "=", "'hot_code'", ")", "\n", "# hot_code = tf.nn.sigmoid(logits)", "\n", "return", "mid", ",", "logits", ",", "hot_code", "\n", "\n", "", "", "", "", "def", "Encoder_calm", "(", "mid", ",", "calm_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Encoder_calm'", ")", ":", "\n", "# mid_size = 8", "\n", "    ", "final_size", "=", "4", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_calm": [[36, 58], ["tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.flatten", "tensorflow.fully_connected", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d", "(", "mid", ",", "256", ",", "[", "1", ",", "1", "]", ",", "stride", "=", "1", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, mid_size, mid_size, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv4'", ")", "\n", "# [batch_size, mid_size/2, mid_size/2, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn4'", ")", "\n", "calm_code", "=", "slim", ".", "conv2d", "(", "net", ",", "calm_size", ",", "[", "final_size", ",", "final_size", "]", ",", "\n", "padding", "=", "'VALID'", ",", "scope", "=", "'conv5'", ")", "\n", "# [batch_size, 1, 1, calm_size]", "\n", "calm_code", "=", "slim", ".", "flatten", "(", "calm_code", ")", "# [batch_size, calm_size]", "\n", "return", "calm_code", "\n", "\n", "", "", "", "", "def", "Decoder_hot", "(", "hot_code", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_hot'", ")", ":", "\n", "    ", "init_size", "=", "int", "(", "image_size", "/", "4", ")", "\n", "# hot_code = tf.log(hot_code)  # [batch_size, hot_size]", "\n", "hot_code", "=", "slim", ".", "fully_connected", "(", "hot_code", ",", "128", ",", "activation_fn", "=", "None", ")", "# [batch_size, 128]", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "hot_code", ",", "1", ")", "# [batch_size, 1, 128]", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "inputs", ",", "1", ",", "name", "=", "'inputs'", ")", "# [batch_size, 1, 1, 128]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_hot": [[59, 78], ["int", "tensorflow.fully_connected", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "64", ",", "[", "init_size", ",", "init_size", "]", ",", "padding", "=", "'VALID'", ",", "\n", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "32", ",", "[", "3", ",", "3", "]", ",", "padding", "=", "'SAME'", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "return", "net", "\n", "\n", "", "", "", "", "def", "Decoder_calm", "(", "calm_code", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_calm'", ")", ":", "\n", "    ", "mid_size", "=", "int", "(", "image_size", "/", "2", ")", "\n", "batch_size", "=", "100", "\n", "inputs", "=", "slim", ".", "fully_connected", "(", "calm_code", ",", "mid_size", "*", "mid_size", "*", "16", ",", "activation_fn", "=", "None", ")", "\n", "# [batch_size, mid_size*mid_size*16]", "\n", "inputs", "=", "tf", ".", "reshape", "(", "inputs", ",", "[", "batch_size", ",", "mid_size", ",", "mid_size", ",", "16", "]", ")", "\n", "# [batch_size, mid_size, mid_size, 16]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "1", ",", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_calm": [[79, 98], ["int", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "32", ",", "[", "1", ",", "1", "]", ",", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, mid_size, mid_size, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "32", ",", "[", "2", ",", "2", "]", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, mid_size, mid_size, 32]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "return", "net", "\n", "\n", "", "", "", "", "def", "Decoder_image", "(", "mid_hot", ",", "mid_calm", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "name", "=", "'Decoder_image'", ")", ":", "\n", "    ", "inputs", "=", "tf", ".", "concat", "(", "[", "mid_hot", ",", "mid_calm", "]", ",", "axis", "=", "3", ")", "# [batch_size, mid_size, mid_size, 64]", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "32", ",", "[", "3", ",", "3", "]", ",", "stride", "=", "2", ",", "scope", "=", "'conv_t3'", ")", "\n", "# [batch_size, image_size, image_size, 32]", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_image": [[99, 113], ["tensorflow.concat", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "[", "1", ",", "1", "]", ",", "activation_fn", "=", "tf", ".", "tanh", ",", "stride", "=", "1", ",", "\n", "scope", "=", "'conv_t4'", ")", "\n", "# [batch_size, image_size, image_size, 3]", "\n", "return", "net", "\n", "\n", "", "", "", "", "def", "Decoder_ctnn_shallow", "(", "latent_code", ",", "image_size", ",", "code_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "\n", "name", "=", "'Decoder_cnnt_shallow'", ")", ":", "\n", "# latent_code: [batch_size, code_size]", "\n", "    ", "inputs", "=", "tf", ".", "expand_dims", "(", "latent_code", ",", "1", ")", "\n", "inputs", "=", "tf", ".", "expand_dims", "(", "inputs", ",", "1", ",", "name", "=", "'inputs'", ")", "# [batch_size, 1, 1, code_size]", "\n", "init_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d_transpose", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow": [[114, 149], ["tensorflow.expand_dims", "tensorflow.expand_dims", "int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "tensorflow.conv2d_transpose", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n", "                ", "net", "=", "slim", ".", "conv2d_transpose", "(", "inputs", ",", "128", ",", "[", "init_size", ",", "init_size", "]", ",", "\n", "padding", "=", "'VALID'", ",", "scope", "=", "'conv_t1'", ")", "\n", "# [batch_size, init_size, init_size, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "256", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv_t2'", ")", "\n", "# [batch_size, 2*init_size, 2*init_size, 256]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv_t3'", ")", "\n", "# [batch_size, 4*init_szie, 4*init_size, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "[", "3", ",", "3", "]", ",", "activation_fn", "=", "tf", ".", "nn", ".", "tanh", ",", "\n", "scope", "=", "'conv_t4'", ")", "\n", "# [batch_size, image_size, image_size, 3]", "\n", "return", "net", "\n", "\n", "", "", "", "", "def", "Discriminator_lc_fn", "(", "latent_code", ",", "code_size", ",", "reuse", "=", "False", ",", "name", "=", "'Discriminator_lc_fn'", ")", ":", "\n", "# latent_code: [batch_size, code_size]", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ")", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "latent_code", ",", "256", ",", "scope", "=", "'fn1'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "64", ",", "scope", "=", "'fn2'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "16", ",", "scope", "=", "'fn3'", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ",", "scope", "=", "'logits'", ")", "\n", "return", "net", "\n", "\n", "", "", "", "def", "Discriminator_image_cnn", "(", "images", ",", "image_size", ",", "reuse", "=", "False", ",", "is_training", "=", "True", ",", "\n", "name", "=", "'Discriminator_image_cnn'", ")", ":", "\n", "# images: [batch_size, image_size, image_size, 3]", "\n", "    ", "final_size", "=", "int", "(", "image_size", "/", "8", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", "]", ",", "padding", "=", "'SAME'", ",", "activation_fn", "=", "None", ",", "stride", "=", "2", ",", "\n", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", ":", "\n", "            ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "decay", "=", "0.95", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "is_training", "=", "is_training", ")", ":", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn": [[150, 159], ["tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["None"], ["                ", "net", "=", "slim", ".", "conv2d", "(", "images", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv1'", ")", "\n", "# [batch_size, image_size/2, image_size/2, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn1'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "128", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv2'", ")", "\n", "# [batch_size, image_size/4, image_size/4, 128]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn2'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "64", ",", "[", "3", ",", "3", "]", ",", "scope", "=", "'conv3'", ")", "\n", "# [batch_size, image_size/8, image_size/8, 64]", "\n", "net", "=", "slim", ".", "batch_norm", "(", "net", ",", "scope", "=", "'bn3'", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "1", ",", "[", "final_size", ",", "final_size", "]", ",", "padding", "=", "'VALID'", ",", "scope", "=", "'conv4'", ")", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_image_cnn": [[160, 183], ["int", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.conv2d", "tensorflow.flatten", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["# [batch_size, 1, 1, 1]", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ",", "scope", "=", "'logits'", ")", "\n", "# [batch_size, 1]", "\n", "return", "net", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images": [[11, 22], ["int", "numpy.zeros", "enumerate", "numpy.sqrt", "zip"], "function", ["None"], ["def", "merge_images", "(", "batch_size", ",", "sources", ",", "targets", ",", "k", "=", "10", ")", ":", "\n", "    ", "_", ",", "h", ",", "w", ",", "_", "=", "sources", ".", "shape", "\n", "row", "=", "int", "(", "np", ".", "sqrt", "(", "batch_size", ")", ")", "\n", "merged", "=", "np", ".", "zeros", "(", "[", "row", "*", "h", ",", "row", "*", "w", "*", "2", ",", "3", "]", ")", "\n", "\n", "for", "idx", ",", "(", "s", ",", "t", ")", "in", "enumerate", "(", "zip", "(", "sources", ",", "targets", ")", ")", ":", "\n", "        ", "i", "=", "idx", "//", "row", "\n", "j", "=", "idx", "%", "row", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", ")", "*", "h", ":", "(", "j", "*", "2", "+", "1", ")", "*", "h", ",", ":", "]", "=", "s", "\n", "merged", "[", "i", "*", "h", ":", "(", "i", "+", "1", ")", "*", "h", ",", "(", "j", "*", "2", "+", "1", ")", "*", "h", ":", "(", "j", "*", "2", "+", "2", ")", "*", "h", ",", ":", "]", "=", "t", "\n", "", "return", "merged", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.train": [[23, 184], ["model.Model", "model.Model.build", "tensorflow.ConfigProto", "tensorflow.gfile.Exists", "tensorflow.gfile.MakeDirs", "print", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "print", "np.array.extend", "numpy.array", "np.array.extend", "numpy.array", "np.array.extend", "numpy.array", "np.array.extend", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.random.shuffle", "numpy.random.shuffle", "tensorflow.gfile.DeleteRecursively", "open", "open", "open", "open", "open", "open", "open", "open", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.summary.FileWriter", "tensorflow.train.Saver", "print", "tf.summary.FileWriter.close", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "time.time", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.add_summary", "print", "time.time", "tensorflow.global_variables_initializer", "tensorflow.get_default_graph", "int", "list", "numpy.random.shuffle", "int", "list", "numpy.random.shuffle", "tf.train.Saver.save", "print", "numpy.random.randint", "numpy.random.randn", "numpy.zeros", "numpy.resize", "numpy.zeros", "numpy.resize", "numpy.array", "numpy.array", "sess.run", "train.merge_images", "train.merge_images", "train.merge_images", "train.merge_images", "train.merge_images", "train.merge_images", "train.merge_images", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "scipy.misc.imsave", "range", "range", "os.path.join", "numpy.random.randn", "numpy.random.randint", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "list", "list", "time.time"], "function", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.build", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.train.merge_images"], ["", "def", "train", "(", "image_size", ",", "cat_num", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ",", "batch_size", ",", "\n", "train_iters", ",", "data_dir", ",", "log_dir", ",", "model_dir", ",", "sample_dir", ")", ":", "\n", "    ", "m", "=", "Model", "(", "cat_num", "=", "cat_num", ",", "image_size", "=", "image_size", ",", "hot_size", "=", "hot_size", ",", "calm_size_src", "=", "calm_size_src", ",", "\n", "calm_size_trg", "=", "calm_size_trg", ",", "learning_rate", "=", "learning_rate", ")", "\n", "m", ".", "build", "(", "is_training", "=", "True", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "0.5", ",", "beta2", "=", "0.5", ",", "\n", "beta3", "=", "0.5", ",", "gamma1", "=", "1.0", ",", "gamma2", "=", "1.0", ",", "lambda1", "=", "1.0", ",", "lambda2", "=", "1.0", ",", "eta1", "=", "1.0", ",", "eta2", "=", "1.0", ")", "\n", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n", "if", "tf", ".", "gfile", ".", "Exists", "(", "log_dir", ")", ":", "\n", "        ", "tf", ".", "gfile", ".", "DeleteRecursively", "(", "log_dir", ")", "\n", "", "tf", ".", "gfile", ".", "MakeDirs", "(", "log_dir", ")", "\n", "\n", "print", "(", "\"loading data...\"", ")", "\n", "vis_images_train", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'image_vis_train'", ")", ",", "'rb'", ")", ")", "\n", "vis_labels_train", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'label_vis_train'", ")", ",", "'rb'", ")", ")", "\n", "vis_images_test", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'image_vis_test'", ")", ",", "'rb'", ")", ")", "\n", "vis_labels_test", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'label_vis_test'", ")", ",", "'rb'", ")", ")", "\n", "nir_images_train", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'image_nir_train'", ")", ",", "'rb'", ")", ")", "\n", "nir_labels_train", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'label_nir_train'", ")", ",", "'rb'", ")", ")", "\n", "nir_images_test", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'image_nir_test'", ")", ",", "'rb'", ")", ")", "\n", "nir_labels_test", "=", "pickle", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'label_nir_test'", ")", ",", "'rb'", ")", ")", "\n", "print", "(", "\"done!\"", ")", "\n", "vis_images_train", ".", "extend", "(", "vis_images_test", "[", "100", ":", "]", ")", "\n", "vis_images_train", "=", "np", ".", "array", "(", "vis_images_train", ")", "\n", "vis_images_train", "=", "vis_images_train", "/", "127.5", "-", "1", "\n", "vis_labels_train", ".", "extend", "(", "vis_labels_test", "[", "100", ":", "]", ")", "\n", "vis_labels_train", "=", "np", ".", "array", "(", "vis_labels_train", ")", "\n", "nir_images_train", ".", "extend", "(", "nir_images_test", "[", "100", ":", "]", ")", "\n", "nir_images_train", "=", "np", ".", "array", "(", "nir_images_train", ")", "\n", "nir_images_train", "=", "nir_images_train", "/", "127.5", "-", "1", "\n", "nir_labels_train", ".", "extend", "(", "nir_labels_test", "[", "100", ":", "]", ")", "\n", "nir_labels_train", "=", "np", ".", "array", "(", "nir_labels_train", ")", "\n", "vis_images_test", "=", "np", ".", "array", "(", "vis_images_test", "[", ":", "100", "]", ")", "\n", "vis_images_test", "=", "vis_images_test", "/", "127.5", "-", "1", "\n", "vis_labels_test", "=", "np", ".", "array", "(", "vis_labels_test", "[", ":", "100", "]", ")", "\n", "nir_images_test", "=", "np", ".", "array", "(", "nir_images_test", "[", ":", "100", "]", ")", "\n", "nir_images_test", "=", "nir_images_test", "/", "127.5", "-", "1", "\n", "nir_labels_test", "=", "np", ".", "array", "(", "nir_labels_test", "[", ":", "100", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "vis_images_test", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "nir_images_test", ")", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", "=", "log_dir", ",", "graph", "=", "tf", ".", "get_default_graph", "(", ")", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "print", "(", "\"start training...\"", ")", "\n", "step", "=", "0", "\n", "while", "(", "step", "<", "train_iters", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "i", "=", "step", "%", "int", "(", "vis_images_train", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "i", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "vis_images_train", ".", "shape", "[", "0", "]", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "vis_images_train", "=", "vis_images_train", "[", "idxes", "]", "\n", "vis_labels_train", "=", "vis_labels_train", "[", "idxes", "]", "\n", "", "src_images", "=", "vis_images_train", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "src_labels", "=", "vis_labels_train", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "j", "=", "step", "%", "int", "(", "nir_images_train", ".", "shape", "[", "0", "]", "/", "batch_size", ")", "\n", "if", "(", "j", "==", "0", ")", ":", "\n", "                ", "idxes", "=", "list", "(", "range", "(", "nir_images_train", ".", "shape", "[", "0", "]", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxes", ")", "\n", "nir_images_train", "=", "nir_images_train", "[", "idxes", "]", "\n", "nir_labels_train", "=", "nir_labels_train", "[", "idxes", "]", "\n", "", "trg_images", "=", "nir_images_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", "\n", "trg_labels", "=", "nir_labels_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", "\n", "# i = step % int(photo_images.shape[0] / batch_size)", "\n", "# if(i == 0):", "\n", "#     np.random.shuffle(photo_images)", "\n", "# src_images = photo_images[i * batch_size:(i + 1) * batch_size]", "\n", "# j = step % int(carct_images.shape[0] / batch_size)", "\n", "# if(j == 0):", "\n", "#     np.random.shuffle(carct_images)", "\n", "# trg_images = carct_images[j * batch_size:(j + 1) * batch_size]", "\n", "# hot_code = np.random.randn(batch_size, hot_size)", "\n", "# hot_code = np.random.randint(0, 2, [batch_size, hot_size])", "\n", "# hot_code = np.zeros([batch_size, hot_size])", "\n", "# hot_code[range(batch_size), np.random.randint(0, hot_size, batch_size)] = 1", "\n", "hot_code", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "hot_size", ")", "\n", "# calm_code_src = np.random.randint(0, 2, [batch_size, calm_size_src])", "\n", "# calm_code_trg = np.random.randint(0, 2, [batch_size, calm_size_trg])", "\n", "calm_code_src", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_src", ")", "\n", "calm_code_trg", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "calm_size_trg", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_images", ",", "\n", "m", ".", "image_trg", ":", "trg_images", ",", "\n", "m", ".", "label_src", ":", "src_labels", ",", "\n", "m", ".", "label_trg", ":", "trg_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "# sess.run([m.train_op_auto, m.train_op_D, m.train_op_Hen, m.train_op_Cen, m.train_op_cc_un],", "\n", "#          feed_dict)", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_D", ",", "m", ".", "train_op_Cen", "]", ",", "feed_dict", ")", "\n", "_", ",", "summary_su", "=", "sess", ".", "run", "(", "[", "m", ".", "train_op_su", ",", "m", ".", "summary_op_su", "]", ",", "feed_dict", ")", "\n", "sess", ".", "run", "(", "[", "m", ".", "train_op_auto", ",", "m", ".", "train_op_cc_su", "]", ",", "feed_dict", ")", "\n", "# feed_dict = {m.image_src: src_images,", "\n", "#              m.image_trg: trg_images,", "\n", "#              m.label_src: src_labels_su,", "\n", "#              m.label_trg: trg_labels_su,", "\n", "#              m.prior_hot: hot_code,", "\n", "#              m.prior_calm_src: calm_code_src,", "\n", "#              m.prior_calm_trg: calm_code_trg}", "\n", "# sess.run([m.train_op_auto, m.train_op_D, m.train_op_en], feed_dict)", "\n", "summary", "=", "sess", ".", "run", "(", "m", ".", "summary_op", ",", "feed_dict", ")", "\n", "step", "+=", "1", "\n", "summary_writer", ".", "add_summary", "(", "summary_su", ",", "step", ")", "\n", "summary_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "print", "(", "\"step: %d, time used: %.3f\"", "%", "(", "step", ",", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "(", "step", "%", "100", "==", "0", ")", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'m'", ")", ",", "global_step", "=", "step", ")", "\n", "print", "(", "'model/m-%d saved'", "%", "step", ")", "\n", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "# hot_code = np.zeros([10, 10, hot_size])", "\n", "# hot_code[:] = np.random.randn(10, hot_size)[:, None, :]", "\n", "# hot_code = np.resize(hot_code, [batch_size, hot_size])", "\n", "# hot_code = np.zeros([batch_size, hot_size])", "\n", "# hot_code[range(batch_size), np.random.randint(0, hot_size, batch_size)] = 1", "\n", "hot_code", "=", "np", ".", "random", ".", "randn", "(", "batch_size", ",", "hot_size", ")", "\n", "calm_code_src", "=", "np", ".", "zeros", "(", "[", "10", ",", "10", ",", "calm_size_src", "]", ")", "\n", "calm_code_src", "[", ":", "]", "=", "np", ".", "random", ".", "randn", "(", "10", ",", "calm_size_src", ")", "[", ":", ",", "None", ",", ":", "]", "\n", "calm_code_src", "=", "np", ".", "resize", "(", "calm_code_src", ",", "[", "batch_size", ",", "calm_size_src", "]", ")", "\n", "calm_code_trg", "=", "np", ".", "zeros", "(", "[", "10", ",", "10", ",", "calm_size_trg", "]", ")", "\n", "calm_code_trg", "[", ":", "]", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "[", "10", ",", "calm_size_trg", "]", ")", "[", ":", ",", "None", ",", ":", "]", "\n", "calm_code_trg", "=", "np", ".", "resize", "(", "calm_code_trg", ",", "[", "batch_size", ",", "calm_size_trg", "]", ")", "\n", "src_images", "=", "np", ".", "array", "(", "list", "(", "vis_images_test", "[", "k", "*", "10", ":", "(", "k", "+", "1", ")", "*", "10", "]", ")", "*", "10", ")", "\n", "trg_images", "=", "np", ".", "array", "(", "list", "(", "nir_images_test", "[", "k", "*", "10", ":", "(", "k", "+", "1", ")", "*", "10", "]", ")", "*", "10", ")", "\n", "feed_dict", "=", "{", "m", ".", "image_src", ":", "src_images", ",", "\n", "m", ".", "image_trg", ":", "trg_images", ",", "\n", "m", ".", "label_src", ":", "src_labels", ",", "\n", "m", ".", "label_trg", ":", "trg_labels", ",", "\n", "m", ".", "prior_hot", ":", "hot_code", ",", "\n", "m", ".", "prior_calm_src", ":", "calm_code_src", ",", "\n", "m", ".", "prior_calm_trg", ":", "calm_code_trg", "}", "\n", "fsrc_from_src", ",", "ftrg_from_trg", ",", "gsrc_from_src", ",", "gtrg_from_trg", ",", "gsrc_from_trg", ",", "gtrg_from_src", ",", "gsrc_from_prior", ",", "gtrg_from_prior", "=", "sess", ".", "run", "(", "[", "m", ".", "fsrc_from_src", ",", "\n", "m", ".", "ftrg_from_trg", ",", "\n", "m", ".", "gsrc_from_src", ",", "\n", "m", ".", "gtrg_from_trg", ",", "\n", "m", ".", "gsrc_from_trg", ",", "\n", "m", ".", "gtrg_from_src", ",", "\n", "m", ".", "gsrc_from_prior", ",", "\n", "m", ".", "gtrg_from_prior", "]", ",", "feed_dict", ")", "\n", "merged_fsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_images", ",", "fsrc_from_src", ")", "\n", "merged_ftrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_images", ",", "ftrg_from_trg", ")", "\n", "merged_gsrc_from_src", "=", "merge_images", "(", "batch_size", ",", "src_images", ",", "gsrc_from_src", ")", "\n", "merged_gtrg_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_images", ",", "gtrg_from_trg", ")", "\n", "merged_gsrc_from_trg", "=", "merge_images", "(", "batch_size", ",", "trg_images", ",", "gsrc_from_trg", ")", "\n", "merged_gtrg_from_src", "=", "merge_images", "(", "batch_size", ",", "src_images", ",", "gtrg_from_src", ")", "\n", "merged_image_from_prior", "=", "merge_images", "(", "batch_size", ",", "gsrc_from_prior", ",", "gtrg_from_prior", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'fsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_fsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'ftrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_ftrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_src-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_trg-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gsrc_from_trg-%d.png'", "%", "step", ")", ",", "merged_gsrc_from_trg", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'gtrg_from_src-%d.png'", "%", "step", ")", ",", "merged_gtrg_from_src", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "os", ".", "path", ".", "join", "(", "sample_dir", ",", "'image_from_prior-%d.png'", "%", "step", ")", ",", "merged_image_from_prior", ")", "\n", "", "", "summary_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.__init__": [[5, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_size", ",", "hot_size", ",", "calm_size_src", ",", "calm_size_trg", ",", "learning_rate", ")", ":", "\n", "        ", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "hot_size", "=", "hot_size", "\n", "self", ".", "calm_size_src", "=", "calm_size_src", "\n", "self", ".", "calm_size_trg", "=", "calm_size_trg", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "\n", "", "def", "build", "(", "self", ",", "is_training", "=", "True", ",", "alpha1", "=", "1.0", ",", "alpha2", "=", "1.0", ",", "alpha3", "=", "1.0", ",", "alpha4", "=", "1.0", ",", "beta1", "=", "1.0", ",", "\n"]], "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.model.Model.build": [[13, 293], ["tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "nets.Encoder_hot", "nets.Encoder_hot", "nets.Encoder_calm", "nets.Encoder_calm", "tf.cast", "tf.cast", "tf.reduce_mean", "tf.reduce_mean", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "tf.concat", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Decoder_ctnn_shallow", "nets.Encoder_hot", "nets.Encoder_hot", "tf.cast", "tf.cast", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "tf.reduce_mean", "tf.reduce_mean", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "nets.Discriminator_lc_fn", "slim.losses.sparse_softmax_cross_entropy", "slim.losses.sparse_softmax_cross_entropy", "tf.reduce_mean", "tf.reduce_mean", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "slim.losses.sigmoid_cross_entropy", "tf.summary.merge", "tf.summary.merge", "tf.arg_max", "tf.arg_max", "tf.cast", "tf.cast", "tf.arg_max", "tf.arg_max", "tf.square", "tf.square", "tf.square", "tf.square", "tf.zeros_like", "tf.zeros_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.zeros_like", "tf.zeros_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.ones_like", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.trainable_variables", "vars_auto.extend", "vars_auto.extend", "vars_auto_c.extend", "vars_auto_c.extend", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "slim.learning.create_train_op", "tf.equal", "tf.equal", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.scalar"], "methods", ["home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_calm", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_calm", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Decoder_ctnn_shallow", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Encoder_hot", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn", "home.repos.pwc.inspect_result.luckycallor_CDAAE.vis-nir.nets.Discriminator_lc_fn"], ["beta2", "=", "1.0", ",", "beta3", "=", "1.0", ",", "gamma1", "=", "1.0", ",", "gamma2", "=", "1.0", ",", "lambda1", "=", "1.0", ",", "lambda2", "=", "1.0", ",", "eta1", "=", "1.0", ",", "eta2", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "image_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "image_size", ",", "self", ".", "image_size", ",", "3", "]", ",", "\n", "name", "=", "'image_src'", ")", "\n", "self", ".", "image_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "image_size", ",", "self", ".", "image_size", ",", "3", "]", ",", "\n", "name", "=", "'image_trg'", ")", "\n", "self", ".", "label_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'label_src'", ")", "\n", "self", ".", "label_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'label_trg'", ")", "\n", "self", ".", "prior_hot", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "hot_size", "]", ",", "name", "=", "'prior_hot'", ")", "\n", "self", ".", "prior_calm_src", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "calm_size_src", "]", ",", "\n", "name", "=", "'prior_calm_src'", ")", "\n", "self", ".", "prior_calm_trg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "calm_size_trg", "]", ",", "\n", "name", "=", "'prior_calm_trg'", ")", "\n", "\n", "self", ".", "code_mid_src", ",", "self", ".", "logits_src", ",", "self", ".", "hot_src", "=", "Encoder_hot", "(", "self", ".", "image_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "is_training", "=", "is_training", ",", "\n", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_trg", ",", "self", ".", "logits_trg", ",", "self", ".", "hot_trg", "=", "Encoder_hot", "(", "self", ".", "image_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "calm_src", "=", "Encoder_calm", "(", "self", ".", "code_mid_src", ",", "self", ".", "calm_size_src", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_calm_src'", ")", "\n", "self", ".", "calm_trg", "=", "Encoder_calm", "(", "self", ".", "code_mid_trg", ",", "self", ".", "calm_size_trg", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_calm_trg'", ")", "\n", "\n", "self", ".", "pred_src", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_src", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "pred_trg", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_trg", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "acc_src", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "self", ".", "pred_src", ",", "self", ".", "label_src", ")", ",", "tf", ".", "float32", ")", ")", "\n", "self", ".", "acc_trg", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "self", ".", "pred_trg", ",", "self", ".", "label_trg", ")", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "if", "(", "is_training", "==", "False", ")", ":", "\n", "            ", "self", ".", "hot_src", "=", "tf", ".", "one_hot", "(", "self", ".", "pred_src", ",", "self", ".", "hot_size", ")", "\n", "self", ".", "hot_trg", "=", "tf", ".", "one_hot", "(", "self", ".", "pred_trg", ",", "self", ".", "hot_size", ")", "\n", "\n", "", "self", ".", "code_src", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_trg", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_s2s", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_t2t", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_s2t", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_src", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_t2s", "=", "tf", ".", "concat", "(", "[", "self", ".", "hot_trg", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_sprior", "=", "tf", ".", "concat", "(", "[", "self", ".", "prior_hot", ",", "self", ".", "prior_calm_src", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "code_tprior", "=", "tf", ".", "concat", "(", "[", "self", ".", "prior_hot", ",", "self", ".", "prior_calm_trg", "]", ",", "axis", "=", "1", ")", "\n", "\n", "self", ".", "fsrc_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_src", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "ftrg_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_trg", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_s2s", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_t2t", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_trg", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_t2s", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_src", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_s2t", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "self", ".", "gsrc_from_prior", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_sprior", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_src'", ")", "\n", "self", ".", "gtrg_from_prior", "=", "Decoder_ctnn_shallow", "(", "self", ".", "code_tprior", ",", "self", ".", "image_size", ",", "\n", "self", ".", "hot_size", "+", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Decoder_trg'", ")", "\n", "\n", "self", ".", "code_mid_s2t", ",", "self", ".", "logits_s2t", ",", "self", ".", "hot_s2t", "=", "Encoder_hot", "(", "self", ".", "gtrg_from_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_t2s", ",", "self", ".", "logits_t2s", ",", "self", ".", "hot_t2s", "=", "Encoder_hot", "(", "self", ".", "gsrc_from_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_s2s", ",", "self", ".", "logits_s2s", ",", "self", ".", "hot_s2s", "=", "Encoder_hot", "(", "self", ".", "gsrc_from_src", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "self", ".", "code_mid_t2t", ",", "self", ".", "logits_t2t", ",", "self", ".", "hot_t2t", "=", "Encoder_hot", "(", "self", ".", "gtrg_from_trg", ",", "self", ".", "image_size", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "name", "=", "'Encoder_hot'", ")", "\n", "\n", "self", ".", "pred_s2t", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_s2t", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "self", ".", "pred_t2s", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "self", ".", "hot_t2s", ",", "1", ")", ",", "tf", ".", "int32", ")", "\n", "\n", "self", ".", "loss_cc_su_s2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2t", ",", "self", ".", "label_src", ")", "\n", "self", ".", "loss_cc_su_t2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2s", ",", "self", ".", "label_trg", ")", "\n", "self", ".", "loss_cc_s2t_su", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_src", ",", "self", ".", "pred_s2t", ")", "\n", "self", ".", "loss_cc_t2s_su", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_trg", ",", "self", ".", "pred_t2s", ")", "\n", "self", ".", "loss_cc_un_s2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2t", ",", "self", ".", "pred_src", ")", "\n", "self", ".", "loss_cc_un_t2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2s", ",", "self", ".", "pred_trg", ")", "\n", "self", ".", "loss_cc_auto_su_s2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2s", ",", "self", ".", "label_src", ")", "\n", "self", ".", "loss_cc_auto_su_t2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2t", ",", "self", ".", "label_trg", ")", "\n", "self", ".", "loss_cc_auto_un_s2s", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_s2s", ",", "self", ".", "pred_src", ")", "\n", "self", ".", "loss_cc_auto_un_t2t", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_t2t", ",", "self", ".", "pred_trg", ")", "\n", "\n", "# self.fsrc_mid_hsrc = Decoder_hot(self.hot_src, self.image_size, is_training=is_training,", "\n", "#                                  name='Decoder_hot')", "\n", "# self.ftrg_mid_htrg = Decoder_hot(self.hot_trg, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.fsrc_mid_csrc = Decoder_calm(self.calm_src, self.image_size, is_training=is_training,", "\n", "#                                   name='Decoder_calm_src')", "\n", "# self.ftrg_mid_ctrg = Decoder_calm(self.calm_trg, self.image_size, is_training=is_training,", "\n", "#                                   name='Decoder_calm_trg')", "\n", "# self.fsrc_from_src = Decoder_image(self.fsrc_mid_hsrc, self.fsrc_mid_csrc,", "\n", "#                                    is_training=is_training, name='Decoder_image_src')", "\n", "# self.ftrg_from_trg = Decoder_image(self.ftrg_mid_htrg, self.ftrg_mid_ctrg,", "\n", "#                                    is_training=is_training, name='Decoder_image_trg')", "\n", "#", "\n", "# self.gsrc_mid_htrg = Decoder_hot(self.hot_trg, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.gtrg_mid_hsrc = Decoder_hot(self.hot_src, self.image_size, is_training=is_training,", "\n", "#                                  reuse=True, name='Decoder_hot')", "\n", "# self.gsrc_mid_cprior = Decoder_calm(self.prior_calm_src, self.image_size, reuse=True,", "\n", "#                                     is_training=is_training, name='Decoder_calm_src')", "\n", "# self.gtrg_mid_cprior = Decoder_calm(self.prior_calm_trg, self.image_size, reuse=True,", "\n", "#                                     is_training=is_training, name='Decoder_calm_trg')", "\n", "# self.gsrc_from_trg = Decoder_image(self.gsrc_mid_htrg, self.gsrc_mid_cprior, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_image_src')", "\n", "# self.gtrg_from_src = Decoder_image(self.gtrg_mid_hsrc, self.gtrg_mid_cprior, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_image_trg')", "\n", "#", "\n", "# self.gsrc_mid_hprior = Decoder_hot(self.prior_hot, self.image_size, reuse=True,", "\n", "#                                    is_training=is_training, name='Decoder_hot')", "\n", "# self.gtrg_mid_hprior = self.gsrc_mid_hprior", "\n", "# self.gsrc_from_prior = Decoder_image(self.gsrc_mid_hprior, self.gsrc_mid_cprior, reuse=True,", "\n", "#                                      is_training=is_training, name='Decoder_image_src')", "\n", "# self.gtrg_from_prior = Decoder_image(self.gtrg_mid_hprior, self.gtrg_mid_cprior, reuse=True,", "\n", "#                                      is_training=is_training, name='Decoder_image_trg')", "\n", "\n", "self", ".", "logits_isHPrior_src", "=", "Discriminator_lc_fn", "(", "self", ".", "hot_src", ",", "self", ".", "hot_size", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isHPrior_trg", "=", "Discriminator_lc_fn", "(", "self", ".", "hot_trg", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isCPrior_src", "=", "Discriminator_lc_fn", "(", "self", ".", "calm_src", ",", "self", ".", "calm_size_src", ",", "\n", "name", "=", "'Discriminator_isCPrior_src'", ")", "\n", "self", ".", "logits_isCPrior_trg", "=", "Discriminator_lc_fn", "(", "self", ".", "calm_trg", ",", "self", ".", "calm_size_trg", ",", "\n", "name", "=", "'Discriminator_isCPrior_trg'", ")", "\n", "self", ".", "logits_isHPrior_prior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_hot", ",", "self", ".", "hot_size", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isHPrior'", ")", "\n", "self", ".", "logits_isCPrior_sprior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_calm_src", ",", "self", ".", "calm_size_src", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isCPrior_src'", ")", "\n", "self", ".", "logits_isCPrior_tprior", "=", "Discriminator_lc_fn", "(", "self", ".", "prior_calm_trg", ",", "self", ".", "calm_size_trg", ",", "reuse", "=", "True", ",", "\n", "name", "=", "'Discriminator_isCPrior_trg'", ")", "\n", "\n", "self", ".", "loss_hot_su_src", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_src", ",", "self", ".", "label_src", ")", "*", "lambda1", "\n", "self", ".", "loss_hot_su_trg", "=", "slim", ".", "losses", ".", "sparse_softmax_cross_entropy", "(", "self", ".", "logits_trg", ",", "self", ".", "label_trg", ")", "*", "lambda2", "\n", "\n", "self", ".", "loss_const_src", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "self", ".", "fsrc_from_src", "-", "self", ".", "image_src", ")", ")", "\n", "self", ".", "loss_const_trg", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "self", ".", "ftrg_from_trg", "-", "self", ".", "image_trg", ")", ")", "\n", "\n", "self", ".", "loss_isHPD_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_src", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isHPrior_src", ")", ")", "\n", "self", ".", "loss_isHPD_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_trg", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isHPrior_trg", ")", ")", "\n", "self", ".", "loss_isHPD_prior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_prior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_prior", ")", ")", "\n", "self", ".", "loss_isHPD", "=", "beta1", "*", "self", ".", "loss_isHPD_src", "+", "beta2", "*", "self", ".", "loss_isHPD_trg", "+", "beta3", "*", "self", ".", "loss_isHPD_prior", "\n", "\n", "self", ".", "loss_isHPen_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_src", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_src", ")", ")", "\n", "self", ".", "loss_isHPen_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isHPrior_trg", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isHPrior_trg", ")", ")", "\n", "self", ".", "loss_isHPen", "=", "beta1", "*", "self", ".", "loss_isHPen_src", "+", "beta2", "*", "self", ".", "loss_isHPen_trg", "\n", "\n", "self", ".", "loss_isCPD_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_src", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isCPrior_src", ")", ")", "\n", "self", ".", "loss_isCPD_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_trg", ",", "tf", ".", "zeros_like", "(", "self", ".", "logits_isCPrior_trg", ")", ")", "\n", "self", ".", "loss_isCPD_sprior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_sprior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_sprior", ")", ")", "\n", "self", ".", "loss_isCPD_tprior", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_tprior", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_tprior", ")", ")", "\n", "self", ".", "loss_isCPD", "=", "alpha1", "*", "self", ".", "loss_isCPD_src", "+", "alpha2", "*", "self", ".", "loss_isCPD_trg", "+", "alpha3", "*", "self", ".", "loss_isCPD_sprior", "+", "alpha4", "*", "self", ".", "loss_isCPD_tprior", "\n", "\n", "self", ".", "loss_isCPen_src", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_src", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_src", ")", ")", "\n", "self", ".", "loss_isCPen_trg", "=", "slim", ".", "losses", ".", "sigmoid_cross_entropy", "(", "self", ".", "logits_isCPrior_trg", ",", "tf", ".", "ones_like", "(", "self", ".", "logits_isCPrior_trg", ")", ")", "\n", "self", ".", "loss_isCPen", "=", "alpha1", "*", "self", ".", "loss_isCPen_src", "+", "alpha2", "*", "self", ".", "loss_isCPen_trg", "\n", "\n", "self", ".", "loss_auto", "=", "gamma1", "*", "self", ".", "loss_const_src", "+", "gamma2", "*", "self", ".", "loss_const_trg", "\n", "self", ".", "loss_hot_su", "=", "self", ".", "loss_hot_su_src", "+", "self", ".", "loss_hot_su_trg", "\n", "# self.loss_en = self.loss_isHPen+self.loss_isCPen", "\n", "self", ".", "loss_Hen", "=", "self", ".", "loss_isHPen", "\n", "self", ".", "loss_Cen", "=", "self", ".", "loss_isCPen", "\n", "self", ".", "loss_D", "=", "self", ".", "loss_isHPD", "+", "self", ".", "loss_isCPD", "\n", "self", ".", "loss_cc_su", "=", "eta1", "*", "self", ".", "loss_cc_su_s2t", "+", "eta2", "*", "self", ".", "loss_cc_su_t2s", "\n", "self", ".", "loss_cc_un", "=", "eta1", "*", "self", ".", "loss_cc_un_s2t", "+", "eta2", "*", "self", ".", "loss_cc_un_t2s", "\n", "self", ".", "loss_cc_suun", "=", "eta1", "*", "self", ".", "loss_cc_su_s2t", "+", "eta2", "*", "self", ".", "loss_cc_t2s_su", "\n", "self", ".", "loss_cc_unsu", "=", "eta1", "*", "self", ".", "loss_cc_s2t_su", "+", "eta2", "*", "self", ".", "loss_cc_su_t2s", "\n", "self", ".", "loss_cc_auto_su", "=", "eta1", "*", "self", ".", "loss_cc_auto_su_s2s", "+", "eta2", "*", "self", ".", "loss_cc_auto_su_t2t", "\n", "self", ".", "loss_cc_auto_un", "=", "eta1", "*", "self", ".", "loss_cc_auto_un_s2s", "+", "eta2", "*", "self", ".", "loss_cc_auto_un_t2t", "\n", "\n", "if", "is_training", ":", "\n", "            ", "self", ".", "optimizer_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_auto", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_D", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "# self.optimizer_en = tf.train.AdamOptimizer(self.learning_rate)", "\n", "self", ".", "optimizer_Hen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_Cen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_auto_c", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_un", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_suun", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_unsu", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_auto_su", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_cc_auto_un", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_su_src", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "optimizer_su_trg", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "# self.optimizer_Hen_src = tf.train.AdamOptimizer(self.learning_rate)", "\n", "# self.optimizer_Hen_trg = tf.train.AdamOptimizer(self.learning_rate)", "\n", "\n", "vars_total", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "vars_en", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Encoder'", "in", "var", ".", "name", "]", "\n", "vars_de", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Decoder'", "in", "var", ".", "name", "]", "\n", "vars_cen", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Encoder_clam'", "in", "var", ".", "name", "]", "\n", "vars_auto", "=", "[", "]", "\n", "vars_auto", ".", "extend", "(", "vars_en", ")", "\n", "vars_auto", ".", "extend", "(", "vars_de", ")", "\n", "vars_auto_c", "=", "[", "]", "\n", "vars_auto_c", ".", "extend", "(", "vars_cen", ")", "\n", "vars_auto_c", ".", "extend", "(", "vars_de", ")", "\n", "vars_D", "=", "[", "var", "for", "var", "in", "vars_total", "if", "'Discriminator'", "in", "var", ".", "name", "]", "\n", "\n", "self", ".", "train_op_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su", ",", "self", ".", "optimizer_su", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_su_src", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su_src", ",", "\n", "self", ".", "optimizer_su_src", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_su_trg", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_hot_su_trg", ",", "\n", "self", ".", "optimizer_su_trg", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_auto", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_auto", ",", "self", ".", "optimizer_auto", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_auto_c", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_auto", ",", "self", ".", "optimizer_auto_c", ",", "\n", "variables_to_train", "=", "vars_auto_c", ")", "\n", "self", ".", "train_op_D", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_D", ",", "self", ".", "optimizer_D", ",", "\n", "variables_to_train", "=", "vars_D", ")", "\n", "# self.train_op_en = slim.learning.create_train_op(self.loss_en, self.optimizer_en,", "\n", "#                                                  variables_to_train=vars_en)", "\n", "self", ".", "train_op_Hen", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Hen", ",", "self", ".", "optimizer_Hen", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "# self.train_op_Hen_src = slim.learning.create_train_op(self.loss_isHPen_src,", "\n", "#                                                       self.optimizer_Hen_src,", "\n", "#                                                       variables_to_train=vars_en)", "\n", "# self.train_op_Hen_trg = slim.learning.create_train_op(self.loss_isHPen_trg,", "\n", "#                                                       self.optimizer_Hen_trg,", "\n", "#                                                       variables_to_train=vars_en)", "\n", "self", ".", "train_op_Cen", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Cen", ",", "self", ".", "optimizer_Cen", ",", "\n", "variables_to_train", "=", "vars_en", ")", "\n", "self", ".", "train_op_cc_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_su", ",", "self", ".", "optimizer_cc_su", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_un", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_un", ",", "self", ".", "optimizer_cc_un", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_suun", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_suun", ",", "self", ".", "optimizer_cc_suun", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_unsu", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_unsu", ",", "self", ".", "optimizer_cc_unsu", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_auto_su", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_auto_su", ",", "self", ".", "optimizer_cc_auto_su", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "self", ".", "train_op_cc_auto_un", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_cc_auto_un", ",", "self", ".", "optimizer_cc_auto_un", ",", "\n", "variables_to_train", "=", "vars_auto", ")", "\n", "\n", "", "self", ".", "summary_op_su", "=", "tf", ".", "summary", ".", "merge", "(", "[", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su_src'", ",", "self", ".", "loss_hot_su_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su_trg'", ",", "self", ".", "loss_hot_su_trg", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_hot_su'", ",", "self", ".", "loss_hot_su", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_su_s2t'", ",", "self", ".", "loss_cc_su_s2t", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_su_t2s'", ",", "self", ".", "loss_cc_su_t2s", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_s2t_su'", ",", "self", ".", "loss_cc_s2t_su", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_cc_t2s_su'", ",", "self", ".", "loss_cc_t2s_su", ")", "\n", "]", ")", "\n", "self", ".", "summary_op", "=", "tf", ".", "summary", ".", "merge", "(", "[", "\n", "tf", ".", "summary", ".", "scalar", "(", "'acc_src'", ",", "self", ".", "acc_src", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'acc_trg'", ",", "self", ".", "acc_trg", ")", ",", "\n"]]}