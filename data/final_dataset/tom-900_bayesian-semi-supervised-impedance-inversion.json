{"home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.pretraining.get_data": [[24, 79], ["numpy.load().item", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.cat.cuda", "acoustic_normalization.normalize.cuda", "seismic_mean.cuda.cuda", "seismic_std.cuda.cuda", "acoustic_mean.cuda.cuda", "acoustic_std.cuda.cuda", "Normalization", "Normalization", "Normalization.normalize", "Normalization.normalize", "torch.zeros().cuda", "torch.zeros().cuda", "range", "torch.cat", "seismic_data_fill[].transpose", "numpy.arange", "torch.utils.data.Subset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.load", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.zeros", "torch.zeros", "torch.cat.unsqueeze", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "int", "numpy.linspace().astype", "int", "numpy.linspace", "len"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.normalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.normalize"], ["def", "get_data", "(", "args", ",", "test", "=", "False", ")", ":", "\n", "\n", "    ", "data_dic", "=", "np", ".", "load", "(", "\"data/data.npy\"", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "\n", "seismic_data", "=", "data_dic", "[", "\"seismic\"", "]", "\n", "acoustic_impedance_data", "=", "data_dic", "[", "\"acoustic_impedance\"", "]", "\n", "\n", "seismic_mean", "=", "torch", ".", "tensor", "(", "np", ".", "mean", "(", "seismic_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "seismic_std", "=", "torch", ".", "tensor", "(", "np", ".", "std", "(", "seismic_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "\n", "acoustic_mean", "=", "torch", ".", "tensor", "(", "np", ".", "mean", "(", "acoustic_impedance_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "acoustic_std", "=", "torch", ".", "tensor", "(", "np", ".", "std", "(", "acoustic_impedance_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "\n", "seismic_data", "=", "torch", ".", "tensor", "(", "seismic_data", ")", ".", "float", "(", ")", "\n", "acoustic_impedance_data", "=", "torch", ".", "tensor", "(", "acoustic_impedance_data", ")", ".", "float", "(", ")", "\n", "\n", "seismic_data", "=", "seismic_data", ".", "cuda", "(", ")", "\n", "acoustic_impedance_data", "=", "acoustic_impedance_data", ".", "cuda", "(", ")", "\n", "\n", "seismic_mean", "=", "seismic_mean", ".", "cuda", "(", ")", "\n", "seismic_std", "=", "seismic_std", ".", "cuda", "(", ")", "\n", "\n", "acoustic_mean", "=", "acoustic_mean", ".", "cuda", "(", ")", "\n", "acoustic_std", "=", "acoustic_std", ".", "cuda", "(", ")", "\n", "\n", "seismic_normalization", "=", "Normalization", "(", "mean_val", "=", "seismic_mean", ",", "std_val", "=", "seismic_std", ")", "\n", "acoustic_normalization", "=", "Normalization", "(", "mean_val", "=", "acoustic_mean", ",", "std_val", "=", "acoustic_std", ")", "\n", "\n", "seismic_data", "=", "seismic_normalization", ".", "normalize", "(", "seismic_data", ")", "\n", "acoustic_impedance_data", "=", "acoustic_normalization", ".", "normalize", "(", "acoustic_impedance_data", ")", "\n", "\n", "# expand seismic_data", "\n", "# seismic_data_fill:(N+args.width-1, 1, T), args.width has to be odd", "\n", "seismic_data_fill", "=", "torch", ".", "zeros", "(", "seismic_data", ".", "shape", "[", "0", "]", "+", "args", ".", "width", "-", "1", ",", "seismic_data", ".", "shape", "[", "1", "]", ",", "seismic_data", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "seismic_data_fill", "[", "int", "(", "(", "args", ".", "width", "-", "1", ")", "/", "2", ")", ":", "int", "(", "(", "args", ".", "width", "-", "1", ")", "/", "2", ")", "+", "seismic_data", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "seismic_data", "\n", "# seismic_data_expand:(N, 1, args.width, T)", "\n", "seismic_data_expand", "=", "torch", ".", "zeros", "(", "seismic_data", ".", "shape", "[", "0", "]", ",", "seismic_data", ".", "shape", "[", "1", "]", ",", "args", ".", "width", ",", "seismic_data", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "seismic_data", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "seismic_data_expand", "[", "i", ",", ":", "]", "=", "seismic_data_fill", "[", "i", ":", "i", "+", "args", ".", "width", ",", ":", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", "# seismic_data:(N+args.width-1, 1, args.width+1, 470)", "\n", "", "seismic_data", "=", "torch", ".", "cat", "(", "(", "seismic_data_expand", ",", "seismic_data", ".", "unsqueeze", "(", "2", ")", ")", ",", "dim", "=", "2", ")", "\n", "\n", "if", "not", "test", ":", "\n", "        ", "num_samples", "=", "seismic_data", ".", "shape", "[", "0", "]", "\n", "indecies", "=", "np", ".", "arange", "(", "0", ",", "num_samples", ")", "\n", "train_indecies", "=", "indecies", "[", "(", "np", ".", "linspace", "(", "0", ",", "len", "(", "indecies", ")", "-", "1", ",", "args", ".", "num_train_wells", ")", ")", ".", "astype", "(", "int", ")", "]", "\n", "\n", "train_data", "=", "data", ".", "Subset", "(", "data", ".", "TensorDataset", "(", "seismic_data", ",", "acoustic_impedance_data", ")", ",", "train_indecies", ")", "\n", "train_loader", "=", "data", ".", "DataLoader", "(", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "unlabeled_loader", "=", "data", ".", "DataLoader", "(", "data", ".", "TensorDataset", "(", "seismic_data", ")", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "return", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "\n", "", "else", ":", "\n", "        ", "test_loader", "=", "data", ".", "DataLoader", "(", "data", ".", "TensorDataset", "(", "seismic_data", ",", "acoustic_impedance_data", ")", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "return", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.pretraining.get_models": [[81, 104], ["torch.load.cuda", "torch.load.cuda", "models.models_pretraining.inverse_model", "models.models_pretraining.forward_model", "torch.optim.Adam", "torch.load", "torch.load", "torch.load", "list", "list", "torch.load.parameters", "torch.load.parameters", "torch.load", "torch.load", "torch.load", "print", "exit"], "function", ["None"], ["", "", "def", "get_models", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "inverse_net", "=", "inverse_model", "(", "nonlinearity", "=", "args", ".", "nonlinearity", ")", "\n", "forward_net", "=", "forward_model", "(", "nonlinearity", "=", "args", ".", "nonlinearity", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "inverse_net", ".", "parameters", "(", ")", ")", "+", "list", "(", "forward_net", ".", "parameters", "(", ")", ")", ",", "amsgrad", "=", "True", ",", "lr", "=", "0.005", ")", "\n", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "inverse_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "try", ":", "\n", "                ", "inverse_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"No checkpoint found at '{}'- Please specify the model for testing\"", ".", "format", "(", "args", ".", "test_checkpoint", ")", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "", "inverse_net", ".", "cuda", "(", ")", "\n", "forward_net", ".", "cuda", "(", ")", "\n", "\n", "return", "inverse_net", ",", "forward_net", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.pretraining.train": [[106, 163], ["pretraining.get_data", "pretraining.get_models", "inverse_net.train", "torch.nn.MSELoss", "print", "tqdm.tqdm", "torch.tensor", "loss_var.cpu().numpy.cpu().numpy", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "torch.save", "torch.save", "torch.save", "os.path.isdir", "os.mkdir", "range", "torch.mean", "loss_var.cpu().numpy.append", "numpy.arange", "optimizer.zero_grad", "inverse_net", "forward_net", "loss.backward", "optimizer.step", "torch.mean.append", "torch.tensor", "loss_var.cpu().numpy.cpu", "nn.MSELoss.", "nn.MSELoss.", "inverse_net", "forward_net", "nn.MSELoss.", "loss.detach().clone", "next", "iter", "loss.detach", "next"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train"], ["", "def", "train", "(", "args", ")", ":", "\n", "    ", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ")", "\n", "inverse_net", ",", "forward_net", ",", "optimizer", "=", "get_models", "(", "args", ")", "\n", "inverse_net", ".", "train", "(", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "# make a directory to save models if it doesn't exist", "\n", "if", "not", "isdir", "(", "\"checkpoints\"", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "\"checkpoints\"", ")", "\n", "\n", "", "loss_var", "=", "[", "]", "\n", "print", "(", "\"Training the model\"", ")", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "args", ".", "max_epoch", ")", ")", ":", "\n", "        ", "train_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "train_loader", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "x_rec", "=", "forward_net", "(", "y", ")", "\n", "\n", "property_loss", "=", "criterion", "(", "y_pred", ",", "y", ")", "+", "criterion", "(", "x_rec", ",", "x", ")", "\n", "if", "args", ".", "beta", "!=", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "unlabeled", "=", "iter", "(", "unlabeled_loader", ")", "\n", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "\n", "", "x_u_expand", "=", "x_u", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x_u", "=", "x_u", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_u_pred", "=", "inverse_net", "(", "x_u", ",", "x_u_expand", ")", "\n", "x_u_rec", "=", "forward_net", "(", "y_u_pred", ")", "\n", "\n", "seismic_loss", "=", "criterion", "(", "x_u_rec", ",", "x_u", ")", "\n", "", "else", ":", "\n", "                ", "seismic_loss", "=", "0", "\n", "", "loss", "=", "args", ".", "alpha", "*", "property_loss", "+", "args", ".", "beta", "*", "seismic_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "clone", "(", ")", ")", "\n", "\n", "", "train_loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "train_loss", ")", ")", "\n", "loss_var", ".", "append", "(", "train_loss", ")", "\n", "\n", "", "loss_var", "=", "torch", ".", "tensor", "(", "loss_var", ")", "\n", "loss_var", "=", "loss_var", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "loss_var", ".", "shape", "[", "0", "]", ")", ",", "loss_var", ")", "\n", "plt", ".", "title", "(", "\"Curve of Training Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Training Loss\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "torch", ".", "save", "(", "inverse_net", ",", "\"checkpoints/{}_inverse\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "forward_net", ",", "\"checkpoints/{}_forward\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "optimizer", ",", "\"checkpoints/{}_optimizer\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.pretraining.test": [[165, 276], ["pretraining.get_data", "pretraining.get_models", "torch.nn.MSELoss", "inverse_net.eval", "print", "torch.no_grad", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean", "print", "torch.cat", "torch.cat", "acoustic_normalization.unnormalize", "acoustic_normalization.unnormalize", "predicted_impedance.numpy.cpu", "true_impedance.numpy.cpu", "predicted_impedance.numpy.numpy", "true_impedance.numpy.numpy", "PSNR", "SSIM", "print", "numpy.load().item", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "numpy.save", "inverse_net", "test_loss.append", "metrics", "test_property_corr.append", "test_property_r2.append", "true_impedance.numpy.append", "predicted_impedance.numpy.append", "torch.tensor", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "abs", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "nn.MSELoss.", "numpy.prod", "torch.mean.item", "inverse_net.detach", "y.detach", "torch.mean", "torch.mean", "numpy.load", "seismic_data.min", "seismic_data.max", "true_impedance.numpy.min", "true_impedance.numpy.max", "true_impedance.numpy.min", "true_impedance.numpy.max", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.PSNR", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.SSIM", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.metrics"], ["", "def", "test", "(", "args", ")", ":", "\n", "    ", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ",", "test", "=", "True", ")", "\n", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "args", ".", "test_checkpoint", "=", "\"checkpoints/{}\"", ".", "format", "(", "args", ".", "session_name", ")", "\n", "", "inverse_net", ",", "forward_net", ",", "_", "=", "get_models", "(", "args", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "predicted_impedance", "=", "[", "]", "\n", "true_impedance", "=", "[", "]", "\n", "test_property_corr", "=", "[", "]", "\n", "test_property_r2", "=", "[", "]", "\n", "inverse_net", ".", "eval", "(", ")", "\n", "print", "(", "\"\\nTesting the model\\n\"", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "test_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "test_loader", ":", "\n", "            ", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "loss", "=", "criterion", "(", "y_pred", ",", "y", ")", "/", "np", ".", "prod", "(", "y", ".", "shape", ")", "\n", "test_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "corr", ",", "r2", "=", "metrics", "(", "y_pred", ".", "detach", "(", ")", ",", "y", ".", "detach", "(", ")", ")", "\n", "test_property_corr", ".", "append", "(", "corr", ")", "\n", "test_property_r2", ".", "append", "(", "r2", ")", "\n", "\n", "true_impedance", ".", "append", "(", "y", ")", "\n", "predicted_impedance", ".", "append", "(", "y_pred", ")", "\n", "\n", "", "property_corr", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "test_property_corr", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "property_r2", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "test_property_r2", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "test_loss", ")", ")", "\n", "print", "(", "\"loss: {:.4f}\\nCorrelation: {:0.4f}\\nr2 Coeff.: {:0.4f}\"", ".", "format", "(", "loss", ",", "property_corr", ",", "property_r2", ")", ")", "\n", "\n", "predicted_impedance", "=", "torch", ".", "cat", "(", "predicted_impedance", ",", "dim", "=", "0", ")", "\n", "true_impedance", "=", "torch", ".", "cat", "(", "true_impedance", ",", "dim", "=", "0", ")", "\n", "\n", "predicted_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "predicted_impedance", ")", "\n", "true_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "true_impedance", ")", "\n", "\n", "predicted_impedance", "=", "predicted_impedance", ".", "cpu", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "cpu", "(", ")", "\n", "\n", "predicted_impedance", "=", "predicted_impedance", ".", "numpy", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "numpy", "(", ")", "\n", "\n", "psnr", "=", "PSNR", "(", "true_impedance", "[", ":", ",", "0", "]", ",", "predicted_impedance", "[", ":", ",", "0", "]", ")", "\n", "ssim", "=", "SSIM", "(", "true_impedance", "[", ":", ",", "0", "]", ",", "predicted_impedance", "[", ":", ",", "0", "]", ")", "\n", "print", "(", "\"PSNR: {:.4f}\\nSSIM: {:0.4f}\"", ".", "format", "(", "psnr", ",", "ssim", ")", ")", "\n", "\n", "# plot seismic data and predicted AI", "\n", "data_dic", "=", "np", ".", "load", "(", "\"D:/statistics/Geostatistics/improvement/data/data.npy\"", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "seismic_data", "=", "data_dic", "[", "\"seismic\"", "]", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "20", "*", "seismic_data", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "2.4", ",", "vmin", "=", "seismic_data", ".", "min", "(", ")", ",", "vmax", "=", "seismic_data", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "80", ",", "160", ",", "240", ",", "320", ",", "400", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Seismic Wave'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "true_impedance", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "true_impedance", ".", "min", "(", ")", ",", "vmax", "=", "true_impedance", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "true_impedance", ".", "min", "(", ")", ",", "vmax", "=", "true_impedance", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "abs", "(", "true_impedance", "[", ":", ",", "0", "]", ".", "T", "-", "predicted_impedance", "[", ":", ",", "0", "]", ".", "T", ")", ",", "cmap", "=", "'Greys'", ",", "aspect", "=", "0.6", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "np", ".", "save", "(", "\"result/predicted_impedance.npy\"", ",", "predicted_impedance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.bayes_train.get_models": [[24, 47], ["torch.load.cuda", "torch.load.cuda", "models.models_bayes.inverse_bbb", "models.models_bayes.forward_bbb", "torch.optim.Adam", "torch.load", "torch.load", "torch.load", "list", "list", "torch.load.parameters", "torch.load.parameters", "torch.load", "torch.load", "torch.load", "print", "exit"], "function", ["None"], ["def", "get_models", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "inverse_net", "=", "inverse_bbb", "(", "prior_var", "=", "args", ".", "prior_var", ",", "noise_ratio", "=", "args", ".", "noise_ratio", ")", "\n", "forward_net", "=", "forward_bbb", "(", "prior_var", "=", "args", ".", "prior_var", ",", "noise_ratio", "=", "args", ".", "noise_ratio", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "inverse_net", ".", "parameters", "(", ")", ")", "+", "list", "(", "forward_net", ".", "parameters", "(", ")", ")", ",", "amsgrad", "=", "True", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "inverse_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "try", ":", "\n", "                ", "inverse_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"No checkpoint found at '{}'- Please specify the model for testing\"", ".", "format", "(", "args", ".", "test_checkpoint", ")", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "", "inverse_net", ".", "cuda", "(", ")", "\n", "forward_net", ".", "cuda", "(", ")", "\n", "\n", "return", "inverse_net", ",", "forward_net", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.bayes_train.train": [[49, 102], ["pretraining.get_data", "bayes_train.get_models", "inverse_net.train", "forward_net.train", "print", "range", "torch.tensor", "loss_var.cpu().numpy.cpu().numpy", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "torch.save", "torch.save", "torch.save", "torch.mean", "print", "loss_var.cpu().numpy.append", "numpy.arange", "optimizer.zero_grad", "loss.backward", "optimizer.step", "torch.mean.append", "torch.tensor", "loss_var.cpu().numpy.cpu", "inverse_net.elbo", "forward_net.elbo", "inverse_net", "forward_net.elbo", "loss.detach().clone", "next", "iter", "loss.detach", "next"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo"], ["", "def", "train", "(", "args", ")", ":", "\n", "    ", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ")", "\n", "inverse_net", ",", "forward_net", ",", "optimizer", "=", "get_models", "(", "args", ")", "\n", "inverse_net", ".", "train", "(", ")", "\n", "forward_net", ".", "train", "(", ")", "\n", "loss_var", "=", "[", "]", "\n", "\n", "print", "(", "\"Training the model\"", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "        ", "train_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "train_loader", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "\n", "property_loss", "=", "inverse_net", ".", "elbo", "(", "x", ",", "x_expand", ",", "y", ")", "+", "forward_net", ".", "elbo", "(", "y", ",", "x", ")", "\n", "\n", "if", "args", ".", "beta", "!=", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "unlabeled", "=", "iter", "(", "unlabeled_loader", ")", "\n", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "\n", "", "x_u_expand", "=", "x_u", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x_u", "=", "x_u", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_u_pred", "=", "inverse_net", "(", "x_u", ",", "x_u_expand", ")", "\n", "\n", "seismic_loss", "=", "forward_net", ".", "elbo", "(", "y_u_pred", ",", "x_u", ")", "\n", "", "else", ":", "\n", "                ", "seismic_loss", "=", "0", "\n", "\n", "", "loss", "=", "args", ".", "alpha", "*", "property_loss", "+", "args", ".", "beta", "*", "seismic_loss", "\n", "loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "clone", "(", ")", ")", "\n", "\n", "", "train_loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "train_loss", ")", ")", "\n", "print", "(", "\"Epoch: {:}\\ntrain_loss: {:0.4f}\"", ".", "format", "(", "epoch", "+", "1", ",", "train_loss", ")", ")", "\n", "loss_var", ".", "append", "(", "train_loss", ")", "\n", "\n", "", "loss_var", "=", "torch", ".", "tensor", "(", "loss_var", ")", "\n", "loss_var", "=", "loss_var", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "loss_var", ".", "shape", "[", "0", "]", ")", ",", "loss_var", ")", "\n", "plt", ".", "title", "(", "\"Curve of Training Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Training Loss\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "torch", ".", "save", "(", "inverse_net", ",", "\"checkpoints/{}_inverse\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "forward_net", ",", "\"checkpoints/{}_forward\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "optimizer", ",", "\"checkpoints/{}_optimizer\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.Marmousi2.bayes_train.test": [[104, 251], ["pretraining.get_data", "bayes_train.get_models", "inverse_net.eval", "print", "torch.no_grad", "tqdm.tqdm", "torch.sqrt", "acoustic_normalization.unnormalize", "predicted_impedance_std.numpy.cpu", "true_impedance.numpy.cpu", "predicted_impedance_std.numpy.numpy", "true_impedance.numpy.numpy", "numpy.load", "accuracy", "print", "numpy.abs", "matplotlib.subplots", "fig.add_subplot.imshow", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.xaxis.set_label_position", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "plt.figure.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "fig.add_subplot.imshow", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.xaxis.set_label_position", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "plt.figure.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "range", "torch.mean", "print", "print", "scipy.stats.norm.cdf", "print", "matplotlib.figure", "plt.figure.tight_layout", "plt.figure.subplots_adjust", "plt.figure.legend", "plt.figure.subplots_adjust", "matplotlib.show", "range", "torch.cat", "true_impedance.numpy.append", "torch.cat", "acoustic_normalization.unnormalize", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "metrics", "torch.mean.append", "torch.cat", "numpy.sqrt", "plt.figure.add_subplot", "predicted_impedance_mean[].squeeze", "predicted_impedance_std[].squeeze", "inverse_net", "torch.cat.append", "acoustic_normalization.unnormalize.append", "predicted_impedance_std.numpy.min", "predicted_impedance_std.numpy.max", "np.abs.min", "np.abs.max", "numpy.sqrt", "torch.mean", "numpy.mean", "len", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.fill_betweenx", "fig.add_subplot.set_title", "fig.add_subplot.invert_yaxis", "fig.add_subplot.set_ylabel", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.fill_betweenx", "fig.add_subplot.set_title", "fig.add_subplot.invert_yaxis", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "numpy.square", "torch.tensor", "true_impedance[].squeeze", "numpy.arange", "numpy.arange", "numpy.abs().squeeze", "numpy.arange", "numpy.arange", "numpy.arange", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "true_impedance[].squeeze", "numpy.arange", "numpy.arange", "numpy.abs().squeeze", "numpy.arange", "numpy.arange", "numpy.arange", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "torch.square", "numpy.array", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.accuracy", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.metrics"], ["", "def", "test", "(", "args", ")", ":", "\n", "    ", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ",", "test", "=", "True", ")", "\n", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "args", ".", "test_checkpoint", "=", "\"checkpoints/{}\"", ".", "format", "(", "args", ".", "session_name", ")", "\n", "", "inverse_net", ",", "forward_net", ",", "_", "=", "get_models", "(", "args", ")", "\n", "num_sampling", "=", "args", ".", "num_sampling", "\n", "true_impedance", "=", "[", "]", "\n", "inverse_net", ".", "eval", "(", ")", "\n", "print", "(", "\"\\nTesting the model\"", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "mean", "=", "0", "\n", "var", "=", "0", "\n", "for", "t", "in", "tqdm", "(", "range", "(", "num_sampling", ")", ")", ":", "\n", "            ", "true_impedance_t", "=", "[", "]", "\n", "predicted_impedance_t", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "test_loader", ":", "\n", "                ", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "\n", "true_impedance_t", ".", "append", "(", "y", ")", "\n", "predicted_impedance_t", ".", "append", "(", "y_pred", ")", "\n", "\n", "# predicted_impedance_t: (N, 1, T)", "\n", "# true_impedance_t: (N, 1, T)", "\n", "", "true_impedance_t", "=", "torch", ".", "cat", "(", "true_impedance_t", ",", "dim", "=", "0", ")", "\n", "true_impedance", ".", "append", "(", "true_impedance_t", ")", "\n", "\n", "# online learning for solving variance", "\n", "predicted_impedance_t", "=", "torch", ".", "cat", "(", "predicted_impedance_t", ",", "dim", "=", "0", ")", "\n", "predicted_impedance_t", "=", "acoustic_normalization", ".", "unnormalize", "(", "predicted_impedance_t", ")", "\n", "\n", "if", "t", "==", "0", ":", "\n", "                ", "mean", "=", "predicted_impedance_t", "\n", "", "else", ":", "\n", "                ", "var", "=", "(", "t", "-", "1", ")", "*", "var", "/", "t", "+", "torch", ".", "square", "(", "predicted_impedance_t", "-", "mean", ")", "/", "(", "t", "+", "1", ")", "\n", "mean", "=", "t", "*", "mean", "/", "(", "t", "+", "1", ")", "+", "predicted_impedance_t", "/", "(", "t", "+", "1", ")", "\n", "\n", "# predicted_impedance_std: (N, 1, T)", "\n", "", "", "predicted_impedance_std", "=", "torch", ".", "sqrt", "(", "var", ")", "\n", "\n", "# true_impedance: (N, 1, T)", "\n", "true_impedance", "=", "true_impedance", "[", "0", "]", "\n", "true_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "true_impedance", ")", "\n", "\n", "predicted_impedance_std", "=", "predicted_impedance_std", ".", "cpu", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "cpu", "(", ")", "\n", "\n", "predicted_impedance_std", "=", "predicted_impedance_std", ".", "numpy", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "numpy", "(", ")", "\n", "\n", "# predicted_impedance_mean: (N, 1, T)", "\n", "# it is the result of pre-train", "\n", "predicted_impedance_mean", "=", "np", ".", "load", "(", "\"result/predicted_impedance.npy\"", ")", "\n", "\n", "acc", "=", "accuracy", "(", "predicted_impedance_mean", "[", ":", ",", "0", "]", ",", "predicted_impedance_std", "[", ":", ",", "0", "]", ",", "true_impedance", "[", ":", ",", "0", "]", ")", "\n", "print", "(", "\"acc: {:0.4f}\"", ".", "format", "(", "acc", ")", ")", "\n", "\n", "predicted_impedance_map", "=", "np", ".", "abs", "(", "predicted_impedance_mean", "-", "true_impedance", ")", "\n", "\n", "# plot overall uncertainty and predictive MAP", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance_std", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "predicted_impedance_std", ".", "min", "(", ")", ",", "vmax", "=", "predicted_impedance_std", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance_map", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "predicted_impedance_map", ".", "min", "(", ")", ",", "vmax", "=", "predicted_impedance_map", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "pcc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "predicted_impedance_std", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "corr", ",", "_", "=", "metrics", "(", "predicted_impedance_map", "[", "i", ",", ":", "]", ",", "predicted_impedance_std", "[", "i", ",", ":", "]", ")", "\n", "pcc", ".", "append", "(", "corr", ")", "\n", "", "pcc", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "pcc", ")", ")", "\n", "print", "(", "\"pcc between predictive absolute difference and the uncertainty: {:0.4f}\"", ".", "format", "(", "pcc", ")", ")", "\n", "\n", "n", "=", "predicted_impedance_map", ".", "shape", "[", "-", "1", "]", "\n", "t", "=", "np", ".", "sqrt", "(", "n", "-", "2", ")", "*", "pcc", "/", "np", ".", "sqrt", "(", "1", "-", "np", ".", "square", "(", "np", ".", "array", "(", "pcc", ")", ")", ")", "\n", "print", "(", "\"value of t-statistics: {:0.4f}\"", ".", "format", "(", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "t", ")", ")", ")", ")", "\n", "p_value", "=", "scipy", ".", "stats", ".", "norm", ".", "cdf", "(", "t", ")", "\n", "print", "(", "\"p value of t-statistics: {:0.4f}\"", ".", "format", "(", "np", ".", "mean", "(", "1", "-", "p_value", ")", ")", ")", "\n", "\n", "# plot local uncertainty", "\n", "index_list", "=", "args", ".", "index_list", "\n", "iter", "=", "0", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "for", "index", "in", "index_list", ":", "\n", "            ", "iter", "+=", "1", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "len", "(", "index_list", ")", ",", "iter", ")", "\n", "mean", "=", "predicted_impedance_mean", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", "\n", "std", "=", "predicted_impedance_std", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", "\n", "\n", "if", "iter", "==", "1", ":", "\n", "                ", "ax", ".", "plot", "(", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"red\"", ",", "label", "=", "\"True Acoustic Impedance\"", ")", "\n", "ax", ".", "plot", "(", "mean", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"blue\"", ",", "label", "=", "'Mean Posterior Prediction'", ")", "\n", "ax", ".", "plot", "(", "np", ".", "abs", "(", "mean", "-", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ")", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"green\"", ",", "label", "=", "\"Bias of the Prediction\"", ")", "\n", "ax", ".", "plot", "(", "std", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"yellow\"", ",", "label", "=", "'Prediction Uncertainty'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "fill_betweenx", "(", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "mean", "-", "2", "*", "std", ",", "mean", "+", "2", "*", "std", ",", "alpha", "=", "0.25", ",", "label", "=", "'Two-Sigma Confidence Interval'", ")", "\n", "ax", ".", "set_title", "(", "\"Trace No.{index}\"", ".", "format", "(", "index", "=", "index", ")", ",", "fontsize", "=", "18", ")", "\n", "ax", ".", "invert_yaxis", "(", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Impedance ((m/s)\u00b7(g/cc))\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_yticks", "(", "[", "0", ",", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", ",", "1920", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0", ",", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", ",", "3.0", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "10", ")", "for", "label", "in", "labels", "]", "\n", "", "else", ":", "\n", "                ", "ax", ".", "plot", "(", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"red\"", ")", "\n", "ax", ".", "plot", "(", "mean", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"blue\"", ")", "\n", "ax", ".", "plot", "(", "np", ".", "abs", "(", "mean", "-", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ")", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"green\"", ")", "\n", "ax", ".", "plot", "(", "std", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"yellow\"", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "fill_betweenx", "(", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "mean", "-", "2", "*", "std", ",", "mean", "+", "2", "*", "std", ",", "alpha", "=", "0.25", ")", "\n", "ax", ".", "set_title", "(", "\"Trace No.{index}\"", ".", "format", "(", "index", "=", "index", ")", ",", "fontsize", "=", "18", ")", "\n", "ax", ".", "invert_yaxis", "(", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Impedance ((m/s)\u00b7(g/cc))\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_yticks", "(", "[", "0", ",", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", ",", "1920", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0", ",", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", ",", "3.0", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "10", ")", "for", "label", "in", "labels", "]", "\n", "\n", "", "", "fig", ".", "tight_layout", "(", ")", "\n", "fig", ".", "subplots_adjust", "(", "top", "=", "0.95", ",", "bottom", "=", "0.2", ",", "left", "=", "0.35", ",", "right", "=", "0.65", ")", "\n", "fig", ".", "legend", "(", "ncol", "=", "2", ",", "bbox_to_anchor", "=", "(", "0.5", ",", "0.01", ")", ",", "loc", "=", "\"lower center\"", ",", "frameon", "=", "False", ",", "prop", "=", "{", "'size'", ":", "15", "}", ")", "\n", "fig", ".", "subplots_adjust", "(", "wspace", "=", "0.3", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.__init__": [[15, 30], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "inverse_net.named_parameters", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "setattr", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prior_var", "=", "10", ",", "noise_ratio", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "inverse_bbb", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "KL", "=", "0", "\n", "self", ".", "prior_var", "=", "prior_var", "\n", "self", ".", "noise_ratio", "=", "noise_ratio", "\n", "\n", "self", ".", "rho_gru_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "16", ",", "1", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "rho_gru_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "16", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "rho_gru_out_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "16", ",", "8", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "rho_gru_out_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "16", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "for", "k", ",", "v", "in", "inverse_net", ".", "named_parameters", "(", ")", ":", "\n", "            ", "name", "=", "\"rho_{}\"", ".", "format", "(", "k", ")", ".", "replace", "(", "\".\"", ",", "\"_\"", ")", "\n", "params", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "v", ".", "shape", ")", ",", "requires_grad", "=", "True", ")", "\n", "setattr", "(", "self", ",", "name", ",", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.rho_to_var": [[31, 33], ["torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "", "def", "rho_to_var", "(", "self", ",", "rho", ")", ":", "\n", "        ", "return", "torch", ".", "square", "(", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "rho", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.KL_divergence": [[34, 37], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square"], "methods", ["None"], ["", "def", "KL_divergence", "(", "self", ",", "mu1", ",", "mu2", ",", "var1", ",", "var2", ")", ":", "\n", "        ", "kl", "=", "-", "torch", ".", "sum", "(", "torch", ".", "log", "(", "var1", "/", "var2", ")", "-", "var1", "/", "var2", "-", "torch", ".", "square", "(", "mu1", "-", "mu2", ")", "/", "var2", "+", "1", ")", "/", "2", "\n", "return", "kl", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.linear_var": [[38, 44], ["models_bayes.inverse_bbb.rho_to_var", "models_bayes.inverse_bbb.rho_to_var", "models_bayes.inverse_bbb.KL_divergence", "models_bayes.inverse_bbb.KL_divergence", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.rho_to_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.rho_to_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.KL_divergence", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.KL_divergence"], ["", "def", "linear_var", "(", "self", ",", "rho_weight", ",", "rho_bias", ",", "inverse_weight", ",", "inverse_bias", ")", ":", "\n", "        ", "var_weight", "=", "self", ".", "rho_to_var", "(", "rho_weight", ")", "\n", "var_bias", "=", "self", ".", "rho_to_var", "(", "rho_bias", ")", "\n", "kl_weight", "=", "self", ".", "KL_divergence", "(", "inverse_weight", ",", "torch", ".", "zeros_like", "(", "inverse_weight", ")", ",", "var_weight", ",", "self", ".", "prior_var", ")", "\n", "kl_bias", "=", "self", ".", "KL_divergence", "(", "inverse_bias", ",", "torch", ".", "zeros_like", "(", "inverse_bias", ")", ",", "var_bias", ",", "self", ".", "prior_var", ")", "\n", "return", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.forward": [[45, 253], ["models_bayes.inverse_bbb.linear_var", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "inverse_net.cnn1", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm1", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.pooling1", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm2", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "inverse_net.cnn2", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm3", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.pooling2", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm4", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "inverse_net.cnn3", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm5", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.pooling2", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm6", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inverse_net.activation", "models_bayes.inverse_bbb.linear_var", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "inverse_net.cnn4", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm7", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.activation", "models_bayes.inverse_bbb.linear_var", "torch.conv1d", "torch.conv1d", "torch.conv1d", "torch.conv1d", "inverse_net.cnn5", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm8", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.activation", "models_bayes.inverse_bbb.linear_var", "torch.conv1d", "torch.conv1d", "torch.conv1d", "torch.conv1d", "inverse_net.cnn6", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.group_norm", "torch.group_norm", "torch.group_norm", "torch.group_norm", "inverse_net.groupnorm9", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "inverse_net.activation", "cnn_out.squeeze.squeeze.squeeze", "x.transpose.transpose.transpose", "models_bayes.inverse_bbb.linear_var", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "inverse_net.gru", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "rnn_out.transpose.transpose.transpose", "x.transpose.transpose.transpose", "models_bayes.inverse_bbb.linear_var", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "inverse_net.gru_out", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "models_bayes.inverse_bbb.linear_var", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "inverse_net.out", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "x.transpose.transpose.transpose", "x_expand.square", "inverse_net.groupnorm2.square", "inverse_net.groupnorm2.square", "x_expand.square", "inverse_net.groupnorm4.square", "inverse_net.groupnorm4.square", "x_expand.square", "inverse_net.groupnorm6.square", "inverse_net.groupnorm6.square", "cnn_out.squeeze.squeeze.square", "cnn_out.squeeze.squeeze.square", "cnn_out.squeeze.squeeze.square", "cnn_out.squeeze.squeeze.square", "cnn_out.squeeze.squeeze.square", "cnn_out.squeeze.squeeze.square", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "x.transpose.transpose.square", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "x.transpose.transpose.square", "x.transpose.transpose.square", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.linear.sqrt", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_expand", ")", ":", "\n", "\n", "# update nn.sequential cnn1", "\n", "        ", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn1_weight", ",", "self", ".", "rho_cnn1_bias", ",", "inverse_net", ".", "cnn1", ".", "weight", ",", "inverse_net", ".", "cnn1", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn1_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn1_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv2d", "(", "x_expand", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "(", "0", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ")", "\n", "cnn_out1", "=", "inverse_net", ".", "cnn1", "(", "x_expand", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out1", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out1", "=", "cnn_out1", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm1_weight", ",", "self", ".", "rho_groupnorm1_bias", ",", "inverse_net", ".", "groupnorm1", ".", "weight", ",", "inverse_net", ".", "groupnorm1", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm1_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm1_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out1", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out1", "=", "inverse_net", ".", "groupnorm1", "(", "cnn_out1", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out1", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out1", "=", "cnn_out1", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "cnn_out1", "=", "inverse_net", ".", "pooling1", "(", "cnn_out1", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm2_weight", ",", "self", ".", "rho_groupnorm2_bias", ",", "inverse_net", ".", "groupnorm2", ".", "weight", ",", "inverse_net", ".", "groupnorm2", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm2_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm2_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out1", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out1", "=", "inverse_net", ".", "groupnorm2", "(", "cnn_out1", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out1", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out1", "=", "cnn_out1", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "# update Sequential cnn2", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn2_weight", ",", "self", ".", "rho_cnn2_bias", ",", "inverse_net", ".", "cnn2", ".", "weight", ",", "inverse_net", ".", "cnn2", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn2_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn2_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv2d", "(", "x_expand", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "(", "0", ",", "6", ")", ",", "dilation", "=", "(", "1", ",", "3", ")", ")", "\n", "cnn_out2", "=", "inverse_net", ".", "cnn2", "(", "x_expand", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out2", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out2", "=", "cnn_out2", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm3_weight", ",", "self", ".", "rho_groupnorm3_bias", ",", "inverse_net", ".", "groupnorm3", ".", "weight", ",", "inverse_net", ".", "groupnorm3", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm3_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm3_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out2", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out2", "=", "inverse_net", ".", "groupnorm3", "(", "cnn_out2", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out2", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out2", "=", "cnn_out2", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "cnn_out2", "=", "inverse_net", ".", "pooling2", "(", "cnn_out2", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm4_weight", ",", "self", ".", "rho_groupnorm4_bias", ",", "inverse_net", ".", "groupnorm4", ".", "weight", ",", "inverse_net", ".", "groupnorm4", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm4_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm4_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out2", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out2", "=", "inverse_net", ".", "groupnorm4", "(", "cnn_out2", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out2", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out2", "=", "cnn_out2", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "# update Sequential cnn3", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn3_weight", ",", "self", ".", "rho_cnn3_bias", ",", "inverse_net", ".", "cnn3", ".", "weight", ",", "inverse_net", ".", "cnn3", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn3_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn3_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv2d", "(", "x_expand", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "(", "0", ",", "12", ")", ",", "dilation", "=", "(", "1", ",", "6", ")", ")", "\n", "cnn_out3", "=", "inverse_net", ".", "cnn3", "(", "x_expand", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out3", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out3", "=", "cnn_out3", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm5_weight", ",", "self", ".", "rho_groupnorm5_bias", ",", "inverse_net", ".", "groupnorm5", ".", "weight", ",", "inverse_net", ".", "groupnorm5", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm5_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm5_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out3", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out3", "=", "inverse_net", ".", "groupnorm5", "(", "cnn_out3", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out3", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out3", "=", "cnn_out3", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "cnn_out3", "=", "inverse_net", ".", "pooling3", "(", "cnn_out3", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm6_weight", ",", "self", ".", "rho_groupnorm6_bias", ",", "inverse_net", ".", "groupnorm6", ".", "weight", ",", "inverse_net", ".", "groupnorm6", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm6_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm6_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out3", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out3", "=", "inverse_net", ".", "groupnorm6", "(", "cnn_out3", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out3", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out3", "=", "cnn_out3", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "cnn_out", "=", "torch", ".", "cat", "(", "(", "cnn_out1", ",", "cnn_out2", ",", "cnn_out3", ")", ",", "dim", "=", "1", ")", "\n", "\n", "# update cnn4 and groupnorm", "\n", "cnn_out", "=", "inverse_net", ".", "activation", "(", "cnn_out", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn4_weight", ",", "self", ".", "rho_cnn4_bias", ",", "inverse_net", ".", "cnn4", ".", "weight", ",", "inverse_net", ".", "cnn4", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn4_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn4_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv2d", "(", "cnn_out", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "cnn_out", "=", "inverse_net", ".", "cnn4", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm7_weight", ",", "self", ".", "rho_groupnorm7_bias", ",", "inverse_net", ".", "groupnorm7", ".", "weight", ",", "inverse_net", ".", "groupnorm7", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm7_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm7_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out", "=", "inverse_net", ".", "groupnorm7", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "# Update cnn5 and groupnorm", "\n", "cnn_out", "=", "inverse_net", ".", "activation", "(", "cnn_out", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn5_weight", ",", "self", ".", "rho_cnn5_bias", ",", "inverse_net", ".", "cnn5", ".", "weight", ",", "inverse_net", ".", "cnn5", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn5_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn5_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv1d", "(", "cnn_out", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "cnn_out", "=", "inverse_net", ".", "cnn5", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm8_weight", ",", "self", ".", "rho_groupnorm8_bias", ",", "inverse_net", ".", "groupnorm8", ".", "weight", ",", "inverse_net", ".", "groupnorm8", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm8_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm8_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out", "=", "inverse_net", ".", "groupnorm8", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "# Update cnn6 and groupnorm", "\n", "cnn_out", "=", "inverse_net", ".", "activation", "(", "cnn_out", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn6_weight", ",", "self", ".", "rho_cnn6_bias", ",", "inverse_net", ".", "cnn6", ".", "weight", ",", "inverse_net", ".", "cnn6", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn6_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn6_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv1d", "(", "cnn_out", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out", "=", "inverse_net", ".", "cnn6", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm9_weight", ",", "self", ".", "rho_groupnorm9_bias", ",", "inverse_net", ".", "groupnorm9", ".", "weight", ",", "inverse_net", ".", "groupnorm9", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm9_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm9_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "cnn_out", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "cnn_out", "=", "inverse_net", ".", "groupnorm9", "(", "cnn_out", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "cnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "cnn_out", "=", "cnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "cnn_out", "=", "inverse_net", ".", "activation", "(", "cnn_out", ")", "\n", "cnn_out", "=", "cnn_out", ".", "squeeze", "(", "dim", "=", "2", ")", "\n", "\n", "# Update gru", "\n", "tmp_x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_gru_weight", ",", "self", ".", "rho_gru_bias", ",", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ",", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ")", "\n", "\n", "self", ".", "rho_gru_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_gru_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "linear", "(", "tmp_x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ")", "\n", "\n", "rnn_out", ",", "_", "=", "inverse_net", ".", "gru", "(", "tmp_x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "rnn_out", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "rnn_out", "=", "rnn_out", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "rnn_out", "=", "rnn_out", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "x", "=", "rnn_out", "+", "cnn_out", "\n", "\n", "# Update upsamping", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnnt1_weight", ",", "self", ".", "rho_cnnt1_bias", ",", "inverse_net", ".", "cnnt1", ".", "weight", ",", "inverse_net", ".", "cnnt1", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnnt1_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnnt1_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv_transpose1d", "(", "x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "x", "=", "inverse_net", ".", "cnnt1", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm10_weight", ",", "self", ".", "rho_groupnorm10_bias", ",", "inverse_net", ".", "groupnorm10", ".", "weight", ",", "inverse_net", ".", "groupnorm10", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm10_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm10_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "x", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "x", "=", "inverse_net", ".", "groupnorm10", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "x", "=", "inverse_net", ".", "activation", "(", "x", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnnt2_weight", ",", "self", ".", "rho_cnnt2_bias", ",", "inverse_net", ".", "cnnt2", ".", "weight", ",", "inverse_net", ".", "cnnt2", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnnt2_weight_kl", "=", "kl_weight", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.inverse_bbb.elbo": [[254, 277], ["models_bayes.inverse_bbb.forward", "inverse_net.named_parameters", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss.float", "torch.MSELoss.", "getattr"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.forward_model.forward"], ["self", ".", "rho_cnnt2_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv_transpose1d", "(", "x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "x", "=", "inverse_net", ".", "cnnt2", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_groupnorm11_weight", ",", "self", ".", "rho_groupnorm11_bias", ",", "inverse_net", ".", "groupnorm11", ".", "weight", ",", "inverse_net", ".", "groupnorm11", ".", "bias", ")", "\n", "self", ".", "rho_groupnorm11_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_groupnorm11_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "group_norm", "(", "x", ".", "square", "(", ")", ",", "1", ",", "var_weight", ",", "var_bias", ")", "\n", "x", "=", "inverse_net", ".", "groupnorm11", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "x", "=", "inverse_net", ".", "activation", "(", "x", ")", "\n", "\n", "# update gru_out", "\n", "tmp_x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_gru_out_weight", ",", "self", ".", "rho_gru_bias", ",", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ",", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ")", "\n", "\n", "self", ".", "rho_gru_out_weight_kl", "=", "kl_weight", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.__init__": [[280, 289], ["torch.Module.__init__", "forward_net.named_parameters", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "setattr", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.__init__"], ["var", "=", "F", ".", "linear", "(", "tmp_x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ")", "\n", "x", ",", "_", "=", "inverse_net", ".", "gru_out", "(", "tmp_x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "# update out", "\n", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_out_weight", ",", "self", ".", "rho_out_bias", ",", "inverse_net", ".", "out", ".", "weight", ",", "inverse_net", ".", "out", ".", "bias", ")", "\n", "self", ".", "rho_out_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_out_bias_kl", "=", "kl_bias", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.rho_to_var": [[290, 292], ["torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["var", "=", "F", ".", "linear", "(", "x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ")", "\n", "x", "=", "inverse_net", ".", "out", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.KL_divergence": [[293, 296], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square"], "methods", ["None"], ["x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var": [[297, 303], ["models_bayes.forward_bbb.rho_to_var", "models_bayes.forward_bbb.rho_to_var", "models_bayes.forward_bbb.KL_divergence", "models_bayes.forward_bbb.KL_divergence", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.rho_to_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.rho_to_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.KL_divergence", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.KL_divergence"], ["\n", "", "def", "elbo", "(", "self", ",", "x", ",", "x_expand", ",", "target", ")", ":", "\n", "\n", "        ", "y", "=", "self", ".", "forward", "(", "x", ",", "x_expand", ")", "\n", "kl_divergence", "=", "0", "\n", "for", "k", ",", "v", "in", "inverse_net", ".", "named_parameters", "(", ")", ":", "\n", "            ", "try", ":", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.forward": [[304, 340], ["models_bayes.forward_bbb.linear_var", "torch.conv1d", "torch.conv1d", "torch.conv1d", "torch.conv1d", "forward_net.cnn1", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "forward_net.activation", "models_bayes.forward_bbb.linear_var", "torch.conv1d", "torch.conv1d", "torch.conv1d", "torch.conv1d", "forward_net.cnn2", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "forward_net.activation", "models_bayes.forward_bbb.linear_var", "torch.conv1d", "torch.conv1d", "torch.conv1d", "torch.conv1d", "forward_net.cnn3", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "torch.distributions.Normal().sample().cuda", "forward_net.cnn3.square", "forward_net.cnn3.square", "forward_net.cnn3.square", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.conv1d.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.conv1d.sqrt", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.distributions.Normal().sample", "torch.conv1d.sqrt", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal", "torch.distributions.Normal"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.linear_var"], ["                ", "name", "=", "\"rho_{}\"", ".", "format", "(", "k", ")", ".", "replace", "(", "\".\"", ",", "\"_\"", ")", "\n", "name", "=", "name", "+", "\"_kl\"", "\n", "kl_divergence", "=", "kl_divergence", "+", "getattr", "(", "self", ",", "name", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "continue", "\n", "\n", "", "", "kl_divergence", "=", "kl_divergence", "+", "self", ".", "rho_gru_weight_kl", "\n", "kl_divergence", "=", "kl_divergence", "+", "self", ".", "rho_gru_bias_kl", "\n", "kl_divergence", "=", "kl_divergence", "+", "self", ".", "rho_gru_out_weight_kl", "\n", "kl_divergence", "=", "kl_divergence", "+", "self", ".", "rho_gru_out_bias_kl", "\n", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "loss", "=", "criterion", "(", "y", ",", "target", ")", "\n", "\n", "elbo", "=", "kl_divergence", "+", "self", ".", "noise_ratio", "*", "loss", "\n", "return", "elbo", "\n", "\n", "\n", "", "", "class", "forward_bbb", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "prior_var", "=", "10", ",", "noise_ratio", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "forward_bbb", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "KL", "=", "0", "\n", "self", ".", "prior_var", "=", "prior_var", "\n", "self", ".", "noise_ratio", "=", "noise_ratio", "\n", "for", "k", ",", "v", "in", "forward_net", ".", "named_parameters", "(", ")", ":", "\n", "            ", "name", "=", "\"rho_{}\"", ".", "format", "(", "k", ")", ".", "replace", "(", "\".\"", ",", "\"_\"", ")", "\n", "params", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "v", ".", "shape", ")", ",", "requires_grad", "=", "True", ")", "\n", "setattr", "(", "self", ",", "name", ",", "params", ")", "\n", "\n", "", "", "def", "rho_to_var", "(", "self", ",", "rho", ")", ":", "\n", "        ", "return", "torch", ".", "square", "(", "torch", ".", "log", "(", "1", "+", "torch", ".", "exp", "(", "rho", ")", ")", ")", "\n", "\n", "", "def", "KL_divergence", "(", "self", ",", "mu1", ",", "mu2", ",", "var1", ",", "var2", ")", ":", "\n", "        ", "kl", "=", "-", "torch", ".", "sum", "(", "torch", ".", "log", "(", "var1", "/", "var2", ")", "-", "var1", "/", "var2", "-", "torch", ".", "square", "(", "mu1", "-", "mu2", ")", "/", "var2", "+", "1", ")", "/", "2", "\n", "return", "kl", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo": [[341, 358], ["inverse_net.named_parameters", "models_bayes.forward_bbb.forward", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss.float", "torch.MSELoss.", "getattr"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.forward_model.forward"], ["", "def", "linear_var", "(", "self", ",", "rho_weight", ",", "rho_bias", ",", "inverse_weight", ",", "inverse_bias", ")", ":", "\n", "        ", "var_weight", "=", "self", ".", "rho_to_var", "(", "rho_weight", ")", "\n", "var_bias", "=", "self", ".", "rho_to_var", "(", "rho_bias", ")", "\n", "kl_weight", "=", "self", ".", "KL_divergence", "(", "inverse_weight", ",", "torch", ".", "zeros_like", "(", "inverse_weight", ")", ",", "var_weight", ",", "self", ".", "prior_var", ")", "\n", "kl_bias", "=", "self", ".", "KL_divergence", "(", "inverse_bias", ",", "torch", ".", "zeros_like", "(", "inverse_bias", ")", ",", "var_bias", ",", "self", ".", "prior_var", ")", "\n", "return", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "var_weight", ",", "var_bias", ",", "kl_weight", ",", "kl_bias", "=", "self", ".", "linear_var", "(", "self", ".", "rho_cnn1_weight", ",", "self", ".", "rho_cnn1_bias", ",", "forward_net", ".", "cnn1", ".", "weight", ",", "forward_net", ".", "cnn1", ".", "bias", ")", "\n", "\n", "self", ".", "rho_cnn1_weight_kl", "=", "kl_weight", "\n", "self", ".", "rho_cnn1_bias_kl", "=", "kl_bias", "\n", "\n", "var", "=", "F", ".", "conv1d", "(", "x", ".", "square", "(", ")", ",", "var_weight", ",", "var_bias", ",", "padding", "=", "4", ")", "\n", "x", "=", "forward_net", ".", "cnn1", "(", "x", ")", "\n", "epsilon", "=", "Normal", "(", "0", ",", "1", ")", ".", "sample", "(", "x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "x", "=", "x", "+", "epsilon", "*", "var", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.inverse_model.__init__": [[8, 49], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.MaxPool2d", "torch.MaxPool2d", "torch.GroupNorm", "torch.GroupNorm", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.MaxPool2d", "torch.MaxPool2d", "torch.GroupNorm", "torch.GroupNorm", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.MaxPool2d", "torch.MaxPool2d", "torch.GroupNorm", "torch.GroupNorm", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.Conv1d", "torch.Conv1d", "torch.GroupNorm", "torch.GroupNorm", "torch.Conv1d", "torch.Conv1d", "torch.GroupNorm", "torch.GroupNorm", "torch.GRU", "torch.GRU", "torch.GRU", "torch.GRU", "torch.Linear", "torch.Linear", "models_pretraining.inverse_model.modules", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh", "isinstance", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.__init__"], ["    ", "def", "__init__", "(", "self", ",", "resolution_ratio", "=", "4", ",", "nonlinearity", "=", "\"tanh\"", ")", ":", "\n", "        ", "super", "(", "inverse_model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resolution_ratio", "=", "resolution_ratio", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "if", "nonlinearity", "==", "\"relu\"", "else", "nn", ".", "Tanh", "(", ")", "\n", "\n", "self", ".", "cnn1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1", ",", "out_channels", "=", "8", ",", "kernel_size", "=", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "groupnorm1", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "self", ".", "pooling1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "groupnorm2", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "\n", "self", ".", "cnn2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1", ",", "out_channels", "=", "8", ",", "kernel_size", "=", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "6", ")", ",", "dilation", "=", "(", "1", ",", "3", ")", ")", "\n", "self", ".", "groupnorm3", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "self", ".", "pooling2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "groupnorm4", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "\n", "self", ".", "cnn3", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1", ",", "out_channels", "=", "8", ",", "kernel_size", "=", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "12", ")", ",", "dilation", "=", "(", "1", ",", "6", ")", ")", "\n", "self", ".", "groupnorm5", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "self", ".", "pooling3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "groupnorm6", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "\n", "self", ".", "cnn4", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "24", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "groupnorm7", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "16", ")", "\n", "self", ".", "cnn5", "=", "nn", ".", "Conv1d", "(", "in_channels", "=", "16", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "groupnorm8", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "16", ")", "\n", "self", ".", "cnn6", "=", "nn", ".", "Conv1d", "(", "in_channels", "=", "16", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "groupnorm9", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "16", ")", "\n", "\n", "self", ".", "gru", "=", "nn", ".", "GRU", "(", "input_size", "=", "1", ",", "hidden_size", "=", "8", ",", "num_layers", "=", "3", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "\n", "self", ".", "cnnt1", "=", "nn", ".", "ConvTranspose1d", "(", "in_channels", "=", "16", ",", "out_channels", "=", "8", ",", "stride", "=", "2", ",", "kernel_size", "=", "4", ",", "padding", "=", "1", ")", "\n", "self", ".", "groupnorm10", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "self", ".", "cnnt2", "=", "nn", ".", "ConvTranspose1d", "(", "in_channels", "=", "8", ",", "out_channels", "=", "8", ",", "stride", "=", "2", ",", "kernel_size", "=", "4", ",", "padding", "=", "1", ")", "\n", "self", ".", "groupnorm11", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "1", ",", "num_channels", "=", "8", ")", "\n", "\n", "self", ".", "gru_out", "=", "nn", ".", "GRU", "(", "input_size", "=", "8", ",", "hidden_size", "=", "8", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "in_features", "=", "16", ",", "out_features", "=", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.inverse_model.forward": [[50, 94], ["models_pretraining.inverse_model.cnn1", "models_pretraining.inverse_model.groupnorm1", "models_pretraining.inverse_model.pooling1", "models_pretraining.inverse_model.groupnorm2", "models_pretraining.inverse_model.cnn2", "models_pretraining.inverse_model.groupnorm3", "models_pretraining.inverse_model.pooling2", "models_pretraining.inverse_model.groupnorm4", "models_pretraining.inverse_model.cnn3", "models_pretraining.inverse_model.groupnorm5", "models_pretraining.inverse_model.pooling3", "models_pretraining.inverse_model.groupnorm6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models_pretraining.inverse_model.activation", "models_pretraining.inverse_model.cnn4", "models_pretraining.inverse_model.groupnorm7", "models_pretraining.inverse_model.activation", "models_pretraining.inverse_model.cnn5", "models_pretraining.inverse_model.groupnorm8", "models_pretraining.inverse_model.activation", "models_pretraining.inverse_model.cnn6", "models_pretraining.inverse_model.groupnorm9", "models_pretraining.inverse_model.activation", "cnn_out.squeeze.squeeze.squeeze", "x.transpose.transpose.transpose", "models_pretraining.inverse_model.gru", "rnn_out.transpose.transpose.transpose", "x.transpose.transpose.transpose", "models_pretraining.inverse_model.gru_out", "models_pretraining.inverse_model.out", "x.transpose.transpose.transpose"], "methods", ["None"], ["                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "# shape of x:(N, 1, 470); x_expand:(N, 1, 5, 470)", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ",", "x_expand", ")", ":", "\n", "        ", "cnn_out1", "=", "self", ".", "cnn1", "(", "x_expand", ")", "\n", "cnn_out1", "=", "self", ".", "groupnorm1", "(", "cnn_out1", ")", "\n", "cnn_out1", "=", "self", ".", "pooling1", "(", "cnn_out1", ")", "\n", "cnn_out1", "=", "self", ".", "groupnorm2", "(", "cnn_out1", ")", "\n", "\n", "cnn_out2", "=", "self", ".", "cnn2", "(", "x_expand", ")", "\n", "cnn_out2", "=", "self", ".", "groupnorm3", "(", "cnn_out2", ")", "\n", "cnn_out2", "=", "self", ".", "pooling2", "(", "cnn_out2", ")", "\n", "cnn_out2", "=", "self", ".", "groupnorm4", "(", "cnn_out2", ")", "\n", "\n", "cnn_out3", "=", "self", ".", "cnn3", "(", "x_expand", ")", "\n", "cnn_out3", "=", "self", ".", "groupnorm5", "(", "cnn_out3", ")", "\n", "cnn_out3", "=", "self", ".", "pooling3", "(", "cnn_out3", ")", "\n", "cnn_out3", "=", "self", ".", "groupnorm6", "(", "cnn_out3", ")", "\n", "\n", "cnn_out", "=", "torch", ".", "cat", "(", "(", "cnn_out1", ",", "cnn_out2", ",", "cnn_out3", ")", ",", "dim", "=", "1", ")", "\n", "cnn_out", "=", "self", ".", "activation", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "cnn4", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "groupnorm7", "(", "cnn_out", ")", "\n", "\n", "cnn_out", "=", "self", ".", "activation", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "cnn5", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "groupnorm8", "(", "cnn_out", ")", "\n", "\n", "cnn_out", "=", "self", ".", "activation", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "cnn6", "(", "cnn_out", ")", "\n", "cnn_out", "=", "self", ".", "groupnorm9", "(", "cnn_out", ")", "\n", "\n", "cnn_out", "=", "self", ".", "activation", "(", "cnn_out", ")", "\n", "cnn_out", "=", "cnn_out", ".", "squeeze", "(", "dim", "=", "2", ")", "\n", "\n", "tmp_x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "rnn_out", ",", "_", "=", "self", ".", "gru", "(", "tmp_x", ")", "\n", "rnn_out", "=", "rnn_out", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "x", "=", "rnn_out", "+", "cnn_out", "\n", "\n", "x", "=", "self", ".", "cnnt1", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.forward_model.__init__": [[97, 104], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.__init__"], ["x", "=", "self", ".", "cnnt2", "(", "x", ")", "\n", "x", "=", "self", ".", "groupnorm11", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "\n", "tmp_x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "x", ",", "_", "=", "self", ".", "gru_out", "(", "tmp_x", ")", "\n", "\n", "x", "=", "self", ".", "out", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_pretraining.forward_model.forward": [[105, 112], ["models_pretraining.forward_model.cnn1", "models_pretraining.forward_model.activation", "models_pretraining.forward_model.cnn2", "models_pretraining.forward_model.activation", "models_pretraining.forward_model.cnn3"], "methods", ["None"], ["x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "forward_model", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "resolution_ratio", "=", "4", ",", "nonlinearity", "=", "\"tanh\"", ")", ":", "\n", "        ", "super", "(", "forward_model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resolution_ratio", "=", "resolution_ratio", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data": [[25, 81], ["torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.cat.cuda", "acoustic_normalization.normalize.cuda", "seismic_mean.cuda.cuda", "seismic_std.cuda.cuda", "acoustic_mean.cuda.cuda", "acoustic_std.cuda.cuda", "Normalization", "Normalization", "Normalization.normalize", "Normalization.normalize", "torch.zeros().cuda", "torch.zeros().cuda", "range", "torch.cat", "numpy.load().squeeze", "seismic_data_fill[].transpose", "numpy.arange", "torch.utils.data.Subset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.load", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.zeros", "torch.zeros", "torch.cat.unsqueeze", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "numpy.load", "os.path.join", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "int", "numpy.linspace().astype", "os.path.join", "int", "numpy.linspace", "len"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.normalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.normalize"], ["\n", "    ", "data_dic", "=", "np", ".", "load", "(", "\"data/data.npy\"", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "\n", "seismic_data", "=", "data_dic", "[", "\"seismic\"", "]", "\n", "acoustic_impedance_data", "=", "data_dic", "[", "\"acoustic_impedance\"", "]", "\n", "\n", "seismic_mean", "=", "torch", ".", "tensor", "(", "np", ".", "mean", "(", "seismic_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "seismic_std", "=", "torch", ".", "tensor", "(", "np", ".", "std", "(", "seismic_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "\n", "acoustic_mean", "=", "torch", ".", "tensor", "(", "np", ".", "mean", "(", "acoustic_impedance_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "acoustic_std", "=", "torch", ".", "tensor", "(", "np", ".", "std", "(", "acoustic_impedance_data", ",", "keepdims", "=", "True", ")", ")", ".", "float", "(", ")", "\n", "\n", "seismic_data", "=", "torch", ".", "tensor", "(", "seismic_data", ")", ".", "float", "(", ")", "\n", "acoustic_impedance_data", "=", "torch", ".", "tensor", "(", "acoustic_impedance_data", ")", ".", "float", "(", ")", "\n", "\n", "seismic_data", "=", "seismic_data", ".", "cuda", "(", ")", "\n", "acoustic_impedance_data", "=", "acoustic_impedance_data", ".", "cuda", "(", ")", "\n", "\n", "seismic_mean", "=", "seismic_mean", ".", "cuda", "(", ")", "\n", "seismic_std", "=", "seismic_std", ".", "cuda", "(", ")", "\n", "\n", "acoustic_mean", "=", "acoustic_mean", ".", "cuda", "(", ")", "\n", "acoustic_std", "=", "acoustic_std", ".", "cuda", "(", ")", "\n", "\n", "seismic_normalization", "=", "Normalization", "(", "mean_val", "=", "seismic_mean", ",", "std_val", "=", "seismic_std", ")", "\n", "acoustic_normalization", "=", "Normalization", "(", "mean_val", "=", "acoustic_mean", ",", "std_val", "=", "acoustic_std", ")", "\n", "\n", "seismic_data", "=", "seismic_normalization", ".", "normalize", "(", "seismic_data", ")", "\n", "acoustic_impedance_data", "=", "acoustic_normalization", ".", "normalize", "(", "acoustic_impedance_data", ")", "\n", "\n", "# expand seismic_data", "\n", "# seismic_data_fill:(N+args.width-1, 1, T), args.width has to be odd", "\n", "seismic_data_fill", "=", "torch", ".", "zeros", "(", "seismic_data", ".", "shape", "[", "0", "]", "+", "args", ".", "width", "-", "1", ",", "seismic_data", ".", "shape", "[", "1", "]", ",", "seismic_data", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "seismic_data_fill", "[", "int", "(", "(", "args", ".", "width", "-", "1", ")", "/", "2", ")", ":", "int", "(", "(", "args", ".", "width", "-", "1", ")", "/", "2", ")", "+", "seismic_data", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "seismic_data", "\n", "# seismic_data_expand:(N, 1, args.width, T)", "\n", "seismic_data_expand", "=", "torch", ".", "zeros", "(", "seismic_data", ".", "shape", "[", "0", "]", ",", "seismic_data", ".", "shape", "[", "1", "]", ",", "args", ".", "width", ",", "seismic_data", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "seismic_data", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "seismic_data_expand", "[", "i", ",", ":", "]", "=", "seismic_data_fill", "[", "i", ":", "i", "+", "args", ".", "width", ",", ":", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", "# seismic_data:(N+args.width-1, 1, args.width+1, 470)", "\n", "", "seismic_data", "=", "torch", ".", "cat", "(", "(", "seismic_data_expand", ",", "seismic_data", ".", "unsqueeze", "(", "2", ")", ")", ",", "dim", "=", "2", ")", "\n", "\n", "if", "not", "test", ":", "\n", "        ", "num_samples", "=", "seismic_data", ".", "shape", "[", "0", "]", "\n", "indecies", "=", "np", ".", "arange", "(", "0", ",", "num_samples", ")", "\n", "train_indecies", "=", "indecies", "[", "(", "np", ".", "linspace", "(", "0", ",", "len", "(", "indecies", ")", "-", "1", ",", "args", ".", "num_train_wells", ")", ")", ".", "astype", "(", "int", ")", "]", "\n", "\n", "train_data", "=", "data", ".", "Subset", "(", "data", ".", "TensorDataset", "(", "seismic_data", ",", "acoustic_impedance_data", ")", ",", "train_indecies", ")", "\n", "train_loader", "=", "data", ".", "DataLoader", "(", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "unlabeled_loader", "=", "data", ".", "DataLoader", "(", "data", ".", "TensorDataset", "(", "seismic_data", ")", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "return", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "\n", "", "else", ":", "\n", "        ", "test_loader", "=", "data", ".", "DataLoader", "(", "data", ".", "TensorDataset", "(", "seismic_data", ",", "acoustic_impedance_data", ")", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "return", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "\n", "\n", "\n", "", "", "def", "get_models", "(", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_models": [[83, 107], ["torch.load.cuda", "torch.load.cuda", "models.models_pretraining.inverse_model", "models.models_pretraining.forward_model", "torch.optim.Adam", "torch.load", "torch.load", "torch.load", "list", "list", "torch.load.parameters", "torch.load.parameters", "torch.load", "torch.load", "torch.load", "print", "exit"], "function", ["None"], ["        ", "inverse_net", "=", "inverse_model", "(", "nonlinearity", "=", "args", ".", "nonlinearity", ")", "\n", "forward_net", "=", "forward_model", "(", "nonlinearity", "=", "args", ".", "nonlinearity", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "inverse_net", ".", "parameters", "(", ")", ")", "+", "list", "(", "forward_net", ".", "parameters", "(", ")", ")", ",", "amsgrad", "=", "True", ",", "lr", "=", "0.005", ")", "\n", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "inverse_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "try", ":", "\n", "                ", "inverse_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"No checkpoint found at '{}'- Please specify the model for testing\"", ".", "format", "(", "args", ".", "test_checkpoint", ")", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "", "inverse_net", ".", "cuda", "(", ")", "\n", "forward_net", ".", "cuda", "(", ")", "\n", "\n", "return", "inverse_net", ",", "forward_net", ",", "optimizer", "\n", "\n", "\n", "", "def", "train", "(", "args", ")", ":", "\n", "    ", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ")", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.train": [[109, 163], ["pretraining.get_data", "pretraining.get_models", "inverse_net.train", "torch.nn.MSELoss", "print", "tqdm.tqdm", "torch.tensor", "loss_var.cpu().numpy.cpu().numpy", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "torch.save", "torch.save", "torch.save", "os.path.isdir", "os.mkdir", "range", "torch.mean", "loss_var.cpu().numpy.append", "numpy.arange", "optimizer.zero_grad", "inverse_net", "forward_net", "loss.backward", "optimizer.step", "torch.mean.append", "torch.tensor", "loss_var.cpu().numpy.cpu", "nn.MSELoss.", "nn.MSELoss.", "inverse_net", "forward_net", "nn.MSELoss.", "loss.detach().clone", "next", "iter", "loss.detach", "next"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train"], ["inverse_net", ".", "train", "(", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "# make a directory to save models if it doesn't exist", "\n", "if", "not", "isdir", "(", "\"checkpoints\"", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "\"checkpoints\"", ")", "\n", "\n", "", "loss_var", "=", "[", "]", "\n", "print", "(", "\"Training the model\"", ")", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "args", ".", "max_epoch", ")", ")", ":", "\n", "        ", "train_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "train_loader", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "x_rec", "=", "forward_net", "(", "y", ")", "\n", "\n", "property_loss", "=", "criterion", "(", "y_pred", ",", "y", ")", "+", "criterion", "(", "x_rec", ",", "x", ")", "\n", "if", "args", ".", "beta", "!=", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "unlabeled", "=", "iter", "(", "unlabeled_loader", ")", "\n", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "\n", "", "x_u_expand", "=", "x_u", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x_u", "=", "x_u", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_u_pred", "=", "inverse_net", "(", "x_u", ",", "x_u_expand", ")", "\n", "x_u_rec", "=", "forward_net", "(", "y_u_pred", ")", "\n", "\n", "seismic_loss", "=", "criterion", "(", "x_u_rec", ",", "x_u", ")", "\n", "", "else", ":", "\n", "                ", "seismic_loss", "=", "0", "\n", "", "loss", "=", "args", ".", "alpha", "*", "property_loss", "+", "args", ".", "beta", "*", "seismic_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "clone", "(", ")", ")", "\n", "\n", "", "train_loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "train_loss", ")", ")", "\n", "loss_var", ".", "append", "(", "train_loss", ")", "\n", "\n", "", "loss_var", "=", "torch", ".", "tensor", "(", "loss_var", ")", "\n", "loss_var", "=", "loss_var", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "loss_var", ".", "shape", "[", "0", "]", ")", ",", "loss_var", ")", "\n", "plt", ".", "title", "(", "\"Curve of Training Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Training Loss\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "torch", ".", "save", "(", "inverse_net", ",", "\"checkpoints/{}_inverse\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "forward_net", ",", "\"checkpoints/{}_forward\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "optimizer", ",", "\"checkpoints/{}_optimizer\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.test": [[165, 276], ["pretraining.get_data", "pretraining.get_models", "torch.nn.MSELoss", "inverse_net.eval", "print", "torch.no_grad", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean", "print", "torch.cat", "torch.cat", "acoustic_normalization.unnormalize", "acoustic_normalization.unnormalize", "predicted_impedance.numpy.cpu", "true_impedance.numpy.cpu", "predicted_impedance.numpy.numpy", "true_impedance.numpy.numpy", "PSNR", "SSIM", "print", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.xaxis.set_label_position", "ax.set_xlabel", "ax.set_ylabel", "fig.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "numpy.save", "inverse_net", "test_loss.append", "metrics", "test_property_corr.append", "test_property_r2.append", "true_impedance.numpy.append", "predicted_impedance.numpy.append", "torch.tensor", "numpy.load().squeeze", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "abs", "ax.get_xticklabels", "ax.get_yticklabels", "label.set_fontsize", "nn.MSELoss.", "numpy.prod", "torch.mean.item", "inverse_net.detach", "y.detach", "torch.mean", "torch.mean", "seismic_data.min", "seismic_data.max", "true_impedance.numpy.min", "true_impedance.numpy.max", "true_impedance.numpy.min", "true_impedance.numpy.max", "torch.cat", "torch.cat", "numpy.load", "os.path.join"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.PSNR", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.SSIM", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.metrics"], ["", "def", "test", "(", "args", ")", ":", "\n", "    ", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ",", "test", "=", "True", ")", "\n", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "args", ".", "test_checkpoint", "=", "\"checkpoints/{}\"", ".", "format", "(", "args", ".", "session_name", ")", "\n", "", "inverse_net", ",", "forward_net", ",", "_", "=", "get_models", "(", "args", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "predicted_impedance", "=", "[", "]", "\n", "true_impedance", "=", "[", "]", "\n", "test_property_corr", "=", "[", "]", "\n", "test_property_r2", "=", "[", "]", "\n", "inverse_net", ".", "eval", "(", ")", "\n", "print", "(", "\"\\nTesting the model\\n\"", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "test_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "test_loader", ":", "\n", "            ", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "loss", "=", "criterion", "(", "y_pred", ",", "y", ")", "/", "np", ".", "prod", "(", "y", ".", "shape", ")", "\n", "test_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "corr", ",", "r2", "=", "metrics", "(", "y_pred", ".", "detach", "(", ")", ",", "y", ".", "detach", "(", ")", ")", "\n", "test_property_corr", ".", "append", "(", "corr", ")", "\n", "test_property_r2", ".", "append", "(", "r2", ")", "\n", "\n", "true_impedance", ".", "append", "(", "y", ")", "\n", "predicted_impedance", ".", "append", "(", "y_pred", ")", "\n", "\n", "", "property_corr", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "test_property_corr", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "property_r2", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "test_property_r2", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "test_loss", ")", ")", "\n", "print", "(", "\"loss: {:.4f}\\nCorrelation: {:0.4f}\\nr2 Coeff.: {:0.4f}\"", ".", "format", "(", "loss", ",", "property_corr", ",", "property_r2", ")", ")", "\n", "\n", "predicted_impedance", "=", "torch", ".", "cat", "(", "predicted_impedance", ",", "dim", "=", "0", ")", "\n", "true_impedance", "=", "torch", ".", "cat", "(", "true_impedance", ",", "dim", "=", "0", ")", "\n", "\n", "predicted_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "predicted_impedance", ")", "\n", "true_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "true_impedance", ")", "\n", "\n", "predicted_impedance", "=", "predicted_impedance", ".", "cpu", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "cpu", "(", ")", "\n", "\n", "predicted_impedance", "=", "predicted_impedance", ".", "numpy", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "numpy", "(", ")", "\n", "\n", "psnr", "=", "PSNR", "(", "true_impedance", "[", ":", ",", "0", "]", ",", "predicted_impedance", "[", ":", ",", "0", "]", ")", "\n", "ssim", "=", "SSIM", "(", "true_impedance", "[", ":", ",", "0", "]", ",", "predicted_impedance", "[", ":", ",", "0", "]", ")", "\n", "print", "(", "\"PSNR: {:.4f}\\nSSIM: {:0.4f}\"", ".", "format", "(", "psnr", ",", "ssim", ")", ")", "\n", "\n", "# plot seismic data and predicted AI", "\n", "data_dic", "=", "np", ".", "load", "(", "\"D:/statistics/Geostatistics/improvement/data/data.npy\"", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "seismic_data", "=", "data_dic", "[", "\"seismic\"", "]", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "20", "*", "seismic_data", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "2.4", ",", "vmin", "=", "seismic_data", ".", "min", "(", ")", ",", "vmax", "=", "seismic_data", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "80", ",", "160", ",", "240", ",", "320", ",", "400", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Seismic Wave'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "true_impedance", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "true_impedance", ".", "min", "(", ")", ",", "vmax", "=", "true_impedance", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "true_impedance", ".", "min", "(", ")", ",", "vmax", "=", "true_impedance", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "abs", "(", "true_impedance", "[", ":", ",", "0", "]", ".", "T", "-", "predicted_impedance", "[", ":", ",", "0", "]", ".", "T", ")", ",", "cmap", "=", "'Greys'", ",", "aspect", "=", "0.6", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "np", ".", "save", "(", "\"result/predicted_impedance.npy\"", ",", "predicted_impedance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models": [[23, 47], ["torch.load.cuda", "torch.load.cuda", "models.models_bayes.inverse_bbb", "models.models_bayes.forward_bbb", "torch.optim.Adam", "torch.load", "torch.load", "torch.load", "list", "list", "torch.load.parameters", "torch.load.parameters", "torch.load", "torch.load", "torch.load", "print", "exit"], "function", ["None"], ["\n", "def", "get_models", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "inverse_net", "=", "inverse_bbb", "(", "prior_var", "=", "args", ".", "prior_var", ",", "noise_ratio", "=", "args", ".", "noise_ratio", ")", "\n", "forward_net", "=", "forward_bbb", "(", "prior_var", "=", "args", ".", "prior_var", ",", "noise_ratio", "=", "args", ".", "noise_ratio", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "inverse_net", ".", "parameters", "(", ")", ")", "+", "list", "(", "forward_net", ".", "parameters", "(", ")", ")", ",", "amsgrad", "=", "True", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "inverse_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "\"checkpoints/\"", "+", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "try", ":", "\n", "                ", "inverse_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_inverse\"", ")", "\n", "forward_net", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_forward\"", ")", "\n", "optimizer", "=", "torch", ".", "load", "(", "args", ".", "test_checkpoint", "+", "\"_optimizer\"", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"No checkpoint found at '{}'- Please specify the model for testing\"", ".", "format", "(", "args", ".", "test_checkpoint", ")", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "", "inverse_net", ".", "cuda", "(", ")", "\n", "forward_net", ".", "cuda", "(", ")", "\n", "\n", "return", "inverse_net", ",", "forward_net", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train": [[49, 97], ["pretraining.get_data", "bayes_train.get_models", "inverse_net.train", "forward_net.train", "print", "range", "torch.tensor", "loss_var.cpu().numpy.cpu().numpy", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "torch.save", "torch.save", "torch.save", "torch.mean", "print", "loss_var.cpu().numpy.append", "numpy.arange", "optimizer.zero_grad", "loss.backward", "optimizer.step", "torch.mean.append", "torch.tensor", "loss_var.cpu().numpy.cpu", "inverse_net.elbo", "forward_net.elbo", "inverse_net", "forward_net.elbo", "loss.detach().clone", "next", "iter", "loss.detach", "next"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.train", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.models.models_bayes.forward_bbb.elbo"], ["", "def", "train", "(", "args", ")", ":", "\n", "    ", "train_loader", ",", "unlabeled_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ")", "\n", "inverse_net", ",", "forward_net", ",", "optimizer", "=", "get_models", "(", "args", ")", "\n", "inverse_net", ".", "train", "(", ")", "\n", "forward_net", ".", "train", "(", ")", "\n", "loss_var", "=", "[", "]", "\n", "\n", "print", "(", "\"Training the model\"", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "        ", "train_loss", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "train_loader", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "\n", "property_loss", "=", "inverse_net", ".", "elbo", "(", "x", ",", "x_expand", ",", "y", ")", "+", "forward_net", ".", "elbo", "(", "y", ",", "x", ")", "\n", "\n", "if", "args", ".", "beta", "!=", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "unlabeled", "=", "iter", "(", "unlabeled_loader", ")", "\n", "x_u", "=", "next", "(", "unlabeled", ")", "[", "0", "]", "\n", "\n", "", "x_u_expand", "=", "x_u", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x_u", "=", "x_u", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "y_u_pred", "=", "inverse_net", "(", "x_u", ",", "x_u_expand", ")", "\n", "\n", "seismic_loss", "=", "forward_net", ".", "elbo", "(", "y_u_pred", ",", "x_u", ")", "\n", "", "else", ":", "\n", "                ", "seismic_loss", "=", "0", "\n", "\n", "", "loss", "=", "args", ".", "alpha", "*", "property_loss", "+", "args", ".", "beta", "*", "seismic_loss", "\n", "loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "clone", "(", ")", ")", "\n", "\n", "", "train_loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "train_loss", ")", ")", "\n", "print", "(", "\"Epoch: {:}\\ntrain_loss: {:0.4f}\"", ".", "format", "(", "epoch", "+", "1", ",", "train_loss", ")", ")", "\n", "loss_var", ".", "append", "(", "train_loss", ")", "\n", "\n", "", "loss_var", "=", "torch", ".", "tensor", "(", "loss_var", ")", "\n", "loss_var", "=", "loss_var", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "loss_var", ".", "shape", "[", "0", "]", ")", ",", "loss_var", ")", "\n", "plt", ".", "title", "(", "\"Curve of Training Loss\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Training Loss\"", ")", "\n", "plt", ".", "show", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.test": [[99, 251], ["pretraining.get_data", "bayes_train.get_models", "inverse_net.eval", "print", "torch.no_grad", "tqdm.tqdm", "torch.sqrt", "acoustic_normalization.unnormalize", "predicted_impedance_std.numpy.cpu", "true_impedance.numpy.cpu", "predicted_impedance_std.numpy.numpy", "true_impedance.numpy.numpy", "numpy.load", "accuracy", "print", "numpy.abs", "range", "torch.mean", "print", "print", "scipy.stats.norm.cdf", "print", "matplotlib.subplots", "fig.add_subplot.imshow", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.xaxis.set_label_position", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "plt.figure.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.subplots", "fig.add_subplot.imshow", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.xaxis.set_label_position", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "plt.figure.colorbar", "fig.colorbar.ax.tick_params", "fig.colorbar.set_label", "matplotlib.show", "matplotlib.figure", "plt.figure.tight_layout", "plt.figure.subplots_adjust", "plt.figure.legend", "plt.figure.subplots_adjust", "matplotlib.show", "range", "torch.cat", "true_impedance.numpy.append", "torch.cat", "acoustic_normalization.unnormalize", "metrics", "torch.mean.append", "torch.cat", "numpy.sqrt", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "plt.figure.add_subplot", "predicted_impedance_mean[].squeeze", "predicted_impedance_std[].squeeze", "inverse_net", "torch.cat.append", "acoustic_normalization.unnormalize.append", "numpy.sqrt", "torch.mean", "numpy.mean", "predicted_impedance_std.numpy.min", "predicted_impedance_std.numpy.max", "np.abs.min", "np.abs.max", "len", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.fill_betweenx", "fig.add_subplot.set_title", "fig.add_subplot.invert_yaxis", "fig.add_subplot.set_ylabel", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_xticks", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.fill_betweenx", "fig.add_subplot.set_title", "fig.add_subplot.invert_yaxis", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_xticks", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticks", "fig.add_subplot.set_yticklabels", "numpy.square", "torch.tensor", "true_impedance[].squeeze", "numpy.arange", "numpy.arange", "numpy.abs().squeeze", "numpy.arange", "numpy.arange", "numpy.arange", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "true_impedance[].squeeze", "numpy.arange", "numpy.arange", "numpy.abs().squeeze", "numpy.arange", "numpy.arange", "numpy.arange", "fig.add_subplot.get_xticklabels", "fig.add_subplot.get_yticklabels", "label.set_fontsize", "torch.square", "numpy.array", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.pretraining.get_data", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.SEAM.bayes_train.get_models", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.accuracy", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize", "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.metrics"], ["torch", ".", "save", "(", "inverse_net", ",", "\"checkpoints/{}_inverse\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "forward_net", ",", "\"checkpoints/{}_forward\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "torch", ".", "save", "(", "optimizer", ",", "\"checkpoints/{}_optimizer\"", ".", "format", "(", "args", ".", "session_name", ")", ")", "\n", "\n", "\n", "", "def", "test", "(", "args", ")", ":", "\n", "    ", "test_loader", ",", "seismic_normalization", ",", "acoustic_normalization", "=", "get_data", "(", "args", ",", "test", "=", "True", ")", "\n", "if", "args", ".", "test_checkpoint", "is", "None", ":", "\n", "        ", "args", ".", "test_checkpoint", "=", "\"checkpoints/{}\"", ".", "format", "(", "args", ".", "session_name", ")", "\n", "", "inverse_net", ",", "forward_net", ",", "_", "=", "get_models", "(", "args", ")", "\n", "num_sampling", "=", "args", ".", "num_sampling", "\n", "true_impedance", "=", "[", "]", "\n", "inverse_net", ".", "eval", "(", ")", "\n", "print", "(", "\"\\nTesting the model\"", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "mean", "=", "0", "\n", "var", "=", "0", "\n", "for", "t", "in", "tqdm", "(", "range", "(", "num_sampling", ")", ")", ":", "\n", "            ", "true_impedance_t", "=", "[", "]", "\n", "predicted_impedance_t", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "test_loader", ":", "\n", "                ", "x_expand", "=", "x", "[", ":", ",", ":", ",", "0", ":", "args", ".", "width", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "args", ".", "width", "]", "\n", "\n", "y_pred", "=", "inverse_net", "(", "x", ",", "x_expand", ")", "\n", "\n", "true_impedance_t", ".", "append", "(", "y", ")", "\n", "predicted_impedance_t", ".", "append", "(", "y_pred", ")", "\n", "\n", "# predicted_impedance_t: (N, 1, T)", "\n", "# true_impedance_t: (N, 1, T)", "\n", "", "true_impedance_t", "=", "torch", ".", "cat", "(", "true_impedance_t", ",", "dim", "=", "0", ")", "\n", "true_impedance", ".", "append", "(", "true_impedance_t", ")", "\n", "\n", "# online learning for solving variance", "\n", "predicted_impedance_t", "=", "torch", ".", "cat", "(", "predicted_impedance_t", ",", "dim", "=", "0", ")", "\n", "predicted_impedance_t", "=", "acoustic_normalization", ".", "unnormalize", "(", "predicted_impedance_t", ")", "\n", "\n", "if", "t", "==", "0", ":", "\n", "                ", "mean", "=", "predicted_impedance_t", "\n", "", "else", ":", "\n", "                ", "var", "=", "(", "t", "-", "1", ")", "*", "var", "/", "t", "+", "torch", ".", "square", "(", "predicted_impedance_t", "-", "mean", ")", "/", "(", "t", "+", "1", ")", "\n", "mean", "=", "t", "*", "mean", "/", "(", "t", "+", "1", ")", "+", "predicted_impedance_t", "/", "(", "t", "+", "1", ")", "\n", "\n", "# predicted_impedance_std: (N, 1, T)", "\n", "", "", "predicted_impedance_std", "=", "torch", ".", "sqrt", "(", "var", ")", "\n", "\n", "# true_impedance: (N, 1, T)", "\n", "true_impedance", "=", "true_impedance", "[", "0", "]", "\n", "true_impedance", "=", "acoustic_normalization", ".", "unnormalize", "(", "true_impedance", ")", "\n", "\n", "predicted_impedance_std", "=", "predicted_impedance_std", ".", "cpu", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "cpu", "(", ")", "\n", "\n", "predicted_impedance_std", "=", "predicted_impedance_std", ".", "numpy", "(", ")", "\n", "true_impedance", "=", "true_impedance", ".", "numpy", "(", ")", "\n", "\n", "# predicted_impedance_mean: (N, 1, T)", "\n", "# it is the result of pre-train", "\n", "predicted_impedance_mean", "=", "np", ".", "load", "(", "\"result/predicted_impedance.npy\"", ")", "\n", "\n", "acc", "=", "accuracy", "(", "predicted_impedance_mean", "[", ":", ",", "0", "]", ",", "predicted_impedance_std", "[", ":", ",", "0", "]", ",", "true_impedance", "[", ":", ",", "0", "]", ")", "\n", "print", "(", "\"acc: {:0.4f}\"", ".", "format", "(", "acc", ")", ")", "\n", "\n", "predicted_impedance_map", "=", "np", ".", "abs", "(", "predicted_impedance_mean", "-", "true_impedance", ")", "\n", "\n", "# plot overall uncertainty and predictive MAP", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance_std", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "predicted_impedance_std", ".", "min", "(", ")", ",", "vmax", "=", "predicted_impedance_std", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "cax", "=", "ax", ".", "imshow", "(", "predicted_impedance_map", "[", ":", ",", "0", "]", ".", "T", ",", "cmap", "=", "'rainbow'", ",", "aspect", "=", "0.6", ",", "vmin", "=", "predicted_impedance_map", ".", "min", "(", ")", ",", "vmax", "=", "predicted_impedance_map", ".", "max", "(", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "30", ")", "for", "label", "in", "labels", "]", "\n", "ax", ".", "xaxis", ".", "set_label_position", "(", "\"top\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Trace No.\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "30", ",", "labelpad", "=", "8.5", ")", "\n", "cbar", "=", "fig", ".", "colorbar", "(", "cax", ",", "shrink", "=", "0.6", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "tick_params", "(", "labelsize", "=", "20", ")", "\n", "cbar", ".", "set_label", "(", "'Impedance ((m/s)\u00b7(g/cc))'", ",", "fontsize", "=", "25", ",", "rotation", "=", "270", ",", "labelpad", "=", "30", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "pcc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "predicted_impedance_std", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "corr", ",", "_", "=", "metrics", "(", "predicted_impedance_map", "[", "i", ",", ":", "]", ",", "predicted_impedance_std", "[", "i", ",", ":", "]", ")", "\n", "pcc", ".", "append", "(", "corr", ")", "\n", "", "pcc", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "pcc", ")", ")", "\n", "print", "(", "\"pcc between predictive absolute difference and the uncertainty: {:0.4f}\"", ".", "format", "(", "pcc", ")", ")", "\n", "\n", "n", "=", "predicted_impedance_map", ".", "shape", "[", "-", "1", "]", "\n", "t", "=", "np", ".", "sqrt", "(", "n", "-", "2", ")", "*", "pcc", "/", "np", ".", "sqrt", "(", "1", "-", "np", ".", "square", "(", "np", ".", "array", "(", "pcc", ")", ")", ")", "\n", "print", "(", "\"value of t-statistics: {:0.4f}\"", ".", "format", "(", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "t", ")", ")", ")", ")", "\n", "p_value", "=", "scipy", ".", "stats", ".", "norm", ".", "cdf", "(", "t", ")", "\n", "print", "(", "\"p value of t-statistics: {:0.4f}\"", ".", "format", "(", "np", ".", "mean", "(", "1", "-", "p_value", ")", ")", ")", "\n", "\n", "# plot local uncertainty", "\n", "index_list", "=", "args", ".", "index_list", "\n", "iter", "=", "0", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "for", "index", "in", "index_list", ":", "\n", "            ", "iter", "+=", "1", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "len", "(", "index_list", ")", ",", "iter", ")", "\n", "mean", "=", "predicted_impedance_mean", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", "\n", "std", "=", "predicted_impedance_std", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", "\n", "\n", "if", "iter", "==", "1", ":", "\n", "                ", "ax", ".", "plot", "(", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"red\"", ",", "label", "=", "\"True Acoustic Impedance\"", ")", "\n", "ax", ".", "plot", "(", "mean", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"blue\"", ",", "label", "=", "'Mean Posterior Prediction'", ")", "\n", "ax", ".", "plot", "(", "np", ".", "abs", "(", "mean", "-", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ")", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"green\"", ",", "label", "=", "\"Bias of the Prediction\"", ")", "\n", "ax", ".", "plot", "(", "std", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"yellow\"", ",", "label", "=", "'Prediction Uncertainty'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "fill_betweenx", "(", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "mean", "-", "2", "*", "std", ",", "mean", "+", "2", "*", "std", ",", "alpha", "=", "0.25", ",", "label", "=", "'Two-Sigma Confidence Interval'", ")", "\n", "ax", ".", "set_title", "(", "\"Trace No.{index}\"", ".", "format", "(", "index", "=", "index", ")", ",", "fontsize", "=", "18", ")", "\n", "ax", ".", "invert_yaxis", "(", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Time (s)\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Impedance ((m/s)\u00b7(g/cc))\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_yticks", "(", "[", "0", ",", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", ",", "1920", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0", ",", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", ",", "3.0", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "10", ")", "for", "label", "in", "labels", "]", "\n", "", "else", ":", "\n", "                ", "ax", ".", "plot", "(", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"red\"", ")", "\n", "ax", ".", "plot", "(", "mean", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"blue\"", ")", "\n", "ax", ".", "plot", "(", "np", ".", "abs", "(", "mean", "-", "true_impedance", "[", "index", ",", "0", ",", ":", "]", ")", ".", "squeeze", "(", ")", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"green\"", ")", "\n", "ax", ".", "plot", "(", "std", ",", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "color", "=", "\"yellow\"", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "fill_betweenx", "(", "np", ".", "arange", "(", "true_impedance", ".", "shape", "[", "-", "1", "]", ")", ",", "mean", "-", "2", "*", "std", ",", "mean", "+", "2", "*", "std", ",", "alpha", "=", "0.25", ")", "\n", "ax", ".", "set_title", "(", "\"Trace No.{index}\"", ".", "format", "(", "index", "=", "index", ")", ",", "fontsize", "=", "18", ")", "\n", "ax", ".", "invert_yaxis", "(", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Impedance ((m/s)\u00b7(g/cc))\"", ",", "fontsize", "=", "12", ")", "\n", "ax", ".", "set_yticks", "(", "[", "0", ",", "320", ",", "640", ",", "960", ",", "1280", ",", "1600", ",", "1920", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "0", ",", "0.5", ",", "1.0", ",", "1.5", ",", "2.0", ",", "2.5", ",", "3.0", "]", ")", "\n", "labels", "=", "ax", ".", "get_xticklabels", "(", ")", "+", "ax", ".", "get_yticklabels", "(", ")", "\n", "[", "label", ".", "set_fontsize", "(", "10", ")", "for", "label", "in", "labels", "]", "\n", "\n", "", "", "fig", ".", "tight_layout", "(", ")", "\n", "fig", ".", "subplots_adjust", "(", "top", "=", "0.95", ",", "bottom", "=", "0.2", ",", "left", "=", "0.35", ",", "right", "=", "0.65", ")", "\n", "fig", ".", "legend", "(", "ncol", "=", "2", ",", "bbox_to_anchor", "=", "(", "0.5", ",", "0.01", ")", ",", "loc", "=", "\"lower center\"", ",", "frameon", "=", "False", ",", "prop", "=", "{", "'size'", ":", "15", "}", ")", "\n", "fig", ".", "subplots_adjust", "(", "wspace", "=", "0.3", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.__init__": [[7, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean_val", "=", "None", ",", "std_val", "=", "None", ")", ":", "\n", "        ", "self", ".", "mean_val", "=", "mean_val", "\n", "self", ".", "std_val", "=", "std_val", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.normalize": [[11, 13], ["None"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", "-", "self", ".", "mean_val", ")", "/", "self", ".", "std_val", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.Normalization.unnormalize": [[14, 16], ["None"], "methods", ["None"], ["", "def", "unnormalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "self", ".", "std_val", "+", "self", ".", "mean_val", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.metrics": [[18, 40], ["torch.is_tensor", "torch.is_tensor", "numpy.mean", "numpy.mean", "numpy.std", "numpy.std", "numpy.sum", "numpy.sum", "x.cpu.numpy", "y.cpu.numpy", "numpy.mean", "torch.tensor", "torch.tensor", "x.cpu.cpu", "y.cpu.cpu"], "function", ["None"], ["", "", "def", "metrics", "(", "y", ",", "x", ")", ":", "\n", "    ", "if", "torch", ".", "is_tensor", "(", "x", ")", ":", "\n", "        ", "if", "x", ".", "is_cuda", ":", "\n", "            ", "x", "=", "x", ".", "cpu", "(", ")", "\n", "", "x", "=", "x", ".", "numpy", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "y", ")", ":", "\n", "        ", "if", "y", ".", "is_cuda", ":", "\n", "            ", "y", "=", "y", ".", "cpu", "(", ")", "\n", "", "y", "=", "y", ".", "numpy", "(", ")", "\n", "\n", "", "x_mean", "=", "np", ".", "mean", "(", "x", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "y_mean", "=", "np", ".", "mean", "(", "y", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "x_std", "=", "np", ".", "std", "(", "x", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "y_std", "=", "np", ".", "std", "(", "y", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "corr", "=", "np", ".", "mean", "(", "(", "x", "-", "x_mean", ")", "*", "(", "y", "-", "y_mean", ")", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "/", "(", "x_std", "*", "y_std", ")", "\n", "\n", "S_tot", "=", "np", ".", "sum", "(", "(", "x", "-", "x_mean", ")", "**", "2", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "S_res", "=", "np", ".", "sum", "(", "(", "x", "-", "y", ")", "**", "2", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "r2", "=", "(", "1", "-", "S_res", "/", "S_tot", ")", "\n", "\n", "return", "torch", ".", "tensor", "(", "corr", ")", ",", "torch", ".", "tensor", "(", "r2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.display_results": [[42, 47], ["torch.mean().squeeze", "torch.mean().squeeze", "torch.mean", "print", "torch.tensor", "torch.mean", "torch.mean", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "display_results", "(", "loss", ",", "property_corr", ",", "property_r2", ",", "args", ",", "header", ")", ":", "\n", "    ", "property_corr", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "property_corr", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "property_r2", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "property_r2", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "tensor", "(", "loss", ")", ")", "\n", "print", "(", "\"loss: {:.4f}\\nCorrelation: {:0.4f}\\nr2 Coeff.  : {:0.4f}\"", ".", "format", "(", "loss", ",", "property_corr", ",", "property_r2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.PSNR": [[49, 55], ["true_image.astype.astype", "real_image.astype.astype", "skimage.metrics.peak_signal_noise_ratio", "true_image.astype.max", "true_image.astype.min"], "function", ["None"], ["", "def", "PSNR", "(", "true_image", ",", "real_image", ")", ":", "\n", "    ", "true_image", "=", "true_image", ".", "astype", "(", "np", ".", "float64", ")", "\n", "real_image", "=", "real_image", ".", "astype", "(", "np", ".", "float64", ")", "\n", "\n", "psnr", "=", "peak_signal_noise_ratio", "(", "true_image", ",", "real_image", ",", "data_range", "=", "true_image", ".", "max", "(", ")", "-", "true_image", ".", "min", "(", ")", ")", "\n", "return", "psnr", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.SSIM": [[57, 64], ["true_image.astype.astype", "real_image.astype.astype", "skimage.metrics.structural_similarity", "true_image.astype.max", "true_image.astype.min"], "function", ["None"], ["", "def", "SSIM", "(", "true_image", ",", "real_image", ")", ":", "\n", "    ", "true_image", "=", "true_image", ".", "astype", "(", "np", ".", "float64", ")", "\n", "real_image", "=", "real_image", ".", "astype", "(", "np", ".", "float64", ")", "\n", "\n", "ssim", "=", "structural_similarity", "(", "true_image", ",", "real_image", ",", "data_range", "=", "true_image", ".", "max", "(", ")", "-", "true_image", ".", "min", "(", ")", ")", "\n", "\n", "return", "ssim", "\n", "\n"]], "home.repos.pwc.inspect_result.tom-900_bayesian-semi-supervised-impedance-inversion.core.functions.accuracy": [[66, 73], ["numpy.sum"], "function", ["None"], ["", "def", "accuracy", "(", "predict_mean", ",", "predict_std", ",", "true_image", ")", ":", "\n", "    ", "lower_bound", "=", "predict_mean", "-", "2", "*", "predict_std", "\n", "upper_bound", "=", "predict_mean", "+", "2", "*", "predict_std", "\n", "flag", "=", "(", "true_image", ">", "lower_bound", ")", "*", "(", "true_image", "<", "upper_bound", ")", "\n", "accuracy", "=", "np", ".", "sum", "(", "flag", ")", "/", "(", "flag", ".", "shape", "[", "0", "]", "*", "flag", ".", "shape", "[", "1", "]", ")", "\n", "\n", "return", "accuracy", "\n", "\n"]]}