{"home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TrainOptions.__init__": [[4, 42], ["argparse.ArgumentParser", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# data loader related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'path of data'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'train'", ",", "help", "=", "'phase for dataloading'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'batch size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_size_x'", ",", "type", "=", "int", ",", "default", "=", "144", ",", "help", "=", "'resized image size for training,144 for face'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_size_y'", ",", "type", "=", "int", ",", "default", "=", "144", ",", "help", "=", "'resized image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--crop_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'cropped image size for training, 128 for face'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_a'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain A'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_b'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--nThreads'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "'# of threads for data loader'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_flip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'specified if no flipping'", ")", "\n", "\n", "# ouptput related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'trial'", ",", "help", "=", "'folder name to save outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_dir'", ",", "type", "=", "str", ",", "default", "=", "'../logs'", ",", "help", "=", "'path for saving display results'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "type", "=", "str", ",", "default", "=", "'../results'", ",", "help", "=", "'path for saving result images and models'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--img_save_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'freq (epoch) of saving images'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--model_save_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'freq (epoch) of saving models'", ")", "\n", "\n", "# training related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--concat'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'concatenate attribute features for translation, set 0 for using feature-wise transform'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_scale'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'scale of discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_norm'", ",", "type", "=", "str", ",", "default", "=", "'None'", ",", "help", "=", "'normalization layer in discriminator [None, Instance]'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_spectral_norm'", ",", "action", "=", "'store_true'", ",", "help", "=", "'use spectral normalization in discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr_policy'", ",", "type", "=", "str", ",", "default", "=", "'lambda'", ",", "help", "=", "'type of learn rate decay'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_ep'", ",", "type", "=", "int", ",", "default", "=", "80", ",", "help", "=", "'number of epochs'", ")", "# 400 * d_iter", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_ep_decay'", ",", "type", "=", "int", ",", "default", "=", "40", ",", "help", "=", "'epoch start decay learning rate, set -1 if no decay'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resume'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'specified the dir of saved models for resume the training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--d_iter'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of iterations for updating content discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "str", ",", "default", "=", "'cuda'", ",", "help", "=", "'gpu ids: e.g. 0  0,1,2, 0,2'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambdaB'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'perceptual loss weight for B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambdaI'", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "'perceptual loss weight for I'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--percp_layer'", ",", "type", "=", "int", ",", "default", "=", "14", ",", "help", "=", "'the layer of feature for perceptual loss'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--percep'", ",", "type", "=", "str", ",", "default", "=", "'default'", ",", "help", "=", "'type of perceptual loss: default, face, multi'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.0002", ",", "help", "=", "'learning rate'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TrainOptions.parse": [[43, 50], ["options.TrainOptions.parser.parse_args", "vars", "print", "sorted", "vars.items", "print", "str", "str"], "methods", ["None"], ["", "def", "parse", "(", "self", ")", ":", "\n", "    ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "args", "=", "vars", "(", "self", ".", "opt", ")", "\n", "print", "(", "'\\n--- load options ---'", ")", "\n", "for", "name", ",", "value", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "      ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "name", ")", ",", "str", "(", "value", ")", ")", ")", "\n", "", "return", "self", ".", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TestOptions.__init__": [[52, 80], ["argparse.ArgumentParser", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# data loader related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'path of data'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "'phase for dataloading'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'resized image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--crop_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'cropped image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--nThreads'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'for data loader'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_a'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain A'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_b'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--a2b'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'translation direction, 1 for a2b, 0 for b2a'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.0002", ",", "help", "=", "'learning rate'", ")", "\n", "\n", "# ouptput related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--num'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'number of outputs per image'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'trial'", ",", "help", "=", "'folder name to save outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "type", "=", "str", ",", "default", "=", "'../outputs'", ",", "help", "=", "'path for saving result images and models'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--orig_dir'", ",", "type", "=", "str", ",", "default", "=", "'../outputs'", ",", "help", "=", "'path for saving result images and models'", ")", "\n", "\n", "# model related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--concat'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'concatenate attribute features for translation, set 0 for using feature-wise transform'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resume'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'specified the dir of saved models for resume the training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'gpu'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambdaB'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'perceptual loss weight for B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambdaI'", ",", "type", "=", "float", ",", "default", "=", "10", ",", "help", "=", "'color loss weight'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--percep'", ",", "type", "=", "str", ",", "default", "=", "'default'", ",", "help", "=", "'type of perceptual loss: default(vgg19), face(vggface), multi'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--percp_layer'", ",", "type", "=", "int", ",", "default", "=", "14", ",", "help", "=", "'the layer of feature for perceptual loss'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TestOptions.parse": [[82, 93], ["options.TestOptions.parser.parse_args", "vars", "print", "sorted", "vars.items", "print", "str", "str"], "methods", ["None"], ["", "def", "parse", "(", "self", ")", ":", "\n", "    ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "args", "=", "vars", "(", "self", ".", "opt", ")", "\n", "print", "(", "'\\n--- load options ---'", ")", "\n", "for", "name", ",", "value", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "      ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "name", ")", ",", "str", "(", "value", ")", ")", ")", "\n", "# set irrelevant options", "\n", "", "self", ".", "opt", ".", "dis_scale", "=", "3", "\n", "self", ".", "opt", ".", "dis_norm", "=", "'None'", "\n", "self", ".", "opt", ".", "dis_spectral_norm", "=", "False", "\n", "return", "self", ".", "opt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis_content.__init__": [[16, 25], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Dis_content", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis_content.forward": [[26, 32], ["networks.Dis_content.model", "out.view.view.view", "outs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ")", "\n", "outs", "=", "[", "]", "\n", "outs", ".", "append", "(", "out", ")", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MultiScaleDis.__init__": [[34, 41], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "networks.MultiScaleDis.Diss.append", "networks.MultiScaleDis._make_net"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", ",", "n_scale", "=", "3", ",", "n_layer", "=", "4", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "MultiScaleDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "64", "\n", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", "\n", "self", ".", "Diss", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "n_scale", ")", ":", "\n", "      ", "self", ".", "Diss", ".", "append", "(", "self", ".", "_make_net", "(", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MultiScaleDis._make_net": [[42, 54], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.spectral_norm"], ["", "", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "4", ",", "2", ",", "1", ",", "norm", ",", "sn", ")", "]", "\n", "tch", "=", "ch", "\n", "for", "_", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "4", ",", "2", ",", "1", ",", "norm", ",", "sn", ")", "]", "\n", "tch", "*=", "2", "\n", "", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "1", ",", "1", ",", "0", ")", ")", "]", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "1", ",", "1", ",", "0", ")", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MultiScaleDis.forward": [[55, 61], ["outs.append", "networks.MultiScaleDis.downsample", "networks.Dis"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "outs", "=", "[", "]", "\n", "for", "Dis", "in", "self", ".", "Diss", ":", "\n", "      ", "outs", ".", "append", "(", "Dis", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.__init__": [[63, 68], ["torch.Module.__init__", "networks.Dis._make_net"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "Dis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "64", "\n", "n_layer", "=", "6", "\n", "self", ".", "model", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis._make_net": [[69, 83], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.spectral_norm"], ["", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "norm", ",", "sn", "=", "sn", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", "-", "1", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "norm", ",", "sn", "=", "sn", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'None'", ",", "sn", "=", "sn", ")", "]", "# 2", "\n", "tch", "*=", "2", "\n", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "]", "# 1", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda": [[84, 86], ["networks.Dis.model.cuda"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.forward": [[87, 93], ["networks.Dis.model", "out_A.view.view.view", "outs_A.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model", "(", "x_A", ")", "\n", "out_A", "=", "out_A", ".", "view", "(", "-", "1", ")", "\n", "outs_A", "=", "[", "]", "\n", "outs_A", ".", "append", "(", "out_A", ")", "\n", "return", "outs_A", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_content.__init__": [[98, 126], ["torch.Module.__init__", "range", "range", "range", "range", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConv2d", "networks.INSResBlock", "networks.ReLUINSConv2d", "networks.INSResBlock", "networks.INSResBlock", "networks.GaussianNoiseLayer"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim_a", ",", "input_dim_b", ")", ":", "\n", "    ", "super", "(", "E_content", ",", "self", ")", ".", "__init__", "(", ")", "\n", "encA_c", "=", "[", "]", "\n", "tch", "=", "64", "\n", "encA_c", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_a", ",", "tch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "3", ")", ":", "\n", "      ", "encA_c", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "encA_c", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "\n", "", "encB_c", "=", "[", "]", "\n", "tch", "=", "64", "\n", "encB_c", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_b", ",", "tch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "3", ")", ":", "\n", "      ", "encB_c", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "encB_c", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "\n", "", "enc_share", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "1", ")", ":", "\n", "      ", "enc_share", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "enc_share", "+=", "[", "GaussianNoiseLayer", "(", ")", "]", "\n", "self", ".", "conv_share", "=", "nn", ".", "Sequential", "(", "*", "enc_share", ")", "\n", "\n", "", "self", ".", "convA", "=", "nn", ".", "Sequential", "(", "*", "encA_c", ")", "\n", "self", ".", "convB", "=", "nn", ".", "Sequential", "(", "*", "encB_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_content.forward": [[127, 133], ["networks.E_content.convA", "networks.E_content.convB", "networks.E_content.conv_share", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xa", ",", "xb", ")", ":", "\n", "    ", "outputA", "=", "self", ".", "convA", "(", "xa", ")", "\n", "outputB", "=", "self", ".", "convB", "(", "xb", ")", "\n", "outputA", "=", "self", ".", "conv_share", "(", "outputA", ")", "\n", "outputB", "=", "self", ".", "conv_share", "(", "outputB", ")", "\n", "return", "outputA", ",", "outputB", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_content.forward_a": [[134, 138], ["networks.E_content.convA", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "xa", ")", ":", "\n", "    ", "outputA", "=", "self", ".", "convA", "(", "xa", ")", "\n", "outputA", "=", "self", ".", "conv_share", "(", "outputA", ")", "\n", "return", "outputA", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_content.forward_b": [[139, 143], ["networks.E_content.convB", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "xb", ")", ":", "\n", "    ", "outputB", "=", "self", ".", "convB", "(", "xb", ")", "\n", "outputB", "=", "self", ".", "conv_share", "(", "outputB", ")", "\n", "return", "outputB", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_attr_concat.__init__": [[145, 162], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "nl_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "min", "min", "networks.BasicBlock", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim_b", ",", "output_nc", "=", "8", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "None", ")", ":", "\n", "    ", "super", "(", "E_attr_concat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ndf", "=", "64", "\n", "n_blocks", "=", "4", "\n", "max_ndf", "=", "4", "\n", "\n", "conv_layers_B", "=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "conv_layers_B", "+=", "[", "nn", ".", "Conv2d", "(", "input_dim_b", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "for", "n", "in", "range", "(", "1", ",", "n_blocks", ")", ":", "\n", "      ", "input_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", ")", "# 2**(n-1)", "\n", "output_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", "+", "1", ")", "# 2**n", "\n", "conv_layers_B", "+=", "[", "BasicBlock", "(", "input_ndf", ",", "output_ndf", ",", "norm_layer", ",", "nl_layer", ")", "]", "\n", "", "conv_layers_B", "+=", "[", "nl_layer", "(", ")", ",", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "]", "# AvgPool2d(13)", "\n", "self", ".", "fc_B", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "fcVar_B", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "conv_B", "=", "nn", ".", "Sequential", "(", "*", "conv_layers_B", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_attr_concat.forward": [[163, 170], ["networks.E_attr_concat.conv_B", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_B", "networks.E_attr_concat.fcVar_B", "xb.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xb", ")", ":", "\n", "\n", "    ", "x_conv_B", "=", "self", ".", "conv_B", "(", "xb", ")", "\n", "conv_flat_B", "=", "x_conv_B", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_B", "=", "self", ".", "fc_B", "(", "conv_flat_B", ")", "\n", "outputVar_B", "=", "self", ".", "fcVar_B", "(", "conv_flat_B", ")", "\n", "return", "output_B", ",", "outputVar_B", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_attr_concat.forward_b": [[172, 178], ["networks.E_attr_concat.conv_B", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_B", "networks.E_attr_concat.fcVar_B", "xb.size"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "xb", ")", ":", "\n", "    ", "x_conv_B", "=", "self", ".", "conv_B", "(", "xb", ")", "\n", "conv_flat_B", "=", "x_conv_B", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_B", "=", "self", ".", "fc_B", "(", "conv_flat_B", ")", "\n", "outputVar_B", "=", "self", ".", "fcVar_B", "(", "conv_flat_B", ")", "\n", "return", "output_B", ",", "outputVar_B", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.__init__": [[184, 224], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.INSResBlock", "networks.INSResBlock", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "networks.INSResBlock", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "output_dim_a", ",", "output_dim_b", ",", "nz", ")", ":", "\n", "    ", "super", "(", "G_concat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nz", "=", "nz", "\n", "tch", "=", "256", "\n", "dec_share", "=", "[", "]", "\n", "dec_share", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "self", ".", "dec_share", "=", "nn", ".", "Sequential", "(", "*", "dec_share", ")", "\n", "tch", "=", "256", "+", "self", ".", "nz", "\n", "decA1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "decA1", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA2", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA3", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA4", "=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "+", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decA1", "=", "nn", ".", "Sequential", "(", "*", "decA1", ")", "\n", "self", ".", "decA2", "=", "nn", ".", "Sequential", "(", "*", "[", "decA2", "]", ")", "\n", "self", ".", "decA3", "=", "nn", ".", "Sequential", "(", "*", "[", "decA3", "]", ")", "\n", "self", ".", "decA4", "=", "nn", ".", "Sequential", "(", "*", "decA4", ")", "\n", "\n", "tch", "=", "256", "+", "self", ".", "nz", "\n", "decB1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "decB1", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB2", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB3", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB4", "=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "+", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decB1", "=", "nn", ".", "Sequential", "(", "*", "decB1", ")", "\n", "self", ".", "decB2", "=", "nn", ".", "Sequential", "(", "*", "[", "decB2", "]", ")", "\n", "self", ".", "decB3", "=", "nn", ".", "Sequential", "(", "*", "[", "decB3", "]", ")", "\n", "self", ".", "decB4", "=", "nn", ".", "Sequential", "(", "*", "decB4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_D": [[225, 240], ["networks.G_concat.dec_share", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA1", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA2", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA3", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA4", "z.size", "z.size", "x.size", "x.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.view", "z.view", "z.view", "z.view", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward_D", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "out0", "=", "self", ".", "dec_share", "(", "x", ")", "\n", "z_img", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x_and_z", "=", "torch", ".", "cat", "(", "[", "out0", ",", "z_img", "]", ",", "1", ")", "\n", "out1", "=", "self", ".", "decA1", "(", "x_and_z", ")", "\n", "z_img2", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out1", ".", "size", "(", "2", ")", ",", "out1", ".", "size", "(", "3", ")", ")", "\n", "x_and_z2", "=", "torch", ".", "cat", "(", "[", "out1", ",", "z_img2", "]", ",", "1", ")", "\n", "out2", "=", "self", ".", "decA2", "(", "x_and_z2", ")", "\n", "z_img3", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out2", ".", "size", "(", "2", ")", ",", "out2", ".", "size", "(", "3", ")", ")", "\n", "x_and_z3", "=", "torch", ".", "cat", "(", "[", "out2", ",", "z_img3", "]", ",", "1", ")", "\n", "out3", "=", "self", ".", "decA3", "(", "x_and_z3", ")", "\n", "z_img4", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out3", ".", "size", "(", "2", ")", ",", "out3", ".", "size", "(", "3", ")", ")", "\n", "x_and_z4", "=", "torch", ".", "cat", "(", "[", "out3", ",", "z_img4", "]", ",", "1", ")", "\n", "out4", "=", "self", ".", "decA4", "(", "x_and_z4", ")", "\n", "return", "out4", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_B": [[241, 256], ["networks.G_concat.dec_share", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB1", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB2", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB3", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB4", "z.size", "z.size", "x.size", "x.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.view", "z.view", "z.view", "z.view", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward_B", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "out0", "=", "self", ".", "dec_share", "(", "x", ")", "\n", "z_img", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x_and_z", "=", "torch", ".", "cat", "(", "[", "out0", ",", "z_img", "]", ",", "1", ")", "\n", "out1", "=", "self", ".", "decB1", "(", "x_and_z", ")", "\n", "z_img2", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out1", ".", "size", "(", "2", ")", ",", "out1", ".", "size", "(", "3", ")", ")", "\n", "x_and_z2", "=", "torch", ".", "cat", "(", "[", "out1", ",", "z_img2", "]", ",", "1", ")", "\n", "out2", "=", "self", ".", "decB2", "(", "x_and_z2", ")", "\n", "z_img3", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out2", ".", "size", "(", "2", ")", ",", "out2", ".", "size", "(", "3", ")", ")", "\n", "x_and_z3", "=", "torch", ".", "cat", "(", "[", "out2", ",", "z_img3", "]", ",", "1", ")", "\n", "out3", "=", "self", ".", "decB3", "(", "x_and_z3", ")", "\n", "z_img4", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out3", ".", "size", "(", "2", ")", ",", "out3", ".", "size", "(", "3", ")", ")", "\n", "x_and_z4", "=", "torch", ".", "cat", "(", "[", "out3", ",", "z_img4", "]", ",", "1", ")", "\n", "out4", "=", "self", ".", "decB4", "(", "x_and_z4", ")", "\n", "return", "out4", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.PerceptualLoss.__init__": [[261, 274], ["super().__init__", "cnn.cuda.cuda.cuda", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.cuda.cuda.cuda", "enumerate", "torchvision.vgg19", "list", "model.cuda.cuda.add_module", "str"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["    ", "def", "__init__", "(", "self", ",", "loss", ",", "gpu", "=", "0", ",", "p_layer", "=", "14", ")", ":", "\n", "        ", "super", "(", "PerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "loss", "\n", "\n", "cnn", "=", "py_models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "cnn", "=", "cnn", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "Sequential", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "list", "(", "cnn", ")", ")", ":", "\n", "            ", "model", ".", "add_module", "(", "str", "(", "i", ")", ",", "layer", ")", "\n", "if", "i", "==", "p_layer", ":", "\n", "                ", "break", "\n", "", "", "self", ".", "contentFunc", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.PerceptualLoss.getloss": [[275, 284], ["isinstance", "networks.PerceptualLoss.contentFunc.forward", "networks.PerceptualLoss.contentFunc.forward", "networks.PerceptualLoss.detach", "networks.PerceptualLoss.criterion", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "getloss", "(", "self", ",", "fakeIm", ",", "realIm", ")", ":", "\n", "        ", "if", "isinstance", "(", "fakeIm", ",", "numpy", ".", "ndarray", ")", ":", "\n", "            ", "fakeIm", "=", "torch", ".", "from_numpy", "(", "fakeIm", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "realIm", "=", "torch", ".", "from_numpy", "(", "realIm", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "", "f_fake", "=", "self", ".", "contentFunc", ".", "forward", "(", "fakeIm", ")", "\n", "f_real", "=", "self", ".", "contentFunc", ".", "forward", "(", "realIm", ")", "\n", "f_real_no_grad", "=", "f_real", ".", "detach", "(", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "f_fake", ",", "f_real_no_grad", ")", "\n", "return", "loss", "\n", "", "", "class", "PerceptualLoss16", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.PerceptualLoss16.__init__": [[285, 304], ["super().__init__", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torchvision.vgg16", "torchvision.vgg16.load_state_dict", "cnn.cuda.cuda.cuda", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.cuda.cuda.cuda", "enumerate", "list", "model.cuda.cuda.add_module", "str"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["    ", "def", "__init__", "(", "self", ",", "loss", ",", "gpu", "=", "0", ",", "p_layer", "=", "14", ")", ":", "\n", "        ", "super", "(", "PerceptualLoss16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "loss", "\n", "#         conv_3_3_layer = 14", "\n", "checkpoint", "=", "torch", ".", "load", "(", "'/vggface_path/VGGFace16.pth'", ")", "\n", "vgg16", "=", "py_models", ".", "vgg16", "(", "num_classes", "=", "2622", ")", "\n", "vgg16", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "cnn", "=", "vgg16", ".", "features", "\n", "cnn", "=", "cnn", ".", "cuda", "(", ")", "\n", "#         cnn = cnn.to(gpu)", "\n", "model", "=", "nn", ".", "Sequential", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "list", "(", "cnn", ")", ")", ":", "\n", "#             print(layer)", "\n", "            ", "model", ".", "add_module", "(", "str", "(", "i", ")", ",", "layer", ")", "\n", "if", "i", "==", "p_layer", ":", "\n", "                ", "break", "\n", "", "", "self", ".", "contentFunc", "=", "model", "\n", "del", "vgg16", ",", "cnn", ",", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.PerceptualLoss16.getloss": [[305, 315], ["isinstance", "networks.PerceptualLoss16.contentFunc.forward", "networks.PerceptualLoss16.contentFunc.forward", "networks.PerceptualLoss16.detach", "networks.PerceptualLoss16.criterion", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float().cuda", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "getloss", "(", "self", ",", "fakeIm", ",", "realIm", ")", ":", "\n", "        ", "if", "isinstance", "(", "fakeIm", ",", "numpy", ".", "ndarray", ")", ":", "\n", "            ", "fakeIm", "=", "torch", ".", "from_numpy", "(", "fakeIm", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "realIm", "=", "torch", ".", "from_numpy", "(", "realIm", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "", "f_fake", "=", "self", ".", "contentFunc", ".", "forward", "(", "fakeIm", ")", "\n", "f_real", "=", "self", ".", "contentFunc", ".", "forward", "(", "realIm", ")", "\n", "f_real_no_grad", "=", "f_real", ".", "detach", "(", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "f_fake", ",", "f_real_no_grad", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.GradientLoss.__init__": [[317, 322], ["super().__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "loss", ",", "n_scale", "=", "3", ")", ":", "\n", "        ", "super", "(", "GradientLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", "\n", "self", ".", "criterion", "=", "loss", "\n", "self", ".", "n_scale", "=", "n_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.GradientLoss.grad_xy": [[323, 327], ["None"], "methods", ["None"], ["", "def", "grad_xy", "(", "self", ",", "img", ")", ":", "\n", "        ", "gradient_x", "=", "img", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "img", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "\n", "gradient_y", "=", "img", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "img", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "return", "gradient_x", ",", "gradient_y", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.GradientLoss.getloss": [[328, 337], ["range", "networks.GradientLoss.downsample", "networks.GradientLoss.downsample", "networks.GradientLoss.grad_xy", "networks.GradientLoss.grad_xy", "networks.GradientLoss.criterion", "pow", "networks.GradientLoss.criterion"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.grad_xy", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.grad_xy"], ["", "def", "getloss", "(", "self", ",", "fakeIm", ",", "realIm", ")", ":", "\n", "        ", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "n_scale", ")", ":", "\n", "            ", "fakeIm", "=", "self", ".", "downsample", "(", "fakeIm", ")", "\n", "realIm", "=", "self", ".", "downsample", "(", "realIm", ")", "\n", "grad_fx", ",", "grad_fy", "=", "self", ".", "grad_xy", "(", "fakeIm", ")", "\n", "grad_rx", ",", "grad_ry", "=", "self", ".", "grad_xy", "(", "realIm", ")", "\n", "loss", "+=", "pow", "(", "4", ",", "i", ")", "*", "self", ".", "criterion", "(", "grad_fx", ",", "grad_rx", ")", "+", "self", ".", "criterion", "(", "grad_fy", ",", "grad_ry", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.__init__": [[339, 344], ["super().__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "loss", ",", "n_scale", "=", "3", ")", ":", "\n", "        ", "super", "(", "l1GradientLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", "\n", "self", ".", "criterion", "=", "loss", "\n", "self", ".", "n_scale", "=", "n_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.grad_xy": [[345, 349], ["None"], "methods", ["None"], ["", "def", "grad_xy", "(", "self", ",", "img", ")", ":", "\n", "        ", "gradient_x", "=", "img", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "img", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "\n", "gradient_y", "=", "img", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "img", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "return", "gradient_x", ",", "gradient_y", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss": [[350, 358], ["range", "networks.l1GradientLoss.downsample", "networks.l1GradientLoss.grad_xy", "networks.l1GradientLoss.criterion", "networks.l1GradientLoss.criterion", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.grad_xy"], ["", "def", "getloss", "(", "self", ",", "fakeIm", ")", ":", "\n", "        ", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "n_scale", ")", ":", "\n", "            ", "fakeIm", "=", "self", ".", "downsample", "(", "fakeIm", ")", "\n", "grad_fx", ",", "grad_fy", "=", "self", ".", "grad_xy", "(", "fakeIm", ")", "\n", "loss", "+=", "self", ".", "criterion", "(", "grad_fx", ",", "torch", ".", "zeros_like", "(", "grad_fx", ")", ")", "+", "self", ".", "criterion", "(", "grad_fy", ",", "torch", ".", "zeros_like", "(", "grad_fy", ")", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.LayerNorm.__init__": [[421, 429], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_out", ",", "eps", "=", "1e-5", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "LayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_out", "=", "n_out", "\n", "self", ".", "affine", "=", "affine", "\n", "if", "self", ".", "affine", ":", "\n", "      ", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "n_out", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "n_out", ",", "1", ",", "1", ")", ")", "\n", "", "return", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.LayerNorm.forward": [[429, 435], ["x.size", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "networks.LayerNorm.weight.expand", "networks.LayerNorm.bias.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "normalized_shape", "=", "x", ".", "size", "(", ")", "[", "1", ":", "]", "\n", "if", "self", ".", "affine", ":", "\n", "      ", "return", "F", ".", "layer_norm", "(", "x", ",", "normalized_shape", ",", "self", ".", "weight", ".", "expand", "(", "normalized_shape", ")", ",", "self", ".", "bias", ".", "expand", "(", "normalized_shape", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "F", ".", "layer_norm", "(", "x", ",", "normalized_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.BasicBlock.__init__": [[437, 450], ["torch.Module.__init__", "networks.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.meanpoolConv", "nl_layer", "nl_layer", "networks.convMeanpool", "norm_layer", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.meanpoolConv", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.convMeanpool"], ["  ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "None", ")", ":", "\n", "    ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "      ", "layers", "+=", "[", "norm_layer", "(", "inplanes", ")", "]", "\n", "", "layers", "+=", "[", "nl_layer", "(", ")", "]", "\n", "layers", "+=", "conv3x3", "(", "inplanes", ",", "inplanes", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "      ", "layers", "+=", "[", "norm_layer", "(", "inplanes", ")", "]", "\n", "", "layers", "+=", "[", "nl_layer", "(", ")", "]", "\n", "layers", "+=", "[", "convMeanpool", "(", "inplanes", ",", "outplanes", ")", "]", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "shortcut", "=", "meanpoolConv", "(", "inplanes", ",", "outplanes", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.BasicBlock.forward": [[450, 453], ["networks.BasicBlock.conv", "networks.BasicBlock.shortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.LeakyReLUConv2d.__init__": [[455, 468], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d.model.apply", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.spectral_norm"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "LeakyReLUConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "]", "\n", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "]", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "", "if", "'norm'", "==", "'Instance'", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "#elif == 'Group'", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.LeakyReLUConv2d.forward": [[469, 471], ["networks.LeakyReLUConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.ReLUINSConv2d.__init__": [[473, 482], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConv2d.model.apply", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "ReLUINSConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.ReLUINSConv2d.forward": [[482, 484], ["networks.ReLUINSConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.INSResBlock.conv3x3": [[486, 488], ["torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["  ", "def", "conv3x3", "(", "self", ",", "inplanes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "inplanes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ")", "]", "\n", "", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.INSResBlock.__init__": [[488, 500], ["torch.Module.__init__", "networks.INSResBlock.conv3x3", "networks.INSResBlock.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.INSResBlock.model.apply", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply"], ["", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "super", "(", "INSResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "self", ".", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "model", "+=", "self", ".", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.INSResBlock.forward": [[500, 505], ["networks.INSResBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv3x3": [[507, 509], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["  ", "def", "conv3x3", "(", "self", ",", "dim_in", ",", "dim_out", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ")", ")", "\n", "", "def", "conv1x1", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv1x1": [[509, 511], ["torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["", "def", "conv1x1", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "def", "__init__", "(", "self", ",", "dim", ",", "dim_extra", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.__init__": [[511, 538], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.MisINSResBlock.model.apply", "networks.MisINSResBlock.conv1.apply", "networks.MisINSResBlock.conv2.apply", "networks.MisINSResBlock.blk1.apply", "networks.MisINSResBlock.blk2.apply", "networks.MisINSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "networks.MisINSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.conv1x1"], ["", "def", "__init__", "(", "self", ",", "dim", ",", "dim_extra", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "super", "(", "MisINSResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv3x3", "(", "dim", ",", "dim", ",", "stride", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "dim", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv3x3", "(", "dim", ",", "dim", ",", "stride", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "dim", ")", ")", "\n", "self", ".", "blk1", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", "+", "dim_extra", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "\n", "self", ".", "blk2", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", "+", "dim_extra", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "\n", "model", "=", "[", "]", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "conv1", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "conv2", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "blk1", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "blk2", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.MisINSResBlock.forward": [[538, 547], ["z.view().expand", "networks.MisINSResBlock.conv1", "networks.MisINSResBlock.blk1", "networks.MisINSResBlock.conv2", "networks.MisINSResBlock.blk2", "z.size", "z.size", "x.size", "x.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "z.view", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "z_expand", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "o1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "o2", "=", "self", ".", "blk1", "(", "torch", ".", "cat", "(", "[", "o1", ",", "z_expand", "]", ",", "dim", "=", "1", ")", ")", "\n", "o3", "=", "self", ".", "conv2", "(", "o2", ")", "\n", "out", "=", "self", ".", "blk2", "(", "torch", ".", "cat", "(", "[", "o3", ",", "z_expand", "]", ",", "dim", "=", "1", ")", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.GaussianNoiseLayer.__init__": [[549, 551], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "    ", "super", "(", "GaussianNoiseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.GaussianNoiseLayer.forward": [[551, 556], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "x.get_device", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "x.size"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "training", "==", "False", ":", "\n", "      ", "return", "x", "\n", "", "noise", "=", "Variable", "(", "torch", ".", "randn", "(", "x", ".", "size", "(", ")", ")", ".", "cuda", "(", "x", ".", "get_device", "(", ")", ")", ")", "\n", "return", "x", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.ReLUINSConvTranspose2d.__init__": [[558, 566], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "networks.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "output_padding", ")", ":", "\n", "    ", "super", "(", "ReLUINSConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "output_padding", "=", "output_padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "LayerNorm", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.ReLUINSConvTranspose2d.forward": [[566, 568], ["networks.ReLUINSConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.__init__": [[575, 583], ["ValueError"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "name", "=", "'weight'", ",", "n_power_iterations", "=", "1", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "self", ".", "name", "=", "name", "\n", "self", ".", "dim", "=", "dim", "\n", "if", "n_power_iterations", "<=", "0", ":", "\n", "      ", "raise", "ValueError", "(", "'Expected n_power_iterations to be positive, but '", "\n", "'got n_power_iterations={}'", ".", "format", "(", "n_power_iterations", ")", ")", "\n", "", "self", ".", "n_power_iterations", "=", "n_power_iterations", "\n", "self", ".", "eps", "=", "eps", "\n", "", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.compute_weight": [[583, 600], ["getattr", "getattr", "weight_mat.permute.permute.size", "weight_mat.permute.permute.reshape", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "weight_mat.permute.permute.permute", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "weight_mat.permute.permute.t", "range", "weight_mat.permute.permute.dim"], "methods", ["None"], ["", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n", "    ", "weight", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", "\n", "u", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ")", "\n", "weight_mat", "=", "weight", "\n", "if", "self", ".", "dim", "!=", "0", ":", "\n", "# permute dim to front", "\n", "      ", "weight_mat", "=", "weight_mat", ".", "permute", "(", "self", ".", "dim", ",", "\n", "*", "[", "d", "for", "d", "in", "range", "(", "weight_mat", ".", "dim", "(", ")", ")", "if", "d", "!=", "self", ".", "dim", "]", ")", "\n", "", "height", "=", "weight_mat", ".", "size", "(", "0", ")", "\n", "weight_mat", "=", "weight_mat", ".", "reshape", "(", "height", ",", "-", "1", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "for", "_", "in", "range", "(", "self", ".", "n_power_iterations", ")", ":", "\n", "        ", "v", "=", "F", ".", "normalize", "(", "torch", ".", "matmul", "(", "weight_mat", ".", "t", "(", ")", ",", "u", ")", ",", "dim", "=", "0", ",", "eps", "=", "self", ".", "eps", ")", "\n", "u", "=", "F", ".", "normalize", "(", "torch", ".", "matmul", "(", "weight_mat", ",", "v", ")", ",", "dim", "=", "0", ",", "eps", "=", "self", ".", "eps", ")", "\n", "", "", "sigma", "=", "torch", ".", "dot", "(", "u", ",", "torch", ".", "matmul", "(", "weight_mat", ",", "v", ")", ")", "\n", "weight", "=", "weight", "/", "sigma", "\n", "return", "weight", ",", "u", "\n", "", "def", "remove", "(", "self", ",", "module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.remove": [[600, 606], ["getattr", "delattr", "delattr", "delattr", "module.register_parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter"], "methods", ["None"], ["", "def", "remove", "(", "self", ",", "module", ")", ":", "\n", "    ", "weight", "=", "getattr", "(", "module", ",", "self", ".", "name", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", "\n", "module", ".", "register_parameter", "(", "self", ".", "name", ",", "torch", ".", "nn", ".", "Parameter", "(", "weight", ")", ")", "\n", "", "def", "__call__", "(", "self", ",", "module", ",", "inputs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.__call__": [[606, 614], ["networks.SpectralNorm.compute_weight", "setattr", "setattr", "getattr().detach_().requires_grad_", "getattr", "getattr().detach_", "getattr"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.compute_weight"], ["", "def", "__call__", "(", "self", ",", "module", ",", "inputs", ")", ":", "\n", "    ", "if", "module", ".", "training", ":", "\n", "      ", "weight", ",", "u", "=", "self", ".", "compute_weight", "(", "module", ")", "\n", "setattr", "(", "module", ",", "self", ".", "name", ",", "weight", ")", "\n", "setattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ",", "u", ")", "\n", "", "else", ":", "\n", "      ", "r_g", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", ".", "requires_grad", "\n", "getattr", "(", "module", ",", "self", ".", "name", ")", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "r_g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply": [[615, 627], ["networks.SpectralNorm", "weight.size", "torch.normalize", "torch.normalize", "torch.normalize", "delattr", "module.register_parameter", "module.register_buffer", "module.register_buffer", "module.register_forward_pre_hook", "weight.new_empty().normal_", "weight.new_empty"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "apply", "(", "module", ",", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", ":", "\n", "    ", "fn", "=", "SpectralNorm", "(", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", "\n", "weight", "=", "module", ".", "_parameters", "[", "name", "]", "\n", "height", "=", "weight", ".", "size", "(", "dim", ")", "\n", "u", "=", "F", ".", "normalize", "(", "weight", ".", "new_empty", "(", "height", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "dim", "=", "0", ",", "eps", "=", "fn", ".", "eps", ")", "\n", "delattr", "(", "module", ",", "fn", ".", "name", ")", "\n", "module", ".", "register_parameter", "(", "fn", ".", "name", "+", "\"_orig\"", ",", "weight", ")", "\n", "module", ".", "register_buffer", "(", "fn", ".", "name", ",", "weight", ".", "data", ")", "\n", "module", ".", "register_buffer", "(", "fn", ".", "name", "+", "\"_u\"", ",", "u", ")", "\n", "module", ".", "register_forward_pre_hook", "(", "fn", ")", "\n", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler": [[362, 373], ["torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.StepLR", "NotImplementedError", "max", "float"], "function", ["None"], ["", "", "def", "get_scheduler", "(", "optimizer", ",", "opts", ",", "cur_ep", "=", "-", "1", ")", ":", "\n", "  ", "if", "opts", ".", "lr_policy", "==", "'lambda'", ":", "\n", "    ", "def", "lambda_rule", "(", "ep", ")", ":", "\n", "      ", "lr_l", "=", "1.0", "-", "max", "(", "0", ",", "ep", "-", "opts", ".", "n_ep_decay", ")", "/", "float", "(", "opts", ".", "n_ep", "-", "opts", ".", "n_ep_decay", "+", "1", ")", "\n", "return", "lr_l", "\n", "", "scheduler", "=", "lr_scheduler", ".", "LambdaLR", "(", "optimizer", ",", "lr_lambda", "=", "lambda_rule", ",", "last_epoch", "=", "cur_ep", ")", "\n", "", "elif", "opts", ".", "lr_policy", "==", "'step'", ":", "\n", "    ", "scheduler", "=", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "opts", ".", "n_ep_decay", ",", "gamma", "=", "0.1", ",", "last_epoch", "=", "cur_ep", ")", "\n", "", "else", ":", "\n", "    ", "return", "NotImplementedError", "(", "'no such learn rate policy'", ")", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.meanpoolConv": [[374, 379], ["torch.Sequential", "torch.AvgPool2d", "torch.Conv2d"], "function", ["None"], ["", "def", "meanpoolConv", "(", "inplanes", ",", "outplanes", ")", ":", "\n", "  ", "sequence", "=", "[", "]", "\n", "sequence", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "sequence", "+=", "[", "nn", ".", "Conv2d", "(", "inplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.convMeanpool": [[380, 385], ["networks.conv3x3", "torch.Sequential", "torch.AvgPool2d"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3"], ["", "def", "convMeanpool", "(", "inplanes", ",", "outplanes", ")", ":", "\n", "  ", "sequence", "=", "[", "]", "\n", "sequence", "+=", "conv3x3", "(", "inplanes", ",", "outplanes", ")", "\n", "sequence", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_norm_layer": [[386, 396], ["functools.partial", "functools.partial", "NotImplementedError"], "function", ["None"], ["", "def", "get_norm_layer", "(", "layer_type", "=", "'instance'", ")", ":", "\n", "  ", "if", "layer_type", "==", "'batch'", ":", "\n", "    ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "BatchNorm2d", ",", "affine", "=", "True", ")", "\n", "", "elif", "layer_type", "==", "'instance'", ":", "\n", "    ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ")", "\n", "", "elif", "layer_type", "==", "'none'", ":", "\n", "    ", "norm_layer", "=", "None", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "layer_type", ")", "\n", "", "return", "norm_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_non_linearity": [[397, 407], ["functools.partial", "functools.partial", "functools.partial", "NotImplementedError"], "function", ["None"], ["", "def", "get_non_linearity", "(", "layer_type", "=", "'relu'", ")", ":", "\n", "  ", "if", "layer_type", "==", "'relu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "ReLU", ",", "inplace", "=", "True", ")", "\n", "", "elif", "layer_type", "==", "'lrelu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "LeakyReLU", ",", "negative_slope", "=", "0.2", ",", "inplace", "=", "False", ")", "\n", "", "elif", "layer_type", "==", "'elu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "ELU", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'nonlinearity activitation [%s] is not found'", "%", "layer_type", ")", "\n", "", "return", "nl_layer", "\n", "", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.conv3x3": [[407, 409], ["torch.ReflectionPad2d", "torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "  ", "return", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.gaussian_weights_init": [[410, 414], ["m.weight.data.normal_", "classname.find", "classname.find"], "function", ["None"], ["", "def", "gaussian_weights_init", "(", "m", ")", ":", "\n", "  ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "and", "classname", ".", "find", "(", "'Conv'", ")", "==", "0", ":", "\n", "    ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.spectral_norm": [[628, 638], ["networks.SpectralNorm.apply", "isinstance"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply"], ["", "", "def", "spectral_norm", "(", "module", ",", "name", "=", "'weight'", ",", "n_power_iterations", "=", "1", ",", "eps", "=", "1e-12", ",", "dim", "=", "None", ")", ":", "\n", "  ", "if", "dim", "is", "None", ":", "\n", "    ", "if", "isinstance", "(", "module", ",", "(", "torch", ".", "nn", ".", "ConvTranspose1d", ",", "\n", "torch", ".", "nn", ".", "ConvTranspose2d", ",", "\n", "torch", ".", "nn", ".", "ConvTranspose3d", ")", ")", ":", "\n", "      ", "dim", "=", "1", "\n", "", "else", ":", "\n", "      ", "dim", "=", "0", "\n", "", "", "SpectralNorm", ".", "apply", "(", "module", ",", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", "\n", "return", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.remove_spectral_norm": [[639, 646], ["module._forward_pre_hooks.items", "ValueError", "isinstance", "hook.remove"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.remove"], ["", "def", "remove_spectral_norm", "(", "module", ",", "name", "=", "'weight'", ")", ":", "\n", "  ", "for", "k", ",", "hook", "in", "module", ".", "_forward_pre_hooks", ".", "items", "(", ")", ":", "\n", "    ", "if", "isinstance", "(", "hook", ",", "SpectralNorm", ")", "and", "hook", ".", "name", "==", "name", ":", "\n", "      ", "hook", ".", "remove", "(", "module", ")", "\n", "del", "module", ".", "_forward_pre_hooks", "[", "k", "]", "\n", "return", "module", "\n", "", "", "raise", "ValueError", "(", "\"spectral_norm of '{}' not found in {}\"", ".", "format", "(", "name", ",", "module", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.train.main": [[7, 72], ["options.TrainOptions", "options.TrainOptions.parse", "print", "dataset.dataset_unpair", "torch.utils.data.DataLoader", "print", "model.UID", "model.UID.setgpu", "model.UID.set_scheduler", "print", "saver.Saver", "print", "range", "model.UID.initialize", "model.UID.resume", "enumerate", "saver.Saver.write_model", "images_a.cuda().detach.cuda().detach", "images_b.cuda().detach.cuda().detach", "model.UID.update_D", "model.UID.update_EG", "model.UID.update_lr", "print", "print", "print", "saver.Saver.write_img", "saver.Saver.write_img", "saver.Saver.write_model", "images_a.cuda().detach.size", "images_b.cuda().detach.size", "images_a.cuda().detach.cuda", "images_b.cuda().detach.cuda", "len", "len"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TestOptions.parse", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.setgpu", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.set_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.initialize", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.resume", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_model", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_EG", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_lr", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_model", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["def", "main", "(", ")", ":", "\n", "# parse options", "\n", "  ", "parser", "=", "TrainOptions", "(", ")", "\n", "opts", "=", "parser", ".", "parse", "(", ")", "\n", "\n", "# daita loader", "\n", "print", "(", "'\\n--- load dataset ---'", ")", "\n", "dataset", "=", "dataset_unpair", "(", "opts", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opts", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "\n", "# model", "\n", "print", "(", "'\\n--- load model ---'", ")", "\n", "model", "=", "UID", "(", "opts", ")", "\n", "model", ".", "setgpu", "(", "opts", ".", "gpu", ")", "\n", "if", "opts", ".", "resume", "is", "None", ":", "\n", "    ", "model", ".", "initialize", "(", ")", "\n", "ep0", "=", "-", "1", "\n", "total_it", "=", "0", "\n", "", "else", ":", "\n", "    ", "ep0", ",", "total_it", "=", "model", ".", "resume", "(", "opts", ".", "resume", ")", "\n", "", "model", ".", "set_scheduler", "(", "opts", ",", "last_ep", "=", "ep0", ")", "\n", "ep0", "+=", "1", "\n", "print", "(", "'start the training at epoch %d'", "%", "(", "ep0", ")", ")", "\n", "\n", "# saver for display and output", "\n", "saver", "=", "Saver", "(", "opts", ")", "\n", "\n", "# train", "\n", "print", "(", "'\\n--- train ---'", ")", "\n", "max_it", "=", "500000", "\n", "for", "ep", "in", "range", "(", "ep0", ",", "opts", ".", "n_ep", ")", ":", "\n", "    ", "for", "it", ",", "(", "images_a", ",", "images_b", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "      ", "if", "images_a", ".", "size", "(", "0", ")", "!=", "opts", ".", "batch_size", "or", "images_b", ".", "size", "(", "0", ")", "!=", "opts", ".", "batch_size", ":", "\n", "        ", "continue", "\n", "", "images_a", "=", "images_a", ".", "cuda", "(", "opts", ".", "gpu", ")", ".", "detach", "(", ")", "\n", "images_b", "=", "images_b", ".", "cuda", "(", "opts", ".", "gpu", ")", ".", "detach", "(", ")", "\n", "\n", "# update model", "\n", "model", ".", "update_D", "(", "images_a", ",", "images_b", ")", "\n", "if", "(", "it", "+", "1", ")", "%", "2", "!=", "0", "and", "it", "!=", "len", "(", "train_loader", ")", "-", "1", ":", "\n", "        ", "continue", "\n", "", "model", ".", "update_EG", "(", ")", "\n", "\n", "# save to display file", "\n", "if", "(", "it", "+", "1", ")", "%", "48", "==", "0", ":", "\n", "        ", "print", "(", "'total_it: %d (ep %d, it %d), lr %08f'", "%", "(", "total_it", "+", "1", ",", "ep", ",", "it", "+", "1", ",", "model", ".", "gen_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'Dis_I_loss: %04f, Dis_B_loss %04f, GAN_loss_I %04f, GAN_loss_B %04f'", "%", "(", "model", ".", "disA_loss", ",", "model", ".", "disB_loss", ",", "model", ".", "gan_loss_i", ",", "model", ".", "gan_loss_b", ")", ")", "\n", "print", "(", "'B_percp_loss %04f, Recon_II_loss %04f'", "%", "(", "model", ".", "B_percp_loss", ",", "model", ".", "l1_recon_II_loss", ")", ")", "\n", "", "if", "(", "it", "+", "1", ")", "%", "200", "==", "0", ":", "\n", "        ", "saver", ".", "write_img", "(", "ep", "*", "len", "(", "train_loader", ")", "+", "(", "it", "+", "1", ")", ",", "model", ")", "\n", "\n", "", "total_it", "+=", "1", "\n", "if", "total_it", ">=", "max_it", ":", "\n", "        ", "saver", ".", "write_img", "(", "-", "1", ",", "model", ")", "\n", "saver", ".", "write_model", "(", "-", "1", ",", "model", ")", "\n", "break", "\n", "\n", "# decay learning rate", "\n", "", "", "if", "opts", ".", "n_ep_decay", ">", "-", "1", ":", "\n", "      ", "model", ".", "update_lr", "(", ")", "\n", "\n", "# Save network weights", "\n", "", "saver", ".", "write_model", "(", "ep", ",", "total_it", "+", "1", ",", "model", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_single.__init__": [[8, 19], ["os.listdir", "len", "transforms.append", "torchvision.transforms.Compose", "print", "os.path.join", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ",", "setname", ",", "input_dim", ")", ":", "\n", "    ", "self", ".", "dataroot", "=", "opts", ".", "dataroot", "\n", "images", "=", "os", ".", "listdir", "(", "self", ".", "dataroot", ")", "\n", "self", ".", "img", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "x", ")", "for", "x", "in", "images", "]", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "img", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "transforms", "=", "[", "ToTensor", "(", ")", "]", "\n", "transforms", ".", "append", "(", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "print", "(", "'%s: %d images'", "%", "(", "setname", ",", "self", ".", "size", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_single.__getitem__": [[20, 23], ["dataset.dataset_single.load_img"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "data", "=", "self", ".", "load_img", "(", "self", ".", "img", "[", "index", "]", ",", "self", ".", "input_dim", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_single.load_img": [[24, 31], ["PIL.Image.open().convert", "dataset.dataset_single.transforms", "img.unsqueeze.unsqueeze.unsqueeze", "PIL.Image.open"], "methods", ["None"], ["", "def", "load_img", "(", "self", ",", "img_name", ",", "input_dim", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "img_name", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "if", "input_dim", "==", "1", ":", "\n", "      ", "img", "=", "img", "[", "0", ",", "...", "]", "*", "0.299", "+", "img", "[", "1", ",", "...", "]", "*", "0.587", "+", "img", "[", "2", ",", "...", "]", "*", "0.114", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "img", ",", "img_name", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_single.__len__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.__init__": [[36, 64], ["sorted", "sorted", "len", "len", "max", "transforms.append", "transforms.append", "torchvision.transforms.Compose", "print", "os.listdir", "os.path.join", "os.listdir", "os.path.join", "transforms.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "os.path.join", "torchvision.transforms.RandomCrop", "torchvision.transforms.CenterCrop", "torchvision.transforms.RandomHorizontalFlip"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "self", ".", "dataroot", "=", "opts", ".", "dataroot", "\n", "# A", "\n", "images_A", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'A'", ")", ")", ")", "\n", "self", ".", "A", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'A'", ",", "x", ")", "for", "x", "in", "images_A", "]", "\n", "# B", "\n", "images_B", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'B'", ")", ")", ")", "\n", "self", ".", "B", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'B'", ",", "x", ")", "for", "x", "in", "images_B", "]", "\n", "\n", "self", ".", "A_size", "=", "len", "(", "self", ".", "A", ")", "\n", "self", ".", "B_size", "=", "len", "(", "self", ".", "B", ")", "\n", "self", ".", "dataset_size", "=", "max", "(", "self", ".", "A_size", ",", "self", ".", "B_size", ")", "\n", "self", ".", "input_dim_A", "=", "opts", ".", "input_dim_a", "\n", "self", ".", "input_dim_B", "=", "opts", ".", "input_dim_b", "\n", "self", ".", "resize_x", "=", "opts", ".", "resize_size_x", "\n", "self", ".", "resize_y", "=", "opts", ".", "resize_size_y", "\n", "\n", "if", "opts", ".", "phase", "==", "'train'", ":", "\n", "      ", "transforms", "=", "[", "RandomCrop", "(", "opts", ".", "crop_size", ")", "]", "\n", "", "else", ":", "\n", "      ", "transforms", "=", "[", "CenterCrop", "(", "opts", ".", "crop_size", ")", "]", "\n", "", "if", "not", "opts", ".", "no_flip", ":", "\n", "      ", "transforms", ".", "append", "(", "RandomHorizontalFlip", "(", ")", ")", "\n", "", "transforms", ".", "append", "(", "ToTensor", "(", ")", ")", "\n", "transforms", ".", "append", "(", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "print", "(", "'A: %d, B: %d images'", "%", "(", "self", ".", "A_size", ",", "self", ".", "B_size", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.__getitem__": [[65, 74], ["dataset.dataset_unpair.load_img", "random.randint", "dataset.dataset_unpair.load_img", "dataset.dataset_unpair.load_img", "dataset.dataset_unpair.load_img", "random.randint"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "if", "self", ".", "dataset_size", "==", "self", ".", "A_size", ":", "\n", "      ", "data_A", "=", "self", ".", "load_img", "(", "self", ".", "A", "[", "index", "]", ",", "self", ".", "input_dim_A", ")", "\n", "temp_b_index", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "B_size", "-", "1", ")", "\n", "data_B", "=", "self", ".", "load_img", "(", "self", ".", "B", "[", "temp_b_index", "]", ",", "self", ".", "input_dim_B", ")", "\n", "", "else", ":", "\n", "      ", "data_A", "=", "self", ".", "load_img", "(", "self", ".", "A", "[", "random", ".", "randint", "(", "0", ",", "self", ".", "A_size", "-", "1", ")", "]", ",", "self", ".", "input_dim_A", ")", "\n", "data_B", "=", "self", ".", "load_img", "(", "self", ".", "B", "[", "index", "]", ",", "self", ".", "input_dim_B", ")", "\n", "", "return", "data_A", ",", "data_B", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.load_img": [[75, 92], ["PIL.Image.open().convert", "torchvision.transforms.Compose", "torchvision.transforms.Compose.", "dataset.dataset_unpair.transforms", "round", "round", "img.unsqueeze.unsqueeze.unsqueeze", "PIL.Image.open", "torchvision.transforms.Resize"], "methods", ["None"], ["", "def", "load_img", "(", "self", ",", "img_name", ",", "input_dim", ")", ":", "\n", "\n", "    ", "img", "=", "Image", ".", "open", "(", "img_name", ")", ".", "convert", "(", "'RGB'", ")", "\n", "(", "w", ",", "h", ")", "=", "img", ".", "size", "\n", "if", "w", "<", "h", ":", "\n", "        ", "resize_x", "=", "self", ".", "resize_x", "\n", "resize_y", "=", "round", "(", "self", ".", "resize_x", "*", "h", "/", "w", ")", "\n", "", "else", ":", "\n", "        ", "resize_y", "=", "self", ".", "resize_y", "\n", "resize_x", "=", "round", "(", "self", ".", "resize_y", "*", "w", "/", "h", ")", "\n", "", "resize_img", "=", "Compose", "(", "[", "Resize", "(", "(", "resize_y", ",", "resize_x", ")", ",", "Image", ".", "BICUBIC", ")", "]", ")", "\n", "img", "=", "resize_img", "(", "img", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "if", "input_dim", "==", "1", ":", "\n", "      ", "img", "=", "img", "[", "0", ",", "...", "]", "*", "0.299", "+", "img", "[", "1", ",", "...", "]", "*", "0.587", "+", "img", "[", "2", ",", "...", "]", "*", "0.114", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.dataset.dataset_unpair.__len__": [[93, 95], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "dataset_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.test.main": [[17, 103], ["options.TestOptions", "options.TestOptions.parse", "os.path.join", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "model.UID", "model.UID.setgpu", "model.UID.resume", "model.UID.eval", "print", "enumerate", "sorted", "sorted", "sorted", "zip", "print", "print", "print", "print", "print", "print", "os.path.exists", "os.mkdir", "dataset.dataset_single", "dataset.dataset_single", "print", "img1.cuda().detach.cuda().detach", "img_name[].split", "saver.save_imgs", "networks.PerceptualLoss", "os.listdir", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "skimage.io.imread", "skimage.io.imread", "skimage.io.imread", "percp.append", "blur_percp.append", "torch.no_grad", "torch.no_grad", "model.UID.test_forward", "torch.MSELoss", "networks.PerceptualLoss16", "networks.MultiPerceptualLoss", "psnr.append", "ssim.append", "blur_psnr.append", "blur_ssim.append", "torch.no_grad", "torch.no_grad", "networks.PerceptualLoss.getloss", "networks.PerceptualLoss.getloss", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "len", "img1.cuda().detach.cuda", "torch.MSELoss", "torch.MSELoss", "skimage.measure.compare_psnr", "skimage.measure.compare_ssim", "skimage.measure.compare_psnr", "skimage.measure.compare_ssim", "print"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.options.TestOptions.parse", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.setgpu", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.resume", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.save_imgs", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.test_forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["def", "main", "(", ")", ":", "\n", "\n", "# parse options", "\n", "    ", "parser", "=", "TestOptions", "(", ")", "\n", "opts", "=", "parser", ".", "parse", "(", ")", "\n", "result_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "result_dir", ",", "opts", ".", "name", ")", "\n", "orig_dir", "=", "opts", ".", "orig_dir", "\n", "blur_dir", "=", "opts", ".", "dataroot", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "result_dir", ")", "\n", "\n", "# data loader", "\n", "", "print", "(", "'\\n--- load dataset ---'", ")", "\n", "if", "opts", ".", "a2b", ":", "\n", "        ", "dataset", "=", "dataset_single", "(", "opts", ",", "'A'", ",", "opts", ".", "input_dim_a", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "dataset_single", "(", "opts", ",", "'B'", ",", "opts", ".", "input_dim_b", ")", "\n", "", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "\n", "# model", "\n", "print", "(", "'\\n--- load model ---'", ")", "\n", "model", "=", "UID", "(", "opts", ")", "\n", "model", ".", "setgpu", "(", "opts", ".", "gpu", ")", "\n", "model", ".", "resume", "(", "opts", ".", "resume", ",", "train", "=", "False", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# test", "\n", "print", "(", "'\\n--- testing ---'", ")", "\n", "for", "idx1", ",", "(", "img1", ",", "img_name", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "print", "(", "'{}/{}'", ".", "format", "(", "idx1", ",", "len", "(", "loader", ")", ")", ")", "\n", "img1", "=", "img1", ".", "cuda", "(", "opts", ".", "gpu", ")", ".", "detach", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "img", "=", "model", ".", "test_forward", "(", "img1", ",", "a2b", "=", "opts", ".", "a2b", ")", "\n", "", "img_name", "=", "img_name", "[", "0", "]", ".", "split", "(", "'/'", ")", "\n", "img_name", "=", "img_name", "[", "-", "1", "]", "\n", "save_imgs", "(", "img", ",", "img_name", ",", "result_dir", ")", "\n", "\n", "# evaluate metrics", "\n", "", "if", "opts", ".", "percep", "==", "'default'", ":", "\n", "        ", "pLoss", "=", "PerceptualLoss", "(", "nn", ".", "MSELoss", "(", ")", ",", "p_layer", "=", "36", ")", "\n", "", "elif", "opts", ".", "percep", "==", "'face'", ":", "\n", "        ", "self", ".", "perceptualLoss", "=", "networks", ".", "PerceptualLoss16", "(", "nn", ".", "MSELoss", "(", ")", ",", "p_layer", "=", "30", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "perceptualLoss", "=", "networks", ".", "MultiPerceptualLoss", "(", "nn", ".", "MSELoss", "(", ")", ")", "\n", "\n", "", "orig_list", "=", "sorted", "(", "os", ".", "listdir", "(", "orig_dir", ")", ")", "\n", "deblur_list", "=", "sorted", "(", "os", ".", "listdir", "(", "result_dir", ")", ")", "\n", "blur_list", "=", "sorted", "(", "os", ".", "listdir", "(", "blur_dir", ")", ")", "\n", "\n", "psnr", "=", "[", "]", "\n", "ssim", "=", "[", "]", "\n", "percp", "=", "[", "]", "\n", "blur_psnr", "=", "[", "]", "\n", "blur_ssim", "=", "[", "]", "\n", "blur_percp", "=", "[", "]", "\n", "\n", "for", "(", "deblur_img_name", ",", "orig_img_name", ",", "blur_img_name", ")", "in", "zip", "(", "deblur_list", ",", "orig_list", ",", "blur_list", ")", ":", "\n", "        ", "deblur_img_name", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "deblur_img_name", ")", "\n", "orig_img_name", "=", "os", ".", "path", ".", "join", "(", "orig_dir", ",", "orig_img_name", ")", "\n", "blur_img_name", "=", "os", ".", "path", ".", "join", "(", "blur_dir", ",", "blur_img_name", ")", "\n", "deblur_img", "=", "imread", "(", "deblur_img_name", ")", "\n", "orig_img", "=", "imread", "(", "orig_img_name", ")", "\n", "blur_img", "=", "imread", "(", "blur_img_name", ")", "\n", "try", ":", "\n", "            ", "psnr", ".", "append", "(", "PSNR", "(", "deblur_img", ",", "orig_img", ")", ")", "\n", "ssim", ".", "append", "(", "SSIM", "(", "deblur_img", ",", "orig_img", ",", "multichannel", "=", "True", ")", ")", "\n", "blur_psnr", ".", "append", "(", "PSNR", "(", "blur_img", ",", "orig_img", ")", ")", "\n", "blur_ssim", ".", "append", "(", "SSIM", "(", "blur_img", ",", "orig_img", ",", "multichannel", "=", "True", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "            ", "print", "(", "orig_img_name", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "temp", "=", "pLoss", ".", "getloss", "(", "deblur_img", ",", "orig_img", ")", "\n", "temp2", "=", "pLoss", ".", "getloss", "(", "blur_img", ",", "orig_img", ")", "\n", "", "percp", ".", "append", "(", "temp", ")", "\n", "blur_percp", ".", "append", "(", "temp2", ")", "\n", "\n", "", "print", "(", "sum", "(", "psnr", ")", "/", "len", "(", "psnr", ")", ")", "\n", "print", "(", "sum", "(", "ssim", ")", "/", "len", "(", "ssim", ")", ")", "\n", "print", "(", "sum", "(", "percp", ")", "/", "len", "(", "percp", ")", ")", "\n", "\n", "print", "(", "sum", "(", "blur_psnr", ")", "/", "len", "(", "psnr", ")", ")", "\n", "print", "(", "sum", "(", "blur_ssim", ")", "/", "len", "(", "ssim", ")", ")", "\n", "print", "(", "sum", "(", "blur_percp", ")", "/", "len", "(", "percp", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.__init__": [[8, 62], ["torch.Module.__init__", "networks.E_content", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.Dis", "networks.Dis", "networks.Dis", "networks.Dis", "networks.E_attr_concat", "networks.E_attr", "networks.G_concat", "networks.G", "model.UID.disA.parameters", "model.UID.disB.parameters", "model.UID.disA2.parameters", "model.UID.disB2.parameters", "model.UID.enc_c.parameters", "model.UID.enc_a.parameters", "model.UID.gen.parameters", "networks.PerceptualLoss", "torch.MSELoss", "torch.MSELoss", "networks.PerceptualLoss16", "networks.MultiPerceptualLoss", "networks.get_non_linearity", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_non_linearity"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "super", "(", "UID", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# parameters", "\n", "lr", "=", "opts", ".", "lr", "\n", "self", ".", "nz", "=", "8", "\n", "self", ".", "concat", "=", "opts", ".", "concat", "\n", "self", ".", "lambdaB", "=", "opts", ".", "lambdaB", "\n", "self", ".", "lambdaI", "=", "opts", ".", "lambdaI", "\n", "\n", "# discriminators", "\n", "if", "opts", ".", "dis_scale", ">", "1", ":", "\n", "      ", "self", ".", "disA", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_b", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disA2", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB2", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_b", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "disA", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_a", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_b", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disA2", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_a", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB2", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_b", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "\n", "# encoders", "\n", "", "self", ".", "enc_c", "=", "networks", ".", "E_content", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ")", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "enc_a", "=", "networks", ".", "E_attr_concat", "(", "opts", ".", "input_dim_b", ",", "self", ".", "nz", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "networks", ".", "get_non_linearity", "(", "layer_type", "=", "'lrelu'", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "enc_a", "=", "networks", ".", "E_attr", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "self", ".", "nz", ")", "\n", "\n", "# generator", "\n", "", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "gen", "=", "networks", ".", "G_concat", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "nz", "=", "self", ".", "nz", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "gen", "=", "networks", ".", "G", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "nz", "=", "self", ".", "nz", ")", "\n", "\n", "# optimizers", "\n", "", "self", ".", "disA_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disA", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disB_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disB", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disA2_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disA2", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disB2_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disB2", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "\n", "self", ".", "enc_c_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "enc_c", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "enc_a_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "enc_a", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "\n", "# Setup the loss function for training", "\n", "self", ".", "criterionL1", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "if", "opts", ".", "percep", "==", "'default'", ":", "\n", "        ", "self", ".", "perceptualLoss", "=", "networks", ".", "PerceptualLoss", "(", "nn", ".", "MSELoss", "(", ")", ",", "opts", ".", "gpu", ",", "opts", ".", "percp_layer", ")", "\n", "", "elif", "opts", ".", "percep", "==", "'face'", ":", "\n", "        ", "self", ".", "perceptualLoss", "=", "networks", ".", "PerceptualLoss16", "(", "nn", ".", "MSELoss", "(", ")", ",", "opts", ".", "gpu", ",", "opts", ".", "percp_layer", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "perceptualLoss", "=", "networks", ".", "MultiPerceptualLoss", "(", "nn", ".", "MSELoss", "(", ")", ",", "opts", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.initialize": [[63, 71], ["model.UID.disA.apply", "model.UID.disB.apply", "model.UID.disA2.apply", "model.UID.disB2.apply", "model.UID.gen.apply", "model.UID.enc_c.apply", "model.UID.enc_a.apply"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.SpectralNorm.apply"], ["", "", "def", "initialize", "(", "self", ")", ":", "\n", "    ", "self", ".", "disA", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disB", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disA2", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disB2", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "enc_c", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "enc_a", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.set_scheduler": [[72, 80], ["networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.get_scheduler"], ["", "def", "set_scheduler", "(", "self", ",", "opts", ",", "last_ep", "=", "0", ")", ":", "\n", "    ", "self", ".", "disA_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disA_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disB_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disB_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disA2_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disA2_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disB2_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disB2_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "enc_c_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "enc_c_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "enc_a_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "enc_a_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "gen_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "gen_opt", ",", "opts", ",", "last_ep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.setgpu": [[81, 90], ["model.UID.disA.cuda", "model.UID.disB.cuda", "model.UID.disA2.cuda", "model.UID.disB2.cuda", "model.UID.enc_c.cuda", "model.UID.enc_a.cuda", "model.UID.gen.cuda"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "setgpu", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "disA", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disB", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disA2", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disB2", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "enc_c", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "enc_a", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.get_z_random": [[91, 94], ["torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "get_z_random", "(", "self", ",", "batchSize", ",", "nz", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "z", "=", "torch", ".", "randn", "(", "batchSize", ",", "nz", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.test_forward": [[95, 105], ["model.UID.enc_c.forward_b", "model.UID.enc_a.forward", "model.UID.logvar_b.mul().exp_", "model.UID.get_z_random", "model.UID.mul().add_", "model.UID.gen.forward_D", "model.UID.size", "model.UID.size", "model.UID.logvar_b.mul", "model.UID.mul"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.E_attr_concat.forward_b", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.get_z_random", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_D"], ["", "def", "test_forward", "(", "self", ",", "image", ",", "a2b", "=", "True", ")", ":", "\n", "    ", "if", "a2b", ":", "\n", "        ", "self", ".", "z_content", "=", "self", ".", "enc_c", ".", "forward_b", "(", "image", ")", "\n", "self", ".", "mu_b", ",", "self", ".", "logvar_b", "=", "self", ".", "enc_a", ".", "forward", "(", "image", ")", "\n", "std_b", "=", "self", ".", "logvar_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_b", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_b", "=", "eps_b", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_b", ")", "\n", "output", "=", "self", ".", "gen", ".", "forward_D", "(", "self", ".", "z_content", ",", "self", ".", "z_attr_b", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward": [[107, 166], ["model.UID.enc_c.forward", "model.UID.get_z_random", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UID.gen.forward_D", "model.UID.gen.forward_B", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "model.UID.enc_c.forward", "model.UID.gen.forward_D", "model.UID.gen.forward_B", "real_I.size", "model.UID.enc_a.forward", "model.UID.logvar_b.mul().exp_", "model.UID.get_z_random", "model.UID.mul().add_", "model.UID.enc_a.forward", "model.UID.real_I_encoded.size", "model.UID.z_content_i.size", "model.UID.z_content_i.size", "model.UID.enc_a.forward", "model.UID.logvar_recon_b.mul().exp_", "model.UID.get_z_random", "model.UID.mul().add_", "model.UID.enc_a.forward", "model.UID.enc_a.forward", "model.UID.enc_a.forward", "model.UID.size", "model.UID.size", "model.UID.size", "model.UID.size", "model.UID.logvar_b.mul", "model.UID.mul", "model.UID.logvar_recon_b.mul", "model.UID.mul"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.get_z_random", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_B", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.G_concat.forward_B", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.get_z_random", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.get_z_random", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward"], ["", "def", "forward", "(", "self", ")", ":", "\n", "# input images", "\n", "    ", "real_I", "=", "self", ".", "input_I", "\n", "real_B", "=", "self", ".", "input_B", "\n", "half_size", "=", "real_I", ".", "size", "(", "0", ")", "//", "2", "\n", "self", ".", "real_I_encoded", "=", "real_I", "[", "0", ":", "half_size", "]", "\n", "self", ".", "real_I_random", "=", "real_I", "[", "half_size", ":", "]", "\n", "self", ".", "real_B_encoded", "=", "real_B", "[", "0", ":", "half_size", "]", "\n", "self", ".", "real_B_random", "=", "real_B", "[", "half_size", ":", "]", "\n", "\n", "# get encoded z_c", "\n", "self", ".", "z_content_i", ",", "self", ".", "z_content_b", "=", "self", ".", "enc_c", ".", "forward", "(", "self", ".", "real_I_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "\n", "# get encoded z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu_b", ",", "self", ".", "logvar_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "real_B_encoded", ")", "\n", "std_b", "=", "self", ".", "logvar_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_b", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_b", "=", "eps_b", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_b", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_i", ",", "self", ".", "z_attr_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "real_I_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "\n", "# get random z_a", "\n", "", "self", ".", "z_random", "=", "self", ".", "get_z_random", "(", "self", ".", "real_I_encoded", ".", "size", "(", "0", ")", ",", "self", ".", "nz", ",", "'gauss'", ")", "\n", "\n", "# first cross translation", "\n", "input_content_forI", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_b", ",", "self", ".", "z_content_i", ",", "self", ".", "z_content_b", ")", ",", "0", ")", "\n", "input_content_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_i", ",", "self", ".", "z_content_b", ",", "self", ".", "z_content_i", ")", ",", "0", ")", "\n", "input_attr_forI", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_b", ",", "self", ".", "z_attr_b", ",", "self", ".", "z_random", ")", ",", "0", ")", "\n", "input_attr_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_b", ",", "self", ".", "z_attr_b", ",", "self", ".", "z_random", ")", ",", "0", ")", "\n", "\n", "\n", "output_fakeI", "=", "self", ".", "gen", ".", "forward_D", "(", "input_content_forI", ",", "input_attr_forI", ")", "\n", "output_fakeB", "=", "self", ".", "gen", ".", "forward_B", "(", "input_content_forB", ",", "input_attr_forB", ")", "\n", "self", ".", "fake_I_encoded", ",", "self", ".", "fake_II_encoded", ",", "self", ".", "fake_I_random", "=", "torch", ".", "split", "(", "output_fakeI", ",", "self", ".", "z_content_i", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "self", ".", "fake_B_encoded", ",", "self", ".", "fake_BB_encoded", ",", "self", ".", "fake_B_random", "=", "torch", ".", "split", "(", "output_fakeB", ",", "self", ".", "z_content_i", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# get reconstructed encoded z_c", "\n", "self", ".", "z_content_recon_b", ",", "self", ".", "z_content_recon_i", "=", "self", ".", "enc_c", ".", "forward", "(", "self", ".", "fake_I_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "\n", "# get reconstructed encoded z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu_recon_b", ",", "self", ".", "logvar_recon_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_B_encoded", ")", "\n", "std_b", "=", "self", ".", "logvar_recon_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_b", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_recon_b", "=", "eps_b", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_recon_b", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_recon_i", ",", "self", ".", "z_attr_recon_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "\n", "# second cross translation", "\n", "", "self", ".", "fake_I_recon", "=", "self", ".", "gen", ".", "forward_D", "(", "self", ".", "z_content_recon_i", ",", "self", ".", "z_attr_recon_b", ")", "\n", "self", ".", "fake_B_recon", "=", "self", ".", "gen", ".", "forward_B", "(", "self", ".", "z_content_recon_b", ",", "self", ".", "z_attr_recon_b", ")", "\n", "\n", "\n", "# for latent regression", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu2_b", ",", "_", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_B_random", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_random_i", ",", "self", ".", "z_attr_random_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_B_random", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_D": [[168, 196], ["model.UID.forward", "model.UID.disA_opt.zero_grad", "model.UID.backward_D", "model.UID.item", "model.UID.disA_opt.step", "model.UID.disA2_opt.zero_grad", "model.UID.backward_D", "model.UID.item", "model.UID.disA2_opt.step", "model.UID.disB_opt.zero_grad", "model.UID.backward_D", "model.UID.item", "model.UID.disB_opt.step", "model.UID.disB2_opt.zero_grad", "model.UID.backward_D", "model.UID.item", "model.UID.disB2_opt.step"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_D", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_D"], ["", "", "def", "update_D", "(", "self", ",", "image_a", ",", "image_b", ")", ":", "\n", "    ", "self", ".", "input_I", "=", "image_a", "\n", "self", ".", "input_B", "=", "image_b", "\n", "self", ".", "forward", "(", ")", "\n", "\n", "# update disA", "\n", "self", ".", "disA_opt", ".", "zero_grad", "(", ")", "\n", "loss_D1_A", "=", "self", ".", "backward_D", "(", "self", ".", "disA", ",", "self", ".", "real_I_encoded", ",", "self", ".", "fake_I_encoded", ")", "\n", "self", ".", "disA_loss", "=", "loss_D1_A", ".", "item", "(", ")", "\n", "self", ".", "disA_opt", ".", "step", "(", ")", "\n", "\n", "# update disA2", "\n", "self", ".", "disA2_opt", ".", "zero_grad", "(", ")", "\n", "loss_D2_A", "=", "self", ".", "backward_D", "(", "self", ".", "disA2", ",", "self", ".", "real_I_random", ",", "self", ".", "fake_I_random", ")", "\n", "self", ".", "disA2_loss", "=", "loss_D2_A", ".", "item", "(", ")", "\n", "self", ".", "disA2_opt", ".", "step", "(", ")", "\n", "\n", "# update disB", "\n", "self", ".", "disB_opt", ".", "zero_grad", "(", ")", "\n", "loss_D1_B", "=", "self", ".", "backward_D", "(", "self", ".", "disB", ",", "self", ".", "real_B_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "self", ".", "disB_loss", "=", "loss_D1_B", ".", "item", "(", ")", "\n", "self", ".", "disB_opt", ".", "step", "(", ")", "\n", "\n", "# update disB2", "\n", "self", ".", "disB2_opt", ".", "zero_grad", "(", ")", "\n", "loss_D2_B", "=", "self", ".", "backward_D", "(", "self", ".", "disB2", ",", "self", ".", "real_B_random", ",", "self", ".", "fake_B_random", ")", "\n", "self", ".", "disB2_loss", "=", "loss_D2_B", ".", "item", "(", ")", "\n", "self", ".", "disB2_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_D": [[197, 211], ["netD.forward", "netD.forward", "enumerate", "loss_D.backward", "fake.detach", "zip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "backward_D", "(", "self", ",", "netD", ",", "real", ",", "fake", ")", ":", "\n", "    ", "pred_fake", "=", "netD", ".", "forward", "(", "fake", ".", "detach", "(", ")", ")", "\n", "pred_real", "=", "netD", ".", "forward", "(", "real", ")", "\n", "loss_D", "=", "0", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "zip", "(", "pred_fake", ",", "pred_real", ")", ")", ":", "\n", "      ", "out_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "out_real", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all0", "=", "torch", ".", "zeros_like", "(", "out_fake", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "all1", "=", "torch", ".", "ones_like", "(", "out_real", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "ad_fake_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake", ",", "all0", ")", "\n", "ad_true_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_real", ",", "all1", ")", "\n", "loss_D", "+=", "ad_true_loss", "+", "ad_fake_loss", "\n", "", "loss_D", ".", "backward", "(", ")", "\n", "return", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_EG": [[212, 228], ["model.UID.enc_c_opt.zero_grad", "model.UID.enc_a_opt.zero_grad", "model.UID.gen_opt.zero_grad", "model.UID.backward_EG", "model.UID.enc_c_opt.step", "model.UID.enc_a_opt.step", "model.UID.gen_opt.step", "model.UID.enc_c_opt.zero_grad", "model.UID.gen_opt.zero_grad", "model.UID.backward_G_alone", "model.UID.enc_c_opt.step", "model.UID.gen_opt.step"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_EG", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_alone"], ["", "def", "update_EG", "(", "self", ")", ":", "\n", "# update G, Ec, Ea", "\n", "    ", "self", ".", "enc_c_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "enc_a_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "gen_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_EG", "(", ")", "\n", "self", ".", "enc_c_opt", ".", "step", "(", ")", "\n", "self", ".", "enc_a_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "\n", "# update G, Ec", "\n", "self", ".", "enc_c_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "gen_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_G_alone", "(", ")", "\n", "self", ".", "enc_c_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_EG": [[229, 271], ["model.UID.backward_G_GAN", "model.UID.backward_G_GAN", "loss_G.backward", "model.UID.item", "model.UID.item", "loss_kl_za_b.item", "loss_G_L1_I.item", "loss_G_L1_B.item", "loss_G_L1_II.item", "loss_G_L1_BB.item", "percp_loss_B.item", "loss_G.item", "model.UID.mu_b.pow().add_().mul_().add_().add_", "model.UID.criterionL1", "model.UID.criterionL1", "model.UID.criterionL1", "model.UID.criterionL1", "model.UID.perceptualLoss.getloss", "model.UID.perceptualLoss.getloss", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "model.UID._l2_regularize", "model.UID.mu_b.pow().add_().mul_().add_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "model.UID.mu_b.pow().add_().mul_", "model.UID.mu_b.pow().add_", "model.UID.logvar_b.exp", "model.UID.mu_b.pow"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_GAN", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_GAN", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID._l2_regularize"], ["", "def", "backward_EG", "(", "self", ")", ":", "\n", "\n", "\n", "# Ladv for generator", "\n", "    ", "loss_G_GAN_I", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_I_encoded", ",", "self", ".", "disA", ")", "\n", "loss_G_GAN_B", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_B_encoded", ",", "self", ".", "disB", ")", "\n", "\n", "# KL loss - z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "kl_element_b", "=", "self", ".", "mu_b", ".", "pow", "(", "2", ")", ".", "add_", "(", "self", ".", "logvar_b", ".", "exp", "(", ")", ")", ".", "mul_", "(", "-", "1", ")", ".", "add_", "(", "1", ")", ".", "add_", "(", "self", ".", "logvar_b", ")", "\n", "loss_kl_za_b", "=", "torch", ".", "sum", "(", "kl_element_b", ")", ".", "mul_", "(", "-", "0.5", ")", "*", "0.01", "\n", "", "else", ":", "\n", "      ", "loss_kl_za_b", "=", "self", ".", "_l2_regularize", "(", "self", ".", "z_attr_b", ")", "*", "0.01", "\n", "\n", "# cross cycle consistency loss", "\n", "", "loss_G_L1_I", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_I_recon", ",", "self", ".", "real_I_encoded", ")", "*", "10", "\n", "loss_G_L1_B", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_B_recon", ",", "self", ".", "real_B_encoded", ")", "*", "10", "\n", "loss_G_L1_II", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_II_encoded", ",", "self", ".", "real_I_encoded", ")", "*", "10", "\n", "loss_G_L1_BB", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_BB_encoded", ",", "self", ".", "real_B_encoded", ")", "*", "10", "\n", "\n", "# perceptual losses", "\n", "percp_loss_B", "=", "self", ".", "perceptualLoss", ".", "getloss", "(", "self", ".", "fake_I_encoded", ",", "self", ".", "real_B_encoded", ")", "*", "self", ".", "lambdaB", "\n", "percp_loss_I", "=", "self", ".", "perceptualLoss", ".", "getloss", "(", "self", ".", "fake_B_encoded", ",", "self", ".", "real_I_encoded", ")", "*", "self", ".", "lambdaI", "\n", "\n", "loss_G", "=", "loss_G_GAN_I", "+", "loss_G_GAN_B", "+", "loss_G_L1_II", "+", "loss_G_L1_BB", "+", "loss_G_L1_I", "+", "loss_G_L1_B", "+", "loss_kl_za_b", "+", "percp_loss_B", "+", "percp_loss_I", "\n", "\n", "loss_G", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "\n", "self", ".", "gan_loss_i", "=", "loss_G_GAN_I", ".", "item", "(", ")", "\n", "self", ".", "gan_loss_b", "=", "loss_G_GAN_B", ".", "item", "(", ")", "\n", "\n", "self", ".", "kl_loss_za_b", "=", "loss_kl_za_b", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_I_loss", "=", "loss_G_L1_I", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_B_loss", "=", "loss_G_L1_B", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_II_loss", "=", "loss_G_L1_II", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_BB_loss", "=", "loss_G_L1_BB", ".", "item", "(", ")", "\n", "self", ".", "B_percp_loss", "=", "percp_loss_B", ".", "item", "(", ")", "\n", "self", ".", "G_loss", "=", "loss_G", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_GAN": [[273, 281], ["netD.forward", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.forward", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.Dis.cuda"], ["", "def", "backward_G_GAN", "(", "self", ",", "fake", ",", "netD", "=", "None", ")", ":", "\n", "    ", "outs_fake", "=", "netD", ".", "forward", "(", "fake", ")", "\n", "loss_G", "=", "0", "\n", "for", "out_a", "in", "outs_fake", ":", "\n", "      ", "outputs_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "all_ones", "=", "torch", ".", "ones_like", "(", "outputs_fake", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "loss_G", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_fake", ",", "all_ones", ")", "\n", "", "return", "loss_G", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_alone": [[282, 302], ["model.UID.backward_G_GAN", "model.UID.backward_G_GAN", "loss_G2.backward", "model.UID.item", "model.UID.item", "model.UID.perceptualLoss.getloss", "model.UID.perceptualLoss.getloss", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_GAN", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.backward_G_GAN", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.networks.l1GradientLoss.getloss"], ["", "def", "backward_G_alone", "(", "self", ")", ":", "\n", "# Ladv for generator", "\n", "    ", "loss_G_GAN2_I", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_I_random", ",", "self", ".", "disA2", ")", "\n", "loss_G_GAN2_B", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_B_random", ",", "self", ".", "disB2", ")", "\n", "\n", "# latent regression loss", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "loss_z_L1_b", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "mu2_b", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "", "else", ":", "\n", "      ", "loss_z_L1_b", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "z_attr_random_b", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "\n", "# perceptual losses", "\n", "", "percp_loss_B2", "=", "self", ".", "perceptualLoss", ".", "getloss", "(", "self", ".", "fake_I_random", ",", "self", ".", "real_B_encoded", ")", "*", "self", ".", "lambdaB", "\n", "percp_loss_I2", "=", "self", ".", "perceptualLoss", ".", "getloss", "(", "self", ".", "fake_B_random", ",", "self", ".", "real_I_encoded", ")", "*", "self", ".", "lambdaI", "\n", "\n", "\n", "loss_G2", "=", "loss_z_L1_b", "+", "loss_G_GAN2_I", "+", "loss_G_GAN2_B", "+", "percp_loss_B2", "+", "percp_loss_I2", "\n", "loss_G2", ".", "backward", "(", ")", "\n", "self", ".", "gan2_loss_a", "=", "loss_G_GAN2_I", ".", "item", "(", ")", "\n", "self", ".", "gan2_loss_b", "=", "loss_G_GAN2_B", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.update_lr": [[303, 311], ["model.UID.disA_sch.step", "model.UID.disB_sch.step", "model.UID.disA2_sch.step", "model.UID.disB2_sch.step", "model.UID.enc_c_sch.step", "model.UID.enc_a_sch.step", "model.UID.gen_sch.step"], "methods", ["None"], ["", "def", "update_lr", "(", "self", ")", ":", "\n", "    ", "self", ".", "disA_sch", ".", "step", "(", ")", "\n", "self", ".", "disB_sch", ".", "step", "(", ")", "\n", "self", ".", "disA2_sch", ".", "step", "(", ")", "\n", "self", ".", "disB2_sch", ".", "step", "(", ")", "\n", "self", ".", "enc_c_sch", ".", "step", "(", ")", "\n", "self", ".", "enc_a_sch", ".", "step", "(", ")", "\n", "self", ".", "gen_sch", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID._l2_regularize": [[312, 316], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_l2_regularize", "(", "self", ",", "mu", ")", ":", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.resume": [[317, 339], ["torch.load", "torch.load", "torch.load", "torch.load", "model.UID.enc_c.load_state_dict", "model.UID.enc_a.load_state_dict", "model.UID.gen.load_state_dict", "model.UID.disA.load_state_dict", "model.UID.disA2.load_state_dict", "model.UID.disB.load_state_dict", "model.UID.disB2.load_state_dict", "model.UID.disA_opt.load_state_dict", "model.UID.disA2_opt.load_state_dict", "model.UID.disB_opt.load_state_dict", "model.UID.disB2_opt.load_state_dict", "model.UID.enc_c_opt.load_state_dict", "model.UID.enc_a_opt.load_state_dict", "model.UID.gen_opt.load_state_dict"], "methods", ["None"], ["", "def", "resume", "(", "self", ",", "model_dir", ",", "train", "=", "True", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "model_dir", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "\n", "# weight", "\n", "if", "train", ":", "\n", "      ", "self", ".", "disA", ".", "load_state_dict", "(", "checkpoint", "[", "'disA'", "]", ")", "\n", "self", ".", "disA2", ".", "load_state_dict", "(", "checkpoint", "[", "'disA2'", "]", ")", "\n", "self", ".", "disB", ".", "load_state_dict", "(", "checkpoint", "[", "'disB'", "]", ")", "\n", "self", ".", "disB2", ".", "load_state_dict", "(", "checkpoint", "[", "'disB2'", "]", ")", "\n", "", "self", ".", "enc_c", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_c'", "]", ")", "\n", "self", ".", "enc_a", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_a'", "]", ")", "\n", "self", ".", "gen", ".", "load_state_dict", "(", "checkpoint", "[", "'gen'", "]", ")", "\n", "# optimizer", "\n", "if", "train", ":", "\n", "      ", "self", ".", "disA_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disA_opt'", "]", ")", "\n", "self", ".", "disA2_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disA2_opt'", "]", ")", "\n", "self", ".", "disB_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disB_opt'", "]", ")", "\n", "self", ".", "disB2_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disB2_opt'", "]", ")", "\n", "self", ".", "enc_c_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_c_opt'", "]", ")", "\n", "self", ".", "enc_a_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_a_opt'", "]", ")", "\n", "self", ".", "gen_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'gen_opt'", "]", ")", "\n", "", "return", "checkpoint", "[", "'ep'", "]", ",", "checkpoint", "[", "'total_it'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save": [[340, 362], ["time.sleep", "torch.save", "torch.save", "torch.save", "torch.save", "model.UID.disA.state_dict", "model.UID.disA2.state_dict", "model.UID.disB.state_dict", "model.UID.disB2.state_dict", "model.UID.enc_c.state_dict", "model.UID.enc_a.state_dict", "model.UID.gen.state_dict", "model.UID.disA_opt.state_dict", "model.UID.disA2_opt.state_dict", "model.UID.disB_opt.state_dict", "model.UID.disB2_opt.state_dict", "model.UID.enc_c_opt.state_dict", "model.UID.enc_a_opt.state_dict", "model.UID.gen_opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save"], ["", "def", "save", "(", "self", ",", "filename", ",", "ep", ",", "total_it", ")", ":", "\n", "    ", "state", "=", "{", "\n", "'disA'", ":", "self", ".", "disA", ".", "state_dict", "(", ")", ",", "\n", "'disA2'", ":", "self", ".", "disA2", ".", "state_dict", "(", ")", ",", "\n", "'disB'", ":", "self", ".", "disB", ".", "state_dict", "(", ")", ",", "\n", "'disB2'", ":", "self", ".", "disB2", ".", "state_dict", "(", ")", ",", "\n", "'enc_c'", ":", "self", ".", "enc_c", ".", "state_dict", "(", ")", ",", "\n", "'enc_a'", ":", "self", ".", "enc_a", ".", "state_dict", "(", ")", ",", "\n", "'gen'", ":", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "\n", "'disA_opt'", ":", "self", ".", "disA_opt", ".", "state_dict", "(", ")", ",", "\n", "'disA2_opt'", ":", "self", ".", "disA2_opt", ".", "state_dict", "(", ")", ",", "\n", "'disB_opt'", ":", "self", ".", "disB_opt", ".", "state_dict", "(", ")", ",", "\n", "'disB2_opt'", ":", "self", ".", "disB2_opt", ".", "state_dict", "(", ")", ",", "\n", "'enc_c_opt'", ":", "self", ".", "enc_c_opt", ".", "state_dict", "(", ")", ",", "\n", "'enc_a_opt'", ":", "self", ".", "enc_a_opt", ".", "state_dict", "(", ")", ",", "\n", "'gen_opt'", ":", "self", ".", "gen_opt", ".", "state_dict", "(", ")", ",", "\n", "'ep'", ":", "ep", ",", "\n", "'total_it'", ":", "total_it", "\n", "}", "\n", "time", ".", "sleep", "(", "10", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.assemble_outputs": [[363, 377], ["model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "model.UID.normalize_image().detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image", "model.UID.normalize_image"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "self", ".", "real_I_encoded", ")", ".", "detach", "(", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "self", ".", "real_B_encoded", ")", ".", "detach", "(", ")", "\n", "images_a1", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_I_encoded", ")", ".", "detach", "(", ")", "\n", "images_a2", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_I_random", ")", ".", "detach", "(", ")", "\n", "images_a3", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_I_recon", ")", ".", "detach", "(", ")", "\n", "images_a4", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_II_encoded", ")", ".", "detach", "(", ")", "\n", "images_b1", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_encoded", ")", ".", "detach", "(", ")", "\n", "images_b2", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_random", ")", ".", "detach", "(", ")", "\n", "images_b3", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_recon", ")", ".", "detach", "(", ")", "\n", "images_b4", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_BB_encoded", ")", ".", "detach", "(", ")", "\n", "row1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b1", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b2", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a4", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a3", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "row2", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a1", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a2", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b4", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b3", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "return", "torch", ".", "cat", "(", "(", "row1", ",", "row2", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.normalize_image": [[378, 380], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.__init__": [[23, 36], ["os.path.join", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "self", ".", "display_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "display_dir", ",", "opts", ".", "name", ")", "\n", "self", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "result_dir", ",", "opts", ".", "name", ")", "\n", "self", ".", "image_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "'images'", ")", "\n", "self", ".", "img_save_freq", "=", "opts", ".", "img_save_freq", "\n", "self", ".", "model_save_freq", "=", "opts", ".", "model_save_freq", "\n", "# make directory", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "display_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "display_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "model_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "model_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "image_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "image_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_img": [[38, 47], ["model.assemble_outputs", "torchvision.utils.save_image", "model.assemble_outputs", "torchvision.utils.save_image"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.assemble_outputs", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.assemble_outputs"], ["", "", "def", "write_img", "(", "self", ",", "ep", ",", "model", ")", ":", "\n", "    ", "if", "(", "ep", "+", "1", ")", "%", "self", ".", "img_save_freq", "==", "0", ":", "\n", "        ", "assembled_images", "=", "model", ".", "assemble_outputs", "(", ")", "\n", "img_filename", "=", "'%s/gen_%05d.jpg'", "%", "(", "self", ".", "image_dir", ",", "ep", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "assembled_images", "/", "2", "+", "0.5", ",", "img_filename", ",", "nrow", "=", "1", ")", "\n", "", "elif", "ep", "==", "-", "1", ":", "\n", "        ", "assembled_images", "=", "model", ".", "assemble_outputs", "(", ")", "\n", "img_filename", "=", "'%s/gen_last.jpg'", "%", "(", "self", ".", "image_dir", ",", "ep", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "assembled_images", "/", "2", "+", "0.5", ",", "img_filename", ",", "nrow", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.Saver.write_model": [[49, 55], ["print", "model.save", "model.save"], "methods", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save"], ["", "", "def", "write_model", "(", "self", ",", "ep", ",", "total_it", ",", "model", ")", ":", "\n", "    ", "if", "(", "ep", "+", "1", ")", "%", "self", ".", "model_save_freq", "==", "0", ":", "\n", "      ", "print", "(", "'--- save the model @ ep %d ---'", "%", "(", "ep", ")", ")", "\n", "model", ".", "save", "(", "'%s/%05d.pth'", "%", "(", "self", ".", "model_dir", ",", "ep", ")", ",", "ep", ",", "total_it", ")", "\n", "", "elif", "ep", "==", "-", "1", ":", "\n", "      ", "model", ".", "save", "(", "'%s/last.pth'", "%", "self", ".", "model_dir", ",", "ep", ",", "total_it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.tensor2img": [[7, 13], ["img[].cpu().float().numpy", "np.tile.astype", "numpy.tile", "img[].cpu().float", "numpy.transpose", "img[].cpu"], "function", ["None"], ["def", "tensor2img", "(", "img", ")", ":", "\n", "  ", "img", "=", "img", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "    ", "img", "=", "np", ".", "tile", "(", "img", ",", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "", "img", "=", "(", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "return", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.save_imgs": [[15, 21], ["saver.tensor2img", "PIL.Image.fromarray", "Image.fromarray.save", "os.path.exists", "os.mkdir", "os.path.join"], "function", ["home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.saver.tensor2img", "home.repos.pwc.inspect_result.ustclby_Unsupervised-Domain-Specific-Deblurring.src.model.UID.save"], ["", "def", "save_imgs", "(", "imgs", ",", "names", ",", "path", ",", "yuv", "=", "False", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "", "img", "=", "tensor2img", "(", "imgs", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "path", ",", "names", ")", ")", "\n", "\n"]]}