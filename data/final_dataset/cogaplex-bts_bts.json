{"home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.eval_with_pngs.convert_arg_line_to_args": [[28, 33], ["arg_line.split", "arg.strip"], "function", ["None"], ["def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n", "            ", "continue", "\n", "", "yield", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.eval_with_pngs.compute_errors": [[50, 72], ["numpy.maximum", "numpy.sqrt", "numpy.sqrt", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.mean", "np.sqrt.mean", "np.sqrt.mean", "numpy.log", "numpy.log", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.abs", "numpy.log10", "numpy.log10", "numpy.mean", "numpy.mean"], "function", ["None"], ["def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "np", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "np", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "err", "=", "np", ".", "log", "(", "pred", ")", "-", "np", ".", "log", "(", "gt", ")", "\n", "silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.eval_with_pngs.test": [[74, 146], ["set", "os.walk", "len", "range", "print", "print", "print", "print", "print", "eval_with_pngs.eval", "print", "fnmatch.filter", "os.path.join", "cv2.imread", "pred_depths.append", "range", "root.replace", "pred_filenames.append", "print", "set.add", "len", "file_dir.replace", "os.path.join", "cv2.imread", "gt_depths.append", "range", "len", "os.path.join", "cv2.imread.astype", "cv2.imread.astype", "pred_filenames[].split", "file_dir.split", "print", "set.add", "cv2.imread.astype", "file_dir.replace", "os.path.join", "cv2.imread", "gt_depths.append", "pred_filenames[].split", "file_dir.split", "print", "set.add", "cv2.imread.astype", "file_dir.split"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval"], ["", "def", "test", "(", ")", ":", "\n", "    ", "global", "gt_depths", ",", "missing_ids", ",", "pred_filenames", "\n", "gt_depths", "=", "[", "]", "\n", "missing_ids", "=", "set", "(", ")", "\n", "pred_filenames", "=", "[", "]", "\n", "\n", "for", "root", ",", "dirnames", ",", "filenames", "in", "os", ".", "walk", "(", "args", ".", "pred_path", ")", ":", "\n", "        ", "for", "pred_filename", "in", "fnmatch", ".", "filter", "(", "filenames", ",", "'*.png'", ")", ":", "\n", "            ", "if", "'cmap'", "in", "pred_filename", "or", "'gt'", "in", "pred_filename", ":", "\n", "                ", "continue", "\n", "", "dirname", "=", "root", ".", "replace", "(", "args", ".", "pred_path", ",", "''", ")", "\n", "pred_filenames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dirname", ",", "pred_filename", ")", ")", "\n", "\n", "", "", "num_test_samples", "=", "len", "(", "pred_filenames", ")", "\n", "\n", "pred_depths", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_test_samples", ")", ":", "\n", "        ", "pred_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "pred_path", ",", "pred_filenames", "[", "i", "]", ")", "\n", "pred_depth", "=", "cv2", ".", "imread", "(", "pred_depth_path", ",", "-", "1", ")", "\n", "if", "pred_depth", "is", "None", ":", "\n", "            ", "print", "(", "'Missing: %s '", "%", "pred_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "i", ")", "\n", "continue", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "            ", "pred_depth", "=", "pred_depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "", "else", ":", "\n", "            ", "pred_depth", "=", "pred_depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "\n", "", "pred_depths", ".", "append", "(", "pred_depth", ")", "\n", "\n", "", "print", "(", "'Raw png files reading done'", ")", "\n", "print", "(", "'Evaluating {} files'", ".", "format", "(", "len", "(", "pred_depths", ")", ")", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "            ", "file_dir", "=", "pred_filenames", "[", "t_id", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "filename", "=", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "directory", "=", "file_dir", ".", "replace", "(", "'_'", "+", "filename", ",", "''", ")", "\n", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "directory", ",", "'proj_depth/groundtruth/image_02'", ",", "filename", "+", "'.png'", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "elif", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "        ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "            ", "file_dir", "=", "pred_filenames", "[", "t_id", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "filename", "=", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "directory", "=", "file_dir", ".", "replace", "(", "'_rgb_'", "+", "file_dir", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ",", "''", ")", "\n", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "directory", ",", "'sync_depth_'", "+", "filename", "+", "'.png'", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "print", "(", "'GT files reading done'", ")", "\n", "print", "(", "'{} GT files missing'", ".", "format", "(", "len", "(", "missing_ids", ")", ")", ")", "\n", "\n", "print", "(", "'Computing errors'", ")", "\n", "eval", "(", "pred_depths", ")", "\n", "\n", "print", "(", "'Done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.eval_with_pngs.eval": [[148, 218], ["len", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "print", "print", "pred_depths_valid.append", "len", "numpy.logical_and", "eval_with_pngs.compute_errors", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.logical_and", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "numpy.isinf", "numpy.isinf", "numpy.isnan", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.compute_errors"], ["", "def", "eval", "(", "pred_depths", ")", ":", "\n", "\n", "    ", "num_samples", "=", "len", "(", "pred_depths", ")", "\n", "pred_depths_valid", "=", "[", "]", "\n", "\n", "i", "=", "0", "\n", "for", "t_id", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "if", "t_id", "in", "missing_ids", ":", "\n", "            ", "continue", "\n", "\n", "", "pred_depths_valid", ".", "append", "(", "pred_depths", "[", "t_id", "]", ")", "\n", "\n", "", "num_samples", "=", "num_samples", "-", "len", "(", "missing_ids", ")", "\n", "\n", "silog", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log10", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log_rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "abs_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "sq_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d1", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d2", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d3", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_samples", ")", ":", "\n", "\n", "        ", "gt_depth", "=", "gt_depths", "[", "i", "]", "\n", "pred_depth", "=", "pred_depths_valid", "[", "i", "]", "\n", "\n", "pred_depth", "[", "pred_depth", "<", "args", ".", "min_depth_eval", "]", "=", "args", ".", "min_depth_eval", "\n", "pred_depth", "[", "pred_depth", ">", "args", ".", "max_depth_eval", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n", "\n", "gt_depth", "[", "np", ".", "isinf", "(", "gt_depth", ")", "]", "=", "0", "\n", "gt_depth", "[", "np", ".", "isnan", "(", "gt_depth", ")", "]", "=", "0", "\n", "\n", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "pred_depth_uncropped", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_depth_uncropped", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "=", "pred_depth", "\n", "pred_depth", "=", "pred_depth_uncropped", "\n", "\n", "", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                    ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "silog", "[", "i", "]", ",", "log10", "[", "i", "]", ",", "abs_rel", "[", "i", "]", ",", "sq_rel", "[", "i", "]", ",", "rms", "[", "i", "]", ",", "log_rms", "[", "i", "]", ",", "d1", "[", "i", "]", ",", "d2", "[", "i", "]", ",", "d3", "[", "i", "]", "=", "compute_errors", "(", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "\n", "'d1'", ",", "'d2'", ",", "'d3'", ",", "'AbsRel'", ",", "'SqRel'", ",", "'RMSE'", ",", "'RMSElog'", ",", "'SILog'", ",", "'log10'", ")", ")", "\n", "print", "(", "\"{:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}\"", ".", "format", "(", "\n", "d1", ".", "mean", "(", ")", ",", "d2", ".", "mean", "(", ")", ",", "d3", ".", "mean", "(", ")", ",", "\n", "abs_rel", ".", "mean", "(", ")", ",", "sq_rel", ".", "mean", "(", ")", ",", "rms", ".", "mean", "(", ")", ",", "log_rms", ".", "mean", "(", ")", ",", "silog", ".", "mean", "(", ")", ",", "log10", ".", "mean", "(", ")", ")", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.eval_with_pngs.main": [[220, 222], ["eval_with_pngs.test"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.extract_official_train_test_set_from_mat.convert_image": [[44, 64], ["img_depth.astype", "cv2.imwrite", "numpy.zeros", "cv2.imwrite", "int", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "convert_image", "(", "i", ",", "scene", ",", "depth_raw", ",", "image", ")", ":", "\n", "\n", "    ", "idx", "=", "int", "(", "i", ")", "+", "1", "\n", "if", "idx", "in", "train_images", ":", "\n", "        ", "train_test", "=", "\"train\"", "\n", "", "else", ":", "\n", "        ", "assert", "idx", "in", "test_images", ",", "\"index %d neither found in training set nor in test set\"", "%", "idx", "\n", "train_test", "=", "\"test\"", "\n", "\n", "", "folder", "=", "\"%s/%s/%s\"", "%", "(", "out_folder", ",", "train_test", ",", "scene", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "folder", ")", "\n", "\n", "", "img_depth", "=", "depth_raw", "*", "1000.0", "\n", "img_depth_uint16", "=", "img_depth", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "cv2", ".", "imwrite", "(", "\"%s/sync_depth_%05d.png\"", "%", "(", "folder", ",", "i", ")", ",", "img_depth_uint16", ")", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "image_black_boundary", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image_black_boundary", "[", "7", ":", "474", ",", "7", ":", "632", ",", ":", "]", "=", "image", "[", "7", ":", "474", ",", "7", ":", "632", ",", ":", "]", "\n", "cv2", ".", "imwrite", "(", "\"%s/rgb_%05d.jpg\"", "%", "(", "folder", ",", "i", ")", ",", "image_black_boundary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.utils.download_from_gdrive.download_file_from_google_drive": [[6, 34], ["requests.Session", "requests.Session.get", "download_from_gdrive.download_file_from_google_drive.get_confirm_token"], "function", ["None"], ["def", "download_file_from_google_drive", "(", "id", ",", "destination", ")", ":", "\n", "    ", "def", "get_confirm_token", "(", "response", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "response", ".", "cookies", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", ".", "startswith", "(", "'download_warning'", ")", ":", "\n", "                ", "return", "value", "\n", "\n", "", "", "return", "None", "\n", "\n", "", "def", "save_response_content", "(", "response", ",", "destination", ")", ":", "\n", "        ", "CHUNK_SIZE", "=", "32768", "\n", "\n", "with", "open", "(", "destination", ",", "\"wb\"", ")", "as", "f", ":", "\n", "            ", "for", "chunk", "in", "response", ".", "iter_content", "(", "CHUNK_SIZE", ")", ":", "\n", "                ", "if", "chunk", ":", "# filter out keep-alive new chunks", "\n", "                    ", "f", ".", "write", "(", "chunk", ")", "\n", "\n", "", "", "", "", "URL", "=", "\"https://docs.google.com/uc?export=download\"", "\n", "\n", "session", "=", "requests", ".", "Session", "(", ")", "\n", "\n", "response", "=", "session", ".", "get", "(", "URL", ",", "params", "=", "{", "'id'", ":", "id", "}", ",", "stream", "=", "True", ")", "\n", "token", "=", "get_confirm_token", "(", "response", ")", "\n", "\n", "if", "token", ":", "\n", "        ", "params", "=", "{", "'id'", ":", "id", ",", "'confirm'", ":", "token", "}", "\n", "response", "=", "session", ".", "get", "(", "URL", ",", "params", "=", "params", ",", "stream", "=", "True", ")", "\n", "\n", "", "save_response_content", "(", "response", ",", "destination", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.convert_arg_line_to_args": [[42, 47], ["arg_line.split", "arg.strip"], "function", ["None"], ["def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n", "            ", "continue", "\n", "", "yield", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.compute_errors": [[144, 166], ["np.maximum", "np.sqrt", "np.sqrt", "np.mean", "np.mean", "np.abs", "np.mean", "np.sqrt.mean", "np.sqrt.mean", "np.log", "np.log", "np.sqrt", "np.log", "np.log", "np.abs", "np.log10", "np.log10", "np.mean", "np.mean"], "function", ["None"], ["def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rms", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rms", "=", "np", ".", "sqrt", "(", "rms", ".", "mean", "(", ")", ")", "\n", "\n", "log_rms", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "log_rms", "=", "np", ".", "sqrt", "(", "log_rms", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "err", "=", "np", ".", "log", "(", "pred", ")", "-", "np", ".", "log", "(", "gt", ")", "\n", "silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "[", "silog", ",", "abs_rel", ",", "log10", ",", "rms", ",", "sq_rel", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.block_print": [[168, 170], ["open"], "function", ["None"], ["", "def", "block_print", "(", ")", ":", "\n", "    ", "sys", ".", "stdout", "=", "open", "(", "os", ".", "devnull", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.enable_print": [[172, 174], ["None"], "function", ["None"], ["", "def", "enable_print", "(", ")", ":", "\n", "    ", "sys", ".", "stdout", "=", "sys", ".", "__stdout__", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.get_num_lines": [[176, 181], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["", "def", "get_num_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.colorize": [[183, 201], ["np.log10", "matplotlib.cm.get_cmap", "matplotlib.cm.get_cmap", "matplotlib.cm.get_cmap.", "img.transpose", "cmapper.cpu().numpy", "cmapper.min", "cmapper.max", "cmapper.cpu"], "function", ["None"], ["", "def", "colorize", "(", "value", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ",", "cmap", "=", "'Greys'", ")", ":", "\n", "    ", "value", "=", "value", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", ":", "]", "\n", "value", "=", "np", ".", "log10", "(", "value", ")", "\n", "\n", "vmin", "=", "value", ".", "min", "(", ")", "if", "vmin", "is", "None", "else", "vmin", "\n", "vmax", "=", "value", ".", "max", "(", ")", "if", "vmax", "is", "None", "else", "vmax", "\n", "\n", "if", "vmin", "!=", "vmax", ":", "\n", "        ", "value", "=", "(", "value", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", "\n", "", "else", ":", "\n", "        ", "value", "=", "value", "*", "0.", "\n", "\n", "", "cmapper", "=", "matplotlib", ".", "cm", ".", "get_cmap", "(", "cmap", ")", "\n", "value", "=", "cmapper", "(", "value", ",", "bytes", "=", "True", ")", "\n", "\n", "img", "=", "value", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "\n", "return", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result": [[203, 215], ["np.expand_dims", "value.cpu().numpy", "value.min", "value.max", "value.cpu"], "function", ["None"], ["", "def", "normalize_result", "(", "value", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ")", ":", "\n", "    ", "value", "=", "value", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", ",", ":", ",", ":", "]", "\n", "\n", "vmin", "=", "value", ".", "min", "(", ")", "if", "vmin", "is", "None", "else", "vmin", "\n", "vmax", "=", "value", ".", "max", "(", ")", "if", "vmax", "is", "None", "else", "vmax", "\n", "\n", "if", "vmin", "!=", "vmax", ":", "\n", "        ", "value", "=", "(", "value", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", "\n", "", "else", ":", "\n", "        ", "value", "=", "value", "*", "0.", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "value", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.set_misc": [[217, 248], ["model.named_children", "print", "model.apply", "print", "child.named_parameters", "print", "print", "any"], "function", ["None"], ["", "def", "set_misc", "(", "model", ")", ":", "\n", "    ", "if", "args", ".", "bn_no_track_stats", ":", "\n", "        ", "print", "(", "\"Disabling tracking running stats in batch norm layers\"", ")", "\n", "model", ".", "apply", "(", "bn_init_as_tf", ")", "\n", "\n", "", "if", "args", ".", "fix_first_conv_blocks", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'base_model.layer1.0'", ",", "'base_model.layer1.1'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'denseblock1.denselayer1'", ",", "'denseblock1.denselayer2'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first two conv blocks\"", ")", "\n", "", "elif", "args", ".", "fix_first_conv_block", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'base_model.layer1.0'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'denseblock1.denselayer1'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first conv block\"", ")", "\n", "", "else", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first conv layer\"", ")", "\n", "\n", "", "for", "name", ",", "child", "in", "model", ".", "named_children", "(", ")", ":", "\n", "        ", "if", "not", "'encoder'", "in", "name", ":", "\n", "            ", "continue", "\n", "", "for", "name2", ",", "parameters", "in", "child", ".", "named_parameters", "(", ")", ":", "\n", "# print(name, name2)", "\n", "            ", "if", "any", "(", "x", "in", "name2", "for", "x", "in", "fixing_layers", ")", ":", "\n", "                ", "parameters", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.online_eval": [[250, 320], ["torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "enumerate", "tqdm.tqdm", "np.logical_and", "bts_main.compute_errors", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.new_group", "torch.all_reduce", "torch.zeros().cuda.cpu", "eval_measures_cpu[].item", "print", "print", "range", "print", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model", "pred_depth.cpu().numpy().squeeze.cpu().numpy().squeeze", "gt_depth.cpu().numpy().squeeze.cpu().numpy().squeeze", "int", "int", "np.zeros", "np.zeros", "np.logical_and", "print", "eval_sample_batched[].cuda", "eval_sample_batched[].cuda", "np.isinf", "np.isnan", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int", "pred_depth.cpu().numpy().squeeze.cpu().numpy", "gt_depth.cpu().numpy().squeeze.cpu().numpy", "range", "pred_depth.cpu().numpy().squeeze.cpu", "gt_depth.cpu().numpy().squeeze.cpu", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.compute_errors"], ["", "", "", "", "def", "online_eval", "(", "model", ",", "dataloader_eval", ",", "gpu", ",", "ngpus", ")", ":", "\n", "    ", "eval_measures", "=", "torch", ".", "zeros", "(", "10", ")", ".", "cuda", "(", "device", "=", "gpu", ")", "\n", "for", "_", ",", "eval_sample_batched", "in", "enumerate", "(", "tqdm", "(", "dataloader_eval", ".", "data", ")", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "image", "=", "torch", ".", "autograd", ".", "Variable", "(", "eval_sample_batched", "[", "'image'", "]", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "focal", "=", "torch", ".", "autograd", ".", "Variable", "(", "eval_sample_batched", "[", "'focal'", "]", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "gt_depth", "=", "eval_sample_batched", "[", "'depth'", "]", "\n", "has_valid_depth", "=", "eval_sample_batched", "[", "'has_valid_depth'", "]", "\n", "if", "not", "has_valid_depth", ":", "\n", "# print('Invalid depth. continue.')", "\n", "                ", "continue", "\n", "\n", "", "_", ",", "_", ",", "_", ",", "_", ",", "pred_depth", "=", "model", "(", "image", ",", "focal", ")", "\n", "\n", "pred_depth", "=", "pred_depth", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "gt_depth", "=", "gt_depth", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "pred_depth_uncropped", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_depth_uncropped", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "=", "pred_depth", "\n", "pred_depth", "=", "pred_depth_uncropped", "\n", "\n", "", "pred_depth", "[", "pred_depth", "<", "args", ".", "min_depth_eval", "]", "=", "args", ".", "min_depth_eval", "\n", "pred_depth", "[", "pred_depth", ">", "args", ".", "max_depth_eval", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isnan", "(", "pred_depth", ")", "]", "=", "args", ".", "min_depth_eval", "\n", "\n", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                    ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "measures", "=", "compute_errors", "(", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "eval_measures", "[", ":", "9", "]", "+=", "torch", ".", "tensor", "(", "measures", ")", ".", "cuda", "(", "device", "=", "gpu", ")", "\n", "eval_measures", "[", "9", "]", "+=", "1", "\n", "\n", "", "if", "args", ".", "multiprocessing_distributed", ":", "\n", "        ", "group", "=", "dist", ".", "new_group", "(", "[", "i", "for", "i", "in", "range", "(", "ngpus", ")", "]", ")", "\n", "dist", ".", "all_reduce", "(", "tensor", "=", "eval_measures", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ",", "group", "=", "group", ")", "\n", "\n", "", "if", "not", "args", ".", "multiprocessing_distributed", "or", "gpu", "==", "0", ":", "\n", "        ", "eval_measures_cpu", "=", "eval_measures", ".", "cpu", "(", ")", "\n", "cnt", "=", "eval_measures_cpu", "[", "9", "]", ".", "item", "(", ")", "\n", "eval_measures_cpu", "/=", "cnt", "\n", "print", "(", "'Computing errors for {} eval samples'", ".", "format", "(", "int", "(", "cnt", ")", ")", ")", "\n", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "'silog'", ",", "'abs_rel'", ",", "'log10'", ",", "'rms'", ",", "\n", "'sq_rel'", ",", "'log_rms'", ",", "'d1'", ",", "'d2'", ",", "\n", "'d3'", ")", ")", "\n", "for", "i", "in", "range", "(", "8", ")", ":", "\n", "            ", "print", "(", "'{:7.3f}, '", ".", "format", "(", "eval_measures_cpu", "[", "i", "]", ")", ",", "end", "=", "''", ")", "\n", "", "print", "(", "'{:7.3f}'", ".", "format", "(", "eval_measures_cpu", "[", "8", "]", ")", ")", "\n", "return", "eval_measures_cpu", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.main_worker": [[322, 555], ["bts.BtsModel", "torch.nn.parallel.DistributedDataParallel.train", "torch.nn.parallel.DistributedDataParallel.decoder.apply", "bts_main.set_misc", "sum", "print", "sum", "print", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "np.zeros", "torch.optim.AdamW", "torch.optim.AdamW", "torch.optim.AdamW", "torch.optim.AdamW", "torch.optim.AdamW", "torch.optim.AdamW", "bts_dataloader.BtsDataLoader", "bts_dataloader.BtsDataLoader", "silog_loss", "time.time", "len", "np.sum", "print", "len", "print", "torch.init_process_group", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.parallel.DistributedDataParallel.cuda", "print", "print", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "torch.zeros().cpu", "os.path.isfile", "tensorboardX.SummaryWriter", "var.sum", "enumerate", "tensorboardX.SummaryWriter.close", "int", "np.prod", "np.prod", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.nn.parallel.DistributedDataParallel.cuda", "int", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "print", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.optim.AdamW.load_state_dict", "print", "print", "tensorboardX.SummaryWriter", "torch.nn.parallel.DistributedDataParallel.parameters", "bts_dataloader.BtsDataLoader.train_sampler.set_epoch", "torch.optim.AdamW.zero_grad", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.nn.parallel.DistributedDataParallel.", "silog_loss.forward", "silog_criterion.forward.backward", "torch.optim.AdamW.step", "tensorboardX.SummaryWriter.close", "p.size", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.parallel.DistributedDataParallel.module.encoder.parameters", "torch.nn.parallel.DistributedDataParallel.module.decoder.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "checkpoint[].cpu", "checkpoint[].cpu", "os.path.join", "os.path.join", "sample_batched[].cuda", "sample_batched[].cuda", "sample_batched[].cuda", "mask.to", "print", "np.isnan", "time.time", "len", "np.sum", "print", "time.sleep", "torch.nn.parallel.DistributedDataParallel.eval", "bts_main.online_eval", "torch.nn.parallel.DistributedDataParallel.train", "bts_main.block_print", "bts_main.set_misc", "bts_main.enable_print", "print", "silog_criterion.forward.cpu().item", "print", "var.sum", "print", "print_string.format", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "range", "tensorboardX.SummaryWriter.flush", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "range", "tensorboardX.SummaryWriter.flush", "torch.nn.parallel.DistributedDataParallel.parameters", "time.time", "np.sum.item", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "torch.nn.parallel.DistributedDataParallel.state_dict", "torch.optim.AdamW.state_dict", "tensorboardX.SummaryWriter.add_scalar", "silog_criterion.forward.cpu", "np.sum.item", "np.sum.item", "bts_main.normalize_result", "bts_main.normalize_result", "bts_main.normalize_result", "bts_main.normalize_result", "bts_main.normalize_result", "bts_main.normalize_result", "eval_measures[].cpu", "int", "best_eval_measures_lower_better[].item", "measure.item", "os.path.exists", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "inv_normalize", "best_eval_measures_higher_better[].item", "measure.item", "os.system", "torch.nn.parallel.DistributedDataParallel.state_dict", "torch.optim.AdamW.state_dict"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.train", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.set_misc", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible.set_epoch", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.BtsModel.forward", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.online_eval", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.train", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.block_print", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.set_misc", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.enable_print", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.normalize_result"], ["", "def", "main_worker", "(", "gpu", ",", "ngpus_per_node", ",", "args", ")", ":", "\n", "    ", "args", ".", "gpu", "=", "gpu", "\n", "\n", "if", "args", ".", "gpu", "is", "not", "None", ":", "\n", "        ", "print", "(", "\"Use GPU: {} for training\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "\n", "", "if", "args", ".", "distributed", ":", "\n", "        ", "if", "args", ".", "dist_url", "==", "\"env://\"", "and", "args", ".", "rank", "==", "-", "1", ":", "\n", "            ", "args", ".", "rank", "=", "int", "(", "os", ".", "environ", "[", "\"RANK\"", "]", ")", "\n", "", "if", "args", ".", "multiprocessing_distributed", ":", "\n", "            ", "args", ".", "rank", "=", "args", ".", "rank", "*", "ngpus_per_node", "+", "gpu", "\n", "", "dist", ".", "init_process_group", "(", "backend", "=", "args", ".", "dist_backend", ",", "init_method", "=", "args", ".", "dist_url", ",", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "args", ".", "rank", ")", "\n", "\n", "# Create model", "\n", "", "model", "=", "BtsModel", "(", "args", ")", "\n", "model", ".", "train", "(", ")", "\n", "model", ".", "decoder", ".", "apply", "(", "weights_init_xavier", ")", "\n", "set_misc", "(", "model", ")", "\n", "\n", "num_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "print", "(", "\"Total number of parameters: {}\"", ".", "format", "(", "num_params", ")", ")", "\n", "\n", "num_params_update", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "shape", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", ")", "\n", "print", "(", "\"Total number of learning parameters: {}\"", ".", "format", "(", "num_params_update", ")", ")", "\n", "\n", "if", "args", ".", "distributed", ":", "\n", "        ", "if", "args", ".", "gpu", "is", "not", "None", ":", "\n", "            ", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "model", ".", "cuda", "(", "args", ".", "gpu", ")", "\n", "args", ".", "batch_size", "=", "int", "(", "args", ".", "batch_size", "/", "ngpus_per_node", ")", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "args", ".", "gpu", "]", ",", "find_unused_parameters", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "cuda", "(", ")", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "find_unused_parameters", "=", "True", ")", "\n", "", "", "else", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "", "if", "args", ".", "distributed", ":", "\n", "        ", "print", "(", "\"Model Initialized on GPU: {}\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Model Initialized\"", ")", "\n", "\n", "", "global_step", "=", "0", "\n", "best_eval_measures_lower_better", "=", "torch", ".", "zeros", "(", "6", ")", ".", "cpu", "(", ")", "+", "1e3", "\n", "best_eval_measures_higher_better", "=", "torch", ".", "zeros", "(", "3", ")", ".", "cpu", "(", ")", "\n", "best_eval_steps", "=", "np", ".", "zeros", "(", "9", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "# Training parameters", "\n", "optimizer", "=", "torch", ".", "optim", ".", "AdamW", "(", "[", "{", "'params'", ":", "model", ".", "module", ".", "encoder", ".", "parameters", "(", ")", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "model", ".", "module", ".", "decoder", ".", "parameters", "(", ")", ",", "'weight_decay'", ":", "0", "}", "]", ",", "\n", "lr", "=", "args", ".", "learning_rate", ",", "eps", "=", "args", ".", "adam_eps", ")", "\n", "\n", "model_just_loaded", "=", "False", "\n", "if", "args", ".", "checkpoint_path", "!=", "''", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "            ", "print", "(", "\"Loading checkpoint '{}'\"", ".", "format", "(", "args", ".", "checkpoint_path", ")", ")", "\n", "if", "args", ".", "gpu", "is", "None", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "", "else", ":", "\n", "                ", "loc", "=", "'cuda:{}'", ".", "format", "(", "args", ".", "gpu", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ",", "map_location", "=", "loc", ")", "\n", "", "global_step", "=", "checkpoint", "[", "'global_step'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "try", ":", "\n", "                ", "best_eval_measures_higher_better", "=", "checkpoint", "[", "'best_eval_measures_higher_better'", "]", ".", "cpu", "(", ")", "\n", "best_eval_measures_lower_better", "=", "checkpoint", "[", "'best_eval_measures_lower_better'", "]", ".", "cpu", "(", ")", "\n", "best_eval_steps", "=", "checkpoint", "[", "'best_eval_steps'", "]", "\n", "", "except", "KeyError", ":", "\n", "                ", "print", "(", "\"Could not load values for online evaluation\"", ")", "\n", "\n", "", "print", "(", "\"Loaded checkpoint '{}' (global_step {})\"", ".", "format", "(", "args", ".", "checkpoint_path", ",", "checkpoint", "[", "'global_step'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"No checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "checkpoint_path", ")", ")", "\n", "", "model_just_loaded", "=", "True", "\n", "\n", "", "if", "args", ".", "retrain", ":", "\n", "        ", "global_step", "=", "0", "\n", "\n", "", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "dataloader", "=", "BtsDataLoader", "(", "args", ",", "'train'", ")", "\n", "dataloader_eval", "=", "BtsDataLoader", "(", "args", ",", "'online_eval'", ")", "\n", "\n", "# Logging", "\n", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "        ", "writer", "=", "SummaryWriter", "(", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/summaries'", ",", "flush_secs", "=", "30", ")", "\n", "if", "args", ".", "do_online_eval", ":", "\n", "            ", "if", "args", ".", "eval_summary_directory", "!=", "''", ":", "\n", "                ", "eval_summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "eval_summary_directory", ",", "args", ".", "model_name", ")", "\n", "", "else", ":", "\n", "                ", "eval_summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "log_directory", ",", "'eval'", ")", "\n", "", "eval_summary_writer", "=", "SummaryWriter", "(", "eval_summary_path", ",", "flush_secs", "=", "30", ")", "\n", "\n", "", "", "silog_criterion", "=", "silog_loss", "(", "variance_focus", "=", "args", ".", "variance_focus", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "duration", "=", "0", "\n", "\n", "num_log_images", "=", "args", ".", "batch_size", "\n", "end_learning_rate", "=", "args", ".", "end_learning_rate", "if", "args", ".", "end_learning_rate", "!=", "-", "1", "else", "0.1", "*", "args", ".", "learning_rate", "\n", "\n", "var_sum", "=", "[", "var", ".", "sum", "(", ")", "for", "var", "in", "model", ".", "parameters", "(", ")", "if", "var", ".", "requires_grad", "]", "\n", "var_cnt", "=", "len", "(", "var_sum", ")", "\n", "var_sum", "=", "np", ".", "sum", "(", "var_sum", ")", "\n", "\n", "print", "(", "\"Initial variables' sum: {:.3f}, avg: {:.3f}\"", ".", "format", "(", "var_sum", ",", "var_sum", "/", "var_cnt", ")", ")", "\n", "\n", "steps_per_epoch", "=", "len", "(", "dataloader", ".", "data", ")", "\n", "num_total_steps", "=", "args", ".", "num_epochs", "*", "steps_per_epoch", "\n", "epoch", "=", "global_step", "//", "steps_per_epoch", "\n", "\n", "while", "epoch", "<", "args", ".", "num_epochs", ":", "\n", "        ", "if", "args", ".", "distributed", ":", "\n", "            ", "dataloader", ".", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "for", "step", ",", "sample_batched", "in", "enumerate", "(", "dataloader", ".", "data", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "before_op_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "image", "=", "torch", ".", "autograd", ".", "Variable", "(", "sample_batched", "[", "'image'", "]", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "focal", "=", "torch", ".", "autograd", ".", "Variable", "(", "sample_batched", "[", "'focal'", "]", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "depth_gt", "=", "torch", ".", "autograd", ".", "Variable", "(", "sample_batched", "[", "'depth'", "]", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_est", "=", "model", "(", "image", ",", "focal", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "mask", "=", "depth_gt", ">", "0.1", "\n", "", "else", ":", "\n", "                ", "mask", "=", "depth_gt", ">", "1.0", "\n", "\n", "", "loss", "=", "silog_criterion", ".", "forward", "(", "depth_est", ",", "depth_gt", ",", "mask", ".", "to", "(", "torch", ".", "bool", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "current_lr", "=", "(", "args", ".", "learning_rate", "-", "end_learning_rate", ")", "*", "(", "1", "-", "global_step", "/", "num_total_steps", ")", "**", "0.9", "+", "end_learning_rate", "\n", "param_group", "[", "'lr'", "]", "=", "current_lr", "\n", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "                ", "print", "(", "'[epoch][s/s_per_e/gs]: [{}][{}/{}/{}], lr: {:.12f}, loss: {:.12f}'", ".", "format", "(", "epoch", ",", "step", ",", "steps_per_epoch", ",", "global_step", ",", "current_lr", ",", "loss", ")", ")", "\n", "if", "np", ".", "isnan", "(", "loss", ".", "cpu", "(", ")", ".", "item", "(", ")", ")", ":", "\n", "                    ", "print", "(", "'NaN in loss occurred. Aborting training.'", ")", "\n", "return", "-", "1", "\n", "\n", "", "", "duration", "+=", "time", ".", "time", "(", ")", "-", "before_op_time", "\n", "if", "global_step", "and", "global_step", "%", "args", ".", "log_freq", "==", "0", "and", "not", "model_just_loaded", ":", "\n", "                ", "var_sum", "=", "[", "var", ".", "sum", "(", ")", "for", "var", "in", "model", ".", "parameters", "(", ")", "if", "var", ".", "requires_grad", "]", "\n", "var_cnt", "=", "len", "(", "var_sum", ")", "\n", "var_sum", "=", "np", ".", "sum", "(", "var_sum", ")", "\n", "examples_per_sec", "=", "args", ".", "batch_size", "/", "duration", "*", "args", ".", "log_freq", "\n", "duration", "=", "0", "\n", "time_sofar", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "3600", "\n", "training_time_left", "=", "(", "num_total_steps", "/", "global_step", "-", "1.0", ")", "*", "time_sofar", "\n", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "                    ", "print", "(", "\"{}\"", ".", "format", "(", "args", ".", "model_name", ")", ")", "\n", "", "print_string", "=", "'GPU: {} | examples/s: {:4.2f} | loss: {:.5f} | var sum: {:.3f} avg: {:.3f} | time elapsed: {:.2f}h | time left: {:.2f}h'", "\n", "print", "(", "print_string", ".", "format", "(", "args", ".", "gpu", ",", "examples_per_sec", ",", "loss", ",", "var_sum", ".", "item", "(", ")", ",", "var_sum", ".", "item", "(", ")", "/", "var_cnt", ",", "time_sofar", ",", "training_time_left", ")", ")", "\n", "\n", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "\n", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "                    ", "writer", ".", "add_scalar", "(", "'silog_loss'", ",", "loss", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "'learning_rate'", ",", "current_lr", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "'var average'", ",", "var_sum", ".", "item", "(", ")", "/", "var_cnt", ",", "global_step", ")", "\n", "depth_gt", "=", "torch", ".", "where", "(", "depth_gt", "<", "1e-3", ",", "depth_gt", "*", "0", "+", "1e3", ",", "depth_gt", ")", "\n", "for", "i", "in", "range", "(", "num_log_images", ")", ":", "\n", "                        ", "writer", ".", "add_image", "(", "'depth_gt/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "depth_gt", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'depth_est/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "depth_est", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'reduc1x1/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "reduc1x1", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'lpg2x2/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "lpg2x2", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'lpg4x4/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "lpg4x4", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'lpg8x8/image/{}'", ".", "format", "(", "i", ")", ",", "normalize_result", "(", "1", "/", "lpg8x8", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "data", ")", ",", "global_step", ")", "\n", "writer", ".", "add_image", "(", "'image/image/{}'", ".", "format", "(", "i", ")", ",", "inv_normalize", "(", "image", "[", "i", ",", ":", ",", ":", ",", ":", "]", ")", ".", "data", ",", "global_step", ")", "\n", "", "writer", ".", "flush", "(", ")", "\n", "\n", "", "", "if", "not", "args", ".", "do_online_eval", "and", "global_step", "and", "global_step", "%", "args", ".", "save_freq", "==", "0", ":", "\n", "                ", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "                    ", "checkpoint", "=", "{", "'global_step'", ":", "global_step", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "checkpoint", ",", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/model-{}'", ".", "format", "(", "global_step", ")", ")", "\n", "\n", "", "", "if", "args", ".", "do_online_eval", "and", "global_step", "and", "global_step", "%", "args", ".", "eval_freq", "==", "0", "and", "not", "model_just_loaded", ":", "\n", "                ", "time", ".", "sleep", "(", "0.1", ")", "\n", "model", ".", "eval", "(", ")", "\n", "eval_measures", "=", "online_eval", "(", "model", ",", "dataloader_eval", ",", "gpu", ",", "ngpus_per_node", ")", "\n", "if", "eval_measures", "is", "not", "None", ":", "\n", "                    ", "for", "i", "in", "range", "(", "9", ")", ":", "\n", "                        ", "eval_summary_writer", ".", "add_scalar", "(", "eval_metrics", "[", "i", "]", ",", "eval_measures", "[", "i", "]", ".", "cpu", "(", ")", ",", "int", "(", "global_step", ")", ")", "\n", "measure", "=", "eval_measures", "[", "i", "]", "\n", "is_best", "=", "False", "\n", "if", "i", "<", "6", "and", "measure", "<", "best_eval_measures_lower_better", "[", "i", "]", ":", "\n", "                            ", "old_best", "=", "best_eval_measures_lower_better", "[", "i", "]", ".", "item", "(", ")", "\n", "best_eval_measures_lower_better", "[", "i", "]", "=", "measure", ".", "item", "(", ")", "\n", "is_best", "=", "True", "\n", "", "elif", "i", ">=", "6", "and", "measure", ">", "best_eval_measures_higher_better", "[", "i", "-", "6", "]", ":", "\n", "                            ", "old_best", "=", "best_eval_measures_higher_better", "[", "i", "-", "6", "]", ".", "item", "(", ")", "\n", "best_eval_measures_higher_better", "[", "i", "-", "6", "]", "=", "measure", ".", "item", "(", ")", "\n", "is_best", "=", "True", "\n", "", "if", "is_best", ":", "\n", "                            ", "old_best_step", "=", "best_eval_steps", "[", "i", "]", "\n", "old_best_name", "=", "'/model-{}-best_{}_{:.5f}'", ".", "format", "(", "old_best_step", ",", "eval_metrics", "[", "i", "]", ",", "old_best", ")", "\n", "model_path", "=", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "old_best_name", "\n", "if", "os", ".", "path", ".", "exists", "(", "model_path", ")", ":", "\n", "                                ", "command", "=", "'rm {}'", ".", "format", "(", "model_path", ")", "\n", "os", ".", "system", "(", "command", ")", "\n", "", "best_eval_steps", "[", "i", "]", "=", "global_step", "\n", "model_save_name", "=", "'/model-{}-best_{}_{:.5f}'", ".", "format", "(", "global_step", ",", "eval_metrics", "[", "i", "]", ",", "measure", ")", "\n", "print", "(", "'New best for {}. Saving model: {}'", ".", "format", "(", "eval_metrics", "[", "i", "]", ",", "model_save_name", ")", ")", "\n", "checkpoint", "=", "{", "'global_step'", ":", "global_step", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'best_eval_measures_higher_better'", ":", "best_eval_measures_higher_better", ",", "\n", "'best_eval_measures_lower_better'", ":", "best_eval_measures_lower_better", ",", "\n", "'best_eval_steps'", ":", "best_eval_steps", "\n", "}", "\n", "torch", ".", "save", "(", "checkpoint", ",", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "model_save_name", ")", "\n", "", "", "eval_summary_writer", ".", "flush", "(", ")", "\n", "", "model", ".", "train", "(", ")", "\n", "block_print", "(", ")", "\n", "set_misc", "(", "model", ")", "\n", "enable_print", "(", ")", "\n", "\n", "", "model_just_loaded", "=", "False", "\n", "global_step", "+=", "1", "\n", "\n", "", "epoch", "+=", "1", "\n", "\n", "", "if", "not", "args", ".", "multiprocessing_distributed", "or", "(", "args", ".", "multiprocessing_distributed", "and", "args", ".", "rank", "%", "ngpus_per_node", "==", "0", ")", ":", "\n", "        ", "writer", ".", "close", "(", ")", "\n", "if", "args", ".", "do_online_eval", ":", "\n", "            ", "eval_summary_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.main": [[556, 605], ["os.system", "os.system", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "os.system", "os.system", "os.system", "os.path.dirname", "os.path.basename", "os.system", "print", "print", "print", "torch.spawn", "bts_main.main_worker"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_main.main_worker"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "if", "args", ".", "mode", "!=", "'train'", ":", "\n", "        ", "print", "(", "'bts_main.py is only for training. Use bts_test.py instead.'", ")", "\n", "return", "-", "1", "\n", "\n", "", "model_filename", "=", "args", ".", "model_name", "+", "'.py'", "\n", "command", "=", "'mkdir '", "+", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "args_out_path", "=", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/'", "+", "sys", ".", "argv", "[", "1", "]", "\n", "command", "=", "'cp '", "+", "sys", ".", "argv", "[", "1", "]", "+", "' '", "+", "args_out_path", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "if", "args", ".", "checkpoint_path", "==", "''", ":", "\n", "        ", "model_out_path", "=", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/'", "+", "model_filename", "\n", "command", "=", "'cp bts.py '", "+", "model_out_path", "\n", "os", ".", "system", "(", "command", ")", "\n", "aux_out_path", "=", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/.'", "\n", "command", "=", "'cp bts_main.py '", "+", "aux_out_path", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "'cp bts_dataloader.py '", "+", "aux_out_path", "\n", "os", ".", "system", "(", "command", ")", "\n", "", "else", ":", "\n", "        ", "loaded_model_dir", "=", "os", ".", "path", ".", "dirname", "(", "args", ".", "checkpoint_path", ")", "\n", "loaded_model_name", "=", "os", ".", "path", ".", "basename", "(", "loaded_model_dir", ")", "\n", "loaded_model_filename", "=", "loaded_model_name", "+", "'.py'", "\n", "\n", "model_out_path", "=", "args", ".", "log_directory", "+", "'/'", "+", "args", ".", "model_name", "+", "'/'", "+", "model_filename", "\n", "command", "=", "'cp '", "+", "loaded_model_dir", "+", "'/'", "+", "loaded_model_filename", "+", "' '", "+", "model_out_path", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "args", ".", "distributed", "=", "args", ".", "world_size", ">", "1", "or", "args", ".", "multiprocessing_distributed", "\n", "\n", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "ngpus_per_node", ">", "1", "and", "not", "args", ".", "multiprocessing_distributed", ":", "\n", "        ", "print", "(", "\"This machine has more than 1 gpu. Please specify --multiprocessing_distributed, or set \\'CUDA_VISIBLE_DEVICES=0\\'\"", ")", "\n", "return", "-", "1", "\n", "\n", "", "if", "args", ".", "do_online_eval", ":", "\n", "        ", "print", "(", "\"You have specified --do_online_eval.\"", ")", "\n", "print", "(", "\"This will evaluate the model every eval_freq {} steps and save best models for individual eval metrics.\"", "\n", ".", "format", "(", "args", ".", "eval_freq", ")", ")", "\n", "\n", "", "if", "args", ".", "multiprocessing_distributed", ":", "\n", "        ", "args", ".", "world_size", "=", "ngpus_per_node", "*", "args", ".", "world_size", "\n", "mp", ".", "spawn", "(", "main_worker", ",", "nprocs", "=", "ngpus_per_node", ",", "args", "=", "(", "ngpus_per_node", ",", "args", ")", ")", "\n", "", "else", ":", "\n", "        ", "main_worker", "(", "args", ".", "gpu", ",", "ngpus_per_node", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_test.convert_arg_line_to_args": [[38, 43], ["arg_line.split", "arg.strip"], "function", ["None"], ["def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n", "            ", "continue", "\n", "", "yield", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_test.get_num_lines": [[77, 82], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["", "def", "get_num_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_test.test": [[84, 217], ["bts_dataloader.BtsDataLoader", "BtsModel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.eval", "torch.nn.DataParallel.cuda", "sum", "print", "bts_test.get_num_lines", "print", "time.time", "print", "print", "print", "tqdm.tqdm", "open", "f.readlines", "torch.no_grad", "torch.no_grad", "enumerate", "time.time", "os.path.exists", "range", "os.path.join", "cv2.imread", "pred_depth_scaled.astype.astype", "cv2.imwrite", "numpy.prod", "tqdm.tqdm", "torch.autograd.Variable", "torch.autograd.Variable", "torch.nn.DataParallel.", "pred_depths.append", "pred_8x8s.append", "pred_4x4s.append", "pred_2x2s.append", "pred_1x1s.append", "str", "os.path.dirname", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.path.join", "numpy.amax", "cv2.imwrite", "p.size", "torch.nn.DataParallel.parameters", "sample[].cuda", "sample[].cuda", "depth_est.cpu().numpy().squeeze", "lpg8x8[].cpu().numpy().squeeze", "lpg4x4[].cpu().numpy().squeeze", "lpg2x2[].cpu().numpy().squeeze", "reduc1x1[].cpu().numpy().squeeze", "lines[].split", "[].replace", "[].replace", "cv2.imread().astype", "matplotlib.imsave", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "[].split", "[].replace", "[].replace", "[].split", "[].replace", "[].replace", "[].replace", "lines[].split", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "depth_est.cpu().numpy", "lpg8x8[].cpu().numpy", "lpg4x4[].cpu().numpy", "lpg2x2[].cpu().numpy", "reduc1x1[].cpu().numpy", "[].split", "[].split", "lines[].split", "cv2.imread", "[].split", "[].split", "depth_est.cpu", "lpg8x8[].cpu", "lpg4x4[].cpu", "lpg2x2[].cpu", "reduc1x1[].cpu", "lines[].split", "[].split", "[].split", "lines[].split", "[].split", "[].split", "[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines"], ["", "def", "test", "(", "params", ")", ":", "\n", "    ", "\"\"\"Test function.\"\"\"", "\n", "args", ".", "mode", "=", "'test'", "\n", "dataloader", "=", "BtsDataLoader", "(", "args", ",", "'test'", ")", "\n", "\n", "model", "=", "BtsModel", "(", "params", "=", "args", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "num_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "print", "(", "\"Total number of parameters: {}\"", ".", "format", "(", "num_params", ")", ")", "\n", "\n", "num_test_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "\n", "with", "open", "(", "args", ".", "filenames_file", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "print", "(", "'now testing {} files with {}'", ".", "format", "(", "num_test_samples", ",", "args", ".", "checkpoint_path", ")", ")", "\n", "\n", "pred_depths", "=", "[", "]", "\n", "pred_8x8s", "=", "[", "]", "\n", "pred_4x4s", "=", "[", "]", "\n", "pred_2x2s", "=", "[", "]", "\n", "pred_1x1s", "=", "[", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "_", ",", "sample", "in", "enumerate", "(", "tqdm", "(", "dataloader", ".", "data", ")", ")", ":", "\n", "            ", "image", "=", "Variable", "(", "sample", "[", "'image'", "]", ".", "cuda", "(", ")", ")", "\n", "focal", "=", "Variable", "(", "sample", "[", "'focal'", "]", ".", "cuda", "(", ")", ")", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_est", "=", "model", "(", "image", ",", "focal", ")", "\n", "pred_depths", ".", "append", "(", "depth_est", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_8x8s", ".", "append", "(", "lpg8x8", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_4x4s", ".", "append", "(", "lpg4x4", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_2x2s", ".", "append", "(", "lpg2x2", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_1x1s", ".", "append", "(", "reduc1x1", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "\n", "", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "'Elapesed time: %s'", "%", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n", "save_name", "=", "'result_'", "+", "args", ".", "model_name", "\n", "\n", "print", "(", "'Saving result pngs..'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "save_name", ")", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_name", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/raw'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/cmap'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/rgb'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/gt'", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "\n", "", "", "", "for", "s", "in", "tqdm", "(", "range", "(", "num_test_samples", ")", ")", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "            ", "date_drive", "=", "lines", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", "\n", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "\n", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "", "elif", "args", ".", "dataset", "==", "'kitti_benchmark'", ":", "\n", "            ", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "scene_name", "=", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "0", "]", "\n", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_gt_png", "=", "save_name", "+", "'/gt/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", "\n", "\n", "", "rgb_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'./'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "rgb_path", ")", "\n", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "            ", "gt_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'./'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "gt", "=", "cv2", ".", "imread", "(", "gt_path", ",", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "# Visualization purpose only", "\n", "gt", "[", "gt", "==", "0", "]", "=", "np", ".", "amax", "(", "gt", ")", "\n", "\n", "", "pred_depth", "=", "pred_depths", "[", "s", "]", "\n", "pred_8x8", "=", "pred_8x8s", "[", "s", "]", "\n", "pred_4x4", "=", "pred_4x4s", "[", "s", "]", "\n", "pred_2x2", "=", "pred_2x2s", "[", "s", "]", "\n", "pred_1x1", "=", "pred_1x1s", "[", "s", "]", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", "or", "args", ".", "dataset", "==", "'kitti_benchmark'", ":", "\n", "            ", "pred_depth_scaled", "=", "pred_depth", "*", "256.0", "\n", "", "else", ":", "\n", "            ", "pred_depth_scaled", "=", "pred_depth", "*", "1000.0", "\n", "\n", "", "pred_depth_scaled", "=", "pred_depth_scaled", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "cv2", ".", "imwrite", "(", "filename_pred_png", ",", "pred_depth_scaled", ",", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "\n", "if", "args", ".", "save_lpg", ":", "\n", "            ", "cv2", ".", "imwrite", "(", "filename_image_png", ",", "image", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", ",", ":", "]", ")", "\n", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "plt", ".", "imsave", "(", "filename_gt_png", ",", "np", ".", "log10", "(", "gt", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_depth_cropped", "=", "pred_depth", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "plt", ".", "imsave", "(", "filename_cmap_png", ",", "np", ".", "log10", "(", "pred_depth_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_8x8_cropped", "=", "pred_8x8", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_8x8.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_8x8_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_4x4_cropped", "=", "pred_4x4", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_4x4.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_4x4_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_2x2_cropped", "=", "pred_2x2", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_2x2.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_2x2_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_1x1_cropped", "=", "pred_1x1", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_1x1.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_1x1_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "", "else", ":", "\n", "                ", "plt", ".", "imsave", "(", "filename_cmap_png", ",", "np", ".", "log10", "(", "pred_depth", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_8x8.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_8x8", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_4x4.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_4x4", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_2x2.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_2x2", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_1x1.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_1x1", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.BtsDataLoader.__init__": [[44, 77], ["bts_dataloader.DataLoadPreprocess", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "bts_dataloader.DataLoadPreprocess", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "bts_dataloader.preprocessing_transforms", "distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible", "bts_dataloader.DataLoadPreprocess", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "bts_dataloader.preprocessing_transforms", "bts_dataloader.preprocessing_transforms"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.preprocessing_transforms", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.preprocessing_transforms", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.preprocessing_transforms"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "training_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "                ", "self", ".", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "self", ".", "training_samples", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_sampler", "=", "None", "\n", "\n", "", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "training_samples", ",", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "(", "self", ".", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "args", ".", "num_threads", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "self", ".", "train_sampler", ")", "\n", "\n", "", "elif", "mode", "==", "'online_eval'", ":", "\n", "            ", "self", ".", "testing_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "# self.eval_sampler = torch.utils.data.distributed.DistributedSampler(self.testing_samples, shuffle=False)", "\n", "                ", "self", ".", "eval_sampler", "=", "DistributedSamplerNoEvenlyDivisible", "(", "self", ".", "testing_samples", ",", "shuffle", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "eval_sampler", "=", "None", "\n", "", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "testing_samples", ",", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "1", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "self", ".", "eval_sampler", ")", "\n", "\n", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "self", ".", "testing_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "testing_samples", ",", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "'mode should be one of \\'train, test, online_eval\\'. Got {}'", ".", "format", "(", "mode", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.__init__": [[80, 93], ["open", "f.readlines", "open", "f.readlines"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "mode", ",", "transform", "=", "None", ",", "is_for_online_eval", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "if", "mode", "==", "'online_eval'", ":", "\n", "            ", "with", "open", "(", "args", ".", "filenames_file_eval", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "filenames", "=", "f", ".", "readlines", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "open", "(", "args", ".", "filenames_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "filenames", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "", "self", ".", "mode", "=", "mode", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "to_tensor", "=", "ToTensor", "\n", "self", ".", "is_for_online_eval", "=", "is_for_online_eval", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.__getitem__": [[94, 186], ["float", "PIL.Image.open", "PIL.Image.open", "numpy.asarray", "numpy.expand_dims", "bts_dataloader.DataLoadPreprocess.random_crop", "bts_dataloader.DataLoadPreprocess.train_preprocess", "os.path.join", "bts_dataloader.DataLoadPreprocess.transform", "sample_path.split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "int", "int", "numpy.expand_dims.crop", "bts_dataloader.DataLoadPreprocess.crop", "numpy.expand_dims.crop", "bts_dataloader.DataLoadPreprocess.crop", "bts_dataloader.DataLoadPreprocess.rotate_image", "bts_dataloader.DataLoadPreprocess.rotate_image", "numpy.asarray", "numpy.asarray", "os.path.join", "int", "int", "random.random", "PIL.Image.open", "PIL.Image.open", "numpy.asarray", "numpy.expand_dims", "sample_path.split", "sample_path.split", "sample_path.split", "sample_path.split", "sample_path.split", "random.random", "sample_path.split"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.random_crop", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.train_preprocess", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.rotate_image", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.rotate_image"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "sample_path", "=", "self", ".", "filenames", "[", "idx", "]", "\n", "focal", "=", "float", "(", "sample_path", ".", "split", "(", ")", "[", "2", "]", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "self", ".", "args", ".", "dataset", "==", "'kitti'", "and", "self", ".", "args", ".", "use_right", "is", "True", "and", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "3", "]", ")", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "4", "]", ")", "\n", "", "else", ":", "\n", "                ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "\n", "", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "depth_gt", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "\n", "if", "self", ".", "args", ".", "do_kb_crop", "is", "True", ":", "\n", "                ", "height", "=", "image", ".", "height", "\n", "width", "=", "image", ".", "width", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "depth_gt", "=", "depth_gt", ".", "crop", "(", "(", "left_margin", ",", "top_margin", ",", "left_margin", "+", "1216", ",", "top_margin", "+", "352", ")", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "left_margin", ",", "top_margin", ",", "left_margin", "+", "1216", ",", "top_margin", "+", "352", ")", ")", "\n", "\n", "# To avoid blank boundaries due to pixel registration", "\n", "", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "depth_gt", "=", "depth_gt", ".", "crop", "(", "(", "43", ",", "45", ",", "608", ",", "472", ")", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "43", ",", "45", ",", "608", ",", "472", ")", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "do_random_rotate", "is", "True", ":", "\n", "                ", "random_angle", "=", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "2", "*", "self", ".", "args", ".", "degree", "\n", "image", "=", "self", ".", "rotate_image", "(", "image", ",", "random_angle", ")", "\n", "depth_gt", "=", "self", ".", "rotate_image", "(", "depth_gt", ",", "random_angle", ",", "flag", "=", "Image", ".", "NEAREST", ")", "\n", "\n", "", "image", "=", "np", ".", "asarray", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "depth_gt", "=", "np", ".", "asarray", "(", "depth_gt", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth_gt", "=", "np", ".", "expand_dims", "(", "depth_gt", ",", "axis", "=", "2", ")", "\n", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "depth_gt", "=", "depth_gt", "/", "1000.0", "\n", "", "else", ":", "\n", "                ", "depth_gt", "=", "depth_gt", "/", "256.0", "\n", "\n", "", "image", ",", "depth_gt", "=", "self", ".", "random_crop", "(", "image", ",", "depth_gt", ",", "self", ".", "args", ".", "input_height", ",", "self", ".", "args", ".", "input_width", ")", "\n", "image", ",", "depth_gt", "=", "self", ".", "train_preprocess", "(", "image", ",", "depth_gt", ")", "\n", "sample", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth_gt", ",", "'focal'", ":", "focal", "}", "\n", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "data_path", "=", "self", ".", "args", ".", "data_path_eval", "\n", "", "else", ":", "\n", "                ", "data_path", "=", "self", ".", "args", ".", "data_path", "\n", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "image", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "image_path", ")", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "\n", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "gt_path", "=", "self", ".", "args", ".", "gt_path_eval", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "has_valid_depth", "=", "False", "\n", "try", ":", "\n", "                    ", "depth_gt", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "has_valid_depth", "=", "True", "\n", "", "except", "IOError", ":", "\n", "                    ", "depth_gt", "=", "False", "\n", "# print('Missing gt for {}'.format(image_path))", "\n", "\n", "", "if", "has_valid_depth", ":", "\n", "                    ", "depth_gt", "=", "np", ".", "asarray", "(", "depth_gt", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth_gt", "=", "np", ".", "expand_dims", "(", "depth_gt", ",", "axis", "=", "2", ")", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                        ", "depth_gt", "=", "depth_gt", "/", "1000.0", "\n", "", "else", ":", "\n", "                        ", "depth_gt", "=", "depth_gt", "/", "256.0", "\n", "\n", "", "", "", "if", "self", ".", "args", ".", "do_kb_crop", "is", "True", ":", "\n", "                ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "image", "=", "image", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", ",", ":", "]", "\n", "if", "self", ".", "mode", "==", "'online_eval'", "and", "has_valid_depth", ":", "\n", "                    ", "depth_gt", "=", "depth_gt", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", ",", ":", "]", "\n", "\n", "", "", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "sample", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth_gt", ",", "'focal'", ":", "focal", ",", "'has_valid_depth'", ":", "has_valid_depth", "}", "\n", "", "else", ":", "\n", "                ", "sample", "=", "{", "'image'", ":", "image", ",", "'focal'", ":", "focal", "}", "\n", "\n", "", "", "if", "self", ".", "transform", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.rotate_image": [[187, 190], ["image.rotate"], "methods", ["None"], ["", "def", "rotate_image", "(", "self", ",", "image", ",", "angle", ",", "flag", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "result", "=", "image", ".", "rotate", "(", "angle", ",", "resample", "=", "flag", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.random_crop": [[191, 201], ["random.randint", "random.randint"], "methods", ["None"], ["", "def", "random_crop", "(", "self", ",", "img", ",", "depth", ",", "height", ",", "width", ")", ":", "\n", "        ", "assert", "img", ".", "shape", "[", "0", "]", ">=", "height", "\n", "assert", "img", ".", "shape", "[", "1", "]", ">=", "width", "\n", "assert", "img", ".", "shape", "[", "0", "]", "==", "depth", ".", "shape", "[", "0", "]", "\n", "assert", "img", ".", "shape", "[", "1", "]", "==", "depth", ".", "shape", "[", "1", "]", "\n", "x", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "width", ")", "\n", "y", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "height", ")", "\n", "img", "=", "img", "[", "y", ":", "y", "+", "height", ",", "x", ":", "x", "+", "width", ",", ":", "]", "\n", "depth", "=", "depth", "[", "y", ":", "y", "+", "height", ",", "x", ":", "x", "+", "width", ",", ":", "]", "\n", "return", "img", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.train_preprocess": [[202, 215], ["random.random", "random.random", "image[].copy", "depth_gt[].copy", "bts_dataloader.DataLoadPreprocess.augment_image"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.augment_image"], ["", "def", "train_preprocess", "(", "self", ",", "image", ",", "depth_gt", ")", ":", "\n", "# Random flipping", "\n", "        ", "do_flip", "=", "random", ".", "random", "(", ")", "\n", "if", "do_flip", ">", "0.5", ":", "\n", "            ", "image", "=", "(", "image", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", ")", ".", "copy", "(", ")", "\n", "depth_gt", "=", "(", "depth_gt", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", ")", ".", "copy", "(", ")", "\n", "\n", "# Random gamma, brightness, color augmentation", "\n", "", "do_augment", "=", "random", ".", "random", "(", ")", "\n", "if", "do_augment", ">", "0.5", ":", "\n", "            ", "image", "=", "self", ".", "augment_image", "(", "image", ")", "\n", "\n", "", "return", "image", ",", "depth_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.augment_image": [[216, 236], ["random.uniform", "numpy.random.uniform", "numpy.ones", "numpy.stack", "numpy.clip", "random.uniform", "random.uniform", "range"], "methods", ["None"], ["", "def", "augment_image", "(", "self", ",", "image", ")", ":", "\n", "# gamma augmentation", "\n", "        ", "gamma", "=", "random", ".", "uniform", "(", "0.9", ",", "1.1", ")", "\n", "image_aug", "=", "image", "**", "gamma", "\n", "\n", "# brightness augmentation", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "            ", "brightness", "=", "random", ".", "uniform", "(", "0.75", ",", "1.25", ")", "\n", "", "else", ":", "\n", "            ", "brightness", "=", "random", ".", "uniform", "(", "0.9", ",", "1.1", ")", "\n", "", "image_aug", "=", "image_aug", "*", "brightness", "\n", "\n", "# color augmentation", "\n", "colors", "=", "np", ".", "random", ".", "uniform", "(", "0.9", ",", "1.1", ",", "size", "=", "3", ")", "\n", "white", "=", "np", ".", "ones", "(", "(", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", ")", ")", "\n", "color_image", "=", "np", ".", "stack", "(", "[", "white", "*", "colors", "[", "i", "]", "for", "i", "in", "range", "(", "3", ")", "]", ",", "axis", "=", "2", ")", "\n", "image_aug", "*=", "color_image", "\n", "image_aug", "=", "np", ".", "clip", "(", "image_aug", ",", "0", ",", "1", ")", "\n", "\n", "return", "image_aug", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.__len__": [[237, 239], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.ToTensor.__init__": [[242, 245], ["torchvision.transforms.Normalize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.ToTensor.__call__": [[246, 261], ["bts_dataloader.ToTensor.to_tensor", "bts_dataloader.ToTensor.normalize", "bts_dataloader.ToTensor.to_tensor"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.ToTensor.to_tensor", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.ToTensor.to_tensor"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "focal", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'focal'", "]", "\n", "image", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "image", "=", "self", ".", "normalize", "(", "image", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "return", "{", "'image'", ":", "image", ",", "'focal'", ":", "focal", "}", "\n", "\n", "", "depth", "=", "sample", "[", "'depth'", "]", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "depth", "=", "self", ".", "to_tensor", "(", "depth", ")", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", ",", "'focal'", ":", "focal", "}", "\n", "", "else", ":", "\n", "            ", "has_valid_depth", "=", "sample", "[", "'has_valid_depth'", "]", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", ",", "'focal'", ":", "focal", ",", "'has_valid_depth'", ":", "has_valid_depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.ToTensor.to_tensor": [[262, 292], ["isinstance", "torch.ByteTensor.view", "torch.ByteTensor.view", "torch.ByteTensor.transpose().transpose().contiguous", "torch.ByteTensor.transpose().transpose().contiguous", "isinstance", "TypeError", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.ByteTensor.float", "torch.ByteTensor.float", "bts_dataloader._is_pil_image", "bts_dataloader._is_numpy_image", "pic.transpose", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "len", "torch.ByteTensor.transpose().transpose", "torch.ByteTensor.transpose().transpose", "type", "numpy.array", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "pic.tobytes", "torch.ByteTensor.transpose", "torch.ByteTensor.transpose"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader._is_pil_image", "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader._is_numpy_image"], ["", "", "def", "to_tensor", "(", "self", ",", "pic", ")", ":", "\n", "        ", "if", "not", "(", "_is_pil_image", "(", "pic", ")", "or", "_is_numpy_image", "(", "pic", ")", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'pic should be PIL Image or ndarray. Got {}'", ".", "format", "(", "type", "(", "pic", ")", ")", ")", "\n", "\n", "", "if", "isinstance", "(", "pic", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "pic", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "return", "img", "\n", "\n", "# handle PIL Image", "\n", "", "if", "pic", ".", "mode", "==", "'I'", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "np", ".", "int32", ",", "copy", "=", "False", ")", ")", "\n", "", "elif", "pic", ".", "mode", "==", "'I;16'", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "np", ".", "int16", ",", "copy", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "torch", ".", "ByteTensor", "(", "torch", ".", "ByteStorage", ".", "from_buffer", "(", "pic", ".", "tobytes", "(", ")", ")", ")", "\n", "# PIL image mode: 1, L, P, I, F, RGB, YCbCr, RGBA, CMYK", "\n", "", "if", "pic", ".", "mode", "==", "'YCbCr'", ":", "\n", "            ", "nchannel", "=", "3", "\n", "", "elif", "pic", ".", "mode", "==", "'I;16'", ":", "\n", "            ", "nchannel", "=", "1", "\n", "", "else", ":", "\n", "            ", "nchannel", "=", "len", "(", "pic", ".", "mode", ")", "\n", "", "img", "=", "img", ".", "view", "(", "pic", ".", "size", "[", "1", "]", ",", "pic", ".", "size", "[", "0", "]", ",", "nchannel", ")", "\n", "\n", "img", "=", "img", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "0", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "isinstance", "(", "img", ",", "torch", ".", "ByteTensor", ")", ":", "\n", "            ", "return", "img", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader._is_pil_image": [[29, 31], ["isinstance"], "function", ["None"], ["def", "_is_pil_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader._is_numpy_image": [[33, 35], ["isinstance"], "function", ["None"], ["", "def", "_is_numpy_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", "and", "(", "img", ".", "ndim", "in", "{", "2", ",", "3", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.preprocessing_transforms": [[37, 40], ["torchvision.transforms.Compose", "bts_dataloader.ToTensor"], "function", ["None"], ["", "def", "preprocessing_transforms", "(", "mode", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "ToTensor", "(", "mode", "=", "mode", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_eval.convert_arg_line_to_args": [[35, 40], ["arg_line.split", "arg.strip"], "function", ["None"], ["def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n", "            ", "continue", "\n", "", "yield", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_eval.compute_errors": [[81, 103], ["numpy.maximum", "numpy.sqrt", "numpy.sqrt", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.mean", "np.sqrt.mean", "np.sqrt.mean", "numpy.log", "numpy.log", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.abs", "numpy.log10", "numpy.log10", "numpy.mean", "numpy.mean"], "function", ["None"], ["", "def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "np", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "np", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "err", "=", "np", ".", "log", "(", "pred", ")", "-", "np", ".", "log", "(", "gt", ")", "\n", "silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_eval.get_num_lines": [[105, 110], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["", "def", "get_num_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_eval.test": [[112, 233], ["set", "set", "os.path.isdir", "bts_dataloader.BtsDataLoader", "BtsModel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "os.path.exists", "sorted", "sorted.add", "len", "print", "tensorboardX.SummaryWriter", "os.path.isdir", "torch.nn.DataParallel.eval", "torch.nn.DataParallel.cuda", "bts_eval.get_num_lines", "print", "time.time", "print", "print", "print", "bts_eval.eval", "print", "sorted.add", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "open", "f.readlines", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "time.time", "len", "range", "int", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.flush", "glob.glob", "torch.nn.DataParallel.split", "open", "file.readlines", "line.rstrip", "sorted.remove", "int", "os.path.join", "torch.autograd.Variable", "torch.autograd.Variable", "torch.nn.DataParallel.", "pred_depths.append", "str", "os.path.join", "cv2.imread", "gt_depths.append", "silog.mean", "int", "abs_rel.mean", "int", "log10.mean", "int", "sq_rel.mean", "int", "rms.mean", "int", "log_rms.mean", "int", "d1.mean", "int", "d2.mean", "int", "d3.mean", "int", "open", "file.write", "int", "line.rstrip", "sample[].cuda", "sample[].cuda", "depth_est.cpu().numpy().squeeze", "print", "set.add", "args.checkpoint_path.split", "str", "lines[].split", "cv2.imread.astype", "cv2.imread.astype", "os.path.dirname", "int", "depth_est.cpu().numpy", "depth_est.cpu"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval"], ["", "def", "test", "(", "params", ")", ":", "\n", "    ", "global", "gt_depths", ",", "is_missing", ",", "missing_ids", "\n", "gt_depths", "=", "[", "]", "\n", "is_missing", "=", "[", "]", "\n", "missing_ids", "=", "set", "(", ")", "\n", "write_summary", "=", "False", "\n", "steps", "=", "set", "(", ")", "\n", "\n", "if", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "        ", "import", "glob", "\n", "models", "=", "[", "f", "for", "f", "in", "glob", ".", "glob", "(", "args", ".", "checkpoint_path", "+", "\"/model*\"", ")", "]", "\n", "\n", "for", "model", "in", "models", ":", "\n", "            ", "step", "=", "model", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "steps", ".", "add", "(", "'{:06d}'", ".", "format", "(", "int", "(", "step", ")", ")", ")", "\n", "\n", "", "lines", "=", "[", "]", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "checkpoint_path", "+", "'/evaluated_checkpoints'", ")", ":", "\n", "            ", "with", "open", "(", "args", ".", "checkpoint_path", "+", "'/evaluated_checkpoints'", ")", "as", "file", ":", "\n", "                ", "lines", "=", "file", ".", "readlines", "(", ")", "\n", "\n", "", "", "for", "line", "in", "lines", ":", "\n", "            ", "if", "line", ".", "rstrip", "(", ")", "in", "steps", ":", "\n", "                ", "steps", ".", "remove", "(", "line", ".", "rstrip", "(", ")", ")", "\n", "\n", "", "", "steps", "=", "sorted", "(", "steps", ")", "\n", "if", "args", ".", "output_directory", "!=", "''", ":", "\n", "            ", "summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "args", ".", "model_name", ")", "\n", "", "else", ":", "\n", "            ", "summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "'eval'", ")", "\n", "\n", "", "write_summary", "=", "True", "\n", "", "else", ":", "\n", "        ", "steps", ".", "add", "(", "'{:06d}'", ".", "format", "(", "int", "(", "args", ".", "checkpoint_path", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", ")", ")", ")", "\n", "\n", "\n", "", "if", "len", "(", "steps", ")", "==", "0", ":", "\n", "        ", "print", "(", "'No new model to evaluate. Abort.'", ")", "\n", "return", "\n", "\n", "", "args", ".", "mode", "=", "'test'", "\n", "dataloader", "=", "BtsDataLoader", "(", "args", ",", "'eval'", ")", "\n", "\n", "model", "=", "BtsModel", "(", "params", "=", "params", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "if", "write_summary", ":", "\n", "        ", "summary_writer", "=", "SummaryWriter", "(", "summary_path", ",", "flush_secs", "=", "30", ")", "\n", "\n", "", "for", "step", "in", "steps", ":", "\n", "        ", "if", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "'model-'", "+", "str", "(", "int", "(", "step", ")", ")", ")", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "num_test_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "\n", "with", "open", "(", "args", ".", "filenames_file", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "print", "(", "'now testing {} files for step {}'", ".", "format", "(", "num_test_samples", ",", "step", ")", ")", "\n", "\n", "pred_depths", "=", "[", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "_", ",", "sample", "in", "enumerate", "(", "dataloader", ".", "data", ")", ":", "\n", "                ", "image", "=", "Variable", "(", "sample", "[", "'image'", "]", ".", "cuda", "(", ")", ")", "\n", "focal", "=", "Variable", "(", "sample", "[", "'focal'", "]", ".", "cuda", "(", ")", ")", "\n", "# image = Variable(sample['image'])", "\n", "# focal = Variable(sample['focal'])", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_est", "=", "model", "(", "image", ",", "focal", ")", "\n", "pred_depths", ".", "append", "(", "depth_est", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "\n", "", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "'Elapesed time: %s'", "%", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n", "if", "len", "(", "gt_depths", ")", "==", "0", ":", "\n", "            ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "                ", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "lines", "[", "t_id", "]", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                    ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                    ", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "", "else", ":", "\n", "                    ", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "\n", "", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "print", "(", "'Computing errors'", ")", "\n", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "=", "eval", "(", "pred_depths", ",", "int", "(", "step", ")", ")", "\n", "\n", "if", "write_summary", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "'silog'", ",", "silog", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'abs_rel'", ",", "abs_rel", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'log10'", ",", "log10", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'sq_rel'", ",", "sq_rel", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'rms'", ",", "rms", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'log_rms'", ",", "log_rms", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d1'", ",", "d1", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d2'", ",", "d2", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d3'", ",", "d3", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "flush", "(", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "dirname", "(", "args", ".", "checkpoint_path", ")", "+", "'/evaluated_checkpoints'", ",", "'a'", ")", "as", "file", ":", "\n", "                ", "file", ".", "write", "(", "step", "+", "'\\n'", ")", "\n", "\n", "", "", "print", "(", "'Evaluation done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_eval.eval": [[235, 301], ["bts_eval.get_num_lines", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "print", "print", "pred_depths_valid.append", "len", "numpy.logical_and", "bts_eval.compute_errors", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.logical_and", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "numpy.isinf", "numpy.isnan", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.compute_errors"], ["", "", "def", "eval", "(", "pred_depths", ",", "step", ")", ":", "\n", "    ", "num_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "pred_depths_valid", "=", "[", "]", "\n", "\n", "for", "t_id", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "if", "t_id", "in", "missing_ids", ":", "\n", "            ", "continue", "\n", "\n", "", "pred_depths_valid", ".", "append", "(", "pred_depths", "[", "t_id", "]", ")", "\n", "\n", "", "num_samples", "=", "num_samples", "-", "len", "(", "missing_ids", ")", "\n", "\n", "silog", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log10", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log_rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "abs_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "sq_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d1", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d2", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d3", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "gt_depth", "=", "gt_depths", "[", "i", "]", "\n", "pred_depth", "=", "pred_depths_valid", "[", "i", "]", "\n", "\n", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "pred_depth_uncropped", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_depth_uncropped", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "=", "pred_depth", "\n", "pred_depth", "=", "pred_depth_uncropped", "\n", "\n", "", "pred_depth", "[", "pred_depth", "<", "args", ".", "min_depth_eval", "]", "=", "args", ".", "min_depth_eval", "\n", "pred_depth", "[", "pred_depth", ">", "args", ".", "max_depth_eval", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isnan", "(", "pred_depth", ")", "]", "=", "args", ".", "min_depth_eval", "\n", "\n", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                    ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "silog", "[", "i", "]", ",", "log10", "[", "i", "]", ",", "abs_rel", "[", "i", "]", ",", "sq_rel", "[", "i", "]", ",", "rms", "[", "i", "]", ",", "log_rms", "[", "i", "]", ",", "d1", "[", "i", "]", ",", "d2", "[", "i", "]", ",", "d3", "[", "i", "]", "=", "compute_errors", "(", "\n", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "'silog'", ",", "'abs_rel'", ",", "'log10'", ",", "'rms'", ",", "\n", "'sq_rel'", ",", "'log_rms'", ",", "'d1'", ",", "'d2'", ",", "'d3'", ")", ")", "\n", "print", "(", "\"{:7.4f}, {:7.4f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}\"", ".", "format", "(", "\n", "silog", ".", "mean", "(", ")", ",", "abs_rel", ".", "mean", "(", ")", ",", "log10", ".", "mean", "(", ")", ",", "rms", ".", "mean", "(", ")", ",", "sq_rel", ".", "mean", "(", ")", ",", "log_rms", ".", "mean", "(", ")", ",", "d1", ".", "mean", "(", ")", ",", "d2", ".", "mean", "(", ")", ",", "\n", "d3", ".", "mean", "(", ")", ")", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.silog_loss.__init__": [[42, 45], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "variance_focus", ")", ":", "\n", "        ", "super", "(", "silog_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "variance_focus", "=", "variance_focus", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.silog_loss.forward": [[46, 49], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "d.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "depth_est", ",", "depth_gt", ",", "mask", ")", ":", "\n", "        ", "d", "=", "torch", ".", "log", "(", "depth_est", "[", "mask", "]", ")", "-", "torch", ".", "log", "(", "depth_gt", "[", "mask", "]", ")", "\n", "return", "torch", ".", "sqrt", "(", "(", "d", "**", "2", ")", ".", "mean", "(", ")", "-", "self", ".", "variance_focus", "*", "(", "d", ".", "mean", "(", ")", "**", "2", ")", ")", "*", "10.0", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.atrous_conv.__init__": [[52, 64], ["torch.Sequential.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.atrous_conv.atrous_conv.add_module", "bts.atrous_conv.atrous_conv.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dilation", ",", "apply_bn_first", "=", "True", ")", ":", "\n", "        ", "super", "(", "atrous_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "atrous_conv", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "if", "apply_bn_first", ":", "\n", "            ", "self", ".", "atrous_conv", ".", "add_module", "(", "'first_bn'", ",", "nn", ".", "BatchNorm2d", "(", "in_channels", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ",", "eps", "=", "1.1e-5", ")", ")", "\n", "\n", "", "self", ".", "atrous_conv", ".", "add_module", "(", "'aconv_sequence'", ",", "nn", ".", "Sequential", "(", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", "*", "2", ",", "bias", "=", "False", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", "*", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "out_channels", "*", "2", ",", "out_channels", "=", "out_channels", ",", "bias", "=", "False", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "(", "dilation", ",", "dilation", ")", ",", "dilation", "=", "dilation", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.atrous_conv.forward": [[65, 67], ["bts.atrous_conv.atrous_conv.forward"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.BtsModel.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "atrous_conv", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.upconv.__init__": [[70, 75], ["torch.Module.__init__", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "ratio", "=", "2", ")", ":", "\n", "        ", "super", "(", "upconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "elu", "=", "nn", ".", "ELU", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "bias", "=", "False", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "ratio", "=", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.upconv.forward": [[76, 81], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "bts.upconv.conv", "bts.upconv.elu"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "up_x", "=", "torch_nn_func", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "self", ".", "ratio", ",", "mode", "=", "'nearest'", ")", "\n", "out", "=", "self", ".", "conv", "(", "up_x", ")", "\n", "out", "=", "self", ".", "elu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.reduction_1x1.__init__": [[84, 109], ["torch.Sequential.__init__", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.reduction_1x1.reduc.add_module", "bts.reduction_1x1.reduc.add_module", "bts.reduction_1x1.reduc.add_module", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_in_filters", ",", "num_out_filters", ",", "max_depth", ",", "is_final", "=", "False", ")", ":", "\n", "        ", "super", "(", "reduction_1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_depth", "=", "max_depth", "\n", "self", ".", "is_final", "=", "is_final", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "reduc", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "\n", "while", "num_out_filters", ">=", "4", ":", "\n", "            ", "if", "num_out_filters", "<", "8", ":", "\n", "                ", "if", "self", ".", "is_final", ":", "\n", "                    ", "self", ".", "reduc", ".", "add_module", "(", "'final'", ",", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_in_filters", ",", "out_channels", "=", "1", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "reduc", ".", "add_module", "(", "'plane_params'", ",", "torch", ".", "nn", ".", "Conv2d", "(", "num_in_filters", ",", "out_channels", "=", "3", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "", "break", "\n", "", "else", ":", "\n", "                ", "self", ".", "reduc", ".", "add_module", "(", "'inter_{}_{}'", ".", "format", "(", "num_in_filters", ",", "num_out_filters", ")", ",", "\n", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", "=", "num_in_filters", ",", "out_channels", "=", "num_out_filters", ",", "\n", "bias", "=", "False", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", ")", "\n", "\n", "", "num_in_filters", "=", "num_out_filters", "\n", "num_out_filters", "=", "num_out_filters", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.reduction_1x1.forward": [[110, 123], ["bts.reduction_1x1.reduc.forward", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.mul().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "torch.cos().unsqueeze", "dist.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.reduction_1x1.sigmoid", "bts.reduction_1x1.sigmoid", "bts.reduction_1x1.sigmoid", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.BtsModel.forward"], ["", "", "def", "forward", "(", "self", ",", "net", ")", ":", "\n", "        ", "net", "=", "self", ".", "reduc", ".", "forward", "(", "net", ")", "\n", "if", "not", "self", ".", "is_final", ":", "\n", "            ", "theta", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "0", ",", ":", ",", ":", "]", ")", "*", "math", ".", "pi", "/", "3", "\n", "phi", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "1", ",", ":", ",", ":", "]", ")", "*", "math", ".", "pi", "*", "2", "\n", "dist", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "2", ",", ":", ",", ":", "]", ")", "*", "self", ".", "max_depth", "\n", "n1", "=", "torch", ".", "mul", "(", "torch", ".", "sin", "(", "theta", ")", ",", "torch", ".", "cos", "(", "phi", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n2", "=", "torch", ".", "mul", "(", "torch", ".", "sin", "(", "theta", ")", ",", "torch", ".", "sin", "(", "phi", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n3", "=", "torch", ".", "cos", "(", "theta", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n4", "=", "dist", ".", "unsqueeze", "(", "1", ")", "\n", "net", "=", "torch", ".", "cat", "(", "[", "n1", ",", "n2", ",", "n3", ",", "n4", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.local_planar_guidance.__init__": [[125, 131], ["torch.Module.__init__", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "torch.arange().reshape().float", "float", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange().reshape", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "int"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "upratio", ")", ":", "\n", "        ", "super", "(", "local_planar_guidance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upratio", "=", "upratio", "\n", "self", ".", "u", "=", "torch", ".", "arange", "(", "self", ".", "upratio", ")", ".", "reshape", "(", "[", "1", ",", "1", ",", "self", ".", "upratio", "]", ")", ".", "float", "(", ")", "\n", "self", ".", "v", "=", "torch", ".", "arange", "(", "int", "(", "self", ".", "upratio", ")", ")", ".", "reshape", "(", "[", "1", ",", "self", ".", "upratio", ",", "1", "]", ")", ".", "float", "(", ")", "\n", "self", ".", "upratio", "=", "float", "(", "upratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.local_planar_guidance.forward": [[132, 147], ["torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "bts.local_planar_guidance.u.repeat().cuda", "bts.local_planar_guidance.v.repeat().cuda", "int", "int", "bts.local_planar_guidance.u.repeat", "bts.local_planar_guidance.v.repeat", "plane_eq.size", "plane_eq.size", "plane_eq.size", "plane_eq.size", "plane_eq.size", "int", "plane_eq.size", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "plane_eq", ",", "focal", ")", ":", "\n", "        ", "plane_eq_expanded", "=", "torch", ".", "repeat_interleave", "(", "plane_eq", ",", "int", "(", "self", ".", "upratio", ")", ",", "2", ")", "\n", "plane_eq_expanded", "=", "torch", ".", "repeat_interleave", "(", "plane_eq_expanded", ",", "int", "(", "self", ".", "upratio", ")", ",", "3", ")", "\n", "n1", "=", "plane_eq_expanded", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "n2", "=", "plane_eq_expanded", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "n3", "=", "plane_eq_expanded", "[", ":", ",", "2", ",", ":", ",", ":", "]", "\n", "n4", "=", "plane_eq_expanded", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "\n", "u", "=", "self", ".", "u", ".", "repeat", "(", "plane_eq", ".", "size", "(", "0", ")", ",", "plane_eq", ".", "size", "(", "2", ")", "*", "int", "(", "self", ".", "upratio", ")", ",", "plane_eq", ".", "size", "(", "3", ")", ")", ".", "cuda", "(", ")", "\n", "u", "=", "(", "u", "-", "(", "self", ".", "upratio", "-", "1", ")", "*", "0.5", ")", "/", "self", ".", "upratio", "\n", "\n", "v", "=", "self", ".", "v", ".", "repeat", "(", "plane_eq", ".", "size", "(", "0", ")", ",", "plane_eq", ".", "size", "(", "2", ")", ",", "plane_eq", ".", "size", "(", "3", ")", "*", "int", "(", "self", ".", "upratio", ")", ")", ".", "cuda", "(", ")", "\n", "v", "=", "(", "v", "-", "(", "self", ".", "upratio", "-", "1", ")", "*", "0.5", ")", "/", "self", ".", "upratio", "\n", "\n", "return", "n4", "/", "(", "n1", "*", "u", "+", "n2", "*", "v", "+", "n3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.bts.__init__": [[149, 195], ["torch.Module.__init__", "bts.upconv", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.upconv", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "bts.atrous_conv", "bts.atrous_conv", "bts.atrous_conv", "bts.atrous_conv", "bts.atrous_conv", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.reduction_1x1", "bts.local_planar_guidance", "bts.upconv", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.reduction_1x1", "bts.local_planar_guidance", "bts.upconv", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "bts.reduction_1x1", "bts.local_planar_guidance", "bts.upconv", "bts.reduction_1x1", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.reduction_1x1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.reduction_1x1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.reduction_1x1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.reduction_1x1"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "feat_out_channels", ",", "num_features", "=", "512", ")", ":", "\n", "        ", "super", "(", "bts", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "params", "=", "params", "\n", "\n", "self", ".", "upconv5", "=", "upconv", "(", "feat_out_channels", "[", "4", "]", ",", "num_features", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "\n", "self", ".", "conv5", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "+", "feat_out_channels", "[", "3", "]", ",", "num_features", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "upconv4", "=", "upconv", "(", "num_features", ",", "num_features", "//", "2", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "2", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "bn4_2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "\n", "self", ".", "daspp_3", "=", "atrous_conv", "(", "num_features", "//", "2", ",", "num_features", "//", "4", ",", "3", ",", "apply_bn_first", "=", "False", ")", "\n", "self", ".", "daspp_6", "=", "atrous_conv", "(", "num_features", "//", "2", "+", "num_features", "//", "4", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "6", ")", "\n", "self", ".", "daspp_12", "=", "atrous_conv", "(", "num_features", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "12", ")", "\n", "self", ".", "daspp_18", "=", "atrous_conv", "(", "num_features", "+", "num_features", "//", "4", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "18", ")", "\n", "self", ".", "daspp_24", "=", "atrous_conv", "(", "num_features", "+", "num_features", "//", "2", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "24", ")", "\n", "self", ".", "daspp_conv", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "+", "num_features", "//", "2", "+", "num_features", "//", "4", ",", "num_features", "//", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "reduc8x8", "=", "reduction_1x1", "(", "num_features", "//", "4", ",", "num_features", "//", "4", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg8x8", "=", "local_planar_guidance", "(", "8", ")", "\n", "\n", "self", ".", "upconv3", "=", "upconv", "(", "num_features", "//", "4", ",", "num_features", "//", "4", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "4", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "4", "+", "feat_out_channels", "[", "1", "]", "+", "1", ",", "num_features", "//", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "reduc4x4", "=", "reduction_1x1", "(", "num_features", "//", "4", ",", "num_features", "//", "8", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg4x4", "=", "local_planar_guidance", "(", "4", ")", "\n", "\n", "self", ".", "upconv2", "=", "upconv", "(", "num_features", "//", "4", ",", "num_features", "//", "8", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "8", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "8", "+", "feat_out_channels", "[", "0", "]", "+", "1", ",", "num_features", "//", "8", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "self", ".", "reduc2x2", "=", "reduction_1x1", "(", "num_features", "//", "8", ",", "num_features", "//", "16", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg2x2", "=", "local_planar_guidance", "(", "2", ")", "\n", "\n", "self", ".", "upconv1", "=", "upconv", "(", "num_features", "//", "8", ",", "num_features", "//", "16", ")", "\n", "self", ".", "reduc1x1", "=", "reduction_1x1", "(", "num_features", "//", "16", ",", "num_features", "//", "32", ",", "self", ".", "params", ".", "max_depth", ",", "is_final", "=", "True", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "16", "+", "4", ",", "num_features", "//", "16", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "get_depth", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "16", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.bts.forward": [[196, 267], ["bts.bts.upconv5", "bts.bts.bn5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.conv5", "bts.bts.upconv4", "bts.bts.bn4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.conv4", "bts.bts.bn4_2", "bts.bts.daspp_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.daspp_6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.daspp_12", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.daspp_18", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.daspp_24", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.daspp_conv", "bts.bts.reduc8x8", "torch.normalize", "torch.normalize", "torch.normalize", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.lpg8x8", "torch.interpolate", "torch.interpolate", "torch.interpolate", "bts.bts.upconv3", "bts.bts.bn3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.conv3", "bts.bts.reduc4x4", "torch.normalize", "torch.normalize", "torch.normalize", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.lpg4x4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "bts.bts.upconv2", "bts.bts.bn2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.conv2", "bts.bts.reduc2x2", "torch.normalize", "torch.normalize", "torch.normalize", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.lpg2x2", "bts.bts.upconv1", "bts.bts.reduc1x1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bts.bts.conv1", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "bts.bts.unsqueeze", "bts.bts.unsqueeze", "bts.bts.unsqueeze", "bts.bts.get_depth", "plane_dist_8x8.unsqueeze", "plane_dist_4x4.unsqueeze", "plane_dist_2x2.unsqueeze", "focal.view().float", "focal.view"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.get_depth"], ["", "def", "forward", "(", "self", ",", "features", ",", "focal", ")", ":", "\n", "        ", "skip0", ",", "skip1", ",", "skip2", ",", "skip3", "=", "features", "[", "0", "]", ",", "features", "[", "1", "]", ",", "features", "[", "2", "]", ",", "features", "[", "3", "]", "\n", "dense_features", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "features", "[", "4", "]", ")", "\n", "upconv5", "=", "self", ".", "upconv5", "(", "dense_features", ")", "# H/16", "\n", "upconv5", "=", "self", ".", "bn5", "(", "upconv5", ")", "\n", "concat5", "=", "torch", ".", "cat", "(", "[", "upconv5", ",", "skip3", "]", ",", "dim", "=", "1", ")", "\n", "iconv5", "=", "self", ".", "conv5", "(", "concat5", ")", "\n", "\n", "upconv4", "=", "self", ".", "upconv4", "(", "iconv5", ")", "# H/8", "\n", "upconv4", "=", "self", ".", "bn4", "(", "upconv4", ")", "\n", "concat4", "=", "torch", ".", "cat", "(", "[", "upconv4", ",", "skip2", "]", ",", "dim", "=", "1", ")", "\n", "iconv4", "=", "self", ".", "conv4", "(", "concat4", ")", "\n", "iconv4", "=", "self", ".", "bn4_2", "(", "iconv4", ")", "\n", "\n", "daspp_3", "=", "self", ".", "daspp_3", "(", "iconv4", ")", "\n", "concat4_2", "=", "torch", ".", "cat", "(", "[", "concat4", ",", "daspp_3", "]", ",", "dim", "=", "1", ")", "\n", "daspp_6", "=", "self", ".", "daspp_6", "(", "concat4_2", ")", "\n", "concat4_3", "=", "torch", ".", "cat", "(", "[", "concat4_2", ",", "daspp_6", "]", ",", "dim", "=", "1", ")", "\n", "daspp_12", "=", "self", ".", "daspp_12", "(", "concat4_3", ")", "\n", "concat4_4", "=", "torch", ".", "cat", "(", "[", "concat4_3", ",", "daspp_12", "]", ",", "dim", "=", "1", ")", "\n", "daspp_18", "=", "self", ".", "daspp_18", "(", "concat4_4", ")", "\n", "concat4_5", "=", "torch", ".", "cat", "(", "[", "concat4_4", ",", "daspp_18", "]", ",", "dim", "=", "1", ")", "\n", "daspp_24", "=", "self", ".", "daspp_24", "(", "concat4_5", ")", "\n", "concat4_daspp", "=", "torch", ".", "cat", "(", "[", "iconv4", ",", "daspp_3", ",", "daspp_6", ",", "daspp_12", ",", "daspp_18", ",", "daspp_24", "]", ",", "dim", "=", "1", ")", "\n", "daspp_feat", "=", "self", ".", "daspp_conv", "(", "concat4_daspp", ")", "\n", "\n", "reduc8x8", "=", "self", ".", "reduc8x8", "(", "daspp_feat", ")", "\n", "plane_normal_8x8", "=", "reduc8x8", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_8x8", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_8x8", ",", "2", ",", "1", ")", "\n", "plane_dist_8x8", "=", "reduc8x8", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_8x8", "=", "torch", ".", "cat", "(", "[", "plane_normal_8x8", ",", "plane_dist_8x8", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_8x8", "=", "self", ".", "lpg8x8", "(", "plane_eq_8x8", ",", "focal", ")", "\n", "depth_8x8_scaled", "=", "depth_8x8", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "depth_8x8_scaled_ds", "=", "torch_nn_func", ".", "interpolate", "(", "depth_8x8_scaled", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "upconv3", "=", "self", ".", "upconv3", "(", "daspp_feat", ")", "# H/4", "\n", "upconv3", "=", "self", ".", "bn3", "(", "upconv3", ")", "\n", "concat3", "=", "torch", ".", "cat", "(", "[", "upconv3", ",", "skip1", ",", "depth_8x8_scaled_ds", "]", ",", "dim", "=", "1", ")", "\n", "iconv3", "=", "self", ".", "conv3", "(", "concat3", ")", "\n", "\n", "reduc4x4", "=", "self", ".", "reduc4x4", "(", "iconv3", ")", "\n", "plane_normal_4x4", "=", "reduc4x4", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_4x4", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_4x4", ",", "2", ",", "1", ")", "\n", "plane_dist_4x4", "=", "reduc4x4", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_4x4", "=", "torch", ".", "cat", "(", "[", "plane_normal_4x4", ",", "plane_dist_4x4", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_4x4", "=", "self", ".", "lpg4x4", "(", "plane_eq_4x4", ",", "focal", ")", "\n", "depth_4x4_scaled", "=", "depth_4x4", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "depth_4x4_scaled_ds", "=", "torch_nn_func", ".", "interpolate", "(", "depth_4x4_scaled", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "upconv2", "=", "self", ".", "upconv2", "(", "iconv3", ")", "# H/2", "\n", "upconv2", "=", "self", ".", "bn2", "(", "upconv2", ")", "\n", "concat2", "=", "torch", ".", "cat", "(", "[", "upconv2", ",", "skip0", ",", "depth_4x4_scaled_ds", "]", ",", "dim", "=", "1", ")", "\n", "iconv2", "=", "self", ".", "conv2", "(", "concat2", ")", "\n", "\n", "reduc2x2", "=", "self", ".", "reduc2x2", "(", "iconv2", ")", "\n", "plane_normal_2x2", "=", "reduc2x2", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_2x2", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_2x2", ",", "2", ",", "1", ")", "\n", "plane_dist_2x2", "=", "reduc2x2", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_2x2", "=", "torch", ".", "cat", "(", "[", "plane_normal_2x2", ",", "plane_dist_2x2", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_2x2", "=", "self", ".", "lpg2x2", "(", "plane_eq_2x2", ",", "focal", ")", "\n", "depth_2x2_scaled", "=", "depth_2x2", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "\n", "upconv1", "=", "self", ".", "upconv1", "(", "iconv2", ")", "\n", "reduc1x1", "=", "self", ".", "reduc1x1", "(", "upconv1", ")", "\n", "concat1", "=", "torch", ".", "cat", "(", "[", "upconv1", ",", "reduc1x1", ",", "depth_2x2_scaled", ",", "depth_4x4_scaled", ",", "depth_8x8_scaled", "]", ",", "dim", "=", "1", ")", "\n", "iconv1", "=", "self", ".", "conv1", "(", "concat1", ")", "\n", "final_depth", "=", "self", ".", "params", ".", "max_depth", "*", "self", ".", "get_depth", "(", "iconv1", ")", "\n", "if", "self", ".", "params", ".", "dataset", "==", "'kitti'", ":", "\n", "            ", "final_depth", "=", "final_depth", "*", "focal", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ".", "float", "(", ")", "/", "715.0873", "\n", "\n", "", "return", "depth_8x8_scaled", ",", "depth_4x4_scaled", ",", "depth_2x2_scaled", ",", "reduc1x1", ",", "final_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.encoder.__init__": [[269, 304], ["torch.Module.__init__", "models.densenet121", "models.densenet161", "models.resnet50", "models.resnet101", "models.resnext50_32x4d", "models.resnext101_32x8d", "print", "models.mobilenet_v2"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "params", "=", "params", "\n", "import", "torchvision", ".", "models", "as", "models", "\n", "if", "params", ".", "encoder", "==", "'densenet121_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "densenet121", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_names", "=", "[", "'relu0'", ",", "'pool0'", ",", "'transition1'", ",", "'transition2'", ",", "'norm5'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "64", ",", "128", ",", "256", ",", "1024", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'densenet161_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "densenet161", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_names", "=", "[", "'relu0'", ",", "'pool0'", ",", "'transition1'", ",", "'transition2'", ",", "'norm5'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "96", ",", "96", ",", "192", ",", "384", ",", "2208", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnet50_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnet101_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnext50_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnext50_32x4d", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnext101_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnext101_32x8d", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'mobilenetv2_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "mobilenet_v2", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_inds", "=", "[", "2", ",", "4", ",", "7", ",", "11", ",", "19", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "16", ",", "24", ",", "32", ",", "64", ",", "1280", "]", "\n", "self", ".", "feat_names", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Not supported encoder: {}'", ".", "format", "(", "params", ".", "encoder", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.encoder.forward": [[305, 321], ["bts.encoder.base_model._modules.items", "v", "any", "skip_feat.append", "skip_feat.append"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feature", "=", "x", "\n", "skip_feat", "=", "[", "]", "\n", "i", "=", "1", "\n", "for", "k", ",", "v", "in", "self", ".", "base_model", ".", "_modules", ".", "items", "(", ")", ":", "\n", "            ", "if", "'fc'", "in", "k", "or", "'avgpool'", "in", "k", ":", "\n", "                ", "continue", "\n", "", "feature", "=", "v", "(", "feature", ")", "\n", "if", "self", ".", "params", ".", "encoder", "==", "'mobilenetv2_bts'", ":", "\n", "                ", "if", "i", "==", "2", "or", "i", "==", "4", "or", "i", "==", "7", "or", "i", "==", "11", "or", "i", "==", "19", ":", "\n", "                    ", "skip_feat", ".", "append", "(", "feature", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "any", "(", "x", "in", "k", "for", "x", "in", "self", ".", "feat_names", ")", ":", "\n", "                    ", "skip_feat", ".", "append", "(", "feature", ")", "\n", "", "", "i", "=", "i", "+", "1", "\n", "", "return", "skip_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.BtsModel.__init__": [[324, 328], ["torch.Module.__init__", "bts.encoder", "bts.bts"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "BtsModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "(", "params", ")", "\n", "self", ".", "decoder", "=", "bts", "(", "params", ",", "self", ".", "encoder", ".", "feat_out_channels", ",", "params", ".", "bts_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.BtsModel.forward": [[329, 332], ["bts.BtsModel.encoder", "bts.BtsModel.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "focal", ")", ":", "\n", "        ", "skip_feat", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "self", ".", "decoder", "(", "skip_feat", ",", "focal", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.bn_init_as_tf": [[26, 32], ["isinstance", "m.eval"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval"], ["def", "bn_init_as_tf", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "m", ".", "track_running_stats", "=", "True", "# These two lines enable using stats (moving mean and var) loaded from pretrained model", "\n", "m", ".", "eval", "(", ")", "# or zero mean and variance of one if the batch norm layer has no pretrained values", "\n", "m", ".", "affine", "=", "True", "\n", "m", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts.weights_init_xavier": [[34, 39], ["isinstance", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.zeros_", "torch.nn.init.zeros_", "torch.nn.init.zeros_"], "function", ["None"], ["", "", "def", "weights_init_xavier", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.__init__": [[143, 198], ["PySide2.QtWidgets.QWidget.__init__", "bts_live_3d.GLWidget", "PySide2.QtWidgets.QVBoxLayout", "PySide2.QtWidgets.QGridLayout", "PySide2.QtWidgets.QLabel", "bts_live_3d.Window.inputViewer.setPixmap", "PySide2.QtWidgets.QLabel", "bts_live_3d.Window.outputViewer.setPixmap", "PySide2.QtWidgets.QFrame", "PySide2.QtWidgets.QVBoxLayout", "PySide2.QtWidgets.QFrame.setLayout", "PySide2.QtWidgets.QVBoxLayout.addWidget", "PySide2.QtWidgets.QVBoxLayout.addWidget", "PySide2.QtWidgets.QGridLayout.addWidget", "PySide2.QtWidgets.QGridLayout.addWidget", "PySide2.QtWidgets.QGridLayout.setColumnStretch", "PySide2.QtWidgets.QVBoxLayout.addLayout", "PySide2.QtWidgets.QHBoxLayout", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button2.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button4.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button6.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QVBoxLayout.addLayout", "bts_live_3d.Window.setLayout", "bts_live_3d.Window.setWindowTitle", "bts_live_3d.Window.updateInput.connect", "PySide2.QtGui.QPixmap", "PySide2.QtGui.QPixmap", "bts_live_3d.Window.tr", "bts_live_3d.Window.glWidget.rgb.any", "bts_live_3d.Window.glWidget.depth.any", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.outputViewer.setPixmap", "PySide2.QtGui.QPixmap.fromImage", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.np_to_qimage", "bts_live_3d.np_to_qimage", "plasma"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "QtWidgets", ".", "QWidget", ".", "__init__", "(", "self", ",", "parent", ")", "\n", "self", ".", "model", "=", "None", "\n", "self", ".", "capture", "=", "None", "\n", "self", ".", "glWidget", "=", "GLWidget", "(", ")", "\n", "\n", "mainLayout", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "\n", "# Input / output views", "\n", "viewsLayout", "=", "QtWidgets", ".", "QGridLayout", "(", ")", "\n", "self", ".", "inputViewer", "=", "QtWidgets", ".", "QLabel", "(", "\"[Click to start]\"", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", "(", "width_rgb", ",", "height_rgb", ")", ")", "\n", "self", ".", "outputViewer", "=", "QtWidgets", ".", "QLabel", "(", "\"[Click to start]\"", ")", "\n", "self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", "(", "width_rgb", ",", "height_rgb", ")", ")", "\n", "\n", "imgsFrame", "=", "QtWidgets", ".", "QFrame", "(", ")", "\n", "inputsLayout", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "imgsFrame", ".", "setLayout", "(", "inputsLayout", ")", "\n", "inputsLayout", ".", "addWidget", "(", "self", ".", "inputViewer", ")", "\n", "inputsLayout", ".", "addWidget", "(", "self", ".", "outputViewer", ")", "\n", "\n", "viewsLayout", ".", "addWidget", "(", "imgsFrame", ",", "0", ",", "0", ")", "\n", "viewsLayout", ".", "addWidget", "(", "self", ".", "glWidget", ",", "0", ",", "1", ")", "\n", "viewsLayout", ".", "setColumnStretch", "(", "1", ",", "10", ")", "\n", "mainLayout", ".", "addLayout", "(", "viewsLayout", ")", "\n", "\n", "# Load depth estimation model", "\n", "toolsLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", ")", "\n", "\n", "self", ".", "button2", "=", "QtWidgets", ".", "QPushButton", "(", "\"Webcam\"", ")", "\n", "self", ".", "button2", ".", "clicked", ".", "connect", "(", "self", ".", "loadCamera", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button2", ")", "\n", "\n", "self", ".", "button4", "=", "QtWidgets", ".", "QPushButton", "(", "\"Pause\"", ")", "\n", "self", ".", "button4", ".", "clicked", ".", "connect", "(", "self", ".", "loadImage", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button4", ")", "\n", "\n", "self", ".", "button6", "=", "QtWidgets", ".", "QPushButton", "(", "\"Refresh\"", ")", "\n", "self", ".", "button6", ".", "clicked", ".", "connect", "(", "self", ".", "updateCloud", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button6", ")", "\n", "\n", "mainLayout", ".", "addLayout", "(", "toolsLayout", ")", "\n", "\n", "self", ".", "setLayout", "(", "mainLayout", ")", "\n", "self", ".", "setWindowTitle", "(", "self", ".", "tr", "(", "\"BTS Live\"", ")", ")", "\n", "\n", "# Signals", "\n", "self", ".", "updateInput", ".", "connect", "(", "self", ".", "update_input", ")", "\n", "\n", "# Default example", "\n", "if", "self", ".", "glWidget", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "glWidget", ".", "depth", ".", "any", "(", ")", ":", "\n", "            ", "img", "=", "(", "self", ".", "glWidget", ".", "rgb", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "img", ")", ")", ")", "\n", "coloredDepth", "=", "(", "plasma", "(", "self", ".", "glWidget", ".", "depth", "[", ":", ",", ":", ",", "0", "]", ")", "[", ":", ",", ":", ",", ":", "3", "]", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "coloredDepth", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.loadModel": [[199, 207], ["PySide2.QtGui.QGuiApplication.setOverrideCursor", "bts_live_3d.tic", "bts_live_3d.load_model", "print", "bts_live_3d.toc", "bts_live_3d.Window.updateCloud", "PySide2.QtGui.QGuiApplication.restoreOverrideCursor"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.tic", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.load_model", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.toc", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["", "", "def", "loadModel", "(", "self", ")", ":", "\n", "        ", "QtGui", ".", "QGuiApplication", ".", "setOverrideCursor", "(", "QtCore", ".", "Qt", ".", "WaitCursor", ")", "\n", "tic", "(", ")", "\n", "self", ".", "model", "=", "load_model", "(", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "toc", "(", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "QtGui", ".", "QGuiApplication", ".", "restoreOverrideCursor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.loadCamera": [[208, 215], ["bts_live_3d.tic", "bts_live_3d.load_model", "print", "bts_live_3d.toc", "cv2.VideoCapture", "bts_live_3d.Window.updateInput.emit"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.tic", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.load_model", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.toc"], ["", "def", "loadCamera", "(", "self", ")", ":", "\n", "        ", "tic", "(", ")", "\n", "self", ".", "model", "=", "load_model", "(", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "toc", "(", ")", "\n", "self", ".", "capture", "=", "cv2", ".", "VideoCapture", "(", "0", ")", "\n", "self", ".", "updateInput", ".", "emit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.loadVideoFile": [[216, 219], ["cv2.VideoCapture", "bts_live_3d.Window.updateInput.emit"], "methods", ["None"], ["", "def", "loadVideoFile", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "cv2", ".", "VideoCapture", "(", "'video.mp4'", ")", "\n", "self", ".", "updateInput", ".", "emit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.loadImage": [[220, 225], ["bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.np_to_qimage"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["", "def", "loadImage", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "None", "\n", "img", "=", "(", "self", ".", "glWidget", ".", "rgb", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "img", ")", ")", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.loadImageFile": [[226, 236], ["PySide2.QtGui.QImage().scaledToHeight", "img.copy.copy.copy", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "PySide2.QtWidgets.QFileDialog.getOpenFileName", "img.copy.copy.width", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.Window.tr", "PySide2.QtGui.QImage", "img.copy.copy.width"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["", "def", "loadImageFile", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "None", "\n", "filename", "=", "QtWidgets", ".", "QFileDialog", ".", "getOpenFileName", "(", "None", ",", "'Select image'", ",", "''", ",", "self", ".", "tr", "(", "'Image files (*.jpg *.png)'", ")", ")", "[", "0", "]", "\n", "img", "=", "QtGui", ".", "QImage", "(", "filename", ")", ".", "scaledToHeight", "(", "height_rgb", ")", "\n", "xstart", "=", "0", "\n", "if", "img", ".", "width", "(", ")", ">", "width_rgb", ":", "xstart", "=", "(", "img", ".", "width", "(", ")", "-", "width_rgb", ")", "//", "2", "\n", "img", "=", "img", ".", "copy", "(", "xstart", ",", "0", ",", "xstart", "+", "width_rgb", ",", "height_rgb", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "img", ")", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.update_input": [[237, 258], ["bts_live_3d.Window.capture.read", "cv2.remap", "cv2.cvtColor", "bts_live_3d.np_to_qimage", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "bts_live_3d.Window.capture.set", "bts_live_3d.Window.capture.read", "PySide2.QtGui.QPixmap.fromImage"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["", "def", "update_input", "(", "self", ")", ":", "\n", "# Don't update anymore if no capture device is set", "\n", "        ", "if", "self", ".", "capture", "==", "None", ":", "\n", "            ", "return", "\n", "\n", "# Capture a frame", "\n", "", "ret", ",", "frame", "=", "self", ".", "capture", ".", "read", "(", ")", "\n", "\n", "# Loop video playback if current stream is video file", "\n", "if", "not", "ret", ":", "\n", "            ", "self", ".", "capture", ".", "set", "(", "cv2", ".", "CAP_PROP_POS_FRAMES", ",", "0", ")", "\n", "ret", ",", "frame", "=", "self", ".", "capture", ".", "read", "(", ")", "\n", "\n", "# Prepare image and show in UI", "\n", "", "frame_ud", "=", "cv2", ".", "remap", "(", "frame", ",", "map1", ",", "map2", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "frame", "=", "cv2", ".", "cvtColor", "(", "frame_ud", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "image", "=", "np_to_qimage", "(", "frame", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "image", ")", ")", "\n", "\n", "# Update the point cloud", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.Window.updateCloud": [[259, 296], ["bts_live_3d.qimage_to_np", "bts_live_3d.Window.glWidget.updateRGBD", "bts_live_3d.Window.glWidget.updateGL", "PySide2.QtCore.QTimer.singleShot", "bts_live_3d.Window.inputViewer.pixmap().toImage", "rgb8[].astype", "numpy.expand_dims", "numpy.transpose", "numpy.zeros", "bts_live_3d.Window.outputViewer.setPixmap", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "bts_live_3d.Window.model", "depth_cropped[].cpu().squeeze", "PySide2.QtGui.QPixmap.fromImage", "numpy.zeros", "bts_live_3d.Window.inputViewer.pixmap", "bts_live_3d.np_to_qimage", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "depth_cropped[].cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "greys", "numpy.log10"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.qimage_to_np", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.updateRGBD", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["", "def", "updateCloud", "(", "self", ")", ":", "\n", "        ", "rgb8", "=", "qimage_to_np", "(", "self", ".", "inputViewer", ".", "pixmap", "(", ")", ".", "toImage", "(", ")", ")", "\n", "self", ".", "glWidget", ".", "rgb", "=", "(", "rgb8", "[", ":", ",", ":", ",", ":", "3", "]", "/", "255", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "if", "self", ".", "model", ":", "\n", "            ", "input_image", "=", "rgb8", "[", ":", ",", ":", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# Normalize image", "\n", "input_image", "[", ":", ",", ":", ",", "0", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "0", "]", "-", "123.68", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "1", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "1", "]", "-", "116.78", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "2", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "2", "]", "-", "103.94", ")", "*", "0.017", "\n", "\n", "input_image_cropped", "=", "input_image", "[", "32", ":", "-", "1", "-", "31", ",", "32", ":", "-", "1", "-", "31", ",", ":", "]", "\n", "\n", "input_images", "=", "np", ".", "expand_dims", "(", "input_image_cropped", ",", "axis", "=", "0", ")", "\n", "input_images", "=", "np", ".", "transpose", "(", "input_images", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "image", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "input_images", ")", ")", ".", "cuda", "(", ")", "\n", "focal", "=", "Variable", "(", "torch", ".", "tensor", "(", "[", "518.8579", "]", ")", ")", ".", "cuda", "(", ")", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_cropped", "=", "self", ".", "model", "(", "image", ",", "focal", ")", "\n", "\n", "", "depth", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth", "[", "32", ":", "-", "1", "-", "31", ",", "32", ":", "-", "1", "-", "31", "]", "=", "depth_cropped", "[", "0", "]", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", "/", "args", ".", "max_depth", "\n", "coloredDepth", "=", "(", "greys", "(", "np", ".", "log10", "(", "depth", "*", "args", ".", "max_depth", ")", ")", "[", ":", ",", ":", ",", ":", "3", "]", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "coloredDepth", ")", ")", ")", "\n", "self", ".", "glWidget", ".", "depth", "=", "depth", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "glWidget", ".", "depth", "=", "0.5", "+", "np", ".", "zeros", "(", "(", "height_rgb", "//", "2", ",", "width_rgb", "//", "2", ",", "1", ")", ")", "\n", "\n", "", "self", ".", "glWidget", ".", "updateRGBD", "(", ")", "\n", "self", ".", "glWidget", ".", "updateGL", "(", ")", "\n", "\n", "# Update to next frame if we are live", "\n", "QtCore", ".", "QTimer", ".", "singleShot", "(", "10", ",", "self", ".", "updateInput", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.__init__": [[299, 323], ["PySide2.QtOpenGL.QGLWidget.__init__", "PySide2.QtCore.QPoint", "PySide2.QtGui.QColor.fromCmykF", "PySide2.QtGui.QColor.fromCmykF", "bts_live_3d.GLWidget.worldCoords", "numpy.zeros", "numpy.zeros", "bts_live_3d.GLWidget.rgb.any", "bts_live_3d.GLWidget.detph.any", "bts_live_3d.GLWidget.updateRGBD"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.worldCoords", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.updateRGBD"], ["    ", "def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "QtOpenGL", ".", "QGLWidget", ".", "__init__", "(", "self", ",", "parent", ")", "\n", "\n", "self", ".", "object", "=", "0", "\n", "self", ".", "xRot", "=", "5040", "\n", "self", ".", "yRot", "=", "40", "\n", "self", ".", "zRot", "=", "0", "\n", "self", ".", "zoomLevel", "=", "9", "\n", "\n", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", ")", "\n", "\n", "self", ".", "green", "=", "QtGui", ".", "QColor", ".", "fromCmykF", "(", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ")", "\n", "self", ".", "black", "=", "QtGui", ".", "QColor", ".", "fromCmykF", "(", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ")", "\n", "\n", "# Precompute for world coordinates", "\n", "self", ".", "xx", ",", "self", ".", "yy", "=", "self", ".", "worldCoords", "(", "width", "=", "width_rgb", ",", "height", "=", "height_rgb", ")", "\n", "\n", "self", ".", "rgb", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "depth", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "col_vbo", "=", "None", "\n", "self", ".", "pos_vbo", "=", "None", "\n", "if", "self", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "detph", ".", "any", "(", ")", ":", "\n", "            ", "self", ".", "updateRGBD", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.xRotation": [[324, 326], ["None"], "methods", ["None"], ["", "", "def", "xRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "xRot", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.yRotation": [[327, 329], ["None"], "methods", ["None"], ["", "def", "yRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "yRot", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.zRotation": [[330, 332], ["None"], "methods", ["None"], ["", "def", "zRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "zRot", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.minimumSizeHint": [[333, 335], ["PySide2.QtCore.QSize"], "methods", ["None"], ["", "def", "minimumSizeHint", "(", "self", ")", ":", "\n", "        ", "return", "QtCore", ".", "QSize", "(", "640", ",", "480", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.sizeHint": [[336, 338], ["PySide2.QtCore.QSize"], "methods", ["None"], ["", "def", "sizeHint", "(", "self", ")", ":", "\n", "        ", "return", "QtCore", ".", "QSize", "(", "640", ",", "480", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.setXRotation": [[339, 344], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["", "def", "setXRotation", "(", "self", ",", "angle", ")", ":", "\n", "        ", "if", "angle", "!=", "self", ".", "xRot", ":", "\n", "            ", "self", ".", "xRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"xRotationChanged(int)\"", ")", ",", "angle", ")", "\n", "self", ".", "updateGL", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.setYRotation": [[345, 350], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["", "", "def", "setYRotation", "(", "self", ",", "angle", ")", ":", "\n", "        ", "if", "angle", "!=", "self", ".", "yRot", ":", "\n", "            ", "self", ".", "yRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"yRotationChanged(int)\"", ")", ",", "angle", ")", "\n", "self", ".", "updateGL", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.setZRotation": [[351, 356], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["", "", "def", "setZRotation", "(", "self", ",", "angle", ")", ":", "\n", "        ", "if", "angle", "!=", "self", ".", "zRot", ":", "\n", "            ", "self", ".", "zRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"zRotationChanged(int)\"", ")", ",", "angle", ")", "\n", "self", ".", "updateGL", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.resizeGL": [[357, 359], ["OpenGL.GL.glViewport"], "methods", ["None"], ["", "", "def", "resizeGL", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "        ", "GL", ".", "glViewport", "(", "0", ",", "0", ",", "width", ",", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.mousePressEvent": [[360, 362], ["PySide2.QtCore.QPoint", "event.pos"], "methods", ["None"], ["", "def", "mousePressEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", "event", ".", "pos", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.mouseMoveEvent": [[363, 375], ["PySide2.QtCore.QPoint", "event.y", "bts_live_3d.GLWidget.lastPos.y", "event.buttons", "bts_live_3d.GLWidget.setXRotation", "bts_live_3d.GLWidget.setYRotation", "event.pos", "event.x", "bts_live_3d.GLWidget.lastPos.x", "event.buttons", "bts_live_3d.GLWidget.setXRotation", "bts_live_3d.GLWidget.setZRotation"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setXRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setYRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setXRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setZRotation"], ["", "def", "mouseMoveEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "dx", "=", "-", "(", "event", ".", "x", "(", ")", "-", "self", ".", "lastPos", ".", "x", "(", ")", ")", "\n", "dy", "=", "(", "event", ".", "y", "(", ")", "-", "self", ".", "lastPos", ".", "y", "(", ")", ")", "\n", "\n", "if", "event", ".", "buttons", "(", ")", "&", "QtCore", ".", "Qt", ".", "LeftButton", ":", "\n", "            ", "self", ".", "setXRotation", "(", "self", ".", "xRot", "+", "dy", ")", "\n", "self", ".", "setYRotation", "(", "self", ".", "yRot", "+", "dx", ")", "\n", "", "elif", "event", ".", "buttons", "(", ")", "&", "QtCore", ".", "Qt", ".", "RightButton", ":", "\n", "            ", "self", ".", "setXRotation", "(", "self", ".", "xRot", "+", "dy", ")", "\n", "self", ".", "setZRotation", "(", "self", ".", "zRot", "+", "dx", ")", "\n", "\n", "", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", "event", ".", "pos", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.wheelEvent": [[376, 382], ["event.accept", "bts_live_3d.GLWidget.updateGL", "event.delta"], "methods", ["None"], ["", "def", "wheelEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "numDegrees", "=", "event", ".", "delta", "(", ")", "/", "8", "\n", "numSteps", "=", "numDegrees", "/", "15", "\n", "self", ".", "zoomLevel", "=", "self", ".", "zoomLevel", "+", "numSteps", "\n", "event", ".", "accept", "(", ")", "\n", "self", ".", "updateGL", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.initializeGL": [[383, 408], ["bts_live_3d.GLWidget.qglClearColor", "OpenGL.GL.glShadeModel", "OpenGL.GL.glEnable", "OpenGL.GL.glEnable", "OpenGL.GL.shaders.compileShader", "OpenGL.GL.shaders.compileShader", "OpenGL.GL.shaders.compileProgram", "OpenGL.GL.shaders.glUseProgram", "bts_live_3d.GLWidget.black.darker", "OpenGL.GL.glGetAttribLocation", "OpenGL.GL.glGetAttribLocation", "OpenGL.GL.glGetUniformLocation"], "methods", ["None"], ["", "def", "initializeGL", "(", "self", ")", ":", "\n", "        ", "self", ".", "qglClearColor", "(", "self", ".", "black", ".", "darker", "(", ")", ")", "\n", "GL", ".", "glShadeModel", "(", "GL", ".", "GL_FLAT", ")", "\n", "GL", ".", "glEnable", "(", "GL", ".", "GL_DEPTH_TEST", ")", "\n", "GL", ".", "glEnable", "(", "GL", ".", "GL_CULL_FACE", ")", "\n", "\n", "VERTEX_SHADER", "=", "shaders", ".", "compileShader", "(", "\"\"\"#version 330\n        layout(location = 0) in vec3 position;\n        layout(location = 1) in vec3 color;\n        uniform mat4 mvp; out vec4 frag_color;\n        void main() {gl_Position = mvp * vec4(position, 1.0);frag_color = vec4(color, 1.0);}\"\"\"", ",", "GL", ".", "GL_VERTEX_SHADER", ")", "\n", "\n", "FRAGMENT_SHADER", "=", "shaders", ".", "compileShader", "(", "\"\"\"#version 330\n        in vec4 frag_color; out vec4 out_color;\n        void main() {out_color = frag_color;}\"\"\"", ",", "GL", ".", "GL_FRAGMENT_SHADER", ")", "\n", "\n", "self", ".", "shaderProgram", "=", "shaders", ".", "compileProgram", "(", "VERTEX_SHADER", ",", "FRAGMENT_SHADER", ")", "\n", "\n", "self", ".", "UNIFORM_LOCATIONS", "=", "{", "\n", "'position'", ":", "GL", ".", "glGetAttribLocation", "(", "self", ".", "shaderProgram", ",", "'position'", ")", ",", "\n", "'color'", ":", "GL", ".", "glGetAttribLocation", "(", "self", ".", "shaderProgram", ",", "'color'", ")", ",", "\n", "'mvp'", ":", "GL", ".", "glGetUniformLocation", "(", "self", ".", "shaderProgram", ",", "'mvp'", ")", ",", "\n", "}", "\n", "\n", "shaders", ".", "glUseProgram", "(", "self", ".", "shaderProgram", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.paintGL": [[409, 413], ["bts_live_3d.GLWidget.rgb.any", "bts_live_3d.GLWidget.depth.any", "OpenGL.GL.glClear", "bts_live_3d.GLWidget.drawObject"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.drawObject"], ["", "def", "paintGL", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "depth", ".", "any", "(", ")", ":", "\n", "            ", "GL", ".", "glClear", "(", "GL", ".", "GL_COLOR_BUFFER_BIT", "|", "GL", ".", "GL_DEPTH_BUFFER_BIT", ")", "\n", "self", ".", "drawObject", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.worldCoords": [[414, 422], ["numpy.tile", "numpy.repeat", "range", "range"], "methods", ["None"], ["", "", "def", "worldCoords", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "        ", "cx", ",", "cy", "=", "width", "/", "2", ",", "height", "/", "2", "\n", "fx", "=", "518.8579", "\n", "fy", "=", "518.8579", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "range", "(", "width", ")", ",", "height", ")", ",", "np", ".", "repeat", "(", "range", "(", "height", ")", ",", "width", ")", "\n", "xx", "=", "(", "xx", "-", "cx", ")", "/", "fx", "\n", "yy", "=", "(", "yy", "-", "cy", ")", "/", "fy", "\n", "return", "xx", ",", "yy", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.posFromDepth": [[423, 430], ["depth.reshape", "numpy.dstack().reshape", "numpy.dstack", "bts_live_3d.edges"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.edges"], ["", "def", "posFromDepth", "(", "self", ",", "depth", ")", ":", "\n", "        ", "length", "=", "depth", ".", "shape", "[", "0", "]", "*", "depth", ".", "shape", "[", "1", "]", "\n", "\n", "depth", "[", "edges", "(", "depth", ")", ">", "0.3", "]", "=", "1e6", "# Hide depth edges", "\n", "z", "=", "depth", ".", "reshape", "(", "length", ")", "\n", "\n", "return", "np", ".", "dstack", "(", "(", "self", ".", "xx", "*", "z", ",", "self", ".", "yy", "*", "z", ",", "z", ")", ")", ".", "reshape", "(", "(", "length", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.createPointCloudVBOfromRGBD": [[431, 435], ["OpenGL.arrays.vbo.VBO", "OpenGL.arrays.vbo.VBO"], "methods", ["None"], ["", "def", "createPointCloudVBOfromRGBD", "(", "self", ")", ":", "\n", "# Create position and color VBOs", "\n", "        ", "self", ".", "pos_vbo", "=", "vbo", ".", "VBO", "(", "data", "=", "self", ".", "pos", ",", "usage", "=", "GL", ".", "GL_DYNAMIC_DRAW", ",", "target", "=", "GL", ".", "GL_ARRAY_BUFFER", ")", "\n", "self", ".", "col_vbo", "=", "vbo", ".", "VBO", "(", "data", "=", "self", ".", "col", ",", "usage", "=", "GL", ".", "GL_DYNAMIC_DRAW", ",", "target", "=", "GL", ".", "GL_ARRAY_BUFFER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.updateRGBD": [[436, 454], ["bts_live_3d.GLWidget.posFromDepth", "skimage.transform.resize().reshape", "bts_live_3d.GLWidget.astype", "skimage.transform.resize().reshape.reshape().astype", "bts_live_3d.GLWidget.depth.copy", "glm.vec3", "bts_live_3d.GLWidget.createPointCloudVBOfromRGBD", "skimage.transform.resize", "skimage.transform.resize().reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.posFromDepth", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.createPointCloudVBOfromRGBD"], ["", "def", "updateRGBD", "(", "self", ")", ":", "\n", "# RGBD dimensions", "\n", "        ", "width", ",", "height", "=", "self", ".", "depth", ".", "shape", "[", "1", "]", ",", "self", ".", "depth", ".", "shape", "[", "0", "]", "\n", "\n", "# Reshape", "\n", "points", "=", "self", ".", "posFromDepth", "(", "self", ".", "depth", ".", "copy", "(", ")", ")", "\n", "colors", "=", "resize", "(", "self", ".", "rgb", ",", "(", "height", ",", "width", ")", ")", ".", "reshape", "(", "(", "height", "*", "width", ",", "3", ")", ")", "\n", "\n", "# Flatten and convert to float32", "\n", "self", ".", "pos", "=", "points", ".", "astype", "(", "'float32'", ")", "\n", "self", ".", "col", "=", "colors", ".", "reshape", "(", "height", "*", "width", ",", "3", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "# Move center of scene", "\n", "self", ".", "pos", "=", "self", ".", "pos", "+", "glm", ".", "vec3", "(", "0", ",", "-", "0.06", ",", "-", "0.3", ")", "\n", "\n", "# Create VBOs", "\n", "if", "not", "self", ".", "col_vbo", ":", "\n", "            ", "self", ".", "createPointCloudVBOfromRGBD", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.GLWidget.drawObject": [[455, 485], ["glm.lookAt", "glm.rotate", "glm.rotate", "glm.rotate", "OpenGL.GL.glUniformMatrix4fv", "bts_live_3d.GLWidget.pos_vbo.set_array", "bts_live_3d.GLWidget.col_vbo.set_array", "OpenGL.GL.glPointSize", "bts_live_3d.GLWidget.pos_vbo.bind", "OpenGL.GL.glEnableVertexAttribArray", "OpenGL.GL.glVertexAttribPointer", "bts_live_3d.GLWidget.col_vbo.bind", "OpenGL.GL.glEnableVertexAttribArray", "OpenGL.GL.glVertexAttribPointer", "OpenGL.GL.glDrawArrays", "glm.mat4", "glm.mat4", "glm.perspective", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.value_ptr", "bts_live_3d.GLWidget.width", "bts_live_3d.GLWidget.height"], "methods", ["None"], ["", "", "def", "drawObject", "(", "self", ")", ":", "\n", "# Update camera", "\n", "        ", "model", ",", "view", ",", "proj", "=", "glm", ".", "mat4", "(", "1", ")", ",", "glm", ".", "mat4", "(", "1", ")", ",", "glm", ".", "perspective", "(", "45", ",", "self", ".", "width", "(", ")", "/", "self", ".", "height", "(", ")", ",", "0.01", ",", "100", ")", "\n", "center", ",", "up", ",", "eye", "=", "glm", ".", "vec3", "(", "0", ",", "-", "0.075", ",", "0", ")", ",", "glm", ".", "vec3", "(", "0", ",", "-", "1", ",", "0", ")", ",", "glm", ".", "vec3", "(", "0", ",", "0", ",", "-", "0.4", "*", "(", "self", ".", "zoomLevel", "/", "10", ")", ")", "\n", "view", "=", "glm", ".", "lookAt", "(", "eye", ",", "center", ",", "up", ")", "\n", "model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "xRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "1", ",", "0", ",", "0", ")", ")", "\n", "model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "yRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "0", ",", "1", ",", "0", ")", ")", "\n", "model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "zRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "0", ",", "0", ",", "1", ")", ")", "\n", "mvp", "=", "proj", "*", "view", "*", "model", "\n", "GL", ".", "glUniformMatrix4fv", "(", "self", ".", "UNIFORM_LOCATIONS", "[", "'mvp'", "]", ",", "1", ",", "False", ",", "glm", ".", "value_ptr", "(", "mvp", ")", ")", "\n", "\n", "# Update data", "\n", "self", ".", "pos_vbo", ".", "set_array", "(", "self", ".", "pos", ")", "\n", "self", ".", "col_vbo", ".", "set_array", "(", "self", ".", "col", ")", "\n", "\n", "# Point size", "\n", "GL", ".", "glPointSize", "(", "2", ")", "\n", "\n", "# Position", "\n", "self", ".", "pos_vbo", ".", "bind", "(", ")", "\n", "GL", ".", "glEnableVertexAttribArray", "(", "0", ")", "\n", "GL", ".", "glVertexAttribPointer", "(", "0", ",", "3", ",", "GL", ".", "GL_FLOAT", ",", "GL", ".", "GL_FALSE", ",", "0", ",", "None", ")", "\n", "\n", "# Color", "\n", "self", ".", "col_vbo", ".", "bind", "(", ")", "\n", "GL", ".", "glEnableVertexAttribArray", "(", "1", ")", "\n", "GL", ".", "glVertexAttribPointer", "(", "1", ",", "3", ",", "GL", ".", "GL_FLOAT", ",", "GL", ".", "GL_FALSE", ",", "0", ",", "None", ")", "\n", "\n", "# Draw", "\n", "GL", ".", "glDrawArrays", "(", "GL", ".", "GL_POINTS", ",", "0", ",", "self", ".", "pos", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.load_model": [[96, 107], ["BtsModel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.eval", "torch.nn.DataParallel.cuda"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval"], ["def", "load_model", "(", ")", ":", "\n", "    ", "args", ".", "mode", "=", "'test'", "\n", "model", "=", "BtsModel", "(", "params", "=", "args", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.tic": [[112, 115], ["time.time"], "function", ["None"], ["def", "tic", "(", ")", ":", "\n", "    ", "global", "ticTime", ";", "\n", "ticTime", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.toc": [[117, 119], ["print", "time.time"], "function", ["None"], ["", "def", "toc", "(", ")", ":", "\n", "    ", "print", "(", "'{0} seconds.'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "ticTime", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.np_to_qimage": [[122, 125], ["a.copy", "PySide2.QtGui.QImage().copy", "PySide2.QtGui.QImage"], "function", ["None"], ["", "def", "np_to_qimage", "(", "a", ")", ":", "\n", "    ", "im", "=", "a", ".", "copy", "(", ")", "\n", "return", "QtGui", ".", "QImage", "(", "im", ".", "data", ",", "im", ".", "shape", "[", "1", "]", ",", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "strides", "[", "0", "]", ",", "QtGui", ".", "QImage", ".", "Format_RGB888", ")", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.qimage_to_np": [[127, 130], ["img.convertToFormat.convertToFormat", "numpy.array().reshape", "img.convertToFormat.height", "img.convertToFormat.width", "numpy.array", "img.convertToFormat.constBits"], "function", ["None"], ["", "def", "qimage_to_np", "(", "img", ")", ":", "\n", "    ", "img", "=", "img", ".", "convertToFormat", "(", "QtGui", ".", "QImage", ".", "Format", ".", "Format_ARGB32", ")", "\n", "return", "np", ".", "array", "(", "img", ".", "constBits", "(", ")", ")", ".", "reshape", "(", "img", ".", "height", "(", ")", ",", "img", ".", "width", "(", ")", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_live_3d.edges": [[133, 137], ["scipy.ndimage.sobel", "scipy.ndimage.sobel", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "edges", "(", "d", ")", ":", "\n", "    ", "dx", "=", "ndimage", ".", "sobel", "(", "d", ",", "0", ")", "# horizontal derivative", "\n", "dy", "=", "ndimage", ".", "sobel", "(", "d", ",", "1", ")", "# vertical derivative", "\n", "return", "np", ".", "abs", "(", "dx", ")", "+", "np", ".", "abs", "(", "dy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible.__init__": [[26, 47], ["int", "len", "torch.get_world_size", "torch.get_world_size", "torch.get_rank", "torch.get_rank", "math.floor", "len", "torch.is_available", "torch.is_available", "RuntimeError", "torch.is_available", "torch.is_available", "RuntimeError", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "num_replicas", "=", "None", ",", "rank", "=", "None", ",", "shuffle", "=", "True", ")", ":", "\n", "        ", "if", "num_replicas", "is", "None", ":", "\n", "            ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "num_replicas", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "if", "rank", "is", "None", ":", "\n", "            ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "num_replicas", "=", "num_replicas", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "epoch", "=", "0", "\n", "num_samples", "=", "int", "(", "math", ".", "floor", "(", "len", "(", "self", ".", "dataset", ")", "*", "1.0", "/", "self", ".", "num_replicas", ")", ")", "\n", "rest", "=", "len", "(", "self", ".", "dataset", ")", "-", "num_samples", "*", "self", ".", "num_replicas", "\n", "if", "self", ".", "rank", "<", "rest", ":", "\n", "            ", "num_samples", "+=", "1", "\n", "", "self", ".", "num_samples", "=", "num_samples", "\n", "self", ".", "total_size", "=", "len", "(", "dataset", ")", "\n", "# self.total_size = self.num_samples * self.num_replicas", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible.__iter__": [[48, 67], ["torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator.manual_seed", "torch.Generator.manual_seed", "len", "iter", "torch.randperm().tolist", "torch.randperm().tolist", "torch.randperm().tolist", "torch.randperm().tolist", "list", "range", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "# deterministically shuffle based on epoch", "\n", "        ", "g", "=", "torch", ".", "Generator", "(", ")", "\n", "g", ".", "manual_seed", "(", "self", ".", "epoch", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "indices", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "dataset", ")", ",", "generator", "=", "g", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "indices", "=", "list", "(", "range", "(", "len", "(", "self", ".", "dataset", ")", ")", ")", "\n", "\n", "# add extra samples to make it evenly divisible", "\n", "# indices += indices[:(self.total_size - len(indices))]", "\n", "# assert len(indices) == self.total_size", "\n", "\n", "# subsample", "\n", "", "indices", "=", "indices", "[", "self", ".", "rank", ":", "self", ".", "total_size", ":", "self", ".", "num_replicas", "]", "\n", "self", ".", "num_samples", "=", "len", "(", "indices", ")", "\n", "# assert len(indices) == self.num_samples", "\n", "\n", "return", "iter", "(", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible.__len__": [[68, 70], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.distributed_sampler_no_evenly_divisible.DistributedSamplerNoEvenlyDivisible.set_epoch": [[71, 73], ["None"], "methods", ["None"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "epoch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.run_bts_eval_schedule.run_eval": [[22, 45], ["scheduler.scheduled_job", "print", "os.system", "print", "datetime.datetime.now", "datetime.datetime.now", "datetime.timedelta"], "function", ["None"], ["@", "scheduler", ".", "scheduled_job", "(", "'interval'", ",", "minutes", "=", "1", ",", "start_date", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "+", "datetime", ".", "timedelta", "(", "0", ",", "3", ")", ")", "\n", "def", "run_eval", "(", ")", ":", "\n", "    ", "command", "=", "'export CUDA_VISIBLE_DEVICES=0; '", "'/usr/bin/python '", "'bts_eval.py '", "'--encoder densenet161_bts '", "'--dataset kitti '", "'--data_path ../../dataset/kitti_dataset/ '", "'--gt_path ../../dataset/kitti_dataset/data_depth_annotated/ '", "'--filenames_file ../train_test_inputs/eigen_test_files_with_gt.txt '", "'--input_height 352 '", "'--input_width 1216 '", "'--garg_crop '", "'--max_depth 80 '", "'--max_depth_eval 80 '", "'--output_directory ./models/eval-eigen/ '", "'--model_name bts_eigen_v0_0_1 '", "'--checkpoint_path ./models/bts_eigen_v0_0_1/ '", "'--do_kb_crop '", "\n", "\n", "print", "(", "'Executing: %s'", "%", "command", ")", "\n", "os", ".", "system", "(", "command", ")", "\n", "print", "(", "'Finished: %s'", "%", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.average_gradients.average_gradients": [[18, 44], ["zip", "tensorflow.concat", "tensorflow.reduce_mean", "average_grads.append", "tensorflow.expand_dims", "grads.append"], "function", ["None"], ["def", "average_gradients", "(", "tower_grads", ")", ":", "\n", "\n", "    ", "average_grads", "=", "[", "]", "\n", "for", "grad_and_vars", "in", "zip", "(", "*", "tower_grads", ")", ":", "\n", "# Note that each grad_and_vars looks like the following:", "\n", "#   ((grad0_gpu0, var0_gpu0), ... , (grad0_gpuN, var0_gpuN))", "\n", "        ", "grads", "=", "[", "]", "\n", "for", "g", ",", "_", "in", "grad_and_vars", ":", "\n", "# Add 0 dimension to the gradients to represent the tower.", "\n", "            ", "expanded_g", "=", "tf", ".", "expand_dims", "(", "g", ",", "0", ")", "\n", "\n", "# Append on a 'tower' dimension which we will average over below.", "\n", "grads", ".", "append", "(", "expanded_g", ")", "\n", "\n", "# Average over the 'tower' dimension.", "\n", "", "grad", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "grads", ")", "\n", "grad", "=", "tf", ".", "reduce_mean", "(", "grad", ",", "0", ")", "\n", "\n", "# Keep in mind that the Variables are redundant because they are shared", "\n", "# across towers. So .. we will just return the first tower's pointer to", "\n", "# the Variable.", "\n", "v", "=", "grad_and_vars", "[", "0", "]", "[", "1", "]", "\n", "grad_and_var", "=", "(", "grad", ",", "v", ")", "\n", "average_grads", ".", "append", "(", "grad_and_var", ")", "\n", "\n", "", "return", "average_grads", "\n", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.convert_arg_line_to_args": [[32, 37], ["arg_line.split", "arg.strip"], "function", ["None"], ["\n", "import", "matplotlib", "\n", "import", "matplotlib", ".", "cm", "\n", "import", "threading", "\n", "from", "tqdm", "import", "tqdm", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.get_num_lines": [[88, 93], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["parser", ".", "add_argument", "(", "'--degree'", ",", "type", "=", "float", ",", "help", "=", "'random rotation maximum degree'", ",", "default", "=", "2.5", ")", "\n", "parser", ".", "add_argument", "(", "'--do_kb_crop'", ",", "help", "=", "'if set, crop input images as kitti benchmark images'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--use_right'", ",", "help", "=", "'if set, will randomly use right images when train on KITTI'", ",", "action", "=", "'store_true'", ")", "\n", "\n", "# Multi-gpu training", "\n", "parser", ".", "add_argument", "(", "'--num_threads'", ",", "type", "=", "int", ",", "help", "=", "'number of threads to use for data loading'", ",", "default", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.get_tensors_in_checkpoint_file": [[95, 108], ["tensorflow.python.pywrap_tensorflow.NewCheckpointReader", "pywrap_tensorflow.NewCheckpointReader.get_variable_to_shape_map", "sorted", "varlist.append", "var_value.append", "varlist.append", "var_value.append", "pywrap_tensorflow.NewCheckpointReader.get_tensor", "pywrap_tensorflow.NewCheckpointReader.get_tensor"], "function", ["None"], ["parser", ".", "add_argument", "(", "'--rank'", ",", "type", "=", "int", ",", "help", "=", "'node rank for distributed training'", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--dist_url'", ",", "type", "=", "str", ",", "help", "=", "'url used to set up distributed training'", ",", "default", "=", "'tcp://127.0.0.1:1234'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist_backend'", ",", "type", "=", "str", ",", "help", "=", "'distributed backend'", ",", "default", "=", "'nccl'", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "help", "=", "'GPU id to use.'", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--multiprocessing_distributed'", ",", "help", "=", "'Use multi-processing distributed training to launch '", "\n", "'N processes per node, which has N GPUs. This is the '", "\n", "'fastest way to use PyTorch for either single node or '", "\n", "'multi node data parallel training'", ",", "action", "=", "'store_true'", ",", ")", "\n", "# Online eval", "\n", "parser", ".", "add_argument", "(", "'--do_online_eval'", ",", "help", "=", "'if set, perform online eval in every eval_freq steps'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path_eval'", ",", "type", "=", "str", ",", "help", "=", "'path to the data for online evaluation'", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--gt_path_eval'", ",", "type", "=", "str", ",", "help", "=", "'path to the groundtruth data for online evaluation'", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--filenames_file_eval'", ",", "type", "=", "str", ",", "help", "=", "'path to the filenames text file for online evaluation'", ",", "required", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--min_depth_eval'", ",", "type", "=", "float", ",", "help", "=", "'minimum depth for evaluation'", ",", "default", "=", "1e-3", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.build_tensors_in_checkpoint_file": [[110, 124], ["list", "set", "enumerate", "tf.get_default_graph().get_tensor_by_name", "list.append", "set.add", "print", "tf.get_default_graph"], "function", ["None"], ["parser", ".", "add_argument", "(", "'--eigen_crop'", ",", "help", "=", "'if set, crops according to Eigen NIPS14'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--garg_crop'", ",", "help", "=", "'if set, crops according to Garg  ECCV16'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_freq'", ",", "type", "=", "int", ",", "help", "=", "'Online evaluation frequency in global steps'", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_summary_directory'", ",", "type", "=", "str", ",", "help", "=", "'output directory for eval summary,'", "\n", "'if empty outputs to checkpoint folder'", ",", "default", "=", "''", ")", "\n", "\n", "if", "sys", ".", "argv", ".", "__len__", "(", ")", "==", "2", ":", "\n", "    ", "arg_filename_with_prefix", "=", "'@'", "+", "sys", ".", "argv", "[", "1", "]", "\n", "args", "=", "parser", ".", "parse_args", "(", "[", "arg_filename_with_prefix", "]", ")", "\n", "", "else", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "", "if", "args", ".", "mode", "==", "'train'", "and", "not", "args", ".", "checkpoint_path", ":", "\n", "    ", "from", "bts", "import", "*", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.train": [[126, 277], ["tf.Graph().as_default", "tf.device", "tf.Variable", "bts_main.get_num_lines", "np.ceil().astype", "tf.train.polynomial_decay", "tf.train.AdamOptimizer", "print", "print", "bts_dataloader.BtsDataloader", "bts_dataloader.BtsDataloader.loader.make_initializable_iterator", "tf.summary.scalar", "tf.summary.scalar", "tf.summary.merge_all", "tf.ConfigProto", "tf.Session", "tf.summary.FileWriter", "tf.train.Saver", "tf.trainable_variables", "print", "tf.Session.run", "tf.Session.run", "tf.train.Coordinator", "tf.train.start_queue_runners", "tf.Variable.eval", "time.time", "range", "tf.train.Saver.save", "print", "print", "tf.variable_scope", "range", "tf.variable_scope", "np.array().prod", "tf.global_variables_initializer", "tf.local_variables_initializer", "bts_main.get_tensors_in_checkpoint_file", "bts_main.build_tensors_in_checkpoint_file", "tf.train.Saver", "tf.train.Saver.restore", "tf.train.Saver.restore", "tf.Session.run", "time.time", "tf.Session.run", "print", "datetime.datetime.now", "tf.Graph", "np.ceil", "print", "print", "tf.get_variable_scope", "tf.get_variable_scope", "tf.device", "average_gradients.average_gradients", "tf.train.AdamOptimizer.apply_gradients", "tf.reduce_mean", "tf.Variable.assign", "tf.Session.run", "time.time", "print", "print", "tf.Session.run", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.flush", "tf.train.Saver.save", "tf.device", "dataloader.loader.make_initializable_iterator.get_next", "BtsModel", "tower_losses.append", "tf.train.AdamOptimizer.compute_gradients", "tower_grads.append", "np.array", "print_string.format", "tf.trainable_variables", "variable.get_shape().as_list", "time.time", "args.encoder.replace", "variable.get_shape"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.get_tensors_in_checkpoint_file", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.build_tensors_in_checkpoint_file", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.average_gradients.average_gradients"], ["    ", "model_dir", "=", "os", ".", "path", ".", "dirname", "(", "args", ".", "checkpoint_path", ")", "\n", "model_name", "=", "os", ".", "path", ".", "basename", "(", "model_dir", ")", "\n", "import", "sys", "\n", "sys", ".", "path", ".", "append", "(", "model_dir", ")", "\n", "for", "key", ",", "val", "in", "vars", "(", "__import__", "(", "model_name", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "key", ".", "startswith", "(", "'__'", ")", "and", "key", ".", "endswith", "(", "'__'", ")", ":", "\n", "            ", "continue", "\n", "", "vars", "(", ")", "[", "key", "]", "=", "val", "\n", "\n", "\n", "", "", "inv_normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "-", "0.485", "/", "0.229", ",", "-", "0.456", "/", "0.224", ",", "-", "0.406", "/", "0.225", "]", ",", "\n", "std", "=", "[", "1", "/", "0.229", ",", "1", "/", "0.224", ",", "1", "/", "0.225", "]", "\n", ")", "\n", "\n", "eval_metrics", "=", "[", "'silog'", ",", "'abs_rel'", ",", "'log10'", ",", "'rms'", ",", "'sq_rel'", ",", "'log_rms'", ",", "'d1'", ",", "'d2'", ",", "'d3'", "]", "\n", "\n", "\n", "def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rms", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rms", "=", "np", ".", "sqrt", "(", "rms", ".", "mean", "(", ")", ")", "\n", "\n", "log_rms", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "log_rms", "=", "np", ".", "sqrt", "(", "log_rms", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "err", "=", "np", ".", "log", "(", "pred", ")", "-", "np", ".", "log", "(", "gt", ")", "\n", "silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "[", "silog", ",", "abs_rel", ",", "log10", ",", "rms", ",", "sq_rel", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "]", "\n", "\n", "\n", "", "def", "block_print", "(", ")", ":", "\n", "    ", "sys", ".", "stdout", "=", "open", "(", "os", ".", "devnull", ",", "'w'", ")", "\n", "\n", "\n", "", "def", "enable_print", "(", ")", ":", "\n", "    ", "sys", ".", "stdout", "=", "sys", ".", "__stdout__", "\n", "\n", "\n", "", "def", "get_num_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n", "\n", "", "def", "colorize", "(", "value", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ",", "cmap", "=", "'Greys'", ")", ":", "\n", "    ", "value", "=", "value", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", ":", "]", "\n", "value", "=", "np", ".", "log10", "(", "value", ")", "\n", "\n", "vmin", "=", "value", ".", "min", "(", ")", "if", "vmin", "is", "None", "else", "vmin", "\n", "vmax", "=", "value", ".", "max", "(", ")", "if", "vmax", "is", "None", "else", "vmax", "\n", "\n", "if", "vmin", "!=", "vmax", ":", "\n", "        ", "value", "=", "(", "value", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", "\n", "", "else", ":", "\n", "        ", "value", "=", "value", "*", "0.", "\n", "\n", "", "cmapper", "=", "matplotlib", ".", "cm", ".", "get_cmap", "(", "cmap", ")", "\n", "value", "=", "cmapper", "(", "value", ",", "bytes", "=", "True", ")", "\n", "\n", "img", "=", "value", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "\n", "return", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "\n", "", "def", "normalize_result", "(", "value", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ")", ":", "\n", "    ", "value", "=", "value", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", ",", ":", ",", ":", "]", "\n", "\n", "vmin", "=", "value", ".", "min", "(", ")", "if", "vmin", "is", "None", "else", "vmin", "\n", "vmax", "=", "value", ".", "max", "(", ")", "if", "vmax", "is", "None", "else", "vmax", "\n", "\n", "if", "vmin", "!=", "vmax", ":", "\n", "        ", "value", "=", "(", "value", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", "\n", "", "else", ":", "\n", "        ", "value", "=", "value", "*", "0.", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "value", ",", "0", ")", "\n", "\n", "\n", "", "def", "set_misc", "(", "model", ")", ":", "\n", "    ", "if", "args", ".", "bn_no_track_stats", ":", "\n", "        ", "print", "(", "\"Disabling tracking running stats in batch norm layers\"", ")", "\n", "model", ".", "apply", "(", "bn_init_as_tf", ")", "\n", "\n", "", "if", "args", ".", "fix_first_conv_blocks", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'base_model.layer1.0'", ",", "'base_model.layer1.1'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'denseblock1.denselayer1'", ",", "'denseblock1.denselayer2'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first two conv blocks\"", ")", "\n", "", "elif", "args", ".", "fix_first_conv_block", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'base_model.layer1.0'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'denseblock1.denselayer1'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first conv block\"", ")", "\n", "", "else", ":", "\n", "        ", "if", "'resne'", "in", "args", ".", "encoder", ":", "\n", "            ", "fixing_layers", "=", "[", "'base_model.conv1'", ",", "'.bn'", "]", "\n", "", "else", ":", "\n", "            ", "fixing_layers", "=", "[", "'conv0'", ",", "'norm'", "]", "\n", "", "print", "(", "\"Fixing first conv layer\"", ")", "\n", "\n", "", "for", "name", ",", "child", "in", "model", ".", "named_children", "(", ")", ":", "\n", "        ", "if", "not", "'encoder'", "in", "name", ":", "\n", "            ", "continue", "\n", "", "for", "name2", ",", "parameters", "in", "child", ".", "named_parameters", "(", ")", ":", "\n", "# print(name, name2)", "\n", "            ", "if", "any", "(", "x", "in", "name2", "for", "x", "in", "fixing_layers", ")", ":", "\n", "                ", "parameters", ".", "requires_grad", "=", "False", "\n", "\n", "\n", "", "", "", "", "def", "online_eval", "(", "model", ",", "dataloader_eval", ",", "gpu", ",", "ngpus", ")", ":", "\n", "    ", "eval_measures", "=", "torch", ".", "zeros", "(", "10", ")", ".", "cuda", "(", "device", "=", "gpu", ")", "\n", "for", "_", ",", "eval_sample_batched", "in", "enumerate", "(", "tqdm", "(", "dataloader_eval", ".", "data", ")", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "image", "=", "torch", ".", "autograd", ".", "Variable", "(", "eval_sample_batched", "[", "'image'", "]", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "focal", "=", "torch", ".", "autograd", ".", "Variable", "(", "eval_sample_batched", "[", "'focal'", "]", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "gt_depth", "=", "eval_sample_batched", "[", "'depth'", "]", "\n", "has_valid_depth", "=", "eval_sample_batched", "[", "'has_valid_depth'", "]", "\n", "if", "not", "has_valid_depth", ":", "\n", "# print('Invalid depth. continue.')", "\n", "                ", "continue", "\n", "\n", "", "_", ",", "_", ",", "_", ",", "_", ",", "pred_depth", "=", "model", "(", "image", ",", "focal", ")", "\n", "\n", "pred_depth", "=", "pred_depth", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "gt_depth", "=", "gt_depth", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "pred_depth_uncropped", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_depth_uncropped", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "=", "pred_depth", "\n", "pred_depth", "=", "pred_depth_uncropped", "\n", "\n", "", "pred_depth", "[", "pred_depth", "<", "args", ".", "min_depth_eval", "]", "=", "args", ".", "min_depth_eval", "\n", "pred_depth", "[", "pred_depth", ">", "args", ".", "max_depth_eval", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.main": [[279, 325], ["bts_parameters", "os.system", "os.system", "os.system", "os.system", "bts_main.train", "os.system", "os.path.dirname", "os.path.basename", "os.system", "print"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_main.train"], ["\n", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                    ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "measures", "=", "compute_errors", "(", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "eval_measures", "[", ":", "9", "]", "+=", "torch", ".", "tensor", "(", "measures", ")", ".", "cuda", "(", "device", "=", "gpu", ")", "\n", "eval_measures", "[", "9", "]", "+=", "1", "\n", "\n", "", "if", "args", ".", "multiprocessing_distributed", ":", "\n", "        ", "group", "=", "dist", ".", "new_group", "(", "[", "i", "for", "i", "in", "range", "(", "ngpus", ")", "]", ")", "\n", "dist", ".", "all_reduce", "(", "tensor", "=", "eval_measures", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ",", "group", "=", "group", ")", "\n", "\n", "", "if", "not", "args", ".", "multiprocessing_distributed", "or", "gpu", "==", "0", ":", "\n", "        ", "eval_measures_cpu", "=", "eval_measures", ".", "cpu", "(", ")", "\n", "cnt", "=", "eval_measures_cpu", "[", "9", "]", ".", "item", "(", ")", "\n", "eval_measures_cpu", "/=", "cnt", "\n", "print", "(", "'Computing errors for {} eval samples'", ".", "format", "(", "int", "(", "cnt", ")", ")", ")", "\n", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "'silog'", ",", "'abs_rel'", ",", "'log10'", ",", "'rms'", ",", "\n", "'sq_rel'", ",", "'log_rms'", ",", "'d1'", ",", "'d2'", ",", "\n", "'d3'", ")", ")", "\n", "for", "i", "in", "range", "(", "8", ")", ":", "\n", "            ", "print", "(", "'{:7.3f}, '", ".", "format", "(", "eval_measures_cpu", "[", "i", "]", ")", ",", "end", "=", "''", ")", "\n", "", "print", "(", "'{:7.3f}'", ".", "format", "(", "eval_measures_cpu", "[", "8", "]", ")", ")", "\n", "return", "eval_measures_cpu", "\n", "\n", "", "return", "None", "\n", "\n", "\n", "", "def", "main_worker", "(", "gpu", ",", "ngpus_per_node", ",", "args", ")", ":", "\n", "    ", "args", ".", "gpu", "=", "gpu", "\n", "\n", "if", "args", ".", "gpu", "is", "not", "None", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_test.convert_arg_line_to_args": [[35, 40], ["arg_line.split", "arg.strip"], "function", ["None"], ["from", "bts_dataloader", "import", "*", "\n", "\n", "\n", "def", "convert_arg_line_to_args", "(", "arg_line", ")", ":", "\n", "    ", "for", "arg", "in", "arg_line", ".", "split", "(", ")", ":", "\n", "        ", "if", "not", "arg", ".", "strip", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_test.get_num_lines": [[72, 77], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["    ", "if", "key", ".", "startswith", "(", "'__'", ")", "and", "key", ".", "endswith", "(", "'__'", ")", ":", "\n", "        ", "continue", "\n", "", "vars", "(", ")", "[", "key", "]", "=", "val", "\n", "\n", "\n", "", "def", "get_num_lines", "(", "file_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_test.test": [[79, 208], ["bts_dataloader.BtsDataloader", "bts_dataloader.BtsDataloader.loader.make_initializable_iterator", "dataloader.loader.make_initializable_iterator.get_next", "BtsModel", "tensorflow.ConfigProto", "tensorflow.Session", "tf.Session.run", "tf.Session.run", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "tensorflow.device", "tf.train.Saver.restore", "bts_test.get_num_lines", "print", "tf.Session.run", "time.time", "print", "tqdm", "print", "print", "tqdm", "open", "f.readlines", "range", "tf.Session.run", "pred_depths.append", "pred_8x8s.append", "pred_4x4s.append", "pred_2x2s.append", "os.path.exists", "range", "os.path.join", "cv2.imread", "pred_depth_scaled.astype.astype", "cv2.imwrite", "depth[].squeeze", "pred_8x8[].squeeze", "pred_4x4[].squeeze", "pred_2x2[].squeeze", "os.path.dirname", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.path.join", "numpy.amax", "cv2.imwrite", "lines[].split", "[].replace", "[].replace", "lines[].split", "cv2.imread().astype", "matplotlib.imsave", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "filename_cmap_png.replace", "matplotlib.imsave", "[].split", "[].replace", "[].replace", "[].split", "[].replace", "[].replace", "[].replace", "lines[].split", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "[].split", "[].split", "cv2.imread", "[].split", "[].split", "lines[].split", "[].split", "[].split", "lines[].split", "[].split", "[].split", "[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines"], ["lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n", "\n", "", "def", "test", "(", "params", ")", ":", "\n", "    ", "\"\"\"Test function.\"\"\"", "\n", "args", ".", "mode", "=", "'test'", "\n", "dataloader", "=", "BtsDataLoader", "(", "args", ",", "'test'", ")", "\n", "\n", "model", "=", "BtsModel", "(", "params", "=", "args", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "num_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "print", "(", "\"Total number of parameters: {}\"", ".", "format", "(", "num_params", ")", ")", "\n", "\n", "num_test_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "\n", "with", "open", "(", "args", ".", "filenames_file", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "print", "(", "'now testing {} files with {}'", ".", "format", "(", "num_test_samples", ",", "args", ".", "checkpoint_path", ")", ")", "\n", "\n", "pred_depths", "=", "[", "]", "\n", "pred_8x8s", "=", "[", "]", "\n", "pred_4x4s", "=", "[", "]", "\n", "pred_2x2s", "=", "[", "]", "\n", "pred_1x1s", "=", "[", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "_", ",", "sample", "in", "enumerate", "(", "tqdm", "(", "dataloader", ".", "data", ")", ")", ":", "\n", "            ", "image", "=", "Variable", "(", "sample", "[", "'image'", "]", ".", "cuda", "(", ")", ")", "\n", "focal", "=", "Variable", "(", "sample", "[", "'focal'", "]", ".", "cuda", "(", ")", ")", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_est", "=", "model", "(", "image", ",", "focal", ")", "\n", "pred_depths", ".", "append", "(", "depth_est", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_8x8s", ".", "append", "(", "lpg8x8", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_4x4s", ".", "append", "(", "lpg4x4", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_2x2s", ".", "append", "(", "lpg2x2", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "pred_1x1s", ".", "append", "(", "reduc1x1", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "\n", "", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "'Elapesed time: %s'", "%", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n", "save_name", "=", "'result_'", "+", "args", ".", "model_name", "\n", "\n", "print", "(", "'Saving result pngs..'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "save_name", ")", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_name", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/raw'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/cmap'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/rgb'", ")", "\n", "os", ".", "mkdir", "(", "save_name", "+", "'/gt'", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "\n", "", "", "", "for", "s", "in", "tqdm", "(", "range", "(", "num_test_samples", ")", ")", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "            ", "date_drive", "=", "lines", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", "\n", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "\n", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "date_drive", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "", "elif", "args", ".", "dataset", "==", "'kitti_benchmark'", ":", "\n", "            ", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "scene_name", "=", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "0", "]", "\n", "filename_pred_png", "=", "save_name", "+", "'/raw/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_cmap_png", "=", "save_name", "+", "'/cmap/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_gt_png", "=", "save_name", "+", "'/gt/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ".", "replace", "(", "\n", "'.jpg'", ",", "'.png'", ")", "\n", "filename_image_png", "=", "save_name", "+", "'/rgb/'", "+", "scene_name", "+", "'_'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", "\n", "\n", "", "rgb_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'./'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "rgb_path", ")", "\n", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "            ", "gt_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'./'", "+", "lines", "[", "s", "]", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "gt", "=", "cv2", ".", "imread", "(", "gt_path", ",", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "# Visualization purpose only", "\n", "gt", "[", "gt", "==", "0", "]", "=", "np", ".", "amax", "(", "gt", ")", "\n", "\n", "", "pred_depth", "=", "pred_depths", "[", "s", "]", "\n", "pred_8x8", "=", "pred_8x8s", "[", "s", "]", "\n", "pred_4x4", "=", "pred_4x4s", "[", "s", "]", "\n", "pred_2x2", "=", "pred_2x2s", "[", "s", "]", "\n", "pred_1x1", "=", "pred_1x1s", "[", "s", "]", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", "or", "args", ".", "dataset", "==", "'kitti_benchmark'", ":", "\n", "            ", "pred_depth_scaled", "=", "pred_depth", "*", "256.0", "\n", "", "else", ":", "\n", "            ", "pred_depth_scaled", "=", "pred_depth", "*", "1000.0", "\n", "\n", "", "pred_depth_scaled", "=", "pred_depth_scaled", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "cv2", ".", "imwrite", "(", "filename_pred_png", ",", "pred_depth_scaled", ",", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "0", "]", ")", "\n", "\n", "if", "args", ".", "save_lpg", ":", "\n", "            ", "cv2", ".", "imwrite", "(", "filename_image_png", ",", "image", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", ",", ":", "]", ")", "\n", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "plt", ".", "imsave", "(", "filename_gt_png", ",", "np", ".", "log10", "(", "gt", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_depth_cropped", "=", "pred_depth", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "plt", ".", "imsave", "(", "filename_cmap_png", ",", "np", ".", "log10", "(", "pred_depth_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_8x8_cropped", "=", "pred_8x8", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_8x8.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_8x8_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_4x4_cropped", "=", "pred_4x4", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_4x4.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_4x4_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_2x2_cropped", "=", "pred_2x2", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_2x2.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_2x2_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "pred_1x1_cropped", "=", "pred_1x1", "[", "10", ":", "-", "1", "-", "9", ",", "10", ":", "-", "1", "-", "9", "]", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_1x1.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_1x1_cropped", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "", "else", ":", "\n", "                ", "plt", ".", "imsave", "(", "filename_cmap_png", ",", "np", ".", "log10", "(", "pred_depth", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_8x8.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_8x8", ")", ",", "cmap", "=", "'Greys'", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_test.main": [[210, 224], ["bts_parameters", "bts_test.test"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.test"], ["plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_4x4", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_2x2.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_2x2", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "filename_lpg_cmap_png", "=", "filename_cmap_png", ".", "replace", "(", "'.png'", ",", "'_1x1.png'", ")", "\n", "plt", ".", "imsave", "(", "filename_lpg_cmap_png", ",", "np", ".", "log10", "(", "pred_1x1", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "", "", "", "return", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "test", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.__init__": [[25, 58], ["open", "f.readlines", "int", "tensorflow.data.Dataset.from_tensor_slices", "bts_dataloader.BtsDataloader.loader.apply", "bts_dataloader.BtsDataloader.loader.map", "bts_dataloader.BtsDataloader.loader.map", "bts_dataloader.BtsDataloader.loader.batch", "bts_dataloader.BtsDataloader.loader.prefetch", "tensorflow.data.Dataset.from_tensor_slices", "bts_dataloader.BtsDataloader.loader.map", "bts_dataloader.BtsDataloader.loader.map", "bts_dataloader.BtsDataloader.loader.batch", "bts_dataloader.BtsDataloader.loader.prefetch", "tensorflow.contrib.data.shuffle_and_repeat", "len"], "methods", ["None"], ["\n", "from", "distributed_sampler_no_evenly_divisible", "import", "*", "\n", "\n", "\n", "def", "_is_pil_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", "\n", "\n", "\n", "", "def", "_is_numpy_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", "and", "(", "img", ".", "ndim", "in", "{", "2", ",", "3", "}", ")", "\n", "\n", "\n", "", "def", "preprocessing_transforms", "(", "mode", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "ToTensor", "(", "mode", "=", "mode", ")", "\n", "]", ")", "\n", "\n", "\n", "", "class", "BtsDataLoader", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "training_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "                ", "self", ".", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "self", ".", "training_samples", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_sampler", "=", "None", "\n", "\n", "", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "training_samples", ",", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "(", "self", ".", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "args", ".", "num_threads", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "self", ".", "train_sampler", ")", "\n", "\n", "", "elif", "mode", "==", "'online_eval'", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.parse_function_test": [[59, 79], ["tensorflow.string_join", "tensorflow.image.convert_image_dtype", "tensorflow.string_to_number", "tensorflow.string_split", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_png", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.read_file", "tensorflow.read_file", "tensorflow.shape", "tensorflow.shape"], "methods", ["None"], ["            ", "self", ".", "testing_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "# self.eval_sampler = torch.utils.data.distributed.DistributedSampler(self.testing_samples, shuffle=False)", "\n", "                ", "self", ".", "eval_sampler", "=", "DistributedSamplerNoEvenlyDivisible", "(", "self", ".", "testing_samples", ",", "shuffle", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "eval_sampler", "=", "None", "\n", "", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "testing_samples", ",", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "1", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "self", ".", "eval_sampler", ")", "\n", "\n", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "self", ".", "testing_samples", "=", "DataLoadPreprocess", "(", "args", ",", "mode", ",", "transform", "=", "preprocessing_transforms", "(", "mode", ")", ")", "\n", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "testing_samples", ",", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "'mode should be one of \\'train, test, online_eval\\'. Got {}'", ".", "format", "(", "mode", ")", ")", "\n", "\n", "\n", "", "", "", "class", "DataLoadPreprocess", "(", "Dataset", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.test_preprocess": [[80, 91], ["bts_dataloader.BtsDataloader.set_shape", "bts_dataloader.BtsDataloader.mean_image_subtraction"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.mean_image_subtraction"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "mode", ",", "transform", "=", "None", ",", "is_for_online_eval", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "if", "mode", "==", "'online_eval'", ":", "\n", "            ", "with", "open", "(", "args", ".", "filenames_file_eval", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "filenames", "=", "f", ".", "readlines", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "open", "(", "args", ".", "filenames_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "filenames", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "", "self", ".", "mode", "=", "mode", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "to_tensor", "=", "ToTensor", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.parse_function_train": [[92, 135], ["tensorflow.string_join", "tensorflow.string_join", "tensorflow.image.decode_png", "tensorflow.image.convert_image_dtype", "tensorflow.string_to_number", "print", "bts_dataloader.BtsDataloader.random_crop_fixed_size", "tensorflow.string_split", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_png", "tensorflow.read_file", "print", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.random_uniform", "tensorflow.contrib.image.rotate", "tensorflow.contrib.image.rotate", "tensorflow.string_strip", "tensorflow.read_file", "tensorflow.read_file", "tensorflow.cast", "tensorflow.cast", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.random_crop_fixed_size"], ["self", ".", "is_for_online_eval", "=", "is_for_online_eval", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "sample_path", "=", "self", ".", "filenames", "[", "idx", "]", "\n", "focal", "=", "float", "(", "sample_path", ".", "split", "(", ")", "[", "2", "]", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "self", ".", "args", ".", "dataset", "==", "'kitti'", "and", "self", ".", "args", ".", "use_right", "is", "True", "and", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "3", "]", ")", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "4", "]", ")", "\n", "", "else", ":", "\n", "                ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "\n", "", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "depth_gt", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "\n", "if", "self", ".", "args", ".", "do_kb_crop", "is", "True", ":", "\n", "                ", "height", "=", "image", ".", "height", "\n", "width", "=", "image", ".", "width", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "depth_gt", "=", "depth_gt", ".", "crop", "(", "(", "left_margin", ",", "top_margin", ",", "left_margin", "+", "1216", ",", "top_margin", "+", "352", ")", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "left_margin", ",", "top_margin", ",", "left_margin", "+", "1216", ",", "top_margin", "+", "352", ")", ")", "\n", "\n", "# To avoid blank boundaries due to pixel registration", "\n", "", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "depth_gt", "=", "depth_gt", ".", "crop", "(", "(", "43", ",", "45", ",", "608", ",", "472", ")", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "43", ",", "45", ",", "608", ",", "472", ")", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "do_random_rotate", "is", "True", ":", "\n", "                ", "random_angle", "=", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "2", "*", "self", ".", "args", ".", "degree", "\n", "image", "=", "self", ".", "rotate_image", "(", "image", ",", "random_angle", ")", "\n", "depth_gt", "=", "self", ".", "rotate_image", "(", "depth_gt", ",", "random_angle", ",", "flag", "=", "Image", ".", "NEAREST", ")", "\n", "\n", "", "image", "=", "np", ".", "asarray", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "depth_gt", "=", "np", ".", "asarray", "(", "depth_gt", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth_gt", "=", "np", ".", "expand_dims", "(", "depth_gt", ",", "axis", "=", "2", ")", "\n", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                ", "depth_gt", "=", "depth_gt", "/", "1000.0", "\n", "", "else", ":", "\n", "                ", "depth_gt", "=", "depth_gt", "/", "256.0", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.train_preprocess": [[136, 156], ["tensorflow.random_uniform", "tensorflow.cond", "tensorflow.cond", "tensorflow.random_uniform", "tensorflow.cond", "bts_dataloader.BtsDataloader.set_shape", "tensorflow.cond.set_shape", "bts_dataloader.BtsDataloader.mean_image_subtraction", "tensorflow.image.flip_left_right", "tensorflow.image.flip_left_right", "bts_dataloader.BtsDataloader.augment_image"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.mean_image_subtraction", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.augment_image"], ["", "image", ",", "depth_gt", "=", "self", ".", "random_crop", "(", "image", ",", "depth_gt", ",", "self", ".", "args", ".", "input_height", ",", "self", ".", "args", ".", "input_width", ")", "\n", "image", ",", "depth_gt", "=", "self", ".", "train_preprocess", "(", "image", ",", "depth_gt", ")", "\n", "sample", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth_gt", ",", "'focal'", ":", "focal", "}", "\n", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "data_path", "=", "self", ".", "args", ".", "data_path_eval", "\n", "", "else", ":", "\n", "                ", "data_path", "=", "self", ".", "args", ".", "data_path", "\n", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "image", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "image_path", ")", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "\n", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "gt_path", "=", "self", ".", "args", ".", "gt_path_eval", "\n", "depth_path", "=", "os", ".", "path", ".", "join", "(", "gt_path", ",", "\"./\"", "+", "sample_path", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "has_valid_depth", "=", "False", "\n", "try", ":", "\n", "                    ", "depth_gt", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "has_valid_depth", "=", "True", "\n", "", "except", "IOError", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.random_crop_fixed_size": [[157, 165], ["tensorflow.concat", "tensorflow.random_crop", "tensorflow.expand_dims"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.pytorch.bts_dataloader.DataLoadPreprocess.random_crop"], ["                    ", "depth_gt", "=", "False", "\n", "# print('Missing gt for {}'.format(image_path))", "\n", "\n", "", "if", "has_valid_depth", ":", "\n", "                    ", "depth_gt", "=", "np", ".", "asarray", "(", "depth_gt", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth_gt", "=", "np", ".", "expand_dims", "(", "depth_gt", ",", "axis", "=", "2", ")", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                        ", "depth_gt", "=", "depth_gt", "/", "1000.0", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.augment_image": [[166, 191], ["tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.ones", "tensorflow.stack", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.shape", "tensorflow.shape", "range"], "methods", ["None"], ["                        ", "depth_gt", "=", "depth_gt", "/", "256.0", "\n", "\n", "", "", "", "if", "self", ".", "args", ".", "do_kb_crop", "is", "True", ":", "\n", "                ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "image", "=", "image", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", ",", ":", "]", "\n", "if", "self", ".", "mode", "==", "'online_eval'", "and", "has_valid_depth", ":", "\n", "                    ", "depth_gt", "=", "depth_gt", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", ",", ":", "]", "\n", "\n", "", "", "if", "self", ".", "mode", "==", "'online_eval'", ":", "\n", "                ", "sample", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth_gt", ",", "'focal'", ":", "focal", ",", "'has_valid_depth'", ":", "has_valid_depth", "}", "\n", "", "else", ":", "\n", "                ", "sample", "=", "{", "'image'", ":", "image", ",", "'focal'", ":", "focal", "}", "\n", "\n", "", "", "if", "self", ".", "transform", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", "\n", "\n", "", "def", "rotate_image", "(", "self", ",", "image", ",", "angle", ",", "flag", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "result", "=", "image", ".", "rotate", "(", "angle", ",", "resample", "=", "flag", ")", "\n", "return", "result", "\n", "\n", "", "def", "random_crop", "(", "self", ",", "img", ",", "depth", ",", "height", ",", "width", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_dataloader.BtsDataloader.mean_image_subtraction": [[192, 220], ["tensorflow.split", "range", "tensorflow.concat", "ValueError", "image.get_shape().as_list", "len", "ValueError", "image.get_shape", "image.get_shape"], "methods", ["None"], ["        ", "assert", "img", ".", "shape", "[", "0", "]", ">=", "height", "\n", "assert", "img", ".", "shape", "[", "1", "]", ">=", "width", "\n", "assert", "img", ".", "shape", "[", "0", "]", "==", "depth", ".", "shape", "[", "0", "]", "\n", "assert", "img", ".", "shape", "[", "1", "]", "==", "depth", ".", "shape", "[", "1", "]", "\n", "x", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "width", ")", "\n", "y", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "height", ")", "\n", "img", "=", "img", "[", "y", ":", "y", "+", "height", ",", "x", ":", "x", "+", "width", ",", ":", "]", "\n", "depth", "=", "depth", "[", "y", ":", "y", "+", "height", ",", "x", ":", "x", "+", "width", ",", ":", "]", "\n", "return", "img", ",", "depth", "\n", "\n", "", "def", "train_preprocess", "(", "self", ",", "image", ",", "depth_gt", ")", ":", "\n", "# Random flipping", "\n", "        ", "do_flip", "=", "random", ".", "random", "(", ")", "\n", "if", "do_flip", ">", "0.5", ":", "\n", "            ", "image", "=", "(", "image", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", ")", ".", "copy", "(", ")", "\n", "depth_gt", "=", "(", "depth_gt", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", ")", ".", "copy", "(", ")", "\n", "\n", "# Random gamma, brightness, color augmentation", "\n", "", "do_augment", "=", "random", ".", "random", "(", ")", "\n", "if", "do_augment", ">", "0.5", ":", "\n", "            ", "image", "=", "self", ".", "augment_image", "(", "image", ")", "\n", "\n", "", "return", "image", ",", "depth_gt", "\n", "\n", "", "def", "augment_image", "(", "self", ",", "image", ")", ":", "\n", "# gamma augmentation", "\n", "        ", "gamma", "=", "random", ".", "uniform", "(", "0.9", ",", "1.1", ")", "\n", "image_aug", "=", "image", "**", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.NoOpScope.__enter__": [[61, 63], ["None"], "methods", ["None"], ["def", "__enter__", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.NoOpScope.__exit__": [[64, 66], ["None"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.bottleneck": [[68, 126], ["tensorflow.variable_scope", "slim.utils.last_dimension", "slim.conv2d", "resnet_utils.conv2d_same", "slim.conv2d", "slim.utils.collect_named_outputs", "inputs.get_shape", "resnet_utils.subsample", "slim.conv2d", "tensorflow.clip_by_value", "tensorflow.nn.relu6", "tensorflow.nn.relu"], "function", ["None"], ["", "", "@", "slim", ".", "add_arg_scope", "\n", "def", "bottleneck", "(", "inputs", ",", "\n", "depth", ",", "\n", "depth_bottleneck", ",", "\n", "stride", ",", "\n", "rate", "=", "1", ",", "\n", "outputs_collections", "=", "None", ",", "\n", "scope", "=", "None", ",", "\n", "use_bounded_activations", "=", "False", ")", ":", "\n", "    ", "\"\"\"Bottleneck residual unit variant with BN after convolutions.\n    This is the original residual unit proposed in [1]. See Fig. 1(a) of [2] for\n    its definition. Note that we use here the bottleneck variant which has an\n    extra bottleneck layer.\n    When putting together two consecutive ResNet blocks that use this unit, one\n    should use stride = 2 in the last unit of the first block.\n    Args:\n      inputs: A tensor of size [batch, height, width, channels].\n      depth: The depth of the ResNet unit output.\n      depth_bottleneck: The depth of the bottleneck layers.\n      stride: The ResNet unit's stride. Determines the amount of downsampling of\n        the units output compared to its input.\n      rate: An integer, rate for atrous convolution.\n      outputs_collections: Collection to add the ResNet unit output.\n      scope: Optional variable_scope.\n      use_bounded_activations: Whether or not to use bounded activations. Bounded\n        activations better lend themselves to quantized inference.\n    Returns:\n      The ResNet unit's output.\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "'bottleneck_v1'", ",", "[", "inputs", "]", ")", "as", "sc", ":", "\n", "        ", "depth_in", "=", "slim", ".", "utils", ".", "last_dimension", "(", "inputs", ".", "get_shape", "(", ")", ",", "min_rank", "=", "4", ")", "\n", "if", "depth", "==", "depth_in", ":", "\n", "            ", "shortcut", "=", "resnet_utils", ".", "subsample", "(", "inputs", ",", "stride", ",", "'shortcut'", ")", "\n", "", "else", ":", "\n", "            ", "shortcut", "=", "slim", ".", "conv2d", "(", "\n", "inputs", ",", "\n", "depth", ",", "[", "1", ",", "1", "]", ",", "\n", "stride", "=", "stride", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu6", "if", "use_bounded_activations", "else", "None", ",", "\n", "scope", "=", "'shortcut'", ")", "\n", "\n", "", "residual", "=", "slim", ".", "conv2d", "(", "inputs", ",", "depth_bottleneck", ",", "[", "1", ",", "1", "]", ",", "stride", "=", "1", ",", "\n", "scope", "=", "'conv1'", ")", "\n", "residual", "=", "resnet_utils", ".", "conv2d_same", "(", "residual", ",", "depth_bottleneck", ",", "3", ",", "stride", ",", "\n", "rate", "=", "rate", ",", "scope", "=", "'conv2'", ")", "\n", "residual", "=", "slim", ".", "conv2d", "(", "residual", ",", "depth", ",", "[", "1", ",", "1", "]", ",", "stride", "=", "1", ",", "\n", "activation_fn", "=", "None", ",", "scope", "=", "'conv3'", ")", "\n", "\n", "if", "use_bounded_activations", ":", "\n", "# Use clip_by_value to simulate bandpass activation.", "\n", "            ", "residual", "=", "tf", ".", "clip_by_value", "(", "residual", ",", "-", "6.0", ",", "6.0", ")", "\n", "output", "=", "tf", ".", "nn", ".", "relu6", "(", "shortcut", "+", "residual", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "relu", "(", "shortcut", "+", "residual", ")", "\n", "\n", "", "return", "slim", ".", "utils", ".", "collect_named_outputs", "(", "outputs_collections", ",", "\n", "sc", ".", "name", ",", "\n", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1": [[128, 236], ["tensorflow.variable_scope", "slim.arg_scope", "resnet_utils.stack_blocks_dense", "slim.utils.convert_collection_to_dict", "slim.arg_scope", "resnet_v1.NoOpScope", "resnet_utils.conv2d_same", "skips.append", "slim.max_pool2d", "skips.append", "tensorflow.reduce_mean", "slim.conv2d", "slim.softmax", "tensorflow.squeeze", "ValueError"], "function", ["None"], ["", "", "def", "resnet_v1", "(", "inputs", ",", "\n", "blocks", ",", "\n", "num_classes", "=", "None", ",", "\n", "is_training", "=", "True", ",", "\n", "global_pool", "=", "True", ",", "\n", "output_stride", "=", "None", ",", "\n", "include_root_block", "=", "True", ",", "\n", "spatial_squeeze", "=", "True", ",", "\n", "store_non_strided_activations", "=", "False", ",", "\n", "reuse", "=", "None", ",", "\n", "scope", "=", "None", ")", ":", "\n", "    ", "\"\"\"Generator for v1 ResNet models.\n    This function generates a family of ResNet v1 models. See the resnet_v1_*()\n    methods for specific model instantiations, obtained by selecting different\n    block instantiations that produce ResNets of various depths.\n    Training for image classification on Imagenet is usually done with [224, 224]\n    inputs, resulting in [7, 7] feature maps at the output of the last ResNet\n    block for the ResNets defined in [1] that have nominal stride equal to 32.\n    However, for dense prediction tasks we advise that one uses inputs with\n    spatial dimensions that are multiples of 32 plus 1, e.g., [321, 321]. In\n    this case the feature maps at the ResNet output will have spatial shape\n    [(height - 1) / output_stride + 1, (width - 1) / output_stride + 1]\n    and corners exactly aligned with the input image corners, which greatly\n    facilitates alignment of the features to the image. Using as input [225, 225]\n    images results in [8, 8] feature maps at the output of the last ResNet block.\n    For dense prediction tasks, the ResNet needs to run in fully-convolutional\n    (FCN) mode and global_pool needs to be set to False. The ResNets in [1, 2] all\n    have nominal stride equal to 32 and a good choice in FCN mode is to use\n    output_stride=16 in order to increase the density of the computed features at\n    small computational and memory overhead, cf. http://arxiv.org/abs/1606.00915.\n    Args:\n      inputs: A tensor of size [batch, height_in, width_in, channels].\n      blocks: A list of length equal to the number of ResNet blocks. Each element\n        is a resnet_utils.Block object describing the units in the block.\n      num_classes: Number of predicted classes for classification tasks.\n        If 0 or None, we return the features before the logit layer.\n      is_training: whether batch_norm layers are in training mode. If this is set\n        to None, the callers can specify slim.batch_norm's is_training parameter\n        from an outer slim.arg_scope.\n      global_pool: If True, we perform global average pooling before computing the\n        logits. Set to True for image classification, False for dense prediction.\n      output_stride: If None, then the output will be computed at the nominal\n        network stride. If output_stride is not None, it specifies the requested\n        ratio of input to output spatial resolution.\n      include_root_block: If True, include the initial convolution followed by\n        max-pooling, if False excludes it.\n      spatial_squeeze: if True, logits is of shape [B, C], if false logits is\n          of shape [B, 1, 1, C], where B is batch_size and C is number of classes.\n          To use this parameter, the input images must be smaller than 300x300\n          pixels, in which case the output logit layer does not contain spatial\n          information and can be removed.\n      store_non_strided_activations: If True, we compute non-strided (undecimated)\n        activations at the last unit of each block and store them in the\n        `outputs_collections` before subsampling them. This gives us access to\n        higher resolution intermediate activations which are useful in some\n        dense prediction problems but increases 4x the computation and memory cost\n        at the last unit of each block.\n      reuse: whether or not the network and its variables should be reused. To be\n        able to reuse 'scope' must be given.\n      scope: Optional variable_scope.\n    Returns:\n      net: A rank-4 tensor of size [batch, height_out, width_out, channels_out].\n        If global_pool is False, then height_out and width_out are reduced by a\n        factor of output_stride compared to the respective height_in and width_in,\n        else both height_out and width_out equal one. If num_classes is 0 or None,\n        then net is the output of the last ResNet block, potentially after global\n        average pooling. If num_classes a non-zero integer, net contains the\n        pre-softmax activations.\n      end_points: A dictionary from components of the network to the corresponding\n        activation.\n    Raises:\n      ValueError: If the target output_stride is not valid.\n    \"\"\"", "\n", "skips", "=", "[", "]", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "'resnet_v1'", ",", "[", "inputs", "]", ",", "reuse", "=", "reuse", ")", "as", "sc", ":", "\n", "        ", "end_points_collection", "=", "sc", ".", "original_name_scope", "+", "'_end_points'", "\n", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "conv2d", ",", "bottleneck", ",", "\n", "resnet_utils", ".", "stack_blocks_dense", "]", ",", "\n", "outputs_collections", "=", "end_points_collection", ")", ":", "\n", "            ", "with", "(", "slim", ".", "arg_scope", "(", "[", "slim", ".", "batch_norm", "]", ",", "is_training", "=", "is_training", ")", "\n", "if", "is_training", "is", "not", "None", "else", "NoOpScope", "(", ")", ")", ":", "\n", "                ", "net", "=", "inputs", "\n", "if", "include_root_block", ":", "\n", "                    ", "if", "output_stride", "is", "not", "None", ":", "\n", "                        ", "if", "output_stride", "%", "4", "!=", "0", ":", "\n", "                            ", "raise", "ValueError", "(", "'The output_stride needs to be a multiple of 4.'", ")", "\n", "", "output_stride", "/=", "4", "\n", "", "net", "=", "resnet_utils", ".", "conv2d_same", "(", "net", ",", "64", ",", "7", ",", "stride", "=", "2", ",", "scope", "=", "'conv1'", ")", "\n", "skips", ".", "append", "(", "net", ")", "\n", "net", "=", "slim", ".", "max_pool2d", "(", "net", ",", "[", "3", ",", "3", "]", ",", "stride", "=", "2", ",", "scope", "=", "'pool1'", ")", "\n", "skips", ".", "append", "(", "net", ")", "\n", "", "net", ",", "skips", "=", "resnet_utils", ".", "stack_blocks_dense", "(", "net", ",", "blocks", ",", "skips", ",", "output_stride", ",", "store_non_strided_activations", ")", "\n", "# Convert end_points_collection into a dictionary of end_points.", "\n", "end_points", "=", "slim", ".", "utils", ".", "convert_collection_to_dict", "(", "end_points_collection", ")", "\n", "\n", "if", "global_pool", ":", "\n", "# Global average pooling.", "\n", "                    ", "net", "=", "tf", ".", "reduce_mean", "(", "net", ",", "[", "1", ",", "2", "]", ",", "name", "=", "'pool5'", ",", "keep_dims", "=", "True", ")", "\n", "end_points", "[", "'global_pool'", "]", "=", "net", "\n", "", "if", "num_classes", ":", "\n", "                    ", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "num_classes", ",", "[", "1", ",", "1", "]", ",", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "None", ",", "scope", "=", "'logits'", ")", "\n", "end_points", "[", "sc", ".", "name", "+", "'/logits'", "]", "=", "net", "\n", "if", "spatial_squeeze", ":", "\n", "                        ", "net", "=", "tf", ".", "squeeze", "(", "net", ",", "[", "1", ",", "2", "]", ",", "name", "=", "'SpatialSqueeze'", ")", "\n", "end_points", "[", "sc", ".", "name", "+", "'/spatial_squeeze'", "]", "=", "net", "\n", "", "end_points", "[", "'predictions'", "]", "=", "slim", ".", "softmax", "(", "net", ",", "scope", "=", "'predictions'", ")", "\n", "", "return", "net", ",", "skips", ",", "end_points", "\n", "# resnet_v1.default_image_size = 224", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block": [[239, 258], ["resnet_utils.Block"], "function", ["None"], ["", "", "", "", "def", "resnet_v1_block", "(", "scope", ",", "base_depth", ",", "num_units", ",", "stride", ")", ":", "\n", "    ", "\"\"\"Helper function for creating a resnet_v1 bottleneck block.\n    Args:\n      scope: The scope of the block.\n      base_depth: The depth of the bottleneck layer for each unit.\n      num_units: The number of units in the block.\n      stride: The stride of the block, implemented as a stride in the last unit.\n        All other units have stride=1.\n    Returns:\n      A resnet_v1 bottleneck block.\n    \"\"\"", "\n", "return", "resnet_utils", ".", "Block", "(", "scope", ",", "bottleneck", ",", "[", "{", "\n", "'depth'", ":", "base_depth", "*", "4", ",", "\n", "'depth_bottleneck'", ":", "base_depth", ",", "\n", "'stride'", ":", "1", "\n", "}", "]", "*", "(", "num_units", "-", "1", ")", "+", "[", "{", "\n", "'depth'", ":", "base_depth", "*", "4", ",", "\n", "'depth_bottleneck'", ":", "base_depth", ",", "\n", "'stride'", ":", "stride", "\n", "}", "]", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_50": [[261, 289], ["resnet_v1.resnet_v1", "max", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "int", "depth_func", "depth_func", "depth_func", "depth_func"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block"], ["", "def", "resnet_v1_50", "(", "inputs", ",", "\n", "num_classes", "=", "None", ",", "\n", "is_training", "=", "True", ",", "\n", "global_pool", "=", "True", ",", "\n", "output_stride", "=", "None", ",", "\n", "spatial_squeeze", "=", "True", ",", "\n", "store_non_strided_activations", "=", "False", ",", "\n", "min_base_depth", "=", "8", ",", "\n", "depth_multiplier", "=", "1", ",", "\n", "reuse", "=", "None", ",", "\n", "scope", "=", "'resnet_v1_50'", ")", ":", "\n", "    ", "\"\"\"ResNet-50 model of [1]. See resnet_v1() for arg and return description.\"\"\"", "\n", "depth_func", "=", "lambda", "d", ":", "max", "(", "int", "(", "d", "*", "depth_multiplier", ")", ",", "min_base_depth", ")", "\n", "blocks", "=", "[", "\n", "resnet_v1_block", "(", "'block1'", ",", "base_depth", "=", "depth_func", "(", "64", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block2'", ",", "base_depth", "=", "depth_func", "(", "128", ")", ",", "num_units", "=", "4", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block3'", ",", "base_depth", "=", "depth_func", "(", "256", ")", ",", "num_units", "=", "6", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block4'", ",", "base_depth", "=", "depth_func", "(", "512", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "1", ")", ",", "\n", "]", "\n", "return", "resnet_v1", "(", "inputs", ",", "blocks", ",", "num_classes", ",", "is_training", ",", "\n", "global_pool", "=", "global_pool", ",", "output_stride", "=", "output_stride", ",", "\n", "include_root_block", "=", "True", ",", "spatial_squeeze", "=", "spatial_squeeze", ",", "\n", "store_non_strided_activations", "=", "store_non_strided_activations", ",", "\n", "reuse", "=", "reuse", ",", "scope", "=", "scope", ")", "\n", "# resnet_v1_50.default_image_size = resnet_v1.default_image_size", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_101": [[292, 320], ["resnet_v1.resnet_v1", "max", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "int", "depth_func", "depth_func", "depth_func", "depth_func"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block"], ["", "def", "resnet_v1_101", "(", "inputs", ",", "\n", "num_classes", "=", "None", ",", "\n", "is_training", "=", "True", ",", "\n", "global_pool", "=", "True", ",", "\n", "output_stride", "=", "None", ",", "\n", "spatial_squeeze", "=", "True", ",", "\n", "store_non_strided_activations", "=", "False", ",", "\n", "min_base_depth", "=", "8", ",", "\n", "depth_multiplier", "=", "1", ",", "\n", "reuse", "=", "None", ",", "\n", "scope", "=", "'resnet_v1_101'", ")", ":", "\n", "    ", "\"\"\"ResNet-101 model of [1]. See resnet_v1() for arg and return description.\"\"\"", "\n", "depth_func", "=", "lambda", "d", ":", "max", "(", "int", "(", "d", "*", "depth_multiplier", ")", ",", "min_base_depth", ")", "\n", "blocks", "=", "[", "\n", "resnet_v1_block", "(", "'block1'", ",", "base_depth", "=", "depth_func", "(", "64", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block2'", ",", "base_depth", "=", "depth_func", "(", "128", ")", ",", "num_units", "=", "4", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block3'", ",", "base_depth", "=", "depth_func", "(", "256", ")", ",", "num_units", "=", "23", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block4'", ",", "base_depth", "=", "depth_func", "(", "512", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "1", ")", ",", "\n", "]", "\n", "return", "resnet_v1", "(", "inputs", ",", "blocks", ",", "num_classes", ",", "is_training", ",", "\n", "global_pool", "=", "global_pool", ",", "output_stride", "=", "output_stride", ",", "\n", "include_root_block", "=", "True", ",", "spatial_squeeze", "=", "spatial_squeeze", ",", "\n", "store_non_strided_activations", "=", "store_non_strided_activations", ",", "\n", "reuse", "=", "reuse", ",", "scope", "=", "scope", ")", "\n", "# resnet_v1_101.default_image_size = resnet_v1.default_image_size", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_152": [[323, 351], ["resnet_v1.resnet_v1", "max", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "int", "depth_func", "depth_func", "depth_func", "depth_func"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block"], ["", "def", "resnet_v1_152", "(", "inputs", ",", "\n", "num_classes", "=", "None", ",", "\n", "is_training", "=", "True", ",", "\n", "global_pool", "=", "True", ",", "\n", "output_stride", "=", "None", ",", "\n", "store_non_strided_activations", "=", "False", ",", "\n", "spatial_squeeze", "=", "True", ",", "\n", "min_base_depth", "=", "8", ",", "\n", "depth_multiplier", "=", "1", ",", "\n", "reuse", "=", "None", ",", "\n", "scope", "=", "'resnet_v1_152'", ")", ":", "\n", "    ", "\"\"\"ResNet-152 model of [1]. See resnet_v1() for arg and return description.\"\"\"", "\n", "depth_func", "=", "lambda", "d", ":", "max", "(", "int", "(", "d", "*", "depth_multiplier", ")", ",", "min_base_depth", ")", "\n", "blocks", "=", "[", "\n", "resnet_v1_block", "(", "'block1'", ",", "base_depth", "=", "depth_func", "(", "64", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block2'", ",", "base_depth", "=", "depth_func", "(", "128", ")", ",", "num_units", "=", "8", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block3'", ",", "base_depth", "=", "depth_func", "(", "256", ")", ",", "num_units", "=", "36", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block4'", ",", "base_depth", "=", "depth_func", "(", "512", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "1", ")", ",", "\n", "]", "\n", "return", "resnet_v1", "(", "inputs", ",", "blocks", ",", "num_classes", ",", "is_training", ",", "\n", "global_pool", "=", "global_pool", ",", "output_stride", "=", "output_stride", ",", "\n", "include_root_block", "=", "True", ",", "spatial_squeeze", "=", "spatial_squeeze", ",", "\n", "store_non_strided_activations", "=", "store_non_strided_activations", ",", "\n", "reuse", "=", "reuse", ",", "scope", "=", "scope", ")", "\n", "# resnet_v1_152.default_image_size = resnet_v1.default_image_size", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_200": [[354, 382], ["resnet_v1.resnet_v1", "max", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "resnet_v1.resnet_v1_block", "int", "depth_func", "depth_func", "depth_func", "depth_func"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_block"], ["", "def", "resnet_v1_200", "(", "inputs", ",", "\n", "num_classes", "=", "None", ",", "\n", "is_training", "=", "True", ",", "\n", "global_pool", "=", "True", ",", "\n", "output_stride", "=", "None", ",", "\n", "store_non_strided_activations", "=", "False", ",", "\n", "spatial_squeeze", "=", "True", ",", "\n", "min_base_depth", "=", "8", ",", "\n", "depth_multiplier", "=", "1", ",", "\n", "reuse", "=", "None", ",", "\n", "scope", "=", "'resnet_v1_200'", ")", ":", "\n", "    ", "\"\"\"ResNet-200 model of [2]. See resnet_v1() for arg and return description.\"\"\"", "\n", "depth_func", "=", "lambda", "d", ":", "max", "(", "int", "(", "d", "*", "depth_multiplier", ")", ",", "min_base_depth", ")", "\n", "blocks", "=", "[", "\n", "resnet_v1_block", "(", "'block1'", ",", "base_depth", "=", "depth_func", "(", "64", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block2'", ",", "base_depth", "=", "depth_func", "(", "128", ")", ",", "num_units", "=", "24", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block3'", ",", "base_depth", "=", "depth_func", "(", "256", ")", ",", "num_units", "=", "36", ",", "\n", "stride", "=", "2", ")", ",", "\n", "resnet_v1_block", "(", "'block4'", ",", "base_depth", "=", "depth_func", "(", "512", ")", ",", "num_units", "=", "3", ",", "\n", "stride", "=", "1", ")", ",", "\n", "]", "\n", "return", "resnet_v1", "(", "inputs", ",", "blocks", ",", "num_classes", ",", "is_training", ",", "\n", "global_pool", "=", "global_pool", ",", "output_stride", "=", "output_stride", ",", "\n", "include_root_block", "=", "True", ",", "spatial_squeeze", "=", "spatial_squeeze", ",", "\n", "store_non_strided_activations", "=", "store_non_strided_activations", ",", "\n", "reuse", "=", "reuse", ",", "scope", "=", "scope", ")", "\n", "# resnet_v1_200.default_image_size = resnet_v1.default_image_size", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.convert_arg_line_to_args": [[29, 34], ["arg_line.split", "arg.strip"], "function", ["None"], ["import", "torchvision", ".", "utils", "as", "vutils", "\n", "import", "torch", ".", "backends", ".", "cudnn", "as", "cudnn", "\n", "from", "torch", ".", "autograd", "import", "Variable", "\n", "from", "tensorboardX", "import", "SummaryWriter", "\n", "from", "bts_dataloader", "import", "*", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.compute_errors": [[73, 95], ["numpy.maximum", "numpy.sqrt", "numpy.sqrt", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.mean", "np.sqrt.mean", "np.sqrt.mean", "numpy.log", "numpy.log", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.abs", "numpy.log10", "numpy.log10", "numpy.mean", "numpy.mean"], "function", ["None"], ["sys", ".", "path", ".", "append", "(", "model_dir", ")", "\n", "\n", "for", "key", ",", "val", "in", "vars", "(", "__import__", "(", "args", ".", "model_name", ")", ")", ".", "items", "(", ")", ":", "\n", "    ", "if", "key", ".", "startswith", "(", "'__'", ")", "and", "key", ".", "endswith", "(", "'__'", ")", ":", "\n", "        ", "continue", "\n", "", "vars", "(", ")", "[", "key", "]", "=", "val", "\n", "\n", "\n", "", "def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "d1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "d2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "d3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "np", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "np", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines": [[97, 102], ["open", "open.readlines", "open.close", "len"], "function", ["None"], ["silog", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "err", "**", "2", ")", "-", "np", ".", "mean", "(", "err", ")", "**", "2", ")", "*", "100", "\n", "\n", "err", "=", "np", ".", "abs", "(", "np", ".", "log10", "(", "pred", ")", "-", "np", ".", "log10", "(", "gt", ")", ")", "\n", "log10", "=", "np", ".", "mean", "(", "err", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "d1", ",", "d2", ",", "d3", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.test": [[104, 245], ["set", "os.path.exists", "os.path.getmtime", "bts_dataloader.BtsDataloader", "bts_dataloader.BtsDataloader.loader.make_initializable_iterator", "dataloader.loader.make_initializable_iterator.get_next", "BtsModel", "tf.ConfigProto", "tf.Session", "tf.Session.run", "tf.Session.run", "tf.train.Coordinator", "tf.train.start_queue_runners", "tf.train.Saver", "set", "os.path.exists", "sorted", "len", "print", "time.time", "print", "print", "print", "tf.summary.FileWriter", "tf.global_variables_initializer", "tf.local_variables_initializer", "tf.device", "open", "[].replace", "sorted.add", "os.path.join", "os.path.join", "os.path.exists", "tf.train.Saver.restore", "bts_eval.get_num_lines", "print", "tf.Session.run", "time.time", "range", "print", "print", "print", "bts_eval.eval", "print", "[].split", "file.readlines", "open", "file.readlines", "line.rstrip", "sorted.remove", "str", "str", "os.path.join", "open", "f.readlines", "tf.Session.run", "pred_depths.append", "time.time", "len", "range", "int", "tf.Summary", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.Summary.value.add", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.flush", "int", "line.rstrip", "depth[].squeeze", "str", "os.path.join", "cv2.imread", "gt_depths.append", "open", "file.write", "[].split", "str", "print", "set.add", "silog.mean", "abs_rel.mean", "log10.mean", "sq_rel.mean", "rms.mean", "log_rms.mean", "d1.mean", "d2.mean", "d3.mean", "str().split", "int", "lines[].split", "cv2.imread.astype", "cv2.imread.astype", "os.path.dirname", "str", "[].split", "line.split"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval"], ["\n", "", "def", "get_num_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "len", "(", "lines", ")", "\n", "\n", "\n", "", "def", "test", "(", "params", ")", ":", "\n", "    ", "global", "gt_depths", ",", "is_missing", ",", "missing_ids", "\n", "gt_depths", "=", "[", "]", "\n", "is_missing", "=", "[", "]", "\n", "missing_ids", "=", "set", "(", ")", "\n", "write_summary", "=", "False", "\n", "steps", "=", "set", "(", ")", "\n", "\n", "if", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "        ", "import", "glob", "\n", "models", "=", "[", "f", "for", "f", "in", "glob", ".", "glob", "(", "args", ".", "checkpoint_path", "+", "\"/model*\"", ")", "]", "\n", "\n", "for", "model", "in", "models", ":", "\n", "            ", "step", "=", "model", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "steps", ".", "add", "(", "'{:06d}'", ".", "format", "(", "int", "(", "step", ")", ")", ")", "\n", "\n", "", "lines", "=", "[", "]", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "checkpoint_path", "+", "'/evaluated_checkpoints'", ")", ":", "\n", "            ", "with", "open", "(", "args", ".", "checkpoint_path", "+", "'/evaluated_checkpoints'", ")", "as", "file", ":", "\n", "                ", "lines", "=", "file", ".", "readlines", "(", ")", "\n", "\n", "", "", "for", "line", "in", "lines", ":", "\n", "            ", "if", "line", ".", "rstrip", "(", ")", "in", "steps", ":", "\n", "                ", "steps", ".", "remove", "(", "line", ".", "rstrip", "(", ")", ")", "\n", "\n", "", "", "steps", "=", "sorted", "(", "steps", ")", "\n", "if", "args", ".", "output_directory", "!=", "''", ":", "\n", "            ", "summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_directory", ",", "args", ".", "model_name", ")", "\n", "", "else", ":", "\n", "            ", "summary_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "'eval'", ")", "\n", "\n", "", "write_summary", "=", "True", "\n", "", "else", ":", "\n", "        ", "steps", ".", "add", "(", "'{:06d}'", ".", "format", "(", "int", "(", "args", ".", "checkpoint_path", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", ")", ")", ")", "\n", "\n", "\n", "", "if", "len", "(", "steps", ")", "==", "0", ":", "\n", "        ", "print", "(", "'No new model to evaluate. Abort.'", ")", "\n", "return", "\n", "\n", "", "args", ".", "mode", "=", "'test'", "\n", "dataloader", "=", "BtsDataLoader", "(", "args", ",", "'eval'", ")", "\n", "\n", "model", "=", "BtsModel", "(", "params", "=", "params", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "if", "write_summary", ":", "\n", "        ", "summary_writer", "=", "SummaryWriter", "(", "summary_path", ",", "flush_secs", "=", "30", ")", "\n", "\n", "", "for", "step", "in", "steps", ":", "\n", "        ", "if", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "'model-'", "+", "str", "(", "int", "(", "step", ")", ")", ")", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "num_test_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "\n", "with", "open", "(", "args", ".", "filenames_file", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "print", "(", "'now testing {} files for step {}'", ".", "format", "(", "num_test_samples", ",", "step", ")", ")", "\n", "\n", "pred_depths", "=", "[", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "_", ",", "sample", "in", "enumerate", "(", "dataloader", ".", "data", ")", ":", "\n", "                ", "image", "=", "Variable", "(", "sample", "[", "'image'", "]", ".", "cuda", "(", ")", ")", "\n", "focal", "=", "Variable", "(", "sample", "[", "'focal'", "]", ".", "cuda", "(", ")", ")", "\n", "# image = Variable(sample['image'])", "\n", "# focal = Variable(sample['focal'])", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_est", "=", "model", "(", "image", ",", "focal", ")", "\n", "pred_depths", ".", "append", "(", "depth_est", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "\n", "", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "'Elapesed time: %s'", "%", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n", "if", "len", "(", "gt_depths", ")", "==", "0", ":", "\n", "            ", "for", "t_id", "in", "range", "(", "num_test_samples", ")", ":", "\n", "                ", "gt_depth_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "gt_path", ",", "lines", "[", "t_id", "]", ".", "split", "(", ")", "[", "1", "]", ")", "\n", "depth", "=", "cv2", ".", "imread", "(", "gt_depth_path", ",", "-", "1", ")", "\n", "if", "depth", "is", "None", ":", "\n", "                    ", "print", "(", "'Missing: %s '", "%", "gt_depth_path", ")", "\n", "missing_ids", ".", "add", "(", "t_id", ")", "\n", "continue", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "                    ", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "1000.0", "\n", "", "else", ":", "\n", "                    ", "depth", "=", "depth", ".", "astype", "(", "np", ".", "float32", ")", "/", "256.0", "\n", "\n", "", "gt_depths", ".", "append", "(", "depth", ")", "\n", "\n", "", "", "print", "(", "'Computing errors'", ")", "\n", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "=", "eval", "(", "pred_depths", ",", "int", "(", "step", ")", ")", "\n", "\n", "if", "write_summary", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "'silog'", ",", "silog", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'abs_rel'", ",", "abs_rel", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'log10'", ",", "log10", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'sq_rel'", ",", "sq_rel", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'rms'", ",", "rms", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'log_rms'", ",", "log_rms", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d1'", ",", "d1", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d2'", ",", "d2", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'d3'", ",", "d3", ".", "mean", "(", ")", ",", "int", "(", "step", ")", ")", "\n", "summary_writer", ".", "flush", "(", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "dirname", "(", "args", ".", "checkpoint_path", ")", "+", "'/evaluated_checkpoints'", ",", "'a'", ")", "as", "file", ":", "\n", "                ", "file", ".", "write", "(", "step", "+", "'\\n'", ")", "\n", "\n", "", "", "print", "(", "'Evaluation done'", ")", "\n", "\n", "\n", "", "", "def", "eval", "(", "pred_depths", ",", "step", ")", ":", "\n", "    ", "num_samples", "=", "get_num_lines", "(", "args", ".", "filenames_file", ")", "\n", "pred_depths_valid", "=", "[", "]", "\n", "\n", "for", "t_id", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "if", "t_id", "in", "missing_ids", ":", "\n", "            ", "continue", "\n", "\n", "", "pred_depths_valid", ".", "append", "(", "pred_depths", "[", "t_id", "]", ")", "\n", "\n", "", "num_samples", "=", "num_samples", "-", "len", "(", "missing_ids", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.eval": [[247, 313], ["bts_eval.get_num_lines", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "print", "print", "pred_depths_valid.append", "len", "numpy.logical_and", "bts_eval.compute_errors", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.logical_and", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "np.zeros.mean", "numpy.isinf", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.get_num_lines", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.compute_errors"], ["silog", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log10", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "log_rms", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "abs_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "sq_rel", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d1", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d2", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "d3", "=", "np", ".", "zeros", "(", "num_samples", ",", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "gt_depth", "=", "gt_depths", "[", "i", "]", "\n", "pred_depth", "=", "pred_depths_valid", "[", "i", "]", "\n", "\n", "if", "args", ".", "do_kb_crop", ":", "\n", "            ", "height", ",", "width", "=", "gt_depth", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "pred_depth_uncropped", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_depth_uncropped", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", "]", "=", "pred_depth", "\n", "pred_depth", "=", "pred_depth_uncropped", "\n", "\n", "", "pred_depth", "[", "pred_depth", "<", "args", ".", "min_depth_eval", "]", "=", "args", ".", "min_depth_eval", "\n", "pred_depth", "[", "pred_depth", ">", "args", ".", "max_depth_eval", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isinf", "(", "pred_depth", ")", "]", "=", "args", ".", "max_depth_eval", "\n", "pred_depth", "[", "np", ".", "isnan", "(", "pred_depth", ")", "]", "=", "args", ".", "min_depth_eval", "\n", "\n", "valid_mask", "=", "np", ".", "logical_and", "(", "gt_depth", ">", "args", ".", "min_depth_eval", ",", "gt_depth", "<", "args", ".", "max_depth_eval", ")", "\n", "\n", "if", "args", ".", "garg_crop", "or", "args", ".", "eigen_crop", ":", "\n", "            ", "gt_height", ",", "gt_width", "=", "gt_depth", ".", "shape", "\n", "eval_mask", "=", "np", ".", "zeros", "(", "valid_mask", ".", "shape", ")", "\n", "\n", "if", "args", ".", "garg_crop", ":", "\n", "                ", "eval_mask", "[", "int", "(", "0.40810811", "*", "gt_height", ")", ":", "int", "(", "0.99189189", "*", "gt_height", ")", ",", "int", "(", "0.03594771", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "\n", "", "elif", "args", ".", "eigen_crop", ":", "\n", "                ", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                    ", "eval_mask", "[", "int", "(", "0.3324324", "*", "gt_height", ")", ":", "int", "(", "0.91351351", "*", "gt_height", ")", ",", "int", "(", "0.0359477", "*", "gt_width", ")", ":", "int", "(", "0.96405229", "*", "gt_width", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "eval_mask", "[", "45", ":", "471", ",", "41", ":", "601", "]", "=", "1", "\n", "\n", "", "", "valid_mask", "=", "np", ".", "logical_and", "(", "valid_mask", ",", "eval_mask", ")", "\n", "\n", "", "silog", "[", "i", "]", ",", "log10", "[", "i", "]", ",", "abs_rel", "[", "i", "]", ",", "sq_rel", "[", "i", "]", ",", "rms", "[", "i", "]", ",", "log_rms", "[", "i", "]", ",", "d1", "[", "i", "]", ",", "d2", "[", "i", "]", ",", "d3", "[", "i", "]", "=", "compute_errors", "(", "\n", "gt_depth", "[", "valid_mask", "]", ",", "pred_depth", "[", "valid_mask", "]", ")", "\n", "\n", "", "print", "(", "\"{:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}, {:>7}\"", ".", "format", "(", "'silog'", ",", "'abs_rel'", ",", "'log10'", ",", "'rms'", ",", "\n", "'sq_rel'", ",", "'log_rms'", ",", "'d1'", ",", "'d2'", ",", "'d3'", ")", ")", "\n", "print", "(", "\"{:7.4f}, {:7.4f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}, {:7.3f}\"", ".", "format", "(", "\n", "silog", ".", "mean", "(", ")", ",", "abs_rel", ".", "mean", "(", ")", ",", "log10", ".", "mean", "(", ")", ",", "rms", ".", "mean", "(", ")", ",", "sq_rel", ".", "mean", "(", ")", ",", "log_rms", ".", "mean", "(", ")", ",", "d1", ".", "mean", "(", ")", ",", "d2", ".", "mean", "(", ")", ",", "\n", "d3", ".", "mean", "(", ")", ")", ")", "\n", "\n", "return", "silog", ",", "log10", ",", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "d1", ",", "d2", ",", "d3", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "test", "(", "args", ")", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.main": [[315, 329], ["bts_parameters", "bts_eval.test"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_eval.test"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.__init__": [[43, 64], ["tensorflow.cast", "tensorflow.cast", "bts.BtsModel.build_model", "bts.BtsModel.build_losses", "bts.BtsModel.build_summaries", "str"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_model", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_losses", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_summaries"], ["        ", "super", "(", "silog_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "variance_focus", "=", "variance_focus", "\n", "\n", "", "def", "forward", "(", "self", ",", "depth_est", ",", "depth_gt", ",", "mask", ")", ":", "\n", "        ", "d", "=", "torch", ".", "log", "(", "depth_est", "[", "mask", "]", ")", "-", "torch", ".", "log", "(", "depth_gt", "[", "mask", "]", ")", "\n", "return", "torch", ".", "sqrt", "(", "(", "d", "**", "2", ")", ".", "mean", "(", ")", "-", "self", ".", "variance_focus", "*", "(", "d", ".", "mean", "(", ")", "**", "2", ")", ")", "*", "10.0", "\n", "\n", "\n", "", "", "class", "atrous_conv", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dilation", ",", "apply_bn_first", "=", "True", ")", ":", "\n", "        ", "super", "(", "atrous_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "atrous_conv", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "if", "apply_bn_first", ":", "\n", "            ", "self", ".", "atrous_conv", ".", "add_module", "(", "'first_bn'", ",", "nn", ".", "BatchNorm2d", "(", "in_channels", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ",", "eps", "=", "1.1e-5", ")", ")", "\n", "\n", "", "self", ".", "atrous_conv", ".", "add_module", "(", "'aconv_sequence'", ",", "nn", ".", "Sequential", "(", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", "*", "2", ",", "bias", "=", "False", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", "*", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "out_channels", "*", "2", ",", "out_channels", "=", "out_channels", ",", "bias", "=", "False", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "(", "dilation", ",", "dilation", ")", ",", "dilation", "=", "dilation", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upsample_nn": [[65, 70], ["tensorflow.shape", "tensorflow.shape", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "atrous_conv", ".", "forward", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "upconv", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "ratio", "=", "2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.downsample_nn": [[71, 76], ["tensorflow.shape", "tensorflow.shape", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor"], "methods", ["None"], ["        ", "super", "(", "upconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "elu", "=", "nn", ".", "ELU", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "bias", "=", "False", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "ratio", "=", "ratio", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv": [[77, 81], ["numpy.floor().astype", "tensorflow.pad", "tensorflow.pad", "tensorflow.conv2d", "tensorflow.conv2d", "numpy.floor"], "methods", ["None"], ["        ", "up_x", "=", "torch_nn_func", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "self", ".", "ratio", ",", "mode", "=", "'nearest'", ")", "\n", "out", "=", "self", ".", "conv", "(", "up_x", ")", "\n", "out", "=", "self", ".", "elu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.atrous_conv": [[82, 99], ["numpy.floor().astype", "tensorflow.pad", "tensorflow.pad", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.batch_norm", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.batch_norm", "numpy.floor"], "methods", ["None"], ["\n", "", "", "class", "reduction_1x1", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "num_in_filters", ",", "num_out_filters", ",", "max_depth", ",", "is_final", "=", "False", ")", ":", "\n", "        ", "super", "(", "reduction_1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_depth", "=", "max_depth", "\n", "self", ".", "is_final", "=", "is_final", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "reduc", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "\n", "while", "num_out_filters", ">=", "4", ":", "\n", "            ", "if", "num_out_filters", "<", "8", ":", "\n", "                ", "if", "self", ".", "is_final", ":", "\n", "                    ", "self", ".", "reduc", ".", "add_module", "(", "'final'", ",", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_in_filters", ",", "out_channels", "=", "1", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "reduc", ".", "add_module", "(", "'plane_params'", ",", "torch", ".", "nn", ".", "Conv2d", "(", "num_in_filters", ",", "out_channels", "=", "3", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv": [[100, 104], ["bts.BtsModel.upsample_nn", "bts.BtsModel.conv"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upsample_nn", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv"], ["", "break", "\n", "", "else", ":", "\n", "                ", "self", ".", "reduc", ".", "add_module", "(", "'inter_{}_{}'", ".", "format", "(", "num_in_filters", ",", "num_out_filters", ")", ",", "\n", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", "=", "num_in_filters", ",", "out_channels", "=", "num_out_filters", ",", "\n", "bias", "=", "False", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv": [[105, 114], ["tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.batch_norm", "tensorflow.batch_norm", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.nn.dropout", "tensorflow.nn.dropout"], "methods", ["None"], ["nn", ".", "ELU", "(", ")", ")", ")", "\n", "\n", "", "num_in_filters", "=", "num_out_filters", "\n", "num_out_filters", "=", "num_out_filters", "//", "2", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "net", ")", ":", "\n", "        ", "net", "=", "self", ".", "reduc", ".", "forward", "(", "net", ")", "\n", "if", "not", "self", ".", "is_final", ":", "\n", "            ", "theta", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "0", ",", ":", ",", ":", "]", ")", "*", "math", ".", "pi", "/", "3", "\n", "phi", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "1", ",", ":", ",", ":", "]", ")", "*", "math", ".", "pi", "*", "2", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv_block": [[115, 122], ["tensorflow.variable_scope", "tensorflow.variable_scope", "bts.BtsModel.denseconv", "bts.BtsModel.denseconv", "tensorflow.concat", "tensorflow.concat"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv"], ["dist", "=", "self", ".", "sigmoid", "(", "net", "[", ":", ",", "2", ",", ":", ",", ":", "]", ")", "*", "self", ".", "max_depth", "\n", "n1", "=", "torch", ".", "mul", "(", "torch", ".", "sin", "(", "theta", ")", ",", "torch", ".", "cos", "(", "phi", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n2", "=", "torch", ".", "mul", "(", "torch", ".", "sin", "(", "theta", ")", ",", "torch", ".", "sin", "(", "phi", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n3", "=", "torch", ".", "cos", "(", "theta", ")", ".", "unsqueeze", "(", "1", ")", "\n", "n4", "=", "dist", ".", "unsqueeze", "(", "1", ")", "\n", "net", "=", "torch", ".", "cat", "(", "[", "n1", ",", "n2", ",", "n3", ",", "n4", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "return", "net", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.dense_block": [[123, 134], ["tensorflow.variable_scope", "tensorflow.variable_scope", "range", "bts.BtsModel.denseconv_block", "str"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv_block"], ["\n", "", "", "class", "local_planar_guidance", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "upratio", ")", ":", "\n", "        ", "super", "(", "local_planar_guidance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upratio", "=", "upratio", "\n", "self", ".", "u", "=", "torch", ".", "arange", "(", "self", ".", "upratio", ")", ".", "reshape", "(", "[", "1", ",", "1", ",", "self", ".", "upratio", "]", ")", ".", "float", "(", ")", "\n", "self", ".", "v", "=", "torch", ".", "arange", "(", "int", "(", "self", ".", "upratio", ")", ")", ".", "reshape", "(", "[", "1", ",", "self", ".", "upratio", ",", "1", "]", ")", ".", "float", "(", ")", "\n", "self", ".", "upratio", "=", "float", "(", "upratio", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "plane_eq", ",", "focal", ")", ":", "\n", "        ", "plane_eq_expanded", "=", "torch", ".", "repeat_interleave", "(", "plane_eq", ",", "int", "(", "self", ".", "upratio", ")", ",", "2", ")", "\n", "plane_eq_expanded", "=", "torch", ".", "repeat_interleave", "(", "plane_eq_expanded", ",", "int", "(", "self", ".", "upratio", ")", ",", "3", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.transition_block": [[135, 143], ["int", "tensorflow.variable_scope", "tensorflow.variable_scope", "bts.BtsModel.denseconv", "tensorflow.avg_pool2d", "tensorflow.avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.denseconv"], ["n1", "=", "plane_eq_expanded", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "n2", "=", "plane_eq_expanded", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "n3", "=", "plane_eq_expanded", "[", ":", ",", "2", ",", ":", ",", ":", "]", "\n", "n4", "=", "plane_eq_expanded", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "\n", "u", "=", "self", ".", "u", ".", "repeat", "(", "plane_eq", ".", "size", "(", "0", ")", ",", "plane_eq", ".", "size", "(", "2", ")", "*", "int", "(", "self", ".", "upratio", ")", ",", "plane_eq", ".", "size", "(", "3", ")", ")", ".", "cuda", "(", ")", "\n", "u", "=", "(", "u", "-", "(", "self", ".", "upratio", "-", "1", ")", "*", "0.5", ")", "/", "self", ".", "upratio", "\n", "\n", "v", "=", "self", ".", "v", ".", "repeat", "(", "plane_eq", ".", "size", "(", "0", ")", ",", "plane_eq", ".", "size", "(", "2", ")", ",", "plane_eq", ".", "size", "(", "3", ")", "*", "int", "(", "self", ".", "upratio", ")", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.reduction_1x1": [[144, 167], ["bts.BtsModel.conv", "bts.BtsModel.conv", "bts.BtsModel.conv", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.math.cos", "tensorflow.math.cos", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.math.sin", "tensorflow.math.sin", "tensorflow.math.cos", "tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.math.sin", "tensorflow.math.sin", "tensorflow.math.sin"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv"], ["v", "=", "(", "v", "-", "(", "self", ".", "upratio", "-", "1", ")", "*", "0.5", ")", "/", "self", ".", "upratio", "\n", "\n", "return", "n4", "/", "(", "n1", "*", "u", "+", "n2", "*", "v", "+", "n3", ")", "\n", "\n", "", "", "class", "bts", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "params", ",", "feat_out_channels", ",", "num_features", "=", "512", ")", ":", "\n", "        ", "super", "(", "bts", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "params", "=", "params", "\n", "\n", "self", ".", "upconv5", "=", "upconv", "(", "feat_out_channels", "[", "4", "]", ",", "num_features", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "\n", "self", ".", "conv5", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "+", "feat_out_channels", "[", "3", "]", ",", "num_features", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "upconv4", "=", "upconv", "(", "num_features", ",", "num_features", "//", "2", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "2", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "bn4_2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "2", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "\n", "self", ".", "daspp_3", "=", "atrous_conv", "(", "num_features", "//", "2", ",", "num_features", "//", "4", ",", "3", ",", "apply_bn_first", "=", "False", ")", "\n", "self", ".", "daspp_6", "=", "atrous_conv", "(", "num_features", "//", "2", "+", "num_features", "//", "4", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "6", ")", "\n", "self", ".", "daspp_12", "=", "atrous_conv", "(", "num_features", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "12", ")", "\n", "self", ".", "daspp_18", "=", "atrous_conv", "(", "num_features", "+", "num_features", "//", "4", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "18", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.get_depth": [[168, 176], ["bts.BtsModel.conv", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.conv"], ["self", ".", "daspp_24", "=", "atrous_conv", "(", "num_features", "+", "num_features", "//", "2", "+", "feat_out_channels", "[", "2", "]", ",", "num_features", "//", "4", ",", "24", ")", "\n", "self", ".", "daspp_conv", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "+", "num_features", "//", "2", "+", "num_features", "//", "4", ",", "num_features", "//", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "reduc8x8", "=", "reduction_1x1", "(", "num_features", "//", "4", ",", "num_features", "//", "4", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg8x8", "=", "local_planar_guidance", "(", "8", ")", "\n", "\n", "self", ".", "upconv3", "=", "upconv", "(", "num_features", "//", "4", ",", "num_features", "//", "4", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "4", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "4", "+", "feat_out_channels", "[", "1", "]", "+", "1", ",", "num_features", "//", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.densenet": [[177, 236], ["len", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.batch_norm", "tensorflow.batch_norm", "tensorflow.nn.relu", "tensorflow.nn.relu", "skips.append", "tensorflow.max_pool2d", "tensorflow.max_pool2d", "skips.append", "range", "bts.BtsModel.dense_block", "bts.BtsModel.dense_block", "bts.BtsModel.transition_block", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.batch_norm", "tensorflow.batch_norm", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.l2_regularizer", "tensorflow.l2_regularizer", "skips.append", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.dense_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.dense_block", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.transition_block"], ["nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "reduc4x4", "=", "reduction_1x1", "(", "num_features", "//", "4", ",", "num_features", "//", "8", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg4x4", "=", "local_planar_guidance", "(", "4", ")", "\n", "\n", "self", ".", "upconv2", "=", "upconv", "(", "num_features", "//", "4", ",", "num_features", "//", "8", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "//", "8", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1.1e-5", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "8", "+", "feat_out_channels", "[", "0", "]", "+", "1", ",", "num_features", "//", "8", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "self", ".", "reduc2x2", "=", "reduction_1x1", "(", "num_features", "//", "8", ",", "num_features", "//", "16", ",", "self", ".", "params", ".", "max_depth", ")", "\n", "self", ".", "lpg2x2", "=", "local_planar_guidance", "(", "2", ")", "\n", "\n", "self", ".", "upconv1", "=", "upconv", "(", "num_features", "//", "8", ",", "num_features", "//", "16", ")", "\n", "self", ".", "reduc1x1", "=", "reduction_1x1", "(", "num_features", "//", "16", ",", "num_features", "//", "32", ",", "self", ".", "params", ".", "max_depth", ",", "is_final", "=", "True", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "16", "+", "4", ",", "num_features", "//", "16", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "get_depth", "=", "torch", ".", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "num_features", "//", "16", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "features", ",", "focal", ")", ":", "\n", "        ", "skip0", ",", "skip1", ",", "skip2", ",", "skip3", "=", "features", "[", "0", "]", ",", "features", "[", "1", "]", ",", "features", "[", "2", "]", ",", "features", "[", "3", "]", "\n", "dense_features", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "features", "[", "4", "]", ")", "\n", "upconv5", "=", "self", ".", "upconv5", "(", "dense_features", ")", "# H/16", "\n", "upconv5", "=", "self", ".", "bn5", "(", "upconv5", ")", "\n", "concat5", "=", "torch", ".", "cat", "(", "[", "upconv5", ",", "skip3", "]", ",", "dim", "=", "1", ")", "\n", "iconv5", "=", "self", ".", "conv5", "(", "concat5", ")", "\n", "\n", "upconv4", "=", "self", ".", "upconv4", "(", "iconv5", ")", "# H/8", "\n", "upconv4", "=", "self", ".", "bn4", "(", "upconv4", ")", "\n", "concat4", "=", "torch", ".", "cat", "(", "[", "upconv4", ",", "skip2", "]", ",", "dim", "=", "1", ")", "\n", "iconv4", "=", "self", ".", "conv4", "(", "concat4", ")", "\n", "iconv4", "=", "self", ".", "bn4_2", "(", "iconv4", ")", "\n", "\n", "daspp_3", "=", "self", ".", "daspp_3", "(", "iconv4", ")", "\n", "concat4_2", "=", "torch", ".", "cat", "(", "[", "concat4", ",", "daspp_3", "]", ",", "dim", "=", "1", ")", "\n", "daspp_6", "=", "self", ".", "daspp_6", "(", "concat4_2", ")", "\n", "concat4_3", "=", "torch", ".", "cat", "(", "[", "concat4_2", ",", "daspp_6", "]", ",", "dim", "=", "1", ")", "\n", "daspp_12", "=", "self", ".", "daspp_12", "(", "concat4_3", ")", "\n", "concat4_4", "=", "torch", ".", "cat", "(", "[", "concat4_3", ",", "daspp_12", "]", ",", "dim", "=", "1", ")", "\n", "daspp_18", "=", "self", ".", "daspp_18", "(", "concat4_4", ")", "\n", "concat4_5", "=", "torch", ".", "cat", "(", "[", "concat4_4", ",", "daspp_18", "]", ",", "dim", "=", "1", ")", "\n", "daspp_24", "=", "self", ".", "daspp_24", "(", "concat4_5", ")", "\n", "concat4_daspp", "=", "torch", ".", "cat", "(", "[", "iconv4", ",", "daspp_3", ",", "daspp_6", ",", "daspp_12", ",", "daspp_18", ",", "daspp_24", "]", ",", "dim", "=", "1", ")", "\n", "daspp_feat", "=", "self", ".", "daspp_conv", "(", "concat4_daspp", ")", "\n", "\n", "reduc8x8", "=", "self", ".", "reduc8x8", "(", "daspp_feat", ")", "\n", "plane_normal_8x8", "=", "reduc8x8", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_8x8", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_8x8", ",", "2", ",", "1", ")", "\n", "plane_dist_8x8", "=", "reduc8x8", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_8x8", "=", "torch", ".", "cat", "(", "[", "plane_normal_8x8", ",", "plane_dist_8x8", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_8x8", "=", "self", ".", "lpg8x8", "(", "plane_eq_8x8", ",", "focal", ")", "\n", "depth_8x8_scaled", "=", "depth_8x8", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "depth_8x8_scaled_ds", "=", "torch_nn_func", ".", "interpolate", "(", "depth_8x8_scaled", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "upconv3", "=", "self", ".", "upconv3", "(", "daspp_feat", ")", "# H/4", "\n", "upconv3", "=", "self", ".", "bn3", "(", "upconv3", ")", "\n", "concat3", "=", "torch", ".", "cat", "(", "[", "upconv3", ",", "skip1", ",", "depth_8x8_scaled_ds", "]", ",", "dim", "=", "1", ")", "\n", "iconv3", "=", "self", ".", "conv3", "(", "concat3", ")", "\n", "\n", "reduc4x4", "=", "self", ".", "reduc4x4", "(", "iconv3", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts": [[237, 346], ["tensorflow.arg_scope", "tensorflow.arg_scope", "bts.BtsModel.upconv"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.upconv"], ["plane_normal_4x4", "=", "reduc4x4", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_4x4", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_4x4", ",", "2", ",", "1", ")", "\n", "plane_dist_4x4", "=", "reduc4x4", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_4x4", "=", "torch", ".", "cat", "(", "[", "plane_normal_4x4", ",", "plane_dist_4x4", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_4x4", "=", "self", ".", "lpg4x4", "(", "plane_eq_4x4", ",", "focal", ")", "\n", "depth_4x4_scaled", "=", "depth_4x4", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "depth_4x4_scaled_ds", "=", "torch_nn_func", ".", "interpolate", "(", "depth_4x4_scaled", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "upconv2", "=", "self", ".", "upconv2", "(", "iconv3", ")", "# H/2", "\n", "upconv2", "=", "self", ".", "bn2", "(", "upconv2", ")", "\n", "concat2", "=", "torch", ".", "cat", "(", "[", "upconv2", ",", "skip0", ",", "depth_4x4_scaled_ds", "]", ",", "dim", "=", "1", ")", "\n", "iconv2", "=", "self", ".", "conv2", "(", "concat2", ")", "\n", "\n", "reduc2x2", "=", "self", ".", "reduc2x2", "(", "iconv2", ")", "\n", "plane_normal_2x2", "=", "reduc2x2", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "plane_normal_2x2", "=", "torch_nn_func", ".", "normalize", "(", "plane_normal_2x2", ",", "2", ",", "1", ")", "\n", "plane_dist_2x2", "=", "reduc2x2", "[", ":", ",", "3", ",", ":", ",", ":", "]", "\n", "plane_eq_2x2", "=", "torch", ".", "cat", "(", "[", "plane_normal_2x2", ",", "plane_dist_2x2", ".", "unsqueeze", "(", "1", ")", "]", ",", "1", ")", "\n", "depth_2x2", "=", "self", ".", "lpg2x2", "(", "plane_eq_2x2", ",", "focal", ")", "\n", "depth_2x2_scaled", "=", "depth_2x2", ".", "unsqueeze", "(", "1", ")", "/", "self", ".", "params", ".", "max_depth", "\n", "\n", "upconv1", "=", "self", ".", "upconv1", "(", "iconv2", ")", "\n", "reduc1x1", "=", "self", ".", "reduc1x1", "(", "upconv1", ")", "\n", "concat1", "=", "torch", ".", "cat", "(", "[", "upconv1", ",", "reduc1x1", ",", "depth_2x2_scaled", ",", "depth_4x4_scaled", ",", "depth_8x8_scaled", "]", ",", "dim", "=", "1", ")", "\n", "iconv1", "=", "self", ".", "conv1", "(", "concat1", ")", "\n", "final_depth", "=", "self", ".", "params", ".", "max_depth", "*", "self", ".", "get_depth", "(", "iconv1", ")", "\n", "if", "self", ".", "params", ".", "dataset", "==", "'kitti'", ":", "\n", "            ", "final_depth", "=", "final_depth", "*", "focal", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ".", "float", "(", ")", "/", "715.0873", "\n", "\n", "", "return", "depth_8x8_scaled", ",", "depth_4x4_scaled", ",", "depth_2x2_scaled", ",", "reduc1x1", ",", "final_depth", "\n", "\n", "", "", "class", "encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "params", "=", "params", "\n", "import", "torchvision", ".", "models", "as", "models", "\n", "if", "params", ".", "encoder", "==", "'densenet121_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "densenet121", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_names", "=", "[", "'relu0'", ",", "'pool0'", ",", "'transition1'", ",", "'transition2'", ",", "'norm5'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "64", ",", "128", ",", "256", ",", "1024", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'densenet161_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "densenet161", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_names", "=", "[", "'relu0'", ",", "'pool0'", ",", "'transition1'", ",", "'transition2'", ",", "'norm5'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "96", ",", "96", ",", "192", ",", "384", ",", "2208", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnet50_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnet101_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnext50_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnext50_32x4d", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'resnext101_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "resnext101_32x8d", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "feat_names", "=", "[", "'relu'", ",", "'layer1'", ",", "'layer2'", ",", "'layer3'", ",", "'layer4'", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "64", ",", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "", "elif", "params", ".", "encoder", "==", "'mobilenetv2_bts'", ":", "\n", "            ", "self", ".", "base_model", "=", "models", ".", "mobilenet_v2", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "feat_inds", "=", "[", "2", ",", "4", ",", "7", ",", "11", ",", "19", "]", "\n", "self", ".", "feat_out_channels", "=", "[", "16", ",", "24", ",", "32", ",", "64", ",", "1280", "]", "\n", "self", ".", "feat_names", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Not supported encoder: {}'", ".", "format", "(", "params", ".", "encoder", ")", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feature", "=", "x", "\n", "skip_feat", "=", "[", "]", "\n", "i", "=", "1", "\n", "for", "k", ",", "v", "in", "self", ".", "base_model", ".", "_modules", ".", "items", "(", ")", ":", "\n", "            ", "if", "'fc'", "in", "k", "or", "'avgpool'", "in", "k", ":", "\n", "                ", "continue", "\n", "", "feature", "=", "v", "(", "feature", ")", "\n", "if", "self", ".", "params", ".", "encoder", "==", "'mobilenetv2_bts'", ":", "\n", "                ", "if", "i", "==", "2", "or", "i", "==", "4", "or", "i", "==", "7", "or", "i", "==", "11", "or", "i", "==", "19", ":", "\n", "                    ", "skip_feat", ".", "append", "(", "feature", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "any", "(", "x", "in", "k", "for", "x", "in", "self", ".", "feat_names", ")", ":", "\n", "                    ", "skip_feat", ".", "append", "(", "feature", ")", "\n", "", "", "i", "=", "i", "+", "1", "\n", "", "return", "skip_feat", "\n", "\n", "\n", "", "", "class", "BtsModel", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "BtsModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "(", "params", ")", "\n", "self", ".", "decoder", "=", "bts", "(", "params", ",", "self", ".", "encoder", ".", "feat_out_channels", ",", "params", ".", "bts_size", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "focal", ")", ":", "\n", "        ", "skip_feat", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "self", ".", "decoder", "(", "skip_feat", ",", "focal", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_resnet101_bts": [[347, 371], ["tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "resnet_v1_101", "tensorflow.arg_scope", "tensorflow.arg_scope", "bts.BtsModel.bts", "tensorflow.l2_regularizer", "tensorflow.l2_regularizer", "tensorflow.variance_scaling_initializer", "tensorflow.variance_scaling_initializer"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_101", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_resnet50_bts": [[372, 396], ["tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "resnet_v1_50", "tensorflow.arg_scope", "tensorflow.arg_scope", "bts.BtsModel.bts", "tensorflow.l2_regularizer", "tensorflow.l2_regularizer", "tensorflow.variance_scaling_initializer", "tensorflow.variance_scaling_initializer"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.resnet_v1.resnet_v1_50", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_densenet121_bts": [[397, 406], ["tensorflow.variable_scope", "tensorflow.variable_scope", "bts.BtsModel.densenet", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "bts.BtsModel.bts"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.densenet", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_densenet161_bts": [[407, 416], ["tensorflow.variable_scope", "tensorflow.variable_scope", "bts.BtsModel.densenet", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.arg_scope", "tensorflow.arg_scope", "bts.BtsModel.bts"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.densenet", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.bts"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_model": [[417, 431], ["tensorflow.variable_scope", "tensorflow.variable_scope", "bts.BtsModel.build_densenet161_bts", "bts.BtsModel.build_densenet121_bts", "bts.BtsModel.build_resnet101_bts", "bts.BtsModel.build_resnet50_bts"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_densenet161_bts", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_densenet121_bts", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_resnet101_bts", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_resnet50_bts"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_losses": [[432, 447], ["tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "methods", ["None"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts.BtsModel.build_summaries": [[448, 459], ["tensorflow.device", "tensorflow.device", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.where", "tensorflow.where", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image"], "methods", ["None"], []], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_sequence.test_sequence": [[59, 172], ["glob.glob", "image_files.sort", "len", "tensorflow.placeholder", "tensorflow.constant", "BtsModel", "tensorflow.ConfigProto", "tensorflow.Session", "tf.Session.run", "tf.Session.run", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver", "os.path.join", "image_files.append", "print", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "tensorflow.device", "tf.train.Saver.restore", "print", "print", "time.time", "tqdm", "print", "print", "os.path.exists", "range", "cv2.imread", "input_image.astype.astype", "numpy.reshape", "tf.Session.run", "depth.squeeze", "pred_8x8.squeeze.squeeze", "pred_4x4.squeeze.squeeze", "pred_2x2.squeeze.squeeze", "pred_1x1.squeeze.squeeze", "os.path.join", "matplotlib.imsave", "os.path.join", "cv2.imwrite", "os.path.join", "matplotlib.imsave", "os.path.join", "matplotlib.imsave", "os.path.join", "matplotlib.imsave", "os.path.join", "matplotlib.imsave", "print", "time.time", "print", "os.path.dirname", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "int", "int", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "numpy.log10", "str", "image_files[].split", "image_files[].split", "image_files[].split", "image_files[].split", "image_files[].split", "image_files[].split"], "function", ["None"], ["", "def", "test_sequence", "(", "params", ")", ":", "\n", "    ", "image_files", "=", "[", "]", "\n", "\n", "for", "filename", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "image_path", ",", "'*.png'", ")", ")", ":", "\n", "        ", "image_files", ".", "append", "(", "filename", ")", "\n", "\n", "", "image_files", ".", "sort", "(", ")", "\n", "\n", "num_test_samples", "=", "len", "(", "image_files", ")", "\n", "if", "num_test_samples", "==", "0", ":", "\n", "        ", "print", "(", "\"No images found! Program abort.\"", ")", "\n", "return", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'nyu'", ":", "\n", "        ", "focal", "=", "518.8579", "\n", "", "elif", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "        ", "focal", "=", "718.856", "# Visualize purpose only", "\n", "", "elif", "args", ".", "dataset", "==", "''", "and", "args", ".", "focal", "==", "-", "1", ":", "\n", "        ", "print", "(", "'Custom dataset needs to specify focal length with --focal'", ")", "\n", "return", "\n", "\n", "", "image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "1", ",", "args", ".", "input_height", ",", "args", ".", "input_width", ",", "3", "]", ")", "\n", "focals", "=", "tf", ".", "constant", "(", "[", "focal", "]", ")", "\n", "\n", "model", "=", "BtsModel", "(", "params", ",", "'test'", ",", "image", ",", "None", ",", "focal", "=", "focals", ",", "bn_training", "=", "False", ")", "\n", "\n", "# SESSION", "\n", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "\n", "# INIT", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "coordinator", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coordinator", ")", "\n", "\n", "# SAVER", "\n", "train_saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "        ", "restore_path", "=", "args", ".", "checkpoint_path", "\n", "\n", "# RESTORE", "\n", "train_saver", ".", "restore", "(", "sess", ",", "restore_path", ")", "\n", "\n", "print", "(", "'now testing {} files for model {}'", ".", "format", "(", "num_test_samples", ",", "args", ".", "checkpoint_path", ")", ")", "\n", "\n", "print", "(", "'Saving result pngs'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "args", ".", "out_path", ")", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "os", ".", "mkdir", "(", "args", ".", "out_path", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/depth'", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/reduc1x1'", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/lpg2x2'", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/lpg4x4'", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/lpg8x8'", ")", "\n", "os", ".", "mkdir", "(", "args", ".", "out_path", "+", "'/rgb'", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "                ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                    ", "raise", "\n", "\n", "", "", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "s", "in", "tqdm", "(", "range", "(", "num_test_samples", ")", ")", ":", "\n", "            ", "input_image", "=", "cv2", ".", "imread", "(", "image_files", "[", "s", "]", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'kitti'", ":", "\n", "                ", "height", ",", "width", ",", "ch", "=", "input_image", ".", "shape", "\n", "top_margin", "=", "int", "(", "height", "-", "352", ")", "\n", "left_margin", "=", "int", "(", "(", "width", "-", "1216", ")", "/", "2", ")", "\n", "input_image", "=", "input_image", "[", "top_margin", ":", "top_margin", "+", "352", ",", "left_margin", ":", "left_margin", "+", "1216", ",", ":", "]", "\n", "\n", "", "input_image_original", "=", "input_image", "\n", "input_image", "=", "input_image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# Normalize image", "\n", "input_image", "[", ":", ",", ":", ",", "0", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "0", "]", "-", "103.939", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "1", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "1", "]", "-", "116.779", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "2", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "2", "]", "-", "123.68", ")", "*", "0.017", "\n", "\n", "input_images", "=", "np", ".", "reshape", "(", "input_image", ",", "(", "1", ",", "args", ".", "input_height", ",", "args", ".", "input_width", ",", "3", ")", ")", "\n", "\n", "depth", ",", "pred_8x8", ",", "pred_4x4", ",", "pred_2x2", ",", "pred_1x1", "=", "sess", ".", "run", "(", "\n", "[", "model", ".", "depth_est", ",", "model", ".", "lpg8x8", ",", "model", ".", "lpg4x4", ",", "model", ".", "lpg2x2", ",", "model", ".", "reduc1x1", "]", ",", "feed_dict", "=", "{", "image", ":", "input_images", "}", ")", "\n", "\n", "pred_depth", "=", "depth", ".", "squeeze", "(", ")", "\n", "pred_8x8", "=", "pred_8x8", ".", "squeeze", "(", ")", "\n", "pred_4x4", "=", "pred_4x4", ".", "squeeze", "(", ")", "\n", "pred_2x2", "=", "pred_2x2", ".", "squeeze", "(", ")", "\n", "pred_1x1", "=", "pred_1x1", ".", "squeeze", "(", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'depth'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "plt", ".", "imsave", "(", "save_path", ",", "np", ".", "log10", "(", "pred_depth", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'rgb'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "input_image_original", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'reduc1x1'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "plt", ".", "imsave", "(", "save_path", ",", "np", ".", "log10", "(", "pred_1x1", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'lpg2x2'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "plt", ".", "imsave", "(", "save_path", ",", "np", ".", "log10", "(", "pred_2x2", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'lpg4x4'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "plt", ".", "imsave", "(", "save_path", ",", "np", ".", "log10", "(", "pred_4x4", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'lpg8x8'", ",", "image_files", "[", "s", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "plt", ".", "imsave", "(", "save_path", ",", "np", ".", "log10", "(", "pred_8x8", ")", ",", "cmap", "=", "'Greys'", ")", "\n", "\n", "print", "(", "'{}/{}'", ".", "format", "(", "s", ",", "num_test_samples", ")", ")", "\n", "\n", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "'Elapesed time: %s'", "%", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", "'done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_sequence.main": [[173, 188], ["bts_parameters", "bts_sequence.test_sequence"], "function", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_sequence.test_sequence"], ["", "", "def", "main", "(", "_", ")", ":", "\n", "\n", "    ", "params", "=", "bts_parameters", "(", "\n", "encoder", "=", "args", ".", "encoder", ",", "\n", "height", "=", "args", ".", "input_height", ",", "\n", "width", "=", "args", ".", "input_width", ",", "\n", "batch_size", "=", "None", ",", "\n", "dataset", "=", "None", ",", "\n", "max_depth", "=", "args", ".", "max_depth", ",", "\n", "num_gpus", "=", "None", ",", "\n", "num_threads", "=", "None", ",", "\n", "num_epochs", "=", "None", ",", "\n", ")", "\n", "\n", "test_sequence", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.__init__": [[172, 227], ["PySide2.QtWidgets.QWidget.__init__", "bts_live_3d.GLWidget", "PySide2.QtWidgets.QVBoxLayout", "PySide2.QtWidgets.QGridLayout", "PySide2.QtWidgets.QLabel", "bts_live_3d.Window.inputViewer.setPixmap", "PySide2.QtWidgets.QLabel", "bts_live_3d.Window.outputViewer.setPixmap", "PySide2.QtWidgets.QFrame", "PySide2.QtWidgets.QVBoxLayout", "PySide2.QtWidgets.QFrame.setLayout", "PySide2.QtWidgets.QVBoxLayout.addWidget", "PySide2.QtWidgets.QVBoxLayout.addWidget", "PySide2.QtWidgets.QGridLayout.addWidget", "PySide2.QtWidgets.QGridLayout.addWidget", "PySide2.QtWidgets.QGridLayout.setColumnStretch", "PySide2.QtWidgets.QVBoxLayout.addLayout", "PySide2.QtWidgets.QHBoxLayout", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button2.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button4.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QPushButton", "bts_live_3d.Window.button6.clicked.connect", "PySide2.QtWidgets.QHBoxLayout.addWidget", "PySide2.QtWidgets.QVBoxLayout.addLayout", "bts_live_3d.Window.setLayout", "bts_live_3d.Window.setWindowTitle", "bts_live_3d.Window.updateInput.connect", "PySide2.QtGui.QPixmap", "PySide2.QtGui.QPixmap", "bts_live_3d.Window.tr", "bts_live_3d.Window.glWidget.rgb.any", "bts_live_3d.Window.glWidget.depth.any", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.outputViewer.setPixmap", "PySide2.QtGui.QPixmap.fromImage", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.np_to_qimage", "bts_live_3d.np_to_qimage", "plasma"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["self", ".", "button2", "=", "QtWidgets", ".", "QPushButton", "(", "\"Webcam\"", ")", "\n", "self", ".", "button2", ".", "clicked", ".", "connect", "(", "self", ".", "loadCamera", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button2", ")", "\n", "\n", "self", ".", "button4", "=", "QtWidgets", ".", "QPushButton", "(", "\"Pause\"", ")", "\n", "self", ".", "button4", ".", "clicked", ".", "connect", "(", "self", ".", "loadImage", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button4", ")", "\n", "\n", "self", ".", "button6", "=", "QtWidgets", ".", "QPushButton", "(", "\"Refresh\"", ")", "\n", "self", ".", "button6", ".", "clicked", ".", "connect", "(", "self", ".", "updateCloud", ")", "\n", "toolsLayout", ".", "addWidget", "(", "self", ".", "button6", ")", "\n", "\n", "mainLayout", ".", "addLayout", "(", "toolsLayout", ")", "\n", "\n", "self", ".", "setLayout", "(", "mainLayout", ")", "\n", "self", ".", "setWindowTitle", "(", "self", ".", "tr", "(", "\"BTS Live\"", ")", ")", "\n", "\n", "# Signals", "\n", "self", ".", "updateInput", ".", "connect", "(", "self", ".", "update_input", ")", "\n", "\n", "# Default example", "\n", "if", "self", ".", "glWidget", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "glWidget", ".", "depth", ".", "any", "(", ")", ":", "\n", "            ", "img", "=", "(", "self", ".", "glWidget", ".", "rgb", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "img", ")", ")", ")", "\n", "coloredDepth", "=", "(", "plasma", "(", "self", ".", "glWidget", ".", "depth", "[", ":", ",", ":", ",", "0", "]", ")", "[", ":", ",", ":", ",", ":", "3", "]", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "coloredDepth", ")", ")", ")", "\n", "\n", "", "", "def", "loadModel", "(", "self", ")", ":", "\n", "        ", "QtGui", ".", "QGuiApplication", ".", "setOverrideCursor", "(", "QtCore", ".", "Qt", ".", "WaitCursor", ")", "\n", "tic", "(", ")", "\n", "self", ".", "model", "=", "load_model", "(", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "toc", "(", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "QtGui", ".", "QGuiApplication", ".", "restoreOverrideCursor", "(", ")", "\n", "\n", "", "def", "loadCamera", "(", "self", ")", ":", "\n", "        ", "tic", "(", ")", "\n", "self", ".", "model", "=", "load_model", "(", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "toc", "(", ")", "\n", "self", ".", "capture", "=", "cv2", ".", "VideoCapture", "(", "0", ")", "\n", "self", ".", "updateInput", ".", "emit", "(", ")", "\n", "\n", "", "def", "loadVideoFile", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "cv2", ".", "VideoCapture", "(", "'video.mp4'", ")", "\n", "self", ".", "updateInput", ".", "emit", "(", ")", "\n", "\n", "", "def", "loadImage", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "None", "\n", "img", "=", "(", "self", ".", "glWidget", ".", "rgb", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "img", ")", ")", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n", "", "def", "loadImageFile", "(", "self", ")", ":", "\n", "        ", "self", ".", "capture", "=", "None", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.loadModel": [[228, 236], ["PySide2.QtGui.QGuiApplication.setOverrideCursor", "bts_live_3d.tic", "bts_live_3d.load_model", "print", "bts_live_3d.toc", "bts_live_3d.Window.updateCloud", "PySide2.QtGui.QGuiApplication.restoreOverrideCursor"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.tic", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.load_model", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.toc", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["filename", "=", "QtWidgets", ".", "QFileDialog", ".", "getOpenFileName", "(", "None", ",", "'Select image'", ",", "''", ",", "self", ".", "tr", "(", "'Image files (*.jpg *.png)'", ")", ")", "[", "0", "]", "\n", "img", "=", "QtGui", ".", "QImage", "(", "filename", ")", ".", "scaledToHeight", "(", "height_rgb", ")", "\n", "xstart", "=", "0", "\n", "if", "img", ".", "width", "(", ")", ">", "width_rgb", ":", "xstart", "=", "(", "img", ".", "width", "(", ")", "-", "width_rgb", ")", "//", "2", "\n", "img", "=", "img", ".", "copy", "(", "xstart", ",", "0", ",", "xstart", "+", "width_rgb", ",", "height_rgb", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "img", ")", ")", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.loadCamera": [[237, 244], ["bts_live_3d.tic", "bts_live_3d.load_model", "print", "bts_live_3d.toc", "cv2.VideoCapture", "bts_live_3d.Window.updateInput.emit"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.tic", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.load_model", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.toc"], ["", "def", "update_input", "(", "self", ")", ":", "\n", "# Don't update anymore if no capture device is set", "\n", "        ", "if", "self", ".", "capture", "==", "None", ":", "\n", "            ", "return", "\n", "\n", "# Capture a frame", "\n", "", "ret", ",", "frame", "=", "self", ".", "capture", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.loadVideoFile": [[245, 248], ["cv2.VideoCapture", "bts_live_3d.Window.updateInput.emit"], "methods", ["None"], ["# Loop video playback if current stream is video file", "\n", "if", "not", "ret", ":", "\n", "            ", "self", ".", "capture", ".", "set", "(", "cv2", ".", "CAP_PROP_POS_FRAMES", ",", "0", ")", "\n", "ret", ",", "frame", "=", "self", ".", "capture", ".", "read", "(", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.loadImage": [[249, 254], ["bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.np_to_qimage"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["\n", "# Prepare image and show in UI", "\n", "", "frame_ud", "=", "cv2", ".", "remap", "(", "frame", ",", "map1", ",", "map2", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "frame", "=", "cv2", ".", "cvtColor", "(", "frame_ud", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "image", "=", "np_to_qimage", "(", "frame", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "image", ")", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.loadImageFile": [[255, 265], ["PySide2.QtGui.QImage().scaledToHeight", "img.copy.copy.copy", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "PySide2.QtWidgets.QFileDialog.getOpenFileName", "img.copy.copy.width", "PySide2.QtGui.QPixmap.fromImage", "bts_live_3d.Window.tr", "PySide2.QtGui.QImage", "img.copy.copy.width"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["\n", "# Update the point cloud", "\n", "self", ".", "updateCloud", "(", ")", "\n", "\n", "", "def", "updateCloud", "(", "self", ")", ":", "\n", "        ", "rgb8", "=", "qimage_to_np", "(", "self", ".", "inputViewer", ".", "pixmap", "(", ")", ".", "toImage", "(", ")", ")", "\n", "self", ".", "glWidget", ".", "rgb", "=", "(", "rgb8", "[", ":", ",", ":", ",", ":", "3", "]", "/", "255", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "if", "self", ".", "model", ":", "\n", "            ", "input_image", "=", "rgb8", "[", ":", ",", ":", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.update_input": [[266, 287], ["bts_live_3d.Window.capture.read", "cv2.remap", "cv2.cvtColor", "bts_live_3d.np_to_qimage", "bts_live_3d.Window.inputViewer.setPixmap", "bts_live_3d.Window.updateCloud", "bts_live_3d.Window.capture.set", "bts_live_3d.Window.capture.read", "PySide2.QtGui.QPixmap.fromImage"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud"], ["# Normalize image", "\n", "input_image", "[", ":", ",", ":", ",", "0", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "0", "]", "-", "123.68", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "1", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "1", "]", "-", "116.78", ")", "*", "0.017", "\n", "input_image", "[", ":", ",", ":", ",", "2", "]", "=", "(", "input_image", "[", ":", ",", ":", ",", "2", "]", "-", "103.94", ")", "*", "0.017", "\n", "\n", "input_image_cropped", "=", "input_image", "[", "32", ":", "-", "1", "-", "31", ",", "32", ":", "-", "1", "-", "31", ",", ":", "]", "\n", "\n", "input_images", "=", "np", ".", "expand_dims", "(", "input_image_cropped", ",", "axis", "=", "0", ")", "\n", "input_images", "=", "np", ".", "transpose", "(", "input_images", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "image", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "input_images", ")", ")", ".", "cuda", "(", ")", "\n", "focal", "=", "Variable", "(", "torch", ".", "tensor", "(", "[", "518.8579", "]", ")", ")", ".", "cuda", "(", ")", "\n", "# Predict", "\n", "lpg8x8", ",", "lpg4x4", ",", "lpg2x2", ",", "reduc1x1", ",", "depth_cropped", "=", "self", ".", "model", "(", "image", ",", "focal", ")", "\n", "\n", "", "depth", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "depth", "[", "32", ":", "-", "1", "-", "31", ",", "32", ":", "-", "1", "-", "31", "]", "=", "depth_cropped", "[", "0", "]", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", "/", "args", ".", "max_depth", "\n", "coloredDepth", "=", "(", "greys", "(", "np", ".", "log10", "(", "depth", "*", "args", ".", "max_depth", ")", ")", "[", ":", ",", ":", ",", ":", "3", "]", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", ".", "fromImage", "(", "np_to_qimage", "(", "coloredDepth", ")", ")", ")", "\n", "self", ".", "glWidget", ".", "depth", "=", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.Window.updateCloud": [[288, 321], ["bts_live_3d.qimage_to_np", "bts_live_3d.Window.glWidget.updateRGBD", "bts_live_3d.Window.glWidget.updateGL", "PySide2.QtCore.QTimer.singleShot", "bts_live_3d.Window.inputViewer.pixmap().toImage", "rgb8[].astype", "numpy.expand_dims", "numpy.zeros", "bts_live_3d.Window.outputViewer.setPixmap", "graph.as_default", "sess.run", "depth_cropped[].squeeze", "PySide2.QtGui.QPixmap.fromImage", "numpy.zeros", "bts_live_3d.Window.inputViewer.pixmap", "bts_live_3d.np_to_qimage", "greys", "numpy.log10"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.qimage_to_np", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.updateRGBD", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage"], ["", "else", ":", "\n", "            ", "self", ".", "glWidget", ".", "depth", "=", "0.5", "+", "np", ".", "zeros", "(", "(", "height_rgb", "//", "2", ",", "width_rgb", "//", "2", ",", "1", ")", ")", "\n", "\n", "", "self", ".", "glWidget", ".", "updateRGBD", "(", ")", "\n", "self", ".", "glWidget", ".", "updateGL", "(", ")", "\n", "\n", "# Update to next frame if we are live", "\n", "QtCore", ".", "QTimer", ".", "singleShot", "(", "10", ",", "self", ".", "updateInput", ")", "\n", "\n", "\n", "", "", "class", "GLWidget", "(", "QtOpenGL", ".", "QGLWidget", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "QtOpenGL", ".", "QGLWidget", ".", "__init__", "(", "self", ",", "parent", ")", "\n", "\n", "self", ".", "object", "=", "0", "\n", "self", ".", "xRot", "=", "5040", "\n", "self", ".", "yRot", "=", "40", "\n", "self", ".", "zRot", "=", "0", "\n", "self", ".", "zoomLevel", "=", "9", "\n", "\n", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", ")", "\n", "\n", "self", ".", "green", "=", "QtGui", ".", "QColor", ".", "fromCmykF", "(", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ")", "\n", "self", ".", "black", "=", "QtGui", ".", "QColor", ".", "fromCmykF", "(", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ")", "\n", "\n", "# Precompute for world coordinates", "\n", "self", ".", "xx", ",", "self", ".", "yy", "=", "self", ".", "worldCoords", "(", "width", "=", "width_rgb", ",", "height", "=", "height_rgb", ")", "\n", "\n", "self", ".", "rgb", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "depth", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "col_vbo", "=", "None", "\n", "self", ".", "pos_vbo", "=", "None", "\n", "if", "self", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "detph", ".", "any", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__": [[324, 348], ["PySide2.QtOpenGL.QGLWidget.__init__", "PySide2.QtCore.QPoint", "PySide2.QtGui.QColor.fromCmykF", "PySide2.QtGui.QColor.fromCmykF", "bts_live_3d.GLWidget.worldCoords", "numpy.zeros", "numpy.zeros", "bts_live_3d.GLWidget.rgb.any", "bts_live_3d.GLWidget.detph.any", "bts_live_3d.GLWidget.updateRGBD"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.__init__", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.worldCoords", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.updateRGBD"], ["", "", "def", "xRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "xRot", "\n", "\n", "", "def", "yRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "yRot", "\n", "\n", "", "def", "zRotation", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "zRot", "\n", "\n", "", "def", "minimumSizeHint", "(", "self", ")", ":", "\n", "        ", "return", "QtCore", ".", "QSize", "(", "640", ",", "480", ")", "\n", "\n", "", "def", "sizeHint", "(", "self", ")", ":", "\n", "        ", "return", "QtCore", ".", "QSize", "(", "640", ",", "480", ")", "\n", "\n", "", "def", "setXRotation", "(", "self", ",", "angle", ")", ":", "\n", "        ", "if", "angle", "!=", "self", ".", "xRot", ":", "\n", "            ", "self", ".", "xRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"xRotationChanged(int)\"", ")", ",", "angle", ")", "\n", "self", ".", "updateGL", "(", ")", "\n", "\n", "", "", "def", "setYRotation", "(", "self", ",", "angle", ")", ":", "\n", "        ", "if", "angle", "!=", "self", ".", "yRot", ":", "\n", "            ", "self", ".", "yRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"yRotationChanged(int)\"", ")", ",", "angle", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.xRotation": [[349, 351], ["None"], "methods", ["None"], ["self", ".", "updateGL", "(", ")", "\n", "\n", "", "", "def", "setZRotation", "(", "self", ",", "angle", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.yRotation": [[352, 354], ["None"], "methods", ["None"], ["        ", "if", "angle", "!=", "self", ".", "zRot", ":", "\n", "            ", "self", ".", "zRot", "=", "angle", "\n", "self", ".", "emit", "(", "QtCore", ".", "SIGNAL", "(", "\"zRotationChanged(int)\"", ")", ",", "angle", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.zRotation": [[355, 357], ["None"], "methods", ["None"], ["self", ".", "updateGL", "(", ")", "\n", "\n", "", "", "def", "resizeGL", "(", "self", ",", "width", ",", "height", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.minimumSizeHint": [[358, 360], ["PySide2.QtCore.QSize"], "methods", ["None"], ["        ", "GL", ".", "glViewport", "(", "0", ",", "0", ",", "width", ",", "height", ")", "\n", "\n", "", "def", "mousePressEvent", "(", "self", ",", "event", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.sizeHint": [[361, 363], ["PySide2.QtCore.QSize"], "methods", ["None"], ["        ", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", "event", ".", "pos", "(", ")", ")", "\n", "\n", "", "def", "mouseMoveEvent", "(", "self", ",", "event", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setXRotation": [[364, 369], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["        ", "dx", "=", "-", "(", "event", ".", "x", "(", ")", "-", "self", ".", "lastPos", ".", "x", "(", ")", ")", "\n", "dy", "=", "(", "event", ".", "y", "(", ")", "-", "self", ".", "lastPos", ".", "y", "(", ")", ")", "\n", "\n", "if", "event", ".", "buttons", "(", ")", "&", "QtCore", ".", "Qt", ".", "LeftButton", ":", "\n", "            ", "self", ".", "setXRotation", "(", "self", ".", "xRot", "+", "dy", ")", "\n", "self", ".", "setYRotation", "(", "self", ".", "yRot", "+", "dx", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setYRotation": [[370, 375], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["", "elif", "event", ".", "buttons", "(", ")", "&", "QtCore", ".", "Qt", ".", "RightButton", ":", "\n", "            ", "self", ".", "setXRotation", "(", "self", ".", "xRot", "+", "dy", ")", "\n", "self", ".", "setZRotation", "(", "self", ".", "zRot", "+", "dx", ")", "\n", "\n", "", "self", ".", "lastPos", "=", "QtCore", ".", "QPoint", "(", "event", ".", "pos", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setZRotation": [[376, 381], ["bts_live_3d.GLWidget.emit", "bts_live_3d.GLWidget.updateGL", "PySide2.QtCore.SIGNAL"], "methods", ["None"], ["", "def", "wheelEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "numDegrees", "=", "event", ".", "delta", "(", ")", "/", "8", "\n", "numSteps", "=", "numDegrees", "/", "15", "\n", "self", ".", "zoomLevel", "=", "self", ".", "zoomLevel", "+", "numSteps", "\n", "event", ".", "accept", "(", ")", "\n", "self", ".", "updateGL", "(", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.resizeGL": [[382, 384], ["OpenGL.GL.glViewport"], "methods", ["None"], ["\n", "", "def", "initializeGL", "(", "self", ")", ":", "\n", "        ", "self", ".", "qglClearColor", "(", "self", ".", "black", ".", "darker", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.mousePressEvent": [[385, 387], ["PySide2.QtCore.QPoint", "event.pos"], "methods", ["None"], ["GL", ".", "glShadeModel", "(", "GL", ".", "GL_FLAT", ")", "\n", "GL", ".", "glEnable", "(", "GL", ".", "GL_DEPTH_TEST", ")", "\n", "GL", ".", "glEnable", "(", "GL", ".", "GL_CULL_FACE", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.mouseMoveEvent": [[388, 400], ["PySide2.QtCore.QPoint", "event.y", "bts_live_3d.GLWidget.lastPos.y", "event.buttons", "bts_live_3d.GLWidget.setXRotation", "bts_live_3d.GLWidget.setYRotation", "event.pos", "event.x", "bts_live_3d.GLWidget.lastPos.x", "event.buttons", "bts_live_3d.GLWidget.setXRotation", "bts_live_3d.GLWidget.setZRotation"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setXRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setYRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setXRotation", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.setZRotation"], ["\n", "VERTEX_SHADER", "=", "shaders", ".", "compileShader", "(", "\"\"\"#version 330\n        layout(location = 0) in vec3 position;\n        layout(location = 1) in vec3 color;\n        uniform mat4 mvp; out vec4 frag_color;\n        void main() {gl_Position = mvp * vec4(position, 1.0);frag_color = vec4(color, 1.0);}\"\"\"", ",", "GL", ".", "GL_VERTEX_SHADER", ")", "\n", "\n", "FRAGMENT_SHADER", "=", "shaders", ".", "compileShader", "(", "\"\"\"#version 330\n        in vec4 frag_color; out vec4 out_color;\n        void main() {out_color = frag_color;}\"\"\"", ",", "GL", ".", "GL_FRAGMENT_SHADER", ")", "\n", "\n", "self", ".", "shaderProgram", "=", "shaders", ".", "compileProgram", "(", "VERTEX_SHADER", ",", "FRAGMENT_SHADER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.wheelEvent": [[401, 407], ["event.accept", "bts_live_3d.GLWidget.updateGL", "event.delta"], "methods", ["None"], ["self", ".", "UNIFORM_LOCATIONS", "=", "{", "\n", "'position'", ":", "GL", ".", "glGetAttribLocation", "(", "self", ".", "shaderProgram", ",", "'position'", ")", ",", "\n", "'color'", ":", "GL", ".", "glGetAttribLocation", "(", "self", ".", "shaderProgram", ",", "'color'", ")", ",", "\n", "'mvp'", ":", "GL", ".", "glGetUniformLocation", "(", "self", ".", "shaderProgram", ",", "'mvp'", ")", ",", "\n", "}", "\n", "\n", "shaders", ".", "glUseProgram", "(", "self", ".", "shaderProgram", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.initializeGL": [[408, 433], ["bts_live_3d.GLWidget.qglClearColor", "OpenGL.GL.glShadeModel", "OpenGL.GL.glEnable", "OpenGL.GL.glEnable", "OpenGL.GL.shaders.compileShader", "OpenGL.GL.shaders.compileShader", "OpenGL.GL.shaders.compileProgram", "OpenGL.GL.shaders.glUseProgram", "bts_live_3d.GLWidget.black.darker", "OpenGL.GL.glGetAttribLocation", "OpenGL.GL.glGetAttribLocation", "OpenGL.GL.glGetUniformLocation"], "methods", ["None"], ["\n", "", "def", "paintGL", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "rgb", ".", "any", "(", ")", "and", "self", ".", "depth", ".", "any", "(", ")", ":", "\n", "            ", "GL", ".", "glClear", "(", "GL", ".", "GL_COLOR_BUFFER_BIT", "|", "GL", ".", "GL_DEPTH_BUFFER_BIT", ")", "\n", "self", ".", "drawObject", "(", ")", "\n", "\n", "", "", "def", "worldCoords", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "        ", "cx", ",", "cy", "=", "width", "/", "2", ",", "height", "/", "2", "\n", "fx", "=", "518.8579", "\n", "fy", "=", "518.8579", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "range", "(", "width", ")", ",", "height", ")", ",", "np", ".", "repeat", "(", "range", "(", "height", ")", ",", "width", ")", "\n", "xx", "=", "(", "xx", "-", "cx", ")", "/", "fx", "\n", "yy", "=", "(", "yy", "-", "cy", ")", "/", "fy", "\n", "return", "xx", ",", "yy", "\n", "\n", "", "def", "posFromDepth", "(", "self", ",", "depth", ")", ":", "\n", "        ", "length", "=", "depth", ".", "shape", "[", "0", "]", "*", "depth", ".", "shape", "[", "1", "]", "\n", "\n", "depth", "[", "edges", "(", "depth", ")", ">", "0.3", "]", "=", "1e6", "# Hide depth edges", "\n", "z", "=", "depth", ".", "reshape", "(", "length", ")", "\n", "\n", "return", "np", ".", "dstack", "(", "(", "self", ".", "xx", "*", "z", ",", "self", ".", "yy", "*", "z", ",", "z", ")", ")", ".", "reshape", "(", "(", "length", ",", "3", ")", ")", "\n", "\n", "", "def", "createPointCloudVBOfromRGBD", "(", "self", ")", ":", "\n", "# Create position and color VBOs", "\n", "        ", "self", ".", "pos_vbo", "=", "vbo", ".", "VBO", "(", "data", "=", "self", ".", "pos", ",", "usage", "=", "GL", ".", "GL_DYNAMIC_DRAW", ",", "target", "=", "GL", ".", "GL_ARRAY_BUFFER", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.paintGL": [[434, 438], ["bts_live_3d.GLWidget.rgb.any", "bts_live_3d.GLWidget.depth.any", "OpenGL.GL.glClear", "bts_live_3d.GLWidget.drawObject"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.drawObject"], ["self", ".", "col_vbo", "=", "vbo", ".", "VBO", "(", "data", "=", "self", ".", "col", ",", "usage", "=", "GL", ".", "GL_DYNAMIC_DRAW", ",", "target", "=", "GL", ".", "GL_ARRAY_BUFFER", ")", "\n", "\n", "", "def", "updateRGBD", "(", "self", ")", ":", "\n", "# RGBD dimensions", "\n", "        ", "width", ",", "height", "=", "self", ".", "depth", ".", "shape", "[", "1", "]", ",", "self", ".", "depth", ".", "shape", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.worldCoords": [[439, 447], ["numpy.tile", "numpy.repeat", "range", "range"], "methods", ["None"], ["\n", "# Reshape", "\n", "points", "=", "self", ".", "posFromDepth", "(", "self", ".", "depth", ".", "copy", "(", ")", ")", "\n", "colors", "=", "resize", "(", "self", ".", "rgb", ",", "(", "height", ",", "width", ")", ")", ".", "reshape", "(", "(", "height", "*", "width", ",", "3", ")", ")", "\n", "\n", "# Flatten and convert to float32", "\n", "self", ".", "pos", "=", "points", ".", "astype", "(", "'float32'", ")", "\n", "self", ".", "col", "=", "colors", ".", "reshape", "(", "height", "*", "width", ",", "3", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.posFromDepth": [[448, 455], ["depth.reshape", "numpy.dstack().reshape", "numpy.dstack", "bts_live_3d.edges"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.edges"], ["# Move center of scene", "\n", "self", ".", "pos", "=", "self", ".", "pos", "+", "glm", ".", "vec3", "(", "0", ",", "-", "0.06", ",", "-", "0.3", ")", "\n", "\n", "# Create VBOs", "\n", "if", "not", "self", ".", "col_vbo", ":", "\n", "            ", "self", ".", "createPointCloudVBOfromRGBD", "(", ")", "\n", "\n", "", "", "def", "drawObject", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.createPointCloudVBOfromRGBD": [[456, 460], ["OpenGL.arrays.vbo.VBO", "OpenGL.arrays.vbo.VBO"], "methods", ["None"], ["# Update camera", "\n", "        ", "model", ",", "view", ",", "proj", "=", "glm", ".", "mat4", "(", "1", ")", ",", "glm", ".", "mat4", "(", "1", ")", ",", "glm", ".", "perspective", "(", "45", ",", "self", ".", "width", "(", ")", "/", "self", ".", "height", "(", ")", ",", "0.01", ",", "100", ")", "\n", "center", ",", "up", ",", "eye", "=", "glm", ".", "vec3", "(", "0", ",", "-", "0.075", ",", "0", ")", ",", "glm", ".", "vec3", "(", "0", ",", "-", "1", ",", "0", ")", ",", "glm", ".", "vec3", "(", "0", ",", "0", ",", "-", "0.4", "*", "(", "self", ".", "zoomLevel", "/", "10", ")", ")", "\n", "view", "=", "glm", ".", "lookAt", "(", "eye", ",", "center", ",", "up", ")", "\n", "model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "xRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "1", ",", "0", ",", "0", ")", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.updateRGBD": [[461, 479], ["bts_live_3d.GLWidget.posFromDepth", "skimage.transform.resize().reshape", "bts_live_3d.GLWidget.astype", "skimage.transform.resize().reshape.reshape().astype", "bts_live_3d.GLWidget.depth.copy", "glm.vec3", "bts_live_3d.GLWidget.createPointCloudVBOfromRGBD", "skimage.transform.resize", "skimage.transform.resize().reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.posFromDepth", "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.createPointCloudVBOfromRGBD"], ["model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "yRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "0", ",", "1", ",", "0", ")", ")", "\n", "model", "=", "glm", ".", "rotate", "(", "model", ",", "self", ".", "zRot", "/", "160.0", ",", "glm", ".", "vec3", "(", "0", ",", "0", ",", "1", ")", ")", "\n", "mvp", "=", "proj", "*", "view", "*", "model", "\n", "GL", ".", "glUniformMatrix4fv", "(", "self", ".", "UNIFORM_LOCATIONS", "[", "'mvp'", "]", ",", "1", ",", "False", ",", "glm", ".", "value_ptr", "(", "mvp", ")", ")", "\n", "\n", "# Update data", "\n", "self", ".", "pos_vbo", ".", "set_array", "(", "self", ".", "pos", ")", "\n", "self", ".", "col_vbo", ".", "set_array", "(", "self", ".", "col", ")", "\n", "\n", "# Point size", "\n", "GL", ".", "glPointSize", "(", "2", ")", "\n", "\n", "# Position", "\n", "self", ".", "pos_vbo", ".", "bind", "(", ")", "\n", "GL", ".", "glEnableVertexAttribArray", "(", "0", ")", "\n", "GL", ".", "glVertexAttribPointer", "(", "0", ",", "3", ",", "GL", ".", "GL_FLOAT", ",", "GL", ".", "GL_FALSE", ",", "0", ",", "None", ")", "\n", "\n", "# Color", "\n", "self", ".", "col_vbo", ".", "bind", "(", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.GLWidget.drawObject": [[480, 510], ["glm.lookAt", "glm.rotate", "glm.rotate", "glm.rotate", "OpenGL.GL.glUniformMatrix4fv", "bts_live_3d.GLWidget.pos_vbo.set_array", "bts_live_3d.GLWidget.col_vbo.set_array", "OpenGL.GL.glPointSize", "bts_live_3d.GLWidget.pos_vbo.bind", "OpenGL.GL.glEnableVertexAttribArray", "OpenGL.GL.glVertexAttribPointer", "bts_live_3d.GLWidget.col_vbo.bind", "OpenGL.GL.glEnableVertexAttribArray", "OpenGL.GL.glVertexAttribPointer", "OpenGL.GL.glDrawArrays", "glm.mat4", "glm.mat4", "glm.perspective", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.vec3", "glm.value_ptr", "bts_live_3d.GLWidget.width", "bts_live_3d.GLWidget.height"], "methods", ["None"], ["GL", ".", "glEnableVertexAttribArray", "(", "1", ")", "\n", "GL", ".", "glVertexAttribPointer", "(", "1", ",", "3", ",", "GL", ".", "GL_FLOAT", ",", "GL", ".", "GL_FALSE", ",", "0", ",", "None", ")", "\n", "\n", "# Draw", "\n", "GL", ".", "glDrawArrays", "(", "GL", ".", "GL_POINTS", ",", "0", ",", "self", ".", "pos", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "app", "=", "QtWidgets", ".", "QApplication", "(", "sys", ".", "argv", ")", "\n", "window", "=", "Window", "(", ")", "\n", "window", ".", "show", "(", ")", "\n", "res", "=", "app", ".", "exec_", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.load_model": [[106, 136], ["bts_parameters", "BtsModel", "sess.run", "sess.run", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "tensorflow.device", "tf.train.Saver.restore"], "function", ["None"], ["return", "model", "\n", "\n", "# Function timing", "\n", "", "ticTime", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "def", "tic", "(", ")", ":", "\n", "    ", "global", "ticTime", ";", "\n", "ticTime", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "", "def", "toc", "(", ")", ":", "\n", "    ", "print", "(", "'{0} seconds.'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "ticTime", ")", ")", "\n", "\n", "\n", "# Conversion from Numpy to QImage and back", "\n", "", "def", "np_to_qimage", "(", "a", ")", ":", "\n", "    ", "im", "=", "a", ".", "copy", "(", ")", "\n", "return", "QtGui", ".", "QImage", "(", "im", ".", "data", ",", "im", ".", "shape", "[", "1", "]", ",", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "strides", "[", "0", "]", ",", "QtGui", ".", "QImage", ".", "Format_RGB888", ")", ".", "copy", "(", ")", "\n", "\n", "\n", "", "def", "qimage_to_np", "(", "img", ")", ":", "\n", "    ", "img", "=", "img", ".", "convertToFormat", "(", "QtGui", ".", "QImage", ".", "Format", ".", "Format_ARGB32", ")", "\n", "return", "np", ".", "array", "(", "img", ".", "constBits", "(", ")", ")", ".", "reshape", "(", "img", ".", "height", "(", ")", ",", "img", ".", "width", "(", ")", ",", "4", ")", "\n", "\n", "\n", "# Compute edge magnitudes", "\n", "", "def", "edges", "(", "d", ")", ":", "\n", "    ", "dx", "=", "ndimage", ".", "sobel", "(", "d", ",", "0", ")", "# horizontal derivative", "\n", "dy", "=", "ndimage", ".", "sobel", "(", "d", ",", "1", ")", "# vertical derivative", "\n", "return", "np", ".", "abs", "(", "dx", ")", "+", "np", ".", "abs", "(", "dy", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.tic": [[141, 144], ["time.time"], "function", ["None"], ["    ", "updateInput", "=", "QtCore", ".", "Signal", "(", ")", "\n", "\n", "def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "QtWidgets", ".", "QWidget", ".", "__init__", "(", "self", ",", "parent", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.toc": [[146, 148], ["print", "time.time"], "function", ["None"], ["self", ".", "capture", "=", "None", "\n", "self", ".", "glWidget", "=", "GLWidget", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.np_to_qimage": [[151, 154], ["a.copy", "PySide2.QtGui.QImage().copy", "PySide2.QtGui.QImage"], "function", ["None"], ["# Input / output views", "\n", "viewsLayout", "=", "QtWidgets", ".", "QGridLayout", "(", ")", "\n", "self", ".", "inputViewer", "=", "QtWidgets", ".", "QLabel", "(", "\"[Click to start]\"", ")", "\n", "self", ".", "inputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", "(", "width_rgb", ",", "height_rgb", ")", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.qimage_to_np": [[156, 159], ["img.convertToFormat.convertToFormat", "numpy.array().reshape", "img.convertToFormat.height", "img.convertToFormat.width", "numpy.array", "img.convertToFormat.constBits"], "function", ["None"], ["self", ".", "outputViewer", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", "(", "width_rgb", ",", "height_rgb", ")", ")", "\n", "\n", "imgsFrame", "=", "QtWidgets", ".", "QFrame", "(", ")", "\n", "inputsLayout", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.bts_live_3d.edges": [[162, 166], ["scipy.ndimage.sobel", "scipy.ndimage.sobel", "numpy.abs", "numpy.abs"], "function", ["None"], ["inputsLayout", ".", "addWidget", "(", "self", ".", "outputViewer", ")", "\n", "\n", "viewsLayout", ".", "addWidget", "(", "imgsFrame", ",", "0", ",", "0", ")", "\n", "viewsLayout", ".", "addWidget", "(", "self", ".", "glWidget", ",", "0", ",", "1", ")", "\n", "viewsLayout", ".", "setColumnStretch", "(", "1", ",", "10", ")", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.tensorflow.run_bts_eval_schedule.run_eval": [[22, 45], ["scheduler.scheduled_job", "print", "os.system", "print", "datetime.datetime.now", "datetime.datetime.now", "datetime.timedelta"], "function", ["None"], ["@", "scheduler", ".", "scheduled_job", "(", "'interval'", ",", "minutes", "=", "1", ",", "start_date", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "+", "datetime", ".", "timedelta", "(", "0", ",", "3", ")", ")", "\n", "def", "run_eval", "(", ")", ":", "\n", "    ", "command", "=", "'export CUDA_VISIBLE_DEVICES=0; '", "'/usr/bin/python '", "'bts_eval.py '", "'--encoder densenet161_bts '", "'--dataset kitti '", "'--data_path ../../dataset/kitti_dataset/ '", "'--gt_path ../../dataset/kitti_dataset/data_depth_annotated/ '", "'--filenames_file ../train_test_inputs/eigen_test_files_with_gt.txt '", "'--input_height 352 '", "'--input_width 1216 '", "'--garg_crop '", "'--max_depth 80 '", "'--max_depth_eval 80 '", "'--output_directory ./models/eval-eigen/ '", "'--model_name bts_eigen_v0_0_1 '", "'--checkpoint_path ./models/bts_eigen_v0_0_1/ '", "'--do_kb_crop '", "\n", "\n", "print", "(", "'Executing: %s'", "%", "command", ")", "\n", "os", ".", "system", "(", "command", ")", "\n", "print", "(", "'Finished: %s'", "%", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cogaplex-bts_bts.custom_layer._local_planar_guidance_grad._local_planar_guidance_grad_cc": [[22, 34], ["tensorflow.python.framework.ops.RegisterGradient", "lpg.local_planar_guidance_grad"], "function", ["None"], ["@", "ops", ".", "RegisterGradient", "(", "\"LocalPlanarGuidance\"", ")", "\n", "def", "_local_planar_guidance_grad_cc", "(", "op", ",", "depth_grad", ")", ":", "\n", "    ", "\"\"\"\n    The gradient for `local_planar_guidance` using the operation implemented in C++.\n\n    :param op: `local_planar_guidance` `Operation` that we are differentiating, which we can use\n        to find the inputs and outputs of the original op.\n    :param grad: gradient with respect to the output of the `local_planar_guidance` op.\n    :return: gradients with respect to the input of `local_planar_guidance`.\n    \"\"\"", "\n", "\n", "return", "lpg", ".", "local_planar_guidance_grad", "(", "depth_grad", ",", "op", ".", "inputs", "[", "0", "]", ",", "op", ".", "inputs", "[", "1", "]", ")", "\n", "", ""]]}