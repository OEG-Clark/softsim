{"home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.__init__": [[145, 162], ["print", "isinstance", "int", "pgd_attack.name", "attack_config[].get"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.name"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "attack_config", ",", "x_min", ",", "x_max", ",", "grad", ",", "reps", "=", "1", ")", ":", "\n", "        ", "\"\"\"Attack parameter initialization. The attack performs k steps of\n           size a, while always staying within epsilon from the initial\n           point.\"\"\"", "\n", "print", "(", "\"new attack: \"", ",", "attack_config", ")", "\n", "if", "isinstance", "(", "attack_config", ",", "dict", ")", ":", "\n", "            ", "attack_config", "=", "[", "attack_config", "]", "\n", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "x_min", "=", "x_min", "\n", "self", ".", "x_max", "=", "x_max", "\n", "self", ".", "attack_config", "=", "attack_config", "\n", "self", ".", "names", "=", "[", "name", "(", "a", ")", "for", "a", "in", "attack_config", "]", "\n", "self", ".", "name", "=", "\" - \"", ".", "join", "(", "self", ".", "names", ")", "\n", "self", ".", "grad", "=", "grad", "\n", "self", ".", "reps", "=", "int", "(", "attack_config", "[", "0", "]", ".", "get", "(", "\"reps\"", ",", "1", ")", ")", "\n", "assert", "self", ".", "reps", ">=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.perturb": [[163, 218], ["len", "numpy.copy", "numpy.zeros", "numpy.zeros", "numpy.ones().astype", "range", "len", "sess.run", "numpy.asarray", "numpy.asarray", "numpy.maximum", "numpy.expand_dims", "numpy.where", "numpy.expand_dims", "numpy.expand_dims", "numpy.where", "numpy.ones", "numpy.asarray", "numpy.repeat", "pgd_attack.uniform_weights", "numpy.all", "pgd_attack.PGDAttack.grid_perturb", "numpy.all", "pgd_attack.PGDAttack.norm_perturb", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.uniform_weights", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.grid_perturb", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.norm_perturb"], ["", "def", "perturb", "(", "self", ",", "x_nat", ",", "y", ",", "sess", ",", "x_nat_no_aug", "=", "None", ")", ":", "\n", "\n", "        ", "if", "len", "(", "self", ".", "attack_config", ")", "==", "0", ":", "\n", "            ", "return", "x_nat", ",", "None", "\n", "\n", "", "if", "x_nat_no_aug", "is", "None", ":", "\n", "            ", "x_nat_no_aug", "=", "x_nat", "\n", "\n", "", "n", "=", "len", "(", "x_nat", ")", "\n", "worst_x", "=", "np", ".", "copy", "(", "x_nat", ")", "\n", "worst_t", "=", "np", ".", "zeros", "(", "[", "n", ",", "3", "]", ")", "\n", "max_xent", "=", "np", ".", "zeros", "(", "n", ")", "\n", "all_correct", "=", "np", ".", "ones", "(", "n", ")", ".", "astype", "(", "bool", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "reps", ")", ":", "\n", "            ", "if", "\"weight\"", "in", "self", ".", "attack_config", "[", "0", "]", ":", "\n", "                ", "weights", "=", "np", ".", "asarray", "(", "[", "a", "[", "\"weight\"", "]", "for", "a", "in", "self", ".", "attack_config", "]", ")", "\n", "weights", "=", "np", ".", "repeat", "(", "weights", "[", ":", ",", "np", ".", "newaxis", "]", ",", "len", "(", "x_nat", ")", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "weights", "=", "uniform_weights", "(", "len", "(", "self", ".", "attack_config", ")", ",", "len", "(", "x_nat", ")", ")", "\n", "\n", "", "if", "self", ".", "attack_config", "[", "0", "]", "[", "\"type\"", "]", "==", "\"RT\"", ":", "\n", "                ", "assert", "np", ".", "all", "(", "[", "a", "[", "\"type\"", "]", "!=", "\"RT\"", "for", "a", "in", "self", ".", "attack_config", "[", "1", ":", "]", "]", ")", "\n", "norm_attacks", "=", "self", ".", "attack_config", "[", "1", ":", "]", "\n", "norm_weights", "=", "weights", "[", "1", ":", "]", "\n", "x_adv", ",", "trans", "=", "self", ".", "grid_perturb", "(", "x_nat_no_aug", ",", "y", ",", "sess", ",", "self", ".", "attack_config", "[", "0", "]", ",", "\n", "weights", "[", "0", "]", ",", "norm_attacks", ",", "norm_weights", ")", "\n", "", "else", ":", "\n", "# rotation and translation attack should always come first", "\n", "                ", "assert", "np", ".", "all", "(", "[", "a", "[", "\"type\"", "]", "!=", "\"RT\"", "for", "a", "in", "self", ".", "attack_config", "]", ")", "\n", "norm_attacks", "=", "self", ".", "attack_config", "\n", "x_adv", "=", "self", ".", "norm_perturb", "(", "x_nat", ",", "y", ",", "sess", ",", "norm_attacks", ",", "weights", ")", "\n", "trans", "=", "worst_t", "\n", "\n", "", "cur_xent", ",", "cur_correct", "=", "sess", ".", "run", "(", "[", "self", ".", "model", ".", "y_xent", ",", "self", ".", "model", ".", "correct_prediction", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "model", ".", "x_input", ":", "x_adv", ",", "\n", "self", ".", "model", ".", "y_input", ":", "y", ",", "\n", "self", ".", "model", ".", "is_training", ":", "False", ",", "\n", "self", ".", "model", ".", "transform", ":", "trans", "}", ")", "\n", "cur_xent", "=", "np", ".", "asarray", "(", "cur_xent", ")", "\n", "cur_correct", "=", "np", ".", "asarray", "(", "cur_correct", ")", "\n", "\n", "idx", "=", "(", "cur_xent", ">", "max_xent", ")", "&", "(", "cur_correct", "==", "all_correct", ")", "\n", "idx", "=", "idx", "|", "(", "cur_correct", "<", "all_correct", ")", "\n", "max_xent", "=", "np", ".", "maximum", "(", "cur_xent", ",", "max_xent", ")", "\n", "all_correct", "=", "cur_correct", "&", "all_correct", "\n", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "# shape (bsize, 1)", "\n", "worst_t", "=", "np", ".", "where", "(", "idx", ",", "trans", ",", "worst_t", ")", "# shape (bsize, 3)", "\n", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "# shape (bsize, 1, 1, 1)", "\n", "worst_x", "=", "np", ".", "where", "(", "idx", ",", "x_adv", ",", "worst_x", ",", ")", "# shape (bsize, h, w, ch)", "\n", "\n", "", "return", "worst_x", ",", "worst_t", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.grid_perturb": [[219, 276], ["len", "numpy.copy", "numpy.zeros", "numpy.zeros", "numpy.ones().astype", "range", "len", "len", "numpy.zeros", "numpy.asarray", "len", "pgd_attack.PGDAttack.norm_perturb", "sess.run", "numpy.asarray", "numpy.asarray", "numpy.maximum", "numpy.expand_dims", "numpy.where", "numpy.expand_dims", "numpy.expand_dims", "numpy.where", "numpy.asarray", "list", "numpy.ones", "itertools.product", "range", "len", "numpy.random.uniform", "range", "list", "len", "numpy.linspace", "zip"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.norm_perturb"], ["", "def", "grid_perturb", "(", "self", ",", "x_nat", ",", "y", ",", "sess", ",", "attack_config", ",", "weight", ",", "norm_attacks", ",", "norm_weights", ")", ":", "\n", "        ", "random_tries", "=", "attack_config", "[", "\"random_tries\"", "]", "\n", "n", "=", "len", "(", "x_nat", ")", "\n", "\n", "assert", "len", "(", "weight", ")", "==", "len", "(", "x_nat", ")", "\n", "# (3, 1) * n => (3, n)", "\n", "spatial_limits", "=", "np", ".", "asarray", "(", "attack_config", "[", "\"spatial_limits\"", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", "*", "weight", "\n", "\n", "if", "random_tries", ">", "0", ":", "\n", "            ", "grids", "=", "np", ".", "zeros", "(", "(", "n", ",", "random_tries", ")", ")", "\n", "", "else", ":", "\n", "# exhaustive grid", "\n", "# n * (num_x * num_y * num_rot)", "\n", "            ", "grids", "=", "[", "list", "(", "product", "(", "*", "list", "(", "np", ".", "linspace", "(", "-", "l", ",", "l", ",", "num", "=", "g", ")", "\n", "for", "l", ",", "g", "in", "zip", "(", "spatial_limits", "[", ":", ",", "i", "]", ",", "attack_config", "[", "\"grid_granularity\"", "]", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "x_nat", ")", ")", "]", "\n", "grids", "=", "np", ".", "asarray", "(", "grids", ")", "\n", "\n", "", "worst_x", "=", "np", ".", "copy", "(", "x_nat", ")", "\n", "worst_t", "=", "np", ".", "zeros", "(", "[", "n", ",", "3", "]", ")", "\n", "max_xent", "=", "np", ".", "zeros", "(", "n", ")", "\n", "all_correct", "=", "np", ".", "ones", "(", "n", ")", ".", "astype", "(", "bool", ")", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "grids", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "random_tries", ">", "0", ":", "\n", "                ", "t", "=", "[", "[", "np", ".", "random", ".", "uniform", "(", "-", "l", ",", "l", ")", "for", "l", "in", "spatial_limits", "[", ":", ",", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "x_nat", ")", ")", "]", "\n", "", "else", ":", "\n", "                ", "t", "=", "grids", "[", ":", ",", "idx", "]", "\n", "\n", "", "x", "=", "self", ".", "norm_perturb", "(", "x_nat", ",", "y", ",", "sess", ",", "norm_attacks", ",", "norm_weights", ",", "trans", "=", "t", ")", "\n", "\n", "curr_dict", "=", "{", "self", ".", "model", ".", "x_input", ":", "x", ",", "\n", "self", ".", "model", ".", "y_input", ":", "y", ",", "\n", "self", ".", "model", ".", "is_training", ":", "False", ",", "\n", "self", ".", "model", ".", "transform", ":", "t", "}", "\n", "\n", "cur_xent", ",", "cur_correct", "=", "sess", ".", "run", "(", "[", "self", ".", "model", ".", "y_xent", ",", "\n", "self", ".", "model", ".", "correct_prediction", "]", ",", "\n", "feed_dict", "=", "curr_dict", ")", "# shape (bsize,)", "\n", "cur_xent", "=", "np", ".", "asarray", "(", "cur_xent", ")", "\n", "cur_correct", "=", "np", ".", "asarray", "(", "cur_correct", ")", "\n", "\n", "# Select indices to update: we choose the misclassified transformation", "\n", "# of maximum xent (or just highest xent if everything else if correct).", "\n", "idx", "=", "(", "cur_xent", ">", "max_xent", ")", "&", "(", "cur_correct", "==", "all_correct", ")", "\n", "idx", "=", "idx", "|", "(", "cur_correct", "<", "all_correct", ")", "\n", "max_xent", "=", "np", ".", "maximum", "(", "cur_xent", ",", "max_xent", ")", "\n", "all_correct", "=", "cur_correct", "&", "all_correct", "\n", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "# shape (bsize, 1)", "\n", "worst_t", "=", "np", ".", "where", "(", "idx", ",", "t", ",", "worst_t", ")", "# shape (bsize, 3)", "\n", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "\n", "idx", "=", "np", ".", "expand_dims", "(", "idx", ",", "axis", "=", "-", "1", ")", "# shape (bsize, 1, 1, 1)", "\n", "worst_x", "=", "np", ".", "where", "(", "idx", ",", "x", ",", "worst_x", ",", ")", "# shape (bsize, h, w, ch)", "\n", "\n", "", "return", "worst_x", ",", "worst_t", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.norm_perturb": [[277, 315], ["numpy.all", "numpy.asarray", "numpy.clip", "numpy.random.randint", "range", "numpy.clip", "len", "numpy.zeros", "numpy.sum", "sess.run", "pgd_attack.delta_update", "numpy.clip", "numpy.asarray", "pgd_attack.init_delta", "numpy.sum", "numpy.sum", "len", "zip", "numpy.sum", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.delta_update", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.init_delta"], ["", "def", "norm_perturb", "(", "self", ",", "x_nat", ",", "y", ",", "sess", ",", "norm_attacks", ",", "norm_weights", ",", "trans", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "norm_attacks", ")", "==", "0", ":", "\n", "            ", "return", "x_nat", "\n", "\n", "", "x_min", "=", "self", ".", "x_min", "\n", "x_max", "=", "self", ".", "x_max", "\n", "\n", "if", "trans", "is", "None", ":", "\n", "            ", "trans", "=", "np", ".", "zeros", "(", "[", "len", "(", "x_nat", ")", ",", "3", "]", ")", "\n", "\n", "", "iters", "=", "[", "a", "[", "\"k\"", "]", "for", "a", "in", "norm_attacks", "]", "\n", "assert", "(", "np", ".", "all", "(", "np", ".", "asarray", "(", "iters", ")", "==", "iters", "[", "0", "]", ")", ")", "\n", "\n", "deltas", "=", "np", ".", "asarray", "(", "[", "init_delta", "(", "x_nat", ",", "attack", ",", "weight", ")", "\n", "for", "attack", ",", "weight", "in", "zip", "(", "norm_attacks", ",", "norm_weights", ")", "]", ")", "\n", "x_adv", "=", "np", ".", "clip", "(", "x_nat", "+", "np", ".", "sum", "(", "deltas", ",", "axis", "=", "0", ")", ",", "0", ",", "1", ")", "\n", "\n", "\n", "# a seed that remains constant across attack iterations", "\n", "seed", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", "**", "32", "-", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "np", ".", "sum", "(", "iters", ")", ")", ":", "\n", "            ", "grad", "=", "sess", ".", "run", "(", "self", ".", "grad", ",", "feed_dict", "=", "{", "self", ".", "model", ".", "x_input", ":", "x_adv", ",", "\n", "self", ".", "model", ".", "y_input", ":", "y", ",", "\n", "self", ".", "model", ".", "is_training", ":", "False", ",", "\n", "self", ".", "model", ".", "transform", ":", "trans", "}", ")", "\n", "\n", "deltas", "[", "i", "%", "len", "(", "norm_attacks", ")", "]", "=", "delta_update", "(", "deltas", "[", "i", "%", "len", "(", "norm_attacks", ")", "]", ",", "\n", "grad", ",", "\n", "x_adv", ",", "\n", "norm_attacks", "[", "i", "%", "len", "(", "norm_attacks", ")", "]", ",", "\n", "x_min", ",", "x_max", ",", "\n", "norm_weights", "[", "i", "%", "len", "(", "norm_attacks", ")", "]", ",", "\n", "seed", "=", "seed", ",", "t", "=", "i", "+", "1", ")", "\n", "\n", "x_adv", "=", "np", ".", "clip", "(", "x_nat", "+", "np", ".", "sum", "(", "deltas", ",", "axis", "=", "0", ")", ",", "x_min", ",", "x_max", ")", "\n", "\n", "", "return", "np", ".", "clip", "(", "x_nat", "+", "np", ".", "sum", "(", "deltas", ",", "axis", "=", "0", ")", ",", "x_min", ",", "x_max", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.uniform_weights": [[17, 21], ["numpy.random.uniform", "numpy.maximum", "numpy.sum", "numpy.log"], "function", ["None"], ["def", "uniform_weights", "(", "n_attacks", ",", "n_samples", ")", ":", "\n", "    ", "x", "=", "np", ".", "random", ".", "uniform", "(", "size", "=", "(", "n_attacks", ",", "n_samples", ")", ")", "\n", "y", "=", "np", ".", "maximum", "(", "-", "np", ".", "log", "(", "x", ")", ",", "1e-8", ")", "\n", "return", "y", "/", "np", ".", "sum", "(", "y", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.init_delta": [[23, 42], ["numpy.zeros_like", "len", "len", "len", "numpy.random.uniform", "numpy.random.randn", "numpy.linalg.norm().reshape", "numpy.random.laplace", "numpy.linalg.norm().reshape", "ValueError", "numpy.linalg.norm", "np.random.laplace.reshape", "numpy.linalg.norm", "np.random.laplace.reshape"], "function", ["None"], ["", "def", "init_delta", "(", "x", ",", "attack", ",", "weight", ")", ":", "\n", "    ", "if", "not", "attack", "[", "\"random_start\"", "]", ":", "\n", "        ", "return", "np", ".", "zeros_like", "(", "x", ")", "\n", "\n", "", "assert", "len", "(", "weight", ")", "==", "len", "(", "x", ")", "\n", "eps", "=", "(", "attack", "[", "\"epsilon\"", "]", "*", "weight", ")", ".", "reshape", "(", "len", "(", "x", ")", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "if", "attack", "[", "\"type\"", "]", "==", "\"linf\"", ":", "\n", "        ", "return", "np", ".", "random", ".", "uniform", "(", "-", "eps", ",", "eps", ",", "x", ".", "shape", ")", "\n", "", "elif", "attack", "[", "\"type\"", "]", "==", "\"l2\"", ":", "\n", "        ", "r", "=", "np", ".", "random", ".", "randn", "(", "*", "x", ".", "shape", ")", "\n", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "r", ".", "reshape", "(", "r", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "return", "(", "r", "/", "norm", ")", "*", "eps", "\n", "", "elif", "attack", "[", "\"type\"", "]", "==", "\"l1\"", ":", "\n", "        ", "r", "=", "np", ".", "random", ".", "laplace", "(", "size", "=", "x", ".", "shape", ")", "\n", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "r", ".", "reshape", "(", "r", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ",", "ord", "=", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "return", "(", "r", "/", "norm", ")", "*", "eps", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown norm {}\"", ".", "format", "(", "attack", "[", "\"type\"", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.delta_update": [[44, 126], ["eps_w.reshape", "len", "len", "len", "attack.get", "numpy.clip", "numpy.clip", "attack.get", "g.reshape.reshape", "numpy.maximum", "g.reshape.reshape", "numpy.linalg.norm().reshape", "numpy.clip", "numpy.sign", "len", "numpy.linalg.norm", "numpy.minimum", "attack.get", "numpy.abs", "numpy.sign", "numpy.sum", "numpy.any", "numpy.clip", "numpy.linalg.norm", "numpy.maximum", "attack.get", "np.abs.reshape", "numpy.argmax", "numpy.zeros_like", "isinstance", "numpy.percentile", "numpy.sum", "numpy.abs", "numpy.sum", "new_delta[].reshape", "numpy.abs", "mu.cumsum", "numpy.argmin", "numpy.sign", "new_delta[].reshape.reshape", "np.clip.reshape", "len", "np.zeros_like.reshape", "numpy.random.RandomState().uniform", "numpy.sort", "numpy.arange", "numpy.maximum", "len", "numpy.arange", "numpy.random.RandomState", "numpy.expand_dims", "numpy.expand_dims", "len", "range"], "function", ["None"], ["", "", "def", "delta_update", "(", "old_delta", ",", "g", ",", "x_adv", ",", "attack", ",", "x_min", ",", "x_max", ",", "weight", ",", "seed", "=", "None", ",", "t", "=", "None", ")", ":", "\n", "    ", "assert", "len", "(", "weight", ")", "==", "len", "(", "x_adv", ")", "\n", "\n", "eps_w", "=", "attack", "[", "\"epsilon\"", "]", "*", "weight", "\n", "eps", "=", "eps_w", ".", "reshape", "(", "len", "(", "x_adv", ")", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "if", "attack", "[", "\"type\"", "]", "==", "\"linf\"", ":", "\n", "        ", "a", "=", "attack", ".", "get", "(", "'a'", ",", "(", "2.5", "*", "eps", ")", "/", "attack", "[", "\"k\"", "]", ")", "\n", "new_delta", "=", "old_delta", "+", "a", "*", "np", ".", "sign", "(", "g", ")", "\n", "new_delta", "=", "np", ".", "clip", "(", "new_delta", ",", "-", "eps", ",", "eps", ")", "\n", "\n", "new_delta", "=", "np", ".", "clip", "(", "new_delta", ",", "x_min", "-", "(", "x_adv", "-", "old_delta", ")", ",", "x_max", "-", "(", "x_adv", "-", "old_delta", ")", ")", "\n", "return", "new_delta", "\n", "\n", "", "elif", "attack", "[", "\"type\"", "]", "==", "\"l2\"", ":", "\n", "        ", "a", "=", "attack", ".", "get", "(", "'a'", ",", "(", "2.5", "*", "eps", ")", "/", "attack", "[", "\"k\"", "]", ")", "\n", "bad_pos", "=", "(", "(", "x_adv", "==", "x_max", ")", "&", "(", "g", ">", "0", ")", ")", "|", "(", "(", "x_adv", "==", "x_min", ")", "&", "(", "g", "<", "0", ")", ")", "\n", "g", "[", "bad_pos", "]", "=", "0", "\n", "\n", "g", "=", "g", ".", "reshape", "(", "len", "(", "g", ")", ",", "-", "1", ")", "\n", "g", "/=", "np", ".", "maximum", "(", "np", ".", "linalg", ".", "norm", "(", "g", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", ",", "1e-8", ")", "\n", "g", "=", "g", ".", "reshape", "(", "old_delta", ".", "shape", ")", "\n", "\n", "new_delta", "=", "old_delta", "+", "a", "*", "g", "\n", "new_delta_norm", "=", "np", ".", "linalg", ".", "norm", "(", "new_delta", ".", "reshape", "(", "len", "(", "new_delta", ")", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "new_delta", "=", "new_delta", "/", "np", ".", "maximum", "(", "new_delta_norm", ",", "1e-8", ")", "*", "np", ".", "minimum", "(", "new_delta_norm", ",", "eps", ")", "\n", "new_delta", "=", "np", ".", "clip", "(", "new_delta", ",", "x_min", "-", "(", "x_adv", "-", "old_delta", ")", ",", "x_max", "-", "(", "x_adv", "-", "old_delta", ")", ")", "\n", "return", "new_delta", "\n", "\n", "", "elif", "attack", "[", "\"type\"", "]", "==", "\"l1\"", ":", "\n", "        ", "_", ",", "h", ",", "w", ",", "ch", "=", "g", ".", "shape", "\n", "\n", "a", "=", "attack", ".", "get", "(", "'a'", ",", "1.0", ")", "*", "x_max", "\n", "perc", "=", "attack", ".", "get", "(", "'perc'", ",", "99", ")", "\n", "\n", "if", "perc", "==", "'max'", ":", "\n", "            ", "bad_pos", "=", "(", "(", "x_adv", ">", "(", "x_max", "-", "a", ")", ")", "&", "(", "g", ">", "0", ")", ")", "|", "(", "(", "x_adv", "<", "a", ")", "&", "(", "g", "<", "0", ")", ")", "|", "(", "x_adv", "<", "x_min", ")", "|", "(", "x_adv", ">", "x_max", ")", "\n", "g", "[", "bad_pos", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "bad_pos", "=", "(", "(", "x_adv", "==", "x_max", ")", "&", "(", "g", ">", "0", ")", ")", "|", "(", "(", "x_adv", "==", "x_min", ")", "&", "(", "g", "<", "0", ")", ")", "\n", "g", "[", "bad_pos", "]", "=", "0", "\n", "\n", "", "abs_grad", "=", "np", ".", "abs", "(", "g", ")", "\n", "sign", "=", "np", ".", "sign", "(", "g", ")", "\n", "\n", "if", "perc", "==", "'max'", ":", "\n", "            ", "grad_flat", "=", "abs_grad", ".", "reshape", "(", "len", "(", "abs_grad", ")", ",", "-", "1", ")", "\n", "max_abs_grad", "=", "np", ".", "argmax", "(", "grad_flat", ",", "axis", "=", "-", "1", ")", "\n", "optimal_perturbation", "=", "np", ".", "zeros_like", "(", "grad_flat", ")", "\n", "optimal_perturbation", "[", "np", ".", "arange", "(", "len", "(", "grad_flat", ")", ")", ",", "max_abs_grad", "]", "=", "1.0", "\n", "optimal_perturbation", "=", "sign", "*", "optimal_perturbation", ".", "reshape", "(", "abs_grad", ".", "shape", ")", "\n", "", "else", ":", "\n", "            ", "if", "isinstance", "(", "perc", ",", "list", ")", ":", "\n", "                ", "perc_low", ",", "perc_high", "=", "perc", "\n", "perc", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", ".", "uniform", "(", "low", "=", "perc_low", ",", "high", "=", "perc_high", ")", "\n", "\n", "", "max_abs_grad", "=", "np", ".", "percentile", "(", "abs_grad", ",", "perc", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "\n", "tied_for_max", "=", "(", "abs_grad", ">=", "max_abs_grad", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "num_ties", "=", "np", ".", "sum", "(", "tied_for_max", ",", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "\n", "optimal_perturbation", "=", "sign", "*", "tied_for_max", "/", "num_ties", "\n", "\n", "", "new_delta", "=", "old_delta", "+", "a", "*", "optimal_perturbation", "\n", "\n", "l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "new_delta", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "to_project", "=", "l1", ">", "eps_w", "\n", "if", "np", ".", "any", "(", "to_project", ")", ":", "\n", "            ", "n", "=", "np", ".", "sum", "(", "to_project", ")", "\n", "d", "=", "new_delta", "[", "to_project", "]", ".", "reshape", "(", "n", ",", "-", "1", ")", "# n * N (N=h*w*ch)", "\n", "abs_d", "=", "np", ".", "abs", "(", "d", ")", "# n * N", "\n", "mu", "=", "-", "np", ".", "sort", "(", "-", "abs_d", ",", "axis", "=", "-", "1", ")", "# n * N", "\n", "cumsums", "=", "mu", ".", "cumsum", "(", "axis", "=", "-", "1", ")", "# n * N", "\n", "eps_d", "=", "eps_w", "[", "to_project", "]", "\n", "js", "=", "1.0", "/", "np", ".", "arange", "(", "1", ",", "h", "*", "w", "*", "ch", "+", "1", ")", "\n", "temp", "=", "mu", "-", "js", "*", "(", "cumsums", "-", "np", ".", "expand_dims", "(", "eps_d", ",", "-", "1", ")", ")", "\n", "rho", "=", "np", ".", "argmin", "(", "temp", ">", "0", ",", "axis", "=", "-", "1", ")", "\n", "theta", "=", "1.0", "/", "(", "1", "+", "rho", ")", "*", "(", "cumsums", "[", "range", "(", "n", ")", ",", "rho", "]", "-", "eps_d", ")", "\n", "sgn", "=", "np", ".", "sign", "(", "d", ")", "\n", "d", "=", "sgn", "*", "np", ".", "maximum", "(", "abs_d", "-", "np", ".", "expand_dims", "(", "theta", ",", "-", "1", ")", ",", "0", ")", "\n", "new_delta", "[", "to_project", "]", "=", "d", ".", "reshape", "(", "-", "1", ",", "h", ",", "w", ",", "ch", ")", "\n", "\n", "", "new_delta", "=", "np", ".", "clip", "(", "new_delta", ",", "x_min", "-", "(", "x_adv", "-", "old_delta", ")", ",", "x_max", "-", "(", "x_adv", "-", "old_delta", ")", ")", "\n", "return", "new_delta", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.compute_grad": [[128, 138], ["tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.reduce_max", "tensorflow.gradients", "model.pre_softmax.get_shape().as_list", "model.pre_softmax.get_shape"], "function", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.one_hot"], ["", "", "def", "compute_grad", "(", "model", ")", ":", "\n", "    ", "label_mask", "=", "tf", ".", "one_hot", "(", "model", ".", "y_input", ",", "\n", "model", ".", "pre_softmax", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", ",", "\n", "on_value", "=", "1.0", ",", "\n", "off_value", "=", "0.0", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "correct_logit", "=", "tf", ".", "reduce_sum", "(", "label_mask", "*", "model", ".", "pre_softmax", ",", "axis", "=", "1", ")", "\n", "wrong_logit", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "label_mask", ")", "*", "model", ".", "pre_softmax", "-", "1e4", "*", "label_mask", ",", "axis", "=", "1", ")", "\n", "loss", "=", "-", "(", "correct_logit", "-", "wrong_logit", ")", "\n", "return", "tf", ".", "gradients", "(", "loss", ",", "model", ".", "x_input", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.name": [[140, 142], ["json.dumps"], "function", ["None"], ["", "def", "name", "(", "attack", ")", ":", "\n", "    ", "return", "json", ".", "dumps", "(", "attack", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Layer.get_output_shape": [[16, 18], ["None"], "methods", ["None"], ["  ", "def", "get_output_shape", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "output_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.__init__": [[23, 49], ["cleverhans.serial.NoRefModel.__init__", "list", "list", "cleverhans_models.ResNet.build", "list", "list", "tensorflow.trainable_variables", "tensorflow.global_variables", "tensorflow.trainable_variables", "tensorflow.global_variables", "tensorflow.variable_scope", "cleverhans_models.ResNet.build"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model.__init__", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.build", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.build"], ["def", "__init__", "(", "self", ",", "layers", ",", "input_shape", ",", "scope", "=", "None", ")", ":", "\n", "    ", "\"\"\"ResNet constructor.\n    :param layers: a list of layers in CleverHans format\n      each with set_input_shape() and fprop() methods.\n    :param input_shape: 4-tuple describing input shape (e.g None, 32, 32, 3)\n    :param scope: string name of scope for Variables\n      This works in two ways.\n      If scope is None, the variables are not put in a scope, and the\n      model is compatible with Saver.restore from the public downloads\n      for the CIFAR10 Challenge.\n      If the scope is a string, then Saver.restore won't work, but the\n      model functions as a picklable NoRefModels that finds its variables\n      based on the scope.\n    \"\"\"", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", "scope", ",", "10", ",", "{", "}", ",", "scope", "is", "not", "None", ")", "\n", "if", "scope", "is", "None", ":", "\n", "      ", "before", "=", "list", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "before_vars", "=", "list", "(", "tf", ".", "global_variables", "(", ")", ")", "\n", "self", ".", "build", "(", "layers", ",", "input_shape", ")", "\n", "after", "=", "list", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "after_vars", "=", "list", "(", "tf", ".", "global_variables", "(", ")", ")", "\n", "self", ".", "params", "=", "[", "param", "for", "param", "in", "after", "if", "param", "not", "in", "before", "]", "\n", "self", ".", "vars", "=", "[", "var", "for", "var", "in", "after_vars", "if", "var", "not", "in", "before_vars", "]", "\n", "", "else", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "self", ".", "build", "(", "layers", ",", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.get_vars": [[50, 54], ["hasattr", "super().get_vars"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.get_vars"], ["", "", "", "def", "get_vars", "(", "self", ")", ":", "\n", "    ", "if", "hasattr", "(", "self", ",", "\"vars\"", ")", ":", "\n", "      ", "return", "self", ".", "vars", "\n", "", "return", "super", "(", "ResNet", ",", "self", ")", ".", "get_vars", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.build": [[55, 74], ["isinstance", "enumerate", "hasattr", "cleverhans_models.ResNet.layer_names.append", "layer.set_input_shape", "layer.get_output_shape", "str"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Flatten.set_input_shape", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Layer.get_output_shape"], ["", "def", "build", "(", "self", ",", "layers", ",", "input_shape", ")", ":", "\n", "      ", "self", ".", "layer_names", "=", "[", "]", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "input_shape", "=", "input_shape", "\n", "if", "isinstance", "(", "layers", "[", "-", "1", "]", ",", "Softmax", ")", ":", "\n", "        ", "layers", "[", "-", "1", "]", ".", "name", "=", "'probs'", "\n", "layers", "[", "-", "2", "]", ".", "name", "=", "'logits'", "\n", "", "else", ":", "\n", "        ", "layers", "[", "-", "1", "]", ".", "name", "=", "'logits'", "\n", "", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "        ", "if", "hasattr", "(", "layer", ",", "'name'", ")", ":", "\n", "          ", "name", "=", "layer", ".", "name", "\n", "", "else", ":", "\n", "          ", "name", "=", "layer", ".", "__class__", ".", "__name__", "+", "str", "(", "i", ")", "\n", "layer", ".", "name", "=", "name", "\n", "", "self", ".", "layer_names", ".", "append", "(", "name", ")", "\n", "\n", "layer", ".", "set_input_shape", "(", "input_shape", ")", "\n", "input_shape", "=", "layer", ".", "get_output_shape", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.make_input_placeholder": [[75, 77], ["tensorflow.placeholder"], "methods", ["None"], ["", "", "def", "make_input_placeholder", "(", "self", ")", ":", "\n", "    ", "return", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "None", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.make_label_placeholder": [[78, 80], ["tensorflow.placeholder"], "methods", ["None"], ["", "def", "make_label_placeholder", "(", "self", ")", ":", "\n", "    ", "return", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "None", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.fprop": [[81, 87], ["cleverhans_models.ResNet._fprop", "tensorflow.variable_scope", "cleverhans_models.ResNet._fprop"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet._fprop", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet._fprop"], ["", "def", "fprop", "(", "self", ",", "x", ",", "set_ref", "=", "False", ")", ":", "\n", "    ", "x", "=", "x", "*", "255.0", "\n", "if", "self", ".", "scope", "is", "not", "None", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "return", "self", ".", "_fprop", "(", "x", ",", "set_ref", ")", "\n", "", "", "return", "self", ".", "_fprop", "(", "x", ",", "set_ref", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet._fprop": [[88, 98], ["dict", "layer.fprop", "dict.append", "zip"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.MadryMNIST.fprop"], ["", "def", "_fprop", "(", "self", ",", "x", ",", "set_ref", "=", "False", ")", ":", "\n", "      ", "states", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "        ", "if", "set_ref", ":", "\n", "          ", "layer", ".", "ref", "=", "x", "\n", "", "x", "=", "layer", ".", "fprop", "(", "x", ")", "\n", "assert", "x", "is", "not", "None", "\n", "states", ".", "append", "(", "x", ")", "\n", "", "states", "=", "dict", "(", "zip", "(", "self", ".", "layer_names", ",", "states", ")", ")", "\n", "return", "states", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.ResNet.add_internal_summaries": [[99, 101], ["None"], "methods", ["None"], ["", "def", "add_internal_summaries", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Input.__init__": [[110, 112], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Input.set_input_shape": [[113, 124], ["list", "tensorflow.zeros", "cleverhans_models.Input.fprop", "tuple", "int", "cleverhans_models.Input.get_shape"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.MadryMNIST.fprop"], ["", "def", "set_input_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "    ", "batch_size", ",", "rows", ",", "cols", ",", "input_channels", "=", "input_shape", "\n", "# assert self.mode == 'train' or self.mode == 'eval'", "\n", "\"\"\"Build the core model within the graph.\"\"\"", "\n", "input_shape", "=", "list", "(", "input_shape", ")", "\n", "input_shape", "[", "0", "]", "=", "1", "\n", "dummy_batch", "=", "tf", ".", "zeros", "(", "input_shape", ")", "\n", "dummy_output", "=", "self", ".", "fprop", "(", "dummy_batch", ")", "\n", "output_shape", "=", "[", "int", "(", "e", ")", "for", "e", "in", "dummy_output", ".", "get_shape", "(", ")", "]", "\n", "output_shape", "[", "0", "]", "=", "batch_size", "\n", "self", ".", "output_shape", "=", "tuple", "(", "output_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Input.fprop": [[125, 131], ["tensorflow.variable_scope", "tensorflow.map_fn", "cleverhans_models._conv", "cleverhans_models._stride_arr", "tensorflow.image.per_image_standardization"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'input'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "input_standardized", "=", "tf", ".", "map_fn", "(", "\n", "lambda", "img", ":", "tf", ".", "image", ".", "per_image_standardization", "(", "img", ")", ",", "x", ")", "\n", "return", "_conv", "(", "'init_conv'", ",", "input_standardized", ",", "\n", "3", ",", "3", ",", "16", ",", "_stride_arr", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Conv2D.__init__": [[134, 140], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "filters", ")", ":", "\n", "    ", "self", ".", "filters", "=", "filters", "\n", "\n", "assert", "filters", "==", "[", "16", ",", "16", ",", "32", ",", "64", "]", "or", "filters", "==", "[", "16", ",", "160", ",", "320", ",", "640", "]", "\n", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Conv2D.set_input_shape": [[141, 155], ["list", "tensorflow.zeros", "cleverhans_models.Conv2D.fprop", "tuple", "int", "cleverhans_models.Conv2D.get_shape"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.MadryMNIST.fprop"], ["", "def", "set_input_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "    ", "batch_size", ",", "rows", ",", "cols", ",", "input_channels", "=", "input_shape", "\n", "\n", "# Uncomment the following codes to use w28-10 wide residual network.", "\n", "# It is more memory efficient than very deep residual network and has", "\n", "# comparably good performance.", "\n", "# https://arxiv.org/pdf/1605.07146v1.pdf", "\n", "input_shape", "=", "list", "(", "input_shape", ")", "\n", "input_shape", "[", "0", "]", "=", "1", "\n", "dummy_batch", "=", "tf", ".", "zeros", "(", "input_shape", ")", "\n", "dummy_output", "=", "self", ".", "fprop", "(", "dummy_batch", ")", "\n", "output_shape", "=", "[", "int", "(", "e", ")", "for", "e", "in", "dummy_output", ".", "get_shape", "(", ")", "]", "\n", "output_shape", "[", "0", "]", "=", "batch_size", "\n", "self", ".", "output_shape", "=", "tuple", "(", "output_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Conv2D.fprop": [[156, 194], ["range", "range", "range", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "cleverhans_models._batch_norm", "cleverhans_models._relu", "cleverhans_models._global_avg_pool", "cleverhans_models._stride_arr", "tensorflow.variable_scope", "res_func", "cleverhans_models._stride_arr", "tensorflow.variable_scope", "res_func", "cleverhans_models._stride_arr", "tensorflow.variable_scope", "res_func", "cleverhans_models._stride_arr", "cleverhans_models._stride_arr", "cleverhans_models._stride_arr"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._global_avg_pool", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "\n", "# Update hps.num_residual_units to 9", "\n", "    ", "strides", "=", "[", "1", ",", "2", ",", "2", "]", "\n", "activate_before_residual", "=", "[", "True", ",", "False", ",", "False", "]", "\n", "filters", "=", "self", ".", "filters", "\n", "\n", "res_func", "=", "_residual", "\n", "with", "tf", ".", "variable_scope", "(", "'unit_1_0'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "0", "]", ",", "filters", "[", "1", "]", ",", "_stride_arr", "(", "strides", "[", "0", "]", ")", ",", "\n", "activate_before_residual", "[", "0", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "(", "'unit_1_%d'", "%", "i", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "1", "]", ",", "filters", "[", "1", "]", ",", "\n", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "(", "'unit_2_0'", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "1", "]", ",", "filters", "[", "2", "]", ",", "_stride_arr", "(", "strides", "[", "1", "]", ")", ",", "\n", "activate_before_residual", "[", "1", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "(", "'unit_2_%d'", "%", "i", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "2", "]", ",", "filters", "[", "2", "]", ",", "\n", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "(", "'unit_3_0'", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "2", "]", ",", "filters", "[", "3", "]", ",", "_stride_arr", "(", "strides", "[", "2", "]", ")", ",", "\n", "activate_before_residual", "[", "2", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "(", "'unit_3_%d'", "%", "i", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "3", "]", ",", "filters", "[", "3", "]", ",", "\n", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "(", "'unit_last'", ")", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "x", "=", "_batch_norm", "(", "'final_bn'", ",", "x", ")", "\n", "x", "=", "_relu", "(", "x", ",", "0.1", ")", "\n", "x", "=", "_global_avg_pool", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.__init__": [[198, 200], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "num_hid", ")", ":", "\n", "    ", "self", ".", "num_hid", "=", "num_hid", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.set_input_shape": [[201, 207], ["cleverhans_models.Linear.make_vars"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.make_vars"], ["", "def", "set_input_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "    ", "batch_size", ",", "dim", "=", "input_shape", "\n", "self", ".", "input_shape", "=", "[", "batch_size", ",", "dim", "]", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "output_shape", "=", "[", "batch_size", ",", "self", ".", "num_hid", "]", "\n", "self", ".", "make_vars", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.make_vars": [[208, 217], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.initializers.variance_scaling", "tensorflow.initializers.constant"], "methods", ["None"], ["", "def", "make_vars", "(", "self", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'logit'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "w", "=", "tf", ".", "get_variable", "(", "\n", "'DW'", ",", "[", "self", ".", "dim", ",", "self", ".", "num_hid", "]", ",", "\n", "initializer", "=", "tf", ".", "initializers", ".", "variance_scaling", "(", "\n", "distribution", "=", "'uniform'", ")", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "self", ".", "num_hid", "]", ",", "\n", "initializer", "=", "tf", ".", "initializers", ".", "constant", "(", ")", ")", "\n", "", "return", "w", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.fprop": [[218, 221], ["cleverhans_models.Linear.make_vars", "tensorflow.nn.xw_plus_b"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Linear.make_vars"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "    ", "w", ",", "b", "=", "self", ".", "make_vars", "(", ")", "\n", "return", "tf", ".", "nn", ".", "xw_plus_b", "(", "x", ",", "w", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Softmax.__init__": [[303, 305], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Softmax.set_input_shape": [[306, 309], ["None"], "methods", ["None"], ["", "def", "set_input_shape", "(", "self", ",", "shape", ")", ":", "\n", "    ", "self", ".", "input_shape", "=", "shape", "\n", "self", ".", "output_shape", "=", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Softmax.fprop": [[310, 312], ["tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "softmax", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Flatten.__init__": [[316, 318], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Flatten.set_input_shape": [[319, 326], ["None"], "methods", ["None"], ["", "def", "set_input_shape", "(", "self", ",", "shape", ")", ":", "\n", "    ", "self", ".", "input_shape", "=", "shape", "\n", "output_width", "=", "1", "\n", "for", "factor", "in", "shape", "[", "1", ":", "]", ":", "\n", "      ", "output_width", "*=", "factor", "\n", "", "self", ".", "output_width", "=", "output_width", "\n", "self", ".", "output_shape", "=", "[", "None", ",", "output_width", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.Flatten.fprop": [[327, 329], ["tensorflow.reshape"], "methods", ["None"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "self", ".", "output_width", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.MadryMNIST.__init__": [[344, 370], ["tensorflow.keras.Sequential", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "tensorflow.keras.Sequential.add", "cleverhans.model.Model.__init__", "cleverhans.dataset.Factory", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.MaxPooling2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.MaxPooling2D", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_classes", "=", "10", ")", ":", "\n", "# NOTE: for compatibility with Madry Lab downloadable checkpoints,", "\n", "# we cannot use scopes, give these variables names, etc.", "\n", "\n", "        ", "\"\"\"\n        self.conv1 = tf.layers.Conv2D(32, (5, 5), activation='relu', padding='same', name='conv1')\n        self.pool1 = tf.layers.MaxPooling2D((2, 2), (2, 2), padding='same')\n        self.conv2 = tf.layers.Conv2D(64, (5, 5), activation='relu', padding='same', name='conv2')\n        self.pool2 = tf.layers.MaxPooling2D((2, 2), (2, 2), padding='same')\n        self.fc1 = tf.layers.Dense(1024, activation='relu', name='fc1')\n        self.fc2 = tf.layers.Dense(10, name='fc2')\n        \"\"\"", "\n", "\n", "keras_model", "=", "tf", ".", "keras", ".", "Sequential", "(", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "32", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "name", "=", "'conv1'", ",", "\n", "input_shape", "=", "(", "28", ",", "28", ",", "1", ")", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "64", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "name", "=", "'conv2'", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "1024", ",", "activation", "=", "'relu'", ",", "name", "=", "'fc1'", ")", ")", "\n", "keras_model", ".", "add", "(", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "10", ",", "name", "=", "'fc2'", ")", ")", "\n", "\n", "self", ".", "keras_model", "=", "keras_model", "\n", "Model", ".", "__init__", "(", "self", ",", "''", ",", "nb_classes", ",", "{", "}", ")", "\n", "self", ".", "dataset_factory", "=", "Factory", "(", "MNIST", ",", "{", "\"center\"", ":", "False", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.MadryMNIST.fprop": [[371, 381], ["collections.OrderedDict", "cleverhans_models.MadryMNIST.keras_model", "cleverhans.utils.deterministic_dict", "tensorflow.nn.softmax", "locals"], "methods", ["None"], ["", "def", "fprop", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "output", "=", "OrderedDict", "(", ")", "\n", "logits", "=", "self", ".", "keras_model", "(", "x", ")", "\n", "\n", "output", "=", "deterministic_dict", "(", "locals", "(", ")", ")", "\n", "del", "output", "[", "\"self\"", "]", "\n", "output", "[", "self", ".", "O_PROBS", "]", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "=", "logits", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._stride_arr": [[103, 106], ["None"], "function", ["None"], ["", "", "def", "_stride_arr", "(", "stride", ")", ":", "\n", "  ", "\"\"\"Map a stride scalar to the stride array for tf.nn.conv2d.\"\"\"", "\n", "return", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._batch_norm": [[223, 234], ["tensorflow.name_scope", "tensorflow.contrib.layers.batch_norm"], "function", ["None"], ["", "", "def", "_batch_norm", "(", "name", ",", "x", ")", ":", "\n", "  ", "\"\"\"Batch normalization.\"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "name", ")", ":", "\n", "    ", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "inputs", "=", "x", ",", "\n", "decay", "=", ".9", ",", "\n", "center", "=", "True", ",", "\n", "scale", "=", "True", ",", "\n", "activation_fn", "=", "None", ",", "\n", "updates_collections", "=", "None", ",", "\n", "is_training", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._residual": [[236, 269], ["tensorflow.logging.debug", "tensorflow.variable_scope", "cleverhans_models._conv", "tensorflow.variable_scope", "cleverhans_models._batch_norm", "cleverhans_models._relu", "cleverhans_models._conv", "tensorflow.variable_scope", "_relu.get_shape", "tensorflow.variable_scope", "cleverhans_models._batch_norm", "cleverhans_models._relu", "tensorflow.variable_scope", "cleverhans_models._batch_norm", "cleverhans_models._relu", "tensorflow.nn.avg_pool", "tensorflow.pad"], "function", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu"], ["", "", "def", "_residual", "(", "x", ",", "in_filter", ",", "out_filter", ",", "stride", ",", "\n", "activate_before_residual", "=", "False", ")", ":", "\n", "  ", "\"\"\"Residual unit with 2 sub layers.\"\"\"", "\n", "if", "activate_before_residual", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'shared_activation'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "x", "=", "_batch_norm", "(", "'init_bn'", ",", "x", ")", "\n", "x", "=", "_relu", "(", "x", ",", "0.1", ")", "\n", "orig_x", "=", "x", "\n", "", "", "else", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'residual_only_activation'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "      ", "orig_x", "=", "x", "\n", "x", "=", "_batch_norm", "(", "'init_bn'", ",", "x", ")", "\n", "x", "=", "_relu", "(", "x", ",", "0.1", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'sub1'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "    ", "x", "=", "_conv", "(", "'conv1'", ",", "x", ",", "3", ",", "in_filter", ",", "out_filter", ",", "stride", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'sub2'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "    ", "x", "=", "_batch_norm", "(", "'bn2'", ",", "x", ")", "\n", "x", "=", "_relu", "(", "x", ",", "0.1", ")", "\n", "x", "=", "_conv", "(", "'conv2'", ",", "x", ",", "3", ",", "out_filter", ",", "out_filter", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'sub_add'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "    ", "if", "in_filter", "!=", "out_filter", ":", "\n", "      ", "orig_x", "=", "tf", ".", "nn", ".", "avg_pool", "(", "orig_x", ",", "stride", ",", "stride", ",", "'VALID'", ")", "\n", "orig_x", "=", "tf", ".", "pad", "(", "\n", "orig_x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", "]", ",", "[", "(", "out_filter", "-", "in_filter", ")", "//", "2", ",", "\n", "(", "out_filter", "-", "in_filter", ")", "//", "2", "]", "]", ")", "\n", "", "x", "+=", "orig_x", "\n", "\n", "", "tf", ".", "logging", ".", "debug", "(", "'image after unit %s'", ",", "x", ".", "get_shape", "(", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._decay": [[271, 278], ["tensorflow.trainable_variables", "tensorflow.add_n", "var.op.name.find", "costs.append", "tensorflow.nn.l2_loss"], "function", ["None"], ["", "def", "_decay", "(", ")", ":", "\n", "  ", "\"\"\"L2 weight decay loss.\"\"\"", "\n", "costs", "=", "[", "]", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "    ", "if", "var", ".", "op", ".", "name", ".", "find", "(", "'DW'", ")", ">", "0", ":", "\n", "      ", "costs", ".", "append", "(", "tf", ".", "nn", ".", "l2_loss", "(", "var", ")", ")", "\n", "", "", "return", "tf", ".", "add_n", "(", "costs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._conv": [[280, 289], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "numpy.sqrt"], "function", ["None"], ["", "def", "_conv", "(", "name", ",", "x", ",", "filter_size", ",", "in_filters", ",", "out_filters", ",", "strides", ")", ":", "\n", "  ", "\"\"\"Convolution.\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "    ", "n", "=", "filter_size", "*", "filter_size", "*", "out_filters", "\n", "kernel", "=", "tf", ".", "get_variable", "(", "\n", "'DW'", ",", "[", "filter_size", ",", "filter_size", ",", "in_filters", ",", "out_filters", "]", ",", "\n", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "\n", "stddev", "=", "np", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "kernel", ",", "strides", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._relu": [[291, 294], ["tensorflow.where", "tensorflow.less"], "function", ["None"], ["", "", "def", "_relu", "(", "x", ",", "leakiness", "=", "0.0", ")", ":", "\n", "  ", "\"\"\"Relu, with optional leaky support.\"\"\"", "\n", "return", "tf", ".", "where", "(", "tf", ".", "less", "(", "x", ",", "0.0", ")", ",", "leakiness", "*", "x", ",", "x", ",", "name", "=", "'leaky_relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models._global_avg_pool": [[296, 299], ["tensorflow.reduce_mean", "x.get_shape"], "function", ["None"], ["", "def", "_global_avg_pool", "(", "x", ")", ":", "\n", "  ", "assert", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "4", "\n", "return", "tf", ".", "reduce_mean", "(", "x", ",", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.make_wresnet": [[331, 340], ["cleverhans_models.ResNet", "cleverhans_models.Input", "cleverhans_models.Conv2D", "cleverhans_models.Flatten", "cleverhans_models.Linear", "cleverhans_models.Softmax"], "function", ["None"], ["", "", "def", "make_wresnet", "(", "nb_classes", "=", "10", ",", "input_shape", "=", "(", "None", ",", "32", ",", "32", ",", "3", ")", ",", "scope", "=", "None", ",", "filters", "=", "None", ")", ":", "\n", "  ", "layers", "=", "[", "Input", "(", ")", ",", "\n", "Conv2D", "(", "filters", "=", "filters", ")", ",", "# the whole ResNet is basically created in this layer", "\n", "Flatten", "(", ")", ",", "\n", "Linear", "(", "nb_classes", ")", ",", "\n", "Softmax", "(", ")", "]", "\n", "\n", "model", "=", "ResNet", "(", "layers", ",", "input_shape", ",", "scope", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model.__init__": [[12, 16], ["cifar10_model.Model._build_model"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._build_model"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "    ", "\"\"\"ResNet constructor.\n    \"\"\"", "\n", "self", ".", "_build_model", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model.add_internal_summaries": [[17, 19], ["None"], "methods", ["None"], ["", "def", "add_internal_summaries", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr": [[20, 23], ["None"], "methods", ["None"], ["", "def", "_stride_arr", "(", "self", ",", "stride", ")", ":", "\n", "    ", "\"\"\"Map a stride scalar to the stride array for tf.nn.conv2d.\"\"\"", "\n", "return", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._build_model": [[24, 107], ["range", "range", "range", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.unstack", "tensorflow.placeholder_with_default", "tensorflow.pad", "tensorflow.ones", "tensorflow.zeros", "tensorflow.stack", "tensorflow.contrib.image.rotate", "tensorflow.contrib.image.transform", "tensorflow.image.resize_image_with_crop_or_pad", "tensorflow.map_fn", "cifar10_model.Model._conv", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "res_func", "tensorflow.variable_scope", "cifar10_model.Model._batch_norm", "cifar10_model.Model._relu", "cifar10_model.Model._global_avg_pool", "tensorflow.variable_scope", "cifar10_model.Model._fully_connected", "tensorflow.cast", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "cifar10_model.Model._decay", "tensorflow.zeros", "cifar10_model.Model._stride_arr", "cifar10_model.Model._stride_arr", "tensorflow.variable_scope", "res_func", "cifar10_model.Model._stride_arr", "tensorflow.variable_scope", "res_func", "cifar10_model.Model._stride_arr", "tensorflow.variable_scope", "res_func", "tensorflow.shape", "tensorflow.shape", "tensorflow.image.per_image_standardization", "cifar10_model.Model._stride_arr", "cifar10_model.Model._stride_arr", "cifar10_model.Model._stride_arr", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._global_avg_pool", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._fully_connected", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._decay", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._stride_arr"], ["", "def", "_build_model", "(", "self", ",", "config", ",", "pad_mode", "=", "'CONSTANT'", ",", "pad_size", "=", "32", ")", ":", "\n", "    ", "\"\"\"Build the core model within the graph.\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "'input'", ")", ":", "\n", "      ", "filters", "=", "config", "[", "'filters'", "]", "\n", "\n", "self", ".", "x_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "self", ".", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int64", ",", "shape", "=", "None", ")", "\n", "\n", "self", ".", "transform", "=", "tf", ".", "placeholder_with_default", "(", "tf", ".", "zeros", "(", "(", "tf", ".", "shape", "(", "self", ".", "x_input", ")", "[", "0", "]", ",", "3", ")", ")", ",", "shape", "=", "[", "None", ",", "3", "]", ")", "\n", "trans_x", ",", "trans_y", ",", "rot", "=", "tf", ".", "unstack", "(", "self", ".", "transform", ",", "axis", "=", "1", ")", "\n", "rot", "*=", "np", ".", "pi", "/", "180", "# convert degrees to radians", "\n", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder_with_default", "(", "False", ",", "[", "]", ")", "\n", "\n", "x", "=", "self", ".", "x_input", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "16", ",", "16", "]", ",", "[", "16", ",", "16", "]", ",", "[", "0", ",", "0", "]", "]", ",", "pad_mode", ")", "\n", "#rotate and translate image", "\n", "ones", "=", "tf", ".", "ones", "(", "shape", "=", "tf", ".", "shape", "(", "trans_x", ")", ")", "\n", "zeros", "=", "tf", ".", "zeros", "(", "shape", "=", "tf", ".", "shape", "(", "trans_x", ")", ")", "\n", "trans", "=", "tf", ".", "stack", "(", "[", "ones", ",", "zeros", ",", "-", "trans_x", ",", "\n", "zeros", ",", "ones", ",", "-", "trans_y", ",", "\n", "zeros", ",", "zeros", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "tf", ".", "contrib", ".", "image", ".", "rotate", "(", "x", ",", "rot", ",", "interpolation", "=", "'BILINEAR'", ")", "\n", "x", "=", "tf", ".", "contrib", ".", "image", ".", "transform", "(", "x", ",", "trans", ",", "interpolation", "=", "'BILINEAR'", ")", "\n", "x", "=", "tf", ".", "image", ".", "resize_image_with_crop_or_pad", "(", "x", ",", "pad_size", ",", "pad_size", ")", "\n", "\n", "# everything below this point is generic (independent of spatial attacks)", "\n", "self", ".", "x_image", "=", "x", "\n", "x", "=", "tf", ".", "map_fn", "(", "lambda", "img", ":", "tf", ".", "image", ".", "per_image_standardization", "(", "img", ")", ",", "x", ")", "\n", "\n", "x", "=", "self", ".", "_conv", "(", "'init_conv'", ",", "x", ",", "3", ",", "3", ",", "16", ",", "self", ".", "_stride_arr", "(", "1", ")", ")", "\n", "\n", "", "strides", "=", "[", "1", ",", "2", ",", "2", "]", "\n", "activate_before_residual", "=", "[", "True", ",", "False", ",", "False", "]", "\n", "res_func", "=", "self", ".", "_residual", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'unit_1_0'", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "0", "]", ",", "filters", "[", "1", "]", ",", "self", ".", "_stride_arr", "(", "strides", "[", "0", "]", ")", ",", "\n", "activate_before_residual", "[", "0", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "'unit_1_%d'", "%", "i", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "1", "]", ",", "filters", "[", "1", "]", ",", "self", ".", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'unit_2_0'", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "1", "]", ",", "filters", "[", "2", "]", ",", "self", ".", "_stride_arr", "(", "strides", "[", "1", "]", ")", ",", "\n", "activate_before_residual", "[", "1", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "'unit_2_%d'", "%", "i", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "2", "]", ",", "filters", "[", "2", "]", ",", "self", ".", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'unit_3_0'", ")", ":", "\n", "      ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "2", "]", ",", "filters", "[", "3", "]", ",", "self", ".", "_stride_arr", "(", "strides", "[", "2", "]", ")", ",", "\n", "activate_before_residual", "[", "2", "]", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "'unit_3_%d'", "%", "i", ")", ":", "\n", "        ", "x", "=", "res_func", "(", "x", ",", "filters", "[", "3", "]", ",", "filters", "[", "3", "]", ",", "self", ".", "_stride_arr", "(", "1", ")", ",", "False", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'unit_last'", ")", ":", "\n", "      ", "x", "=", "self", ".", "_batch_norm", "(", "'final_bn'", ",", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ",", "0.1", ")", "\n", "x", "=", "self", ".", "_global_avg_pool", "(", "x", ")", "\n", "\n", "# uncomment to add and extra fc layer", "\n", "#with tf.variable_scope('unit_fc'):", "\n", "#  self.pre_softmax = self._fully_connected(x, 1024)", "\n", "#  x = self._relu(x, 0.1)", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'logit'", ")", ":", "\n", "      ", "self", ".", "pre_softmax", "=", "self", ".", "_fully_connected", "(", "x", ",", "10", ")", "\n", "\n", "", "self", ".", "predictions", "=", "tf", ".", "argmax", "(", "self", ".", "pre_softmax", ",", "1", ")", "\n", "self", ".", "correct_prediction", "=", "tf", ".", "equal", "(", "self", ".", "predictions", ",", "self", ".", "y_input", ")", "\n", "self", ".", "num_correct", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "cast", "(", "self", ".", "correct_prediction", ",", "tf", ".", "int64", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "cast", "(", "self", ".", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'costs'", ")", ":", "\n", "      ", "self", ".", "y_xent", "=", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "\n", "logits", "=", "self", ".", "pre_softmax", ",", "labels", "=", "self", ".", "y_input", ")", "\n", "self", ".", "xent", "=", "tf", ".", "reduce_sum", "(", "self", ".", "y_xent", ",", "name", "=", "'y_xent'", ")", "\n", "self", ".", "mean_xent", "=", "tf", ".", "reduce_mean", "(", "self", ".", "y_xent", ")", "\n", "self", ".", "weight_decay_loss", "=", "self", ".", "_decay", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm": [[108, 119], ["tensorflow.name_scope", "tensorflow.contrib.layers.batch_norm"], "methods", ["None"], ["", "", "def", "_batch_norm", "(", "self", ",", "name", ",", "x", ")", ":", "\n", "    ", "\"\"\"Batch normalization.\"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "name", ")", ":", "\n", "      ", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "inputs", "=", "x", ",", "\n", "decay", "=", ".9", ",", "\n", "center", "=", "True", ",", "\n", "scale", "=", "True", ",", "\n", "activation_fn", "=", "None", ",", "\n", "updates_collections", "=", "None", ",", "\n", "is_training", "=", "self", ".", "is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._residual": [[120, 152], ["tensorflow.logging.debug", "tensorflow.variable_scope", "cifar10_model.Model._conv", "tensorflow.variable_scope", "cifar10_model.Model._batch_norm", "cifar10_model.Model._relu", "cifar10_model.Model._conv", "tensorflow.variable_scope", "cifar10_model.Model.get_shape", "tensorflow.variable_scope", "cifar10_model.Model._batch_norm", "cifar10_model.Model._relu", "tensorflow.variable_scope", "cifar10_model.Model._batch_norm", "cifar10_model.Model._relu", "tensorflow.nn.avg_pool", "tensorflow.pad"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._batch_norm", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu"], ["", "", "def", "_residual", "(", "self", ",", "x", ",", "in_filter", ",", "out_filter", ",", "stride", ",", "\n", "activate_before_residual", "=", "False", ")", ":", "\n", "    ", "\"\"\"Residual unit with 2 sub layers.\"\"\"", "\n", "if", "activate_before_residual", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "'shared_activation'", ")", ":", "\n", "        ", "x", "=", "self", ".", "_batch_norm", "(", "'init_bn'", ",", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ",", "0.1", ")", "\n", "orig_x", "=", "x", "\n", "", "", "else", ":", "\n", "      ", "with", "tf", ".", "variable_scope", "(", "'residual_only_activation'", ")", ":", "\n", "        ", "orig_x", "=", "x", "\n", "x", "=", "self", ".", "_batch_norm", "(", "'init_bn'", ",", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ",", "0.1", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'sub1'", ")", ":", "\n", "      ", "x", "=", "self", ".", "_conv", "(", "'conv1'", ",", "x", ",", "3", ",", "in_filter", ",", "out_filter", ",", "stride", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'sub2'", ")", ":", "\n", "      ", "x", "=", "self", ".", "_batch_norm", "(", "'bn2'", ",", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ",", "0.1", ")", "\n", "x", "=", "self", ".", "_conv", "(", "'conv2'", ",", "x", ",", "3", ",", "out_filter", ",", "out_filter", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'sub_add'", ")", ":", "\n", "      ", "if", "in_filter", "!=", "out_filter", ":", "\n", "        ", "orig_x", "=", "tf", ".", "nn", ".", "avg_pool", "(", "orig_x", ",", "stride", ",", "stride", ",", "'VALID'", ")", "\n", "orig_x", "=", "tf", ".", "pad", "(", "\n", "orig_x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "\n", "[", "(", "out_filter", "-", "in_filter", ")", "//", "2", ",", "(", "out_filter", "-", "in_filter", ")", "//", "2", "]", "]", ")", "\n", "", "x", "+=", "orig_x", "\n", "\n", "", "tf", ".", "logging", ".", "debug", "(", "'image after unit %s'", ",", "x", ".", "get_shape", "(", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._decay": [[153, 160], ["tensorflow.trainable_variables", "tensorflow.add_n", "var.op.name.find", "costs.append", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "_decay", "(", "self", ")", ":", "\n", "    ", "\"\"\"L2 weight decay loss.\"\"\"", "\n", "costs", "=", "[", "]", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "      ", "if", "var", ".", "op", ".", "name", ".", "find", "(", "'DW'", ")", ">=", "0", ":", "\n", "        ", "costs", ".", "append", "(", "tf", ".", "nn", ".", "l2_loss", "(", "var", ")", ")", "\n", "", "", "return", "tf", ".", "add_n", "(", "costs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._conv": [[161, 170], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "numpy.sqrt"], "methods", ["None"], ["", "def", "_conv", "(", "self", ",", "name", ",", "x", ",", "filter_size", ",", "in_filters", ",", "out_filters", ",", "strides", ")", ":", "\n", "    ", "\"\"\"Convolution.\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "      ", "n", "=", "filter_size", "*", "filter_size", "*", "out_filters", "\n", "kernel", "=", "tf", ".", "get_variable", "(", "\n", "'DW'", ",", "[", "filter_size", ",", "filter_size", ",", "in_filters", ",", "out_filters", "]", ",", "\n", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "\n", "stddev", "=", "np", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "kernel", ",", "strides", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._relu": [[171, 174], ["tensorflow.where", "tensorflow.less"], "methods", ["None"], ["", "", "def", "_relu", "(", "self", ",", "x", ",", "leakiness", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"Relu, with optional leaky support.\"\"\"", "\n", "return", "tf", ".", "where", "(", "tf", ".", "less", "(", "x", ",", "0.0", ")", ",", "leakiness", "*", "x", ",", "x", ",", "name", "=", "'leaky_relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._fully_connected": [[175, 188], ["len", "range", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.xw_plus_b", "int", "tensorflow.uniform_unit_scaling_initializer", "tensorflow.constant_initializer", "tensorflow.shape"], "methods", ["None"], ["", "def", "_fully_connected", "(", "self", ",", "x", ",", "out_dim", ")", ":", "\n", "    ", "\"\"\"FullyConnected layer for final output.\"\"\"", "\n", "num_non_batch_dimensions", "=", "len", "(", "x", ".", "shape", ")", "\n", "prod_non_batch_dimensions", "=", "1", "\n", "for", "ii", "in", "range", "(", "num_non_batch_dimensions", "-", "1", ")", ":", "\n", "      ", "prod_non_batch_dimensions", "*=", "int", "(", "x", ".", "shape", "[", "ii", "+", "1", "]", ")", "\n", "", "x", "=", "tf", ".", "reshape", "(", "x", ",", "[", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "w", "=", "tf", ".", "get_variable", "(", "\n", "'DW'", ",", "[", "prod_non_batch_dimensions", ",", "out_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "uniform_unit_scaling_initializer", "(", "factor", "=", "1.0", ")", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "out_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", ")", ")", "\n", "return", "tf", ".", "nn", ".", "xw_plus_b", "(", "x", ",", "w", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_model.Model._global_avg_pool": [[189, 192], ["tensorflow.reduce_mean", "x.get_shape"], "methods", ["None"], ["", "def", "_global_avg_pool", "(", "self", ",", "x", ")", ":", "\n", "    ", "assert", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "4", "\n", "return", "tf", ".", "reduce_mean", "(", "x", ",", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval.show_images": [[27, 52], ["len", "matplotlib.figure", "enumerate", "matplotlib.savefig", "matplotlib.close", "plt.figure.add_subplot", "matplotlib.imshow", "numpy.ceil", "matplotlib.gray", "numpy.max", "image.astype.astype", "float"], "function", ["None"], ["def", "show_images", "(", "images", ",", "cols", "=", "1", ",", "figpath", "=", "\"figure.png\"", ")", ":", "\n", "    ", "\"\"\"Display a list of images in a single figure with matplotlib.\n\n    Parameters\n    ---------\n    images: List of np.arrays compatible with plt.imshow.\n\n    cols (Default = 1): Number of columns in figure (number of rows is\n                        set to np.ceil(n_images/float(cols))).\n\n    titles: List of titles corresponding to each image. Must have\n            the same length as titles.\n    \"\"\"", "\n", "n_images", "=", "len", "(", "images", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "for", "n", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "        ", "a", "=", "fig", ".", "add_subplot", "(", "cols", ",", "np", ".", "ceil", "(", "n_images", "/", "float", "(", "cols", ")", ")", ",", "n", "+", "1", ")", "\n", "if", "image", ".", "ndim", "==", "2", ":", "\n", "            ", "plt", ".", "gray", "(", ")", "\n", "", "if", "np", ".", "max", "(", "image", ")", ">", "1.0", ":", "\n", "            ", "image", "=", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "plt", ".", "imshow", "(", "image", ")", "\n", "", "plt", ".", "savefig", "(", "figpath", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval.evaluate": [[55, 220], ["numpy.random.seed", "tensorflow.random.set_random_seed", "tensorflow.contrib.framework.get_or_create_global_step", "int", "numpy.zeros", "range", "input_data.read_data_sets", "cifar10_input.CIFAR10Data", "math.ceil", "len", "min", "numpy.zeros", "sess.run", "enumerate", "numpy.sum", "len", "numpy.bitwise_and.reduce", "print", "enumerate", "print", "enumerate", "enumerate", "tensorflow.Summary", "summary_writer.add_summary", "dict", "DataSet", "DataSet", "base.Datasets", "range", "range", "range", "range", "attack.perturb", "sess.run", "total_corr_advs[].extend", "l1_norms[].extend", "l2_norms[].extend", "linf_norms[].extend", "numpy.asarray", "len", "numpy.sum", "print", "print", "print", "print", "print", "print", "len", "print", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "len", "values.append", "values.extend", "tf.contrib.framework.get_or_create_global_step.eval", "len", "len", "len", "len", "base.Datasets.train.images[].reshape", "cifar10_input.CIFAR10Data.train_data.xs[].astype", "cifar10_input.CIFAR10Data.eval_data.xs[].astype", "len", "numpy.sum", "numpy.linalg.norm", "numpy.max", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "len", "base.Datasets.test.images[].reshape", "cifar10_input.CIFAR10Data.eval_data.xs[].astype", "numpy.zeros", "numpy.abs().reshape", "numpy.abs().reshape", "numpy.mean", "numpy.min", "numpy.max", "numpy.mean", "numpy.min", "numpy.max", "numpy.mean", "numpy.min", "numpy.max", "len", "len", "len", "len", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.pgd_attack.PGDAttack.perturb"], ["", "def", "evaluate", "(", "model", ",", "eval_attacks", ",", "sess", ",", "config", ",", "plot", "=", "False", ",", "summary_writer", "=", "None", ",", "eval_train", "=", "False", ",", "eval_validation", "=", "False", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "num_eval_examples", "=", "config", "[", "'num_eval_examples'", "]", "\n", "eval_batch_size", "=", "config", "[", "'eval_batch_size'", "]", "\n", "\n", "dataset", "=", "config", "[", "\"data\"", "]", "\n", "assert", "dataset", "in", "[", "\"mnist\"", ",", "\"cifar10\"", "]", "\n", "\n", "if", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'MNIST_data'", ",", "one_hot", "=", "False", ")", "\n", "if", "\"model_type\"", "in", "config", "and", "config", "[", "\"model_type\"", "]", "==", "\"linear\"", ":", "\n", "            ", "x_train", "=", "mnist", ".", "train", ".", "images", "\n", "y_train", "=", "mnist", ".", "train", ".", "labels", "\n", "x_test", "=", "mnist", ".", "test", ".", "images", "\n", "y_test", "=", "mnist", ".", "test", ".", "labels", "\n", "\n", "pos_train", "=", "(", "y_train", "==", "5", ")", "|", "(", "y_train", "==", "7", ")", "\n", "x_train", "=", "x_train", "[", "pos_train", "]", "\n", "y_train", "=", "y_train", "[", "pos_train", "]", "\n", "y_train", "=", "(", "y_train", "==", "5", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "pos_test", "=", "(", "y_test", "==", "5", ")", "|", "(", "y_test", "==", "7", ")", "\n", "x_test", "=", "x_test", "[", "pos_test", "]", "\n", "y_test", "=", "y_test", "[", "pos_test", "]", "\n", "y_test", "=", "(", "y_test", "==", "5", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "from", "tensorflow", ".", "contrib", ".", "learn", ".", "python", ".", "learn", ".", "datasets", ".", "mnist", "import", "DataSet", "\n", "from", "tensorflow", ".", "contrib", ".", "learn", ".", "python", ".", "learn", ".", "datasets", "import", "base", "\n", "\n", "options", "=", "dict", "(", "dtype", "=", "tf", ".", "uint8", ",", "reshape", "=", "False", ",", "seed", "=", "None", ")", "\n", "train", "=", "DataSet", "(", "x_train", ",", "y_train", ",", "**", "options", ")", "\n", "test", "=", "DataSet", "(", "x_test", ",", "y_test", ",", "**", "options", ")", "\n", "\n", "mnist", "=", "base", ".", "Datasets", "(", "train", "=", "train", ",", "validation", "=", "None", ",", "test", "=", "test", ")", "\n", "", "", "else", ":", "\n", "        ", "import", "cifar10_input", "\n", "data_path", "=", "config", "[", "\"data_path\"", "]", "\n", "cifar", "=", "cifar10_input", ".", "CIFAR10Data", "(", "data_path", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "tf", ".", "random", ".", "set_random_seed", "(", "0", ")", "\n", "global_step", "=", "tf", ".", "contrib", ".", "framework", ".", "get_or_create_global_step", "(", ")", "\n", "\n", "# Iterate over the samples batch-by-batch", "\n", "num_batches", "=", "int", "(", "math", ".", "ceil", "(", "num_eval_examples", "/", "eval_batch_size", ")", ")", "\n", "total_xent_nat", "=", "0.", "\n", "total_xent_advs", "=", "np", ".", "zeros", "(", "len", "(", "eval_attacks", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "total_corr_nat", "=", "0.", "\n", "total_corr_advs", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "eval_attacks", ")", ")", "]", "\n", "\n", "l1_norms", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "eval_attacks", ")", ")", "]", "\n", "l2_norms", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "eval_attacks", ")", ")", "]", "\n", "linf_norms", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "eval_attacks", ")", ")", "]", "\n", "\n", "for", "ibatch", "in", "range", "(", "num_batches", ")", ":", "\n", "        ", "bstart", "=", "ibatch", "*", "eval_batch_size", "\n", "bend", "=", "min", "(", "bstart", "+", "eval_batch_size", ",", "num_eval_examples", ")", "\n", "\n", "if", "eval_train", ":", "\n", "            ", "if", "dataset", "==", "\"mnist\"", ":", "\n", "                ", "x_batch", "=", "mnist", ".", "train", ".", "images", "[", "bstart", ":", "bend", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_batch", "=", "mnist", ".", "train", ".", "labels", "[", "bstart", ":", "bend", "]", "\n", "", "else", ":", "\n", "                ", "x_batch", "=", "cifar", ".", "train_data", ".", "xs", "[", "bstart", ":", "bend", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "y_batch", "=", "cifar", ".", "train_data", ".", "ys", "[", "bstart", ":", "bend", "]", "\n", "", "", "elif", "eval_validation", ":", "\n", "            ", "assert", "dataset", "==", "\"cifar10\"", "\n", "offset", "=", "len", "(", "cifar", ".", "eval_data", ".", "ys", ")", "-", "num_eval_examples", "\n", "x_batch", "=", "cifar", ".", "eval_data", ".", "xs", "[", "offset", "+", "bstart", ":", "offset", "+", "bend", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "y_batch", "=", "cifar", ".", "eval_data", ".", "ys", "[", "offset", "+", "bstart", ":", "offset", "+", "bend", "]", "\n", "\n", "", "else", ":", "\n", "            ", "if", "dataset", "==", "\"mnist\"", ":", "\n", "                ", "x_batch", "=", "mnist", ".", "test", ".", "images", "[", "bstart", ":", "bend", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_batch", "=", "mnist", ".", "test", ".", "labels", "[", "bstart", ":", "bend", "]", "\n", "", "else", ":", "\n", "                ", "x_batch", "=", "cifar", ".", "eval_data", ".", "xs", "[", "bstart", ":", "bend", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "y_batch", "=", "cifar", ".", "eval_data", ".", "ys", "[", "bstart", ":", "bend", "]", "\n", "\n", "", "", "noop_trans", "=", "np", ".", "zeros", "(", "[", "len", "(", "x_batch", ")", ",", "3", "]", ")", "\n", "dict_nat", "=", "{", "model", ".", "x_input", ":", "x_batch", ",", "\n", "model", ".", "y_input", ":", "y_batch", ",", "\n", "model", ".", "is_training", ":", "False", ",", "\n", "model", ".", "transform", ":", "noop_trans", "}", "\n", "\n", "cur_corr_nat", ",", "cur_xent_nat", "=", "sess", ".", "run", "(", "\n", "[", "model", ".", "num_correct", ",", "model", ".", "xent", "]", ",", "\n", "feed_dict", "=", "dict_nat", ")", "\n", "\n", "total_xent_nat", "+=", "cur_xent_nat", "\n", "total_corr_nat", "+=", "cur_corr_nat", "\n", "\n", "for", "i", ",", "attack", "in", "enumerate", "(", "eval_attacks", ")", ":", "\n", "            ", "x_batch_adv", ",", "adv_trans", "=", "attack", ".", "perturb", "(", "x_batch", ",", "y_batch", ",", "sess", ")", "\n", "\n", "dict_adv", "=", "{", "model", ".", "x_input", ":", "x_batch_adv", ",", "\n", "model", ".", "y_input", ":", "y_batch", ",", "\n", "model", ".", "is_training", ":", "False", ",", "\n", "model", ".", "transform", ":", "adv_trans", "if", "adv_trans", "is", "not", "None", "else", "np", ".", "zeros", "(", "[", "len", "(", "x_batch", ")", ",", "3", "]", ")", "}", "\n", "\n", "cur_corr_adv", ",", "cur_xent_adv", ",", "cur_corr_pred", ",", "cur_adv_images", "=", "sess", ".", "run", "(", "[", "model", ".", "num_correct", ",", "model", ".", "xent", ",", "model", ".", "correct_prediction", ",", "model", ".", "x_image", "]", ",", "\n", "feed_dict", "=", "dict_adv", ")", "\n", "\n", "total_xent_advs", "[", "i", "]", "+=", "cur_xent_adv", "\n", "total_corr_advs", "[", "i", "]", ".", "extend", "(", "cur_corr_pred", ")", "\n", "\n", "l1_norms", "[", "i", "]", ".", "extend", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "x_batch_adv", "-", "x_batch", ")", ".", "reshape", "(", "len", "(", "x_batch", ")", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "l2_norms", "[", "i", "]", ".", "extend", "(", "np", ".", "linalg", ".", "norm", "(", "(", "x_batch_adv", "-", "x_batch", ")", ".", "reshape", "(", "len", "(", "x_batch", ")", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "linf_norms", "[", "i", "]", ".", "extend", "(", "np", ".", "max", "(", "np", ".", "abs", "(", "x_batch_adv", "-", "x_batch", ")", ".", "reshape", "(", "len", "(", "x_batch", ")", ",", "-", "1", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n", "", "", "avg_xent_nat", "=", "total_xent_nat", "/", "num_eval_examples", "\n", "acc_nat", "=", "total_corr_nat", "/", "num_eval_examples", "\n", "\n", "avg_xent_advs", "=", "total_xent_advs", "/", "num_eval_examples", "\n", "acc_advs", "=", "np", ".", "sum", "(", "total_corr_advs", ",", "axis", "=", "-", "1", ")", "/", "num_eval_examples", "\n", "\n", "if", "len", "(", "eval_attacks", ")", ">", "0", ":", "\n", "        ", "tot_correct", "=", "np", ".", "bitwise_and", ".", "reduce", "(", "np", ".", "asarray", "(", "total_corr_advs", ")", ",", "0", ")", "\n", "assert", "len", "(", "tot_correct", ")", "==", "num_eval_examples", "\n", "any_acc", "=", "np", ".", "sum", "(", "tot_correct", ")", "/", "num_eval_examples", "\n", "\n", "", "if", "verbose", ":", "\n", "        ", "print", "(", "'natural: {:.2f}%'", ".", "format", "(", "100", "*", "acc_nat", ")", ")", "\n", "for", "i", ",", "attack", "in", "enumerate", "(", "eval_attacks", ")", ":", "\n", "            ", "t", "=", "attack", ".", "name", "\n", "print", "(", "'adversarial ({}):'", ".", "format", "(", "t", ")", ")", "\n", "print", "(", "'\\tacc: {:.2f}% '", ".", "format", "(", "100", "*", "acc_advs", "[", "i", "]", ")", ")", "\n", "print", "(", "\"\\tmean(l1)={:.1f}, min(l1)={:.1f}, max(l1)={:.1f}\"", ".", "format", "(", "\n", "np", ".", "mean", "(", "l1_norms", "[", "i", "]", ")", ",", "np", ".", "min", "(", "l1_norms", "[", "i", "]", ")", ",", "np", ".", "max", "(", "l1_norms", "[", "i", "]", ")", ")", ")", "\n", "print", "(", "\"\\tmean(l2)={:.1f}, min(l2)={:.1f}, max(l2)={:.1f}\"", ".", "format", "(", "\n", "np", ".", "mean", "(", "l2_norms", "[", "i", "]", ")", ",", "np", ".", "min", "(", "l2_norms", "[", "i", "]", ")", ",", "np", ".", "max", "(", "l2_norms", "[", "i", "]", ")", ")", ")", "\n", "print", "(", "\"\\tmean(linf)={:.1f}, min(linf)={:.1f}, max(linf)={:.1f}\"", ".", "format", "(", "\n", "np", ".", "mean", "(", "linf_norms", "[", "i", "]", ")", ",", "np", ".", "min", "(", "linf_norms", "[", "i", "]", ")", ",", "np", ".", "max", "(", "linf_norms", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "print", "(", "'avg nat loss: {:.2f}'", ".", "format", "(", "avg_xent_nat", ")", ")", "\n", "for", "i", ",", "attack", "in", "enumerate", "(", "eval_attacks", ")", ":", "\n", "            ", "t", "=", "attack", ".", "name", "\n", "print", "(", "'avg adv loss ({}): {:.2f}'", ".", "format", "(", "t", ",", "avg_xent_advs", "[", "i", "]", ")", ")", "\n", "\n", "", "if", "len", "(", "eval_attacks", ")", ">", "0", ":", "\n", "            ", "print", "(", "\"any attack: {:.2f}%\"", ".", "format", "(", "100", "*", "any_acc", ")", ")", "\n", "\n", "", "", "if", "summary_writer", ":", "\n", "\n", "        ", "values", "=", "[", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'xent nat'", ",", "simple_value", "=", "avg_xent_nat", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'accuracy nat'", ",", "simple_value", "=", "acc_nat", ")", "\n", "]", "\n", "if", "len", "(", "eval_attacks", ")", ">", "0", ":", "\n", "            ", "values", ".", "append", "(", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'accuracy adv any'", ",", "simple_value", "=", "any_acc", ")", ")", "\n", "\n", "", "for", "i", ",", "attack", "in", "enumerate", "(", "eval_attacks", ")", ":", "\n", "            ", "t", "=", "attack", ".", "name", "\n", "adv_values", "=", "[", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'xent adv eval ({})'", ".", "format", "(", "t", ")", ",", "simple_value", "=", "avg_xent_advs", "[", "i", "]", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'xent adv ({})'", ".", "format", "(", "t", ")", ",", "simple_value", "=", "avg_xent_advs", "[", "i", "]", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'accuracy adv eval ({})'", ".", "format", "(", "t", ")", ",", "simple_value", "=", "acc_advs", "[", "i", "]", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'accuracy adv ({})'", ".", "format", "(", "t", ")", ",", "simple_value", "=", "acc_advs", "[", "i", "]", ")", "\n", "]", "\n", "values", ".", "extend", "(", "adv_values", ")", "\n", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "values", ")", "\n", "summary_writer", ".", "add_summary", "(", "summary", ",", "global_step", ".", "eval", "(", "sess", ")", ")", "\n", "\n", "", "return", "acc_nat", ",", "total_corr_advs", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_fb.evaluate_fb": [[18, 165], ["foolbox.models.TensorFlowModel", "int", "tqdm.tqdm", "range", "tqdm.tqdm.close", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.mean", "numpy.mean", "print", "print", "print", "print", "print", "print", "foolbox.attacks.BoundaryAttack", "foolbox.attacks.PointwiseAttack", "input_data.read_data_sets", "cifar10_input.CIFAR10Data", "math.ceil", "min", "zip", "numpy.argmax", "np.asarray.extend", "np.asarray.extend", "numpy.mean", "dict", "DataSet", "DataSet", "base.Datasets", "base.Datasets.test.images[].reshape", "cifar10_input.CIFAR10Data.eval_data.xs[].astype", "range", "np.asarray.append", "adversarials.append", "preds_adv.append", "foolbox.models.TensorFlowModel.batch_predictions", "numpy.asarray", "numpy.asarray", "numpy.asarray", "print", "numpy.min", "numpy.max", "numpy.mean", "numpy.median", "tqdm.tqdm.update", "numpy.mean", "foolbox.attacks.PointwiseAttack.", "foolbox.attacks.PointwiseAttack.", "numpy.argmax", "numpy.sum", "numpy.sqrt", "print", "foolbox.models.TensorFlowModel.predictions", "numpy.asarray", "numpy.argmax", "numpy.abs", "numpy.sum", "print", "foolbox.models.TensorFlowModel.batch_predictions", "numpy.square", "print", "print", "numpy.sqrt", "numpy.argmin", "numpy.argmin", "numpy.sum", "numpy.square"], "function", ["None"], ["def", "evaluate_fb", "(", "model", ",", "config", ",", "x_min", ",", "x_max", ",", "norm", "=", "'l1'", ",", "bound", "=", "None", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "fmodel", "=", "foolbox", ".", "models", ".", "TensorFlowModel", "(", "model", ".", "x_input", ",", "model", ".", "pre_softmax", ",", "(", "x_min", ",", "x_max", ")", ")", "\n", "\n", "if", "norm", "==", "'l2'", ":", "\n", "        ", "attack", "=", "foolbox", ".", "attacks", ".", "BoundaryAttack", "(", "fmodel", ")", "\n", "", "else", ":", "\n", "        ", "attack", "=", "foolbox", ".", "attacks", ".", "PointwiseAttack", "(", "fmodel", ")", "\n", "\n", "", "dataset", "=", "config", "[", "\"data\"", "]", "\n", "num_eval_examples", "=", "config", "[", "'num_eval_examples'", "]", "\n", "eval_batch_size", "=", "config", "[", "'eval_batch_size'", "]", "\n", "\n", "if", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'MNIST_data'", ",", "one_hot", "=", "False", ")", "\n", "\n", "if", "\"model_type\"", "in", "config", "and", "config", "[", "\"model_type\"", "]", "==", "\"linear\"", ":", "\n", "            ", "x_train", "=", "mnist", ".", "train", ".", "images", "\n", "y_train", "=", "mnist", ".", "train", ".", "labels", "\n", "x_test", "=", "mnist", ".", "test", ".", "images", "\n", "y_test", "=", "mnist", ".", "test", ".", "labels", "\n", "\n", "pos_train", "=", "(", "y_train", "==", "5", ")", "|", "(", "y_train", "==", "7", ")", "\n", "x_train", "=", "x_train", "[", "pos_train", "]", "\n", "y_train", "=", "y_train", "[", "pos_train", "]", "\n", "y_train", "=", "(", "y_train", "==", "5", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "pos_test", "=", "(", "y_test", "==", "5", ")", "|", "(", "y_test", "==", "7", ")", "\n", "x_test", "=", "x_test", "[", "pos_test", "]", "\n", "y_test", "=", "y_test", "[", "pos_test", "]", "\n", "y_test", "=", "(", "y_test", "==", "5", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "from", "tensorflow", ".", "contrib", ".", "learn", ".", "python", ".", "learn", ".", "datasets", ".", "mnist", "import", "DataSet", "\n", "from", "tensorflow", ".", "contrib", ".", "learn", ".", "python", ".", "learn", ".", "datasets", "import", "base", "\n", "\n", "options", "=", "dict", "(", "dtype", "=", "tf", ".", "uint8", ",", "reshape", "=", "False", ",", "seed", "=", "None", ")", "\n", "train", "=", "DataSet", "(", "x_train", ",", "y_train", ",", "**", "options", ")", "\n", "test", "=", "DataSet", "(", "x_test", ",", "y_test", ",", "**", "options", ")", "\n", "\n", "mnist", "=", "base", ".", "Datasets", "(", "train", "=", "train", ",", "validation", "=", "None", ",", "test", "=", "test", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "import", "cifar10_input", "\n", "data_path", "=", "config", "[", "\"data_path\"", "]", "\n", "cifar", "=", "cifar10_input", ".", "CIFAR10Data", "(", "data_path", ")", "\n", "\n", "# Iterate over the samples batch-by-batch", "\n", "", "num_batches", "=", "int", "(", "math", ".", "ceil", "(", "num_eval_examples", "/", "eval_batch_size", ")", ")", "\n", "all_corr_nat", "=", "[", "]", "\n", "all_corr_adv", "=", "[", "]", "\n", "lps", "=", "[", "]", "\n", "\n", "num_inconsistencies", "=", "0", "\n", "num_solved_inconsistencies", "=", "0", "\n", "\n", "pbar", "=", "tqdm", "(", "total", "=", "num_eval_examples", ")", "\n", "\n", "for", "ibatch", "in", "range", "(", "num_batches", ")", ":", "\n", "        ", "bstart", "=", "ibatch", "*", "eval_batch_size", "\n", "bend", "=", "min", "(", "bstart", "+", "eval_batch_size", ",", "num_eval_examples", ")", "\n", "\n", "if", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "x_batch", "=", "mnist", ".", "test", ".", "images", "[", "bstart", ":", "bend", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_batch", "=", "mnist", ".", "test", ".", "labels", "[", "bstart", ":", "bend", "]", "\n", "", "else", ":", "\n", "            ", "x_batch", "=", "cifar", ".", "eval_data", ".", "xs", "[", "bstart", ":", "bend", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "y_batch", "=", "cifar", ".", "eval_data", ".", "ys", "[", "bstart", ":", "bend", "]", "\n", "\n", "", "adversarials", "=", "[", "]", "\n", "preds_adv", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "zip", "(", "x_batch", ",", "y_batch", ")", ":", "\n", "\n", "            ", "for", "trial", "in", "range", "(", "1", ")", ":", "\n", "                ", "if", "norm", "==", "\"l2\"", ":", "\n", "                    ", "adversarial", "=", "attack", "(", "x", ",", "y", ",", "iterations", "=", "5000", ",", "max_directions", "=", "25", ")", "\n", "", "else", ":", "\n", "                    ", "adversarial", "=", "attack", "(", "x", ",", "y", ")", "\n", "", "failed", "=", "False", "\n", "if", "adversarial", "is", "None", ":", "\n", "                    ", "failed", "=", "True", "\n", "adversarial", "=", "x", "\n", "\n", "", "pred_adv", "=", "y", "\n", "if", "not", "failed", ":", "\n", "                    ", "pred_adv", "=", "np", ".", "argmax", "(", "fmodel", ".", "predictions", "(", "adversarial", ")", ")", "\n", "if", "pred_adv", "==", "y", ":", "\n", "                        ", "num_inconsistencies", "+=", "1", "\n", "if", "verbose", ":", "\n", "                            ", "print", "(", "\"Inconsistency with l2 {:.3f}!\"", ".", "format", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "adversarial", "-", "x", ")", ")", ")", ")", ")", "\n", "", "new_adversarials", "=", "np", ".", "asarray", "(", "[", "x", "+", "a", "*", "(", "adversarial", "-", "x", ")", "for", "a", "in", "[", "1.001", ",", "1.005", ",", "1.01", ",", "1.05", ",", "1.1", "]", "]", ")", "\n", "new_preds_adv", "=", "np", ".", "argmax", "(", "fmodel", ".", "batch_predictions", "(", "new_adversarials", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "if", "(", "(", "new_preds_adv", "==", "y", ")", ")", ".", "all", "(", ")", ":", "\n", "                            ", "failed", "=", "True", "\n", "adversarial", "=", "x", "\n", "if", "verbose", ":", "\n", "                                ", "print", "(", "\"Failed to resolve inconsistency!\"", ")", "\n", "", "", "else", ":", "\n", "                            ", "adversarial", "=", "new_adversarials", "[", "np", ".", "argmin", "(", "new_preds_adv", "!=", "y", ")", "]", "\n", "pred_adv", "=", "new_preds_adv", "[", "np", ".", "argmin", "(", "new_preds_adv", "!=", "y", ")", "]", "\n", "num_solved_inconsistencies", "+=", "1", "\n", "if", "verbose", ":", "\n", "                                ", "print", "(", "\"Solved inconsistency\"", ")", "\n", "\n", "", "", "", "", "if", "norm", "==", "'l1'", ":", "\n", "                    ", "lp", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adversarial", "-", "x", ")", ")", "\n", "", "else", ":", "\n", "                    ", "lp", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "adversarial", "-", "x", ")", ")", ")", "\n", "\n", "", "if", "verbose", ":", "\n", "                    ", "print", "(", "\"trial {}\"", ".", "format", "(", "trial", ")", ",", "lp", ",", "failed", ")", "\n", "\n", "", "if", "lp", "<", "bound", ":", "\n", "                    ", "break", "\n", "", "", "lps", ".", "append", "(", "lp", ")", "\n", "adversarials", ".", "append", "(", "adversarial", ")", "\n", "preds_adv", ".", "append", "(", "pred_adv", ")", "\n", "if", "not", "verbose", ":", "\n", "                ", "pbar", ".", "update", "(", "n", "=", "1", ")", "\n", "\n", "", "", "preds", "=", "np", ".", "argmax", "(", "fmodel", ".", "batch_predictions", "(", "x_batch", ")", ",", "axis", "=", "-", "1", ")", "\n", "all_corr_nat", ".", "extend", "(", "preds", "==", "y_batch", ")", "\n", "all_corr_adv", ".", "extend", "(", "preds_adv", "==", "y_batch", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "all_corr_adv", "=", "np", ".", "asarray", "(", "all_corr_adv", ")", "\n", "all_corr_nat", "=", "np", ".", "asarray", "(", "all_corr_nat", ")", "\n", "lps", "=", "np", ".", "asarray", "(", "lps", ")", "\n", "print", "(", "'acc adv w. bound'", ",", "np", ".", "mean", "(", "all_corr_adv", "|", "(", "(", "lps", ">", "bound", ")", "&", "all_corr_nat", ")", ")", ")", "\n", "\n", "", "", "pbar", ".", "close", "(", ")", "\n", "\n", "all_corr_adv", "=", "np", ".", "asarray", "(", "all_corr_adv", ")", "\n", "all_corr_nat", "=", "np", ".", "asarray", "(", "all_corr_nat", ")", "\n", "lps", "=", "np", ".", "asarray", "(", "lps", ")", "\n", "\n", "acc_nat", "=", "np", ".", "mean", "(", "all_corr_nat", ")", "\n", "acc_adv", "=", "np", ".", "mean", "(", "all_corr_adv", ")", "\n", "print", "(", "'acc_nat'", ",", "acc_nat", ")", "\n", "print", "(", "'acc_adv'", ",", "acc_adv", ")", "\n", "print", "(", "'min(lp)={:.2f}, max(lp)={:.2f}, mean(lp)={:.2f}, median(lp)={:.2f}'", ".", "format", "(", "\n", "np", ".", "min", "(", "lps", ")", ",", "np", ".", "max", "(", "lps", ")", ",", "np", ".", "mean", "(", "lps", ")", ",", "np", ".", "median", "(", "lps", ")", ")", ")", "\n", "print", "(", "'acc adv w. bound'", ",", "np", ".", "mean", "(", "all_corr_adv", "|", "(", "(", "lps", ">", "bound", ")", "&", "all_corr_nat", ")", ")", ")", "\n", "\n", "print", "(", "\"num_inconsistencies\"", ",", "num_inconsistencies", ")", "\n", "print", "(", "\"num_solved_inconsistencies\"", ",", "num_solved_inconsistencies", ")", "\n", "\n", "return", "all_corr_nat", ",", "all_corr_adv", ",", "lps", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.one_hot": [[19, 23], ["numpy.zeros", "len", "numpy.arange", "len"], "function", ["None"], ["def", "one_hot", "(", "a", ",", "n_classes", ")", ":", "\n", "    ", "res", "=", "np", ".", "zeros", "(", "(", "len", "(", "a", ")", ",", "n_classes", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "res", "[", "np", ".", "arange", "(", "len", "(", "a", ")", ")", ",", "a", "]", "=", "1", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.evaluate_ch": [[25, 86], ["tensorflow.placeholder", "cleverhans.attacks.ElasticNetMethod.generate", "model.get_predicted_class", "model.get_predicted_class", "cleverhans.evaluation.batch_eval", "print", "print", "print", "input_data.read_data_sets", "input_data.read_data_sets.test.images[].reshape", "tensorflow.placeholder", "cifar10_input.CIFAR10Data", "tensorflow.placeholder", "cleverhans.attacks.CarliniWagnerL2", "cleverhans.attacks.ElasticNetMethod", "cleverhans.utils.set_log_level", "numpy.mean", "numpy.mean", "numpy.sqrt", "numpy.sum", "numpy.mean", "print", "cifar10_input.CIFAR10Data.eval_data.xs[].astype", "eval_ch.one_hot", "numpy.sum", "numpy.abs", "numpy.square", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.one_hot"], ["", "def", "evaluate_ch", "(", "model", ",", "config", ",", "sess", ",", "norm", "=", "'l1'", ",", "bound", "=", "None", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "dataset", "=", "config", "[", "'data'", "]", "\n", "num_eval_examples", "=", "config", "[", "'num_eval_examples'", "]", "\n", "eval_batch_size", "=", "config", "[", "'eval_batch_size'", "]", "\n", "\n", "if", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'MNIST_data'", ",", "one_hot", "=", "False", ")", "\n", "X", "=", "mnist", ".", "test", ".", "images", "[", "0", ":", "num_eval_examples", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "Y", "=", "mnist", ".", "test", ".", "labels", "[", "0", ":", "num_eval_examples", "]", "\n", "x_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "import", "cifar10_input", "\n", "data_path", "=", "config", "[", "\"data_path\"", "]", "\n", "cifar", "=", "cifar10_input", ".", "CIFAR10Data", "(", "data_path", ")", "\n", "X", "=", "cifar", ".", "eval_data", ".", "xs", "[", "0", ":", "num_eval_examples", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "Y", "=", "cifar", ".", "eval_data", ".", "ys", "[", "0", ":", "num_eval_examples", "]", "\n", "x_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "assert", "norm", "==", "'l1'", "\n", "\n", "", "if", "norm", "==", "'l2'", ":", "\n", "        ", "attack", "=", "CarliniWagnerL2", "(", "model", ",", "sess", ")", "\n", "params", "=", "{", "'batch_size'", ":", "eval_batch_size", ",", "'binary_search_steps'", ":", "9", "}", "\n", "", "else", ":", "\n", "        ", "attack", "=", "ElasticNetMethod", "(", "model", ",", "sess", ",", "clip_min", "=", "0.0", ",", "clip_max", "=", "1.0", ")", "\n", "params", "=", "{", "'beta'", ":", "1e-2", ",", "\n", "'decision_rule'", ":", "'L1'", ",", "\n", "'batch_size'", ":", "eval_batch_size", ",", "\n", "'learning_rate'", ":", "1e-2", ",", "\n", "'max_iterations'", ":", "1000", "}", "\n", "\n", "", "if", "verbose", ":", "\n", "        ", "set_log_level", "(", "logging", ".", "DEBUG", ",", "name", "=", "\"cleverhans\"", ")", "\n", "\n", "", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "int64", ",", "shape", "=", "[", "None", ",", "10", "]", ")", "\n", "params", "[", "'y'", "]", "=", "y", "\n", "adv_x", "=", "attack", ".", "generate", "(", "x_image", ",", "**", "params", ")", "\n", "preds_adv", "=", "model", ".", "get_predicted_class", "(", "adv_x", ")", "\n", "preds_nat", "=", "model", ".", "get_predicted_class", "(", "x_image", ")", "\n", "\n", "all_preds", ",", "all_preds_adv", ",", "all_adv_x", "=", "batch_eval", "(", "\n", "sess", ",", "[", "x_image", ",", "y", "]", ",", "[", "preds_nat", ",", "preds_adv", ",", "adv_x", "]", ",", "[", "X", ",", "one_hot", "(", "Y", ",", "10", ")", "]", ",", "batch_size", "=", "eval_batch_size", ")", "\n", "\n", "print", "(", "'acc nat'", ",", "np", ".", "mean", "(", "all_preds", "==", "Y", ")", ")", "\n", "print", "(", "'acc adv'", ",", "np", ".", "mean", "(", "all_preds_adv", "==", "Y", ")", ")", "\n", "\n", "if", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "X", "*=", "255.0", "\n", "all_adv_x", "*=", "255.0", "\n", "\n", "", "if", "norm", "==", "'l2'", ":", "\n", "        ", "lps", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "all_adv_x", "-", "X", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "lps", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "all_adv_x", "-", "X", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "", "print", "(", "'mean lp: '", ",", "np", ".", "mean", "(", "lps", ")", ")", "\n", "for", "b", "in", "[", "bound", ",", "bound", "/", "2.0", ",", "bound", "/", "4.0", ",", "bound", "/", "8.0", "]", ":", "\n", "        ", "print", "(", "'lp={}, acc={}'", ".", "format", "(", "b", ",", "np", ".", "mean", "(", "(", "all_preds_adv", "==", "Y", ")", "|", "(", "lps", ">", "b", ")", ")", ")", ")", "\n", "\n", "", "all_corr_adv", "=", "(", "all_preds_adv", "==", "Y", ")", "\n", "all_corr_nat", "=", "(", "all_preds", "==", "Y", ")", "\n", "return", "all_corr_nat", ",", "all_corr_adv", ",", "lps", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.get_model": [[88, 98], ["MadryMNIST", "make_wresnet"], "function", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cleverhans_models.make_wresnet"], ["", "def", "get_model", "(", "config", ")", ":", "\n", "    ", "dataset", "=", "config", "[", "\"data\"", "]", "\n", "if", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "from", "cleverhans_models", "import", "MadryMNIST", "\n", "model", "=", "MadryMNIST", "(", ")", "\n", "", "else", ":", "\n", "        ", "from", "cleverhans_models", "import", "make_wresnet", "\n", "model", "=", "make_wresnet", "(", "scope", "=", "\"a\"", ",", "filters", "=", "config", "[", "\"filters\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.eval_ch.get_saver": [[100, 109], ["tensorflow.global_variables", "tensorflow.train.Saver", "tensorflow.train.Saver"], "function", ["None"], ["", "def", "get_saver", "(", "config", ")", ":", "\n", "    ", "dataset", "=", "config", "[", "\"data\"", "]", "\n", "if", "dataset", "==", "\"cifar10\"", ":", "\n", "# nasty hack", "\n", "        ", "gvars", "=", "tf", ".", "global_variables", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "{", "v", ".", "name", "[", "2", ":", "-", "2", "]", ":", "v", "for", "v", "in", "gvars", "if", "v", ".", "name", "[", ":", "2", "]", "==", "\"a/\"", "}", ")", "\n", "", "else", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "", "return", "saver", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.CIFAR10Data.__init__": [[40, 67], ["numpy.zeros", "numpy.zeros", "enumerate", "cifar10_input.CIFAR10Data._load_datafile", "range", "cifar10_input.Dataset", "cifar10_input.Dataset", "cifar10_input.CIFAR10Data._load_datafile", "os.path.join", "open", "len", "cifar10_input.CIFAR10Data.label_names[].decode", "range", "os.path.join", "os.path.join", "pickle.load", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.CIFAR10Data._load_datafile", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.CIFAR10Data._load_datafile"], ["def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "train_filenames", "=", "[", "'data_batch_{}'", ".", "format", "(", "ii", "+", "1", ")", "for", "ii", "in", "range", "(", "5", ")", "]", "\n", "eval_filename", "=", "'test_batch'", "\n", "metadata_filename", "=", "'batches.meta'", "\n", "\n", "train_images", "=", "np", ".", "zeros", "(", "(", "50000", ",", "32", ",", "32", ",", "3", ")", ",", "dtype", "=", "'uint8'", ")", "\n", "train_labels", "=", "np", ".", "zeros", "(", "50000", ",", "dtype", "=", "'int32'", ")", "\n", "for", "ii", ",", "fname", "in", "enumerate", "(", "train_filenames", ")", ":", "\n", "            ", "cur_images", ",", "cur_labels", "=", "self", ".", "_load_datafile", "(", "\n", "os", ".", "path", ".", "join", "(", "path", ",", "fname", ")", ")", "\n", "train_images", "[", "ii", "*", "10000", ":", "(", "ii", "+", "1", ")", "*", "10000", ",", "...", "]", "=", "cur_images", "\n", "train_labels", "[", "ii", "*", "10000", ":", "(", "ii", "+", "1", ")", "*", "10000", ",", "...", "]", "=", "cur_labels", "\n", "", "eval_images", ",", "eval_labels", "=", "self", ".", "_load_datafile", "(", "\n", "os", ".", "path", ".", "join", "(", "path", ",", "eval_filename", ")", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "metadata_filename", ")", ",", "'rb'", ")", "as", "fo", ":", "\n", "              ", "if", "version", ".", "major", "==", "3", ":", "\n", "                  ", "data_dict", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'bytes'", ")", "\n", "", "else", ":", "\n", "                  ", "data_dict", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "\n", "", "self", ".", "label_names", "=", "data_dict", "[", "b'label_names'", "]", "\n", "", "for", "ii", "in", "range", "(", "len", "(", "self", ".", "label_names", ")", ")", ":", "\n", "            ", "self", ".", "label_names", "[", "ii", "]", "=", "self", ".", "label_names", "[", "ii", "]", ".", "decode", "(", "'utf-8'", ")", "\n", "\n", "", "self", ".", "train_data", "=", "Dataset", "(", "train_images", ",", "train_labels", ")", "\n", "self", ".", "eval_data", "=", "Dataset", "(", "eval_images", ",", "eval_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.CIFAR10Data._load_datafile": [[68, 80], ["open", "image_data.reshape().transpose.reshape().transpose.reshape().transpose", "pickle.load", "pickle.load", "numpy.array", "image_data.reshape().transpose.reshape().transpose.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_load_datafile", "(", "filename", ")", ":", "\n", "      ", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "fo", ":", "\n", "          ", "if", "version", ".", "major", "==", "3", ":", "\n", "              ", "data_dict", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'bytes'", ")", "\n", "", "else", ":", "\n", "              ", "data_dict", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "\n", "", "assert", "data_dict", "[", "b'data'", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "image_data", "=", "data_dict", "[", "b'data'", "]", "\n", "image_data", "=", "image_data", ".", "reshape", "(", "(", "10000", ",", "3", ",", "32", ",", "32", ")", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "return", "image_data", ",", "np", ".", "array", "(", "data_dict", "[", "b'labels'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.AugmentedCIFAR10Data.__init__": [[90, 112], ["isinstance", "tensorflow.placeholder", "tensorflow.map_fn", "tensorflow.map_fn", "tensorflow.map_fn", "cifar10_input.AugmentedDataset", "cifar10_input.AugmentedDataset", "tensorflow.image.resize_image_with_crop_or_pad", "tensorflow.random_crop", "tensorflow.image.random_flip_left_right"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "raw_cifar10data", ",", "sess", ")", ":", "\n", "        ", "assert", "isinstance", "(", "raw_cifar10data", ",", "CIFAR10Data", ")", "\n", "self", ".", "image_size", "=", "32", "\n", "\n", "# create augmentation computational graph", "\n", "self", ".", "x_input_placeholder", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "padded", "=", "tf", ".", "map_fn", "(", "lambda", "img", ":", "tf", ".", "image", ".", "resize_image_with_crop_or_pad", "(", "\n", "img", ",", "self", ".", "image_size", "+", "4", ",", "self", ".", "image_size", "+", "4", ")", ",", "\n", "self", ".", "x_input_placeholder", ")", "\n", "cropped", "=", "tf", ".", "map_fn", "(", "lambda", "img", ":", "tf", ".", "random_crop", "(", "img", ",", "[", "self", ".", "image_size", ",", "\n", "self", ".", "image_size", ",", "\n", "3", "]", ")", ",", "padded", ")", "\n", "flipped", "=", "tf", ".", "map_fn", "(", "lambda", "img", ":", "tf", ".", "image", ".", "random_flip_left_right", "(", "img", ")", ",", "cropped", ")", "\n", "self", ".", "augmented", "=", "flipped", "\n", "\n", "self", ".", "train_data", "=", "AugmentedDataset", "(", "raw_cifar10data", ".", "train_data", ",", "sess", ",", "\n", "self", ".", "x_input_placeholder", ",", "\n", "self", ".", "augmented", ")", "\n", "self", ".", "eval_data", "=", "AugmentedDataset", "(", "raw_cifar10data", ".", "eval_data", ",", "sess", ",", "\n", "self", ".", "x_input_placeholder", ",", "\n", "self", ".", "augmented", ")", "\n", "self", ".", "label_names", "=", "raw_cifar10data", ".", "label_names", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.Dataset.__init__": [[118, 124], ["numpy.random.permutation"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "xs", ",", "ys", ")", ":", "\n", "        ", "self", ".", "xs", "=", "xs", "\n", "self", ".", "n", "=", "xs", ".", "shape", "[", "0", "]", "\n", "self", ".", "ys", "=", "ys", "\n", "self", ".", "batch_start", "=", "0", "\n", "self", ".", "cur_order", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.Dataset.get_next_batch": [[125, 148], ["min", "ValueError", "min", "ValueError", "numpy.random.permutation"], "methods", ["None"], ["", "def", "get_next_batch", "(", "self", ",", "batch_size", ",", "multiple_passes", "=", "False", ",", "\n", "reshuffle_after_pass", "=", "True", ")", ":", "\n", "        ", "if", "self", ".", "n", "<", "batch_size", ":", "\n", "            ", "raise", "ValueError", "(", "'Batch size can be at most the dataset size'", ")", "\n", "", "if", "not", "multiple_passes", ":", "\n", "            ", "actual_batch_size", "=", "min", "(", "batch_size", ",", "self", ".", "n", "-", "self", ".", "batch_start", ")", "\n", "if", "actual_batch_size", "<=", "0", ":", "\n", "                ", "raise", "ValueError", "(", "'Pass through the dataset is complete.'", ")", "\n", "", "batch_end", "=", "self", ".", "batch_start", "+", "actual_batch_size", "\n", "batch_xs", "=", "self", ".", "xs", "[", "self", ".", "cur_order", "[", "self", ".", "batch_start", ":", "batch_end", "]", ",", "...", "]", "\n", "batch_ys", "=", "self", ".", "ys", "[", "self", ".", "cur_order", "[", "self", ".", "batch_start", ":", "batch_end", "]", ",", "...", "]", "\n", "self", ".", "batch_start", "+=", "actual_batch_size", "\n", "return", "batch_xs", ",", "batch_ys", "\n", "", "actual_batch_size", "=", "min", "(", "batch_size", ",", "self", ".", "n", "-", "self", ".", "batch_start", ")", "\n", "if", "actual_batch_size", "<", "batch_size", ":", "\n", "            ", "if", "reshuffle_after_pass", ":", "\n", "                ", "self", ".", "cur_order", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "n", ")", "\n", "", "self", ".", "batch_start", "=", "0", "\n", "", "batch_end", "=", "self", ".", "batch_start", "+", "batch_size", "\n", "batch_xs", "=", "self", ".", "xs", "[", "self", ".", "cur_order", "[", "self", ".", "batch_start", ":", "batch_end", "]", ",", "...", "]", "\n", "batch_ys", "=", "self", ".", "ys", "[", "self", ".", "cur_order", "[", "self", ".", "batch_start", ":", "batch_end", "]", ",", "...", "]", "\n", "self", ".", "batch_start", "+=", "actual_batch_size", "\n", "return", "batch_xs", ",", "batch_ys", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.AugmentedDataset.__init__": [[156, 162], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "raw_datasubset", ",", "sess", ",", "x_input_placeholder", ",", "\n", "augmented", ")", ":", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "raw_datasubset", "=", "raw_datasubset", "\n", "self", ".", "x_input_placeholder", "=", "x_input_placeholder", "\n", "self", ".", "augmented", "=", "augmented", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.AugmentedDataset.get_next_batch": [[163, 178], ["cifar10_input.AugmentedDataset.raw_datasubset.get_next_batch", "raw_batch[].astype", "cifar10_input.AugmentedDataset.sess.run"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.cifar10_input.AugmentedDataset.get_next_batch"], ["", "def", "get_next_batch", "(", "self", ",", "batch_size", ",", "multiple_passes", "=", "False", ",", "\n", "reshuffle_after_pass", "=", "True", ")", ":", "\n", "        ", "raw_batch", "=", "self", ".", "raw_datasubset", ".", "get_next_batch", "(", "batch_size", ",", "\n", "multiple_passes", ",", "\n", "reshuffle_after_pass", ")", "\n", "images", "=", "raw_batch", "[", "0", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# return both the raw and augmented input", "\n", "# for adversarial training with rotation/translations, we start", "\n", "# from the raw input to avoid compounding augmentations", "\n", "return", "(", "raw_batch", "[", "0", "]", ",", "\n", "self", ".", "sess", ".", "run", "(", "\n", "self", ".", "augmented", ",", "\n", "feed_dict", "=", "{", "self", ".", "x_input_placeholder", ":", "raw_batch", "[", "0", "]", "}", ")", ",", "\n", "raw_batch", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model.__init__": [[14, 69], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.unstack", "tensorflow.ones", "tensorflow.zeros", "tensorflow.stack", "tensorflow.contrib.image.rotate", "tensorflow.contrib.image.transform", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.layers.dense.set_shape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dense", "model.Model._weight_variable", "model.Model._bias_variable", "tensorflow.reshape", "tensorflow.cast", "tensorflow.cast", "tensorflow.shape", "tensorflow.shape", "tensorflow.matmul", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._weight_variable", "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._bias_variable"], ["  ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "    ", "assert", "config", "[", "\"model_type\"", "]", "in", "[", "\"cnn\"", ",", "\"linear\"", "]", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "self", ".", "x_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "self", ".", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int64", ",", "shape", "=", "[", "None", "]", ")", "\n", "\n", "self", ".", "transform", "=", "tf", ".", "placeholder_with_default", "(", "tf", ".", "zeros", "(", "(", "tf", ".", "shape", "(", "self", ".", "x_input", ")", "[", "0", "]", ",", "3", ")", ")", ",", "shape", "=", "[", "None", ",", "3", "]", ")", "\n", "trans_x", ",", "trans_y", ",", "rot", "=", "tf", ".", "unstack", "(", "self", ".", "transform", ",", "axis", "=", "1", ")", "\n", "rot", "*=", "np", ".", "pi", "/", "180", "# convert degrees to radians", "\n", "\n", "x", "=", "self", ".", "x_input", "\n", "\n", "#rotate and translate image", "\n", "ones", "=", "tf", ".", "ones", "(", "shape", "=", "tf", ".", "shape", "(", "trans_x", ")", ")", "\n", "zeros", "=", "tf", ".", "zeros", "(", "shape", "=", "tf", ".", "shape", "(", "trans_x", ")", ")", "\n", "trans", "=", "tf", ".", "stack", "(", "[", "ones", ",", "zeros", ",", "-", "trans_x", ",", "\n", "zeros", ",", "ones", ",", "-", "trans_y", ",", "\n", "zeros", ",", "zeros", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "tf", ".", "contrib", ".", "image", ".", "rotate", "(", "x", ",", "rot", ",", "interpolation", "=", "'BILINEAR'", ")", "\n", "x", "=", "tf", ".", "contrib", ".", "image", ".", "transform", "(", "x", ",", "trans", ",", "interpolation", "=", "'BILINEAR'", ")", "\n", "self", ".", "x_image", "=", "x", "\n", "\n", "ch", "=", "1", "\n", "\n", "if", "config", "[", "\"model_type\"", "]", "==", "\"cnn\"", ":", "\n", "        ", "x", ".", "set_shape", "(", "(", "None", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "32", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "name", "=", "'conv1'", ")", "\n", "x", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "x", ",", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "64", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "name", "=", "'conv2'", ")", "\n", "x", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "x", ",", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "\n", "\n", "x", "=", "tf", ".", "layers", ".", "flatten", "(", "x", ")", "\n", "#x = tf.layers.flatten(tf.transpose(x, (0, 3, 1, 2)))", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "1024", ",", "activation", "=", "'relu'", ",", "name", "=", "'fc1'", ")", "\n", "self", ".", "pre_softmax", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "10", ",", "name", "=", "'fc2'", ")", "\n", "", "else", ":", "\n", "        ", "W_fc", "=", "self", ".", "_weight_variable", "(", "[", "784", "*", "ch", ",", "2", "]", ")", "\n", "b_fc", "=", "self", ".", "_bias_variable", "(", "[", "2", "]", ")", "\n", "self", ".", "W", "=", "W_fc", "\n", "self", ".", "b", "=", "b_fc", "\n", "x_flat", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "784", "*", "ch", "]", ")", "\n", "self", ".", "pre_softmax", "=", "tf", ".", "matmul", "(", "x_flat", ",", "W_fc", ")", "+", "b_fc", "\n", "\n", "", "self", ".", "y_xent", "=", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "\n", "labels", "=", "self", ".", "y_input", ",", "logits", "=", "self", ".", "pre_softmax", ")", "\n", "\n", "self", ".", "xent", "=", "tf", ".", "reduce_sum", "(", "self", ".", "y_xent", ")", "\n", "self", ".", "mean_xent", "=", "tf", ".", "reduce_mean", "(", "self", ".", "y_xent", ")", "\n", "\n", "self", ".", "y_pred", "=", "tf", ".", "argmax", "(", "self", ".", "pre_softmax", ",", "1", ")", "\n", "\n", "self", ".", "correct_prediction", "=", "tf", ".", "equal", "(", "self", ".", "y_pred", ",", "self", ".", "y_input", ")", "\n", "\n", "self", ".", "num_correct", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "cast", "(", "self", ".", "correct_prediction", ",", "tf", ".", "int64", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "self", ".", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._weight_variable": [[70, 74], ["tensorflow.truncated_normal", "tensorflow.Variable"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_weight_variable", "(", "shape", ")", ":", "\n", "      ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._bias_variable": [[75, 79], ["tensorflow.constant", "tensorflow.Variable"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_bias_variable", "(", "shape", ")", ":", "\n", "      ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._conv2d": [[80, 83], ["tensorflow.nn.conv2d"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_conv2d", "(", "x", ",", "W", ")", ":", "\n", "      ", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "W", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.None.model.Model._max_pool_2x2": [[84, 90], ["tensorflow.nn.max_pool"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_max_pool_2x2", "(", "x", ")", ":", "\n", "      ", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "\n", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ftramer_MultiRobustness.scripts.utils.get_ckpt": [[3, 12], ["tensorflow.train.latest_checkpoint", "tensorflow.train.get_checkpoint_state", "len", "c.endswith"], "function", ["None"], ["def", "get_ckpt", "(", "model_dir", ",", "epoch", ")", ":", "\n", "    ", "if", "epoch", "is", "not", "None", "and", "epoch", ">", "0", ":", "\n", "        ", "ckpts", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "model_dir", ")", ".", "all_model_checkpoint_paths", "\n", "ckpt", "=", "[", "c", "for", "c", "in", "ckpts", "if", "c", ".", "endswith", "(", "'checkpoint-{}'", ".", "format", "(", "epoch", ")", ")", "]", "\n", "assert", "len", "(", "ckpt", ")", "==", "1", "\n", "cur_checkpoint", "=", "ckpt", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "cur_checkpoint", "=", "tf", ".", "train", ".", "latest_checkpoint", "(", "model_dir", ")", "\n", "", "return", "cur_checkpoint", "\n", "\n"]]}