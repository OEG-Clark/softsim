{"home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLayer.__init__": [[39, 55], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.nn.Conv2d", "torch.nn.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.DataLoader.DataLoad.__init__"], ["", "class", "CapsuleLayer", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "num_capsules", ",", "num_route_nodes", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "None", ",", "stride", "=", "None", ",", "\n", "num_iterations", "=", "NUM_ROUTING_ITERATIONS", ")", ":", "\n", "        ", "super", "(", "CapsuleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_route_nodes", "=", "num_route_nodes", "\n", "self", ".", "num_iterations", "=", "num_iterations", "\n", "\n", "self", ".", "num_capsules", "=", "num_capsules", "\n", "\n", "if", "num_route_nodes", "!=", "-", "1", ":", "\n", "            ", "self", ".", "route_weights", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "\n", "num_capsules", ",", "num_route_nodes", ",", "in_channels", ",", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "capsules", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ")", "for", "_", "in", "\n", "range", "(", "num_capsules", ")", "]", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLayer.squash": [[56, 60], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["\n", "", "", "def", "squash", "(", "self", ",", "tensor", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "squared_norm", "=", "(", "tensor", "**", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "scale", "=", "squared_norm", "/", "(", "1", "+", "squared_norm", ")", "\n", "return", "scale", "*", "tensor", "/", "torch", ".", "sqrt", "(", "squared_norm", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLayer.forward": [[61, 79], ["Variable().cuda", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CapsNet.CapsuleLayer.squash", "CapsNet.softmax", "CapsNet.CapsuleLayer.squash", "capsule().view", "Variable", "x.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "capsule", "priors.size"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLayer.squash", "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.softmax", "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLayer.squash"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "num_route_nodes", "!=", "-", "1", ":", "\n", "            ", "priors", "=", "x", "[", "None", ",", ":", ",", ":", ",", "None", ",", ":", "]", "@", "self", ".", "route_weights", "[", ":", ",", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "logits", "=", "Variable", "(", "torch", ".", "zeros", "(", "*", "priors", ".", "size", "(", ")", ")", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_iterations", ")", ":", "\n", "                ", "probs", "=", "softmax", "(", "logits", ",", "dim", "=", "2", ")", "\n", "outputs", "=", "self", ".", "squash", "(", "(", "probs", "*", "priors", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ")", "\n", "\n", "if", "i", "!=", "self", ".", "num_iterations", "-", "1", ":", "\n", "                    ", "delta_logits", "=", "(", "priors", "*", "outputs", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "logits", "+", "delta_logits", "\n", "", "", "", "else", ":", "\n", "            ", "outputs", "=", "[", "capsule", "(", "x", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "1", ")", "for", "capsule", "in", "self", ".", "capsules", "]", "\n", "outputs", "=", "torch", ".", "cat", "(", "outputs", ",", "dim", "=", "-", "1", ")", "\n", "outputs", "=", "self", ".", "squash", "(", "outputs", ")", "\n", "\n", "", "return", "outputs", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleNet.__init__": [[82, 98], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "CapsNet.CapsuleLayer", "CapsNet.CapsuleLayer", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.DataLoader.DataLoad.__init__"], ["", "", "class", "CapsuleNet", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CapsuleNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ")", "\n", "self", ".", "primary_capsules", "=", "CapsuleLayer", "(", "num_capsules", "=", "8", ",", "num_route_nodes", "=", "-", "1", ",", "in_channels", "=", "256", ",", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "9", ",", "stride", "=", "2", ")", "\n", "self", ".", "digit_capsules", "=", "CapsuleLayer", "(", "num_capsules", "=", "NUM_CLASSES", ",", "num_route_nodes", "=", "32", "*", "28", "*", "28", ",", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "16", ")", "\n", "\n", "self", ".", "Linear", "=", "nn", ".", "Linear", "(", "16", "*", "NUM_CLASSES", ",", "NUM_CLASSES", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "primary_capsules", "(", "x", ")", "\n", "x", "=", "self", ".", "digit_capsules", "(", "x", ")", ".", "squeeze", "(", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "x", "=", "(", "x", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "**", "0.5", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleNet.forward": [[100, 119], ["torch.relu", "torch.relu", "CapsNet.CapsuleNet.primary_capsules", "CapsNet.CapsuleNet.digit_capsules().squeeze().transpose", "torch.softmax", "torch.softmax", "CapsNet.CapsuleNet.decoder", "CapsNet.CapsuleNet.conv1", "torch.softmax.max", "Variable().cuda().index_select", "CapsNet.CapsuleNet.digit_capsules().squeeze", "CapsNet.CapsuleNet.size", "Variable().cuda", "CapsNet.CapsuleNet.digit_capsules", "Variable", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.softmax", "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.softmax"], ["\n", "return", "x", "\n", "\n", "\n", "", "", "class", "CapsuleLoss", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CapsuleLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mse", "=", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "labels", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "mse", "(", "x", ",", "labels", ")", "\n", "\n", "\n", "", "", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "from", "torch", ".", "autograd", "import", "Variable", "\n", "from", "torch", ".", "optim", "import", "Adam", "\n", "from", "torchnet", ".", "engine", "import", "Engine", "\n", "# from torchvision.datasets.mnist import MNIST", "\n", "from", "tqdm", "import", "tqdm", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLoss.__init__": [[122, 125], ["torch.nn.Module.__init__", "torch.nn.MSELoss", "torch.nn.MSELoss"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.DataLoader.DataLoad.__init__"], ["model", "=", "CapsuleNet", "(", ")", "\n", "# model.load_state_dict(torch.load('epochs/epoch_327.pt'))", "\n", "model", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.CapsuleLoss.forward": [[126, 138], ["margin_loss.sum.sum.sum", "images.view.view.view", "CapsNet.CapsuleLoss.reconstruction_loss", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "images.view.view.size", "reconstructions.size"], "methods", ["None"], ["print", "(", "\"# parameters:\"", ",", "sum", "(", "param", ".", "numel", "(", ")", "for", "param", "in", "model", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "\n", "engine", "=", "Engine", "(", ")", "\n", "meter_loss", "=", "tnt", ".", "meter", ".", "AverageValueMeter", "(", ")", "\n", "outputs_", "=", "[", "]", "\n", "lables_", "=", "[", "]", "\n", "\n", "capsule_loss", "=", "CapsuleLoss", "(", ")", "\n", "\n", "def", "get_iterator", "(", "mode", ")", ":", "\n", "        ", "X", "=", "np", ".", "load", "(", "'../data/train_downsample.npy'", ")", "[", ":", "61500", "]", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.softmax": [[16, 21], ["input.transpose", "torch.softmax", "F.softmax.view().transpose", "input.transpose.contiguous().view", "len", "input.transpose.size", "F.softmax.view", "len", "input.size", "input.transpose.contiguous", "input.size", "input.transpose.size"], "function", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.softmax"], ["\n", "def", "softmax", "(", "input", ",", "dim", "=", "1", ")", ":", "\n", "    ", "transposed_input", "=", "input", ".", "transpose", "(", "dim", ",", "len", "(", "input", ".", "size", "(", ")", ")", "-", "1", ")", "\n", "softmaxed_output", "=", "F", ".", "softmax", "(", "transposed_input", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "\n", "transposed_input", ".", "size", "(", "-", "1", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "softmaxed_output", ".", "view", "(", "*", "transposed_input", ".", "size", "(", ")", ")", ".", "transpose", "(", "dim", ",", "len", "(", "input", ".", "size", "(", ")", ")", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.CapsNet.augmentation": [[23, 36], ["x.size", "numpy.random.randint", "slice", "slice", "slice", "slice", "torch.zeros", "torch.zeros", "torch.zeros.float", "max", "max", "max", "max", "x.size"], "function", ["None"], ["\n", "", "def", "augmentation", "(", "x", ",", "max_shift", "=", "2", ")", ":", "\n", "    ", "_", ",", "_", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "\n", "h_shift", ",", "w_shift", "=", "np", ".", "random", ".", "randint", "(", "-", "max_shift", ",", "max_shift", "+", "1", ",", "size", "=", "2", ")", "\n", "source_height_slice", "=", "slice", "(", "max", "(", "0", ",", "h_shift", ")", ",", "h_shift", "+", "height", ")", "\n", "source_width_slice", "=", "slice", "(", "max", "(", "0", ",", "w_shift", ")", ",", "w_shift", "+", "width", ")", "\n", "target_height_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "h_shift", ")", ",", "-", "h_shift", "+", "height", ")", "\n", "target_width_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "w_shift", ")", ",", "-", "w_shift", "+", "width", ")", "\n", "\n", "shifted_image", "=", "torch", ".", "zeros", "(", "*", "x", ".", "size", "(", ")", ")", "\n", "shifted_image", "[", ":", ",", ":", ",", "source_height_slice", ",", "source_width_slice", "]", "=", "x", "[", ":", ",", "\n", ":", ",", "target_height_slice", ",", "target_width_slice", "]", "\n", "return", "shifted_image", ".", "float", "(", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ViewOP.__init__": [[19, 22], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.DataLoader.DataLoad.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "super", "(", "ViewOP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "shape", "=", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ViewOP.forward": [[23, 27], ["input.view", "input.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# output = input.view(input.size(0), -1)", "\n", "# print(output.shape)", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# (self.shape)", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.__init__": [[31, 36], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "use_gpu", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "use_gpu", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.ConvBlock": [[37, 50], ["range", "model.add_module", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.add_module", "model.add_module", "model.add_module", "model.add_module", "model.add_module", "model.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "", "def", "ConvBlock", "(", "self", ",", "num", ",", "layers", ",", "model", ",", "inp_fl", ",", "outp_fl", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "model", ".", "add_module", "(", "'Conv2d_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "\n", "NN", ".", "Conv2d", "(", "inp_fl", ",", "outp_fl", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "model", ".", "add_module", "(", "'BN_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "NN", ".", "BatchNorm2d", "(", "outp_fl", ")", ")", "\n", "model", ".", "add_module", "(", "'ReLU_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "add_module", "(", "'Conv2d_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "\n", "NN", ".", "Conv2d", "(", "outp_fl", ",", "outp_fl", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "model", ".", "add_module", "(", "'BN_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "NN", ".", "BatchNorm2d", "(", "outp_fl", ")", ")", "\n", "model", ".", "add_module", "(", "'ReLU_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "", "", "model", ".", "add_module", "(", "'Pooling_{}_{}'", ".", "format", "(", "num", ",", "i", ")", ",", "NN", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.CNNModel": [[65, 83], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "train_cnn.ViewOP", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["None"], ["model", ".", "add_module", "(", "'ReLU_L_1'", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "model", ".", "add_module", "(", "'Dropout_1'", ",", "NN", ".", "Dropout", "(", "0.5", ")", ")", "\n", "# Fully connected layer 2", "\n", "model", ".", "add_module", "(", "'Linear_2'", ",", "NN", ".", "Linear", "(", "1024", ",", "1024", ")", ")", "\n", "model", ".", "add_module", "(", "'ReLU_L_2'", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "model", ".", "add_module", "(", "'Dropout_2'", ",", "NN", ".", "Dropout", "(", "0.5", ")", ")", "\n", "# Output layer", "\n", "model", ".", "add_module", "(", "'Linear_3'", ",", "NN", ".", "Linear", "(", "1024", ",", "class_num", ")", ")", "\n", "model", ".", "add_module", "(", "'LogSoftmax'", ",", "NN", ".", "LogSoftmax", "(", "dim", "=", "1", ")", ")", "\n", "\n", "return", "model", "\n", "\n", "", "def", "augmentation", "(", "self", ",", "x", ",", "max_shift", "=", "2", ")", ":", "\n", "        ", "_", ",", "_", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "\n", "h_shift", ",", "w_shift", "=", "numpy", ".", "random", ".", "randint", "(", "-", "max_shift", ",", "max_shift", "+", "1", ",", "size", "=", "2", ")", "\n", "source_height_slice", "=", "slice", "(", "max", "(", "0", ",", "h_shift", ")", ",", "h_shift", "+", "height", ")", "\n", "source_width_slice", "=", "slice", "(", "max", "(", "0", ",", "w_shift", ")", ",", "w_shift", "+", "width", ")", "\n", "target_height_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "h_shift", ")", ",", "-", "h_shift", "+", "height", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.augmentation": [[51, 64], ["x.size", "numpy.random.randint", "slice", "slice", "slice", "slice", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.float", "torch.zeros.float", "torch.zeros.float", "torch.zeros.float", "max", "max", "max", "max", "x.size"], "methods", ["None"], ["", "def", "CNNModel", "(", "self", ",", "class_num", ")", ":", "\n", "\n", "        ", "model", "=", "NN", ".", "Sequential", "(", ")", "\n", "# Conv blocks", "\n", "model", ".", "add_module", "(", "'Conv2d_1'", ",", "NN", ".", "Conv2d", "(", "3", ",", "512", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ")", ")", "\n", "model", ".", "add_module", "(", "'ReLU_1'", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "model", ".", "add_module", "(", "'Pooling_1'", ",", "NN", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "model", ".", "add_module", "(", "'Conv2d_2'", ",", "NN", ".", "Conv2d", "(", "512", ",", "256", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ")", ")", "\n", "model", ".", "add_module", "(", "'ReLU_2'", ",", "NN", ".", "ReLU", "(", ")", ")", "\n", "model", ".", "add_module", "(", "'Pooling_1'", ",", "NN", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n", "# Flatten", "\n", "model", ".", "add_module", "(", "'Flatten'", ",", "ViewOP", "(", ")", ")", "\n", "model", ".", "add_module", "(", "'Linear_1'", ",", "NN", ".", "Linear", "(", "200704", ",", "1024", ")", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.augmentation_rotate": [[91, 96], ["x.data.numpy.data.numpy.data.numpy", "numpy.random.randint", "numpy.rot90().copy", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "numpy.rot90", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "augmentation_rotate", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "data", ".", "numpy", "(", ")", "\n", "a", "=", "numpy", ".", "random", ".", "randint", "(", "0", ",", "4", ")", "\n", "rot_x", "=", "numpy", ".", "rot90", "(", "x", ",", "k", "=", "a", ",", "axes", "=", "(", "2", ",", "3", ")", ")", ".", "copy", "(", ")", "\n", "return", "torch", ".", "tensor", "(", "rot_x", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.train": [[84, 101], ["enumerate", "numpy.sqrt", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "optimizer.zero_grad", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss.", "NN.MSELoss.backward", "optimizer.step", "train_cnn.ConvNet.augmentation().type", "batch_y.type", "model", "NN.MSELoss.item", "batch_x.size", "len", "train_cnn.ConvNet.augmentation"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.augmentation"], ["target_width_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "w_shift", ")", ",", "-", "w_shift", "+", "width", ")", "\n", "\n", "shifted_image", "=", "torch", ".", "zeros", "(", "*", "x", ".", "size", "(", ")", ")", "\n", "shifted_image", "[", ":", ",", ":", ",", "source_height_slice", ",", "source_width_slice", "]", "=", "x", "[", ":", ",", "\n", ":", ",", "target_height_slice", ",", "target_width_slice", "]", "\n", "return", "shifted_image", ".", "float", "(", ")", "\n", "\n", "", "def", "augmentation_rotate", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "data", ".", "numpy", "(", ")", "\n", "a", "=", "numpy", ".", "random", ".", "randint", "(", "0", ",", "4", ")", "\n", "rot_x", "=", "numpy", ".", "rot90", "(", "x", ",", "k", "=", "a", ",", "axes", "=", "(", "2", ",", "3", ")", ")", ".", "copy", "(", ")", "\n", "return", "torch", ".", "tensor", "(", "rot_x", ")", ".", "float", "(", ")", "\n", "\n", "", "def", "train", "(", "self", ",", "model", ",", "optimizer", ",", "train_loader", ",", "ftype", ",", "itype", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "losses", "=", "0", "\n", "for", "_", ",", "train_batch", "in", "enumerate", "(", "train_loader", ",", "0", ")", ":", "\n", "            ", "batch_x", "=", "train_batch", "[", "0", "]", "/", "255", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.evaluate_model": [[103, 123], ["model.eval", "enumerate", "numpy.sqrt", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss.", "train_cnn.ConvNet.augmentation().type", "batch_y.type", "model", "NN.MSELoss.item", "batch_x.size", "len", "train_cnn.ConvNet.augmentation"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.augmentation"], ["\n", "X", "=", "Variable", "(", "self", ".", "augmentation", "(", "batch_x", ")", ".", "type", "(", "ftype", ")", ",", "requires_grad", "=", "False", ")", "\n", "Y", "=", "Variable", "(", "batch_y", ".", "type", "(", "itype", ")", ",", "requires_grad", "=", "False", ")", "\n", "pred_Y", "=", "model", "(", "X", ")", "\n", "\n", "loss_func", "=", "F", ".", "nll_loss", "(", "pred_Y", ",", "Y", ")", "\n", "losses", "+=", "loss_func", ".", "item", "(", ")", "*", "batch_x", ".", "size", "(", "0", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_func", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "_", ",", "idx", "=", "torch", ".", "max", "(", "pred_Y", ",", "dim", "=", "1", ")", "\n", "\n", "# Move tensor from GPU to CPU.", "\n", "if", "self", ".", "use_gpu", ":", "\n", "                ", "idx", "=", "idx", ".", "cpu", "(", ")", "\n", "Y", "=", "Y", ".", "cpu", "(", ")", "\n", "\n", "", "idx", "=", "idx", ".", "data", ".", "numpy", "(", ")", "\n", "Y", "=", "Y", ".", "data", ".", "numpy", "(", ")", "\n", "correct", "+=", "numpy", ".", "sum", "(", "idx", "==", "Y", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.train_and_evaluate": [[125, 175], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "model.parameters", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "DataLoader.DataLoad", "range", "numpy.save", "numpy.save", "train_cnn.ConvNet.evaluate_model", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "eval", "model.cuda", "print", "time.time", "train_cnn.ConvNet.train", "train_losses.append", "time.time", "print", "print", "train_cnn.ConvNet.evaluate_model", "print", "test_losses.append"], "methods", ["home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.evaluate_model", "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.train", "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.train_cnn.ConvNet.evaluate_model"], ["return", "losses", "/", "len", "(", "train_loader", ".", "dataset", ")", ",", "accuracy", "\n", "# Evaluate the trained model on test set.", "\n", "\n", "", "def", "evaluate_model", "(", "self", ",", "model", ",", "test_loader", ",", "ftype", ",", "itype", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "correct", "=", "0", "\n", "for", "_", ",", "test_batch", "in", "enumerate", "(", "test_loader", ",", "0", ")", ":", "\n", "            ", "batch_x", "=", "test_batch", "[", "0", "]", "/", "255", "\n", "batch_y", "=", "test_batch", "[", "1", "]", "\n", "\n", "X", "=", "Variable", "(", "self", ".", "augmentation", "(", "batch_x", ")", ".", "type", "(", "ftype", ")", ",", "requires_grad", "=", "False", ")", "\n", "Y", "=", "Variable", "(", "batch_y", ".", "type", "(", "itype", ")", ",", "requires_grad", "=", "False", ")", "\n", "pred_Y", "=", "model", "(", "X", ")", "\n", "_", ",", "idx", "=", "torch", ".", "max", "(", "pred_Y", ",", "dim", "=", "1", ")", "\n", "\n", "# Move tensor from GPU to CPU.", "\n", "if", "self", ".", "use_gpu", ":", "\n", "                ", "idx", "=", "idx", ".", "cpu", "(", ")", "\n", "Y", "=", "Y", ".", "cpu", "(", ")", "\n", "\n", "", "idx", "=", "idx", ".", "data", ".", "numpy", "(", ")", "\n", "Y", "=", "Y", ".", "data", ".", "numpy", "(", ")", "\n", "correct", "+=", "numpy", ".", "sum", "(", "idx", "==", "Y", ")", "\n", "", "accuracy", "=", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "return", "accuracy", "\n", "\n", "# Entry point for training and evaluation.", "\n", "", "def", "train_and_evaluate", "(", "self", ",", "FLAGS", ")", ":", "\n", "        ", "class_num", "=", "2", "\n", "num_epochs", "=", "FLAGS", ".", "num_epochs", "\n", "batch_size", "=", "FLAGS", ".", "batch_size", "\n", "learning_rate", "=", "FLAGS", ".", "learning_rate", "\n", "\n", "# Set random number generator seed.", "\n", "torch", ".", "manual_seed", "(", "1024", ")", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "1024", ")", "\n", "", "numpy", ".", "random", ".", "seed", "(", "1024", ")", "\n", "\n", "model", "=", "eval", "(", "\"self.CNNModel\"", ")", "(", "class_num", ")", "\n", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "ftype", "=", "torch", ".", "cuda", ".", "FloatTensor", "# float type", "\n", "itype", "=", "torch", ".", "cuda", ".", "LongTensor", "# int type", "\n", "model", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "ftype", "=", "torch", ".", "FloatTensor", "# float type", "\n", "itype", "=", "torch", ".", "LongTensor", "# int type", "\n", "\n", "", "params", "=", "model", ".", "parameters", "(", ")", "\n"]], "home.repos.pwc.inspect_result.RezaKatebi_Galaxy-Morphology-CapsNet.code.DataLoader.DataLoad.__init__": [[24, 44], ["print", "sklearn.model_selection.train_test_split", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy().float", "torch.from_numpy", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.load", "numpy.load", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "X", "=", "np", ".", "load", "(", "'../data/train_downsample_agreed_0.8.npy'", ")", "\n", "y", "=", "np", ".", "load", "(", "'../data/train_labels_agreed_0.8.npy'", ")", "\n", "print", "(", "X", ".", "shape", ")", "\n", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "=", "train_test_split", "(", "\n", "X", ",", "y", ",", "test_size", "=", "0.2", ",", "random_state", "=", "42", ")", "\n", "\n", "X_train", "=", "torch", ".", "from_numpy", "(", "X_train", ")", ".", "float", "(", ")", "\n", "y_train", "=", "torch", ".", "from_numpy", "(", "y_train", ")", "\n", "\n", "X_test", "=", "torch", ".", "from_numpy", "(", "X_test", ")", ".", "float", "(", ")", "\n", "y_test", "=", "torch", ".", "from_numpy", "(", "y_test", ")", "\n", "\n", "train_dataset", "=", "TensorDataset", "(", "X_train", ",", "y_train", ")", "\n", "test_dataset", "=", "TensorDataset", "(", "X_test", ",", "y_test", ")", "\n", "\n", "self", ".", "train_loader", "=", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "test_loader", "=", "DataLoader", "(", "\n", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "\n"]]}