{"home.repos.pwc.inspect_result.mattjj_svae.experiments.gmm_svae_synth.make_pinwheel_data": [[11, 24], ["autograd.linspace", "autograd.repeat", "autograd.stack", "autograd.reshape", "autograd.randn", "autograd.array", "autograd.arange", "autograd.permutation", "autograd.exp", "autograd.cos", "autograd.sin", "autograd.cos", "autograd.einsum", "autograd.sin"], "function", ["None"], ["def", "make_pinwheel_data", "(", "radial_std", ",", "tangential_std", ",", "num_classes", ",", "num_per_class", ",", "rate", ")", ":", "\n", "    ", "rads", "=", "np", ".", "linspace", "(", "0", ",", "2", "*", "np", ".", "pi", ",", "num_classes", ",", "endpoint", "=", "False", ")", "\n", "\n", "features", "=", "npr", ".", "randn", "(", "num_classes", "*", "num_per_class", ",", "2", ")", "*", "np", ".", "array", "(", "[", "radial_std", ",", "tangential_std", "]", ")", "\n", "features", "[", ":", ",", "0", "]", "+=", "1.", "\n", "labels", "=", "np", ".", "repeat", "(", "np", ".", "arange", "(", "num_classes", ")", ",", "num_per_class", ")", "\n", "\n", "angles", "=", "rads", "[", "labels", "]", "+", "rate", "*", "np", ".", "exp", "(", "features", "[", ":", ",", "0", "]", ")", "\n", "rotations", "=", "np", ".", "stack", "(", "[", "np", ".", "cos", "(", "angles", ")", ",", "-", "np", ".", "sin", "(", "angles", ")", ",", "np", ".", "sin", "(", "angles", ")", ",", "np", ".", "cos", "(", "angles", ")", "]", ")", "\n", "rotations", "=", "np", ".", "reshape", "(", "rotations", ".", "T", ",", "(", "-", "1", ",", "2", ",", "2", ")", ")", "\n", "\n", "return", "10", "*", "npr", ".", "permutation", "(", "np", ".", "einsum", "(", "'ti,tij->tj'", ",", "features", ",", "rotations", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.experiments.data.download": [[11, 17], ["os.path.join", "os.path.exists", "os.makedirs", "os.path.isfile", "urllib.urlretrieve"], "function", ["None"], ["def", "download", "(", "url", ",", "filename", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'data'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'data'", ")", "\n", "", "out_file", "=", "os", ".", "path", ".", "join", "(", "'data'", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "urllib", ".", "urlretrieve", "(", "url", ",", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.experiments.data.mnist": [[19, 45], ["data.mnist.parse_images"], "function", ["None"], ["", "", "def", "mnist", "(", ")", ":", "\n", "    ", "base_url", "=", "'http://yann.lecun.com/exdb/mnist/'", "\n", "\n", "def", "parse_labels", "(", "filename", ")", ":", "\n", "        ", "with", "gzip", ".", "open", "(", "filename", ",", "'rb'", ")", "as", "fh", ":", "\n", "            ", "magic", ",", "num_data", "=", "struct", ".", "unpack", "(", "\">II\"", ",", "fh", ".", "read", "(", "8", ")", ")", "\n", "return", "np", ".", "array", "(", "array", ".", "array", "(", "\"B\"", ",", "fh", ".", "read", "(", ")", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "", "", "def", "parse_images", "(", "filename", ")", ":", "\n", "        ", "with", "gzip", ".", "open", "(", "filename", ",", "'rb'", ")", "as", "fh", ":", "\n", "            ", "magic", ",", "num_data", ",", "rows", ",", "cols", "=", "struct", ".", "unpack", "(", "\">IIII\"", ",", "fh", ".", "read", "(", "16", ")", ")", "\n", "return", "np", ".", "array", "(", "array", ".", "array", "(", "\"B\"", ",", "fh", ".", "read", "(", ")", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "num_data", ",", "rows", ",", "cols", ")", "\n", "\n", "", "", "for", "filename", "in", "[", "'train-images-idx3-ubyte.gz'", ",", "\n", "'train-labels-idx1-ubyte.gz'", ",", "\n", "'t10k-images-idx3-ubyte.gz'", ",", "\n", "'t10k-labels-idx1-ubyte.gz'", "]", ":", "\n", "        ", "download", "(", "base_url", "+", "filename", ",", "filename", ")", "\n", "\n", "", "train_images", "=", "parse_images", "(", "'data/train-images-idx3-ubyte.gz'", ")", "\n", "train_labels", "=", "parse_labels", "(", "'data/train-labels-idx1-ubyte.gz'", ")", "\n", "test_images", "=", "parse_images", "(", "'data/t10k-images-idx3-ubyte.gz'", ")", "\n", "test_labels", "=", "parse_labels", "(", "'data/t10k-labels-idx1-ubyte.gz'", ")", "\n", "\n", "return", "train_images", ",", "train_labels", ",", "test_images", ",", "test_labels", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet._mlp": [[26, 31], ["util.compose", "util.compose.", "layer", "zip"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.compose"], ["@", "curry", "\n", "def", "_mlp", "(", "nonlinearities", ",", "params", ",", "inputs", ")", ":", "\n", "    ", "eval_mlp", "=", "compose", "(", "layer", "(", "nonlin", ",", "W", ",", "b", ")", "\n", "for", "nonlin", ",", "(", "W", ",", "b", ")", "in", "zip", "(", "nonlinearities", ",", "params", ")", ")", "\n", "return", "eval_mlp", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet.init_mlp": [[32, 38], ["init_layer", "tf_nnet._mlp", "zip"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._mlp"], ["", "def", "init_mlp", "(", "m", ",", "layer_specs", ")", ":", "\n", "    ", "dims", "=", "[", "m", "]", "+", "[", "l", "[", "0", "]", "for", "l", "in", "layer_specs", "]", "\n", "nonlinearities", "=", "[", "l", "[", "1", "]", "for", "l", "in", "layer_specs", "]", "\n", "params", "=", "[", "init_layer", "(", "m", ",", "n", ",", "*", "spec", "[", "2", ":", "]", ")", "\n", "for", "m", ",", "n", ",", "spec", "in", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ",", "layer_specs", ")", "]", "\n", "return", "_mlp", "(", "nonlinearities", ",", "params", ")", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet.gaussian_mean": [[41, 47], ["tensorflow.split", "log1p", "sigmoid", "tensorflow.exp", "tensorflow.rank"], "function", ["None"], ["", "@", "curry", "\n", "def", "gaussian_mean", "(", "inputs", ",", "sigmoid_mean", "=", "False", ")", ":", "\n", "    ", "mu_input", ",", "sigmasq_input", "=", "tf", ".", "split", "(", "tf", ".", "rank", "(", "inputs", ")", "-", "1", ",", "2", ",", "inputs", ")", "\n", "mu", "=", "sigmoid", "(", "mu_input", ")", "if", "sigmoid_mean", "else", "mu_input", "\n", "sigmasq", "=", "log1p", "(", "tf", ".", "exp", "(", "sigmasq_input", ")", ")", "\n", "return", "mu", ",", "sigmasq", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet._diagonal_gaussian_loglike": [[50, 56], ["tensorflow.to_float", "tensorflow.shape", "tensorflow.log", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.expand_dims"], "function", ["None"], ["", "def", "_diagonal_gaussian_loglike", "(", "x", ",", "mu", ",", "sigmasq", ")", ":", "\n", "    ", "mu_shape", "=", "tf", ".", "to_float", "(", "tf", ".", "shape", "(", "mu", ")", ")", "\n", "num_data", ",", "num_samples", ",", "num_dim", "=", "mu_shape", "[", "0", "]", ",", "mu_shape", "[", "1", "]", ",", "mu_shape", "[", "2", "]", "\n", "return", "-", "num_data", "*", "num_dim", "/", "2.", "*", "tf", ".", "log", "(", "2.", "*", "np", ".", "pi", ")", "+", "(", "-", "1.", "/", "2", "*", "tf", ".", "reduce_sum", "(", "(", "tf", ".", "expand_dims", "(", "x", ",", "1", ")", "-", "mu", ")", "**", "2", "/", "sigmasq", ")", "\n", "-", "1.", "/", "2", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "sigmasq", ")", ")", ")", "/", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet._make_ravelers": [[57, 62], ["tensorflow.shape", "tensorflow.reshape", "tensorflow.reshape"], "function", ["None"], ["", "def", "_make_ravelers", "(", "inputs", ")", ":", "\n", "    ", "in_shape", "=", "tf", ".", "shape", "(", "inputs", ")", "\n", "ravel", "=", "lambda", "x", ":", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "in_shape", "[", "2", "]", ")", ")", "\n", "unravel", "=", "lambda", "x", ":", "tf", ".", "reshape", "(", "x", ",", "(", "in_shape", "[", "0", "]", ",", "in_shape", "[", "1", "]", ",", "-", "1", ")", ")", "\n", "return", "ravel", ",", "unravel", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.tf_nnet.make_loglike": [[63, 69], ["tf_nnet._make_ravelers", "map", "tf_nnet._diagonal_gaussian_loglike", "gaussian_mlp", "ravel"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._make_ravelers", "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._diagonal_gaussian_loglike"], ["", "def", "make_loglike", "(", "gaussian_mlp", ")", ":", "\n", "    ", "def", "loglike", "(", "inputs", ",", "targets", ")", ":", "\n", "        ", "ravel", ",", "unravel", "=", "_make_ravelers", "(", "inputs", ")", "\n", "mu", ",", "sigmasq", "=", "map", "(", "unravel", ",", "gaussian_mlp", "(", "ravel", "(", "inputs", ")", ")", ")", "\n", "return", "_diagonal_gaussian_loglike", "(", "targets", ",", "mu", ",", "sigmasq", ")", "\n", "", "return", "loglike", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.rand_partial_isometry": [[13, 16], ["max", "autograd.linalg.qr", "autograd.randn"], "function", ["None"], ["def", "rand_partial_isometry", "(", "m", ",", "n", ")", ":", "\n", "    ", "d", "=", "max", "(", "m", ",", "n", ")", "\n", "return", "np", ".", "linalg", ".", "qr", "(", "npr", ".", "randn", "(", "d", ",", "d", ")", ")", "[", "0", "]", "[", ":", "m", ",", ":", "n", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._make_ravelers": [[17, 21], ["autograd.reshape", "autograd.reshape"], "function", ["None"], ["", "def", "_make_ravelers", "(", "input_shape", ")", ":", "\n", "    ", "ravel", "=", "lambda", "inputs", ":", "np", ".", "reshape", "(", "inputs", ",", "(", "-", "1", ",", "input_shape", "[", "-", "1", "]", ")", ")", "\n", "unravel", "=", "lambda", "outputs", ":", "np", ".", "reshape", "(", "outputs", ",", "input_shape", "[", ":", "-", "1", "]", "+", "(", "-", "1", ",", ")", ")", "\n", "return", "ravel", ",", "unravel", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.gaussian_mean": [[36, 42], ["autograd.split", "util.log1pexp", "autograd.util.make_tuple", "util.sigmoid"], "function", ["None"], ["@", "curry", "\n", "def", "gaussian_mean", "(", "inputs", ",", "sigmoid_mean", "=", "False", ")", ":", "\n", "    ", "mu_input", ",", "sigmasq_input", "=", "np", ".", "split", "(", "inputs", ",", "2", ",", "axis", "=", "-", "1", ")", "\n", "mu", "=", "sigmoid", "(", "mu_input", ")", "if", "sigmoid_mean", "else", "mu_input", "\n", "sigmasq", "=", "log1pexp", "(", "sigmasq_input", ")", "\n", "return", "make_tuple", "(", "mu", ",", "sigmasq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.gaussian_info": [[43, 48], ["autograd.split", "autograd.util.make_tuple", "util.log1pexp"], "function", ["None"], ["", "@", "curry", "\n", "def", "gaussian_info", "(", "inputs", ")", ":", "\n", "    ", "J_input", ",", "h", "=", "np", ".", "split", "(", "inputs", ",", "2", ",", "axis", "=", "-", "1", ")", "\n", "J", "=", "-", "1.", "/", "2", "*", "log1pexp", "(", "J_input", ")", "\n", "return", "make_tuple", "(", "J", ",", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._mlp": [[52, 59], ["nnet._make_ravelers", "util.compose", "util.compose.", "ravel", "util.isarray", "unravel", "map", "layer", "zip"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._make_ravelers", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.compose"], ["", "@", "curry", "\n", "def", "_mlp", "(", "nonlinearities", ",", "params", ",", "inputs", ")", ":", "\n", "    ", "ravel", ",", "unravel", "=", "_make_ravelers", "(", "inputs", ".", "shape", ")", "\n", "eval_mlp", "=", "compose", "(", "layer", "(", "nonlin", ",", "W", ",", "b", ")", "\n", "for", "nonlin", ",", "(", "W", ",", "b", ")", "in", "zip", "(", "nonlinearities", ",", "params", ")", ")", "\n", "out", "=", "eval_mlp", "(", "ravel", "(", "inputs", ")", ")", "\n", "return", "unravel", "(", "out", ")", "if", "isarray", "(", "out", ")", "else", "map", "(", "unravel", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.init_mlp": [[60, 66], ["init_layer", "nnet._mlp", "zip"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._mlp"], ["", "def", "init_mlp", "(", "d_in", ",", "layer_specs", ",", "**", "kwargs", ")", ":", "\n", "    ", "dims", "=", "[", "d_in", "]", "+", "[", "l", "[", "0", "]", "for", "l", "in", "layer_specs", "]", "\n", "nonlinearities", "=", "[", "l", "[", "1", "]", "for", "l", "in", "layer_specs", "]", "\n", "params", "=", "[", "init_layer", "(", "d_in", ",", "d_out", ",", "*", "spec", "[", "2", ":", "]", ")", "\n", "for", "d_in", ",", "d_out", ",", "spec", "in", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ",", "layer_specs", ")", "]", "\n", "return", "_mlp", "(", "nonlinearities", ")", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._diagonal_gaussian_loglike": [[70, 76], ["autograd.log", "autograd.sum", "autograd.sum", "autograd.log"], "function", ["None"], ["", "def", "_diagonal_gaussian_loglike", "(", "x", ",", "mu", ",", "sigmasq", ")", ":", "\n", "    ", "mu", "=", "mu", "if", "mu", ".", "ndim", "==", "3", "else", "mu", "[", ":", ",", "None", ",", ":", "]", "\n", "T", ",", "K", ",", "p", "=", "mu", ".", "shape", "\n", "assert", "x", ".", "shape", "==", "(", "T", ",", "p", ")", "\n", "return", "-", "T", "*", "p", "/", "2.", "*", "np", ".", "log", "(", "2", "*", "np", ".", "pi", ")", "+", "(", "-", "1.", "/", "2", "*", "np", ".", "sum", "(", "(", "x", "[", ":", ",", "None", ",", ":", "]", "-", "mu", ")", "**", "2", "/", "sigmasq", ")", "\n", "-", "1.", "/", "2", "*", "np", ".", "sum", "(", "np", ".", "log", "(", "sigmasq", ")", ")", ")", "/", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.make_loglike": [[77, 81], ["nnet._diagonal_gaussian_loglike", "gaussian_mlp"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._diagonal_gaussian_loglike"], ["", "def", "make_loglike", "(", "gaussian_mlp", ")", ":", "\n", "    ", "def", "loglike", "(", "params", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "return", "_diagonal_gaussian_loglike", "(", "targets", ",", "*", "gaussian_mlp", "(", "params", ",", "inputs", ")", ")", "\n", "", "return", "loglike", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.gaussian_mlp_type": [[87, 89], ["None"], "function", ["None"], ["def", "gaussian_mlp_type", "(", "layer_specs", ")", ":", "\n", "    ", "return", "gaussian_mlp_types", "[", "layer_specs", "[", "-", "1", "]", "[", "1", "]", ".", "func", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._gresnet": [[90, 105], ["nnet._make_ravelers", "mlp", "unravel", "util.log1pexp", "autograd.util.make_tuple", "mlp", "unravel", "autograd.util.make_tuple", "util.log1pexp", "autograd.dot", "autograd.dot", "ravel", "ravel"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._make_ravelers"], ["", "@", "curry", "\n", "def", "_gresnet", "(", "mlp_type", ",", "mlp", ",", "params", ",", "inputs", ")", ":", "\n", "    ", "ravel", ",", "unravel", "=", "_make_ravelers", "(", "inputs", ".", "shape", ")", "\n", "mlp_params", ",", "(", "W", ",", "b1", ",", "b2", ")", "=", "params", "\n", "\n", "if", "mlp_type", "==", "'mean'", ":", "\n", "        ", "mu_mlp", ",", "sigmasq_mlp", "=", "mlp", "(", "mlp_params", ",", "inputs", ")", "\n", "mu_res", "=", "unravel", "(", "np", ".", "dot", "(", "ravel", "(", "inputs", ")", ",", "W", ")", "+", "b1", ")", "\n", "sigmasq_res", "=", "log1pexp", "(", "b2", ")", "\n", "return", "make_tuple", "(", "mu_mlp", "+", "mu_res", ",", "sigmasq_mlp", "+", "sigmasq_res", ")", "\n", "", "else", ":", "\n", "        ", "J_mlp", ",", "h_mlp", "=", "mlp", "(", "mlp_params", ",", "inputs", ")", "\n", "J_res", "=", "-", "1.", "/", "2", "*", "log1pexp", "(", "b2", ")", "\n", "h_res", "=", "unravel", "(", "np", ".", "dot", "(", "ravel", "(", "inputs", ")", ",", "W", ")", "+", "b1", ")", "\n", "return", "make_tuple", "(", "J_mlp", "+", "J_res", ",", "h_mlp", "+", "h_res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.init_gresnet": [[106, 111], ["nnet.init_mlp", "nnet.rand_partial_isometry", "autograd.zeros", "autograd.zeros", "nnet._gresnet", "nnet.gaussian_mlp_type"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.init_mlp", "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.rand_partial_isometry", "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet._gresnet", "home.repos.pwc.inspect_result.mattjj_svae.svae.nnet.gaussian_mlp_type"], ["", "", "def", "init_gresnet", "(", "d_in", ",", "layer_specs", ")", ":", "\n", "    ", "d_out", "=", "layer_specs", "[", "-", "1", "]", "[", "0", "]", "//", "2", "\n", "res_params", "=", "rand_partial_isometry", "(", "d_in", ",", "d_out", ")", ",", "np", ".", "zeros", "(", "d_out", ")", ",", "np", ".", "zeros", "(", "d_out", ")", "\n", "mlp", ",", "mlp_params", "=", "init_mlp", "(", "d_in", ",", "layer_specs", ")", "\n", "return", "_gresnet", "(", "gaussian_mlp_type", "(", "layer_specs", ")", ",", "mlp", ")", ",", "(", "mlp_params", ",", "res_params", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.rle": [[29, 33], ["autograd.where", "autograd.concatenate", "autograd.diff", "autograd.diff", "len"], "function", ["None"], ["def", "rle", "(", "stateseq", ")", ":", "\n", "    ", "pos", ",", "=", "np", ".", "where", "(", "np", ".", "diff", "(", "stateseq", ")", "!=", "0", ")", "\n", "pos", "=", "np", ".", "concatenate", "(", "(", "[", "0", "]", ",", "pos", "+", "1", ",", "[", "len", "(", "stateseq", ")", "]", ")", ")", "\n", "return", "stateseq", "[", "pos", "[", ":", "-", "1", "]", "]", ",", "np", ".", "diff", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.compose": [[42, 48], ["f"], "function", ["None"], ["def", "compose", "(", "funcs", ")", ":", "\n", "    ", "def", "composition", "(", "x", ")", ":", "\n", "        ", "for", "f", "in", "funcs", ":", "\n", "            ", "x", "=", "f", "(", "x", ")", "\n", "", "return", "x", "\n", "", "return", "composition", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.monad_runner": [[49, 55], ["enumerate", "bind"], "function", ["None"], ["", "def", "monad_runner", "(", "bind", ")", ":", "\n", "    ", "def", "run", "(", "result", ",", "steps", ")", ":", "\n", "        ", "for", "i", ",", "step", "in", "enumerate", "(", "steps", ")", ":", "\n", "            ", "result", "=", "bind", "(", "result", ",", "step", ")", "\n", "", "return", "result", "\n", "", "return", "run", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular": [[62, 64], ["autograd.solve_triangular"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular"], ["def", "solve_triangular", "(", "L", ",", "x", ",", "trans", "=", "'N'", ")", ":", "\n", "    ", "return", "spla", ".", "solve_triangular", "(", "L", ",", "x", ",", "lower", "=", "True", ",", "trans", "=", "trans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_posdef_from_cholesky": [[65, 67], ["util.solve_triangular", "util.solve_triangular"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular"], ["", "def", "solve_posdef_from_cholesky", "(", "L", ",", "x", ")", ":", "\n", "    ", "return", "solve_triangular", "(", "L", ",", "solve_triangular", "(", "L", ",", "x", ")", ",", "'T'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_symmetric": [[68, 70], ["autograd.linalg.solve", "symmetrize"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize"], ["", "def", "solve_symmetric", "(", "A", ",", "b", ")", ":", "\n", "    ", "return", "np", ".", "linalg", ".", "solve", "(", "symmetrize", "(", "A", ")", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.rand_psd": [[71, 74], ["autograd.randn", "autograd.dot"], "function", ["None"], ["", "def", "rand_psd", "(", "n", ")", ":", "\n", "    ", "A", "=", "npr", ".", "randn", "(", "n", ",", "n", ")", "\n", "return", "np", ".", "dot", "(", "A", ",", "A", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.rot2D": [[75, 79], ["autograd.array", "autograd.cos", "autograd.sin", "autograd.cos", "autograd.sin"], "function", ["None"], ["", "def", "rot2D", "(", "theta", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "\n", "[", "[", "np", ".", "cos", "(", "theta", ")", ",", "-", "np", ".", "sin", "(", "theta", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "theta", ")", ",", "np", ".", "cos", "(", "theta", ")", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.interleave": [[84, 86], ["list", "util.roundrobin"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.roundrobin"], ["", "def", "interleave", "(", "a", ",", "b", ")", ":", "\n", "    ", "return", "list", "(", "roundrobin", "(", "a", ",", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.uninterleave": [[87, 89], ["None"], "function", ["None"], ["", "def", "uninterleave", "(", "lst", ")", ":", "\n", "    ", "return", "lst", "[", ":", ":", "2", "]", ",", "lst", "[", "1", ":", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.roundrobin": [[90, 101], ["len", "itertools.cycle", "iter", "itertools.cycle", "next", "itertools.islice"], "function", ["None"], ["", "def", "roundrobin", "(", "*", "iterables", ")", ":", "\n", "# Recipe credited to George Sakkis", "\n", "    ", "pending", "=", "len", "(", "iterables", ")", "\n", "nexts", "=", "cycle", "(", "iter", "(", "it", ")", ".", "next", "for", "it", "in", "iterables", ")", "\n", "while", "pending", ":", "\n", "        ", "try", ":", "\n", "            ", "for", "next", "in", "nexts", ":", "\n", "                ", "yield", "next", "(", ")", "\n", "", "", "except", "StopIteration", ":", "\n", "            ", "pending", "-=", "1", "\n", "nexts", "=", "cycle", "(", "islice", "(", "nexts", ",", "pending", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.get_num_datapoints": [[105, 107], ["isinstance", "sum", "map"], "function", ["None"], ["", "", "", "def", "get_num_datapoints", "(", "x", ")", ":", "\n", "    ", "return", "x", ".", "shape", "[", "0", "]", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", "else", "sum", "(", "map", "(", "get_num_datapoints", ",", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.flatmap": [[108, 114], ["f", "autograd.util.flatten", "autograd.util.flatten", "map", "map", "type", "dct.values"], "function", ["None"], ["", "def", "flatmap", "(", "f", ",", "container", ")", ":", "\n", "    ", "flatten", "=", "lambda", "lst", ":", "[", "item", "for", "sublst", "in", "lst", "for", "item", "in", "sublst", "]", "\n", "mappers", "=", "{", "np", ".", "ndarray", ":", "lambda", "f", ",", "arr", ":", "f", "(", "arr", ")", ",", "\n", "list", ":", "lambda", "f", ",", "lst", ":", "flatten", "(", "map", "(", "f", ",", "lst", ")", ")", ",", "\n", "dict", ":", "lambda", "f", ",", "dct", ":", "flatten", "(", "map", "(", "f", ",", "dct", ".", "values", "(", ")", ")", ")", "}", "\n", "return", "mappers", "[", "type", "(", "container", ")", "]", "(", "f", ",", "container", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.split_array": [[115, 119], ["autograd.split", "truncate_to_multiple", "len", "len"], "function", ["None"], ["", "@", "curry", "\n", "def", "split_array", "(", "arr", ",", "length", ")", ":", "\n", "    ", "truncate_to_multiple", "=", "lambda", "arr", ",", "k", ":", "arr", "[", ":", "k", "*", "(", "len", "(", "arr", ")", "//", "k", ")", "]", "\n", "return", "np", ".", "split", "(", "truncate_to_multiple", "(", "arr", ",", "length", ")", ",", "len", "(", "arr", ")", "//", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.split_into_batches": [[120, 126], ["autograd.permutation", "util.flatmap", "itertools.imap", "util.split_array", "len", "xrange", "len", "len"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.flatmap", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.split_array"], ["", "def", "split_into_batches", "(", "data", ",", "seq_len", ",", "num_seqs", "=", "None", ",", "permute", "=", "True", ")", ":", "\n", "    ", "batches", "=", "npr", ".", "permutation", "(", "flatmap", "(", "split_array", "(", "length", "=", "seq_len", ")", ",", "data", ")", ")", "\n", "if", "num_seqs", "is", "None", ":", "\n", "        ", "return", "batches", ",", "len", "(", "batches", ")", "\n", "", "chunks", "=", "(", "batches", "[", "i", "*", "num_seqs", ":", "(", "i", "+", "1", ")", "*", "num_seqs", "]", "for", "i", "in", "xrange", "(", "len", "(", "batches", ")", "//", "num_seqs", ")", ")", "\n", "return", "imap", "(", "np", ".", "stack", ",", "chunks", ")", ",", "len", "(", "batches", ")", "//", "num_seqs", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.svae.util.add_binop_size_check": [[143, 148], ["binop", "shape", "shape"], "function", ["None"], ["def", "add_binop_size_check", "(", "binop", ")", ":", "\n", "    ", "def", "wrapped", "(", "a", ",", "b", ")", ":", "\n", "        ", "assert", "shape", "(", "a", ")", "==", "shape", "(", "b", ")", "\n", "return", "binop", "(", "a", ",", "b", ")", "\n", "", "return", "wrapped", "\n", "", "make_binop", "=", "(", "lambda", "make_binop", ":", "lambda", "*", "args", ":", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize": [[7, 9], ["None"], "function", ["None"], ["def", "symmetrize", "(", "A", ")", ":", "\n", "    ", "return", "(", "A", "+", "A", ".", "T", ")", "/", "2.", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.is_psd": [[11, 13], ["autograd.allclose", "autograd.all", "autograd.linalg.eigvalsh"], "function", ["None"], ["", "def", "is_psd", "(", "A", ")", ":", "\n", "    ", "return", "np", ".", "allclose", "(", "A", ",", "A", ".", "T", ")", "and", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvalsh", "(", "A", ")", ">=", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.is_posdef": [[15, 17], ["autograd.allclose", "autograd.all", "autograd.linalg.eigvalsh"], "function", ["None"], ["", "def", "is_posdef", "(", "A", ")", ":", "\n", "    ", "return", "np", ".", "allclose", "(", "A", ",", "A", ".", "T", ")", "and", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvalsh", "(", "A", ")", ">", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.natural_predict": [[19, 37], ["gaussian_nochol.is_psd", "gaussian_nochol.is_psd", "gaussian_nochol.is_psd", "gaussian_nochol.symmetrize", "gaussian_nochol.is_posdef", "autograd.dot", "autograd.dot", "svae.util.solve_symmetric", "autograd.dot", "autograd.linalg.solve", "autograd.linalg.solve", "autograd.linalg.slogdet"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.is_psd", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.is_psd", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.is_psd", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize", "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.is_posdef", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_symmetric"], ["", "def", "natural_predict", "(", "J", ",", "h", ",", "J11", ",", "J12", ",", "J22", ",", "logZ", ")", ":", "\n", "# convert from natural parameter to the usual J definitions", "\n", "    ", "J", ",", "J11", ",", "J12", ",", "J22", "=", "-", "2", "*", "J", ",", "-", "2", "*", "J11", ",", "-", "J12", ",", "-", "2", "*", "J22", "\n", "\n", "assert", "is_psd", "(", "J", ")", "\n", "assert", "is_psd", "(", "J11", ")", "\n", "assert", "is_psd", "(", "J22", ")", "\n", "\n", "Jnew", "=", "J", "+", "J11", "\n", "J_predict", "=", "symmetrize", "(", "J22", "-", "np", ".", "dot", "(", "J12", ".", "T", ",", "np", ".", "linalg", ".", "solve", "(", "Jnew", ",", "J12", ")", ")", ")", "\n", "h_predict", "=", "-", "np", ".", "dot", "(", "J12", ".", "T", ",", "solve_symmetric", "(", "Jnew", ",", "h", ")", ")", "\n", "\n", "lognorm", "=", "1.", "/", "2", "*", "np", ".", "dot", "(", "h", ",", "np", ".", "linalg", ".", "solve", "(", "Jnew", ",", "h", ")", ")", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "slogdet", "(", "Jnew", ")", "[", "1", "]", "\n", "\n", "assert", "is_posdef", "(", "J_predict", ")", "\n", "\n", "return", "(", "-", "1.", "/", "2", "*", "J_predict", ",", "h_predict", ")", ",", "lognorm", "+", "logZ", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.natural_lognorm": [[39, 43], ["autograd.dot", "autograd.linalg.solve", "autograd.linalg.slogdet"], "function", ["None"], ["", "def", "natural_lognorm", "(", "J", ",", "h", ")", ":", "\n", "    ", "J", "=", "-", "2", "*", "J", "\n", "return", "1.", "/", "2", "*", "np", ".", "dot", "(", "h", ",", "np", ".", "linalg", ".", "solve", "(", "J", ",", "h", ")", ")", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "slogdet", "(", "J", ")", "[", "1", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.sample": [[9, 12], ["autograd.linalg.cholesky", "autograd.dot", "numpy.random.mtrand._rand.normal"], "function", ["None"], ["def", "sample", "(", "mu", ",", "sigma", ",", "rng", "=", "rng", ")", ":", "\n", "    ", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "sigma", ")", "\n", "return", "mu", "+", "np", ".", "dot", "(", "L", ",", "rng", ".", "normal", "(", "size", "=", "mu", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.predict": [[14, 18], ["autograd.dot", "autograd.dot", "autograd.dot"], "function", ["None"], ["", "def", "predict", "(", "mu", ",", "sigma", ",", "A", ",", "sigma_update", ")", ":", "\n", "    ", "mu_predict", "=", "np", ".", "dot", "(", "A", ",", "mu", ")", "\n", "sigma_predict", "=", "np", ".", "dot", "(", "A", ",", "np", ".", "dot", "(", "sigma", ",", "A", ".", "T", ")", ")", "+", "sigma_update", "\n", "return", "mu_predict", ",", "sigma_predict", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.condition_on": [[20, 33], ["autograd.dot", "autograd.linalg.cholesky", "svae.util.solve_triangular", "svae.util.solve_triangular", "autograd.dot", "autograd.dot", "autograd.dot", "autograd.dot", "autograd.sum", "autograd.log", "svae.util.solve_triangular", "autograd.dot", "autograd.log", "autograd.diag"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular"], ["", "def", "condition_on", "(", "mu", ",", "sigma", ",", "A", ",", "y", ",", "sigma_obs", ")", ":", "\n", "    ", "temp1", "=", "np", ".", "dot", "(", "A", ",", "sigma", ")", "\n", "sigma_pred", "=", "np", ".", "dot", "(", "temp1", ",", "A", ".", "T", ")", "+", "sigma_obs", "\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "sigma_pred", ")", "\n", "v", "=", "solve_triangular", "(", "L", ",", "y", "-", "np", ".", "dot", "(", "A", ",", "mu", ")", ")", "\n", "ll", "=", "-", "1.", "/", "2", "*", "np", ".", "dot", "(", "v", ",", "v", ")", "-", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "diag", "(", "L", ")", ")", ")", "-", "y", ".", "shape", "[", "0", "]", "/", "2.", "*", "np", ".", "log", "(", "2", "*", "np", ".", "pi", ")", "\n", "mu_cond", "=", "mu", "+", "np", ".", "dot", "(", "temp1", ".", "T", ",", "solve_triangular", "(", "L", ",", "v", ",", "'T'", ")", ")", "\n", "\n", "temp2", "=", "solve_triangular", "(", "L", ",", "temp1", ")", "\n", "sigma_cond", "=", "sigma", "-", "np", ".", "dot", "(", "temp2", ".", "T", ",", "temp2", ")", "\n", "\n", "return", "(", "mu_cond", ",", "sigma_cond", ")", ",", "ll", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_condition_on": [[37, 44], ["autograd.dot", "autograd.dot", "autograd.dot"], "function", ["None"], ["", "def", "natural_condition_on", "(", "J", ",", "h", ",", "y", ",", "Jxx", ",", "Jxy", ",", "Jyy", "=", "None", ",", "logZ", "=", "None", ")", ":", "\n", "# NOTE: assumes Jxy is *negative* definite, usually h - np.dot(Jxy, y.T).T", "\n", "    ", "J_cond", ",", "h_cond", "=", "J", "+", "Jxx", ",", "h", "+", "np", ".", "dot", "(", "Jxy", ",", "y", ".", "T", ")", ".", "T", "\n", "\n", "if", "Jyy", "is", "None", "or", "logZ", "is", "None", ":", "\n", "        ", "return", "J_cond", ",", "h_cond", "\n", "", "return", "(", "J_cond", ",", "h_cond", ")", ",", "logZ", "+", "np", ".", "dot", "(", "y", ",", "np", ".", "dot", "(", "Jyy", ",", "y", ".", "T", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_condition_on_general": [[46, 50], ["autograd.all", "autograd.diag", "autograd.linalg.eigvals"], "function", ["None"], ["", "def", "natural_condition_on_general", "(", "J", ",", "h", ",", "Jo", ",", "ho", ",", "logZo", ")", ":", "\n", "    ", "Jo", "=", "Jo", "if", "Jo", ".", "ndim", "==", "2", "else", "np", ".", "diag", "(", "Jo", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvals", "(", "-", "2", "*", "(", "J", "+", "Jo", ")", ")", ">", "0", ")", "\n", "return", "(", "J", "+", "Jo", ",", "h", "+", "ho", ")", ",", "logZo", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_predict": [[52, 67], ["autograd.linalg.cholesky", "svae.util.solve_triangular", "svae.util.solve_triangular", "autograd.all", "autograd.sum", "autograd.dot", "autograd.dot", "autograd.dot", "autograd.log", "svae.util.solve_triangular", "autograd.linalg.eigvals", "autograd.diag"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular"], ["", "def", "natural_predict", "(", "J", ",", "h", ",", "J11", ",", "J12", ",", "J22", ",", "logZ", ")", ":", "\n", "# convert from natural parameter to the usual J definitions", "\n", "    ", "J", ",", "J11", ",", "J12", ",", "J22", "=", "-", "2", "*", "J", ",", "-", "2", "*", "J11", ",", "-", "J12", ",", "-", "2", "*", "J22", "\n", "\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "J", "+", "J11", ")", "\n", "v", "=", "solve_triangular", "(", "L", ",", "h", ")", "\n", "lognorm", "=", "1.", "/", "2", "*", "np", ".", "dot", "(", "v", ",", "v", ")", "-", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "diag", "(", "L", ")", ")", ")", "\n", "h_predict", "=", "-", "np", ".", "dot", "(", "J12", ".", "T", ",", "solve_triangular", "(", "L", ",", "v", ",", "trans", "=", "'T'", ")", ")", "\n", "\n", "temp", "=", "solve_triangular", "(", "L", ",", "J12", ")", "\n", "J_predict", "=", "J22", "-", "np", ".", "dot", "(", "temp", ".", "T", ",", "temp", ")", "\n", "\n", "assert", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvals", "(", "J_predict", ")", ">", "0", ")", "\n", "\n", "return", "(", "-", "1.", "/", "2", "*", "J_predict", ",", "h_predict", ")", ",", "lognorm", "+", "logZ", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_sample": [[69, 78], ["autograd.linalg.cholesky", "svae.util.solve_triangular", "numpy.random.mtrand._rand.normal", "autograd.sqrt", "numpy.random.mtrand._rand.normal", "svae.util.solve_posdef_from_cholesky"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_posdef_from_cholesky"], ["", "def", "natural_sample", "(", "J", ",", "h", ",", "num_samples", "=", "None", ",", "rng", "=", "rng", ")", ":", "\n", "    ", "sample_shape", "=", "(", "num_samples", ",", ")", "+", "h", ".", "shape", "if", "num_samples", "else", "h", ".", "shape", "\n", "J", "=", "-", "2", "*", "J", "\n", "if", "J", ".", "ndim", "==", "1", ":", "\n", "        ", "return", "h", "/", "J", "+", "rng", ".", "normal", "(", "size", "=", "sample_shape", ")", "/", "np", ".", "sqrt", "(", "J", ")", "\n", "", "else", ":", "\n", "        ", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "J", ")", "\n", "noise", "=", "solve_triangular", "(", "L", ",", "rng", ".", "normal", "(", "size", "=", "sample_shape", ")", ".", "T", ",", "trans", "=", "'T'", ")", "\n", "return", "solve_posdef_from_cholesky", "(", "L", ",", "h", ".", "T", ")", ".", "T", "+", "noise", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_lognorm": [[80, 85], ["autograd.linalg.cholesky", "svae.util.solve_triangular", "autograd.sum", "autograd.dot", "autograd.log", "autograd.diag"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular"], ["", "", "def", "natural_lognorm", "(", "J", ",", "h", ")", ":", "\n", "    ", "J", "=", "-", "2", "*", "J", "\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "J", ")", "\n", "v", "=", "solve_triangular", "(", "L", ",", "h", ")", "\n", "return", "1.", "/", "2", "*", "np", ".", "dot", "(", "v", ",", "v", ")", "-", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "diag", "(", "L", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_rts_backward_step": [[87, 107], ["autograd.linalg.cholesky", "svae.util.solve_triangular", "gaussian.info_to_mean", "autograd.dot", "autograd.dot", "autograd.outer", "autograd.outer", "svae.util.solve_triangular", "svae.util.solve_posdef_from_cholesky", "autograd.dot"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.info_to_mean", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_triangular", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.solve_posdef_from_cholesky"], ["", "def", "natural_rts_backward_step", "(", "next_smooth", ",", "next_pred", ",", "filtered", ",", "pair_param", ")", ":", "\n", "# p = \"predicted\", f = \"filtered\", s = \"smoothed\", n = \"next\"", "\n", "    ", "(", "Jns", ",", "hns", ",", "mun", ")", ",", "(", "Jnp", ",", "hnp", ")", ",", "(", "Jf", ",", "hf", ")", "=", "next_smooth", ",", "next_pred", ",", "filtered", "\n", "J11", ",", "J12", ",", "J22", ",", "_", "=", "pair_param", "\n", "\n", "# convert from natural parameter to the usual J definitions", "\n", "Jns", ",", "Jnp", ",", "Jf", ",", "J11", ",", "J12", ",", "J22", "=", "-", "2", "*", "Jns", ",", "-", "2", "*", "Jnp", ",", "-", "2", "*", "Jf", ",", "-", "2", "*", "J11", ",", "-", "J12", ",", "-", "2", "*", "J22", "\n", "\n", "J11", ",", "J12", ",", "J22", "=", "Jf", "+", "J11", ",", "J12", ",", "Jns", "-", "Jnp", "+", "J22", "\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "J22", ")", "\n", "temp", "=", "solve_triangular", "(", "L", ",", "J12", ".", "T", ")", "\n", "Js", "=", "J11", "-", "np", ".", "dot", "(", "temp", ".", "T", ",", "temp", ")", "\n", "hs", "=", "hf", "-", "np", ".", "dot", "(", "temp", ".", "T", ",", "solve_triangular", "(", "L", ",", "hns", "-", "hnp", ")", ")", "\n", "\n", "mu", ",", "sigma", "=", "info_to_mean", "(", "(", "Js", ",", "hs", ")", ")", "\n", "ExnxT", "=", "-", "solve_posdef_from_cholesky", "(", "L", ",", "np", ".", "dot", "(", "J12", ".", "T", ",", "sigma", ")", ")", "+", "np", ".", "outer", "(", "mun", ",", "mu", ")", "\n", "\n", "ExxT", "=", "sigma", "+", "np", ".", "outer", "(", "mu", ",", "mu", ")", "\n", "\n", "return", "-", "1.", "/", "2", "*", "Js", ",", "hs", ",", "(", "mu", ",", "ExxT", ",", "ExnxT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.mean_to_natural": [[110, 115], ["autograd.linalg.solve", "autograd.linalg.inv", "autograd.dot", "autograd.linalg.slogdet"], "function", ["None"], ["", "def", "mean_to_natural", "(", "mu", ",", "sigma", ")", ":", "\n", "    ", "neghalfJ", "=", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "inv", "(", "sigma", ")", "\n", "h", "=", "np", ".", "linalg", ".", "solve", "(", "sigma", ",", "mu", ")", "\n", "logZ", "=", "-", "1.", "/", "2", "*", "np", ".", "dot", "(", "mu", ",", "h", ")", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "slogdet", "(", "sigma", ")", "[", "1", "]", "\n", "return", "neghalfJ", ",", "h", ",", "logZ", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.info_to_mean": [[117, 122], ["autograd.linalg.inv", "autograd.dot"], "function", ["None"], ["", "def", "info_to_mean", "(", "infoparams", ")", ":", "\n", "    ", "J", ",", "h", "=", "infoparams", "\n", "Sigma", "=", "np", ".", "linalg", ".", "inv", "(", "J", ")", "\n", "mu", "=", "np", ".", "dot", "(", "Sigma", ",", "h", ")", "\n", "return", "mu", ",", "Sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.natural_to_mean": [[124, 128], ["gaussian.info_to_mean"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.info_to_mean"], ["", "def", "natural_to_mean", "(", "natparam", ")", ":", "\n", "    ", "J", ",", "h", "=", "natparam", "\n", "J", "=", "-", "2", "*", "J", "\n", "return", "info_to_mean", "(", "(", "J", ",", "h", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian.pair_mean_to_natural": [[130, 144], ["autograd.linalg.solve", "autograd.transpose", "autograd.einsum", "autograd.linalg.inv", "autograd.linalg.slogdet"], "function", ["None"], ["", "def", "pair_mean_to_natural", "(", "A", ",", "sigma", ")", ":", "\n", "    ", "assert", "2", "<=", "A", ".", "ndim", "==", "sigma", ".", "ndim", "<=", "3", "\n", "ndim", "=", "A", ".", "ndim", "\n", "\n", "einstring", "=", "'tji,tjk->tik'", "if", "ndim", "==", "3", "else", "'ji,jk->ik'", "\n", "trans", "=", "(", "0", ",", "2", ",", "1", ")", "if", "ndim", "==", "3", "else", "(", "1", ",", "0", ")", "\n", "temp", "=", "np", ".", "linalg", ".", "solve", "(", "sigma", ",", "A", ")", "\n", "\n", "Jxx", "=", "-", "1.", "/", "2", "*", "np", ".", "einsum", "(", "einstring", ",", "A", ",", "temp", ")", "\n", "Jxy", "=", "np", ".", "transpose", "(", "temp", ",", "trans", ")", "\n", "Jyy", "=", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "inv", "(", "sigma", ")", "\n", "logZ", "=", "-", "1.", "/", "2", "*", "np", ".", "linalg", ".", "slogdet", "(", "sigma", ")", "[", "1", "]", "\n", "\n", "return", "Jxx", ",", "Jxy", ",", "Jyy", ",", "logZ", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.lds.synthetic_data.rand_lds": [[8, 29], ["numpy.randn", "svae.util.rand_psd", "synthetic_data.rand_lds.rand_stable"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.svae.util.rand_psd"], ["def", "rand_lds", "(", "n", ",", "p", ",", "T", "=", "None", ")", ":", "\n", "    ", "def", "rand_stable", "(", "n", ")", ":", "\n", "        ", "A", "=", "npr", ".", "randn", "(", "n", ",", "n", ")", "\n", "A", "/=", "np", ".", "max", "(", "np", ".", "abs", "(", "np", ".", "linalg", ".", "eigvals", "(", "A", ")", ")", ")", "+", "0.1", "\n", "assert", "np", ".", "all", "(", "np", ".", "abs", "(", "np", ".", "linalg", ".", "eigvals", "(", "A", ")", ")", "<", "1.", ")", "\n", "return", "A", "\n", "\n", "", "homog", "=", "T", "is", "None", "\n", "\n", "mu_init", "=", "npr", ".", "randn", "(", "n", ")", "\n", "sigma_init", "=", "rand_psd", "(", "n", ")", "\n", "\n", "A", "=", "rand_stable", "(", "n", ")", "\n", "B", "=", "npr", ".", "randn", "(", "n", ",", "n", ")", "\n", "C", "=", "npr", ".", "randn", "(", "p", ",", "n", ")", "if", "homog", "else", "npr", ".", "randn", "(", "T", ",", "p", ",", "n", ")", "\n", "D", "=", "npr", ".", "randn", "(", "p", ",", "p", ")", "if", "homog", "else", "npr", ".", "randn", "(", "T", ",", "p", ",", "p", ")", "\n", "\n", "sigma_states", "=", "np", ".", "dot", "(", "B", ",", "B", ".", "T", ")", "\n", "sigma_obs", "=", "np", ".", "dot", "(", "D", ",", "D", ".", "T", ")", "if", "homog", "else", "np", ".", "einsum", "(", "'tij,tkj->tik'", ",", "D", ",", "D", ")", "\n", "\n", "return", "mu_init", ",", "sigma_init", ",", "A", ",", "sigma_states", ",", "C", ",", "sigma_obs", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.synthetic_data.generate_data": [[31, 49], ["numpy.empty", "numpy.empty", "numpy.linalg.cholesky", "numpy.linalg.cholesky", "map", "enumerate", "numpy.dot", "numpy.dot", "numpy.dot", "zip", "numpy.linalg.cholesky", "numpy.randn", "numpy.randn", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.randn", "numpy.randn"], "function", ["None"], ["", "def", "generate_data", "(", "T", ",", "mu_init", ",", "sigma_init", ",", "A", ",", "sigma_states", ",", "C", ",", "sigma_obs", ")", ":", "\n", "    ", "p", ",", "n", "=", "C", ".", "shape", "[", "-", "2", ":", "]", "\n", "states", "=", "np", ".", "empty", "(", "(", "T", ",", "n", ")", ")", "\n", "data", "=", "np", ".", "empty", "(", "(", "T", ",", "p", ")", ")", "\n", "\n", "B", "=", "np", ".", "linalg", ".", "cholesky", "(", "sigma_states", ")", "\n", "D", "=", "np", ".", "linalg", ".", "cholesky", "(", "sigma_obs", ")", "\n", "\n", "broadcast", "=", "lambda", "X", ",", "T", ":", "X", "if", "X", ".", "ndim", "==", "3", "else", "[", "X", "]", "*", "T", "\n", "As", ",", "Bs", ",", "Cs", ",", "Ds", "=", "map", "(", "broadcast", ",", "[", "A", ",", "B", ",", "C", ",", "D", "]", ",", "[", "T", "-", "1", ",", "T", "-", "1", ",", "T", ",", "T", "]", ")", "\n", "\n", "states", "[", "0", "]", "=", "mu_init", "+", "np", ".", "dot", "(", "np", ".", "linalg", ".", "cholesky", "(", "sigma_init", ")", ",", "npr", ".", "randn", "(", "n", ")", ")", "\n", "data", "[", "0", "]", "=", "np", ".", "dot", "(", "Cs", "[", "0", "]", ",", "states", "[", "0", "]", ")", "+", "np", ".", "dot", "(", "Ds", "[", "0", "]", ",", "npr", ".", "randn", "(", "p", ")", ")", "\n", "for", "t", ",", "(", "A", ",", "B", ",", "C", ",", "D", ")", "in", "enumerate", "(", "zip", "(", "As", ",", "Bs", ",", "Cs", "[", "1", ":", "]", ",", "Ds", "[", "1", ":", "]", ")", ")", ":", "\n", "        ", "states", "[", "t", "+", "1", "]", "=", "np", ".", "dot", "(", "A", ",", "states", "[", "t", "]", ")", "+", "np", ".", "dot", "(", "B", ",", "npr", ".", "randn", "(", "n", ")", ")", "\n", "data", "[", "t", "+", "1", "]", "=", "np", ".", "dot", "(", "C", ",", "states", "[", "t", "+", "1", "]", ")", "+", "np", ".", "dot", "(", "D", ",", "npr", ".", "randn", "(", "p", ")", ")", "\n", "\n", "", "return", "states", ",", "data", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.lds.lds_prior.lds_prior_expectedstats": [[7, 10], ["niw.expectedstats", "mniw.expectedstats"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats"], ["def", "lds_prior_expectedstats", "(", "natparam", ")", ":", "\n", "    ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "expectedstats", "(", "niw_natparam", ")", ",", "mniw", ".", "expectedstats", "(", "mniw_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.lds_prior.lds_prior_logZ": [[12, 15], ["niw.logZ", "mniw.logZ"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.logZ", "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.logZ"], ["", "def", "lds_prior_logZ", "(", "natparam", ")", ":", "\n", "    ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "logZ", "(", "niw_natparam", ")", "+", "mniw", ".", "logZ", "(", "mniw_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.lds.lds_prior.lds_prior_vlb": [[17, 22], ["lds_prior.lds_prior_expectedstats", "util.contract", "util.sub", "lds_prior.lds_prior_logZ", "lds_prior.lds_prior_logZ"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_logZ", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_logZ"], ["", "def", "lds_prior_vlb", "(", "global_natparam", ",", "prior_natparam", ",", "expected_stats", "=", "None", ")", ":", "\n", "    ", "if", "expected_stats", "is", "None", ":", "\n", "        ", "expected_stats", "=", "lds_prior_expectedstats", "(", "global_natparam", ")", "\n", "", "return", "contract", "(", "sub", "(", "prior_natparam", ",", "global_natparam", ")", ",", "expected_stats", ")", "-", "(", "lds_prior_logZ", "(", "prior_natparam", ")", "-", "lds_prior_logZ", "(", "global_natparam", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.logZ": [[13, 18], ["mniw.natural_to_standard", "autograd.scipy.special.multigammaln", "autograd.linalg.slogdet", "autograd.log", "autograd.linalg.slogdet"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard"], ["def", "logZ", "(", "natparam", ")", ":", "\n", "    ", "nu", ",", "S", ",", "_", ",", "K", "=", "natural_to_standard", "(", "natparam", ")", "\n", "n", "=", "S", ".", "shape", "[", "0", "]", "\n", "return", "n", "*", "nu", "/", "2.", "*", "np", ".", "log", "(", "2", ")", "+", "multigammaln", "(", "nu", "/", "2.", ",", "n", ")", "-", "nu", "/", "2.", "*", "np", ".", "linalg", ".", "slogdet", "(", "S", ")", "[", "1", "]", "+", "n", "/", "2.", "*", "np", ".", "linalg", ".", "slogdet", "(", "K", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.expectedstats": [[19, 21], ["mniw.expectedstats_standard", "mniw.natural_to_standard"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.expectedstats_standard", "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard"], ["", "def", "expectedstats", "(", "natparam", ")", ":", "\n", "    ", "return", "expectedstats_standard", "(", "*", "natural_to_standard", "(", "natparam", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.is_posdef": [[22, 24], ["autograd.allclose", "autograd.all", "autograd.linalg.eigvalsh"], "function", ["None"], ["", "def", "is_posdef", "(", "A", ")", ":", "\n", "    ", "return", "np", ".", "allclose", "(", "A", ",", "A", ".", "T", ")", "and", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvalsh", "(", "A", ")", ">", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.standard_to_natural": [[25, 32], ["autograd.linalg.inv", "autograd.dot", "autograd.dot"], "function", ["None"], ["", "def", "standard_to_natural", "(", "nu", ",", "S", ",", "M", ",", "K", ")", ":", "\n", "    ", "Kinv", "=", "np", ".", "linalg", ".", "inv", "(", "K", ")", "\n", "A", "=", "Kinv", "\n", "B", "=", "np", ".", "dot", "(", "Kinv", ",", "M", ".", "T", ")", "\n", "C", "=", "S", "+", "np", ".", "dot", "(", "M", ",", "B", ")", "\n", "d", "=", "nu", "\n", "return", "(", "A", ",", "B", ",", "C", ",", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.natural_to_standard": [[33, 41], ["svae.util.symmetrize", "autograd.linalg.inv", "autograd.dot", "autograd.dot"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize"], ["", "def", "natural_to_standard", "(", "natparam", ")", ":", "\n", "    ", "A", ",", "B", ",", "C", ",", "d", "=", "natparam", "\n", "nu", "=", "d", "\n", "Kinv", "=", "A", "\n", "K", "=", "symmetrize", "(", "np", ".", "linalg", ".", "inv", "(", "Kinv", ")", ")", "\n", "M", "=", "np", ".", "dot", "(", "K", ",", "B", ")", ".", "T", "\n", "S", "=", "C", "-", "np", ".", "dot", "(", "M", ",", "B", ")", "\n", "return", "nu", ",", "S", ",", "M", ",", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.expectedstats_standard": [[42, 56], ["mniw.is_posdef", "mniw.is_posdef", "autograd.util.make_tuple", "autograd.linalg.solve", "svae.util.symmetrize", "autograd.eye", "autograd.eye", "autograd.scipy.special.digamma().sum", "autograd.linalg.slogdet", "autograd.linalg.inv", "svae.util.symmetrize", "autograd.log", "autograd.dot", "autograd.scipy.special.digamma", "autograd.linalg.solve", "autograd.arange"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.is_posdef", "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.is_posdef", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize"], ["", "def", "expectedstats_standard", "(", "nu", ",", "S", ",", "M", ",", "K", ",", "fudge", "=", "1e-8", ")", ":", "\n", "    ", "m", "=", "M", ".", "shape", "[", "0", "]", "\n", "E_Sigmainv", "=", "nu", "*", "symmetrize", "(", "np", ".", "linalg", ".", "inv", "(", "S", ")", ")", "+", "fudge", "*", "np", ".", "eye", "(", "S", ".", "shape", "[", "0", "]", ")", "\n", "E_Sigmainv_A", "=", "nu", "*", "np", ".", "linalg", ".", "solve", "(", "S", ",", "M", ")", "\n", "E_AT_Sigmainv_A", "=", "m", "*", "K", "+", "nu", "*", "symmetrize", "(", "np", ".", "dot", "(", "M", ".", "T", ",", "np", ".", "linalg", ".", "solve", "(", "S", ",", "M", ")", ")", ")", "+", "fudge", "*", "np", ".", "eye", "(", "K", ".", "shape", "[", "0", "]", ")", "\n", "E_logdetSigmainv", "=", "digamma", "(", "(", "nu", "-", "np", ".", "arange", "(", "m", ")", ")", "/", "2.", ")", ".", "sum", "(", ")", "+", "m", "*", "np", ".", "log", "(", "2", ")", "-", "np", ".", "linalg", ".", "slogdet", "(", "S", ")", "[", "1", "]", "\n", "\n", "assert", "is_posdef", "(", "E_Sigmainv", ")", "\n", "assert", "is_posdef", "(", "E_AT_Sigmainv_A", ")", "\n", "\n", "return", "make_tuple", "(", "\n", "-", "1.", "/", "2", "*", "E_AT_Sigmainv_A", ",", "E_Sigmainv_A", ".", "T", ",", "-", "1.", "/", "2", "*", "E_Sigmainv", ",", "1.", "/", "2", "*", "E_logdetSigmainv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.expectedstats_autograd": [[57, 59], ["autograd.grad"], "function", ["None"], ["", "def", "expectedstats_autograd", "(", "natparam", ")", ":", "\n", "    ", "return", "grad", "(", "logZ", ")", "(", "natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.expected_standard_params": [[60, 65], ["mniw.expectedstats", "autograd.linalg.solve", "autograd.linalg.inv"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats"], ["", "def", "expected_standard_params", "(", "natparam", ")", ":", "\n", "    ", "J11", ",", "J12", ",", "J22", ",", "_", "=", "expectedstats", "(", "natparam", ")", "\n", "A", "=", "np", ".", "linalg", ".", "solve", "(", "-", "2.", "*", "J22", ",", "J12", ".", "T", ")", "\n", "Sigma", "=", "np", ".", "linalg", ".", "inv", "(", "-", "2", "*", "J22", ")", "\n", "return", "A", ",", "Sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.mniw.natural_sample": [[66, 90], ["mniw.natural_to_standard", "mniw.natural_sample.sample_invwishart"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard"], ["", "def", "natural_sample", "(", "natparam", ")", ":", "\n", "    ", "nu", ",", "S", ",", "M", ",", "K", "=", "natural_to_standard", "(", "natparam", ")", "\n", "\n", "def", "sample_invwishart", "(", "S", ",", "nu", ")", ":", "\n", "        ", "n", "=", "S", ".", "shape", "[", "0", "]", "\n", "chol", "=", "np", ".", "linalg", ".", "cholesky", "(", "S", ")", "\n", "\n", "if", "(", "nu", "<=", "81", "+", "n", ")", "and", "(", "nu", "==", "np", ".", "round", "(", "nu", ")", ")", ":", "\n", "            ", "x", "=", "npr", ".", "randn", "(", "nu", ",", "n", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "np", ".", "diag", "(", "np", ".", "sqrt", "(", "np", ".", "atleast_1d", "(", "chi2", ".", "rvs", "(", "nu", "-", "np", ".", "arange", "(", "n", ")", ")", ")", ")", ")", "\n", "x", "[", "np", ".", "triu_indices_from", "(", "x", ",", "1", ")", "]", "=", "npr", ".", "randn", "(", "n", "*", "(", "n", "-", "1", ")", "//", "2", ")", "\n", "", "R", "=", "np", ".", "linalg", ".", "qr", "(", "x", ",", "'r'", ")", "\n", "T", "=", "solve_triangular", "(", "R", ".", "T", ",", "chol", ".", "T", ",", "lower", "=", "True", ")", ".", "T", "\n", "return", "np", ".", "dot", "(", "T", ",", "T", ".", "T", ")", "\n", "\n", "", "def", "sample_mn", "(", "M", ",", "U", ",", "V", ")", ":", "\n", "        ", "G", "=", "npr", ".", "normal", "(", "size", "=", "M", ".", "shape", ")", "\n", "return", "M", "+", "np", ".", "dot", "(", "np", ".", "dot", "(", "np", ".", "linalg", ".", "cholesky", "(", "U", ")", ",", "G", ")", ",", "np", ".", "linalg", ".", "cholesky", "(", "V", ")", ".", "T", ")", "\n", "\n", "", "Sigma", "=", "sample_invwishart", "(", "S", ",", "nu", ")", "\n", "A", "=", "sample_mn", "(", "M", ",", "Sigma", ",", "K", ")", "\n", "\n", "return", "A", ",", "Sigma", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.expectedstats": [[15, 26], ["niw.natural_to_standard", "gaussian.pack_dense", "autograd.matmul", "svae.util.symmetrize", "autograd.eye", "autograd.matmul", "autograd.sum", "autograd.linalg.slogdet", "autograd.linalg.inv", "autograd.scipy.special.digamma", "autograd.log", "autograd.arange"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard", "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense", "home.repos.pwc.inspect_result.mattjj_svae.lds.gaussian_nochol.symmetrize"], ["def", "expectedstats", "(", "natparam", ",", "fudge", "=", "1e-8", ")", ":", "\n", "    ", "S", ",", "m", ",", "kappa", ",", "nu", "=", "natural_to_standard", "(", "natparam", ")", "\n", "d", "=", "m", ".", "shape", "[", "-", "1", "]", "\n", "\n", "E_J", "=", "nu", "[", "...", ",", "None", ",", "None", "]", "*", "symmetrize", "(", "np", ".", "linalg", ".", "inv", "(", "S", ")", ")", "+", "fudge", "*", "np", ".", "eye", "(", "d", ")", "\n", "E_h", "=", "np", ".", "matmul", "(", "E_J", ",", "m", "[", "...", ",", "None", "]", ")", "[", "...", ",", "0", "]", "\n", "E_hTJinvh", "=", "d", "/", "kappa", "+", "np", ".", "matmul", "(", "m", "[", "...", ",", "None", ",", ":", "]", ",", "E_h", "[", "...", ",", "None", "]", ")", "[", "...", ",", "0", ",", "0", "]", "\n", "E_logdetJ", "=", "(", "np", ".", "sum", "(", "digamma", "(", "(", "nu", "[", "...", ",", "None", "]", "-", "np", ".", "arange", "(", "d", ")", "[", "None", ",", "...", "]", ")", "/", "2.", ")", ",", "-", "1", ")", "+", "d", "*", "np", ".", "log", "(", "2.", ")", ")", "-", "np", ".", "linalg", ".", "slogdet", "(", "S", ")", "[", "1", "]", "\n", "\n", "return", "pack_dense", "(", "-", "1.", "/", "2", "*", "E_J", ",", "E_h", ",", "-", "1.", "/", "2", "*", "E_hTJinvh", ",", "1.", "/", "2", "*", "E_logdetJ", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.logZ": [[27, 32], ["niw.natural_to_standard", "autograd.sum", "autograd.log", "autograd.scipy.special.multigammaln", "autograd.log", "autograd.linalg.slogdet"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard"], ["", "def", "logZ", "(", "natparam", ")", ":", "\n", "    ", "S", ",", "m", ",", "kappa", ",", "nu", "=", "natural_to_standard", "(", "natparam", ")", "\n", "d", "=", "m", ".", "shape", "[", "-", "1", "]", "\n", "return", "np", ".", "sum", "(", "d", "*", "nu", "/", "2.", "*", "np", ".", "log", "(", "2.", ")", "+", "multigammaln", "(", "nu", "/", "2.", ",", "d", ")", "\n", "-", "nu", "/", "2.", "*", "np", ".", "linalg", ".", "slogdet", "(", "S", ")", "[", "1", "]", "-", "d", "/", "2.", "*", "np", ".", "log", "(", "kappa", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard": [[33, 38], ["gaussian.unpack_dense", "autograd.expand_dims", "svae.util.outer"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense"], ["", "def", "natural_to_standard", "(", "natparam", ")", ":", "\n", "    ", "A", ",", "b", ",", "kappa", ",", "nu", "=", "unpack_dense", "(", "natparam", ")", "\n", "m", "=", "b", "/", "np", ".", "expand_dims", "(", "kappa", ",", "-", "1", ")", "\n", "S", "=", "A", "-", "outer", "(", "b", ",", "m", ")", "\n", "return", "S", ",", "m", ",", "kappa", ",", "nu", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural": [[39, 43], ["gaussian.pack_dense", "autograd.expand_dims", "svae.util.outer"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense"], ["", "def", "standard_to_natural", "(", "S", ",", "m", ",", "kappa", ",", "nu", ")", ":", "\n", "    ", "b", "=", "np", ".", "expand_dims", "(", "kappa", ",", "-", "1", ")", "*", "m", "\n", "A", "=", "S", "+", "outer", "(", "b", ",", "m", ")", "\n", "return", "pack_dense", "(", "A", ",", "b", ",", "kappa", ",", "nu", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.categorical.logZ": [[8, 10], ["autograd.sum", "autograd.scipy.misc.logsumexp"], "function", ["None"], ["def", "logZ", "(", "natparam", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "logsumexp", "(", "natparam", ",", "axis", "=", "-", "1", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.expectedstats": [[11, 18], ["gaussian.unpack_dense", "autograd.linalg.solve", "gaussian.pack_dense", "autograd.linalg.inv", "autograd.ones"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense", "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense"], ["return", "mu", "+", "np", ".", "dot", "(", "L", ",", "rng", ".", "normal", "(", "size", "=", "mu", ".", "shape", ")", ")", "\n", "\n", "\n", "", "def", "predict", "(", "mu", ",", "sigma", ",", "A", ",", "sigma_update", ")", ":", "\n", "    ", "mu_predict", "=", "np", ".", "dot", "(", "A", ",", "mu", ")", "\n", "sigma_predict", "=", "np", ".", "dot", "(", "A", ",", "np", ".", "dot", "(", "sigma", ",", "A", ".", "T", ")", ")", "+", "sigma_update", "\n", "return", "mu_predict", ",", "sigma_predict", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.logZ": [[19, 26], ["gaussian.unpack_dense", "autograd.linalg.cholesky", "autograd.sum", "autograd.sum", "autograd.sum", "autograd.log", "autograd.diagonal", "autograd.linalg.solve"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense"], ["\n", "", "def", "condition_on", "(", "mu", ",", "sigma", ",", "A", ",", "y", ",", "sigma_obs", ")", ":", "\n", "    ", "temp1", "=", "np", ".", "dot", "(", "A", ",", "sigma", ")", "\n", "sigma_pred", "=", "np", ".", "dot", "(", "temp1", ",", "A", ".", "T", ")", "+", "sigma_obs", "\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "sigma_pred", ")", "\n", "v", "=", "solve_triangular", "(", "L", ",", "y", "-", "np", ".", "dot", "(", "A", ",", "mu", ")", ")", "\n", "ll", "=", "-", "1.", "/", "2", "*", "np", ".", "dot", "(", "v", ",", "v", ")", "-", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "diag", "(", "L", ")", ")", ")", "-", "y", ".", "shape", "[", "0", "]", "/", "2.", "*", "np", ".", "log", "(", "2", "*", "np", ".", "pi", ")", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.natural_sample": [[27, 34], ["gaussian.unpack_dense", "autograd.linalg.cholesky", "autograd.linalg.solve", "autograd.shape", "svae.util.T", "autograd.randn", "svae.util.T", "autograd.linalg.solve"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense"], ["mu_cond", "=", "mu", "+", "np", ".", "dot", "(", "temp1", ".", "T", ",", "solve_triangular", "(", "L", ",", "v", ",", "'T'", ")", ")", "\n", "\n", "temp2", "=", "solve_triangular", "(", "L", ",", "temp1", ")", "\n", "sigma_cond", "=", "sigma", "-", "np", ".", "dot", "(", "temp2", ".", "T", ",", "temp2", ")", "\n", "\n", "return", "(", "mu_cond", ",", "sigma_cond", ")", ",", "ll", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense": [[39, 54], ["vs", "autograd.zeros", "autograd.zeros", "autograd.reshape", "autograd.reshape", "hs", "hs", "hs", "autograd.eye", "svae.util.T", "svae.util.T"], "function", ["None"], ["    ", "J_cond", ",", "h_cond", "=", "J", "+", "Jxx", ",", "h", "+", "np", ".", "dot", "(", "Jxy", ",", "y", ".", "T", ")", ".", "T", "\n", "\n", "if", "Jyy", "is", "None", "or", "logZ", "is", "None", ":", "\n", "        ", "return", "J_cond", ",", "h_cond", "\n", "", "return", "(", "J_cond", ",", "h_cond", ")", ",", "logZ", "+", "np", ".", "dot", "(", "y", ",", "np", ".", "dot", "(", "Jyy", ",", "y", ".", "T", ")", ")", "\n", "\n", "\n", "", "def", "natural_condition_on_general", "(", "J", ",", "h", ",", "Jo", ",", "ho", ",", "logZo", ")", ":", "\n", "    ", "Jo", "=", "Jo", "if", "Jo", ".", "ndim", "==", "2", "else", "np", ".", "diag", "(", "Jo", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "linalg", ".", "eigvals", "(", "-", "2", "*", "(", "J", "+", "Jo", ")", ")", ">", "0", ")", "\n", "return", "(", "J", "+", "Jo", ",", "h", "+", "ho", ")", ",", "logZo", "\n", "\n", "\n", "", "def", "natural_predict", "(", "J", ",", "h", ",", "J11", ",", "J12", ",", "J22", ",", "logZ", ")", ":", "\n", "# convert from natural parameter to the usual J definitions", "\n", "    ", "J", ",", "J11", ",", "J12", ",", "J22", "=", "-", "2", "*", "J", ",", "-", "2", "*", "J11", ",", "-", "J12", ",", "-", "2", "*", "J22", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense": [[55, 58], ["None"], "function", ["None"], ["\n", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "J", "+", "J11", ")", "\n", "v", "=", "solve_triangular", "(", "L", ",", "h", ")", "\n", "lognorm", "=", "1.", "/", "2", "*", "np", ".", "dot", "(", "v", ",", "v", ")", "-", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "diag", "(", "L", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats": [[5, 8], ["autograd.scipy.special.digamma", "autograd.scipy.special.digamma", "autograd.sum"], "function", ["None"], ["def", "expectedstats", "(", "natparam", ")", ":", "\n", "    ", "alpha", "=", "natparam", "+", "1", "\n", "return", "digamma", "(", "alpha", ")", "-", "digamma", "(", "np", ".", "sum", "(", "alpha", ",", "-", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.logZ": [[9, 12], ["autograd.sum", "autograd.sum", "autograd.scipy.special.gammaln", "autograd.scipy.special.gammaln", "autograd.sum"], "function", ["None"], ["", "def", "logZ", "(", "natparam", ")", ":", "\n", "    ", "alpha", "=", "natparam", "+", "1", "\n", "return", "np", ".", "sum", "(", "np", ".", "sum", "(", "gammaln", "(", "alpha", ")", ",", "-", "1", ")", "-", "gammaln", "(", "np", ".", "sum", "(", "alpha", ",", "-", "1", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_kl": [[16, 21], ["lds.lds_prior_expectedstats", "svae.util.contract", "lds.lds_prior_logZ", "lds.lds_prior_logZ", "svae.util.sub"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_logZ", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_logZ"], ["def", "lds_prior_kl", "(", "global_natparam", ",", "prior_natparam", ",", "expected_stats", "=", "None", ")", ":", "\n", "    ", "if", "expected_stats", "is", "None", ":", "\n", "        ", "expected_stats", "=", "lds_prior_expectedstats", "(", "global_natparam", ")", "\n", "", "return", "-", "contract", "(", "sub", "(", "prior_natparam", ",", "global_natparam", ")", ",", "expected_stats", ")", "+", "(", "lds_prior_logZ", "(", "prior_natparam", ")", "-", "lds_prior_logZ", "(", "global_natparam", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_expectedstats": [[23, 26], ["svae.lds.niw.expectedstats", "svae.lds.mniw.expectedstats"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats"], ["", "def", "lds_prior_expectedstats", "(", "natparam", ")", ":", "\n", "    ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "expectedstats", "(", "niw_natparam", ")", ",", "mniw", ".", "expectedstats", "(", "mniw_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_logZ": [[28, 31], ["svae.lds.niw.logZ", "svae.lds.mniw.logZ"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.logZ", "home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.logZ"], ["", "def", "lds_prior_logZ", "(", "natparam", ")", ":", "\n", "    ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "logZ", "(", "niw_natparam", ")", "+", "mniw", ".", "logZ", "(", "mniw_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.run_inference": [[35, 43], ["lds.lds_prior_expectedstats", "svae.lds.lds_inference.natural_lds_inference_general", "lds.lds_prior_kl", "svae.util.contract"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_kl"], ["", "def", "run_inference", "(", "prior_natparam", ",", "global_natparam", ",", "nn_potentials", ",", "num_samples", ")", ":", "\n", "    ", "local_natparam", "=", "lds_prior_expectedstats", "(", "global_natparam", ")", "\n", "samples", ",", "expected_stats", ",", "local_normalizer", "=", "natural_lds_inference_general", "(", "\n", "local_natparam", ",", "nn_potentials", ",", "num_samples", ")", "\n", "global_expected_stats", ",", "local_expected_stats", "=", "expected_stats", "[", ":", "-", "1", "]", ",", "expected_stats", "[", "-", "1", "]", "\n", "local_kl", "=", "contract", "(", "nn_potentials", ",", "local_expected_stats", ")", "-", "local_normalizer", "\n", "global_kl", "=", "lds_prior_kl", "(", "global_natparam", ",", "prior_natparam", ",", "local_natparam", ")", "\n", "return", "samples", ",", "global_expected_stats", ",", "global_kl", ",", "local_kl", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.cython_run_inference": [[45, 53], ["lds.lds_prior_expectedstats", "svae.lds.lds_inference.cython_natural_lds_inference_general", "lds.lds_prior_kl", "svae.util.contract"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.models.lds.lds_prior_kl"], ["", "def", "cython_run_inference", "(", "prior_natparam", ",", "global_natparam", ",", "nn_potentials", ",", "num_samples", ")", ":", "\n", "    ", "local_natparam", "=", "lds_prior_expectedstats", "(", "global_natparam", ")", "\n", "samples", ",", "expected_stats", ",", "local_normalizer", "=", "cython_natural_lds_inference_general", "(", "\n", "local_natparam", ",", "nn_potentials", ",", "num_samples", ")", "\n", "global_expected_stats", ",", "local_expected_stats", "=", "expected_stats", "[", ":", "-", "1", "]", ",", "expected_stats", "[", "-", "1", "]", "\n", "local_kl", "=", "contract", "(", "nn_potentials", ",", "local_expected_stats", ")", "-", "local_normalizer", "\n", "global_kl", "=", "lds_prior_kl", "(", "global_natparam", ",", "prior_natparam", ",", "local_natparam", ")", "\n", "return", "samples", ",", "global_expected_stats", ",", "global_kl", ",", "local_kl", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.make_prior_natparam": [[57, 68], ["svae.lds.niw.standard_to_natural", "svae.lds.mniw.standard_to_natural", "autograd.zeros", "autograd.eye", "autograd.eye", "autograd.eye"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural", "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural"], ["", "def", "make_prior_natparam", "(", "n", ",", "random", "=", "False", ",", "scaling", "=", "1.", ")", ":", "\n", "    ", "if", "random", ":", "raise", "NotImplementedError", "\n", "\n", "nu", ",", "S", ",", "mu", ",", "kappa", "=", "n", "+", "1.", ",", "2.", "*", "scaling", "*", "(", "n", "+", "1", ")", "*", "np", ".", "eye", "(", "n", ")", ",", "np", ".", "zeros", "(", "n", ")", ",", "1.", "/", "(", "2.", "*", "scaling", "*", "n", ")", "\n", "# M, K = np.zeros((n,n)), 1./(2.*scaling*n)*np.eye(n)", "\n", "M", ",", "K", "=", "np", ".", "eye", "(", "n", ")", ",", "1.", "/", "(", "2.", "*", "scaling", "*", "n", ")", "*", "np", ".", "eye", "(", "n", ")", "\n", "\n", "init_state_prior_natparam", "=", "niw", ".", "standard_to_natural", "(", "nu", ",", "S", ",", "mu", ",", "kappa", ")", "\n", "dynamics_prior_natparam", "=", "mniw", ".", "standard_to_natural", "(", "nu", ",", "S", ",", "M", ",", "K", ")", "\n", "\n", "return", "init_state_prior_natparam", ",", "dynamics_prior_natparam", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.generate_test_model_and_data": [[70, 74], ["svae.lds.synthetic_data.rand_lds", "svae.lds.synthetic_data.generate_data"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.lds.synthetic_data.rand_lds", "home.repos.pwc.inspect_result.mattjj_svae.lds.synthetic_data.generate_data"], ["", "def", "generate_test_model_and_data", "(", "n", ",", "p", ",", "T", ")", ":", "\n", "    ", "lds", "=", "rand_lds", "(", "n", ",", "p", ")", "\n", "_", ",", "data", "=", "generate_data", "(", "T", ",", "*", "lds", ")", "\n", "return", "lds", ",", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.lds.linear_recognition_params_from_lds": [[76, 79], ["autograd.linalg.cholesky"], "function", ["None"], ["", "def", "linear_recognition_params_from_lds", "(", "lds", ")", ":", "\n", "    ", "C", ",", "sigma_obs", "=", "lds", "[", "-", "2", ":", "]", "\n", "return", "C", ",", "np", ".", "linalg", ".", "cholesky", "(", "sigma_obs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.unpack_params": [[14, 19], ["None"], "function", ["None"], ["def", "unpack_params", "(", "natparams", ")", ":", "\n", "    ", "neghalfJs", ",", "hs", ",", "_", "=", "natparams", "\n", "Js", "=", "-", "2", "*", "neghalfJs", "\n", "mus", ",", "sigmasqs", "=", "hs", "/", "Js", ",", "1.", "/", "Js", "\n", "return", "mus", ",", "sigmasqs", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.sample": [[21, 27], ["iid_gausisan.unpack_params", "autograd.normal", "autograd.sqrt"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.unpack_params"], ["", "def", "sample", "(", "natparams", ",", "num_samples", "=", "None", ")", ":", "\n", "    ", "'Takes a list of natural parameter tuples and produces an array of samples'", "\n", "mus", ",", "sigmasqs", "=", "unpack_params", "(", "natparams", ")", "\n", "T", ",", "n", "=", "mus", ".", "shape", "\n", "rand_shape", "=", "(", "T", ",", "num_samples", ",", "n", ")", "if", "num_samples", "else", "(", "T", ",", "n", ")", "\n", "return", "mus", "[", ":", ",", "None", ",", ":", "]", "+", "np", ".", "sqrt", "(", "sigmasqs", ")", "[", ":", ",", "None", ",", ":", "]", "*", "npr", ".", "normal", "(", "size", "=", "rand_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.gaussian_vlb": [[29, 34], ["iid_gausisan.unpack_params", "autograd.sum", "autograd.log"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.unpack_params"], ["", "def", "gaussian_vlb", "(", "variational_natparams", ")", ":", "\n", "    ", "'Takes a list of variational natural parameters output by the recognition network'", "\n", "'and returns E_q[log p(x)/q(x)] = -kl( q(x) || p(x) ) where p(x) is N(0,I)'", "\n", "mus", ",", "sigmasqs", "=", "unpack_params", "(", "variational_natparams", ")", "\n", "return", "1.", "/", "2", "*", "np", ".", "sum", "(", "1", "+", "np", ".", "log", "(", "sigmasqs", ")", "-", "mus", "**", "2", "-", "sigmasqs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.run_inference": [[42, 47], ["iid_gausisan.sample", "iid_gausisan.gaussian_vlb"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.sample", "home.repos.pwc.inspect_result.mattjj_svae.models.iid_gausisan.gaussian_vlb"], ["", "def", "run_inference", "(", "prior_natparam", ",", "global_natparam", ",", "nn_potential", ",", "num_samples", ")", ":", "\n", "    ", "samples", "=", "sample", "(", "nn_potential", ",", "num_samples", ")", "\n", "local_vlb", "=", "gaussian_vlb", "(", "nn_potential", ")", "\n", "global_vlb", "=", "0.", "\n", "return", "samples", ",", "(", ")", ",", "global_vlb", ",", "local_vlb", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.make_slds_global_natparam": [[27, 32], ["slds_svae.make_hmm_global_natparam", "slds_svae.make_lds_global_natparams"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.make_hmm_global_natparam", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.make_lds_global_natparams"], ["def", "make_slds_global_natparam", "(", "num_states", ",", "state_dim", ",", "alpha", "=", "5.", ",", "sticky_bias", "=", "0.", ",", "random", "=", "False", ")", ":", "\n", "    ", "hmm_global_natparam", "=", "make_hmm_global_natparam", "(", "num_states", ",", "alpha", ",", "sticky_bias", ",", "random", "=", "random", ")", "\n", "lds_global_natparams", "=", "make_lds_global_natparams", "(", "num_states", ",", "state_dim", ",", "random", "=", "random", ")", "\n", "\n", "return", "hmm_global_natparam", ",", "lds_global_natparams", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.make_hmm_global_natparam": [[38, 50], ["slds_svae.make_hmm_global_natparam.make_dir_natparam"], "function", ["None"], ["", "def", "make_hmm_global_natparam", "(", "num_states", ",", "alpha", "=", "1.", ",", "sticky_bias", "=", "0.", ",", "random", "=", "False", ")", ":", "\n", "    ", "def", "make_dir_natparam", "(", "num_states", ")", ":", "\n", "        ", "return", "alpha", "*", "np", ".", "ones", "(", "num_states", ")", "if", "not", "random", "else", "alpha", "+", "npr", ".", "rand", "(", "num_states", ")", "\n", "\n", "", "def", "make_mdir_natparam", "(", "num_states", ")", ":", "\n", "        ", "return", "sticky_bias", "*", "np", ".", "eye", "(", "num_states", ")", "+", "np", ".", "array", "(", "[", "make_dir_natparam", "(", "num_states", ")", "for", "_", "in", "range", "(", "num_states", ")", "]", ")", "\n", "\n", "", "dir_natparam", "=", "make_dir_natparam", "(", "num_states", ")", "\n", "mdir_natparam", "=", "make_mdir_natparam", "(", "num_states", ")", "\n", "\n", "return", "dir_natparam", ",", "mdir_natparam", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.make_lds_global_natparams": [[56, 76], ["zip", "svae.lds.niw.standard_to_natural", "svae.lds.mniw.standard_to_natural", "slds_svae.make_lds_global_natparams.make_niw_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural", "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural"], ["", "def", "make_lds_global_natparams", "(", "num_states", ",", "state_dim", ",", "random", "=", "False", ")", ":", "\n", "    ", "def", "make_niw_natparam", "(", "n", ")", ":", "\n", "        ", "if", "not", "random", ":", "\n", "            ", "nu", ",", "S", ",", "mu", ",", "kappa", "=", "n", "+", "10.", ",", "(", "n", "+", "10.", ")", "*", "np", ".", "eye", "(", "n", ")", ",", "np", ".", "zeros", "(", "n", ")", ",", "10.", "\n", "", "else", ":", "\n", "            ", "nu", ",", "S", ",", "mu", ",", "kappa", "=", "n", "+", "4.", "+", "npr", ".", "rand", "(", ")", ",", "(", "n", "+", "npr", ".", "rand", "(", ")", ")", "*", "np", ".", "eye", "(", "n", ")", ",", "npr", ".", "randn", "(", "n", ")", ",", "npr", ".", "rand", "(", ")", "\n", "", "return", "niw", ".", "standard_to_natural", "(", "nu", ",", "S", ",", "mu", ",", "kappa", ")", "\n", "\n", "", "def", "make_mniw_natparam", "(", "n", ")", ":", "\n", "        ", "if", "not", "random", ":", "\n", "            ", "nu", ",", "S", ",", "M", ",", "K", "=", "n", "+", "10.", ",", "(", "n", "+", "10.", ")", "*", "np", ".", "eye", "(", "n", ")", ",", "np", ".", "zeros", "(", "(", "n", ",", "n", ")", ")", ",", "10.", "*", "np", ".", "eye", "(", "n", ")", "\n", "", "else", ":", "\n", "            ", "nu", ",", "S", ",", "M", ",", "K", "=", "n", "+", "4.", "+", "npr", ".", "rand", "(", ")", ",", "(", "n", "+", "npr", ".", "rand", "(", ")", ")", "*", "np", ".", "eye", "(", "n", ")", ",", "1e-2", "*", "npr", ".", "randn", "(", "n", ",", "n", ")", ",", "(", "n", "+", "npr", ".", "rand", "(", ")", ")", "*", "np", ".", "eye", "(", "n", ")", "\n", "", "return", "mniw", ".", "standard_to_natural", "(", "nu", ",", "S", ",", "M", ",", "K", ")", "\n", "\n", "", "niw_natparams", "=", "[", "make_niw_natparam", "(", "state_dim", ")", "for", "_", "in", "range", "(", "num_states", ")", "]", "\n", "mniw_natparams", "=", "[", "make_mniw_natparam", "(", "state_dim", ")", "for", "_", "in", "range", "(", "num_states", ")", "]", "\n", "\n", "return", "zip", "(", "niw_natparams", ",", "mniw_natparams", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.lds_meanfield": [[80, 84], ["slds_svae.get_var_lds_local_natparam", "svae.lds.lds_inference.cython_natural_lds_estep_general"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_var_lds_local_natparam"], ["", "def", "lds_meanfield", "(", "lds_global_natparams", ",", "node_potentials", ",", "hmm_expected_stats", ")", ":", "\n", "    ", "local_natparam", "=", "get_var_lds_local_natparam", "(", "lds_global_natparams", ",", "hmm_expected_stats", ")", "\n", "vlb", ",", "expected_stats", "=", "natural_lds_estep_general", "(", "local_natparam", ",", "node_potentials", ")", "\n", "return", "local_natparam", ",", "expected_stats", ",", "vlb", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_all_lds_local_natparams": [[86, 90], ["map", "zip"], "function", ["None"], ["", "def", "get_all_lds_local_natparams", "(", "lds_global_natparams", ")", ":", "\n", "    ", "lds_params", "=", "map", "(", "lds_prior_expectedstats", ",", "lds_global_natparams", ")", "\n", "init_params", ",", "pair_params", "=", "zip", "(", "*", "lds_params", ")", "\n", "return", "init_params", ",", "pair_params", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_var_lds_local_natparam": [[92, 104], ["slds_svae.get_all_lds_local_natparams", "map", "map", "map", "map", "zip", "zip", "svae.util.contract", "svae.util.contract", "autograd.tensordot"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_all_lds_local_natparams"], ["", "def", "get_var_lds_local_natparam", "(", "lds_global_natparams", ",", "hmm_expected_stats", ")", ":", "\n", "    ", "_", ",", "_", ",", "expected_states", "=", "hmm_expected_stats", "\n", "all_init_params", ",", "all_pair_params", "=", "get_all_lds_local_natparams", "(", "lds_global_natparams", ")", "\n", "\n", "dense_init_params", "=", "map", "(", "np", ".", "stack", ",", "zip", "(", "*", "all_init_params", ")", ")", "\n", "dense_pair_params", "=", "map", "(", "np", ".", "stack", ",", "zip", "(", "*", "all_pair_params", ")", ")", "\n", "\n", "contract", "=", "lambda", "a", ":", "lambda", "b", ":", "np", ".", "tensordot", "(", "a", ",", "b", ",", "axes", "=", "1", ")", "\n", "init_param", "=", "map", "(", "contract", "(", "expected_states", "[", "0", "]", ")", ",", "dense_init_params", ")", "\n", "pair_params", "=", "map", "(", "contract", "(", "expected_states", "[", "1", ":", "]", ")", ",", "dense_pair_params", ")", "\n", "\n", "return", "init_param", ",", "pair_params", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.hmm_meanfield": [[108, 116], ["slds_svae.get_hmm_local_natparam", "slds_svae.get_arhmm_local_nodeparams", "svae.hmm.hmm_inference.hmm_estep"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_hmm_local_natparam", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_arhmm_local_nodeparams", "home.repos.pwc.inspect_result.mattjj_svae.hmm.hmm_inference.hmm_estep"], ["", "def", "hmm_meanfield", "(", "hmm_global_natparam", ",", "lds_global_natparam", ",", "lds_expected_stats", ")", ":", "\n", "    ", "init_params", ",", "pair_params", "=", "get_hmm_local_natparam", "(", "hmm_global_natparam", ")", "\n", "node_params", "=", "get_arhmm_local_nodeparams", "(", "lds_global_natparam", ",", "lds_expected_stats", ")", "\n", "\n", "local_natparam", "=", "init_params", ",", "pair_params", ",", "node_params", "\n", "vlb", ",", "stats", "=", "hmm_estep", "(", "local_natparam", ")", "\n", "\n", "return", "local_natparam", ",", "stats", ",", "vlb", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_hmm_local_natparam": [[118, 120], ["slds_svae.hmm_prior_expectedstats"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.hmm_prior_expectedstats"], ["", "def", "get_hmm_local_natparam", "(", "hmm_global_natparam", ")", ":", "\n", "    ", "return", "hmm_prior_expectedstats", "(", "hmm_global_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.hmm_prior_expectedstats": [[122, 129], ["svae.hmm.dirichlet.expectedstats", "autograd.array", "map"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats"], ["", "def", "hmm_prior_expectedstats", "(", "natparam", ")", ":", "\n", "    ", "dir_natparam", ",", "mdir_natparam", "=", "natparam", "\n", "\n", "init_params", "=", "dirichlet", ".", "expectedstats", "(", "dir_natparam", ")", "\n", "pair_params", "=", "np", ".", "array", "(", "map", "(", "dirichlet", ".", "expectedstats", ",", "mdir_natparam", ")", ")", "\n", "\n", "return", "init_params", ",", "pair_params", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_arhmm_local_nodeparams": [[131, 148], ["slds_svae.get_all_lds_local_natparams", "map", "map", "autograd.array", "autograd.vstack", "zip", "zip", "map", "autograd.vstack", "svae.util.contract", "partial_contract", "sum", "map", "partial_contract", "autograd.tensordot", "zip", "autograd.ndim"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_all_lds_local_natparams"], ["", "def", "get_arhmm_local_nodeparams", "(", "lds_global_natparam", ",", "lds_expected_stats", ")", ":", "\n", "    ", "init_stats", ",", "pair_stats", "=", "lds_expected_stats", "[", ":", "2", "]", "\n", "all_init_params", ",", "all_pair_params", "=", "get_all_lds_local_natparams", "(", "lds_global_natparam", ")", "\n", "\n", "dense_init_params", "=", "map", "(", "np", ".", "stack", ",", "zip", "(", "*", "all_init_params", ")", ")", "\n", "dense_pair_params", "=", "map", "(", "np", ".", "stack", ",", "zip", "(", "*", "all_pair_params", ")", ")", "\n", "\n", "partial_contract", "=", "lambda", "a", ":", "lambda", "b", ":", "contract", "(", "a", ",", "b", ")", "\n", "init_node_potential", "=", "np", ".", "array", "(", "map", "(", "partial_contract", "(", "init_stats", ")", ",", "all_init_params", ")", ")", "\n", "\n", "partial_contract", "=", "lambda", "a", ":", "lambda", "b", ":", "sum", "(", "np", ".", "tensordot", "(", "x", ",", "y", ",", "axes", "=", "np", ".", "ndim", "(", "y", ")", ")", "for", "x", ",", "y", "in", "zip", "(", "a", ",", "b", ")", ")", "\n", "remaining_node_potentials", "=", "np", ".", "vstack", "(", "map", "(", "partial_contract", "(", "pair_stats", ")", ",", "all_pair_params", ")", ")", ".", "T", "\n", "\n", "node_potentials", "=", "np", ".", "vstack", "(", "(", "init_node_potential", ",", "remaining_node_potentials", ")", ")", "\n", "\n", "return", "node_potentials", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_hmm_vlb": [[150, 155], ["slds_svae.get_arhmm_local_nodeparams", "autograd.util.make_tuple", "svae.hmm.hmm_inference.hmm_logZ"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_arhmm_local_nodeparams"], ["", "def", "get_hmm_vlb", "(", "lds_global_natparam", ",", "hmm_local_natparam", ",", "lds_expected_stats", ")", ":", "\n", "    ", "init_params", ",", "pair_params", ",", "_", "=", "hmm_local_natparam", "\n", "node_params", "=", "get_arhmm_local_nodeparams", "(", "lds_global_natparam", ",", "lds_expected_stats", ")", "\n", "local_natparam", "=", "make_tuple", "(", "init_params", ",", "pair_params", ",", "node_params", ")", "\n", "return", "hmm_logZ", "(", "local_natparam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.optimize_local_meanfield": [[159, 176], ["slds_svae.initialize_local_meanfield", "xrange", "slds_svae.hmm_meanfield", "slds_svae.lds_meanfield", "print", "abs"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.initialize_local_meanfield", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.hmm_meanfield", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.lds_meanfield"], ["", "def", "optimize_local_meanfield", "(", "global_natparam", ",", "node_potentials", ",", "tol", "=", "1e-2", ")", ":", "\n", "    ", "hmm_global", ",", "lds_global", "=", "global_natparam", "\n", "\n", "lds_stats", "=", "initialize_local_meanfield", "(", "node_potentials", ")", "\n", "local_vlb", "=", "-", "np", ".", "inf", "\n", "\n", "for", "_", "in", "xrange", "(", "100", ")", ":", "\n", "        ", "hmm_natparam", ",", "hmm_stats", ",", "hmm_vlb", "=", "hmm_meanfield", "(", "hmm_global", ",", "lds_global", ",", "lds_stats", ")", "\n", "lds_natparam", ",", "lds_stats", ",", "lds_vlb", "=", "lds_meanfield", "(", "lds_global", ",", "node_potentials", ",", "hmm_stats", ")", "\n", "\n", "local_vlb", ",", "prev_local_vlb", "=", "hmm_vlb", "+", "lds_vlb", ",", "local_vlb", "\n", "if", "abs", "(", "local_vlb", "-", "prev_local_vlb", ")", "<", "tol", ":", "\n", "            ", "break", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "'iteration limit reached'", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "\n", "", "return", "(", "hmm_stats", ",", "lds_stats", ")", ",", "(", "hmm_natparam", ",", "lds_natparam", ")", ",", "(", "hmm_vlb", ",", "lds_vlb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.optimize_local_meanfield_withlabels": [[178, 201], ["slds_svae.optimize_local_meanfield_withlabels.get_hmm_stats"], "function", ["None"], ["", "def", "optimize_local_meanfield_withlabels", "(", "global_natparam", ",", "node_potentials", ",", "labels", ",", "tol", "=", "1e-2", ")", ":", "\n", "    ", "hmm_global", ",", "lds_global", "=", "global_natparam", "\n", "N", "=", "hmm_global", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n", "def", "count_transitions", "(", "labels", ")", ":", "\n", "        ", "return", "np", ".", "vstack", "(", "\n", "[", "np", ".", "bincount", "(", "labels", "[", "1", ":", "]", "[", "labels", "[", ":", "-", "1", "]", "==", "i", "]", ",", "minlength", "=", "N", ")", "for", "i", "in", "xrange", "(", "N", ")", "]", ")", "\n", "\n", "", "def", "indicators", "(", "labels", ")", ":", "\n", "        ", "return", "np", ".", "eye", "(", "N", ")", "[", "labels", "]", "\n", "\n", "", "normalize", "=", "lambda", "a", ":", "a", "/", "a", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "def", "get_hmm_stats", "(", "labels", ")", ":", "\n", "        ", "init_stats", "=", "indicators", "(", "labels", "[", "0", "]", ")", "\n", "pair_stats", "=", "count_transitions", "(", "labels", ")", "\n", "node_stats", "=", "normalize", "(", "indicators", "(", "labels", ")", "+", "1e-2", ")", "\n", "return", "init_stats", ",", "pair_stats", ",", "node_stats", "\n", "\n", "", "hmm_stats", "=", "get_hmm_stats", "(", "labels", ")", "\n", "lds_natparam", ",", "lds_stats", ",", "lds_vlb", "=", "lds_meanfield", "(", "lds_global", ",", "node_potentials", ",", "hmm_stats", ")", "\n", "\n", "return", "(", "hmm_stats", ",", "lds_stats", ")", ",", "(", "None", ",", "lds_natparam", ")", ",", "(", "0.", ",", "lds_vlb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.initialize_local_meanfield": [[203, 227], ["autograd.squeeze", "slds_svae.initialize_local_meanfield.compute_stats"], "function", ["None"], ["", "def", "initialize_local_meanfield", "(", "node_potentials", ")", ":", "\n", "# TODO maybe i should initialize the hmm states instead of the lds states...", "\n", "\n", "    ", "def", "compute_stats", "(", "sampled_states", ")", ":", "\n", "        ", "out", "=", "np", ".", "outer", "\n", "get_init_stats", "=", "lambda", "x0", ":", "(", "out", "(", "x0", ",", "x0", ")", ",", "x0", ",", "1.", ",", "1.", ")", "\n", "get_pair_stats", "=", "lambda", "x1", ",", "x2", ":", "(", "out", "(", "x1", ",", "x1", ")", ",", "out", "(", "x1", ",", "x2", ")", ",", "out", "(", "x2", ",", "x2", ")", ",", "1.", ")", "\n", "\n", "init_stats", "=", "get_init_stats", "(", "sampled_states", "[", "0", "]", ")", "\n", "pair_stats", "=", "map", "(", "get_pair_stats", ",", "sampled_states", "[", ":", "-", "1", "]", ",", "sampled_states", "[", "1", ":", "]", ")", "\n", "\n", "return", "init_stats", ",", "map", "(", "np", ".", "array", ",", "zip", "(", "*", "pair_stats", ")", ")", "\n", "\n", "# construct random walk natparam", "\n", "", "N", "=", "node_potentials", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "A", "=", "0.9", "*", "np", ".", "eye", "(", "N", ")", "\n", "init_params", "=", "-", "1.", "/", "2", "*", "np", ".", "eye", "(", "N", ")", ",", "np", ".", "zeros", "(", "N", ")", ",", "0.", "\n", "pair_params", "=", "-", "1.", "/", "2", "*", "np", ".", "dot", "(", "A", ".", "T", ",", "A", ")", ",", "A", ".", "T", ",", "-", "1.", "/", "2", "*", "np", ".", "eye", "(", "N", ")", ",", "0.", "\n", "natparam", "=", "init_params", ",", "pair_params", "\n", "\n", "sampled_states", "=", "np", ".", "squeeze", "(", "natural_lds_sample", "(", "natparam", ",", "node_potentials", ",", "num_samples", "=", "1", ")", ")", "\n", "init_stats", ",", "pair_stats", "=", "compute_stats", "(", "sampled_states", ")", "\n", "\n", "return", "init_stats", ",", "pair_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_global_stats": [[229, 244], ["tuple", "tuple", "zip", "slds_svae.get_global_stats.get_hmm_global_stats"], "function", ["None"], ["", "def", "get_global_stats", "(", "hmm_stats", ",", "lds_stats", ")", ":", "\n", "    ", "def", "get_hmm_global_stats", "(", "hmm_stats", ")", ":", "\n", "        ", "return", "hmm_stats", "[", ":", "-", "1", "]", "\n", "\n", "", "def", "get_lds_global_stats", "(", "hmm_stats", ",", "lds_stats", ")", ":", "\n", "        ", "_", ",", "_", ",", "expected_states", "=", "hmm_stats", "\n", "init_stats", ",", "pair_stats", "=", "lds_stats", "\n", "\n", "contract", "=", "lambda", "w", ":", "lambda", "p", ":", "np", ".", "tensordot", "(", "w", ",", "p", ",", "axes", "=", "1", ")", "\n", "global_init_stats", "=", "tuple", "(", "scale", "(", "w", ",", "init_stats", ")", "for", "w", "in", "expected_states", "[", "0", "]", ")", "\n", "global_pair_stats", "=", "tuple", "(", "map", "(", "contract", "(", "w", ")", ",", "pair_stats", ")", "for", "w", "in", "expected_states", "[", "1", ":", "]", ".", "T", ")", "\n", "\n", "return", "zip", "(", "global_init_stats", ",", "global_pair_stats", ")", "\n", "\n", "", "return", "get_hmm_global_stats", "(", "hmm_stats", ")", ",", "get_lds_global_stats", "(", "hmm_stats", ",", "lds_stats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_vlb": [[248, 252], ["slds_svae.slds_prior_expectedstats", "svae.util.contract", "svae.util.sub", "slds_svae.slds_prior_logZ", "slds_svae.slds_prior_logZ"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_logZ", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_logZ"], ["", "def", "slds_prior_vlb", "(", "global_natparam", ",", "prior_natparam", ")", ":", "\n", "    ", "expected_stats", "=", "slds_prior_expectedstats", "(", "global_natparam", ")", "\n", "return", "contract", "(", "sub", "(", "prior_natparam", ",", "global_natparam", ")", ",", "expected_stats", ")", "-", "(", "slds_prior_logZ", "(", "prior_natparam", ")", "-", "slds_prior_logZ", "(", "global_natparam", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_logZ": [[254, 270], ["slds_svae.slds_prior_logZ.hmm_prior_logZ"], "function", ["None"], ["", "def", "slds_prior_logZ", "(", "natparam", ")", ":", "\n", "    ", "hmm_prior_natparam", ",", "lds_prior_natparams", "=", "natparam", "\n", "\n", "def", "lds_prior_logZ", "(", "natparam", ")", ":", "\n", "        ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "logZ", "(", "niw_natparam", ")", "+", "mniw", ".", "logZ", "(", "mniw_natparam", ")", "\n", "\n", "", "def", "hmm_prior_logZ", "(", "natparam", ")", ":", "\n", "        ", "dirichlet_natparams", ",", "mdirichlet_natparams", "=", "natparam", "\n", "return", "dirichlet", ".", "logZ", "(", "dirichlet_natparams", ")", "+", "sum", "(", "map", "(", "dirichlet", ".", "logZ", ",", "mdirichlet_natparams", ")", ")", "\n", "\n", "", "hmm_prior_term", "=", "hmm_prior_logZ", "(", "hmm_prior_natparam", ")", "\n", "lds_prior_term", "=", "sum", "(", "map", "(", "lds_prior_logZ", ",", "lds_prior_natparams", ")", ")", "\n", "\n", "return", "hmm_prior_term", "+", "lds_prior_term", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_expectedstats": [[272, 285], ["slds_svae.hmm_prior_expectedstats"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.hmm_prior_expectedstats"], ["", "def", "slds_prior_expectedstats", "(", "global_natparam", ")", ":", "\n", "    ", "hmm_natparam", ",", "lds_natparams", "=", "global_natparam", "\n", "\n", "def", "lds_prior_expectedstats", "(", "natparam", ")", ":", "\n", "        ", "niw_natparam", ",", "mniw_natparam", "=", "natparam", "\n", "return", "niw", ".", "expectedstats", "(", "niw_natparam", ")", ",", "mniw", ".", "expectedstats", "(", "mniw_natparam", ")", "\n", "\n", "", "def", "hmm_prior_expectedstats", "(", "natparam", ")", ":", "\n", "        ", "dirichlet_natparams", ",", "mdirichlet_natparams", "=", "natparam", "\n", "return", "dirichlet", ".", "expectedstats", "(", "dirichlet_natparams", ")", ",", "dirichlet", ".", "expectedstats", "(", "mdirichlet_natparams", ")", "# broadcasts on rows", "\n", "\n", "", "return", "hmm_prior_expectedstats", "(", "hmm_natparam", ")", ",", "map", "(", "lds_prior_expectedstats", ",", "lds_natparams", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.run_inference": [[289, 311], ["slds_svae.optimize_local_meanfield", "svae.lds.lds_inference.cython_natural_lds_inference_general", "slds_svae.get_hmm_vlb", "slds_svae.get_global_stats", "slds_svae.slds_prior_vlb", "svae.util.unbox", "svae.util.contract"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.optimize_local_meanfield", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_hmm_vlb", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_global_stats", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_vlb"], ["", "def", "run_inference", "(", "prior_natparam", ",", "global_natparam", ",", "nn_potentials", ",", "num_samples", ")", ":", "\n", "    ", "hmm_global_natparam", ",", "lds_global_natparam", "=", "global_natparam", "\n", "\n", "# optimize local mean field (can use unboxed val for low-level code)", "\n", "(", "hmm_stats", ",", "_", ")", ",", "(", "hmm_local_natparam", ",", "lds_local_natparam", ")", ",", "_", "=", "optimize_local_meanfield", "(", "global_natparam", ",", "unbox", "(", "nn_potentials", ")", ")", "\n", "\n", "# recompute terms that depend on nn_potentials at optimum (using boxed val)", "\n", "samples", ",", "lds_stats", ",", "lds_normalizer", "=", "natural_lds_inference_general", "(", "\n", "lds_local_natparam", ",", "nn_potentials", ",", "num_samples", ")", "\n", "hmm_vlb", "=", "get_hmm_vlb", "(", "lds_global_natparam", ",", "hmm_local_natparam", ",", "lds_stats", ")", "\n", "\n", "# get global statistics from the local expected stats", "\n", "global_lds_stats", ",", "local_lds_stats", "=", "lds_stats", "[", ":", "-", "1", "]", ",", "lds_stats", "[", "-", "1", "]", "\n", "expected_stats", "=", "get_global_stats", "(", "hmm_stats", ",", "global_lds_stats", ")", "\n", "\n", "# compute global and local vlb terms", "\n", "global_vlb", "=", "slds_prior_vlb", "(", "global_natparam", ",", "prior_natparam", ")", "\n", "lds_vlb", "=", "lds_normalizer", "-", "contract", "(", "nn_potentials", ",", "local_lds_stats", ")", "\n", "local_vlb", "=", "hmm_vlb", "+", "lds_vlb", "\n", "\n", "return", "samples", ",", "expected_stats", ",", "global_vlb", ",", "local_vlb", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.run_inference_withlabels": [[313, 335], ["slds_svae.optimize_local_meanfield_withlabels", "svae.lds.lds_inference.cython_natural_lds_inference_general", "slds_svae.get_global_stats", "slds_svae.slds_prior_vlb", "svae.util.unbox", "svae.util.contract"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.optimize_local_meanfield_withlabels", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.get_global_stats", "home.repos.pwc.inspect_result.mattjj_svae.models.slds_svae.slds_prior_vlb"], ["", "def", "run_inference_withlabels", "(", "prior_natparam", ",", "global_natparam", ",", "potentials_and_labels", ",", "num_samples", ")", ":", "\n", "    ", "nn_potentials", ",", "labels", "=", "potentials_and_labels", "\n", "hmm_global_natparam", ",", "lds_global_natparam", "=", "global_natparam", "\n", "\n", "# optimize local mean field (can use unboxed val for low-level code)", "\n", "(", "hmm_stats", ",", "_", ")", ",", "(", "hmm_local_natparam", ",", "lds_local_natparam", ")", ",", "_", "=", "optimize_local_meanfield_withlabels", "(", "global_natparam", ",", "unbox", "(", "nn_potentials", ")", ",", "labels", ")", "\n", "\n", "# recompute terms that depend on nn_potentials at optimum (using boxed val)", "\n", "samples", ",", "lds_stats", ",", "lds_normalizer", "=", "natural_lds_inference_general", "(", "\n", "lds_local_natparam", ",", "nn_potentials", ",", "num_samples", ")", "\n", "\n", "# get global statistics from the local expected stats", "\n", "global_lds_stats", ",", "local_lds_stats", "=", "lds_stats", "[", ":", "-", "1", "]", ",", "lds_stats", "[", "-", "1", "]", "\n", "expected_stats", "=", "get_global_stats", "(", "hmm_stats", ",", "global_lds_stats", ")", "\n", "\n", "# compute global and local vlb terms", "\n", "global_vlb", "=", "slds_prior_vlb", "(", "global_natparam", ",", "prior_natparam", ")", "\n", "lds_vlb", "=", "lds_normalizer", "-", "contract", "(", "nn_potentials", ",", "local_lds_stats", ")", "\n", "local_vlb", "=", "lds_vlb", "\n", "\n", "return", "samples", ",", "expected_stats", ",", "global_vlb", ",", "local_vlb", "\n", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.hmm.hmm_inference.make_grad_hmm_logZ": [[15, 18], ["autograd.core.primitive", "cython_hmm_inference.hmm_logZ_grad"], "function", ["None"], ["def", "make_grad_hmm_logZ", "(", "intermediates", ",", "ans", ",", "hmm", ")", ":", "\n", "    ", "_", ",", "pair_params", ",", "_", "=", "hmm", "\n", "return", "primitive", "(", "lambda", "g", ":", "hmm_logZ_grad", "(", "g", ",", "intermediates", ")", ")", "\n", "", "hmm_logZ", ".", "defgrad", "(", "make_grad_hmm_logZ", ")", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.hmm.hmm_inference.hmm_estep": [[21, 42], ["map", "pyhsmm.internals.hmm_messages_interface.messages_forwards_log", "pyhsmm.internals.hmm_messages_interface.messages_backwards_log", "pyhsmm.internals.hmm_messages_interface.expected_statistics_log", "autograd.require", "autograd.exp", "autograd.exp", "autograd.zeros_like", "autograd.exp", "autograd.zeros_like", "autograd.zeros_like", "autograd.zeros_like"], "function", ["None"], ["def", "hmm_estep", "(", "natparam", ")", ":", "\n", "    ", "C", "=", "lambda", "x", ":", "np", ".", "require", "(", "x", ",", "np", ".", "double", ",", "'C'", ")", "\n", "init_params", ",", "pair_params", ",", "node_params", "=", "map", "(", "C", ",", "natparam", ")", "\n", "\n", "# compute messages", "\n", "alphal", "=", "messages_forwards_log", "(", "\n", "np", ".", "exp", "(", "pair_params", ")", ",", "node_params", ",", "np", ".", "exp", "(", "init_params", ")", ",", "\n", "np", ".", "zeros_like", "(", "node_params", ")", ")", "\n", "betal", "=", "messages_backwards_log", "(", "\n", "np", ".", "exp", "(", "pair_params", ")", ",", "node_params", ",", "\n", "np", ".", "zeros_like", "(", "node_params", ")", ")", "\n", "\n", "# compute expected statistics from messages", "\n", "expected_states", ",", "expected_transcounts", ",", "log_normalizer", "=", "expected_statistics_log", "(", "\n", "pair_params", ",", "node_params", ",", "alphal", ",", "betal", ",", "\n", "np", ".", "zeros_like", "(", "node_params", ")", ",", "np", ".", "zeros_like", "(", "pair_params", ")", ")", "\n", "\n", "expected_stats", "=", "expected_states", "[", "0", "]", ",", "expected_transcounts", ",", "expected_states", "\n", "\n", "return", "log_normalizer", ",", "expected_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.hmm.hmm_inference.hmm_logZ_python": [[44, 52], ["autograd.scipy.misc.logsumexp", "autograd.scipy.misc.logsumexp"], "function", ["None"], ["", "def", "hmm_logZ_python", "(", "natparam", ")", ":", "\n", "    ", "init_params", ",", "pair_params", ",", "node_params", "=", "natparam", "\n", "\n", "log_alpha", "=", "init_params", "+", "node_params", "[", "0", "]", "\n", "for", "node_param", "in", "node_params", "[", "1", ":", "]", ":", "\n", "        ", "log_alpha", "=", "logsumexp", "(", "log_alpha", "[", ":", ",", "None", "]", "+", "pair_params", ",", "axis", "=", "0", ")", "+", "node_param", "\n", "\n", "", "return", "logsumexp", "(", "log_alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.hmm.hmm_inference.hmm_viterbi": [[54, 64], ["pyhsmm.internals.hmm_messages_interface.viterbi", "autograd.require", "C", "C", "C", "autograd.zeros", "autograd.exp", "autograd.exp"], "function", ["None"], ["", "def", "hmm_viterbi", "(", "natparam", ")", ":", "\n", "    ", "init_params", ",", "pair_params", ",", "node_params", "=", "natparam", "\n", "T", "=", "node_params", ".", "shape", "[", "0", "]", "\n", "\n", "C", "=", "lambda", "x", ":", "np", ".", "require", "(", "x", ",", "requirements", "=", "'C'", ")", "\n", "pair_params", ",", "node_params", ",", "init_params", "=", "C", "(", "np", ".", "exp", "(", "pair_params", ")", ")", ",", "C", "(", "node_params", ")", ",", "C", "(", "np", ".", "exp", "(", "init_params", ")", ")", "\n", "\n", "return", "_viterbi", "(", "pair_params", ",", "node_params", ",", "init_params", ",", "\n", "np", ".", "zeros", "(", "T", ",", "dtype", "=", "np", ".", "int32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_gaussian.rand_gaussian": [[11, 15], ["autograd.randn", "svae.distributions.gaussian.pack_dense", "test_util.rand_psd", "autograd.eye"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.rand_psd"], ["def", "rand_gaussian", "(", "n", ")", ":", "\n", "    ", "J", "=", "rand_psd", "(", "n", ")", "+", "n", "*", "np", ".", "eye", "(", "n", ")", "\n", "h", "=", "npr", ".", "randn", "(", "n", ")", "\n", "return", "pack_dense", "(", "-", "1.", "/", "2", "*", "J", ",", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_gaussian.rand_natparam": [[16, 18], ["autograd.squeeze", "autograd.stack", "test_gaussian.rand_gaussian", "range"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.tests.test_gaussian.rand_gaussian"], ["", "def", "rand_natparam", "(", "n", ",", "k", ")", ":", "\n", "    ", "return", "np", ".", "squeeze", "(", "np", ".", "stack", "(", "[", "rand_gaussian", "(", "n", ")", "for", "_", "in", "range", "(", "k", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_gaussian.test_pack_dense": [[19, 29], ["autograd.seed", "xrange", "svae.distributions.gaussian.pack_dense", "autograd.allclose", "autograd.randint", "autograd.randint", "svae.distributions.gaussian.unpack_dense", "test_gaussian.rand_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.pack_dense", "home.repos.pwc.inspect_result.mattjj_svae.distributions.gaussian.unpack_dense", "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam"], ["", "def", "test_pack_dense", "(", ")", ":", "\n", "    ", "npr", ".", "seed", "(", "0", ")", "\n", "\n", "def", "check_params", "(", "natparam", ")", ":", "\n", "        ", "natparam2", "=", "pack_dense", "(", "*", "unpack_dense", "(", "natparam", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "natparam", ",", "natparam2", ")", "\n", "\n", "", "for", "_", "in", "xrange", "(", "5", ")", ":", "\n", "        ", "n", ",", "k", "=", "npr", ".", "randint", "(", "1", ",", "5", ")", ",", "npr", ".", "randint", "(", "1", ",", "3", ")", "\n", "yield", "check_params", ",", "rand_natparam", "(", "n", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_gaussian.test_expectedstats_autograd": [[30, 41], ["autograd.seed", "xrange", "svae.distributions.gaussian.expectedstats", "autograd.allclose", "autograd.grad", "autograd.randint", "autograd.randint", "test_gaussian.rand_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam"], ["", "", "def", "test_expectedstats_autograd", "(", ")", ":", "\n", "    ", "npr", ".", "seed", "(", "0", ")", "\n", "\n", "def", "check_expectedstats", "(", "natparam", ")", ":", "\n", "        ", "E_stats1", "=", "expectedstats", "(", "natparam", ")", "\n", "E_stats2", "=", "grad", "(", "logZ", ")", "(", "natparam", ")", "\n", "assert", "np", ".", "allclose", "(", "E_stats1", ",", "E_stats2", ")", "\n", "\n", "", "for", "_", "in", "xrange", "(", "20", ")", ":", "\n", "        ", "n", ",", "k", "=", "npr", ".", "randint", "(", "1", ",", "5", ")", ",", "npr", ".", "randint", "(", "1", ",", "3", ")", "\n", "yield", "check_expectedstats", ",", "rand_natparam", "(", "n", ",", "k", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_niw.rand_niw": [[11, 17], ["autograd.randn", "svae.distributions.niw.standard_to_natural", "test_util.rand_psd", "autograd.uniform", "autograd.uniform", "autograd.eye"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural", "home.repos.pwc.inspect_result.mattjj_svae.svae.util.rand_psd"], ["def", "rand_niw", "(", "n", ")", ":", "\n", "    ", "S", "=", "rand_psd", "(", "n", ")", "+", "n", "*", "np", ".", "eye", "(", "n", ")", "\n", "m", "=", "npr", ".", "randn", "(", "n", ")", "\n", "kappa", "=", "n", "+", "npr", ".", "uniform", "(", "1", ",", "3", ")", "\n", "nu", "=", "n", "+", "npr", ".", "uniform", "(", "1", ",", "3", ")", "\n", "return", "standard_to_natural", "(", "S", ",", "m", ",", "kappa", ",", "nu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_niw.rand_natparam": [[18, 20], ["autograd.squeeze", "autograd.stack", "test_niw.rand_niw", "range"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.tests.test_niw.rand_niw"], ["", "def", "rand_natparam", "(", "n", ",", "k", ")", ":", "\n", "    ", "return", "np", ".", "squeeze", "(", "np", ".", "stack", "(", "[", "rand_niw", "(", "n", ")", "for", "_", "in", "range", "(", "k", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_niw.test_param_conversion": [[21, 31], ["autograd.seed", "xrange", "svae.distributions.niw.standard_to_natural", "autograd.allclose", "autograd.randint", "autograd.randint", "svae.distributions.niw.natural_to_standard", "test_niw.rand_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.standard_to_natural", "home.repos.pwc.inspect_result.mattjj_svae.distributions.niw.natural_to_standard", "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam"], ["", "def", "test_param_conversion", "(", ")", ":", "\n", "    ", "npr", ".", "seed", "(", "0", ")", "\n", "\n", "def", "check_params", "(", "natparam", ")", ":", "\n", "        ", "natparam2", "=", "standard_to_natural", "(", "*", "natural_to_standard", "(", "natparam", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "natparam", ",", "natparam2", ")", "\n", "\n", "", "for", "_", "in", "xrange", "(", "5", ")", ":", "\n", "        ", "n", ",", "k", "=", "npr", ".", "randint", "(", "1", ",", "5", ")", ",", "npr", ".", "randint", "(", "1", ",", "3", ")", "\n", "yield", "check_params", ",", "rand_natparam", "(", "n", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_niw.test_expectedstats_autograd": [[32, 43], ["autograd.seed", "xrange", "svae.distributions.niw.expectedstats", "autograd.allclose", "autograd.grad", "autograd.randint", "autograd.randint", "test_niw.rand_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam"], ["", "", "def", "test_expectedstats_autograd", "(", ")", ":", "\n", "    ", "npr", ".", "seed", "(", "0", ")", "\n", "\n", "def", "check_expectedstats", "(", "natparam", ")", ":", "\n", "        ", "E_stats1", "=", "expectedstats", "(", "natparam", ")", "\n", "E_stats2", "=", "grad", "(", "logZ", ")", "(", "natparam", ")", "\n", "assert", "np", ".", "allclose", "(", "E_stats1", ",", "E_stats2", ")", "\n", "\n", "", "for", "_", "in", "xrange", "(", "20", ")", ":", "\n", "        ", "n", ",", "k", "=", "npr", ".", "randint", "(", "1", ",", "5", ")", ",", "npr", ".", "randint", "(", "1", ",", "3", ")", "\n", "yield", "check_expectedstats", ",", "rand_natparam", "(", "n", ",", "k", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_dirichlet": [[9, 11], ["autograd.rand"], "function", ["None"], ["def", "rand_dirichlet", "(", "n", ")", ":", "\n", "    ", "return", "10.", "*", "npr", ".", "rand", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam": [[12, 14], ["autograd.squeeze", "autograd.stack", "test_dirichlet.rand_dirichlet", "range"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_dirichlet"], ["", "def", "rand_natparam", "(", "n", ",", "k", ")", ":", "\n", "    ", "return", "np", ".", "squeeze", "(", "np", ".", "stack", "(", "[", "rand_dirichlet", "(", "n", ")", "for", "_", "in", "range", "(", "k", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.test_expectedstats_autograd": [[15, 26], ["autograd.seed", "xrange", "svae.distributions.dirichlet.expectedstats", "autograd.allclose", "autograd.grad", "autograd.randint", "autograd.randint", "test_dirichlet.rand_natparam"], "function", ["home.repos.pwc.inspect_result.mattjj_svae.distributions.dirichlet.expectedstats", "home.repos.pwc.inspect_result.mattjj_svae.tests.test_dirichlet.rand_natparam"], ["", "def", "test_expectedstats_autograd", "(", ")", ":", "\n", "    ", "npr", ".", "seed", "(", "0", ")", "\n", "\n", "def", "check_expectedstats", "(", "natparam", ")", ":", "\n", "        ", "E_stats1", "=", "expectedstats", "(", "natparam", ")", "\n", "E_stats2", "=", "grad", "(", "logZ", ")", "(", "natparam", ")", "\n", "assert", "np", ".", "allclose", "(", "E_stats1", ",", "E_stats2", ")", "\n", "\n", "", "for", "_", "in", "xrange", "(", "20", ")", ":", "\n", "        ", "n", ",", "k", "=", "npr", ".", "randint", "(", "1", ",", "5", ")", ",", "npr", ".", "randint", "(", "1", ",", "3", ")", "\n", "yield", "check_expectedstats", ",", "rand_natparam", "(", "n", ",", "k", ")", "\n", "", "", ""]]}