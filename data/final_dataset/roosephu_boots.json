{"home.repos.pwc.inspect_result.roosephu_boots.boots.virt_runner.VirtualRunner.__init__": [[9, 16], ["lunzi.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_state", ",", "model", ",", "policy", ",", "horizon", ",", "dtype", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "dtype", "=", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.virt_runner.VirtualRunner.build": [[17, 22], ["tensorflow.placeholder", "virt_runner.VirtualRunner.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "self", ".", "op_init_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "dim_state", "]", ")", "\n", "self", ".", "op_states", ",", "self", ".", "op_actions", ",", "self", ".", "op_next_states", ",", "self", ".", "op_rewards", ",", "self", ".", "op_dones", "=", "self", ".", "forward", "(", "self", ".", "op_init_states", ",", "self", ".", "horizon", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.virt_runner.VirtualRunner.forward": [[23, 40], ["namedtuple", "range", "tensorflow.shape", "virt_runner.VirtualRunner.policy", "isinstance", "virt_runner.VirtualRunner.model", "steps.append", "tensorflow.concat", "actions.sample.sample.sample", "namedtuple.", "zip"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample"], ["", "def", "forward", "(", "self", ",", "init_states", ",", "horizon", ")", ":", "\n", "        ", "from", "collections", "import", "namedtuple", "\n", "Step", "=", "namedtuple", "(", "'Step'", ",", "'state action next_state reward done'", ")", "\n", "steps", "=", "[", "]", "\n", "n_envs", "=", "tf", ".", "shape", "(", "init_states", ")", "[", "0", "]", "\n", "\n", "states", "=", "self", ".", "op_init_states", "\n", "for", "i", "in", "range", "(", "horizon", ")", ":", "\n", "            ", "actions", "=", "self", ".", "policy", "(", "states", ")", "\n", "if", "isinstance", "(", "actions", ",", "tfp", ".", "distributions", ".", "Distribution", ")", ":", "\n", "                ", "actions", "=", "actions", ".", "sample", "(", ")", "\n", "", "next_states", ",", "rewards", ",", "dones", "=", "self", ".", "model", "(", "states", ",", "actions", ")", "\n", "steps", ".", "append", "(", "Step", "(", "states", ",", "actions", ",", "next_states", ",", "rewards", ",", "dones", ")", ")", "\n", "states", "=", "next_states", "\n", "\n", "", "states", ",", "actions", ",", "next_states", ",", "rewards", ",", "dones", "=", "[", "tf", ".", "concat", "(", "x", ",", "axis", "=", "0", ")", "for", "x", "in", "zip", "(", "*", "steps", ")", "]", "\n", "return", "states", ",", "actions", ",", "next_states", ",", "rewards", ",", "dones", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.virt_runner.VirtualRunner.run": [[41, 47], ["virt_runner.VirtualRunner.eval", "numpy.zeros_like", "lunzi.Dataset.fromdict", "lunzi.Dataset.fromdict"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeros_like", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.fromdict", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.fromdict"], ["", "def", "run", "(", "self", ",", "init_states", ")", ":", "\n", "        ", "states", ",", "actions", ",", "next_states", ",", "rewards", ",", "dones", "=", "self", ".", "eval", "(", "'states actions next_states rewards dones'", ",", "init_states", "=", "init_states", ")", "\n", "timeouts", "=", "np", ".", "zeros_like", "(", "dones", ")", "\n", "return", "lz", ".", "Dataset", ".", "fromdict", "(", "state", "=", "states", ",", "action", "=", "actions", ",", "next_state", "=", "next_states", ",", "reward", "=", "rewards", ",", "\n", "done", "=", "dones", ",", "timeout", "=", "timeouts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.RescaleAction.__init__": [[15, 20], ["gym.ActionWrapper.__init__", "gym.spaces.Box", "numpy.full_like", "numpy.full_like"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ":", "gym", ".", "Env", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "lo", "=", "env", ".", "action_space", ".", "low", "\n", "self", ".", "hi", "=", "env", ".", "action_space", ".", "high", "\n", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", "=", "np", ".", "full_like", "(", "self", ".", "lo", ",", "-", "1.", ")", ",", "high", "=", "np", ".", "full_like", "(", "self", ".", "hi", ",", "+", "1.", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.RescaleAction.action": [[21, 23], ["None"], "methods", ["None"], ["", "def", "action", "(", "self", ",", "action", ")", ":", "\n", "        ", "return", "self", ".", "lo", "+", "(", "action", "+", "1.", ")", "*", "0.5", "*", "(", "self", ".", "hi", "-", "self", ".", "lo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.RescaleAction.reverse_action": [[24, 26], ["numpy.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "reverse_action", "(", "self", ",", "action", ")", ":", "\n", "        ", "return", "(", "action", "-", "self", ".", "lo", ")", "/", "np", ".", "maximum", "(", "self", ".", "hi", "-", "self", ".", "lo", ",", "1.e-9", ")", "*", "2.", "-", "1.", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.RescaleAction.mb_step": [[27, 29], ["partial_envs.RescaleAction.env.mb_step", "partial_envs.RescaleAction.action"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.mb_step", "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.RescaleAction.action"], ["", "def", "mb_step", "(", "self", ",", "states", ",", "actions", ",", "next_states", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "mb_step", "(", "states", ",", "self", ".", "action", "(", "actions", ")", ",", "next_states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.make_env": [[31, 37], ["partial_envs.RescaleAction", "RescaleAction.seed", "gym.make", "_rng.randint"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.seed"], ["", "", "@", "FLAGS", ".", "inject", "\n", "def", "make_env", "(", "*", ",", "id", ":", "str", ",", "_rng", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "id", ")", ".", "unwrapped", "\n", "env", "=", "RescaleAction", "(", "env", ")", "\n", "env", ".", "seed", "(", "_rng", ".", "randint", "(", "0", ",", "10", "**", "9", ")", ")", "\n", "return", "env", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.GaussianNormalizer.__init__": [[9, 22], ["lunzi.Module.__init__", "lunzi.Parameter", "lunzi.Parameter", "lunzi.Parameter", "lunzi.Parameter", "lunzi.Parameter", "lunzi.Parameter", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ",", "shape", ":", "List", "[", "int", "]", ",", "eps", "=", "1e-8", ",", "verbose", "=", "False", ",", "decay", "=", "1.", ")", ":", "# batch_size x ...", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "shape", "=", "shape", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "decay", "=", "decay", "\n", "self", ".", "_verbose", "=", "verbose", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_mean", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "name", "=", "'mean'", ",", "trainable", "=", "False", ")", "\n", "self", ".", "op_std", "=", "nn", ".", "Parameter", "(", "tf", ".", "ones", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "name", "=", "'std'", ",", "trainable", "=", "False", ")", "\n", "self", ".", "op_n", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "[", "]", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "name", "=", "'n'", ",", "trainable", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.GaussianNormalizer.extra_repr": [[23, 25], ["None"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'shape={self.shape}'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.GaussianNormalizer.forward": [[26, 30], ["tensorflow.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "forward", "(", "self", ",", "x", ":", "lz", ".", "Tensor", ",", "inverse", "=", "False", ")", ":", "\n", "        ", "if", "inverse", ":", "\n", "            ", "return", "x", "*", "self", ".", "op_std", "+", "self", ".", "op_mean", "\n", "", "return", "(", "x", "-", "self", ".", "op_mean", ")", "/", "tf", ".", "maximum", "(", "self", ".", "op_std", ",", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.GaussianNormalizer.update": [[31, 43], ["samples.mean", "numpy.sqrt", "normalizer.GaussianNormalizer.load_state_dict", "normalizer.GaussianNormalizer.op_mean.numpy", "normalizer.GaussianNormalizer.op_std.numpy", "normalizer.GaussianNormalizer.op_n.numpy", "samples.var"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.load_state_dict", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy"], ["", "def", "update", "(", "self", ",", "samples", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "old_mean", ",", "old_std", ",", "old_n", "=", "self", ".", "op_mean", ".", "numpy", "(", ")", ",", "self", ".", "op_std", ".", "numpy", "(", ")", ",", "self", ".", "op_n", ".", "numpy", "(", ")", "\n", "old_n", "*=", "self", ".", "decay", "\n", "samples", "=", "samples", "-", "old_mean", "\n", "\n", "m", "=", "samples", ".", "shape", "[", "0", "]", "\n", "delta", "=", "samples", ".", "mean", "(", "axis", "=", "0", ")", "\n", "new_n", "=", "old_n", "+", "m", "\n", "new_mean", "=", "old_mean", "+", "delta", "*", "m", "/", "new_n", "\n", "new_std", "=", "np", ".", "sqrt", "(", "(", "old_std", "**", "2", "*", "old_n", "+", "samples", ".", "var", "(", "axis", "=", "0", ")", "*", "m", "+", "delta", "**", "2", "*", "old_n", "*", "m", "/", "new_n", ")", "/", "new_n", ")", "\n", "\n", "self", ".", "load_state_dict", "(", "{", "'op_mean'", ":", "new_mean", ",", "'op_std'", ":", "new_std", ",", "'op_n'", ":", "new_n", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.GaussianNormalizer.fast": [[44, 49], ["normalizer.GaussianNormalizer.op_mean.numpy", "normalizer.GaussianNormalizer.op_std.numpy", "numpy.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "fast", "(", "self", ",", "samples", ":", "np", ".", "ndarray", ",", "inverse", "=", "False", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "mean", ",", "std", "=", "self", ".", "op_mean", ".", "numpy", "(", ")", ",", "self", ".", "op_std", ".", "numpy", "(", ")", "\n", "if", "inverse", ":", "\n", "            ", "return", "samples", "*", "std", "+", "mean", "\n", "", "return", "(", "samples", "-", "mean", ")", "/", "np", ".", "maximum", "(", "std", ",", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.Normalizers.__init__": [[78, 83], ["lunzi.Module.__init__", "normalizer.Normalizer", "normalizer.Normalizer", "normalizer.Normalizer"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["def", "__init__", "(", "self", ",", "dim_action", ":", "int", ",", "dim_state", ":", "int", ",", "decay", "=", "1.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "action", "=", "Normalizer", "(", "'action'", ",", "[", "dim_action", "]", ",", "decay", "=", "decay", ")", "\n", "self", ".", "state", "=", "Normalizer", "(", "'state'", ",", "[", "dim_state", "]", ",", "decay", "=", "decay", ")", "\n", "self", ".", "diff", "=", "Normalizer", "(", "'diff'", ",", "[", "dim_state", "]", ",", "decay", "=", "decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.Normalizers.update": [[84, 88], ["normalizer.Normalizers.state.update", "normalizer.Normalizers.action.update", "normalizer.Normalizers.diff.update"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update"], ["", "def", "update", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "state", ".", "update", "(", "dataset", "[", "'state'", "]", ")", "\n", "self", ".", "action", ".", "update", "(", "dataset", "[", "'action'", "]", ")", "\n", "self", ".", "diff", ".", "update", "(", "dataset", "[", "'next_state'", "]", "-", "dataset", "[", "'state'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.Normalizers.forward": [[89, 91], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.boots.normalizer.get_expect_maximum": [[51, 57], ["numpy.sqrt", "numpy.sqrt", "numpy.log", "numpy.log"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log"], ["", "", "def", "get_expect_maximum", "(", "n", ")", ":", "\n", "    ", "\"\"\"\n        https://math.stackexchange.com/questions/89030/expectation-of-the-maximum-of-gaussian-random-variables\n        https://math.stackexchange.com/questions/1884280/expectation-of-the-maximum-absolute-value-of-gaussian-random-variables\n    \"\"\"", "\n", "return", "np", ".", "sqrt", "(", "2", "*", "np", ".", "log", "(", "n", ")", ")", "+", "1.", "/", "np", ".", "sqrt", "(", "np", ".", "pi", "*", "np", ".", "log", "(", "n", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.gaussian_noise.GaussianNoise.__init__": [[8, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "policy", ":", "lz", ".", "rl", ".", "BasePolicy", ",", "sigma", ")", ":", "\n", "        ", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "_policy", "=", "policy", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.gaussian_noise.GaussianNoise.get_actions": [[12, 15], ["gaussian_noise.GaussianNoise._policy.get_actions", "numpy.random.randn"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.policy.BasePolicy.get_actions"], ["", "def", "get_actions", "(", "self", ",", "states", ")", ":", "\n", "        ", "actions", "=", "self", ".", "_policy", ".", "get_actions", "(", "states", ")", "\n", "return", "actions", "+", "np", ".", "random", ".", "randn", "(", "*", "actions", ".", "shape", ")", "*", "self", ".", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.tf_utils.get_tf_config": [[5, 21], ["tensorflow.GPUOptions", "tensorflow.ConfigProto"], "function", ["None"], ["def", "get_tf_config", "(", ")", ":", "\n", "    ", "gpu_frac", "=", "1", "\n", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "\n", "per_process_gpu_memory_fraction", "=", "gpu_frac", ",", "\n", "allow_growth", "=", "True", ",", "\n", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", "\n", "gpu_options", "=", "gpu_options", ",", "\n", "log_device_placement", "=", "False", ",", "\n", "allow_soft_placement", "=", "True", ",", "\n", "inter_op_parallelism_threads", "=", "1", ",", "\n", "intra_op_parallelism_threads", "=", "1", ",", "\n", ")", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.tf_utils.normc_initializer": [[23, 29], ["numpy.random.randn().astype", "tensorflow.constant", "numpy.sqrt", "numpy.random.randn", "numpy.square().sum", "numpy.square"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "normc_initializer", "(", "std", "=", "1.0", ",", "axis", "=", "0", ")", ":", "\n", "    ", "def", "_initializer", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "        ", "out", "=", "np", ".", "random", ".", "randn", "(", "*", "shape", ")", ".", "astype", "(", "dtype", ".", "as_numpy_dtype", ")", "\n", "out", "*=", "std", "/", "np", ".", "sqrt", "(", "np", ".", "square", "(", "out", ")", ".", "sum", "(", "axis", "=", "axis", ",", "keepdims", "=", "True", ")", ")", "\n", "return", "tf", ".", "constant", "(", "out", ")", "\n", "", "return", "_initializer", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.__init__": [[5, 8], ["average_meter.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["def", "__init__", "(", "self", ",", "discount", "=", "1.", ")", ":", "\n", "        ", "self", ".", "discount", "=", "discount", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update": [[9, 13], ["average_meter.AverageMeter.get"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get"], ["", "def", "update", "(", "self", ",", "value", ",", "count", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "=", "self", ".", "sum", "*", "self", ".", "discount", "+", "value", "*", "count", "\n", "self", ".", "count", "=", "self", ".", "count", "*", "self", ".", "discount", "+", "count", "\n", "return", "self", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get": [[14, 16], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sum", "/", "(", "self", ".", "count", "+", "1.e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.reset": [[17, 20], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "=", "0.", "\n", "self", ".", "count", "=", "0.", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.__init__": [[26, 57], ["lunzi.nn.Module.__init__", "sac.SoftActorCritic.train_qfn", "sac.SoftActorCritic.update_targets", "qfn.copy", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "lunzi.nn.Parameter", "tensorflow.exp", "tensorflow.control_dependencies", "sac.SoftActorCritic.train_policy"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train_qfn", "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.update_targets", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.exp", "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train_policy"], ["@", "FLAGS", ".", "inject", "\n", "def", "__init__", "(", "self", ",", "qfns", ":", "List", "[", "lz", ".", "rl", ".", "BaseNNQFunction", "]", ",", "policy", ":", "lz", ".", "rl", ".", "BaseNNPolicy", ",", "dim_state", ":", "int", ",", "dim_action", ":", "int", ",", "\n", "*", ",", "alpha", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "qfns", "=", "qfns", "\n", "self", ".", "qfns_target", "=", "[", "qfn", ".", "copy", "(", ")", "for", "qfn", "in", "qfns", "]", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "dim_action", "=", "dim_action", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "dim_state", "]", ")", "\n", "self", ".", "op_actions", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "dim_action", "]", ")", "\n", "self", ".", "op_rewards", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", "]", ")", "\n", "self", ".", "op_next_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "dim_state", "]", ")", "\n", "self", ".", "op_dones", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", "]", ")", "\n", "\n", "", "if", "alpha", ":", "\n", "            ", "self", ".", "auto_entropy", "=", "False", "\n", "self", ".", "op_alpha", "=", "tf", ".", "constant", "(", "alpha", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "auto_entropy", "=", "True", "\n", "self", ".", "log_alpha", "=", "nn", ".", "Parameter", "(", "0.0", ",", "name", "=", "'alpha'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "op_alpha", "=", "tf", ".", "exp", "(", "self", ".", "log_alpha", ")", "\n", "\n", "", "self", ".", "op_qfn_losses", ",", "self", ".", "op_train_qfn", "=", "self", ".", "train_qfn", "(", "\n", "self", ".", "op_states", ",", "self", ".", "op_actions", ",", "self", ".", "op_rewards", ",", "self", ".", "op_next_states", ",", "self", ".", "op_dones", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "self", ".", "op_train_qfn", "]", ")", ":", "\n", "            ", "self", ".", "op_train_policy", ",", "self", ".", "op_train_alpha", "=", "self", ".", "train_policy", "(", "self", ".", "op_states", ")", "\n", "", "self", ".", "op_update_targets", "=", "self", ".", "update_targets", "(", ")", "\n", "\n", "self", ".", "_n_updates", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.init": [[58, 61], ["zip", "qfn_target.load_state_dict", "qfn.state_dict"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.load_state_dict", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict"], ["", "def", "init", "(", "self", ")", ":", "\n", "        ", "for", "qfn", ",", "qfn_target", "in", "zip", "(", "self", ".", "qfns", ",", "self", ".", "qfns_target", ")", ":", "\n", "            ", "qfn_target", ".", "load_state_dict", "(", "qfn", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.forward": [[62, 64], ["None"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train_qfn": [[65, 77], ["sac.SoftActorCritic.policy().sample_with_log_prob", "tensorflow.reduce_min", "tensorflow.stop_gradient", "tensorflow.train.AdamOptimizer", "tensorflow.group", "tensorflow.stack", "sac.SoftActorCritic.policy", "qfn_target", "tensorflow.reduce_mean", "tensorflow.pow", "tensorflow.train.AdamOptimizer.minimize", "zip", "qfn", "qfn.parameters"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal.sample_with_log_prob", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_min", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.stop_gradient", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.pow", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "train_qfn", "(", "self", ",", "states", ",", "actions", ",", "rewards", ",", "next_states", ",", "dones", ",", "*", ",", "gamma", ",", "lr", ")", ":", "\n", "        ", "next_actions", ",", "log_prob_actions", "=", "self", ".", "policy", "(", "next_states", ")", ".", "sample_with_log_prob", "(", ")", "\n", "next_qf", "=", "tf", ".", "reduce_min", "(", "[", "qfn_target", "(", "next_states", ",", "next_actions", ")", "for", "qfn_target", "in", "self", ".", "qfns_target", "]", ",", "axis", "=", "0", ")", "\n", "\n", "qf_", "=", "tf", ".", "stop_gradient", "(", "rewards", "+", "(", "1", "-", "dones", ")", "*", "gamma", "*", "(", "next_qf", "-", "self", ".", "op_alpha", "*", "log_prob_actions", ")", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", "\n", "qfn_losses", "=", "[", "tf", ".", "reduce_mean", "(", "tf", ".", "pow", "(", "qfn", "(", "states", ",", "actions", ")", "-", "qf_", ",", "2", ")", ")", "*", "0.5", "for", "qfn", "in", "self", ".", "qfns", "]", "\n", "op_train", "=", "tf", ".", "group", "(", "\n", "*", "[", "optimizer", ".", "minimize", "(", "qf_loss", ",", "var_list", "=", "qfn", ".", "parameters", "(", ")", ")", "for", "qfn", ",", "qf_loss", "in", "zip", "(", "self", ".", "qfns", ",", "qfn_losses", ")", "]", ")", "\n", "\n", "return", "tf", ".", "stack", "(", "qfn_losses", ")", ",", "op_train", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train_policy": [[78, 97], ["sac.SoftActorCritic.policy", "distribution.sample_with_log_prob", "tensorflow.reduce_min", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.exp", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.no_op", "qfn", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "sac.SoftActorCritic.policy.parameters", "tensorflow.stop_gradient", "tensorflow.log", "tensorflow.train.AdamOptimizer", "distribution.stddev", "tensorflow.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal.sample_with_log_prob", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_min", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.exp", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.stop_gradient", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "train_policy", "(", "self", ",", "states", ",", "*", ",", "lr", ",", "target_entropy", ")", ":", "\n", "        ", "distribution", ":", "tf", ".", "distributions", ".", "Distribution", "=", "self", ".", "policy", "(", "states", ")", "\n", "actions", ",", "log_prob_actions", "=", "distribution", ".", "sample_with_log_prob", "(", ")", "\n", "min_qf", "=", "tf", ".", "reduce_min", "(", "[", "qfn", "(", "states", ",", "actions", ")", "for", "qfn", "in", "self", ".", "qfns", "]", ",", "axis", "=", "0", ")", "\n", "self", ".", "op_dist_std", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "exp", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "distribution", ".", "stddev", "(", ")", ")", ",", "axis", "=", "1", ")", ")", ")", "\n", "policy_loss", "=", "tf", ".", "reduce_mean", "(", "self", ".", "op_alpha", "*", "log_prob_actions", "-", "min_qf", ")", "\n", "\n", "train_policy", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", ".", "minimize", "(", "policy_loss", ",", "var_list", "=", "self", ".", "policy", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "self", ".", "auto_entropy", ":", "\n", "            ", "if", "target_entropy", "is", "None", ":", "\n", "                ", "target_entropy", "=", "-", "self", ".", "dim_action", "\n", "", "alpha_loss", "=", "-", "self", ".", "log_alpha", "*", "tf", ".", "stop_gradient", "(", "tf", ".", "reduce_mean", "(", "log_prob_actions", ")", "+", "target_entropy", ")", "\n", "train_alpha", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", ".", "minimize", "(", "alpha_loss", ",", "var_list", "=", "[", "self", ".", "log_alpha", "]", ")", "\n", "", "else", ":", "\n", "            ", "train_alpha", "=", "tf", ".", "no_op", "(", ")", "\n", "\n", "", "return", "train_policy", ",", "train_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.update_targets": [[98, 106], ["zip", "tensorflow.group", "zip", "qfn.parameters", "qfn_target.parameters", "ops.append", "tensorflow.assign"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "update_targets", "(", "self", ",", "*", ",", "tau", ")", ":", "\n", "        ", "ops", "=", "[", "]", "\n", "for", "qfn", ",", "qfn_target", "in", "zip", "(", "self", ".", "qfns", ",", "self", ".", "qfns_target", ")", ":", "\n", "            ", "for", "p", ",", "q", "in", "zip", "(", "qfn", ".", "parameters", "(", ")", ",", "qfn_target", ".", "parameters", "(", ")", ")", ":", "\n", "                ", "ops", ".", "append", "(", "tf", ".", "assign", "(", "q", ",", "p", "*", "tau", "+", "q", "*", "(", "1", "-", "tau", ")", ")", ")", "\n", "\n", "", "", "return", "tf", ".", "group", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train": [[107, 121], ["sac.SoftActorCritic.eval", "sac.SoftActorCritic.policy.parameters", "sac.SoftActorCritic.eval", "_log.info", "p.invalidate", "qfn_losses.round"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.invalidate", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.round"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "train", "(", "self", ",", "samples", ":", "lz", ".", "Dataset", ",", "*", ",", "target_update", ",", "_log", ")", ":", "\n", "        ", "self", ".", "_n_updates", "+=", "1", "\n", "qfn_losses", ",", "dist_std", ",", "alpha", ",", "*", "_", "=", "self", ".", "eval", "(", "\n", "'qfn_losses dist_std alpha train_qfn train_policy train_alpha'", ",", "\n", "states", "=", "samples", ".", "state", ",", "actions", "=", "samples", ".", "action", ",", "next_states", "=", "samples", ".", "next_state", ",", "rewards", "=", "samples", ".", "reward", ",", "\n", "dones", "=", "samples", ".", "done", "&", "~", "samples", "[", "'timeout'", "]", ")", "\n", "if", "self", ".", "_n_updates", "%", "target_update", "==", "0", ":", "\n", "            ", "self", ".", "eval", "(", "'update_targets'", ")", "\n", "", "if", "self", ".", "_n_updates", "%", "1000", "==", "0", ":", "\n", "            ", "_log", ".", "info", "(", "f'[SAC] # {self._n_updates:d}: alpha = {alpha:.3f}, Q loss = {qfn_losses.round(3)}, '", "\n", "f'dist_std = {dist_std:.3f}'", ")", "\n", "", "for", "p", "in", "self", ".", "policy", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "invalidate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.reset": [[122, 124], ["None"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_n_updates", "=", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.mlp_q_function.MLPQFunction.__init__": [[7, 20], ["lunzi.nn.Module.__init__", "mlp_q_function.MLPQFunction.forward", "tensorflow.placeholder", "tensorflow.placeholder", "lunzi.MultiLayerPerceptron"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["    ", "def", "__init__", "(", "self", ",", "dim_state", ":", "int", ",", "dim_action", ":", "int", ",", "hidden_states", ":", "List", "[", "int", "]", ",", "normalizer", ":", "nn", ".", "Module", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_dim_state", "=", "dim_state", "\n", "self", ".", "_dim_action", "=", "dim_action", "\n", "self", ".", "_normalizer", "=", "normalizer", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "dim_state", "]", ")", "\n", "self", ".", "op_actions", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "dim_action", "]", ")", "\n", "self", ".", "mlp", "=", "MultiLayerPerceptron", "(", "\n", "(", "dim_state", "+", "dim_action", ",", "*", "hidden_states", ",", "1", ")", ",", "activation", "=", "nn", ".", "ReLU", ",", "squeeze", "=", "True", ")", "\n", "\n", "", "self", ".", "op_Q", "=", "self", ".", "forward", "(", "self", ".", "op_states", ",", "self", ".", "op_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.mlp_q_function.MLPQFunction.forward": [[21, 25], ["mlp_q_function.MLPQFunction.mlp.forward", "mlp_q_function.MLPQFunction._normalizer"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "if", "self", ".", "_normalizer", ":", "\n", "            ", "states", "=", "self", ".", "_normalizer", "(", "states", ")", "\n", "", "return", "self", ".", "mlp", ".", "forward", "(", "states", ",", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.mlp_q_function.MLPQFunction.get_q": [[26, 28], ["lunzi.nn.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'Q'", ")", "\n", "def", "get_q", "(", "self", ",", "states", ",", "actions", ")", ":", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.mlp_q_function.MLPQFunction.copy": [[29, 31], ["mlp_q_function.MLPQFunction"], "methods", ["None"], ["def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "MLPQFunction", "(", "self", ".", "_dim_state", ",", "self", ".", "_dim_action", ",", "self", ".", "mlp", ".", "blocks", "[", "1", ":", "-", "1", "]", ",", "self", ".", "_normalizer", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.min_q_function.MinQFunction.__init__": [[7, 12], ["super().__init__", "lunzi.ModuleList", "lunzi.ModuleList"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_state", ",", "dim_action", ",", "qfns", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "qfns", "=", "nn", ".", "ModuleList", "(", "qfns", ")", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "self", ".", "dim_action", "=", "dim_action", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.min_q_function.MinQFunction.build": [[13, 20], ["min_q_function.MinQFunction.forward", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "dim_state", "]", ")", "\n", "self", ".", "op_actions", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "dim_action", "]", ")", "\n", "\n", "", "self", ".", "op_q", "=", "self", ".", "forward", "(", "self", ".", "op_states", ",", "self", ".", "op_actions", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.min_q_function.MinQFunction.forward": [[21, 23], ["tensorflow.reduce_min", "qfn"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_min"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "return", "tf", ".", "reduce_min", "(", "[", "qfn", "(", "states", ",", "actions", ")", "for", "qfn", "in", "self", ".", "qfns", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.min_q_function.MinQFunction.get_q": [[24, 26], ["lunzi.make_method", "lunzi.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'q'", ")", "\n", "def", "get_q", "(", "self", ",", "states", ",", "actions", ")", ":", "pass", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.zero_q_function.ZeroQFunction.forward": [[8, 11], ["tensorflow.zeros", "tensorflow.shape"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "n", "=", "tf", ".", "shape", "(", "states", ")", "[", "0", "]", "\n", "return", "tf", ".", "zeros", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.q_function.zero_q_function.ZeroQFunction.get_q": [[12, 15], ["len", "numpy.zeros"], "methods", ["None"], ["", "def", "get_q", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "n", "=", "len", "(", "states", ")", "\n", "return", "np", ".", "zeros", "(", "n", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.model.ensemble.EnsembleModel.__init__": [[6, 12], ["lunzi.Module.__init__", "lunzi.ModuleList", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "models", ",", "dim_state", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "models", "=", "nn", ".", "ModuleList", "(", "models", ")", "\n", "self", ".", "n_models", "=", "len", "(", "models", ")", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "assert", "self", ".", "n_models", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.ensemble.EnsembleModel.forward": [[13, 15], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "return", "self", ".", "models", "[", "0", "]", "(", "states", ",", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.ensemble.EnsembleModel.get_next_states": [[16, 25], ["len", "numpy.random.permutation().reshape", "numpy.zeros", "range", "ensemble.EnsembleModel.models[].get_next_states", "numpy.random.permutation"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model.OracleModel.get_next_states"], ["", "def", "get_next_states", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "n", "=", "len", "(", "states", ")", "\n", "assert", "n", "%", "self", ".", "n_models", "==", "0", "\n", "\n", "perm", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", ".", "reshape", "(", "self", ".", "n_models", ",", "-", "1", ")", "\n", "next_states", "=", "np", ".", "zeros", "(", "(", "n", ",", "self", ".", "dim_state", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_models", ")", ":", "\n", "            ", "next_states", "[", "perm", "[", "i", "]", "]", "=", "self", ".", "models", "[", "i", "]", ".", "get_next_states", "(", "states", "[", "perm", "[", "i", "]", "]", ",", "actions", "[", "perm", "[", "i", "]", "]", ")", "\n", "", "return", "next_states", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.FixupResBlock.__init__": [[27, 38], ["lunzi.nn.Module.__init__", "numpy.sqrt", "lunzi.nn.Parameter", "lunzi.nn.Linear", "lunzi.nn.Parameter", "lunzi.nn.ReLU", "lunzi.nn.Parameter", "lunzi.nn.Linear", "lunzi.nn.Parameter", "lunzi.nn.Parameter", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros", "tensorflow.initializers.random_normal", "tensorflow.initializers.zeros"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt"], ["    ", "def", "__init__", "(", "self", ",", "x", ",", "n_total_blocks", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "std", "=", "np", ".", "sqrt", "(", "2.", "/", "x", "/", "n_total_blocks", ")", "\n", "self", ".", "bias1a", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "1", ")", ",", "name", "=", "'bias1a'", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "x", ",", "x", ",", "bias", "=", "False", ",", "weight_initializer", "=", "tf", ".", "initializers", ".", "random_normal", "(", "0", ",", "stddev", "=", "std", ")", ")", "\n", "self", ".", "bias1b", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "1", ")", ",", "name", "=", "'bias1b'", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "bias2a", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "1", ")", ",", "name", "=", "'bias2a'", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "x", ",", "x", ",", "bias", "=", "False", ",", "weight_initializer", "=", "tf", ".", "initializers", ".", "zeros", "(", ")", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "tf", ".", "ones", "(", "1", ")", ",", "name", "=", "'scale'", ")", "\n", "self", ".", "bias2b", "=", "nn", ".", "Parameter", "(", "tf", ".", "zeros", "(", "1", ")", ",", "name", "=", "'bias2b'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.FixupResBlock.forward": [[39, 46], ["deterministic_model.FixupResBlock.fc1", "deterministic_model.FixupResBlock.relu", "deterministic_model.FixupResBlock.fc2", "deterministic_model.FixupResBlock.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "\n", "y", "=", "self", ".", "fc1", "(", "y", "+", "self", ".", "bias1a", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", "+", "self", ".", "bias1b", ")", "\n", "y", "=", "self", ".", "fc2", "(", "y", "+", "self", ".", "bias2a", ")", "\n", "y", "=", "y", "*", "self", ".", "scale", "+", "self", ".", "bias2b", "\n", "return", "self", ".", "relu", "(", "x", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.__init__": [[55, 73], ["lunzi.nn.Module.__init__", "tensorflow.truncated_normal_initializer", "tensorflow.placeholder", "tensorflow.placeholder", "lunzi.nn.Sequential", "deterministic_model.DeterministicModel.build", "lunzi.nn.Linear", "lunzi.nn.ReLU", "deterministic_model.make_blocks", "lunzi.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.build", "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.make_blocks"], ["@", "FLAGS", ".", "inject", "\n", "def", "__init__", "(", "self", ",", "dim_state", ":", "int", ",", "dim_action", ":", "int", ",", "normalizers", ":", "Normalizers", ",", "*", ",", "arch", ":", "FLAGS", ".", "arch", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "mean", "=", "0.0", ",", "stddev", "=", "1e-5", ")", "\n", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "self", ".", "dim_action", "=", "dim_action", "\n", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "dim_state", "]", ",", "name", "=", "'states'", ")", "\n", "self", ".", "op_actions", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "dim_action", "]", ",", "name", "=", "'actions'", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim_state", "+", "dim_action", ",", "arch", ".", "n_units", ",", "weight_initializer", "=", "initializer", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "make_blocks", "(", "FixupResBlock", ",", "arch", ".", "n_units", ",", "arch", ".", "n_blocks", ",", "arch", ".", "n_blocks", ")", ",", "\n", "nn", ".", "Linear", "(", "arch", ".", "n_units", ",", "dim_state", ",", "weight_initializer", "=", "initializer", ")", ",", "\n", ")", "\n", "\n", "self", ".", "normalizers", "=", "normalizers", "\n", "self", ".", "build", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.build": [[74, 77], ["deterministic_model.DeterministicModel.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "build", "(", "self", ")", ":", "\n", "# self.op_next_states, self.op_rewards, self.op_dones = self.forward(self.op_states, self.op_actions)", "\n", "        ", "self", ".", "op_next_states", ",", "_", ",", "_", "=", "self", ".", "forward", "(", "self", ".", "op_states", ",", "self", ".", "op_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.get_rewards": [[78, 126], ["tensorflow.clip_by_value", "tensorflow.logical_or", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.less", "tensorflow.greater", "tensorflow.math.square", "tensorflow.math.square", "tensorflow.reduce_sum", "tensorflow.zeros_like", "tensorflow.logical_not", "tensorflow.math.square", "tensorflow.logical_or", "tensorflow.logical_not", "tensorflow.greater", "tensorflow.less", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.logical_and", "tensorflow.square", "tensorflow.square", "tensorflow.greater", "tensorflow.less", "tensorflow.clip_by_value"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_value", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_or", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.less", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.greater", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeros_like", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_not", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_or", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_not", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.greater", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.less", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_and", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.greater", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.less", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_value"], ["", "def", "get_rewards", "(", "self", ",", "states", ",", "actions", ",", "next_states", ")", ":", "\n", "        ", "if", "FLAGS", ".", "env", ".", "id", "==", "'ModelBasedHumanoid-v2'", ":", "\n", "            ", "actions", "=", "0.4", "*", "actions", "# TODO: this is ad-hoc hack", "\n", "\n", "pos_before", "=", "states", "[", ":", ",", "-", "1", "]", "\n", "pos_after", "=", "next_states", "[", ":", ",", "-", "1", "]", "\n", "alive_bonus", "=", "5.0", "\n", "lin_vel_cost", "=", "1.25", "*", "(", "pos_after", "-", "pos_before", ")", "/", "0.015", "\n", "quad_ctrl_cost", "=", "0.1", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "math", ".", "square", "(", "actions", ")", ",", "axis", "=", "-", "1", ")", "\n", "quad_impact_cost", "=", ".5e-6", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "math", ".", "square", "(", "states", "[", ":", ",", "292", ":", "376", "]", ")", ",", "axis", "=", "-", "1", ")", "# cfrc_ext", "\n", "quad_impact_cost", "=", "tf", ".", "clip_by_value", "(", "quad_impact_cost", ",", "0", ",", "10", ")", "\n", "rewards", "=", "lin_vel_cost", "-", "quad_ctrl_cost", "-", "quad_impact_cost", "+", "alive_bonus", "\n", "height", "=", "next_states", "[", "...", ",", "0", "]", "\n", "dones", "=", "tf", ".", "logical_or", "(", "tf", ".", "less", "(", "height", ",", "1.0", ")", ",", "tf", ".", "greater", "(", "height", ",", "2.0", ")", ")", "\n", "return", "rewards", ",", "dones", "\n", "", "elif", "FLAGS", ".", "env", ".", "id", "==", "'ModelBasedHalfCheetah-v2'", ":", "\n", "            ", "xposbefore", "=", "states", "[", ":", ",", "0", "]", "\n", "xposafter", "=", "next_states", "[", ":", ",", "0", "]", "\n", "reward_ctrl", "=", "-", "0.1", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "math", ".", "square", "(", "actions", ")", ",", "axis", "=", "-", "1", ")", "\n", "reward_run", "=", "(", "xposafter", "-", "xposbefore", ")", "/", "0.05", "\n", "reward", "=", "reward_ctrl", "+", "reward_run", "\n", "return", "reward", ",", "tf", ".", "zeros_like", "(", "reward", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "", "elif", "FLAGS", ".", "env", ".", "id", "==", "'ModelBasedWalker2d-v2'", ":", "\n", "            ", "posbefore", "=", "states", "[", ":", ",", "0", "]", "\n", "posafter", "=", "next_states", "[", ":", ",", "0", "]", "\n", "height", "=", "next_states", "[", ":", ",", "1", "]", "\n", "ang", "=", "next_states", "[", ":", ",", "2", "]", "\n", "alive_bonus", "=", "1.0", "\n", "reward", "=", "(", "(", "posafter", "-", "posbefore", ")", "/", "0.008", ")", "\n", "reward", "+=", "alive_bonus", "\n", "# reward -= 1e-3 * tf.square(actions).reduce_sum(axis=-1)", "\n", "dones", "=", "tf", ".", "logical_not", "(", "tf", ".", "logical_or", "(", "tf", ".", "greater", "(", "height", ",", "0.8", ")", ",", "tf", ".", "less", "(", "height", ",", "2.0", ")", ")", ")", "\n", "# done = ~((height > 0.8) & (height < 2.0) & (ang > -1.0) & (ang < 1.0))", "\n", "return", "reward", ",", "dones", "\n", "", "elif", "FLAGS", ".", "env", ".", "id", "==", "'ModelBasedAnt-v2'", ":", "\n", "            ", "xposbefore", "=", "states", "[", ":", ",", "-", "1", "]", "\n", "xposafter", "=", "next_states", "[", ":", ",", "-", "1", "]", "\n", "forward_reward", "=", "(", "xposafter", "-", "xposbefore", ")", "/", "0.05", "\n", "\n", "ctrl_cost", "=", ".5", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "actions", ")", ",", "axis", "=", "-", "1", ")", "\n", "contact_cost", "=", "0.5", "*", "1e-3", "*", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "square", "(", "tf", ".", "clip_by_value", "(", "next_states", "[", ":", ",", "27", ":", "111", "]", ",", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "survive_reward", "=", "1.0", "\n", "reward", "=", "forward_reward", "-", "ctrl_cost", "-", "contact_cost", "+", "survive_reward", "\n", "dones", "=", "tf", ".", "logical_not", "(", "tf", ".", "logical_and", "(", "tf", ".", "greater", "(", "next_states", "[", ":", ",", "0", "]", ",", "0.2", ")", ",", "tf", ".", "less", "(", "next_states", "[", ":", ",", "0", "]", ",", "1.0", ")", ")", ")", "\n", "# done = ~((next_states[:, 0] >= 0.2) & (next_states[:, 0] <= 1.0))", "\n", "return", "reward", ",", "dones", "\n", "", "return", "None", ",", "None", "\n", "# assert 0", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.forward": [[128, 137], ["tensorflow.concat", "deterministic_model.DeterministicModel.mlp.forward", "deterministic_model.DeterministicModel.get_rewards", "deterministic_model.DeterministicModel.normalizers.diff", "deterministic_model.DeterministicModel.normalizers.state", "tensorflow.clip_by_value"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward", "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.get_rewards", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_value"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "# assert actions.shape[-1] == self.dim_action", "\n", "        ", "inputs", "=", "tf", ".", "concat", "(", "[", "self", ".", "normalizers", ".", "state", "(", "states", ")", ",", "tf", ".", "clip_by_value", "(", "actions", ",", "-", "1.", ",", "1.", ")", "]", ",", "axis", "=", "1", ")", "\n", "\n", "normalized_diffs", "=", "self", ".", "mlp", ".", "forward", "(", "inputs", ")", "\n", "next_states", "=", "states", "+", "self", ".", "normalizers", ".", "diff", "(", "normalized_diffs", ",", "inverse", "=", "True", ")", "\n", "\n", "rewards", ",", "dones", "=", "self", ".", "get_rewards", "(", "states", ",", "actions", ",", "next_states", ")", "\n", "return", "next_states", ",", "rewards", ",", "dones", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModel.get_next_states": [[138, 140], ["lunzi.nn.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'next_states'", ")", "\n", "def", "get_next_states", "(", "self", ",", "states", ",", "actions", ")", ":", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.__init__": [[143, 171], ["lunzi.nn.Module.__init__", "deterministic_model.DeterministicModelTrainer.build", "boots.utils.average_meter.AverageMeter", "datasets[].iterator", "datasets[].sample_iterator", "lunzi.nn.L1Loss", "lunzi.nn.L2Loss", "lunzi.nn.MSELoss", "tensorflow.placeholder"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.build", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.iterator", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample_iterator"], ["    ", "@", "FLAGS", ".", "inject", "\n", "def", "__init__", "(", "self", ",", "model", ":", "DeterministicModel", ",", "dim_state", ":", "int", ",", "dim_action", ":", "int", ",", "normalizers", ",", "datasets", ",", "\n", "*", ",", "loss", ",", "batch_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "iterators", "=", "{", "\n", "'train'", ":", "datasets", "[", "'train'", "]", ".", "iterator", "(", "batch_size", ",", "n_epochs", "=", "-", "1", ")", ",", "\n", "'dev'", ":", "datasets", "[", "'dev'", "]", ".", "sample_iterator", "(", "1024", ")", ",", "\n", "}", "\n", "self", ".", "_n_updates", "=", "0", "\n", "criterion_map", "=", "{", "\n", "'L1'", ":", "nn", ".", "L1Loss", "(", ")", ",", "\n", "'L2'", ":", "nn", ".", "L2Loss", "(", ")", ",", "\n", "'MSE'", ":", "nn", ".", "MSELoss", "(", ")", ",", "\n", "# 'G': DescLoss(vfn, normalizers, dim_state),", "\n", "}", "\n", "self", ".", "normalizers", "=", "normalizers", "\n", "self", ".", "criterion", "=", "criterion_map", "[", "loss", "]", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_states", "=", "self", ".", "model", ".", "op_states", "\n", "self", ".", "op_actions", "=", "self", ".", "model", ".", "op_actions", "\n", "self", ".", "op_next_states", "=", "self", ".", "model", ".", "op_next_states", "\n", "self", ".", "op_next_states_", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "dim_state", "]", ")", "\n", "\n", "", "self", ".", "build", "(", ")", "\n", "self", ".", "train_loss_meter", "=", "AverageMeter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.build": [[172, 191], ["deterministic_model.DeterministicModelTrainer.criterion", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "deterministic_model.DeterministicModelTrainer.model.parameters", "tensorflow.train.AdamOptimizer.compute_gradients", "print", "tensorflow.clip_by_global_norm", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.maximum", "tensorflow.add_n", "var.shape.as_list", "zip", "tensorflow.nn.l2_loss"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "build", "(", "self", ",", "lr", ":", "float", ",", "weight_decay", ":", "float", ",", "max_grad_norm", ":", "float", ")", ":", "\n", "        ", "next_states", "=", "self", ".", "model", ".", "op_next_states", "\n", "diffs", "=", "next_states", "-", "self", ".", "op_next_states_", "\n", "weighted_diffs", "=", "diffs", "/", "tf", ".", "maximum", "(", "self", ".", "normalizers", ".", "diff", ".", "op_std", ",", "1e-6", ")", "\n", "self", ".", "op_loss", "=", "self", ".", "criterion", "(", "weighted_diffs", ",", "0", ")", "\n", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "self", ".", "op_loss", ")", "\n", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", "\n", "params", "=", "self", ".", "model", ".", "parameters", "(", ")", "\n", "regularization", "=", "weight_decay", "*", "tf", ".", "add_n", "(", "[", "tf", ".", "nn", ".", "l2_loss", "(", "t", ")", "for", "t", "in", "params", "]", ",", "name", "=", "'regularization'", ")", "\n", "\n", "grads_and_vars", "=", "optimizer", ".", "compute_gradients", "(", "loss", "+", "regularization", ",", "var_list", "=", "params", ")", "\n", "print", "(", "[", "var", ".", "shape", ".", "as_list", "(", ")", "for", "grad", ",", "var", "in", "grads_and_vars", "]", ")", "\n", "clip_grads", ",", "op_grad_norm", "=", "tf", ".", "clip_by_global_norm", "(", "[", "grad", "for", "grad", ",", "_", "in", "grads_and_vars", "]", ",", "max_grad_norm", ")", "\n", "clip_grads_and_vars", "=", "[", "(", "grad", ",", "var", ")", "for", "grad", ",", "(", "_", ",", "var", ")", "in", "zip", "(", "clip_grads", ",", "grads_and_vars", ")", "]", "\n", "self", ".", "op_train", "=", "optimizer", ".", "apply_gradients", "(", "clip_grads_and_vars", ")", "\n", "self", ".", "op_grad_norm", "=", "op_grad_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.forward": [[192, 194], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.get_loss": [[195, 197], ["lunzi.nn.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'loss'", ")", "\n", "def", "get_loss", "(", "self", ",", "states", ",", "next_states_", ",", "actions", ")", "->", "np", ".", "ndarray", ":", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.step": [[198, 223], ["next", "deterministic_model.DeterministicModelTrainer.get_loss", "deterministic_model.DeterministicModelTrainer.train_loss_meter.update", "deterministic_model.DeterministicModelTrainer.model.parameters", "deterministic_model.DeterministicModelTrainer.mean", "param.invalidate", "deterministic_model.DeterministicModelTrainer.train_loss_meter.get", "deterministic_model.DeterministicModelTrainer.train_loss_meter.reset", "next", "deterministic_model.DeterministicModelTrainer.get_loss", "dev_loss.mean.mean.mean", "_log.info", "_writer.add_scalar", "_writer.add_scalar", "_writer.add_scalar"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.get_loss", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.invalidate", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.get_loss"], ["@", "FLAGS", ".", "inject", "\n", "def", "step", "(", "self", ",", "*", ",", "n_dev_iters", ",", "_log", ",", "_writer", ")", ":", "\n", "        ", "self", ".", "_n_updates", "+=", "1", "\n", "\n", "samples", "=", "next", "(", "self", ".", "iterators", "[", "'train'", "]", ")", "\n", "_", ",", "train_loss", ",", "grad_norm", "=", "self", ".", "get_loss", "(", "\n", "samples", "[", "'state'", "]", ",", "samples", "[", "'next_state'", "]", ",", "samples", "[", "'action'", "]", ",", "fetch", "=", "'train loss grad_norm'", ")", "\n", "self", ".", "train_loss_meter", ".", "update", "(", "train_loss", ".", "mean", "(", ")", ")", "\n", "# ideally, we should define an Optimizer class, which takes parameters as inputs.", "\n", "# The `update` method of `Optimizer` will invalidate all parameters during updates.", "\n", "for", "param", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "invalidate", "(", ")", "\n", "\n", "", "if", "self", ".", "_n_updates", "%", "n_dev_iters", "==", "0", ":", "\n", "            ", "train_loss", "=", "self", ".", "train_loss_meter", ".", "get", "(", ")", "\n", "self", ".", "train_loss_meter", ".", "reset", "(", ")", "\n", "samples", "=", "next", "(", "self", ".", "iterators", "[", "'dev'", "]", ")", "\n", "dev_loss", "=", "self", ".", "get_loss", "(", "\n", "samples", "[", "'state'", "]", ",", "samples", "[", "'next_state'", "]", ",", "samples", "[", "'action'", "]", ")", "\n", "dev_loss", "=", "dev_loss", ".", "mean", "(", ")", "\n", "_log", ".", "info", "(", "'# Iter %3d: Loss = [train = %.3f, dev = %.3f], grad_norm = %.6f'", ",", "\n", "self", ".", "_n_updates", ",", "train_loss", ",", "dev_loss", ",", "grad_norm", ")", "\n", "_writer", ".", "add_scalar", "(", "'model/loss/dev'", ",", "dev_loss", ")", "\n", "_writer", ".", "add_scalar", "(", "'model/loss/train'", ",", "train_loss", ")", "\n", "_writer", ".", "add_scalar", "(", "'model/grad_norm'", ",", "grad_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.pretrain": [[224, 228], ["range", "deterministic_model.DeterministicModelTrainer.step"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step"], ["", "", "@", "FLAGS", ".", "inject", "\n", "def", "pretrain", "(", "self", ",", "*", ",", "n_pretrain_iters", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "n_pretrain_iters", ")", ":", "\n", "            ", "self", ".", "step", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.make_blocks": [[48, 50], ["lunzi.nn.Sequential", "block", "range"], "function", ["None"], ["", "", "def", "make_blocks", "(", "block", ",", "x", ",", "n_blocks", ",", "n_total_blocks", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "*", "[", "block", "(", "x", ",", "n_total_blocks", ")", "for", "_", "in", "range", "(", "n_blocks", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model._SubprocVecEnv.__init__": [[46, 69], ["len", "zip", "oracle_model._SubprocVecEnv.remotes[].send", "oracle_model._SubprocVecEnv.remotes[].recv", "baselines.common.vec_env.subproc_vec_env.VecEnv.__init__", "baselines.common.vec_env.subproc_vec_env.Process", "p.start", "remote.close", "len", "zip", "f", "baselines.common.vec_env.subproc_vec_env.Pipe", "range", "baselines.common.vec_env.subproc_vec_env.CloudpickleWrapper"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close"], ["    ", "def", "__init__", "(", "self", ",", "env_fns", ",", "spaces", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Arguments:\n        env_fns: iterable of callables -  functions that create environments to run in subprocesses.\n        Need to be cloud-pickleable\n        \"\"\"", "\n", "self", ".", "waiting", "=", "False", "\n", "self", ".", "closed", "=", "False", "\n", "nenvs", "=", "len", "(", "env_fns", ")", "\n", "self", ".", "remotes", ",", "self", ".", "work_remotes", "=", "zip", "(", "*", "[", "Pipe", "(", ")", "for", "_", "in", "range", "(", "nenvs", ")", "]", ")", "\n", "self", ".", "ps", "=", "[", "Process", "(", "target", "=", "worker", ",", "args", "=", "(", "work_remote", ",", "remote", ",", "CloudpickleWrapper", "(", "env_fn", ")", ")", ")", "\n", "for", "(", "work_remote", ",", "remote", ",", "env_fn", ")", "in", "zip", "(", "self", ".", "work_remotes", ",", "self", ".", "remotes", ",", "env_fns", ")", "]", "\n", "for", "p", "in", "self", ".", "ps", ":", "\n", "            ", "p", ".", "daemon", "=", "True", "# if the main process crashes, we should not cause things to hang", "\n", "p", ".", "start", "(", ")", "\n", "", "for", "remote", "in", "self", ".", "work_remotes", ":", "\n", "            ", "remote", ".", "close", "(", ")", "\n", "\n", "", "self", ".", "remotes", "[", "0", "]", ".", "send", "(", "(", "'get_spaces'", ",", "None", ")", ")", "\n", "observation_space", ",", "action_space", "=", "self", ".", "remotes", "[", "0", "]", ".", "recv", "(", ")", "\n", "self", ".", "viewer", "=", "None", "\n", "self", ".", "specs", "=", "[", "f", "(", ")", ".", "spec", "for", "f", "in", "env_fns", "]", "\n", "VecEnv", ".", "__init__", "(", "self", ",", "len", "(", "env_fns", ")", ",", "observation_space", ",", "action_space", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model._SubprocVecEnv.simulate": [[70, 81], ["len", "len", "states.reshape.reshape.reshape", "actions.reshape.reshape.reshape", "zip", "numpy.vstack", "remote.send", "remote.recv"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape"], ["", "def", "simulate", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "n", "=", "len", "(", "states", ")", "\n", "n_envs", "=", "len", "(", "self", ".", "remotes", ")", "\n", "states", "=", "states", ".", "reshape", "(", "n_envs", ",", "n", "//", "n_envs", ",", "-", "1", ")", "\n", "actions", "=", "actions", ".", "reshape", "(", "n_envs", ",", "n", "//", "n_envs", ",", "-", "1", ")", "\n", "\n", "for", "remote", ",", "batch_states", ",", "batch_actions", "in", "zip", "(", "self", ".", "remotes", ",", "states", ",", "actions", ")", ":", "\n", "            ", "remote", ".", "send", "(", "(", "'simulate'", ",", "(", "batch_states", ",", "batch_actions", ")", ")", ")", "\n", "\n", "", "results", "=", "[", "remote", ".", "recv", "(", ")", "for", "remote", "in", "self", ".", "remotes", "]", "\n", "return", "np", ".", "vstack", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model.OracleModel.__init__": [[90, 94], ["oracle_model._SubprocVecEnv"], "methods", ["None"], ["@", "FLAGS", ".", "inject", "\n", "def", "__init__", "(", "self", ",", "make_env", ",", "n_envs", ")", ":", "\n", "        ", "self", ".", "_envs", "=", "_SubprocVecEnv", "(", "[", "make_env", "]", "*", "n_envs", ")", "\n", "self", ".", "n_envs", "=", "n_envs", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model.OracleModel.get_next_states": [[95, 98], ["oracle_model.OracleModel._envs.simulate", "len", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model._SubprocVecEnv.simulate"], ["", "def", "get_next_states", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "assert", "len", "(", "states", ")", "==", "len", "(", "actions", ")", "\n", "return", "self", ".", "_envs", ".", "simulate", "(", "states", ",", "actions", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model.worker": [[6, 43], ["parent_remote.close", "env_fn_wrapper.x", "env_fn_wrapper.x.close", "remote.recv", "print", "env_fn_wrapper.x.step", "remote.send", "env_fn_wrapper.x.reset", "env_fn_wrapper.x.reset", "remote.send", "remote.send", "env_fn_wrapper.x.render", "zip", "remote.send", "env_fn_wrapper.x.unwrapped.sim.set_state", "env_fn_wrapper.x.step", "next_states.append", "numpy.array", "remote.close", "remote.send"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.render", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.set_state", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close"], ["def", "worker", "(", "remote", ",", "parent_remote", ",", "env_fn_wrapper", ")", ":", "\n", "    ", "parent_remote", ".", "close", "(", ")", "\n", "env", "=", "env_fn_wrapper", ".", "x", "(", ")", "\n", "try", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "cmd", ",", "data", "=", "remote", ".", "recv", "(", ")", "\n", "if", "cmd", "==", "'step'", ":", "\n", "                ", "ob", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "data", ")", "\n", "if", "done", ":", "\n", "                    ", "ob", "=", "env", ".", "reset", "(", ")", "\n", "", "remote", ".", "send", "(", "(", "ob", ",", "reward", ",", "done", ",", "info", ")", ")", "\n", "", "elif", "cmd", "==", "'reset'", ":", "\n", "                ", "ob", "=", "env", ".", "reset", "(", ")", "\n", "remote", ".", "send", "(", "ob", ")", "\n", "", "elif", "cmd", "==", "'render'", ":", "\n", "                ", "remote", ".", "send", "(", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", ")", "\n", "", "elif", "cmd", "==", "'simulate'", ":", "\n", "                ", "states", ",", "actions", "=", "data", "\n", "\n", "next_states", "=", "[", "]", "\n", "for", "state", ",", "action", "in", "zip", "(", "states", ",", "actions", ")", ":", "\n", "                    ", "env", ".", "unwrapped", ".", "sim", ".", "set_state", "(", "state", ")", "\n", "next_state", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "action", ")", "\n", "next_states", ".", "append", "(", "next_state", ")", "\n", "", "remote", ".", "send", "(", "np", ".", "array", "(", "next_states", ")", ")", "\n", "\n", "", "elif", "cmd", "==", "'close'", ":", "\n", "                ", "remote", ".", "close", "(", ")", "\n", "break", "\n", "", "elif", "cmd", "==", "'get_spaces'", ":", "\n", "                ", "remote", ".", "send", "(", "(", "env", ".", "observation_space", ",", "env", ".", "action_space", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "print", "(", "'SubprocVecEnv worker: got KeyboardInterrupt'", ")", "\n", "", "finally", ":", "\n", "        ", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.__init__": [[10, 30], ["boots.envs.BaseBatchedEnv.__init__", "numpy.zeros", "gym.spaces.Box", "numpy.allclose", "numpy.allclose", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["def", "__init__", "(", "self", ",", "model", ":", "DeterministicModel", ",", "env", ":", "BaseModelBasedEnv", ",", "n_envs", ":", "int", ",", "opt_model", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_envs", "=", "n_envs", "\n", "self", ".", "observation_space", "=", "env", ".", "observation_space", "# ???", "\n", "\n", "dim_state", "=", "env", ".", "observation_space", ".", "shape", "[", "0", "]", "\n", "dim_action", "=", "env", ".", "action_space", ".", "shape", "[", "0", "]", "\n", "if", "opt_model", ":", "\n", "            ", "self", ".", "action_space", "=", "Box", "(", "low", "=", "np", ".", "r_", "[", "env", ".", "action_space", ".", "low", ",", "np", ".", "zeros", "(", "dim_state", ")", "-", "1.", "]", ",", "\n", "high", "=", "np", ".", "r_", "[", "env", ".", "action_space", ".", "high", ",", "np", ".", "zeros", "(", "dim_state", ")", "+", "1.", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "action_space", "=", "env", ".", "action_space", "\n", "\n", "", "self", ".", "_opt_model", "=", "opt_model", "\n", "self", ".", "_model", "=", "model", "\n", "self", ".", "_env", "=", "env", "\n", "assert", "np", ".", "allclose", "(", "self", ".", "action_space", ".", "low", ",", "-", "1.", ")", "and", "np", ".", "allclose", "(", "self", ".", "action_space", ".", "high", ",", "1.", ")", "\n", "\n", "self", ".", "_states", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_envs", ",", "dim_state", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.step": [[31, 42], ["virtual_env.VirtualEnv._model.get_next_states", "virtual_env.VirtualEnv._env.mb_step", "virtual_env.VirtualEnv._states.copy", "range"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.model.oracle_model.OracleModel.get_next_states", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.mb_step", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "if", "self", ".", "_opt_model", ":", "\n", "            ", "actions", "=", "actions", "[", "...", ",", ":", "self", ".", "_env", ".", "action_space", ".", "shape", "[", "0", "]", "]", "\n", "\n", "# next_states = self._model.eval('next_states', states=self._states, actions=actions)", "\n", "", "next_states", "=", "self", ".", "_model", ".", "get_next_states", "(", "self", ".", "_states", ",", "actions", ")", "\n", "rewards", ",", "dones", "=", "self", ".", "_env", ".", "mb_step", "(", "self", ".", "_states", ",", "actions", ",", "next_states", ")", "\n", "dones", "=", "dones", "&", "False", "\n", "\n", "self", ".", "_states", "=", "next_states", "\n", "return", "self", ".", "_states", ".", "copy", "(", ")", ",", "rewards", ",", "dones", ",", "[", "{", "}", "for", "_", "in", "range", "(", "self", ".", "n_envs", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.reset": [[43, 45], ["virtual_env.VirtualEnv.partial_reset", "range"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "partial_reset", "(", "range", "(", "self", ".", "n_envs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.partial_reset": [[46, 64], ["numpy.array", "virtual_env.VirtualEnv._states.copy", "numpy.array.copy", "virtual_env.VirtualEnv._env.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["", "def", "partial_reset", "(", "self", ",", "indices", ")", ":", "\n", "        ", "\"\"\"\n            It can be a little bit tricky here. For any invertible\n            transformation, given the transformed states, we can easily\n            invert them to original state space. However, when the\n            transformation is costly and may not be invertible, it's\n            more difficult to compute the reward since in our\n            transformed dynamics, the reward function may not be well\n            defined. The best thing I can do is to use the inversion\n            to approximate the reward.\n        \"\"\"", "\n", "\n", "initial_states", "=", "np", ".", "array", "(", "[", "self", ".", "_env", ".", "reset", "(", ")", "for", "_", "in", "indices", "]", ")", "\n", "\n", "self", ".", "_states", "=", "self", ".", "_states", ".", "copy", "(", ")", "\n", "self", ".", "_states", "[", "indices", "]", "=", "initial_states", "\n", "\n", "return", "initial_states", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.set_state": [[65, 67], ["states.copy"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy"], ["", "def", "set_state", "(", "self", ",", "states", ")", ":", "\n", "        ", "self", ".", "_states", "=", "states", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.virtual_env.VirtualEnv.render": [[68, 70], ["None"], "methods", ["None"], ["", "def", "render", "(", "self", ",", "mode", "=", "'human'", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.__init__": [[7, 12], ["BaseBatchedEnv.__init__", "len", "make_env"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.make_env"], ["    ", "def", "__init__", "(", "self", ",", "make_envs", ")", ":", "\n", "        ", "envs", "=", "[", "make_env", "(", ")", "for", "make_env", "in", "make_envs", "]", "\n", "super", "(", ")", ".", "__init__", "(", "envs", "[", "0", "]", ")", "\n", "self", ".", "envs", "=", "envs", "\n", "self", ".", "n_envs", "=", "len", "(", "envs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.step": [[13, 22], ["zip", "env.step", "buf.append", "infos.append", "numpy.array", "zip"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "\n", "        ", "buf", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "env", ",", "action", "in", "zip", "(", "self", ".", "envs", ",", "actions", ")", ":", "\n", "            ", "next_state", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "action", ")", "\n", "buf", ".", "append", "(", "(", "next_state", ",", "reward", ",", "done", ")", ")", "\n", "infos", ".", "append", "(", "info", ")", "\n", "\n", "", "return", "[", "*", "(", "np", ".", "array", "(", "x", ")", "for", "x", "in", "zip", "(", "*", "buf", ")", ")", ",", "infos", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.reset": [[23, 25], ["batched_env.BatchedEnv.partial_reset", "range"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "partial_reset", "(", "range", "(", "self", ".", "n_envs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.partial_reset": [[26, 31], ["numpy.array", "states.append", "batched_env.BatchedEnv.envs[].reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["", "def", "partial_reset", "(", "self", ",", "indices", ")", ":", "\n", "        ", "states", "=", "[", "]", "\n", "for", "index", "in", "indices", ":", "\n", "            ", "states", ".", "append", "(", "self", ".", "envs", "[", "index", "]", ".", "reset", "(", ")", ")", "\n", "", "return", "np", ".", "array", "(", "states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.__repr__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f'Batch<{self.n_envs}x {self.env}>'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.batched_env.BatchedEnv.set_state": [[35, 37], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseBatchedEnv.step": [[11, 14], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseBatchedEnv.reset": [[15, 17], ["__init__.BaseBatchedEnv.partial_reset", "range"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseBatchedEnv.partial_reset": [[18, 21], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseBatchedEnv.set_state": [[22, 24], ["lunzi.log.warning"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseModelBasedEnv.mb_step": [[27, 30], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseModelBasedEnv.verify": [[31, 50], ["lunzi.Dataset", "__init__.BaseModelBasedEnv.reset", "range", "__init__.BaseModelBasedEnv.mb_step", "numpy.abs().max", "lunzi.log.info", "numpy.allclose", "lunzi.rl.gen_dtype", "__init__.BaseModelBasedEnv.action_space.sample", "__init__.BaseModelBasedEnv.step", "__init__.BaseModelBasedEnv.reset", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.mb_step", "home.repos.pwc.inspect_result.roosephu_boots.rl.utils.gen_dtype", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.abs"], []], "home.repos.pwc.inspect_result.roosephu_boots.envs.__init__.BaseModelBasedEnv.seed": [[51, 53], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.gym.ant.ModelBasedAntEnv._get_obs": [[8, 14], ["numpy.concatenate", "numpy.clip", "ant.ModelBasedAntEnv.get_body_com"], "methods", ["None"], ["    ", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "concatenate", "(", "[", "\n", "self", ".", "sim", ".", "data", ".", "qpos", ".", "flat", "[", "2", ":", "]", ",", "# 13", "\n", "self", ".", "sim", ".", "data", ".", "qvel", ".", "flat", ",", "# 14", "\n", "np", ".", "clip", "(", "self", ".", "sim", ".", "data", ".", "cfrc_ext", ",", "-", "1", ",", "1", ")", ".", "flat", ",", "# 84", "\n", "self", ".", "get_body_com", "(", "'torso'", ")", "[", ":", "1", "]", ",", "# 1", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.ant.ModelBasedAntEnv.step": [[16, 34], ["ant.ModelBasedAntEnv.do_simulation", "ant.ModelBasedAntEnv.state_vector", "ant.ModelBasedAntEnv._get_obs", "ant.ModelBasedAntEnv.get_body_com", "ant.ModelBasedAntEnv.get_body_com", "numpy.square().sum", "numpy.sum", "numpy.isfinite().all", "dict", "numpy.square", "numpy.square", "numpy.clip", "numpy.isfinite"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.gym.walker2d.ModelBasedWalker2dEnv._get_obs", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "step", "(", "self", ",", "a", ")", ":", "\n", "        ", "xposbefore", "=", "self", ".", "get_body_com", "(", "\"torso\"", ")", "[", "0", "]", "\n", "self", ".", "do_simulation", "(", "a", ",", "self", ".", "frame_skip", ")", "\n", "xposafter", "=", "self", ".", "get_body_com", "(", "\"torso\"", ")", "[", "0", "]", "\n", "forward_reward", "=", "(", "xposafter", "-", "xposbefore", ")", "/", "self", ".", "dt", "\n", "ctrl_cost", "=", ".5", "*", "np", ".", "square", "(", "a", ")", ".", "sum", "(", ")", "\n", "contact_cost", "=", "0.5", "*", "1e-3", "*", "np", ".", "sum", "(", "np", ".", "square", "(", "np", ".", "clip", "(", "self", ".", "sim", ".", "data", ".", "cfrc_ext", ",", "-", "1", ",", "1", ")", ")", ")", "\n", "survive_reward", "=", "1.0", "\n", "reward", "=", "forward_reward", "-", "ctrl_cost", "-", "contact_cost", "+", "survive_reward", "\n", "state", "=", "self", ".", "state_vector", "(", ")", "\n", "notdone", "=", "np", ".", "isfinite", "(", "state", ")", ".", "all", "(", ")", "and", "state", "[", "2", "]", ">=", "0.2", "and", "state", "[", "2", "]", "<=", "1.0", "\n", "done", "=", "not", "notdone", "\n", "ob", "=", "self", ".", "_get_obs", "(", ")", "\n", "return", "ob", ",", "reward", ",", "done", ",", "dict", "(", "\n", "reward_forward", "=", "forward_reward", ",", "\n", "reward_ctrl", "=", "-", "ctrl_cost", ",", "\n", "reward_contact", "=", "-", "contact_cost", ",", "\n", "reward_survive", "=", "survive_reward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.ant.ModelBasedAntEnv.mb_step": [[35, 47], ["numpy.square().sum", "numpy.sum", "numpy.square", "numpy.square", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "mb_step", "(", "self", ",", "states", ":", "np", ".", "ndarray", ",", "actions", ":", "np", ".", "ndarray", ",", "next_states", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "xposbefore", "=", "states", "[", ":", ",", "-", "1", "]", "\n", "xposafter", "=", "next_states", "[", ":", ",", "-", "1", "]", "\n", "forward_reward", "=", "(", "xposafter", "-", "xposbefore", ")", "/", "self", ".", "dt", "\n", "\n", "ctrl_cost", "=", ".5", "*", "np", ".", "square", "(", "actions", ")", ".", "sum", "(", "axis", "=", "-", "1", ")", "\n", "contact_cost", "=", "0.5", "*", "1e-3", "*", "np", ".", "sum", "(", "np", ".", "square", "(", "np", ".", "clip", "(", "next_states", "[", ":", ",", "27", ":", "111", "]", ",", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "survive_reward", "=", "1.0", "\n", "reward", "=", "forward_reward", "-", "ctrl_cost", "-", "contact_cost", "+", "survive_reward", "\n", "done", "=", "~", "(", "(", "next_states", "[", ":", ",", "0", "]", ">=", "0.2", ")", "&", "(", "next_states", "[", ":", ",", "0", "]", "<=", "1.0", ")", ")", "\n", "\n", "return", "reward", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.half_cheetah.ModelBasedHalfCheetahEnv._get_obs": [[8, 12], ["numpy.concatenate"], "methods", ["None"], ["    ", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "concatenate", "(", "[", "\n", "self", ".", "sim", ".", "data", ".", "qpos", ".", "flat", ",", "\n", "self", ".", "sim", ".", "data", ".", "qvel", ".", "flat", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.half_cheetah.ModelBasedHalfCheetahEnv.mb_step": [[14, 21], ["numpy.square().sum", "numpy.zeros_like", "numpy.square"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeros_like", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "mb_step", "(", "self", ",", "states", ",", "actions", ",", "next_states", ")", ":", "\n", "        ", "xposbefore", "=", "states", "[", ":", ",", "0", "]", "\n", "xposafter", "=", "next_states", "[", ":", ",", "0", "]", "\n", "reward_ctrl", "=", "-", "0.1", "*", "np", ".", "square", "(", "actions", ")", ".", "sum", "(", "axis", "=", "-", "1", ")", "\n", "reward_run", "=", "(", "xposafter", "-", "xposbefore", ")", "/", "self", ".", "dt", "\n", "reward", "=", "reward_ctrl", "+", "reward_run", "\n", "return", "reward", ",", "np", ".", "zeros_like", "(", "reward", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.half_cheetah.ModelBasedHalfCheetahEnv.set_observation": [[22, 26], ["half_cheetah.ModelBasedHalfCheetahEnv.sim.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "set_observation", "(", "self", ",", "obs", ")", ":", "\n", "        ", "self", ".", "sim", ".", "data", ".", "qpos", "[", ":", "]", "=", "obs", "[", ":", "9", "]", "\n", "self", ".", "sim", ".", "data", ".", "qvel", "[", ":", "]", "=", "obs", "[", "9", ":", "]", "\n", "self", ".", "sim", ".", "forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.humanoid.ModelBasedHumanoidEnv._get_obs": [[18, 23], ["gym.envs.mujoco.humanoid.mass_center", "super()._get_obs", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.gym.walker2d.ModelBasedWalker2dEnv._get_obs"], ["def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "data", "=", "self", ".", "sim", ".", "data", "\n", "center", "=", "mass_center", "(", "self", ".", "model", ",", "self", ".", "sim", ")", "\n", "obs", "=", "super", "(", ")", ".", "_get_obs", "(", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "obs", ",", "[", "center", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.humanoid.ModelBasedHumanoidEnv.mb_step": [[24, 36], ["numpy.minimum", "numpy.square().sum", "numpy.square().sum", "numpy.square", "numpy.square"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.minimum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "mb_step", "(", "self", ",", "states", ",", "actions", ",", "next_states", ")", ":", "\n", "        ", "pos_before", "=", "states", "[", ":", ",", "-", "1", "]", "\n", "pos_after", "=", "next_states", "[", ":", ",", "-", "1", "]", "\n", "alive_bonus", "=", "5.0", "\n", "lin_vel_cost", "=", "1.25", "*", "(", "pos_after", "-", "pos_before", ")", "/", "self", ".", "dt", "\n", "quad_ctrl_cost", "=", "0.1", "*", "np", ".", "square", "(", "actions", ")", ".", "sum", "(", "axis", "=", "-", "1", ")", "\n", "quad_impact_cost", "=", ".5e-6", "*", "np", ".", "square", "(", "states", "[", ":", ",", "292", ":", "376", "]", ")", ".", "sum", "(", "axis", "=", "-", "1", ")", "# cfrc_ext", "\n", "quad_impact_cost", "=", "np", ".", "minimum", "(", "quad_impact_cost", ",", "10", ")", "\n", "reward", "=", "lin_vel_cost", "-", "quad_ctrl_cost", "-", "quad_impact_cost", "+", "alive_bonus", "\n", "height", "=", "next_states", "[", "...", ",", "0", "]", "\n", "done", "=", "(", "height", "<", "1.0", ")", "|", "(", "height", ">", "2.0", ")", "\n", "return", "reward", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.walker2d.ModelBasedWalker2dEnv._get_obs": [[8, 12], ["numpy.concatenate().ravel", "numpy.concatenate"], "methods", ["None"], ["    ", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "qpos", "=", "self", ".", "sim", ".", "data", ".", "qpos", "\n", "qvel", "=", "self", ".", "sim", ".", "data", ".", "qvel", "\n", "return", "np", ".", "concatenate", "(", "[", "qpos", ",", "qvel", "]", ")", ".", "ravel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.walker2d.ModelBasedWalker2dEnv.mb_step": [[13, 22], ["numpy.square().sum", "numpy.square"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["", "def", "mb_step", "(", "self", ",", "states", ",", "actions", ",", "next_states", ")", ":", "\n", "        ", "posbefore", "=", "states", "[", ":", ",", "0", "]", "\n", "posafter", ",", "height", ",", "ang", "=", "next_states", "[", ":", ",", ":", "3", "]", ".", "T", "\n", "alive_bonus", "=", "1.0", "\n", "reward", "=", "(", "(", "posafter", "-", "posbefore", ")", "/", "self", ".", "dt", ")", "\n", "reward", "+=", "alive_bonus", "\n", "reward", "-=", "1e-3", "*", "np", ".", "square", "(", "actions", ")", ".", "sum", "(", "axis", "=", "-", "1", ")", "\n", "done", "=", "~", "(", "(", "height", ">", "0.8", ")", "&", "(", "height", "<", "2.0", ")", "&", "(", "ang", ">", "-", "1.0", ")", "&", "(", "ang", "<", "1.0", ")", ")", "\n", "return", "reward", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.gym.walker2d.ModelBasedWalker2dEnv.set_observation": [[23, 28], ["walker2d.ModelBasedWalker2dEnv.sim.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "set_observation", "(", "self", ",", "obs", ")", ":", "\n", "        ", "self", ".", "sim", ".", "data", ".", "qpos", "[", ":", "]", "=", "obs", "[", ":", "9", "]", "\n", "self", ".", "sim", ".", "data", ".", "qvel", "[", ":", "]", "=", "obs", "[", "9", ":", "]", "\n", "# self.model._compute_subtree()", "\n", "self", ".", "sim", ".", "forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._sample_n": [[7, 9], ["tensorflow.tanh", "super()._sample_n"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._sample_n"], ["    ", "def", "_sample_n", "(", "self", ",", "n", ",", "seed", "=", "None", ")", ":", "\n", "        ", "return", "tf", ".", "tanh", "(", "super", "(", ")", ".", "_sample_n", "(", "n", ",", "seed", "=", "seed", ")", ")", "#.clip_by_value(-0.999, 0.999)", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._mean": [[10, 12], ["tensorflow.tanh", "super()._mean"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._mean"], ["", "def", "_mean", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "tanh", "(", "super", "(", ")", ".", "_mean", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._log_prob": [[13, 16], ["tensorflow.atanh", "super()._log_prob", "tensorflow.log", "tensorflow.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.atanh", "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._log_prob", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "_log_prob", "(", "self", ",", "a", ":", "Tensor", ")", ":", "\n", "        ", "u", "=", "tf", ".", "atanh", "(", "a", ")", "\n", "return", "super", "(", ")", ".", "_log_prob", "(", "u", ")", "-", "tf", ".", "log", "(", "tf", ".", "maximum", "(", "1", "-", "a", "*", "a", ",", "1e-6", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal.sample_with_log_prob": [[17, 22], ["tensorflow.squeeze", "tensorflow.tanh", "tensorflow.reduce_sum", "super()._sample_n", "super()._log_prob", "tensorflow.log", "tensorflow.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.squeeze", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._sample_n", "home.repos.pwc.inspect_result.roosephu_boots.distributions.tanh_normal.TanhNormal._log_prob", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "sample_with_log_prob", "(", "self", ",", "n", "=", "1", ",", "seed", "=", "None", ")", ":", "\n", "        ", "u", "=", "tf", ".", "squeeze", "(", "super", "(", ")", ".", "_sample_n", "(", "n", ",", "seed", "=", "seed", ")", ")", "\n", "a", "=", "tf", ".", "tanh", "(", "u", ")", "\n", "log_probs", "=", "tf", ".", "reduce_sum", "(", "super", "(", ")", ".", "_log_prob", "(", "u", ")", "-", "tf", ".", "log", "(", "tf", ".", "maximum", "(", "1", "-", "a", "*", "a", ",", "1e-6", ")", ")", ",", "axis", "=", "1", ")", "\n", "return", "a", ",", "log_probs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.__init__": [[16, 30], ["lunzi.Module.__init__", "tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.", "tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.distribution.sample", "tensorflow.placeholder", "tensorflow.placeholder", "lunzi.MultiLayerPerceptron", "lunzi.MultiLayerPerceptron", "lunzi.MultiLayerPerceptron"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample"], ["def", "__init__", "(", "self", ",", "dim_state", ":", "int", ",", "dim_action", ":", "int", ",", "hidden_sizes", ":", "List", "[", "int", "]", ",", "normalizer", ":", "Normalizer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "self", ".", "dim_action", "=", "dim_action", "\n", "self", ".", "hidden_sizes", "=", "hidden_sizes", "\n", "self", ".", "normalizer", "=", "normalizer", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "dim_state", "]", ",", "name", "=", "'states'", ")", "\n", "self", ".", "op_actions_", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "dim_action", "]", ",", "name", "=", "'actions'", ")", "\n", "\n", "self", ".", "net", "=", "lz", ".", "MultiLayerPerceptron", "(", "[", "dim_state", ",", "*", "self", ".", "hidden_sizes", ",", "dim_action", "*", "2", "]", ",", "activation", "=", "nn", ".", "ReLU", ")", "\n", "\n", "", "self", ".", "distribution", "=", "self", "(", "self", ".", "op_states", ")", "\n", "self", ".", "op_actions", "=", "self", ".", "distribution", ".", "sample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.forward": [[31, 39], ["tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.net", "tensorflow.clip_by_value", "boots.TanhNormal", "tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.normalizer", "tensorflow.exp"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_value", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.exp"], ["", "def", "forward", "(", "self", ",", "states", ")", ":", "\n", "        ", "if", "self", ".", "normalizer", "is", "not", "None", ":", "\n", "            ", "states", "=", "self", ".", "normalizer", "(", "states", ")", "\n", "", "outputs", "=", "self", ".", "net", "(", "states", ")", "\n", "actions_mean", ",", "actions_log_std", "=", "outputs", "[", ":", ",", ":", "self", ".", "dim_action", "]", ",", "outputs", "[", ":", ",", "self", ".", "dim_action", ":", "]", "\n", "actions_log_std", "=", "tf", ".", "clip_by_value", "(", "actions_log_std", ",", "TanhGaussianMLPPolicy", ".", "MIN_LOG", ",", "TanhGaussianMLPPolicy", ".", "MAX_LOG", ")", "\n", "distribution", "=", "TanhNormal", "(", "actions_mean", ",", "tf", ".", "exp", "(", "actions_log_std", ")", ")", "\n", "return", "distribution", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.get_actions": [[40, 42], ["tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.eval"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval"], ["", "def", "get_actions", "(", "self", ",", "states", ")", ":", "\n", "        ", "return", "self", ".", "eval", "(", "'actions'", ",", "states", "=", "states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy.copy": [[43, 45], ["tanh_gaussian_mlp_policy.TanhGaussianMLPPolicy"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "TanhGaussianMLPPolicy", "(", "self", ".", "dim_state", ",", "self", ".", "dim_action", ",", "self", ".", "hidden_sizes", ",", "self", ".", "normalizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.DetTanhPolicy.__init__": [[48, 53], ["super().__init__", "policy.distribution.mean"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "policy", ":", "TanhGaussianMLPPolicy", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "op_states", "=", "policy", ".", "op_states", "\n", "self", ".", "op_actions", "=", "policy", ".", "distribution", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.DetTanhPolicy.get_actions": [[54, 56], ["lunzi.make_method", "lunzi.make_method", "lunzi.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'actions'", ")", "\n", "def", "get_actions", "(", "self", ",", "states", ")", ":", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.tanh_gaussian_mlp_policy.DetTanhPolicy.forward": [[57, 59], ["tensorflow.tanh", "tanh_gaussian_mlp_policy.DetTanhPolicy.policy().mean", "tanh_gaussian_mlp_policy.DetTanhPolicy.policy"], "methods", ["None"], ["def", "forward", "(", "self", ",", "states", ")", ":", "\n", "        ", "return", "tf", ".", "tanh", "(", "self", ".", "policy", "(", "states", ")", ".", "mean", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.policy.uniform_policy.UniformPolicy.__init__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dim_action", ")", ":", "\n", "        ", "self", ".", "dim_action", "=", "dim_action", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.policy.uniform_policy.UniformPolicy.get_actions": [[9, 11], ["numpy.random.uniform"], "methods", ["None"], ["", "def", "get_actions", "(", "self", ",", "states", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "uniform", "(", "-", "1.", ",", "1.", ",", "states", ".", "shape", "[", ":", "-", "1", "]", "+", "(", "self", ".", "dim_action", ",", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.FLAGS.finalize": [[22, 25], ["None"], "methods", ["None"], ["@", "classmethod", "\n", "def", "finalize", "(", "cls", ")", ":", "\n", "        ", "cls", ".", "horizon", "=", "cls", ".", "h_plan", "+", "cls", ".", "h_sim", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.__init__": [[30, 52], ["super().__init__", "cem_planner.CEMPlanner.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["@", "FLAGS", ".", "inject", "\n", "def", "__init__", "(", "self", ",", "dim_state", ",", "dim_action", ",", "model", ",", "policy", ":", "TanhGaussianMLPPolicy", ",", "qfn", ",", "\n", "*", ",", "init_std", ",", "horizon", ",", "n_candidates", ",", "h_plan", ",", "h_sim", ",", "n_cem_iters", ",", "n_elites", ",", "alpha", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "qfn", "=", "qfn", "\n", "\n", "self", ".", "dim_state", "=", "dim_state", "\n", "self", ".", "dim_action", "=", "dim_action", "\n", "\n", "self", ".", "n_steps", "=", "0", "\n", "self", ".", "init_std", "=", "init_std", "\n", "self", ".", "horizon", "=", "h_plan", "+", "h_sim", "\n", "self", ".", "h_plan", "=", "h_plan", "\n", "self", ".", "h_sim", "=", "h_sim", "\n", "self", ".", "n_cem_iters", "=", "n_cem_iters", "\n", "self", ".", "n_elites", "=", "n_elites", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "n_candidates", "=", "n_candidates", "\n", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.build": [[53, 78], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "reparametrize.reparametrize.reparametrize", "namedtuple", "range", "reversed", "cem_planner.CEMPlanner.policy", "reparametrize.reparametrize.reparametrize", "cem_planner.CEMPlanner.model", "steps.append", "range", "cem_planner.CEMPlanner.policy", "namedtuple.", "cem_planner.CEMPlanner.qfn", "tensorflow.cast"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.planner.reparametrize.reparametrize", "home.repos.pwc.inspect_result.roosephu_boots.planner.reparametrize.reparametrize", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cast"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "dim_state", "]", ")", "\n", "self", ".", "op_xis", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "self", ".", "horizon", ",", "None", ",", "self", ".", "dim_action", "]", ")", "\n", "self", ".", "op_best_xi", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "dim_action", "]", ")", "\n", "self", ".", "op_actions", "=", "reparametrize", "(", "self", ".", "policy", "(", "self", ".", "op_states", ")", ",", "self", ".", "op_best_xi", ")", "\n", "\n", "states", "=", "self", ".", "op_states", "\n", "from", "collections", "import", "namedtuple", "\n", "Step", "=", "namedtuple", "(", "'Step'", ",", "'reward done'", ")", "\n", "\n", "steps", "=", "[", "]", "\n", "returns", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "horizon", ")", ":", "\n", "            ", "actions", "=", "reparametrize", "(", "self", ".", "policy", "(", "states", ")", ",", "self", ".", "op_xis", "[", "i", "]", ")", "\n", "next_states", ",", "rewards", ",", "dones", "=", "self", ".", "model", "(", "states", ",", "actions", ")", "\n", "steps", ".", "append", "(", "Step", "(", "rewards", ",", "dones", ")", ")", "\n", "states", "=", "next_states", "\n", "if", "i", "==", "self", ".", "horizon", "-", "1", ":", "\n", "                ", "returns", "=", "self", ".", "qfn", "(", "states", ",", "actions", ")", "\n", "\n", "", "", "for", "t", "in", "reversed", "(", "range", "(", "self", ".", "horizon", "-", "1", ")", ")", ":", "\n", "            ", "returns", "=", "(", "1.", "-", "tf", ".", "cast", "(", "steps", "[", "t", "]", ".", "done", ",", "tf", ".", "float32", ")", ")", "*", "returns", "+", "steps", "[", "t", "]", ".", "reward", "\n", "\n", "", "self", ".", "op_returns", "=", "returns", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.forward": [[79, 81], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.get_actions": [[82, 107], ["len", "numpy.repeat", "numpy.zeros", "range", "cem_planner.CEMPlanner.eval", "numpy.random.randn", "cem_planner.CEMPlanner.eval", "numpy.argsort", "_log.info", "cem_planner.CEMPlanner.mu.reshape", "cem_planner.CEMPlanner.sigma.reshape", "numpy.mean", "numpy.std", "numpy.round", "numpy.round", "numpy.round"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.round", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.round", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.round"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "get_actions", "(", "self", ",", "states", ",", "*", ",", "_log", ")", ":", "\n", "        ", "self", ".", "n_steps", "+=", "1", "\n", "n", "=", "len", "(", "states", ")", "\n", "assert", "n", "==", "1", "\n", "repeated_states", "=", "np", ".", "repeat", "(", "states", ",", "self", ".", "n_candidates", ",", "axis", "=", "0", ")", "\n", "\n", "best_xi", "=", "np", ".", "zeros", "(", "[", "1", ",", "self", ".", "dim_action", "]", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "n_cem_iters", ")", ":", "\n", "            ", "candidates", "=", "np", ".", "random", ".", "randn", "(", "self", ".", "h_plan", "+", "self", ".", "h_sim", ",", "self", ".", "n_candidates", ",", "self", ".", "dim_action", ")", "\n", "candidates", "[", ":", "self", ".", "h_plan", "]", "=", "candidates", "[", ":", "self", ".", "h_plan", "]", "*", "self", ".", "sigma", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "self", ".", "dim_action", ")", ")", "+", "self", ".", "mu", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "self", ".", "dim_action", ")", ")", "\n", "\n", "returns", "=", "self", ".", "eval", "(", "'returns'", ",", "states", "=", "repeated_states", ",", "xis", "=", "candidates", ")", "\n", "indices", "=", "np", ".", "argsort", "(", "returns", ")", "\n", "top_k", "=", "indices", "[", "-", "self", ".", "n_elites", ":", "]", "\n", "self", ".", "mu", "=", "(", "1", "-", "self", ".", "alpha", ")", "*", "self", ".", "mu", "+", "self", ".", "alpha", "*", "np", ".", "mean", "(", "candidates", "[", ":", "self", ".", "h_plan", ",", "top_k", ",", ":", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "sigma", "=", "(", "1", "-", "self", ".", "alpha", ")", "*", "self", ".", "sigma", "+", "self", ".", "alpha", "*", "np", ".", "std", "(", "candidates", "[", ":", "self", ".", "h_plan", ",", "top_k", ",", ":", "]", ",", "axis", "=", "1", ")", "\n", "\n", "best_xi", "=", "candidates", "[", "0", ",", "[", "indices", "[", "-", "1", "]", "]", "]", "\n", "", "actions", "=", "self", ".", "eval", "(", "'actions'", ",", "states", "=", "states", ",", "best_xi", "=", "best_xi", ")", "\n", "if", "self", ".", "n_steps", "%", "10000", "==", "0", ":", "\n", "            ", "_log", ".", "info", "(", "f'step {self.n_steps}, first sigma mu: {np.round(self.mu[0], 3)}, {np.round(self.sigma[0], 3)}, '", "\n", "f'actions = {np.round(actions, 3)}'", ")", "\n", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.reset": [[108, 111], ["numpy.zeros", "numpy.ones"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "indices", "=", "None", ")", ":", "\n", "        ", "self", ".", "mu", "=", "np", ".", "zeros", "(", "[", "self", ".", "h_plan", ",", "self", ".", "dim_action", "]", ")", "\n", "self", ".", "sigma", "=", "np", ".", "ones", "(", "[", "self", ".", "h_plan", ",", "self", ".", "dim_action", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.cem_planner.CEMPlanner.step": [[112, 116], ["numpy.vstack", "numpy.vstack", "numpy.zeros", "numpy.ones"], "methods", ["None"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "h_plan", "!=", "0", ":", "\n", "            ", "self", ".", "mu", "=", "np", ".", "vstack", "(", "[", "self", ".", "mu", "[", "1", ":", ",", ":", "]", ",", "np", ".", "zeros", "(", "(", "1", ",", "self", ".", "dim_action", ")", ")", "]", ")", "\n", "self", ".", "sigma", "=", "np", ".", "vstack", "(", "[", "self", ".", "sigma", "[", "1", ":", ",", ":", "]", ",", "np", ".", "ones", "(", "[", "1", ",", "self", ".", "dim_action", "]", ")", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.planner.reparametrize.reparametrize": [[7, 10], ["tensorflow_probability.tfp.distributions.Normal"], "function", ["None"], ["@", "singledispatch", "\n", "def", "reparametrize", "(", "distribution", ",", "xi", ")", "->", "tf", ".", "Tensor", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.planner.reparametrize._": [[18, 22], ["reparametrize.register"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.register"], ["", "@", "reparametrize", ".", "register", "(", "tfp", ".", "distributions", ".", "Normal", ")", "\n", "def", "_", "(", "distribution", ",", "xi", ")", ":", "\n", "    ", "loc", ",", "scale", "=", "distribution", ".", "loc", ",", "distribution", ".", "scale", "\n", "return", "loc", "+", "scale", "*", "xi", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.v_function.mlp_v_function.MLPVFunction.__init__": [[9, 16], ["super().__init__", "lunzi.MultiLayerPerceptron", "lunzi.MultiLayerPerceptron", "tensorflow.placeholder", "mlp_v_function.MLPVFunction.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["    ", "def", "__init__", "(", "self", ",", "dim_state", ":", "int", ",", "hidden_sizes", ":", "List", "[", "int", "]", ",", "normalizer", ":", "nn", ".", "Module", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mlp", "=", "lz", ".", "MultiLayerPerceptron", "(", "(", "dim_state", ",", "*", "hidden_sizes", ",", "1", ")", ",", "nn", ".", "ReLU", ",", "squeeze", "=", "True", ")", "\n", "self", ".", "normalizer", "=", "normalizer", "\n", "self", ".", "op_states", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "dim_state", "]", ")", "\n", "self", ".", "op_values", "=", "self", ".", "forward", "(", "self", ".", "op_states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.v_function.mlp_v_function.MLPVFunction.forward": [[17, 21], ["mlp_v_function.MLPVFunction.mlp", "mlp_v_function.MLPVFunction.normalizer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "states", ")", ":", "\n", "        ", "if", "self", ".", "normalizer", "is", "not", "None", ":", "\n", "            ", "states", "=", "self", ".", "normalizer", "(", "states", ")", "\n", "", "return", "self", ".", "mlp", "(", "states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.v_function.mlp_v_function.MLPVFunction.get_values": [[22, 24], ["lunzi.make_method", "lunzi.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "nn", ".", "make_method", "(", "fetch", "=", "'values'", ")", "\n", "def", "get_values", "(", "self", ",", "states", ")", ":", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.v_function.mlp_v_function.MLPVFunction.copy": [[25, 27], ["mlp_v_function.MLPVFunction"], "methods", ["None"], ["def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "MLPVFunction", "(", "self", ".", "mlp", ".", "blocks", "[", "0", "]", ",", "self", ".", "mlp", ".", "blocks", "[", "1", ":", "-", "1", "]", ",", "self", ".", "normalizer", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.FLAGS.finalizer": [[51, 55], ["None"], "methods", ["None"], ["@", "classmethod", "\n", "def", "finalizer", "(", "cls", ")", ":", "\n", "        ", "cls", ".", "model", ".", "n_dev_iters", "=", "1000", "\n", "cls", ".", "SAC", ".", "batch_size", "=", "cls", ".", "batch", ".", "n_real", "+", "cls", ".", "batch", ".", "n_starts", "*", "cls", ".", "batch", ".", "horizon", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner": [[57, 60], ["lunzi.rl.Runner", "boots.envs.batched_env.BatchedEnv"], "function", ["None"], ["", "", "@", "FLAGS", ".", "inject", "\n", "def", "make_real_runner", "(", "*", ",", "n_envs", ",", "env", ")", ":", "\n", "    ", "return", "rl", ".", "Runner", "(", "BatchedEnv", "(", "[", "make_env", "]", "*", "n_envs", ")", ",", "max_steps", "=", "env", "[", "'max_steps'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.evaluate": [[62, 73], ["runner.reset", "runner.run", "numpy.array", "_log.info", "_writer.add_scalar", "_writer.add_scalar", "_writer.add_scalar", "numpy.mean", "numpy.std", "len", "len"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run"], ["", "@", "FLAGS", ".", "inject", "\n", "def", "evaluate", "(", "step", ",", "settings", ",", "tag", ",", "*", ",", "n_test_samples", ",", "_log", ",", "_writer", ")", ":", "\n", "    ", "for", "runner", ",", "policy", ",", "name", "in", "settings", ":", "\n", "        ", "runner", ".", "reset", "(", ")", "\n", "_", ",", "ep_infos", "=", "runner", ".", "run", "(", "policy", ",", "n_test_samples", ")", "\n", "returns", "=", "np", ".", "array", "(", "[", "ep_info", "[", "'return'", "]", "for", "ep_info", "in", "ep_infos", "]", ")", "\n", "mean", ",", "std", "=", "np", ".", "mean", "(", "returns", ")", ",", "np", ".", "std", "(", "returns", ")", "\n", "_log", ".", "info", "(", "f'# {step}, Tag = {tag}, Reward on {name} ({len(returns)} episodes): {mean:.6f} \u00b1 {std:.6f}'", ")", "\n", "_writer", ".", "add_scalar", "(", "f'{tag}/{name}/reward/mean'", ",", "mean", ",", "global_step", "=", "step", ")", "\n", "_writer", ".", "add_scalar", "(", "f'{tag}/{name}/reward/std'", ",", "std", ",", "global_step", "=", "step", ")", "\n", "_writer", ".", "add_scalar", "(", "f'{tag}/{name}/reward/n'", ",", "len", "(", "returns", ")", ",", "global_step", "=", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.train_mb_sac": [[75, 186], ["lunzi.main", "tensorflow.Session().__enter__", "boots.partial_envs.make_env", "int", "int", "boots.partial_envs.make_env.verify", "boots.normalizer.Normalizers", "lunzi.rl.gen_dtype", "TanhGaussianMLPPolicy", "DetTanhPolicy", "range", "EnsembleModel", "boots.envs.virtual_env.VirtualEnv", "lunzi.rl.Runner", "lunzi.nn.ModuleList", "MinQFunction().build", "SoftActorCritic", "tensorflow.get_default_session().run", "CEMPlanner().build", "lunzi.nn.ModuleDict", "_log.info", "_log.warning", "datasets[].extend", "datasets[].extend", "boots.normalizer.Normalizers.update", "_log.warning", "_log.warning", "range", "numpy.prod", "numpy.prod", "lunzi.ExtendableDataset", "lunzi.ExtendableDataset", "DeterministicModel", "DeterministicModelTrainer", "models.append", "model_trainers.append", "boots.partial_envs.make_env", "tensorflow.global_variables_initializer", "mb_sac.make_real_runner", "mb_sac.make_real_runner", "mb_sac.make_real_runner", "mb_sac.make_real_runner", "mb_sac.make_real_runner", "DeterministicModelTrainer.pretrain", "runners[].run", "datasets[].extend", "datasets[].extend", "boots.normalizer.Normalizers.update", "range", "tensorflow.Session", "MLPQFunction", "MLPQFunction", "MinQFunction", "tensorflow.get_default_session", "CEMPlanner", "runners[].run", "runners[].run", "mb_sac.evaluate", "range", "datasets[].sample", "SoftActorCritic.train", "_fs.save", "UniformPolicy", "UniformPolicy", "runners[].run", "runners[].set_state", "numpy.concatenate().astype().view", "nn.ModuleDict.state_dict", "_fs.save", "boots.utils.get_tf_config", "DeterministicModelTrainer.step", "datasets[].sample", "runners[].run", "nn.ModuleDict.state_dict", "_fs.save", "numpy.concatenate().astype", "nn.ModuleDict.state_dict", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.main", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.TimerContext.__enter__", "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.make_env", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.verify", "home.repos.pwc.inspect_result.roosephu_boots.rl.utils.gen_dtype", "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.build", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.build", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.boots.partial_envs.make_env", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.make_real_runner", "home.repos.pwc.inspect_result.roosephu_boots.model.deterministic_model.DeterministicModelTrainer.pretrain", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.examples.mb_sac.evaluate", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample", "home.repos.pwc.inspect_result.roosephu_boots.algorithm.sac.SoftActorCritic.train", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.set_state", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save", "home.repos.pwc.inspect_result.roosephu_boots.utils.tf_utils.get_tf_config", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict"], ["", "", "@", "lz", ".", "main", "(", "FLAGS", ")", "\n", "@", "FLAGS", ".", "inject", "\n", "def", "train_mb_sac", "(", "*", ",", "SAC", ",", "_log", ",", "_fs", ")", ":", "\n", "    ", "tf", ".", "Session", "(", "config", "=", "get_tf_config", "(", ")", ")", ".", "__enter__", "(", ")", "\n", "\n", "env", "=", "make_env", "(", ")", "\n", "dim_state", "=", "int", "(", "np", ".", "prod", "(", "env", ".", "observation_space", ".", "shape", ")", ")", "\n", "dim_action", "=", "int", "(", "np", ".", "prod", "(", "env", ".", "action_space", ".", "shape", ")", ")", "\n", "env", ".", "verify", "(", ")", "\n", "\n", "normalizers", "=", "Normalizers", "(", "dim_action", "=", "dim_action", ",", "dim_state", "=", "dim_state", ",", "decay", "=", "FLAGS", ".", "normalizer_decay", ")", "\n", "net_normalizer", "=", "normalizers", ".", "state", "if", "FLAGS", ".", "use_normalizer", "else", "None", "\n", "\n", "dtype", "=", "rl", ".", "gen_dtype", "(", "env", ",", "'state action next_state reward done timeout'", ")", "\n", "datasets", "=", "{", "\n", "'train'", ":", "lz", ".", "ExtendableDataset", "(", "dtype", ",", "FLAGS", ".", "max_buf_size", ")", ",", "\n", "'dev'", ":", "lz", ".", "ExtendableDataset", "(", "dtype", ",", "FLAGS", ".", "n_dev_size", "*", "2", ")", ",", "\n", "}", "\n", "\n", "policy", "=", "TanhGaussianMLPPolicy", "(", "dim_state", ",", "dim_action", ",", "FLAGS", ".", "policy_hidden_sizes", ",", "normalizer", "=", "net_normalizer", ")", "\n", "det_policy", "=", "DetTanhPolicy", "(", "policy", ")", "\n", "models", "=", "[", "]", "\n", "model_trainers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "FLAGS", ".", "n_model_ensemble", ")", ":", "\n", "        ", "model", "=", "DeterministicModel", "(", "dim_state", ",", "dim_action", ",", "normalizers", ")", "\n", "model_trainer", "=", "DeterministicModelTrainer", "(", "model", ",", "dim_state", ",", "dim_action", ",", "normalizers", ",", "datasets", "=", "datasets", ")", "\n", "models", ".", "append", "(", "model", ")", "\n", "model_trainers", ".", "append", "(", "model_trainer", ")", "\n", "", "ensemble", "=", "EnsembleModel", "(", "models", ",", "dim_state", ")", "\n", "\n", "virt_env", "=", "VirtualEnv", "(", "ensemble", ",", "make_env", "(", ")", ",", "FLAGS", ".", "batch", ".", "n_starts", ")", "\n", "virt_runner", "=", "rl", ".", "Runner", "(", "virt_env", ",", "FLAGS", ".", "env", ".", "max_steps", ")", "\n", "# if FLAGS.batch.horizon > 0:", "\n", "#     virt_runner = VirtualRunner(dim_state, ensemble, det_policy, FLAGS.batch.horizon, dtype).build()", "\n", "qfns", "=", "nn", ".", "ModuleList", "(", "[", "\n", "MLPQFunction", "(", "dim_state", ",", "dim_action", ",", "FLAGS", ".", "qfn_hidden_sizes", ",", "normalizer", "=", "net_normalizer", ")", ",", "\n", "MLPQFunction", "(", "dim_state", ",", "dim_action", ",", "FLAGS", ".", "qfn_hidden_sizes", ",", "normalizer", "=", "net_normalizer", ")", ",", "\n", "]", ")", "\n", "min_qfn", "=", "MinQFunction", "(", "dim_state", ",", "dim_action", ",", "qfns", ")", ".", "build", "(", ")", "\n", "\n", "algo", "=", "SoftActorCritic", "(", "qfns", ",", "policy", ",", "dim_state", ",", "dim_action", ")", "\n", "\n", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "planner", "=", "CEMPlanner", "(", "dim_state", ",", "dim_action", ",", "model", ",", "policy", ",", "min_qfn", ")", ".", "build", "(", ")", "\n", "behavior_policy", "=", "policy", "\n", "\n", "runners", "=", "{", "\n", "'collect'", ":", "make_real_runner", "(", "n_envs", "=", "1", ")", ",", "\n", "'dev'", ":", "make_real_runner", "(", "n_envs", "=", "1", ")", ",", "\n", "'eval/policy'", ":", "make_real_runner", "(", "n_envs", "=", "4", ")", ",", "\n", "'eval/det-policy'", ":", "make_real_runner", "(", "n_envs", "=", "4", ")", ",", "\n", "'eval/boots'", ":", "make_real_runner", "(", "n_envs", "=", "1", ")", ",", "\n", "'expand'", ":", "virt_runner", ",", "\n", "}", "\n", "settings", "=", "[", "\n", "(", "runners", "[", "'eval/policy'", "]", ",", "policy", ",", "'policy'", ")", ",", "\n", "(", "runners", "[", "'eval/det-policy'", "]", ",", "det_policy", ",", "'det-policy'", ")", ",", "\n", "(", "runners", "[", "'eval/boots'", "]", ",", "planner", ",", "'boots'", ")", ",", "\n", "]", "\n", "\n", "saver", "=", "nn", ".", "ModuleDict", "(", "{", "'policy'", ":", "policy", ",", "'model'", ":", "ensemble", ",", "'qfns'", ":", "qfns", "}", ")", "\n", "_log", ".", "info", "(", "saver", ")", "\n", "\n", "_log", ".", "warning", "(", "\"Collect random trajectory...\"", ")", "\n", "datasets", "[", "'train'", "]", ".", "extend", "(", "runners", "[", "'collect'", "]", ".", "run", "(", "UniformPolicy", "(", "dim_action", ")", ",", "FLAGS", ".", "n_expl_samples", ")", "[", "0", "]", ")", "\n", "datasets", "[", "'dev'", "]", ".", "extend", "(", "runners", "[", "'dev'", "]", ".", "run", "(", "UniformPolicy", "(", "dim_action", ")", ",", "FLAGS", ".", "n_expl_samples", ")", "[", "0", "]", ")", "\n", "normalizers", ".", "update", "(", "datasets", "[", "'train'", "]", "[", ":", "FLAGS", "[", "'n_expl_samples'", "]", "]", ")", "\n", "\n", "_log", ".", "warning", "(", "\"Pretraining model...\"", ")", "\n", "for", "model_trainer", "in", "model_trainers", ":", "\n", "        ", "model_trainer", ".", "pretrain", "(", ")", "\n", "\n", "", "_log", ".", "warning", "(", "\"Start training...\"", ")", "\n", "for", "T", "in", "range", "(", "FLAGS", ".", "n_expl_samples", ",", "FLAGS", ".", "n_iters", ")", ":", "\n", "        ", "if", "T", "%", "FLAGS", ".", "n_eval_iters", "==", "0", ":", "\n", "            ", "evaluate", "(", "T", ",", "settings", ",", "'episode'", ")", "\n", "\n", "# collect data", "\n", "", "recent_train_set", ",", "ep_infos", "=", "runners", "[", "'collect'", "]", ".", "run", "(", "behavior_policy", ",", "FLAGS", ".", "n_train_samples", ")", "\n", "datasets", "[", "'train'", "]", ".", "extend", "(", "recent_train_set", ")", "\n", "datasets", "[", "'dev'", "]", ".", "extend", "(", "runners", "[", "'dev'", "]", ".", "run", "(", "policy", ",", "FLAGS", ".", "n_dev_samples", ")", "[", "0", "]", ")", "\n", "\n", "normalizers", ".", "update", "(", "recent_train_set", ")", "\n", "\n", "n_policy_iters", "=", "FLAGS", ".", "batch", ".", "n_policy_grad_iters", "\n", "n_model_iters", "=", "(", "FLAGS", ".", "batch", ".", "n_model_grad_iters", "+", "n_policy_iters", "-", "1", ")", "//", "n_policy_iters", "\n", "for", "_", "in", "range", "(", "n_policy_iters", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "n_model_iters", ")", ":", "\n", "                ", "for", "model_trainer", "in", "model_trainers", ":", "\n", "                    ", "model_trainer", ".", "step", "(", ")", "\n", "\n", "", "", "real_samples", "=", "datasets", "[", "'train'", "]", ".", "sample", "(", "FLAGS", ".", "batch", ".", "n_real", ")", "\n", "if", "FLAGS", ".", "batch", ".", "horizon", ">", "0", ":", "\n", "                ", "fake_starts", "=", "datasets", "[", "'train'", "]", ".", "sample", "(", "FLAGS", ".", "batch", ".", "n_starts", ")", "[", "'state'", "]", "\n", "runners", "[", "'expand'", "]", ".", "set_state", "(", "fake_starts", ")", "\n", "rollout_policy", "=", "policy", "\n", "fake_samples", "=", "runners", "[", "'expand'", "]", ".", "run", "(", "rollout_policy", ",", "FLAGS", ".", "batch", ".", "n_starts", "*", "FLAGS", ".", "batch", ".", "horizon", ")", "[", "0", "]", "\n", "samples", "=", "np", ".", "concatenate", "(", "[", "real_samples", ",", "fake_samples", "]", ")", ".", "astype", "(", "fake_samples", ".", "dtype", ")", ".", "view", "(", "lz", ".", "Dataset", ")", "\n", "", "else", ":", "\n", "                ", "samples", "=", "real_samples", "\n", "\n", "", "algo", ".", "train", "(", "samples", ")", "\n", "\n", "", "if", "T", "%", "FLAGS", ".", "n_save_iters", "==", "0", ":", "\n", "            ", "t", "=", "T", "//", "FLAGS", ".", "n_save_iters", "\n", "_fs", ".", "save", "(", "'$LOGDIR/final.npy'", ",", "saver", ".", "state_dict", "(", ")", ")", "\n", "if", "FLAGS", ".", "saving_schedule", "==", "'exp'", "and", "t", "&", "(", "t", "-", "1", ")", "==", "0", ":", "\n", "                ", "_fs", ".", "save", "(", "f'$LOGDIR/stage-{T}.npy'", ",", "saver", ".", "state_dict", "(", ")", ")", "\n", "", "elif", "FLAGS", ".", "saving_schedule", "==", "'every'", ":", "\n", "                ", "_fs", ".", "save", "(", "f'$LOGDIR/stage-{T}.npy'", ",", "saver", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.abs": [[4, 5], ["None"], "methods", ["None"], ["class", "Tensor", "(", "tf", ".", "Tensor", ")", ":", "\n", "    ", "pass", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.acos": [[5, 6], ["None"], "methods", ["None"], ["    ", "pass", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.acosh": [[6, 7], ["None"], "methods", ["None"], ["", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.add": [[7, 8], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.angle": [[8, 9], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.argmax": [[9, 10], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.argmin": [[10, 11], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.asin": [[11, 12], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.asinh": [[12, 13], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.atan": [[13, 14], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.atan2": [[14, 15], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.atanh": [[15, 16], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.betainc": [[16, 17], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cast": [[17, 18], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.ceil": [[18, 19], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.check_numerics": [[19, 20], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_average_norm": [[20, 21], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_norm": [[21, 22], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.clip_by_value": [[22, 23], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.complex": [[23, 24], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.conj": [[24, 25], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cos": [[25, 26], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cosh": [[26, 27], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cross": [[27, 28], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cumprod": [[28, 29], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.cumsum": [[29, 30], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.dequantize": [[30, 31], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.diag": [[31, 32], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.digamma": [[32, 33], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.div": [[33, 34], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.equal": [[34, 35], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.erf": [[35, 36], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.erfc": [[36, 37], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.exp": [[37, 38], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.expand_dims": [[38, 39], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.expm1": [[39, 40], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.fill": [[40, 41], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.floor": [[41, 42], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.floor_div": [[42, 43], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.floordiv": [[43, 44], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.floormod": [[44, 45], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.gather": [[45, 46], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.gather_nd": [[46, 47], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.greater": [[47, 48], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.greater_equal": [[48, 49], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.hessians": [[49, 50], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.identity": [[50, 51], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.igamma": [[51, 52], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.igammac": [[52, 53], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.imag": [[53, 54], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.is_finite": [[54, 55], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.is_inf": [[55, 56], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.is_nan": [[56, 57], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.less": [[57, 58], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.less_equal": [[58, 59], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.lgamma": [[59, 60], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log": [[60, 61], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log1p": [[61, 62], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_and": [[62, 63], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_not": [[63, 64], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.logical_or": [[64, 65], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.matmul": [[65, 66], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum": [[66, 67], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.meshgrid": [[67, 68], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.minimum": [[68, 69], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.mod": [[69, 70], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.mul": [[70, 71], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.multiply": [[71, 72], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.negative": [[72, 73], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.norm": [[73, 74], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.not_equal": [[74, 75], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.one_hot": [[75, 76], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.ones_like": [[76, 77], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.pad": [[77, 78], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.polygamma": [[78, 79], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.pow": [[79, 80], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.quantize": [[80, 81], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.real": [[81, 82], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.realdiv": [[82, 83], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reciprocal": [[83, 84], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_all": [[84, 85], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_any": [[85, 86], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_logsumexp": [[86, 87], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_max": [[87, 88], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean": [[88, 89], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_min": [[89, 90], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_prod": [[90, 91], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum": [[91, 92], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape": [[92, 93], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reverse": [[93, 94], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.rint": [[94, 95], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.round": [[95, 96], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.rsqrt": [[96, 97], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.scatter_nd": [[97, 98], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sign": [[98, 99], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sin": [[99, 100], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sinh": [[100, 101], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.size": [[101, 102], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.slice": [[102, 103], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt": [[103, 104], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square": [[104, 105], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.squeeze": [[105, 106], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.stop_gradient": [[106, 107], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sub": [[107, 108], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.subtract": [[108, 109], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.tan": [[109, 110], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.tensordot": [[110, 111], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.tile": [[111, 112], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_bfloat16": [[112, 113], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_complex128": [[113, 114], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_complex64": [[114, 115], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_double": [[115, 116], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_float": [[116, 117], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_int32": [[117, 118], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.to_int64": [[118, 119], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.transpose": [[119, 120], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.truediv": [[120, 121], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.truncatediv": [[121, 122], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.truncatemod": [[122, 123], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.unique": [[123, 124], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.where": [[124, 125], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeros_like": [[125, 126], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeta": [[126, 127], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__add__": [[128, 129], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__sub__": [[129, 130], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__mul__": [[130, 131], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__rdiv__": [[131, 132], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__itruediv__": [[132, 133], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__rsub__": [[133, 134], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__isub__": [[134, 135], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__imul__": [[135, 136], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__rmul__": [[136, 137], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.__radd__": [[137, 138], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.register": [[22, 25], ["None"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "register", "(", "tag", ":", "str", ",", "injector", ":", "ParamInjector", ")", ":", "\n", "        ", "DefaultInjector", ".", "_params", "[", "tag", "]", "=", "injector", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.create_getter": [[26, 38], ["injector.getter"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "create_getter", "(", "param", ",", "fn", ",", "injector", ")", ":", "\n", "        ", "key", "=", "(", "param", ",", "fn", ")", "\n", "\n", "def", "getter", "(", "*", "_", ")", ":", "\n", "            ", "if", "key", "not", "in", "DefaultInjector", ".", "_cache", ":", "\n", "                ", "injection", "=", "injector", ".", "getter", "(", "fn", ")", "\n", "DefaultInjector", ".", "_cache", "[", "key", "]", "=", "injection", "\n", "", "else", ":", "\n", "                ", "injection", "=", "DefaultInjector", ".", "_cache", "[", "key", "]", "\n", "", "return", "injection", "\n", "", "return", "getter", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.inject": [[39, 51], ["DefaultInjector._params.keys", "parameters.keys", "claims.append", "injector.DefaultInjector.create_getter", "injector.ParamInjector"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.create_getter"], ["", "@", "staticmethod", "\n", "def", "inject", "(", "fn", ",", "parameters", ":", "dict", ")", "->", "List", "[", "ParamInjector", "]", ":", "\n", "        ", "claims", "=", "[", "]", "\n", "for", "param", "in", "DefaultInjector", ".", "_params", ".", "keys", "(", ")", "&", "parameters", ".", "keys", "(", ")", ":", "\n", "            ", "injector", "=", "DefaultInjector", ".", "_params", "[", "param", "]", "\n", "\n", "if", "injector", ".", "cache", ":", "\n", "                ", "getter", "=", "DefaultInjector", ".", "create_getter", "(", "param", ",", "fn", ",", "injector", ")", "\n", "", "else", ":", "\n", "                ", "getter", "=", "injector", ".", "getter", "\n", "", "claims", ".", "append", "(", "ParamInjector", "(", "param", ",", "getter", ",", "injector", ".", "annotation", ")", ")", "\n", "", "return", "claims", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.inject": [[57, 95], ["list", "inspect.signature", "fn.__annotations__.copy", "parameters.copy", "inspect.signature.replace", "wrapt.decorator", "injecting"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.replace"], ["def", "inject", "(", "*", "injectors", ":", "Callable", ")", ":", "\n", "    ", "injectors", "=", "list", "(", "injectors", ")", "\n", "\n", "def", "decorate", "(", "fn", ":", "Callable", ")", ":", "\n", "        ", "sig", "=", "signature", "(", "fn", ")", "\n", "parameters", "=", "sig", ".", "parameters", "\n", "assigners", "=", "{", "}", "\n", "annotations", "=", "fn", ".", "__annotations__", ".", "copy", "(", ")", "\n", "\n", "new_params", ":", "Dict", "[", "str", ",", "Parameter", "]", "=", "parameters", ".", "copy", "(", ")", "\n", "for", "injector", "in", "injectors", "+", "_default_injectors", ":", "\n", "            ", "for", "param_injector", "in", "injector", "(", "fn", ",", "parameters", ")", ":", "\n", "                ", "key", "=", "param_injector", ".", "key", "\n", "if", "key", "not", "in", "assigners", ":", "\n", "                    ", "assigners", "[", "key", "]", "=", "param_injector", ".", "getter", "\n", "if", "param_injector", ".", "annotation", ":", "\n", "                        ", "annotations", "[", "key", "]", "=", "param_injector", ".", "annotation", "\n", "# we enforce these parameters to be keyword-only parameters.", "\n", "# to change the default value, you  have to explicitly specify it.", "\n", "", "new_params", "[", "key", "]", "=", "new_params", "[", "key", "]", ".", "replace", "(", "kind", "=", "Parameter", ".", "KEYWORD_ONLY", ")", "\n", "\n", "", "", "", "def", "adapter", "(", ")", ":", "pass", "\n", "adapter", ".", "__annotations__", "=", "annotations", "\n", "adapter", ".", "__signature__", "=", "sig", ".", "replace", "(", "parameters", "=", "new_params", ".", "values", "(", ")", ")", "\n", "\n", "@", "wrapt", ".", "decorator", "(", "adapter", "=", "adapter", ")", "\n", "def", "injecting", "(", "wrapped", ",", "instance", ",", "args", ",", "kwargs", ")", ":", "\n", "# easier for pdb... only need to step over one line", "\n", "            ", "new_kwargs", "=", "{", "key", ":", "getter", "(", ")", "for", "key", ",", "getter", "in", "assigners", ".", "items", "(", ")", "}", "\n", "new_kwargs", ".", "update", "(", "kwargs", ")", "\n", "return", "wrapped", "(", "*", "args", ",", "**", "new_kwargs", ")", "\n", "\n", "", "injected_fn", "=", "injecting", "(", "fn", ")", "\n", "injected_fn", ".", "__unwrapped__", "=", "fn", "\n", "injected_fn", ".", "more", "=", "lambda", "*", "extra", ":", "inject", "(", "*", "extra", ",", "*", "injectors", ")", "\n", "injected_fn", ".", "injectors", "=", "injectors", "\n", "return", "injected_fn", "\n", "", "return", "decorate", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.__init__": [[7, 30], ["lunzi.Sequential.__init__", "zip", "layers.append", "layers.append", "layers.append", "layers.append", "lunzi.Linear", "lunzi.Squeeze", "output_activation", "enumerate", "activation"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["    ", "def", "__init__", "(", "self", ",", "blocks", ",", "activation", ",", "squeeze", "=", "False", ",", "weight_initializer", "=", "None", ",", "output_activation", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_blocks", "=", "blocks", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "kwargs", "=", "{", "}", "\n", "if", "weight_initializer", "is", "not", "None", ":", "\n", "                ", "kwargs", "[", "'weight_initializer'", "]", "=", "weight_initializer", "\n", "", "layers", "=", "[", "]", "\n", "for", "in_features", ",", "out_features", "in", "zip", "(", "blocks", "[", ":", "-", "1", "]", ",", "blocks", "[", "1", ":", "]", ")", ":", "\n", "                ", "if", "layers", ":", "\n", "                    ", "layers", ".", "append", "(", "activation", "(", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ",", "**", "kwargs", ")", ")", "\n", "", "if", "squeeze", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "Squeeze", "(", "axis", "=", "-", "1", ")", ")", "\n", "", "if", "output_activation", ":", "\n", "                ", "layers", ".", "append", "(", "output_activation", "(", ")", ")", "\n", "", "self", ".", "_modules", "=", "{", "i", ":", "module", "for", "i", ",", "module", "in", "enumerate", "(", "layers", ")", "}", "\n", "\n", "", "self", ".", "_squeeze", "=", "squeeze", "\n", "self", ".", "_activation", "=", "activation", "\n", "self", ".", "_built", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.blocks": [[31, 34], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "blocks", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.build": [[35, 40], ["tensorflow.placeholder", "multi_layer_perception.MultiLayerPerceptron.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_built", ":", "\n", "            ", "self", ".", "_built", "=", "True", "\n", "self", ".", "op_inputs", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "_blocks", "[", "0", "]", "]", ")", "\n", "self", ".", "op_outputs", "=", "self", ".", "forward", "(", "self", ".", "op_inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.forward": [[41, 43], ["super().forward", "tensorflow.concat", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "forward", "(", "inputs", "[", "0", "]", "if", "len", "(", "inputs", ")", "==", "1", "else", "tf", ".", "concat", "(", "inputs", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.fast": [[44, 46], ["super().fast", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Squeeze.fast"], ["", "def", "fast", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "fast", "(", "np", ".", "concatenate", "(", "inputs", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy": [[47, 49], ["multi_layer_perception.MultiLayerPerceptron"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "MultiLayerPerceptron", "(", "self", ".", "_blocks", ",", "self", ".", "_activation", ",", "self", ".", "_squeeze", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.extra_repr": [[50, 52], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'activation = {self._activation}, blocks = {self._blocks}, squeeze = {self._squeeze}'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler._Counter.__repr__": [[11, 13], ["None"], "methods", ["None"], ["def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f'{{time: {self.time_elapsed:.3e}, count: {self.count}, avg = {self.time_elapsed / self.count:.3e}}}'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.TimerContext.__init__": [[19, 21], ["ids.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ids", ")", ":", "\n", "        ", "self", ".", "ids", "=", "ids", ".", "split", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.TimerContext.__enter__": [[22, 25], ["time.perf_counter"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "for", "idx", "in", "self", ".", "ids", ":", "\n", "            ", "_pool", "[", "idx", "]", ".", "time_elapsed", "-=", "perf_counter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.TimerContext.__exit__": [[26, 29], ["time.perf_counter"], "methods", ["None"], ["", "", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_val", ",", "exc_tb", ")", ":", "\n", "        ", "for", "idx", "in", "self", ".", "ids", ":", "\n", "            ", "_pool", "[", "idx", "]", ".", "time_elapsed", "+=", "perf_counter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.profile": [[31, 33], ["profiler.TimerContext"], "function", ["None"], ["", "", "", "def", "profile", "(", "ids", ")", ":", "\n", "    ", "return", "TimerContext", "(", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.profiler.show": [[35, 42], ["print", "_pool.keys", "ids.split.split", "repr"], "function", ["None"], ["", "def", "show", "(", "ids", "=", "None", ")", ":", "\n", "    ", "if", "ids", "is", "None", ":", "\n", "        ", "ids", "=", "_pool", ".", "keys", "(", ")", "\n", "", "else", ":", "\n", "        ", "ids", "=", "ids", ".", "split", "(", ")", "\n", "\n", "", "print", "(", "\" | \"", ".", "join", "(", "[", "f\"{key}: {repr(_pool[key])}\"", "for", "key", "in", "ids", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.batch.FLAGS.finalize": [[16, 19], ["None"], "methods", ["None"], ["@", "classmethod", "\n", "def", "finalize", "(", "cls", ")", ":", "\n", "        ", "assert", "cls", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.batch.main": [[21, 40], ["lunzi.main", "itertools.product", "r.split", "keys.append", "itertools.product.append", "zip", "_log.info", "range", "datetime.datetime.now().strftime", "re.compile", "value.split", "key.sub", "os.system", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.main", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sub"], ["", "", "@", "lz", ".", "main", "(", "FLAGS", ")", "\n", "@", "FLAGS", ".", "inject", "\n", "def", "main", "(", "*", ",", "name", ",", "template", ",", "replace", ",", "n_jobs", ",", "_log", ":", "Logger", ")", ":", "\n", "    ", "run_id", "=", "f'{name}-{datetime.datetime.now().strftime(\"%y%m%d-%H%M%S\")}'", "\n", "keys", "=", "[", "'ID'", "]", "\n", "values", "=", "[", "[", "run_id", "]", "]", "\n", "for", "r", "in", "replace", ":", "\n", "        ", "key", ",", "value", "=", "r", ".", "split", "(", "'='", ",", "2", ")", "\n", "keys", ".", "append", "(", "re", ".", "compile", "(", "f'\\\\b{key}\\\\b'", ")", ")", "\n", "values", ".", "append", "(", "value", ".", "split", "(", "','", ")", ")", "\n", "", "values", "=", "itertools", ".", "product", "(", "*", "values", ")", "\n", "\n", "for", "assignment", "in", "values", ":", "\n", "        ", "cmd", "=", "template", "\n", "for", "key", ",", "value", "in", "zip", "(", "keys", ",", "assignment", ")", ":", "\n", "            ", "cmd", "=", "key", ".", "sub", "(", "cmd", ",", "value", ")", "\n", "", "_log", ".", "info", "(", "f'cmd'", ")", "\n", "for", "_", "in", "range", "(", "n_jobs", ")", ":", "\n", "            ", "os", ".", "system", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.BaseDataset.__getitem__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.BaseDataset.apply": [[9, 11], ["dataset.TransformedDataset"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "return", "TransformedDataset", "(", "self", ",", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.BaseDataset.size": [[12, 15], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "size", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.__init__": [[18, 21], ["super().__init__", "dataset.Dataset.resize"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dtype", ",", "size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resize", "(", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.fromdict": [[22, 39], ["range", "zip", "numpy.rec.fromarrays().view", "numpy.rec.fromarrays().view", "numpy.asarray", "numpy.asarray", "arrays.keys", "dtypes.append", "arrays.values", "len", "numpy.rec.fromarrays", "numpy.rec.fromarrays", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "@", "staticmethod", "\n", "def", "fromdict", "(", "**", "arrays", ")", ":", "\n", "        ", "array_list", "=", "[", "np", ".", "asarray", "(", "x", ")", "for", "x", "in", "arrays", ".", "values", "(", ")", "]", "\n", "rank", "=", "0", "\n", "for", "rank", "in", "range", "(", "len", "(", "array_list", "[", "0", "]", ".", "shape", ")", "+", "1", ")", ":", "\n", "            ", "ok", "=", "True", "\n", "for", "array", "in", "array_list", ":", "\n", "                ", "if", "len", "(", "array", ".", "shape", ")", "<=", "rank", "or", "array", ".", "shape", "[", "rank", "]", "!=", "array_list", "[", "0", "]", ".", "shape", "[", "rank", "]", ":", "\n", "                    ", "ok", "=", "False", "\n", "break", "\n", "", "", "if", "not", "ok", ":", "\n", "                ", "break", "\n", "\n", "", "", "dtypes", "=", "[", "]", "\n", "for", "name", ",", "array", "in", "zip", "(", "arrays", ".", "keys", "(", ")", ",", "array_list", ")", ":", "\n", "            ", "dtypes", ".", "append", "(", "(", "name", ",", "(", "array", ".", "dtype", ",", "array", ".", "shape", "[", "rank", ":", "]", ")", ")", ")", "\n", "", "return", "np", ".", "rec", ".", "fromarrays", "(", "array_list", ",", "dtypes", ")", ".", "view", "(", "Dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.__new__": [[40, 42], ["numpy.recarray.__new__", "numpy.recarray.__new__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__new__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__new__"], ["", "def", "__new__", "(", "cls", ",", "dtype", ",", "size", ")", ":", "\n", "        ", "return", "np", ".", "recarray", ".", "__new__", "(", "cls", ",", "size", ",", "dtype", "=", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.to_dict": [[43, 45], ["None"], "methods", ["None"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "name", ":", "self", "[", "name", "]", "for", "name", "in", "self", ".", "dtype", ".", "names", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.to_torch": [[46, 49], ["torch.tensor", "dataset.Dataset.copy"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy"], ["", "def", "to_torch", "(", "self", ")", ":", "\n", "        ", "import", "torch", "\n", "return", "{", "name", ":", "torch", ".", "tensor", "(", "self", "[", "name", "]", ".", "copy", "(", ")", ")", "for", "name", "in", "self", ".", "dtype", ".", "names", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.size": [[50, 53], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample": [[54, 58], ["numpy.random.randint", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "size", ",", "indices", "=", "None", ")", ":", "\n", "        ", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "size", ",", "size", "=", "size", ")", "\n", "", "return", "self", "[", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.append_fields": [[59, 64], ["numpy.lib.recfunctions.append_fields().view", "numpy.lib.recfunctions.append_fields().view", "isinstance", "numpy.lib.recfunctions.append_fields", "numpy.lib.recfunctions.append_fields"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.append_fields", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.append_fields"], ["", "def", "append_fields", "(", "self", ",", "names", ",", "data", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "names", ",", "str", ")", "and", "names", "in", "self", ".", "dtype", ".", "names", ":", "\n", "            ", "self", "[", "names", "]", "=", "data", "\n", "return", "self", "\n", "", "return", "np", ".", "lib", ".", "recfunctions", ".", "append_fields", "(", "self", ",", "names", ",", "data", ",", "dtype", ",", "usemask", "=", "False", ")", ".", "view", "(", "Dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.drop_fields": [[65, 67], ["numpy.lib.recfunctions.drop_fields().view", "numpy.lib.recfunctions.drop_fields().view", "numpy.lib.recfunctions.drop_fields", "numpy.lib.recfunctions.drop_fields"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.drop_fields", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.drop_fields"], ["", "def", "drop_fields", "(", "self", ",", "names", ")", ":", "\n", "        ", "return", "np", ".", "lib", ".", "recfunctions", ".", "drop_fields", "(", "self", ",", "names", ",", "usemask", "=", "False", ")", ".", "view", "(", "Dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.iterator": [[68, 80], ["numpy.arange", "numpy.arange", "numpy.random.shuffle", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "iterator", "(", "self", ",", "batch_size", ",", "n_epochs", "=", "1", ",", "shuffle", "=", "True", ")", ":", "\n", "        ", "while", "n_epochs", "!=", "0", ":", "\n", "            ", "n_epochs", "-=", "1", "\n", "size", "=", "self", ".", "size", "\n", "indices", "=", "np", ".", "arange", "(", "size", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "shuffle", ":", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "", "index", "=", "0", "\n", "while", "index", "<", "size", ":", "\n", "                ", "end", "=", "index", "+", "batch_size", "\n", "yield", "self", "[", "indices", "[", "index", ":", "end", "]", "]", "\n", "index", "=", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample_iterator": [[81, 87], ["max", "dataset.Dataset.sample"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.Dataset.sample"], ["", "", "", "def", "sample_iterator", "(", "self", ",", "batch_size", ",", "n_iters", "=", "0", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "yield", "self", ".", "sample", "(", "batch_size", ")", "\n", "n_iters", "=", "max", "(", "n_iters", "-", "1", ",", "-", "1", ")", "\n", "if", "n_iters", "==", "0", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.TransformedDataset.__init__": [[90, 97], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ":", "BaseDataset", ",", "transform", ")", ":", "\n", "        ", "if", "isinstance", "(", "dataset", ",", "TransformedDataset", ")", ":", "\n", "            ", "self", ".", "_dataset", "=", "dataset", ".", "_dataset", "\n", "self", ".", "_transforms", "=", "dataset", ".", "_transforms", "+", "[", "transform", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "_dataset", "=", "dataset", "\n", "self", ".", "_transforms", "=", "[", "transform", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.TransformedDataset.__getitem__": [[98, 103], ["transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "items", ")", ":", "\n", "        ", "items", "=", "self", ".", "_dataset", "[", "items", "]", "\n", "for", "transform", "in", "self", ".", "_transforms", ":", "\n", "            ", "items", "=", "transform", "(", "items", ")", "\n", "", "return", "items", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.TransformedDataset.size": [[104, 107], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_dataset", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__init__": [[115, 122], ["dataset.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["def", "__init__", "(", "self", ",", "dtype", ",", "max_size", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dtype", ",", "max_size", ")", "\n", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "_index", "=", "0", "\n", "self", ".", "_buf_size", "=", "0", "\n", "self", ".", "_len", "=", "0", "\n", "self", ".", "_buf_size", "=", "max_size", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__new__": [[123, 125], ["numpy.recarray.__new__", "numpy.recarray.__new__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__new__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.__new__"], ["", "def", "__new__", "(", "cls", ",", "dtype", ",", "max_size", ")", ":", "\n", "        ", "return", "np", ".", "recarray", ".", "__new__", "(", "cls", ",", "max_size", ",", "dtype", "=", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.size": [[126, 129], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_len", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.reserve": [[130, 136], ["max", "dataset.ExtendableDataset.resize"], "methods", ["None"], ["", "def", "reserve", "(", "self", ",", "size", ")", ":", "\n", "        ", "cur_size", "=", "max", "(", "self", ".", "_buf_size", ",", "1", ")", "\n", "while", "cur_size", "<", "size", ":", "\n", "            ", "cur_size", "*=", "2", "\n", "", "if", "cur_size", "!=", "self", ".", "_buf_size", ":", "\n", "            ", "self", ".", "resize", "(", "cur_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.clear": [[137, 141], ["None"], "methods", ["None"], ["", "", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "_index", "=", "0", "\n", "self", ".", "_len", "=", "0", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.append": [[142, 147], ["min"], "methods", ["None"], ["", "def", "append", "(", "self", ",", "item", ")", ":", "\n", "        ", "self", "[", "self", ".", "_index", "]", "=", "item", "\n", "self", ".", "_index", "=", "(", "self", ".", "_index", "+", "1", ")", "%", "self", ".", "max_size", "\n", "self", ".", "_len", "=", "min", "(", "self", ".", "_len", "+", "1", ",", "self", ".", "max_size", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dataset.ExtendableDataset.extend": [[148, 165], ["len", "min"], "methods", ["None"], ["", "def", "extend", "(", "self", ",", "items", ")", ":", "\n", "        ", "n_new", "=", "len", "(", "items", ")", "\n", "if", "n_new", ">", "self", ".", "max_size", ":", "\n", "            ", "items", "=", "items", "[", "-", "self", ".", "max_size", ":", "]", "\n", "n_new", "=", "self", ".", "max_size", "\n", "\n", "", "n_tail", "=", "self", ".", "max_size", "-", "self", ".", "_index", "\n", "if", "n_new", "<=", "n_tail", ":", "\n", "            ", "self", "[", "self", ".", "_index", ":", "self", ".", "_index", "+", "n_new", "]", "=", "items", "\n", "", "else", ":", "\n", "            ", "n_head", "=", "n_new", "-", "n_tail", "\n", "self", "[", "self", ".", "_index", ":", "]", "=", "items", "[", ":", "n_tail", "]", "\n", "self", "[", ":", "n_head", "]", "=", "items", "[", "n_tail", ":", "]", "\n", "\n", "", "self", ".", "_index", "=", "(", "self", ".", "_index", "+", "n_new", ")", "%", "self", ".", "max_size", "\n", "self", ".", "_len", "=", "min", "(", "self", ".", "_len", "+", "n_new", ",", "self", ".", "max_size", ")", "\n", "return", "self", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.debug._monkey_patch": [[16, 39], ["lunzi.log.critical", "lunzi.log.critical", "old_init_pdb", "lunzi.log.critical"], "function", ["None"], ["def", "_monkey_patch", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "ipdb", "\n", "", "except", "ImportError", ":", "\n", "        ", "log", ".", "critical", "(", "f'skip patching `ipdb`: `ipdb` not found.'", ")", "\n", "return", "\n", "\n", "", "import", "os", "\n", "env_var", "=", "'PYTHONBREAKPOINT'", "\n", "if", "env_var", "in", "os", ".", "environ", ":", "\n", "        ", "log", ".", "critical", "(", "f'skip patching `ipdb`: environment variable `{env_var}` has been set.'", ")", "\n", "return", "\n", "", "os", ".", "environ", "[", "env_var", "]", "=", "'ipdb.set_trace'", "\n", "\n", "old_init_pdb", "=", "ipdb", ".", "__main__", ".", "_init_pdb", "\n", "\n", "def", "_init_pdb", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "p", "=", "old_init_pdb", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "p", ".", "skip", "=", "skips", "\n", "return", "p", "\n", "\n", "", "ipdb", ".", "__main__", ".", "_init_pdb", "=", "_init_pdb", "\n", "log", ".", "critical", "(", "f'`ipdb` patched...'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BaseSampler.__iter__": [[6, 9], ["None"], "methods", ["None"], ["    ", "@", "abc", ".", "abstractmethod", "\n", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BaseSampler.__len__": [[10, 12], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BatchSampler.__init__": [[15, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", ",", "shuffle", "=", "True", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BatchSampler._iterator": [[20, 29], ["numpy.arange", "numpy.random.shuffle", "min"], "methods", ["None"], ["", "def", "_iterator", "(", "self", ")", ":", "\n", "        ", "indices", "=", "np", ".", "arange", "(", "self", ".", "dataset", ".", "size", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "", "index", "=", "0", "\n", "while", "index", "<", "self", ".", "dataset", ".", "size", ":", "\n", "            ", "end", "=", "min", "(", "index", "+", "self", ".", "batch_size", ",", "self", ".", "dataset", ".", "size", ")", "\n", "yield", "self", ".", "dataset", "[", "indices", "[", "index", ":", "end", "]", "]", "\n", "index", "=", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BatchSampler.__iter__": [[30, 32], ["sampler.BatchSampler._iterator"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BatchSampler._iterator"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_iterator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.sampler.BatchSampler.__len__": [[33, 35], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dataset", ".", "size", "//", "self", ".", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dummy.DummyClass.__getattr__": [[2, 6], ["None"], "methods", ["None"], ["    ", "def", "__getattr__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "in", "self", ".", "__dict__", ":", "\n", "            ", "return", "self", ".", "__dict__", "[", "item", "]", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.dummy.DummyClass.__call__": [[7, 9], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.add_file_handler": [[22, 27], ["logging.FileHandler", "logging.FileHandler.setFormatter", "logger.addHandler", "coloredlogs.BasicFormatter", "lunzi.lz.log"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.log"], ["def", "add_file_handler", "(", "logger", ":", "Logger", ",", "file_path", ":", "str", ")", ":", "\n", "    ", "import", "coloredlogs", "\n", "file_handler", "=", "FileHandler", "(", "file_path", ")", "\n", "file_handler", ".", "setFormatter", "(", "coloredlogs", ".", "BasicFormatter", "(", "fmt", "=", "'%(asctime)s - %(filename)s:%(lineno)d - %(message)s'", ")", ")", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.get_logger": [[29, 43], ["logging.getLogger", "coloredlogs.install"], "function", ["None"], ["", "def", "get_logger", "(", "name", ":", "str", ")", "->", "Logger", ":", "\n", "    ", "import", "coloredlogs", "\n", "\n", "logger", "=", "getLogger", "(", "name", ")", "\n", "logger", ".", "propagate", "=", "False", "\n", "coloredlogs", ".", "install", "(", "\n", "logger", "=", "logger", ",", "\n", "stream", "=", "sys", ".", "stdout", ",", "\n", "milliseconds", "=", "True", ",", "\n", "fmt", "=", "'%(asctime)s - %(filename)s:%(lineno)d - %(message)s'", ",", "\n", "field_styles", "=", "{", "**", "coloredlogs", ".", "DEFAULT_FIELD_STYLES", ",", "'filename'", ":", "{", "'color'", ":", "'cyan'", "}", "}", ",", "\n", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.set_random_seed": [[45, 64], ["random.seed", "numpy.random.seed", "tensorflow.set_random_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.manual_seed_all"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.seed", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.seed", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.set_random_seed"], ["", "def", "set_random_seed", "(", "seed", ":", "int", ")", ":", "\n", "    ", "import", "random", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "try", ":", "\n", "        ", "import", "tensorflow", "\n", "tensorflow", ".", "set_random_seed", "(", "seed", ")", "\n", "", "except", "ImportError", ":", "\n", "        ", "pass", "\n", "\n", "", "try", ":", "\n", "        ", "import", "torch", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "", "", "except", "ImportError", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.parse_string": [[66, 71], ["ast.literal_eval"], "function", ["None"], ["", "", "def", "parse_string", "(", "s", ":", "str", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "ast", ".", "literal_eval", "(", "s", ")", "\n", "", "except", "(", "ValueError", ",", "SyntaxError", ")", ":", "\n", "        ", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.init": [[73, 98], ["experiment.parse", "root.freeze", "experiment.set_random_seed", "root.add", "lunzi.fs.init", "SummaryWriter", "experiment.dump", "experiment.add_file_handler", "lunzi.log.warning", "lunzi.log.critical", "print", "print", "print", "int.from_bytes", "lunzi.fs.resolve", "toml.dumps", "os.urandom", "str", "root.as_dict", "str"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.parse", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.freeze", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.set_random_seed", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.add", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.init", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.add_file_handler", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.as_dict"], ["", "", "def", "init", "(", "root", ":", "MetaFLAGS", ",", "doc", ":", "str", "=", "''", ")", ":", "\n", "    ", "if", "'seed'", "not", "in", "root", ":", "\n", "        ", "root", ".", "add", "(", "'seed'", ",", "int", ".", "from_bytes", "(", "os", ".", "urandom", "(", "3", ")", ",", "'little'", ")", ")", "\n", "", "args", "=", "parse", "(", "root", ",", "doc", ")", "\n", "\n", "seed", "=", "root", ".", "seed", "\n", "root", ".", "freeze", "(", ")", "\n", "log_dir", "=", "args", ".", "log_dir", "\n", "lz", ".", "info", "[", "'exception'", "]", "=", "args", ".", "exception", "\n", "\n", "set_random_seed", "(", "seed", ")", "\n", "\n", "if", "log_dir", "is", "not", "None", ":", "\n", "        ", "lz", ".", "fs", ".", "init", "(", "log_dir", ")", "\n", "lz", ".", "writer", "=", "SummaryWriter", "(", "logdir", "=", "str", "(", "lz", ".", "fs", ".", "log_dir", ")", ")", "\n", "dump", "(", "root", ")", "\n", "add_file_handler", "(", "lz", ".", "log", ",", "lz", ".", "fs", ".", "resolve", "(", "'$LOGDIR/out.log'", ")", ")", "\n", "lz", ".", "log", ".", "warning", "(", "f'log_dir = {str(lz.fs.log_dir)}'", ")", "\n", "", "else", ":", "\n", "        ", "lz", ".", "log", ".", "critical", "(", "'no log_dir provided'", ")", "\n", "\n", "", "if", "args", ".", "print_config", ":", "\n", "        ", "print", "(", "'----- FLAGS begin -----'", ")", "\n", "print", "(", "toml", ".", "dumps", "(", "root", ".", "as_dict", "(", ")", ")", ")", "\n", "print", "(", "'----- FLAGS end -----'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump": [[100, 107], ["str", "open", "toml.dump", "lunzi.fs.resolve", "root.as_dict"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.as_dict"], ["", "", "def", "dump", "(", "root", ":", "MetaFLAGS", ")", ":", "\n", "\n", "    ", "with", "open", "(", "lz", ".", "fs", ".", "resolve", "(", "'$LOGDIR/config.toml'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "toml", ".", "dump", "(", "root", ".", "as_dict", "(", ")", ",", "f", ")", "\n", "\n", "", "lz", ".", "info", "[", "'log_dir'", "]", "=", "str", "(", "lz", ".", "fs", ".", "log_dir", ")", "\n", "lz", ".", "info", "[", "'argv'", "]", "=", "sys", ".", "argv", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.set_default_injector": [[109, 123], ["ParamInjector", "ParamInjector", "ParamInjector", "ParamInjector", "ParamInjector", "ParamInjector", "DefaultInjector.register", "numpy.random.randint", "numpy.random.RandomState", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.injector.DefaultInjector.register"], ["", "def", "set_default_injector", "(", ")", ":", "\n", "    ", "from", ".", "injector", "import", "ParamInjector", ",", "DefaultInjector", "\n", "injectors", "=", "[", "\n", "ParamInjector", "(", "'_seed'", ",", "lambda", "*", "_", ":", "np", ".", "random", ".", "randint", "(", "1", ",", "10", "**", "9", ")", ",", "int", ",", "cache", "=", "False", ")", ",", "\n", "ParamInjector", "(", "'_rng'", ",", "lambda", "*", "_", ":", "np", ".", "random", ".", "RandomState", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "2", "**", "32", "-", "1", ")", ")", ",", "\n", "np", ".", "random", ".", "RandomState", ",", "cache", "=", "True", ")", ",", "\n", "ParamInjector", "(", "'_fs'", ",", "lambda", "*", "_", ":", "lz", ".", "fs", ",", "FileStorage", ")", ",", "\n", "ParamInjector", "(", "'_writer'", ",", "lambda", "*", "_", ":", "lz", ".", "writer", ",", "SummaryWriter", ")", ",", "\n", "ParamInjector", "(", "'_log'", ",", "lambda", "*", "_", ":", "lz", ".", "log", ",", "Logger", ")", ",", "\n", "ParamInjector", "(", "'_info'", ",", "lambda", "*", "_", ":", "lz", ".", "info", ",", "dict", ")", ",", "\n", "]", "\n", "\n", "for", "injector", "in", "injectors", ":", "\n", "        ", "DefaultInjector", ".", "register", "(", "injector", ".", "key", ",", "injector", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.parse": [[128, 146], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "base_flags.merge", "base_flags.set_value", "toml.load", "path.split", "experiment.parse_string", "open", "pathlib.Path().expanduser", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.merge", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.set_value", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.parse_string"], ["def", "parse", "(", "root", ":", "MetaFLAGS", ",", "doc", "=", "''", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "doc", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--config'", ",", "help", "=", "'configuration file (TOML)'", ",", "nargs", "=", "'*'", ",", "metavar", "=", "'FILE'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--set'", ",", "help", "=", "'additional options'", ",", "nargs", "=", "2", ",", "action", "=", "'append'", ",", "metavar", "=", "(", "'PATH'", ",", "'VALUE'", ")", ")", "\n", "parser", ".", "add_argument", "(", "'--print_config'", ",", "help", "=", "'print configs'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--log_dir'", ",", "help", "=", "'the directory to logs'", ",", "default", "=", "'/tmp'", ")", "\n", "parser", ".", "add_argument", "(", "'--exception'", ",", "help", "=", "'how to handle exceptions'", ",", "default", "=", "'raise'", ",", "choices", "=", "(", "'raise'", ",", "'dump'", ")", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "config", ":", "\n", "        ", "for", "config", "in", "args", ".", "config", ":", "\n", "            ", "merge", "(", "root", ",", "toml", ".", "load", "(", "open", "(", "Path", "(", "config", ")", ".", "expanduser", "(", ")", ")", ")", ")", "\n", "", "", "if", "args", ".", "set", ":", "\n", "        ", "for", "path", ",", "value", "in", "args", ".", "set", ":", "\n", "            ", "set_value", "(", "root", ",", "path", ".", "split", "(", "'.'", ")", ",", "parse_string", "(", "value", ")", ")", "\n", "\n", "", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close": [[148, 152], ["lunzi.writer.close", "open", "toml.dump", "lunzi.fs.resolve"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve"], ["", "def", "close", "(", ")", ":", "\n", "    ", "lz", ".", "writer", ".", "close", "(", ")", "\n", "with", "open", "(", "lz", ".", "fs", ".", "resolve", "(", "'$LOGDIR/meta.toml'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "toml", ".", "dump", "(", "lz", ".", "info", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.main": [[154, 171], ["experiment.init", "fn", "experiment.close", "sys.exc_info", "traceback.format_exception", "experiment.close"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.init", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close"], ["", "", "def", "main", "(", "root", ":", "MetaFLAGS", ",", "doc", ":", "str", "=", "''", ")", ":", "\n", "    ", "def", "decorate", "(", "fn", ")", ":", "\n", "        ", "def", "decorated", "(", ")", ":", "\n", "            ", "init", "(", "root", ",", "doc", ")", "\n", "try", ":", "\n", "                ", "fn", "(", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "exc_type", ",", "exc_value", ",", "exc_traceback", "=", "sys", ".", "exc_info", "(", ")", "\n", "formatted", "=", "traceback", ".", "format_exception", "(", "exc_type", ",", "exc_value", ",", "exc_traceback", ")", "\n", "lz", ".", "info", "[", "'traceback'", "]", "=", "formatted", "\n", "close", "(", ")", "\n", "if", "lz", ".", "info", "[", "'exception'", "]", "==", "'raise'", ":", "\n", "                    ", "raise", "\n", "", "", "else", ":", "\n", "                ", "close", "(", ")", "\n", "", "", "return", "decorated", "\n", "", "return", "decorate", "\n", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.replace": [[14, 16], ["re.sub"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sub"], ["def", "replace", "(", "s", ",", "a", ",", "b", ")", ":", "\n", "    ", "return", "re", ".", "sub", "(", "f'\\\\b{a}\\\\b'", ",", "b", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.execute": [[18, 24], ["print", "subprocess.run", "run.replace"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.replace"], ["", "def", "execute", "(", "template", ",", "assignment", ",", "stdout", ",", "stderr", ")", ":", "\n", "    ", "cmd", "=", "template", "\n", "for", "key", ",", "value", "in", "assignment", ":", "\n", "        ", "cmd", "=", "replace", "(", "cmd", ",", "key", ",", "value", ")", "\n", "", "print", "(", "f'{cmd}'", ")", "\n", "run", "(", "cmd", ",", "shell", "=", "True", ",", "stdin", "=", "DEVNULL", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "check", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.main": [[26, 57], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "datetime.datetime.now().strftime", "run.replace", "termcolor.cprint", "list", "pathlib.Path().expanduser", "Path().expanduser.mkdir", "multiprocessing.Pool", "multiprocessing.Pool.starmap", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "itertools.product", "open", "toml.dump", "len", "min", "datetime.datetime.now", "pathlib.Path", "values.split"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.replace", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.close", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--template'", ",", "help", "=", "'template'", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--map'", ",", "help", "=", "'replace arguments'", ",", "nargs", "=", "2", ",", "action", "=", "'append'", ",", "metavar", "=", "(", "'PATH'", ",", "'VALUE'", ")", ",", "\n", "default", "=", "[", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--log_dir'", ",", "help", "=", "'the directory to logs'", ",", "default", "=", "'/tmp'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_jobs'", ",", "'-n'", ",", "help", "=", "'# jobs per assignment'", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--pool_size'", ",", "'-p'", ",", "help", "=", "'size of process pool, default to # total jobs'", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--stdout'", ",", "help", "=", "'whether to use stdout'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--stderr'", ",", "help", "=", "'whether to use stderr'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "uid", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%y%m%d-%H%M%S'", ")", "\n", "log_dir", "=", "replace", "(", "args", ".", "log_dir", ",", "'UID'", ",", "uid", ")", "\n", "cprint", "(", "f'log dir = {log_dir}'", ",", "'red'", ",", "attrs", "=", "[", "'bold'", ",", "'underline'", "]", ")", "\n", "stdout", "=", "None", "if", "args", ".", "stdout", "else", "DEVNULL", "\n", "stderr", "=", "None", "if", "args", ".", "stderr", "else", "DEVNULL", "\n", "assignments", "=", "list", "(", "product", "(", "[", "[", "'LOGDIR'", ",", "log_dir", "]", "]", ",", "*", "[", "[", "[", "k", ",", "v", "]", "for", "v", "in", "values", ".", "split", "(", "','", ")", "]", "for", "k", ",", "values", "in", "args", ".", "map", "]", ")", ")", "\n", "\n", "log_dir", "=", "Path", "(", "log_dir", ")", ".", "expanduser", "(", ")", "\n", "log_dir", ".", "mkdir", "(", "exist_ok", "=", "False", ",", "parents", "=", "True", ")", "\n", "with", "open", "(", "log_dir", "/", "'.status.toml'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "toml", ".", "dump", "(", "{", "'cmd'", ":", "sys", ".", "argv", "}", ",", "f", ")", "\n", "\n", "", "pool_size", "=", "len", "(", "assignments", ")", "*", "args", ".", "n_jobs", "\n", "if", "args", ".", "pool_size", "!=", "0", ":", "\n", "        ", "pool_size", "=", "min", "(", "args", ".", "pool_size", ",", "pool_size", ")", "\n", "", "pool", "=", "Pool", "(", "processes", "=", "pool_size", ")", "\n", "pool", ".", "starmap", "(", "execute", ",", "[", "[", "args", ".", "template", ",", "assignment", ",", "stdout", ",", "stderr", "]", "for", "assignment", "in", "assignments", "*", "args", ".", "n_jobs", "]", ")", "\n", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.serialization.save": [[5, 7], ["numpy.save"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save"], ["def", "save", "(", "obj", ":", "Any", ",", "file", ":", "Union", "[", "str", ",", "IO", "]", ")", ":", "\n", "    ", "np", ".", "save", "(", "file", ",", "obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.serialization.load": [[9, 11], ["numpy.load"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load"], ["", "def", "load", "(", "file", ":", "Union", "[", "str", ",", "IO", "]", ")", ":", "\n", "    ", "return", "np", ".", "load", "(", "file", ")", "[", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.__setattr__": [[10, 13], ["type.__setattr__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__setattr__"], ["def", "__setattr__", "(", "cls", ",", "key", ":", "str", ",", "value", ":", "Any", ")", ":", "\n", "# assert not cls._frozen, 'Modifying frozen FLAGS.'", "\n", "        ", "super", "(", ")", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.__getitem__": [[14, 16], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "cls", ",", "item", ":", "str", ")", ":", "\n", "        ", "return", "cls", ".", "__dict__", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.add": [[17, 20], ["setattr", "getattr"], "methods", ["None"], ["", "def", "add", "(", "cls", ",", "key", ":", "str", ",", "value", ":", "Any", ",", "overwrite", "=", "False", ",", "overwrite_false", "=", "False", ")", ":", "\n", "        ", "if", "key", "not", "in", "cls", "or", "overwrite", "or", "not", "getattr", "(", "cls", ",", "key", ")", "and", "overwrite_false", ":", "\n", "            ", "setattr", "(", "cls", ",", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.__iter__": [[21, 27], ["cls.__dict__.items", "isinstance", "key.startswith", "isinstance", "dict"], "methods", ["None"], ["", "", "def", "__iter__", "(", "cls", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "cls", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "key", ".", "startswith", "(", "'_'", ")", "and", "not", "isinstance", "(", "value", ",", "classmethod", ")", ":", "\n", "                ", "if", "isinstance", "(", "value", ",", "MetaFLAGS", ")", ":", "\n", "                    ", "value", "=", "dict", "(", "value", ")", "\n", "", "yield", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.as_dict": [[28, 30], ["dict"], "methods", ["None"], ["", "", "", "def", "as_dict", "(", "cls", ")", ":", "\n", "        ", "return", "dict", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.freeze": [[31, 37], ["cls.__dict__.items", "cls.finalize", "isinstance", "value.freeze", "key.startswith"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.finalize", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.freeze"], ["", "def", "freeze", "(", "cls", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "cls", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "key", ".", "startswith", "(", "'_'", ")", "and", "isinstance", "(", "value", ",", "MetaFLAGS", ")", ":", "\n", "                ", "value", ".", "freeze", "(", ")", "\n", "", "", "cls", ".", "finalize", "(", ")", "\n", "cls", ".", "_frozen", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS._injector": [[38, 46], ["claims.append", "parameters.keys", "cls.__dict__.keys", "cls.__annotations__.get", "claims.append", "injector.ParamInjector", "injector.ParamInjector", "cls.as_dict"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.as_dict"], ["", "def", "_injector", "(", "cls", ",", "_", ",", "parameters", ")", ":", "\n", "        ", "claims", "=", "[", "]", "\n", "if", "'_config'", "in", "parameters", ":", "\n", "            ", "claims", ".", "append", "(", "ParamInjector", "(", "'_config'", ",", "lambda", "*", "_", ":", "cls", ".", "as_dict", "(", ")", ",", "dict", ")", ")", "\n", "", "for", "param", "in", "parameters", ".", "keys", "(", ")", "&", "cls", ".", "__dict__", ".", "keys", "(", ")", ":", "\n", "            ", "annotation", "=", "cls", ".", "__annotations__", ".", "get", "(", "param", ",", "None", ")", "\n", "claims", ".", "append", "(", "ParamInjector", "(", "param", ",", "lambda", "*", "_", ",", "param_", "=", "param", ":", "cls", ".", "__dict__", "[", "param_", "]", ",", "annotation", ")", ")", "\n", "", "return", "claims", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.finalize": [[47, 49], ["None"], "methods", ["None"], ["", "def", "finalize", "(", "cls", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.inject": [[50, 57], ["injector.inject"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.MetaFLAGS.inject"], ["", "@", "property", "\n", "def", "inject", "(", "cls", ")", ":", "\n", "        ", "\"\"\"\n            Generate a new `inject` instance, in case `fn.__injectors__`\n            is changed.\n        \"\"\"", "\n", "return", "inject", "(", "cls", ".", "_injector", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.merge": [[63, 75], ["isinstance", "isinstance", "isinstance", "base_flags.merge", "isinstance", "setattr"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.merge"], ["", "def", "merge", "(", "lhs", ":", "Union", "[", "MetaFLAGS", ",", "dict", "]", ",", "rhs", ":", "dict", ")", ":", "\n", "# import ipdb; ipdb.set_trace()", "\n", "    ", "for", "key", "in", "rhs", ":", "\n", "        ", "keys", "=", "lhs", "if", "isinstance", "(", "lhs", ",", "dict", ")", "else", "lhs", ".", "__dict__", "\n", "assert", "key", "in", "keys", ",", "f\"Can't find key `{key}`\"", "\n", "if", "isinstance", "(", "lhs", "[", "key", "]", ",", "(", "MetaFLAGS", ",", "dict", ")", ")", "and", "isinstance", "(", "rhs", "[", "key", "]", ",", "dict", ")", ":", "\n", "            ", "merge", "(", "lhs", "[", "key", "]", ",", "rhs", "[", "key", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "isinstance", "(", "lhs", ",", "dict", ")", ":", "\n", "                ", "lhs", "[", "key", "]", "=", "rhs", "[", "key", "]", "\n", "", "else", ":", "\n", "                ", "setattr", "(", "lhs", ",", "key", ",", "rhs", "[", "key", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.set_value": [[77, 89], ["isinstance", "isinstance", "isinstance", "base_flags.set_value", "setattr"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.base_flags.set_value"], ["", "", "", "", "def", "set_value", "(", "cls", ":", "Union", "[", "MetaFLAGS", ",", "dict", "]", ",", "path", ":", "List", "[", "str", "]", ",", "value", ":", "Any", ")", ":", "\n", "    ", "key", ",", "*", "rest", "=", "path", "\n", "keys", "=", "cls", "if", "isinstance", "(", "cls", ",", "dict", ")", "else", "cls", ".", "__dict__", "\n", "assert", "key", "in", "keys", ",", "f\"Can't find key `{key}`\"", "\n", "if", "not", "rest", ":", "\n", "        ", "if", "isinstance", "(", "cls", ",", "dict", ")", ":", "\n", "            ", "cls", "[", "key", "]", "=", "value", "\n", "", "else", ":", "\n", "            ", "setattr", "(", "cls", ",", "key", ",", "value", ")", "\n", "", "", "else", ":", "\n", "        ", "assert", "isinstance", "(", "cls", "[", "key", "]", ",", "(", "MetaFLAGS", ",", "dict", ")", ")", "\n", "set_value", "(", "cls", "[", "key", "]", ",", "rest", ",", "value", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.__init__": [[14, 19], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_dir", "=", "None", "\n", "self", ".", "exp_dir", "=", "None", "\n", "self", ".", "run_id", "=", "None", "\n", "self", ".", "_exp", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.init": [[20, 32], ["pathlib.Path", "fasteners.InterProcessLock", "file_storage.FileStorage._read_exp_status", "str", "file_storage.FileStorage.log_dir.mkdir", "file_storage.FileStorage.git_backup", "toml.dump", "file_storage.FileStorage._exp.get", "file_storage.FileStorage._exp.get", "pathlib.Path().expanduser", "open", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage._read_exp_status", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.git_backup", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.experiment.dump", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get"], ["", "def", "init", "(", "self", ",", "exp_dir", ")", ":", "\n", "        ", "self", ".", "exp_dir", "=", "Path", "(", "exp_dir", ")", "\n", "with", "fasteners", ".", "InterProcessLock", "(", "self", ".", "exp_dir", "/", "'.lock'", ")", ":", "\n", "            ", "self", ".", "_exp", "=", "self", ".", "_read_exp_status", "(", ")", "\n", "self", ".", "run_id", "=", "str", "(", "self", ".", "_exp", ".", "get", "(", "'id'", ",", "0", ")", ")", "\n", "self", ".", "_exp", "[", "'id'", "]", "=", "self", ".", "_exp", ".", "get", "(", "'id'", ",", "0", ")", "+", "1", "\n", "\n", "self", ".", "log_dir", "=", "Path", "(", "exp_dir", ")", ".", "expanduser", "(", ")", "/", "self", ".", "run_id", "\n", "self", ".", "log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "git_backup", "(", ")", "\n", "\n", "toml", ".", "dump", "(", "self", ".", "_exp", ",", "open", "(", "self", ".", "exp_dir", "/", "'.status.toml'", ",", "'w'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage._read_exp_status": [[33, 42], ["status_path.exists", "toml.load", "str"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load"], ["", "", "def", "_read_exp_status", "(", "self", ")", ":", "\n", "        ", "status_path", "=", "self", ".", "exp_dir", "/", "'.status.toml'", "\n", "if", "status_path", ".", "exists", "(", ")", ":", "\n", "            ", "return", "toml", ".", "load", "(", "status_path", ")", "\n", "", "else", ":", "\n", "            ", "run_id", "=", "0", "\n", "while", "(", "self", ".", "exp_dir", "/", "str", "(", "run_id", ")", ")", ".", "exists", "(", ")", ":", "\n", "                ", "run_id", "+=", "1", "\n", "", "return", "{", "'id'", ":", "run_id", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.git_backup": [[43, 62], ["Repo", "zipfile.ZipFile", "Repo.git.ls_files().split", "print", "zipfile.ZipFile.write", "print", "print", "Repo.git.ls_files"], "methods", ["None"], ["", "", "def", "git_backup", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "from", "git", "import", "Repo", "\n", "from", "git", ".", "exc", "import", "InvalidGitRepositoryError", "\n", "", "except", "ImportError", "as", "e", ":", "\n", "            ", "print", "(", "f\"Can't import `git`: {e}\"", ")", "\n", "return", "\n", "\n", "", "try", ":", "\n", "            ", "repo", "=", "Repo", "(", "'.'", ")", "\n", "pkg", "=", "ZipFile", "(", "self", ".", "log_dir", "/", "'source.zip'", ",", "'w'", ")", "\n", "\n", "for", "file_name", "in", "repo", ".", "git", ".", "ls_files", "(", ")", ".", "split", "(", ")", ":", "\n", "                ", "pkg", ".", "write", "(", "file_name", ")", "\n", "\n", "", "", "except", "InvalidGitRepositoryError", "as", "e", ":", "\n", "            ", "print", "(", "f\"Can't use git to backup files: {e}\"", ")", "\n", "", "except", "FileNotFoundError", "as", "e", ":", "\n", "            ", "print", "(", "f\"Can't find file {e}. Did you delete a file and forget to `git add .`\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve": [[63, 67], ["pathlib.Path().expanduser", "file_name.replace.replace.replace", "str", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.run.replace"], ["", "", "def", "resolve", "(", "self", ",", "file_name", ":", "str", ")", ":", "\n", "        ", "if", "'$LOGDIR'", "in", "file_name", ":", "\n", "            ", "file_name", "=", "file_name", ".", "replace", "(", "'$LOGDIR'", ",", "str", "(", "self", ".", "log_dir", ")", ")", "\n", "", "return", "Path", "(", "file_name", ")", ".", "expanduser", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save": [[68, 72], ["file_storage.FileStorage.resolve", "numpy.save", "str"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.save"], ["", "def", "save", "(", "self", ",", "file_name", ":", "str", ",", "array", ")", ":", "\n", "        ", "resolved", "=", "self", ".", "resolve", "(", "file_name", ")", "\n", "if", "resolved", ":", "\n", "            ", "np", ".", "save", "(", "str", "(", "resolved", ")", ",", "array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load": [[73, 75], ["numpy.load", "file_storage.FileStorage.resolve"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.resolve"], ["", "", "def", "load", "(", "self", ",", "file_name", ":", "str", ")", ":", "\n", "        ", "return", "np", ".", "load", "(", "self", ".", "resolve", "(", "file_name", ")", ",", "allow_pickle", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module._create_uid": [[22, 30], ["tensorflow.get_variable_scope"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "_create_uid", "(", "prefix", ":", "str", ")", "->", "str", ":", "\n", "        ", "scope", "=", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "+", "'/'", "\n", "uid", "=", "Module", ".", "prefix_count", "[", "scope", "+", "prefix", "]", "\n", "Module", ".", "prefix_count", "[", "scope", "+", "prefix", "]", "+=", "1", "\n", "if", "uid", "==", "0", ":", "\n", "            ", "return", "prefix", "\n", "", "return", "f'{prefix}_{uid}'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__init__": [[31, 39], ["module.Module._create_uid", "tensorflow.variable_scope"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module._create_uid"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "scope", "=", "Module", ".", "_create_uid", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "False", ")", "as", "self", ".", "_scope", ":", "\n", "            ", "pass", "\n", "# Since we only plan to support Python 3.6+, in which dict is already ordered, we don't use OrderedDict here.", "\n", "", "self", ".", "_parameters", ":", "Dict", "[", "Any", ",", "Parameter", "]", "=", "{", "}", "\n", "self", ".", "_modules", ":", "Dict", "[", "Any", ",", "Module", "]", "=", "{", "}", "\n", "self", ".", "_callables", ":", "Dict", "[", "Any", ",", "Callable", "]", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.forward": [[40, 42], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.fast": [[43, 45], ["None"], "methods", ["None"], ["", "def", "fast", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__setattr__": [[46, 58], ["module.Module.__dict__.get", "isinstance", "isinstance", "object.__setattr__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__setattr__"], ["", "def", "__setattr__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "# dynamically maintain sub modules.", "\n", "        ", "modules", "=", "self", ".", "__dict__", ".", "get", "(", "'_modules'", ")", "\n", "if", "isinstance", "(", "value", ",", "Parameter", ")", ":", "\n", "            ", "self", ".", "_parameters", "[", "key", "]", "=", "value", "\n", "", "if", "isinstance", "(", "value", ",", "Module", ")", ":", "\n", "            ", "assert", "modules", "is", "not", "None", ",", "'Call `super().__init__` before assigning modules'", "\n", "modules", "[", "key", "]", "=", "value", "\n", "", "else", ":", "\n", "            ", "if", "modules", "and", "key", "in", "modules", ":", "\n", "                ", "del", "modules", "[", "key", "]", "\n", "", "", "object", ".", "__setattr__", "(", "self", ",", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__call__": [[59, 61], ["module.Module.forward"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "forward", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.register_callable": [[62, 64], ["None"], "methods", ["None"], ["", "def", "register_callable", "(", "self", ",", "key", ",", "callable", ")", ":", "\n", "        ", "self", ".", "_callables", "[", "key", "]", "=", "callable", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval": [[65, 80], ["lunzi.log.debug", "feed.keys", "isinstance", "module.Module.register_callable", "feed_ops.append", "tensorflow.get_default_session().make_callable", "feed.values", "feed.keys", "len", "fetch.split", "tensorflow.get_default_session"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.register_callable", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "def", "eval", "(", "self", ",", "fetch", ":", "str", ",", "**", "feed", ")", ":", "\n", "        ", "cache_key", "=", "f'[{\" \".join(feed.keys())}] => [{fetch}]'", "\n", "if", "cache_key", "not", "in", "self", ".", "_callables", ":", "\n", "            ", "lz", ".", "log", ".", "debug", "(", "'[%s] is making TensorFlow callables, key = %s'", ",", "self", ".", "__class__", ".", "__name__", ",", "cache_key", ")", "\n", "feed_ops", "=", "[", "]", "\n", "for", "key", "in", "feed", ".", "keys", "(", ")", ":", "\n", "                ", "feed_ops", ".", "append", "(", "self", ".", "__dict__", "[", "'op_'", "+", "key", "]", ")", "\n", "", "if", "isinstance", "(", "fetch", ",", "str", ")", ":", "\n", "                ", "fetch_ops", "=", "[", "self", ".", "__dict__", "[", "'op_'", "+", "key", "]", "for", "key", "in", "fetch", ".", "split", "(", "' '", ")", "]", "\n", "if", "len", "(", "fetch_ops", ")", "==", "1", ":", "\n", "                    ", "fetch_ops", "=", "fetch_ops", "[", "0", "]", "\n", "", "", "else", ":", "\n", "                ", "fetch_ops", "=", "fetch", "\n", "", "self", ".", "register_callable", "(", "cache_key", ",", "tf", ".", "get_default_session", "(", ")", ".", "make_callable", "(", "fetch_ops", ",", "feed_ops", ")", ")", "\n", "", "return", "self", ".", "_callables", "[", "cache_key", "]", "(", "*", "feed", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters": [[81, 96], ["module.Module._parameters.values", "module.Module._modules.values", "_out.append", "module.parameters"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters"], ["", "def", "parameters", "(", "self", ",", "trainable", "=", "True", ",", "non_trainable", "=", "False", ",", "recursive", "=", "True", ",", "_out", "=", "None", ")", "->", "List", "[", "Parameter", "]", ":", "\n", "        ", "\"\"\"\n            We don't introduce `buffers` here. PyTorch has it since it doesn't have non-trainable Parameter.\n            A tensor in `buffers` is essentially a non-trainable Parameter (part of state_dict but isn't\n            optimized over).\n        \"\"\"", "\n", "if", "_out", "is", "None", ":", "\n", "            ", "_out", "=", "[", "]", "\n", "", "for", "param", "in", "self", ".", "_parameters", ".", "values", "(", ")", ":", "\n", "            ", "if", "param", ".", "trainable", "and", "trainable", "or", "not", "param", ".", "trainable", "and", "non_trainable", ":", "\n", "                ", "_out", ".", "append", "(", "param", ")", "\n", "", "", "if", "recursive", ":", "\n", "            ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "                ", "module", ".", "parameters", "(", "trainable", "=", "trainable", ",", "non_trainable", "=", "non_trainable", ",", "recursive", "=", "True", ",", "_out", "=", "_out", ")", "\n", "", "", "return", "_out", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.scope": [[97, 100], ["tensorflow.variable_scope"], "methods", ["None"], ["", "@", "property", "\n", "def", "scope", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "variable_scope", "(", "self", ".", "_scope", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.extra_repr": [[101, 103], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "''", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.named_modules": [[104, 106], ["None"], "methods", ["None"], ["", "def", "named_modules", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "_modules", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.__repr__": [[107, 121], ["module.Module.__repr__.dfs"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "def", "dfs", "(", "node", ",", "prefix", ")", ":", "\n", "            ", "root_info", "=", "node", ".", "__class__", ".", "__name__", "\n", "modules", "=", "node", ".", "named_modules", "(", ")", "\n", "if", "not", "modules", ":", "\n", "                ", "return", "root_info", "+", "f'({node.extra_repr()})'", "\n", "\n", "", "root_info", "+=", "'(\\n'", "\n", "for", "key", ",", "module", "in", "modules", ".", "items", "(", ")", ":", "\n", "                ", "module_repr", "=", "dfs", "(", "module", ",", "prefix", "+", "'    '", ")", "\n", "root_info", "+=", "f'{prefix}    ({key}): {module_repr}\\n'", "\n", "", "root_info", "+=", "prefix", "+", "')'", "\n", "return", "root_info", "\n", "", "return", "dfs", "(", "self", ",", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict": [[122, 135], ["module.Module._parameters.items", "parameter.eval", "module.Module._modules.items", "module.state_dict"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.state_dict"], ["", "def", "state_dict", "(", "self", ",", "recursive", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n            A better option is to find all parameters and then sess.run(state) but I assume this can't be the\n            bottleneck.\n        \"\"\"", "\n", "state", "=", "{", "}", "\n", "for", "key", ",", "parameter", "in", "self", ".", "_parameters", ".", "items", "(", ")", ":", "\n", "# although we can use `.numpy()` here, for safety I'd use `.eval()`", "\n", "            ", "state", "[", "key", "]", "=", "parameter", ".", "eval", "(", ")", "\n", "", "if", "recursive", ":", "\n", "            ", "for", "key", ",", "module", "in", "self", ".", "_modules", ".", "items", "(", ")", ":", "\n", "                ", "state", "[", "key", "]", "=", "module", ".", "state_dict", "(", ")", "\n", "", "", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.load_state_dict": [[136, 149], ["module.Module._parameters.items", "module.Module._modules.items", "parameter.load", "parameter.invalidate", "module.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.file_storage.FileStorage.load", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.invalidate", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ":", "Dict", "[", "Any", ",", "Any", "]", ",", "recursive", "=", "True", ",", "strict", "=", "True", ")", ":", "\n", "        ", "for", "key", ",", "parameter", "in", "self", ".", "_parameters", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", "in", "state_dict", ":", "\n", "                ", "parameter", ".", "load", "(", "state_dict", "[", "key", "]", ")", "\n", "parameter", ".", "invalidate", "(", ")", "\n", "", "else", ":", "\n", "                ", "assert", "not", "strict", ",", "f'Missing Parameter {key} in state_dict'", "\n", "", "", "if", "recursive", ":", "\n", "            ", "for", "key", ",", "module", "in", "self", ".", "_modules", ".", "items", "(", ")", ":", "\n", "                ", "if", "key", "in", "state_dict", ":", "\n", "                    ", "module", ".", "load_state_dict", "(", "state_dict", "[", "key", "]", ",", "recursive", "=", "recursive", ",", "strict", "=", "strict", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "not", "strict", ",", "f'Missing Module {key} in state_dict.'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.apply": [[150, 155], ["module.Module._modules.values", "fn", "module.apply"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.apply"], ["", "", "", "", "def", "apply", "(", "self", ",", "fn", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "module", ".", "apply", "(", "fn", ")", "\n", "", "fn", "(", "self", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.initialize_parameters": [[156, 158], ["tensorflow.get_default_session().run", "tensorflow.initialize_variables", "tensorflow.get_default_session", "module.Module.parameters"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.parameters"], ["", "def", "initialize_parameters", "(", "self", ")", ":", "\n", "        ", "tf", ".", "get_default_session", "(", ")", ".", "run", "(", "tf", ".", "initialize_variables", "(", "self", ".", "parameters", "(", "non_trainable", "=", "True", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleDict.__init__": [[14, 20], ["module.Module.__init__", "setattr", "container.ModuleDict.update", "getattr"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update"], ["def", "__init__", "(", "self", ",", "modules", ":", "Dict", "[", "Any", ",", "Module", "]", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "for", "method", "in", "_dict_methods", ":", "# can we use a meta class for that?", "\n", "            ", "setattr", "(", "self", ",", "method", ",", "getattr", "(", "self", ".", "_modules", ",", "method", ")", ")", "\n", "", "if", "modules", ":", "\n", "            ", "self", ".", "update", "(", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleDict.__getitem__": [[21, 23], ["None"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "self", ".", "_modules", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleDict.forward": [[24, 26], ["RuntimeError"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"ModuleDict is not callable\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ParameterDict.__init__": [[30, 36], ["module.Module.__init__", "setattr", "container.ParameterDict.update", "getattr"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.update"], ["    ", "def", "__init__", "(", "self", ",", "parameters", ":", "Dict", "[", "Any", ",", "Parameter", "]", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "for", "method", "in", "_dict_methods", ":", "\n", "            ", "setattr", "(", "self", ",", "method", ",", "getattr", "(", "self", ".", "_parameters", ",", "method", ")", ")", "\n", "", "if", "parameters", ":", "\n", "            ", "self", ".", "update", "(", "parameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ParameterDict.forward": [[37, 39], ["RuntimeError"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"ParameterDict is not callable\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.__init__": [[42, 47], ["module.Module.__init__", "container.ModuleList.extend"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend"], ["    ", "def", "__init__", "(", "self", ",", "modules", ":", "List", "[", "Module", "]", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_sync_modules", "=", "[", "]", "\n", "if", "modules", ":", "\n", "            ", "self", ".", "extend", "(", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_sync_modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.__getitem__": [[51, 53], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "self", ".", "_sync_modules", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.__iter__": [[54, 56], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "_sync_modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList._sync": [[57, 59], ["enumerate"], "methods", ["None"], ["", "def", "_sync", "(", "self", ")", ":", "\n", "        ", "self", ".", "_modules", "=", "{", "i", ":", "module", "for", "i", ",", "module", "in", "enumerate", "(", "self", ".", "_sync_modules", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append": [[60, 63], ["container.ModuleList._sync_modules.append", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "def", "append", "(", "self", ",", "module", ")", ":", "# for efficiency", "\n", "        ", "self", ".", "_modules", "[", "len", "(", "self", ")", "]", "=", "module", "\n", "self", ".", "_sync_modules", ".", "append", "(", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend": [[64, 67], ["container.ModuleList.append"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["", "def", "extend", "(", "self", ",", "modules", ")", ":", "\n", "        ", "for", "module", "in", "modules", ":", "\n", "            ", "self", ".", "append", "(", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.__delitem__": [[68, 71], ["container.ModuleList._sync"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList._sync"], ["", "", "def", "__delitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "del", "self", ".", "_sync_modules", "[", "idx", "]", "\n", "self", ".", "_sync", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.forward": [[72, 74], ["RuntimeError"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"ModuleList in not callable\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.__init__": [[8, 21], ["module.Module.__init__", "numpy.sqrt", "tensorflow.random_uniform_initializer", "parameter.Parameter", "tensorflow.random_uniform_initializer.", "parameter.Parameter", "tensorflow.zeros"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ":", "int", ",", "out_features", ":", "int", ",", "bias", "=", "True", ",", "weight_initializer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "if", "weight_initializer", "is", "None", ":", "\n", "            ", "init_range", "=", "np", ".", "sqrt", "(", "6.0", "/", "(", "in_features", "+", "out_features", ")", ")", "\n", "weight_initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "init_range", ",", "init_range", ")", "\n", "\n", "", "self", ".", "use_bias", "=", "bias", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "weight", "=", "Parameter", "(", "weight_initializer", "(", "[", "in_features", ",", "out_features", "]", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "name", "=", "'weight'", ")", "\n", "if", "bias", ":", "\n", "                ", "self", ".", "bias", "=", "Parameter", "(", "tf", ".", "zeros", "(", "[", "out_features", "]", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "name", "=", "'bias'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.build": [[22, 25], ["tensorflow.placeholder", "layers.Linear."], "methods", ["None"], ["", "", "", "def", "build", "(", "self", ")", ":", "\n", "        ", "self", ".", "op_input", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "in_features", "]", ",", "name", "=", "'input'", ")", "\n", "self", ".", "op_output", "=", "self", "(", "self", ".", "op_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.forward": [[26, 35], ["x.get_shape().as_list", "len", "tensorflow.tensordot", "tensorflow.matmul", "x.get_shape", "len"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.tensordot", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.matmul"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "if", "len", "(", "shape", ")", ">", "2", ":", "\n", "            ", "y", "=", "tf", ".", "tensordot", "(", "x", ",", "self", ".", "weight", ",", "[", "[", "len", "(", "shape", ")", "-", "1", "]", ",", "[", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "            ", "y", "=", "tf", ".", "matmul", "(", "x", ",", "self", ".", "weight", ")", "\n", "", "if", "self", ".", "use_bias", ":", "\n", "            ", "y", "=", "y", "+", "self", ".", "bias", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.fast": [[36, 41], ["x.dot.dot.dot", "layers.Linear.weight.numpy", "layers.Linear.bias.numpy"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy", "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy"], ["", "def", "fast", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "dot", "(", "self", ".", "weight", ".", "numpy", "(", ")", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "bias", ".", "numpy", "(", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Linear.extra_repr": [[42, 44], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'in_features={self.in_features}, out_features={self.out_features}, bias={self.use_bias}'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Sequential.__init__": [[47, 51], ["module.Module.__init__", "enumerate"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "modules", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "for", "i", ",", "module", "in", "enumerate", "(", "modules", ")", ":", "\n", "            ", "self", ".", "_modules", "[", "i", "]", "=", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Sequential.forward": [[52, 56], ["layers.Sequential._modules.values", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Sequential.fast": [[57, 61], ["layers.Sequential._modules.values", "module.fast"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Squeeze.fast"], ["", "def", "fast", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", ".", "fast", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.ReLU.forward": [[64, 66], ["tensorflow.nn.relu"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.ReLU.fast": [[67, 69], ["numpy.maximum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.maximum"], ["", "def", "fast", "(", "self", ",", "x", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "np", ".", "maximum", "(", "x", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Tanh.forward": [[72, 74], ["tensorflow.nn.tanh"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "tanh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Tanh.fast": [[75, 77], ["numpy.tanh"], "methods", ["None"], ["", "def", "fast", "(", "self", ",", "x", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "np", ".", "tanh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Dropout.__init__": [[80, 85], ["module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "drop_prob", ":", "float", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "0", "<=", "drop_prob", "<=", "1", "\n", "self", ".", "drop_prob", "=", "drop_prob", "\n", "self", ".", "training", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Dropout.forward": [[86, 90], ["tensorflow.nn.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "drop_prob", "==", "0", ":", "\n", "            ", "return", "x", "\n", "", "return", "tf", ".", "nn", ".", "dropout", "(", "x", ",", "1", "-", "self", ".", "drop_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Dropout.fast": [[91, 96], ["numpy.random.rand"], "methods", ["None"], ["", "def", "fast", "(", "self", ",", "x", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "if", "self", ".", "drop_prob", "==", "0", ":", "\n", "            ", "return", "x", "\n", "", "noise", "=", "np", ".", "random", ".", "rand", "(", "*", "x", ".", "shape", ")", ">=", "self", ".", "drop_prob", "\n", "return", "noise", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Dropout.extra_repr": [[97, 99], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'p={self.drop_prob}'", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Squeeze.__init__": [[102, 105], ["module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Squeeze.forward": [[106, 108], ["tensorflow.squeeze"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "tf", ".", "squeeze", "(", "x", ",", "axis", "=", "self", ".", "_axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.Squeeze.fast": [[109, 111], ["x.squeeze"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.squeeze"], ["", "def", "fast", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "squeeze", "(", "axis", "=", "self", ".", "_axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LeakyReLU.__init__": [[114, 117], ["module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "0.01", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LeakyReLU.forward": [[118, 120], ["tensorflow.nn.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "leaky_relu", "(", "x", ",", "alpha", "=", "self", ".", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LeakyReLU.extra_repr": [[121, 123], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f\"alpha={self.alpha:.6f}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LayerNorm.__init__": [[129, 138], ["module.Module.__init__", "parameter.Parameter", "parameter.Parameter", "tensorflow.ones", "tensorflow.zeros"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["def", "__init__", "(", "self", ",", "normalized_shape", ",", "eps", "=", "1e-12", ",", "elementwise_affine", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "elementwise_affine", ",", "\"partial implementation\"", "\n", "self", ".", "normalized_shape", "=", "normalized_shape", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "with", "self", ".", "scope", ":", "\n", "            ", "self", ".", "scale", "=", "Parameter", "(", "tf", ".", "ones", "(", "normalized_shape", ")", ",", "name", "=", "'scale'", ")", "\n", "self", ".", "offset", "=", "Parameter", "(", "tf", ".", "zeros", "(", "normalized_shape", ")", ",", "name", "=", "'offset'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LayerNorm.forward": [[139, 145], ["list", "tensorflow.nn.moments", "tensorflow.nn.batch_normalization", "range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "rank", "=", "x", ".", "shape", ".", "ndims", "\n", "axes", "=", "list", "(", "range", "(", "rank", "-", "len", "(", "self", ".", "normalized_shape", ")", ",", "rank", ")", ")", "\n", "mean", ",", "var", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "axes", "=", "axes", ",", "keep_dims", "=", "True", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "batch_normalization", "(", "x", ",", "mean", ",", "var", ",", "self", ".", "offset", ",", "self", ".", "scale", ",", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.layers.LayerNorm.extra_repr": [[146, 148], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f\"{self.normalized_shape}, eps={self.eps}\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss._Loss.__init__": [[8, 12], ["module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "reduction", "in", "[", "'mean'", ",", "'sum'", ",", "'none'", "]", "\n", "self", ".", "reduction", "=", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss._Loss._reduce": [[13, 19], ["tensorflow.reduce_mean", "tensorflow.reduce_sum"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum"], ["", "def", "_reduce", "(", "self", ",", "loss", ")", ":", "\n", "        ", "if", "self", ".", "reduction", "==", "'mean'", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_mean", "(", "loss", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'sum'", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_sum", "(", "loss", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss.L1Loss.forward": [[22, 24], ["loss.L1Loss._reduce", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.loss._Loss._reduce", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.abs"], ["    ", "def", "forward", "(", "self", ",", "output", ":", "lz", ".", "Tensor", ",", "target", ":", "lz", ".", "Tensor", ")", ":", "\n", "        ", "return", "self", ".", "_reduce", "(", "tf", ".", "abs", "(", "output", "-", "target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss.MSELoss.forward": [[27, 29], ["loss.MSELoss._reduce", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.loss._Loss._reduce", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square"], ["    ", "def", "forward", "(", "self", ",", "output", ":", "lz", ".", "Tensor", ",", "target", ":", "lz", ".", "Tensor", ")", ":", "\n", "        ", "return", "self", ".", "_reduce", "(", "tf", ".", "square", "(", "output", "-", "target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss.L2Loss.__init__": [[35, 38], ["loss._Loss.__init__"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "average", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "reduction", ")", "\n", "self", ".", "average", "=", "average", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.loss.L2Loss.forward": [[39, 46], ["tensorflow.square", "tf.reduce_sum.L2Loss._reduce", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.sqrt"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.square", "home.repos.pwc.inspect_result.roosephu_boots.nn.loss._Loss._reduce", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_mean", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.sqrt"], ["", "def", "forward", "(", "self", ",", "output", ":", "lz", ".", "Tensor", ",", "target", ":", "lz", ".", "Tensor", ")", ":", "\n", "        ", "loss", "=", "tf", ".", "square", "(", "output", "-", "target", ")", "\n", "if", "self", ".", "average", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_mean", "(", "loss", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_sum", "(", "loss", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "self", ".", "_reduce", "(", "tf", ".", "sqrt", "(", "loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.__init__": [[8, 13], ["module.Module.__init__", "flat_param.FlatParam.enable_flat"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__", "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.enable_flat"], ["    ", "def", "__init__", "(", "self", ",", "parameters", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "params", "=", "parameters", "\n", "self", ".", "op_feed_flat", ",", "self", ".", "op_set_flat", ",", "self", ".", "op_get_flat", "=", "self", ".", "enable_flat", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.enable_flat": [[14, 23], ["lunzi.log.info", "utils.n_parameters", "tensorflow.placeholder", "utils.parameters_to_vector", "tensorflow.group", "tensorflow.assign", "zip", "utils.vector_to_parameters"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.n_parameters", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.parameters_to_vector", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.vector_to_parameters"], ["", "def", "enable_flat", "(", "self", ")", ":", "\n", "        ", "params", "=", "self", ".", "params", "\n", "lz", ".", "log", ".", "info", "(", "'Enabling flattening... %s'", ",", "[", "p", ".", "name", "for", "p", "in", "params", "]", ")", "\n", "n_params", "=", "n_parameters", "(", "params", ")", "\n", "feed_flat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "n_params", "]", ")", "\n", "get_flat", "=", "parameters_to_vector", "(", "params", ")", "\n", "set_flat", "=", "tf", ".", "group", "(", "*", "[", "tf", ".", "assign", "(", "param", ",", "value", ")", "for", "param", ",", "value", "in", "\n", "zip", "(", "params", ",", "vector_to_parameters", "(", "feed_flat", ",", "params", ")", ")", "]", ")", "\n", "return", "feed_flat", ",", "set_flat", ",", "get_flat", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.forward": [[24, 26], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "op_get_flat", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.set_flat": [[27, 30], ["utils.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "make_method", "(", "feed", "=", "'feed_flat'", ",", "fetch", "=", "'set_flat'", ")", "\n", "def", "set_flat", "(", "self", ",", "feed_flat", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.flat_param.FlatParam.get_flat": [[31, 34], ["utils.make_method"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method"], ["", "@", "make_method", "(", "fetch", "=", "'get_flat'", ")", "\n", "def", "get_flat", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.make_method": [[11, 52], ["inspect.signature().parameters.keys", "functools.wraps", "zip", "kwargs.pop", "inspect.getcallargs", "utils..eval", "feed.split", "inspect.signature", "arg_map.items"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval"], ["def", "make_method", "(", "feed", ":", "str", "=", "None", ",", "fetch", ":", "str", "=", "''", ")", ":", "\n", "    ", "\"\"\"\n        The following code:\n\n            @make_method('. w', fetch='d)\n            def func(a, c):\n                pass\n\n        will be converted to\n\n            def func(a, c, fetch='d'):\n                return self.eval(fetch, a=a, w=c)\n\n        Note that `func(1, c=2, b=1)` is also supported. This is\n        useful when writing PyTorch-like object method.\n\n    \"\"\"", "\n", "\n", "def", "decorator", "(", "func", ":", "Callable", ")", ":", "\n", "        ", "arg_names", "=", "inspect", ".", "signature", "(", "func", ")", ".", "parameters", ".", "keys", "(", ")", "\n", "arg_map", "=", "{", "}", "\n", "if", "feed", "is", "None", ":", "\n", "            ", "arg_map", "=", "{", "op_name", ":", "op_name", "for", "op_name", "in", "arg_names", "if", "op_name", "!=", "'self'", "}", "\n", "", "else", ":", "\n", "            ", "feeds", "=", "[", "'-'", "]", "+", "feed", ".", "split", "(", "' '", ")", "# ignore first `self`", "\n", "for", "op_name", ",", "arg_name", "in", "zip", "(", "feeds", ",", "arg_names", ")", ":", "\n", "                ", "if", "op_name", "==", "'.'", ":", "\n", "                    ", "arg_map", "[", "op_name", "]", "=", "op_name", "\n", "", "elif", "op_name", "!=", "'-'", ":", "# deprecated", "\n", "                    ", "arg_map", "[", "op_name", "]", "=", "arg_name", "\n", "\n", "", "", "", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "cur_fetch", "=", "kwargs", ".", "pop", "(", "'fetch'", ",", "fetch", ")", "\n", "call_args", "=", "inspect", ".", "getcallargs", "(", "func", ",", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "feed_dict", "=", "{", "op_name", ":", "call_args", "[", "arg_name", "]", "for", "op_name", ",", "arg_name", "in", "arg_map", ".", "items", "(", ")", "}", "\n", "return", "self", ".", "eval", "(", "cur_fetch", ",", "**", "feed_dict", ")", "\n", "\n", "", "return", "wrapper", "\n", "\n", "", "return", "decorator", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.n_parameters": [[54, 56], ["sum", "numpy.prod"], "function", ["None"], ["", "def", "n_parameters", "(", "params", ":", "List", "[", "Parameter", "]", ")", "->", "int", ":", "\n", "    ", "return", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "shape", ")", "for", "p", "in", "params", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.parameters_to_vector": [[58, 60], ["tensorflow.concat", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape"], ["", "def", "parameters_to_vector", "(", "parameters", ":", "List", "[", "Union", "[", "Parameter", ",", "Tensor", "]", "]", ")", "->", "Tensor", ":", "\n", "    ", "return", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "param", ",", "[", "-", "1", "]", ")", "for", "param", "in", "parameters", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.vector_to_parameters": [[62, 70], ["params.append", "numpy.prod", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape"], ["", "def", "vector_to_parameters", "(", "vec", ":", "Tensor", ",", "parameters", ":", "List", "[", "Parameter", "]", ")", "->", "List", "[", "Tensor", "]", ":", "\n", "    ", "params", ":", "List", "[", "Tensor", "]", "=", "[", "]", "\n", "start", "=", "0", "\n", "for", "p", "in", "parameters", ":", "\n", "        ", "end", "=", "start", "+", "np", ".", "prod", "(", "p", ".", "shape", ")", "\n", "params", ".", "append", "(", "tf", ".", "reshape", "(", "vec", "[", "start", ":", "end", "]", ",", "p", ".", "shape", ")", ")", "\n", "start", "=", "end", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.hessian_vec_prod": [[72, 76], ["utils.parameters_to_vector", "tensorflow.reduce_sum", "utils.parameters_to_vector", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.nn.utils.parameters_to_vector", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reduce_sum", "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.parameters_to_vector"], ["", "def", "hessian_vec_prod", "(", "ys", ":", "Tensor", ",", "xs", ":", "List", "[", "Parameter", "]", ",", "vs", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "grad", "=", "parameters_to_vector", "(", "tf", ".", "gradients", "(", "ys", ",", "xs", ")", ")", "\n", "aux", "=", "tf", ".", "reduce_sum", "(", "grad", "*", "vs", ")", "\n", "return", "parameters_to_vector", "(", "tf", ".", "gradients", "(", "aux", ",", "xs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.utils.jacobian_vec_prod": [[79, 83], ["tensorflow.zeros_like", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.zeros_like"], ["", "def", "jacobian_vec_prod", "(", "ys", ":", "Tensor", ",", "xs", ":", "List", "[", "Parameter", "]", ",", "vs", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "u", "=", "tf", ".", "zeros_like", "(", "ys", ")", "# dummy variable", "\n", "grad", "=", "tf", ".", "gradients", "(", "ys", ",", "xs", ",", "grad_ys", "=", "u", ")", "\n", "return", "tf", ".", "gradients", "(", "grad", ",", "u", ",", "grad_ys", "=", "vs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.numpy": [[5, 9], ["parameter..__dict__.get", "parameter..eval"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.utils.average_meter.AverageMeter.get", "home.repos.pwc.inspect_result.roosephu_boots.nn.module.Module.eval"], ["def", "numpy", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "__dict__", ".", "get", "(", "'_numpy_cache'", ",", "None", ")", "is", "None", ":", "\n", "        ", "self", ".", "_numpy_cache", ":", "Tensor", "=", "self", ".", "eval", "(", ")", "\n", "", "return", "self", ".", "_numpy_cache", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.invalidate": [[11, 13], ["None"], "function", ["None"], ["", "def", "invalidate", "(", "self", ")", ":", "\n", "    ", "self", ".", "_numpy_cache", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.parameter.deepcopy": [[15, 20], ["tensorflow.Variable", "id", "parameter..initialized_value", "id"], "function", ["None"], ["", "def", "deepcopy", "(", "self", ":", "tf", ".", "Variable", ",", "memo", ")", ":", "\n", "    ", "assert", "id", "(", "self", ")", "not", "in", "memo", "\n", "ret", "=", "tf", ".", "Variable", "(", "self", ".", "initialized_value", "(", ")", ",", "trainable", "=", "self", ".", "trainable", ")", "\n", "memo", "[", "id", "(", "self", ")", "]", "=", "ret", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.patch.find_monkey_patch_keys": [[5, 26], ["tensorflow.__dict__.items", "lunzi.log.critical", "doc.find", "[].split", "first_arg_doc.startswith", "first_arg_doc.startswith", "key.startswith", "patched.append", "callable", "doc[].split"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.append"], ["def", "find_monkey_patch_keys", "(", "avoid_set", "=", "None", ")", ":", "\n", "    ", "if", "avoid_set", "is", "None", ":", "\n", "        ", "avoid_set", "=", "{", "\"shape\"", "}", "# tf.shape conflicts with Tensor.shape", "\n", "", "patched", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "tf", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "callable", "(", "value", ")", "or", "key", "in", "avoid_set", ":", "\n", "            ", "continue", "\n", "", "doc", "=", "value", ".", "__doc__", "\n", "if", "doc", "is", "None", ":", "\n", "            ", "continue", "\n", "", "loc", "=", "doc", ".", "find", "(", "'Args:\\n'", ")", "\n", "if", "loc", "==", "-", "1", ":", "\n", "            ", "continue", "\n", "\n", "# Am I doing NLP?", "\n", "# It seems that PyTorch has better doc. They always write `x (Tensor): ...` which is much easier to parse.", "\n", "", "first_arg_doc", "=", "doc", "[", "loc", "+", "6", ":", "]", ".", "split", "(", "'\\n'", ")", "[", "0", "]", ".", "split", "(", "': '", ")", "[", "1", "]", "\n", "if", "first_arg_doc", ".", "startswith", "(", "'A `Tensor`'", ")", "or", "first_arg_doc", ".", "startswith", "(", "'`Tensor`'", ")", "or", "key", ".", "startswith", "(", "'reduce_'", ")", ":", "\n", "            ", "patched", ".", "append", "(", "key", ")", "\n", "", "", "lz", ".", "log", ".", "critical", "(", "f'Monkey patched TensorFlow: {patched}'", ")", "\n", "return", "patched", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.nn.patch.monkey_patch": [[28, 60], ["lunzi.log.critical", "list", "list", "setattr", "setattr", "zip", "alias.items"], "function", ["None"], ["", "def", "monkey_patch", "(", "avoid_set", "=", "None", ")", ":", "\n", "\n", "    ", "patched", "=", "[", "'abs'", ",", "'acos'", ",", "'acosh'", ",", "'add'", ",", "'angle'", ",", "'argmax'", ",", "'argmin'", ",", "'asin'", ",", "'asinh'", ",", "'atan'", ",", "'atan2'", ",", "'atanh'", ",", "\n", "'betainc'", ",", "'cast'", ",", "'ceil'", ",", "'check_numerics'", ",", "'clip_by_average_norm'", ",", "'clip_by_norm'", ",", "'clip_by_value'", ",", "\n", "'complex'", ",", "'conj'", ",", "'cos'", ",", "'cosh'", ",", "'cross'", ",", "'cumprod'", ",", "'cumsum'", ",", "'dequantize'", ",", "'diag'", ",", "'digamma'", ",", "\n", "'equal'", ",", "'erf'", ",", "'erfc'", ",", "'exp'", ",", "'expand_dims'", ",", "'expm1'", ",", "'fill'", ",", "'floor'", ",", "'floor_div'", ",", "'floordiv'", ",", "'floormod'", ",", "\n", "'gather'", ",", "'gather_nd'", ",", "'greater'", ",", "'greater_equal'", ",", "'hessians'", ",", "'identity'", ",", "'igamma'", ",", "'igammac'", ",", "'imag'", ",", "\n", "'is_finite'", ",", "'is_inf'", ",", "'is_nan'", ",", "'less'", ",", "'less_equal'", ",", "'lgamma'", ",", "'log'", ",", "'log1p'", ",", "'logical_and'", ",", "\n", "'logical_not'", ",", "'logical_or'", ",", "'matmul'", ",", "'maximum'", ",", "'meshgrid'", ",", "'minimum'", ",", "'mod'", ",", "'multiply'", ",", "'negative'", ",", "\n", "'norm'", ",", "'not_equal'", ",", "'one_hot'", ",", "'ones_like'", ",", "'pad'", ",", "'polygamma'", ",", "'pow'", ",", "'quantize'", ",", "'real'", ",", "'realdiv'", ",", "\n", "'reciprocal'", ",", "'reduce_all'", ",", "'reduce_any'", ",", "'reduce_logsumexp'", ",", "'reduce_max'", ",", "'reduce_mean'", ",", "'reduce_min'", ",", "\n", "'reduce_prod'", ",", "'reduce_sum'", ",", "'reshape'", ",", "'reverse'", ",", "'rint'", ",", "'round'", ",", "'rsqrt'", ",", "'scatter_nd'", ",", "'sign'", ",", "'sin'", ",", "\n", "'sinh'", ",", "'size'", ",", "'slice'", ",", "'sqrt'", ",", "'square'", ",", "'squeeze'", ",", "'stop_gradient'", ",", "'subtract'", ",", "'tan'", ",", "'tensordot'", ",", "\n", "'tile'", ",", "'to_bfloat16'", ",", "'to_complex128'", ",", "'to_complex64'", ",", "'to_double'", ",", "'to_float'", ",", "'to_int32'", ",", "'to_int64'", ",", "\n", "'transpose'", ",", "'truediv'", ",", "'truncatediv'", ",", "'truncatemod'", ",", "'unique'", ",", "'where'", ",", "'zeros_like'", ",", "'zeta'", "]", "\n", "alias", "=", "{", "\n", "'mul'", ":", "'multiply'", ",", "\n", "'sub'", ":", "'subtract'", ",", "\n", "'div'", ":", "'divide'", ",", "\n", "'mean'", ":", "'reduce_mean'", ",", "\n", "'sum'", ":", "'reduce_sum'", ",", "\n", "}", "\n", "\n", "# use the code below for more ops", "\n", "# patched = find_monkey_patch_keys(avoid_set)", "\n", "\n", "for", "key", ",", "method", "in", "list", "(", "zip", "(", "patched", ",", "patched", ")", ")", "+", "list", "(", "alias", ".", "items", "(", ")", ")", ":", "\n", "        ", "value", "=", "tf", ".", "__dict__", "[", "method", "]", "\n", "setattr", "(", "tf", ".", "Tensor", ",", "key", ",", "value", ")", "\n", "setattr", "(", "tf", ".", "Variable", ",", "key", ",", "value", ")", "\n", "\n", "", "lz", ".", "log", ".", "critical", "(", "'`TensorFlow` patched...'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.v_function.BaseVFunction.get_values": [[7, 10], ["None"], "methods", ["None"], ["    ", "@", "abc", ".", "abstractmethod", "\n", "def", "get_values", "(", "self", ",", "states", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.__init__": [[15, 22], ["utils.gen_dtype", "runner.Runner.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.utils.gen_dtype", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["def", "__init__", "(", "self", ",", "env", ":", "Union", "[", "BaseBatchedEnv", ",", "gym", ".", "Wrapper", "]", ",", "max_steps", ":", "int", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "self", ".", "n_envs", "=", "env", ".", "n_envs", "\n", "self", ".", "max_steps", "=", "max_steps", "\n", "self", ".", "_dtype", "=", "gen_dtype", "(", "env", ",", "'state action next_state reward done timeout'", ")", "\n", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.reset": [[23, 25], ["runner.Runner.set_state", "runner.Runner.env.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.set_state", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_state", "(", "self", ".", "env", ".", "reset", "(", ")", ",", "set_env_state", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.set_state": [[26, 32], ["states.copy", "numpy.zeros", "numpy.zeros", "runner.Runner.env.set_state"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.set_state"], ["", "def", "set_state", "(", "self", ",", "states", ":", "np", ".", "ndarray", ",", "set_env_state", "=", "True", ")", ":", "\n", "        ", "self", ".", "_states", "=", "states", ".", "copy", "(", ")", "\n", "if", "set_env_state", ":", "\n", "            ", "self", ".", "env", ".", "set_state", "(", "states", ")", "\n", "", "self", ".", "_n_steps", "=", "np", ".", "zeros", "(", "self", ".", "n_envs", ",", "'i4'", ")", "\n", "self", ".", "_returns", "=", "np", ".", "zeros", "(", "self", ".", "n_envs", ",", "'f8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.get_state": [[33, 35], ["runner.Runner._states.copy"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_states", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.runner.Runner.run": [[36, 71], ["Dataset().reshape.Dataset().reshape", "range", "policy.get_actions", "runner.Runner.env.step", "hasattr", "dones.astype.astype.astype", "numpy.rec.fromarrays", "next_states.copy.copy.copy", "ep_infos.extend", "dataset.Dataset().reshape.reshape", "Dataset().reshape.Dataset", "policy.step", "runner.Runner._states.copy", "next_states.copy.copy.copy", "numpy.where", "len", "hasattr", "next_states.copy.copy.copy", "runner.Runner.env.partial_reset", "policy.reset"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.rl.policy.BasePolicy.get_actions", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.nn.container.ModuleList.extend", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.where", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.multi_layer_perception.MultiLayerPerceptron.copy", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset", "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset"], ["", "def", "run", "(", "self", ",", "policy", ":", "BasePolicy", ",", "n_samples", ":", "int", ")", ":", "\n", "        ", "ep_infos", "=", "[", "]", "\n", "n_steps", "=", "n_samples", "//", "self", ".", "n_envs", "\n", "assert", "n_steps", "*", "self", ".", "n_envs", "==", "n_samples", "\n", "dataset", "=", "Dataset", "(", "self", ".", "_dtype", ",", "n_samples", ")", ".", "reshape", "(", "n_steps", ",", "self", ".", "n_envs", ")", "\n", "\n", "for", "T", "in", "range", "(", "n_steps", ")", ":", "\n", "            ", "actions", "=", "policy", ".", "get_actions", "(", "self", ".", "_states", ")", "\n", "\n", "next_states", ",", "rewards", ",", "dones", ",", "infos", "=", "self", ".", "env", ".", "step", "(", "actions", ")", "\n", "if", "hasattr", "(", "policy", ",", "'step'", ")", ":", "\n", "                ", "policy", ".", "step", "(", ")", "\n", "", "dones", "=", "dones", ".", "astype", "(", "bool", ")", "\n", "self", ".", "_returns", "+=", "rewards", "\n", "self", ".", "_n_steps", "+=", "1", "\n", "timeouts", "=", "self", ".", "_n_steps", "==", "self", ".", "max_steps", "\n", "\n", "steps", "=", "[", "self", ".", "_states", ".", "copy", "(", ")", ",", "actions", ",", "next_states", ".", "copy", "(", ")", ",", "rewards", ",", "dones", ",", "timeouts", "]", "\n", "dataset", "[", "T", "]", "=", "np", ".", "rec", ".", "fromarrays", "(", "steps", ",", "dtype", "=", "self", ".", "_dtype", ")", "\n", "\n", "indices", "=", "np", ".", "where", "(", "dones", "|", "timeouts", ")", "[", "0", "]", "\n", "if", "len", "(", "indices", ")", ">", "0", ":", "\n", "                ", "if", "hasattr", "(", "policy", ",", "'reset'", ")", ":", "\n", "                    ", "policy", ".", "reset", "(", "indices", ")", "\n", "", "next_states", "=", "next_states", ".", "copy", "(", ")", "\n", "next_states", "[", "indices", "]", "=", "self", ".", "env", ".", "partial_reset", "(", "indices", ")", "\n", "for", "index", "in", "indices", ":", "\n", "                    ", "infos", "[", "index", "]", "[", "'episode'", "]", "=", "{", "'return'", ":", "self", ".", "_returns", "[", "index", "]", ",", "'extra'", ":", "infos", "[", "index", "]", "}", "\n", "", "self", ".", "_n_steps", "[", "indices", "]", "=", "0", "\n", "self", ".", "_returns", "[", "indices", "]", "=", "0.", "\n", "\n", "", "self", ".", "_states", "=", "next_states", ".", "copy", "(", ")", "\n", "ep_infos", ".", "extend", "(", "[", "info", "[", "'episode'", "]", "for", "info", "in", "infos", "if", "'episode'", "in", "info", "]", ")", "\n", "\n", "", "return", "dataset", ".", "reshape", "(", "-", "1", ")", ",", "ep_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.policy.BasePolicy.get_actions": [[7, 10], ["None"], "methods", ["None"], ["    ", "@", "abc", ".", "abstractmethod", "\n", "def", "get_actions", "(", "self", ",", "states", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.policy.BasePolicy.reset": [[11, 13], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "indices", "=", "None", ")", ":", "# for stateful policies", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.policy.BasePolicy.step": [[14, 16], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ")", ":", "# for stateful policies", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.q_function.BaseQFunction.get_q": [[7, 10], ["None"], "methods", ["None"], ["    ", "@", "abc", ".", "abstractmethod", "\n", "def", "get_q", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.utils.compute_advantage": [[9, 34], ["samples.reshape.reshape", "numpy.zeros", "reversed", "len", "vfn.get_values", "vfn.get_values().reshape", "numpy.zeros", "numpy.zeros", "range", "np.zeros.reshape", "np.zeros.reshape", "vfn.get_values", "samples.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.rl.v_function.BaseVFunction.get_values", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape", "home.repos.pwc.inspect_result.roosephu_boots.rl.v_function.BaseVFunction.get_values", "home.repos.pwc.inspect_result.roosephu_boots.lunzi.stubs.Tensor.reshape"], ["\n", "\n", "def", "make_method", "(", "feed", ":", "str", "=", "None", ",", "fetch", ":", "str", "=", "''", ")", ":", "\n", "    ", "\"\"\"\n        The following code:\n\n            @make_method('. w', fetch='d)\n            def func(a, c):\n                pass\n\n        will be converted to\n\n            def func(a, c, fetch='d'):\n                return self.eval(fetch, a=a, w=c)\n\n        Note that `func(1, c=2, b=1)` is also supported. This is\n        useful when writing PyTorch-like object method.\n\n    \"\"\"", "\n", "\n", "def", "decorator", "(", "func", ":", "Callable", ")", ":", "\n", "        ", "arg_names", "=", "inspect", ".", "signature", "(", "func", ")", ".", "parameters", ".", "keys", "(", ")", "\n", "arg_map", "=", "{", "}", "\n", "if", "feed", "is", "None", ":", "\n", "            ", "arg_map", "=", "{", "op_name", ":", "op_name", "for", "op_name", "in", "arg_names", "if", "op_name", "!=", "'self'", "}", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.utils.gen_dtype": [[36, 48], ["fields.split"], "function", ["None"], ["for", "op_name", ",", "arg_name", "in", "zip", "(", "feeds", ",", "arg_names", ")", ":", "\n", "                ", "if", "op_name", "==", "'.'", ":", "\n", "                    ", "arg_map", "[", "op_name", "]", "=", "op_name", "\n", "", "elif", "op_name", "!=", "'-'", ":", "# deprecated", "\n", "                    ", "arg_map", "[", "op_name", "]", "=", "arg_name", "\n", "\n", "", "", "", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "cur_fetch", "=", "kwargs", ".", "pop", "(", "'fetch'", ",", "fetch", ")", "\n", "call_args", "=", "inspect", ".", "getcallargs", "(", "func", ",", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "feed_dict", "=", "{", "op_name", ":", "call_args", "[", "arg_name", "]", "for", "op_name", ",", "arg_name", "in", "arg_map", ".", "items", "(", ")", "}", "\n", "return", "self", ".", "eval", "(", "cur_fetch", ",", "**", "feed_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.step": [[10, 13], ["None"], "methods", ["None"], ["@", "abc", ".", "abstractmethod", "\n", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.reset": [[14, 16], ["env.BaseBatchedEnv.partial_reset", "range"], "methods", ["home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "partial_reset", "(", "range", "(", "self", ".", "n_envs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseBatchedEnv.partial_reset": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "partial_reset", "(", "self", ",", "indices", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.mb_step": [[23, 26], ["None"], "methods", ["None"], ["    ", "@", "abc", ".", "abstractmethod", "\n", "def", "mb_step", "(", "self", ",", "states", ":", "np", ".", "ndarray", ",", "actions", ":", "np", ".", "ndarray", ",", "next_states", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.seed": [[27, 29], ["None"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", ":", "int", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.roosephu_boots.rl.env.BaseModelBasedEnv.verify": [[30, 32], ["None"], "methods", ["None"], ["", "def", "verify", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]]}