{"home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.create_more_samples_using_augmentation": [[21, 80], ["np.array.extend", "data_augmentation.central_scale_images", "np.array.extend", "data_augmentation.translate_images", "np.array.extend", "data_augmentation.rotate_images_with_finer_angles", "np.array.extend", "data_augmentation.flip_images", "np.array.extend", "data_augmentation.translate_images", "np.array.extend", "data_augmentation.rotate_images_with_finer_angles", "np.array.extend", "data_augmentation.rotate_images_with_finer_angles", "np.array.extend", "numpy.array", "numpy.argmax", "keras.utils.to_categorical", "data_augmentation.add_salt_pepper_noise", "np.array.extend", "data_augmentation.add_gaussian_noise", "np.array.extend", "data_augmentation.add_gaussian_noise", "np.array.extend", "data_augmentation.cifar_10_soft_logits_from_alexnet_teacher"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.central_scale_images", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.translate_images", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.rotate_images_with_finer_angles", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.flip_images", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.translate_images", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.rotate_images_with_finer_angles", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.rotate_images_with_finer_angles", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.add_salt_pepper_noise", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.add_gaussian_noise", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.add_gaussian_noise", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.cifar_10_soft_logits_from_alexnet_teacher"], ["def", "create_more_samples_using_augmentation", "(", "train_x", ",", "train_y", ",", "train_y_softmax", ",", "dataset", ")", ":", "\n", "    ", "original_train_x", "=", "train_x", "\n", "original_train_y", "=", "train_y", "\n", "original_train_y_softmax", "=", "train_y_softmax", "\n", "train_x", "=", "[", "]", ";", "\n", "train_x", ".", "extend", "(", "original_train_x", ")", "\n", "\n", "\"\"\"scaling\"\"\"", "\n", "scales", "=", "[", "0.90", ",", "0.75", ",", "0.60", "]", "\n", "scaled_x", "=", "central_scale_images", "(", "original_train_x", ",", "scales", ")", "\n", "train_x", ".", "extend", "(", "scaled_x", ")", "\n", "\n", "\"\"\"translation\"\"\"", "\n", "translate_x", "=", "translate_images", "(", "original_train_x", ")", "\n", "train_x", ".", "extend", "(", "translate_x", ")", "\n", "\n", "rotate_x", "=", "rotate_images_with_finer_angles", "(", "original_train_x", ",", "-", "90", ",", "90", ",", "10", ")", "\n", "train_x", ".", "extend", "(", "rotate_x", ")", "\n", "\n", "#flipping", "\n", "flip_x", "=", "flip_images", "(", "original_train_x", ")", "\n", "train_x", ".", "extend", "(", "flip_x", ")", "\n", "\n", "#pepper noise", "\n", "if", "dataset", "==", "'cifar10'", ":", "\n", "       ", "pepper_x", "=", "add_salt_pepper_noise", "(", "original_train_x", ")", "\n", "train_x", ".", "extend", "(", "pepper_x", ")", "\n", "\n", "gauss_x", "=", "add_gaussian_noise", "(", "original_train_x", ")", "\n", "train_x", ".", "extend", "(", "gauss_x", ")", "\n", "\n", "#scaling and translation", "\n", "", "translate_x1", "=", "translate_images", "(", "scaled_x", ")", "\n", "train_x", ".", "extend", "(", "translate_x1", ")", "\n", "\n", "#translation and rotation", "\n", "rotate_x1", "=", "rotate_images_with_finer_angles", "(", "translate_x", ",", "-", "90", ",", "90", ",", "10", ")", "\n", "train_x", ".", "extend", "(", "rotate_x1", ")", "\n", "\n", "#scaling and rotation", "\n", "rotate_x1", "=", "rotate_images_with_finer_angles", "(", "scaled_x", ",", "-", "90", ",", "90", ",", "10", ")", "\n", "train_x", ".", "extend", "(", "rotate_x1", ")", "\n", "\n", "#pepper and gaussian", "\n", "if", "dataset", "==", "'cifar10'", ":", "\n", "       ", "gauss_x1", "=", "add_gaussian_noise", "(", "pepper_x", ")", "\n", "train_x", ".", "extend", "(", "gauss_x1", ")", "\n", "\n", "", "train_x", "=", "np", ".", "array", "(", "train_x", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "dataset", "==", "'cifar10'", ":", "\n", "        ", "train_y_softmax", "=", "cifar_10_soft_logits_from_alexnet_teacher", "(", "train_x", ")", "\n", "\n", "", "train_y", "=", "np", ".", "argmax", "(", "train_y_softmax", ",", "axis", "=", "1", ")", "\n", "train_y", "=", "to_categorical", "(", "train_y", ",", "NO_OF_CLASSES", ")", "\n", "\n", "#print(train_x.shape)", "\n", "#print(train_y.shape)", "\n", "#print(train_y_softmax.shape)", "\n", "return", "train_x", ",", "train_y", ",", "train_y_softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.cifar_10_soft_logits_from_alexnet_teacher": [[81, 109], ["include.model_alex_full.model", "tensorflow.nn.softmax", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.Session", "numpy.zeros", "tensorflow.train.latest_checkpoint", "tf.train.Saver.restore", "len", "min", "tf.Session.run", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.model"], ["", "def", "cifar_10_soft_logits_from_alexnet_teacher", "(", "train_x", ")", ":", "\n", "    ", "x", ",", "y", ",", "z", ",", "logits", ",", "y_pred_cls", ",", "global_step", ",", "is_training", "=", "model", "(", ")", "\n", "logits", "=", "logits", "/", "20.0", "\n", "softmax", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "=", "logits", ")", "\n", "_BATCH_SIZE", "=", "1000", "\n", "_CLASS_SIZE", "=", "10", "\n", "_SAVE_PATH", "=", "\"./checkpoints/teacher/using_cifar10_(original_data)/lr_0.001/\"", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "False", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "try", ":", "\n", "#print(\"\\nTrying to restore last checkpoint ...\")", "\n", "        ", "last_chk_path", "=", "tf", ".", "train", ".", "latest_checkpoint", "(", "checkpoint_dir", "=", "_SAVE_PATH", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "save_path", "=", "last_chk_path", ")", "\n", "#print(\"Restored checkpoint from:\", last_chk_path)", "\n", "", "except", "ValueError", ":", "\n", "        ", "print", "(", "\"\\nFailed to restore checkpoint. Initializing variables instead.\"", ")", "\n", "", "i", "=", "0", "\n", "softmax_values", "=", "np", ".", "zeros", "(", "shape", "=", "(", "len", "(", "train_x", ")", ",", "NO_OF_CLASSES", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "while", "i", "<", "len", "(", "train_x", ")", ":", "\n", "        ", "j", "=", "min", "(", "i", "+", "_BATCH_SIZE", ",", "len", "(", "train_x", ")", ")", "\n", "batch_xs", "=", "train_x", "[", "i", ":", "j", ",", ":", "]", "\n", "softmax_values", "[", "i", ":", "j", "]", "=", "sess", ".", "run", "(", "softmax", ",", "feed_dict", "=", "{", "x", ":", "batch_xs", ",", "is_training", ":", "False", "}", ")", "\n", "i", "=", "j", "\n", "\n", "#print(\"Done extracting softmax from teacher network.\")", "\n", "", "return", "softmax_values", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.central_scale_images": [[110, 135], ["numpy.zeros", "enumerate", "numpy.zeros", "numpy.array", "tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.image.crop_and_resize", "numpy.array", "numpy.array", "len", "tensorflow.Session", "sess.run", "enumerate", "len", "tensorflow.global_variables_initializer", "numpy.expand_dims", "sess.run", "np.array.extend"], "function", ["None"], ["", "def", "central_scale_images", "(", "X_imgs", ",", "scales", ")", ":", "\n", "# Various settings needed for Tensorflow operation", "\n", "    ", "boxes", "=", "np", ".", "zeros", "(", "(", "len", "(", "scales", ")", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "index", ",", "scale", "in", "enumerate", "(", "scales", ")", ":", "\n", "        ", "x1", "=", "y1", "=", "0.5", "-", "0.5", "*", "scale", "# To scale centrally", "\n", "x2", "=", "y2", "=", "0.5", "+", "0.5", "*", "scale", "\n", "boxes", "[", "index", "]", "=", "np", ".", "array", "(", "[", "y1", ",", "x1", ",", "y2", ",", "x2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "box_ind", "=", "np", ".", "zeros", "(", "(", "len", "(", "scales", ")", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "crop_size", "=", "np", ".", "array", "(", "[", "IMAGE_SIZE", ",", "IMAGE_SIZE", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "X_scale_data", "=", "[", "]", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "X", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "1", ",", "IMAGE_SIZE", ",", "IMAGE_SIZE", ",", "NO_OF_CHANNELS", ")", ")", "\n", "# Define Tensorflow operation for all scales but only one base image at a time", "\n", "tf_img", "=", "tf", ".", "image", ".", "crop_and_resize", "(", "X", ",", "boxes", ",", "box_ind", ",", "crop_size", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "for", "index", ",", "img_data", "in", "enumerate", "(", "X_imgs", ")", ":", "\n", "            ", "batch_img", "=", "np", ".", "expand_dims", "(", "img_data", ",", "axis", "=", "0", ")", "\n", "scaled_imgs", "=", "sess", ".", "run", "(", "tf_img", ",", "feed_dict", "=", "{", "X", ":", "batch_img", "}", ")", "\n", "X_scale_data", ".", "extend", "(", "scaled_imgs", ")", "\n", "\n", "", "", "X_scale_data", "=", "np", ".", "array", "(", "X_scale_data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "X_scale_data", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.get_translate_parameters": [[136, 167], ["numpy.array", "numpy.array", "int", "math.ceil", "numpy.array", "numpy.array", "int", "math.ceil", "math.floor", "numpy.array", "numpy.array", "int", "numpy.array", "numpy.array", "int", "math.ceil", "math.ceil", "math.floor", "math.ceil", "math.ceil"], "function", ["None"], ["", "def", "get_translate_parameters", "(", "index", ")", ":", "\n", "    ", "if", "index", "==", "0", ":", "# Translate left 20 percent", "\n", "        ", "offset", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "IMAGE_SIZE", ",", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "w_start", "=", "0", "\n", "w_end", "=", "int", "(", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", ")", "\n", "h_start", "=", "0", "\n", "h_end", "=", "IMAGE_SIZE", "\n", "", "elif", "index", "==", "1", ":", "# Translate right 20 percent", "\n", "        ", "offset", "=", "np", ".", "array", "(", "[", "0.0", ",", "-", "0.2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "IMAGE_SIZE", ",", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "w_start", "=", "int", "(", "floor", "(", "(", "1", "-", "0.8", ")", "*", "IMAGE_SIZE", ")", ")", "\n", "w_end", "=", "IMAGE_SIZE", "\n", "h_start", "=", "0", "\n", "h_end", "=", "IMAGE_SIZE", "\n", "", "elif", "index", "==", "2", ":", "# Translate top 20 percent", "\n", "        ", "offset", "=", "np", ".", "array", "(", "[", "0.2", ",", "0.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", ",", "IMAGE_SIZE", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "w_start", "=", "0", "\n", "w_end", "=", "IMAGE_SIZE", "\n", "h_start", "=", "0", "\n", "h_end", "=", "int", "(", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", ")", "\n", "", "else", ":", "# Translate bottom 20 percent", "\n", "        ", "offset", "=", "np", ".", "array", "(", "[", "-", "0.2", ",", "0.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "ceil", "(", "0.8", "*", "IMAGE_SIZE", ")", ",", "IMAGE_SIZE", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "w_start", "=", "0", "\n", "w_end", "=", "IMAGE_SIZE", "\n", "h_start", "=", "int", "(", "floor", "(", "(", "1", "-", "0.8", ")", "*", "IMAGE_SIZE", ")", ")", "\n", "h_end", "=", "IMAGE_SIZE", "\n", "\n", "", "return", "offset", ",", "size", ",", "w_start", ",", "w_end", ",", "h_start", ",", "h_end", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.translate_images": [[168, 188], ["numpy.zeros", "tensorflow.reset_default_graph", "numpy.array", "tensorflow.Session", "sess.run", "range", "len", "tensorflow.global_variables_initializer", "numpy.zeros", "np.zeros.fill", "data_augmentation.get_translate_parameters", "tensorflow.image.extract_glimpse", "sess.run", "np.array.extend", "len"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.get_translate_parameters"], ["", "def", "translate_images", "(", "X_imgs", ")", ":", "\n", "    ", "offsets", "=", "np", ".", "zeros", "(", "(", "len", "(", "X_imgs", ")", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "n_translations", "=", "4", "\n", "X_translated_arr", "=", "[", "]", "\n", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "n_translations", ")", ":", "\n", "            ", "X_translated", "=", "np", ".", "zeros", "(", "(", "len", "(", "X_imgs", ")", ",", "IMAGE_SIZE", ",", "IMAGE_SIZE", ",", "NO_OF_CHANNELS", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "X_translated", ".", "fill", "(", "1.0", ")", "# Filling background color", "\n", "base_offset", ",", "size", ",", "w_start", ",", "w_end", ",", "h_start", ",", "h_end", "=", "get_translate_parameters", "(", "i", ")", "\n", "offsets", "[", ":", ",", ":", "]", "=", "base_offset", "\n", "glimpses", "=", "tf", ".", "image", ".", "extract_glimpse", "(", "X_imgs", ",", "size", ",", "offsets", ")", "\n", "\n", "glimpses", "=", "sess", ".", "run", "(", "glimpses", ")", "\n", "X_translated", "[", ":", ",", "h_start", ":", "h_start", "+", "size", "[", "0", "]", ",", "w_start", ":", "w_start", "+", "size", "[", "1", "]", ",", ":", "]", "=", "glimpses", "\n", "X_translated_arr", ".", "extend", "(", "X_translated", ")", "\n", "", "", "X_translated_arr", "=", "np", ".", "array", "(", "X_translated_arr", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "X_translated_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.rotate_images": [[189, 204], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.image.rot90", "numpy.array", "tensorflow.Session", "sess.run", "tensorflow.global_variables_initializer", "range", "sess.run", "np.array.append"], "function", ["None"], ["", "def", "rotate_images", "(", "X_imgs", ")", ":", "\n", "    ", "X_rotate", "=", "[", "]", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "X", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "IMAGE_SIZE", ",", "IMAGE_SIZE", ",", "NO_OF_CHANNELS", ")", ")", "\n", "k", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ")", "\n", "tf_img", "=", "tf", ".", "image", ".", "rot90", "(", "X", ",", "k", "=", "k", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "for", "img", "in", "X_imgs", ":", "\n", "            ", "for", "i", "in", "range", "(", "3", ")", ":", "# Rotation at 90, 180 and 270 degrees", "\n", "                ", "rotated_img", "=", "sess", ".", "run", "(", "tf_img", ",", "feed_dict", "=", "{", "X", ":", "img", ",", "k", ":", "i", "+", "1", "}", ")", "\n", "X_rotate", ".", "append", "(", "rotated_img", ")", "\n", "\n", "", "", "", "X_rotate", "=", "np", ".", "array", "(", "X_rotate", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "X_rotate", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.rotate_images_with_finer_angles": [[205, 225], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.image.rotate", "numpy.array", "tensorflow.Session", "sess.run", "range", "len", "tensorflow.global_variables_initializer", "sess.run", "np.array.extend", "len"], "function", ["None"], ["", "def", "rotate_images_with_finer_angles", "(", "X_imgs", ",", "start_angle", ",", "end_angle", ",", "n_images", ")", ":", "\n", "    ", "X_rotate", "=", "[", "]", "\n", "iterate_at", "=", "(", "end_angle", "-", "start_angle", ")", "/", "(", "n_images", "-", "1", ")", "\n", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "X", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "IMAGE_SIZE", ",", "IMAGE_SIZE", ",", "NO_OF_CHANNELS", ")", ")", "\n", "radian", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "len", "(", "X_imgs", ")", ")", ")", "\n", "tf_img", "=", "tf", ".", "contrib", ".", "image", ".", "rotate", "(", "X", ",", "radian", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "for", "index", "in", "range", "(", "n_images", ")", ":", "\n", "            ", "degrees_angle", "=", "start_angle", "+", "index", "*", "iterate_at", "\n", "radian_value", "=", "degrees_angle", "*", "pi", "/", "180", "# Convert to radian", "\n", "radian_arr", "=", "[", "radian_value", "]", "*", "len", "(", "X_imgs", ")", "\n", "rotated_imgs", "=", "sess", ".", "run", "(", "tf_img", ",", "feed_dict", "=", "{", "X", ":", "X_imgs", ",", "radian", ":", "radian_arr", "}", ")", "\n", "X_rotate", ".", "extend", "(", "rotated_imgs", ")", "\n", "\n", "", "", "X_rotate", "=", "np", ".", "array", "(", "X_rotate", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "X_rotate", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.flip_images": [[226, 240], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.image.flip_left_right", "tensorflow.image.flip_up_down", "tensorflow.image.transpose_image", "numpy.array", "tensorflow.Session", "sess.run", "tensorflow.global_variables_initializer", "sess.run", "np.array.extend"], "function", ["None"], ["", "def", "flip_images", "(", "X_imgs", ")", ":", "\n", "    ", "X_flip", "=", "[", "]", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "X", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "IMAGE_SIZE", ",", "IMAGE_SIZE", ",", "NO_OF_CHANNELS", ")", ")", "\n", "tf_img1", "=", "tf", ".", "image", ".", "flip_left_right", "(", "X", ")", "\n", "tf_img2", "=", "tf", ".", "image", ".", "flip_up_down", "(", "X", ")", "\n", "tf_img3", "=", "tf", ".", "image", ".", "transpose_image", "(", "X", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "for", "img", "in", "X_imgs", ":", "\n", "            ", "flipped_imgs", "=", "sess", ".", "run", "(", "[", "tf_img1", ",", "tf_img2", ",", "tf_img3", "]", ",", "feed_dict", "=", "{", "X", ":", "img", "}", ")", "\n", "X_flip", ".", "extend", "(", "flipped_imgs", ")", "\n", "", "", "X_flip", "=", "np", ".", "array", "(", "X_flip", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "X_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.add_salt_pepper_noise": [[241, 261], ["X_imgs.copy", "numpy.ceil", "numpy.ceil", "numpy.random.seed", "numpy.random.seed", "numpy.random.randint", "numpy.random.randint", "int", "int"], "function", ["None"], ["", "def", "add_salt_pepper_noise", "(", "X_imgs", ")", ":", "\n", "# Need to produce a copy as to not modify the original image", "\n", "    ", "X_imgs_copy", "=", "X_imgs", ".", "copy", "(", ")", "\n", "row", ",", "col", ",", "_", "=", "X_imgs_copy", "[", "0", "]", ".", "shape", "\n", "salt_vs_pepper", "=", "0.2", "\n", "amount", "=", "0.004", "\n", "num_salt", "=", "np", ".", "ceil", "(", "amount", "*", "X_imgs_copy", "[", "0", "]", ".", "size", "*", "salt_vs_pepper", ")", "\n", "num_pepper", "=", "np", ".", "ceil", "(", "amount", "*", "X_imgs_copy", "[", "0", "]", ".", "size", "*", "(", "1.0", "-", "salt_vs_pepper", ")", ")", "\n", "\n", "for", "X_img", "in", "X_imgs_copy", ":", "\n", "# Add Salt noise", "\n", "        ", "np", ".", "random", ".", "seed", "(", "777", ")", "\n", "coords", "=", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "i", "-", "1", ",", "int", "(", "num_salt", ")", ")", "for", "i", "in", "X_img", ".", "shape", "]", "\n", "X_img", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", ",", ":", "]", "=", "1", "\n", "\n", "# Add Pepper noise", "\n", "np", ".", "random", ".", "seed", "(", "777", ")", "\n", "coords", "=", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "i", "-", "1", ",", "int", "(", "num_pepper", ")", ")", "for", "i", "in", "X_img", ".", "shape", "]", "\n", "X_img", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", ",", ":", "]", "=", "0", "\n", "", "return", "X_imgs_copy", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.add_gaussian_noise": [[262, 279], ["X_imgs.astype.astype", "numpy.array", "numpy.random.seed", "numpy.random.random().astype", "numpy.concatenate().astype", "cv2.addWeighted", "np.array.append", "numpy.random.random", "numpy.concatenate"], "function", ["None"], ["", "def", "add_gaussian_noise", "(", "X_imgs", ")", ":", "\n", "    ", "X_imgs", "=", "X_imgs", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gaussian_noise_imgs", "=", "[", "]", "\n", "row", ",", "col", ",", "_", "=", "X_imgs", "[", "0", "]", ".", "shape", "\n", "# Gaussian distribution parameters", "\n", "mean", "=", "0", "\n", "var", "=", "0.1", "\n", "sigma", "=", "var", "**", "0.5", "\n", "\n", "for", "X_img", "in", "X_imgs", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "777", ")", "\n", "gaussian", "=", "np", ".", "random", ".", "random", "(", "(", "row", ",", "col", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gaussian", "=", "np", ".", "concatenate", "(", "(", "gaussian", ",", "gaussian", ",", "gaussian", ")", ",", "axis", "=", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gaussian_img", "=", "cv2", ".", "addWeighted", "(", "X_img", ",", "0.75", ",", "0.25", "*", "gaussian", ",", "0.25", ",", "0", ")", "\n", "gaussian_noise_imgs", ".", "append", "(", "gaussian_img", ")", "\n", "", "gaussian_noise_imgs", "=", "np", ".", "array", "(", "gaussian_noise_imgs", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "gaussian_noise_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.tf_resize_images": [[280, 294], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.image.resize_images", "numpy.array", "tensorflow.Session", "sess.run", "enumerate", "tensorflow.global_variables_initializer", "sess.run", "np.array.append"], "function", ["None"], ["", "def", "tf_resize_images", "(", "X_img", ")", ":", "\n", "    ", "X_data", "=", "[", "]", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "X", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "None", ",", "None", ",", "NO_OF_CHANNELS", ")", ")", "\n", "tf_img", "=", "tf", ".", "image", ".", "resize_images", "(", "X", ",", "(", "IMAGE_SIZE", ",", "IMAGE_SIZE", ")", ",", "tf", ".", "image", ".", "ResizeMethod", ".", "NEAREST_NEIGHBOR", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "for", "index", ",", "image", "in", "enumerate", "(", "X_img", ")", ":", "\n", "            ", "img", "=", "image", "\n", "resized_img", "=", "sess", ".", "run", "(", "tf_img", ",", "feed_dict", "=", "{", "X", ":", "img", "}", ")", "\n", "X_data", ".", "append", "(", "resized_img", ")", "\n", "\n", "", "", "X_data", "=", "np", ".", "array", "(", "X_data", ",", "dtype", "=", "np", ".", "float32", ")", "# Convert to numpy", "\n", "return", "X_data", "\n", "", ""]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.extract_weights.main": [[11, 29], ["tensorflow.Session", "tensorflow.train.import_meta_graph", "tf.train.import_meta_graph.restore", "tensorflow.get_default_graph().get_tensor_by_name", "tensorflow.get_default_graph().get_tensor_by_name", "sess.run", "sess.run", "open", "pickle.dump", "open.close", "tensorflow.train.latest_checkpoint", "tensorflow.get_default_graph", "tensorflow.get_default_graph"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "data", "=", "{", "}", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "\n", "        ", "new_saver", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "'checkpoints/teacher/using_cifar10_(original_data)/lr_0.001/-27257.meta'", ")", "\n", "new_saver", ".", "restore", "(", "sess", ",", "tf", ".", "train", ".", "latest_checkpoint", "(", "checkpoint_dir", "=", "checkpoint_dir", ")", ")", "\n", "\n", "weights", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "'teacher_alex/fc3layer/fc3/weights:0'", ")", "\n", "bias", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "'teacher_alex/fc3layer/fc3/bias:0'", ")", "\n", "\n", "data", "[", "'weight'", "]", "=", "sess", ".", "run", "(", "weights", ")", "\n", "data", "[", "'bias'", "]", "=", "sess", ".", "run", "(", "bias", ")", "\n", "savefilename", "=", "\"../di_generation/weight_and_bias_of_last_layer_alexnet_teacher_cifar10.pickle\"", "\n", "\n", "pickle_out", "=", "open", "(", "savefilename", ",", "\"wb\"", ")", "\n", "pickle", ".", "dump", "(", "data", ",", "pickle_out", ")", "\n", "pickle_out", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.train.train": [[155, 192], ["time.time", "int", "include.data_new.shuffle_training_data", "print", "tqdm.tqdm", "train.test_and_save", "math.ceil", "range", "time.time", "sess.run", "train_writer.add_summary", "str", "data_augmentation.create_more_samples_using_augmentation", "time.time", "int", "int", "len", "round", "int"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.shuffle_training_data", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.train.test_and_save", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.data_augmentation.create_more_samples_using_augmentation"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "global", "epoch_start", "\n", "epoch_start", "=", "time", "(", ")", "\n", "batch_size", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "train_x", ")", "/", "_BATCH_SIZE", ")", ")", "\n", "\n", "i_global", "=", "0", "\n", "train_x1", ",", "train_y1", ",", "train_y_softmax1", "=", "shuffle_training_data", "(", "train_x", ",", "train_y", ",", "train_y_softmax", ")", "\n", "print", "(", "\"Epoch : \"", "+", "str", "(", "epoch", "+", "1", ")", ")", "\n", "\n", "for", "s", "in", "tqdm", "(", "range", "(", "batch_size", ")", ")", ":", "\n", "\n", "        ", "batch_xs", "=", "train_x1", "[", "s", "*", "_BATCH_SIZE", ":", "(", "s", "+", "1", ")", "*", "_BATCH_SIZE", "]", "\n", "batch_ys", "=", "train_y1", "[", "s", "*", "_BATCH_SIZE", ":", "(", "s", "+", "1", ")", "*", "_BATCH_SIZE", "]", "\n", "batch_ysoft", "=", "train_y_softmax1", "[", "s", "*", "_BATCH_SIZE", ":", "(", "s", "+", "1", ")", "*", "_BATCH_SIZE", "]", "\n", "\n", "if", "args", ".", "data_augmentation", ":", "\n", "             ", "batch_xs", ",", "batch_ys", ",", "batch_ysoft", "=", "create_more_samples_using_augmentation", "(", "batch_xs", ",", "batch_ys", ",", "batch_ysoft", ",", "'cifar10'", ")", "\n", "\n", "", "start_time", "=", "time", "(", ")", "\n", "summary", ",", "i_global", ",", "_", ",", "batch_loss", ",", "batch_acc", "=", "sess", ".", "run", "(", "\n", "[", "merged", ",", "global_step", ",", "optimizer", ",", "finalloss", ",", "accuracy", "]", ",", "\n", "feed_dict", "=", "{", "x", ":", "batch_xs", ",", "y", ":", "batch_ys", ",", "z", ":", "batch_ysoft", "}", ")", "\n", "#print(\"the training accuracy for epoch\" + str(epoch)+\" : \"+ str(batch_acc*100))", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "i_global", ")", "\n", "duration", "=", "time", "(", ")", "-", "start_time", "\n", "\n", "if", "s", "%", "10", "==", "0", ":", "\n", "            ", "percentage", "=", "int", "(", "round", "(", "(", "s", "*", "1.0", "/", "batch_size", ")", "*", "100", ")", ")", "\n", "\n", "bar_len", "=", "29", "\n", "filled_len", "=", "int", "(", "(", "bar_len", "*", "int", "(", "percentage", ")", ")", "/", "100", ")", "\n", "bar", "=", "'='", "*", "filled_len", "+", "'>'", "+", "'-'", "*", "(", "bar_len", "-", "filled_len", ")", "\n", "\n", "msg", "=", "\"Global step: {:>5} - [{}] {:>3}% - acc: {:.4f} - loss: {:.4f} - {:.1f} sample/sec\"", "\n", "#print(msg.format(i_global, bar, percentage, batch_acc, batch_loss, _BATCH_SIZE / duration))", "\n", "\n", "", "", "test_and_save", "(", "i_global", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.train.test_and_save": [[194, 230], ["numpy.zeros", "correct.sum", "divmod", "divmod", "len", "min", "sess.run", "numpy.argmax", "correct.mean", "saver.save", "print", "len", "len", "time.time", "mes.format"], "function", ["None"], ["", "def", "test_and_save", "(", "_global_step", ",", "epoch", ")", ":", "\n", "    ", "global", "global_accuracy", "\n", "global", "epoch_start", "\n", "\n", "i", "=", "0", "\n", "predicted_class", "=", "np", ".", "zeros", "(", "shape", "=", "len", "(", "test_x", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "while", "i", "<", "len", "(", "test_x", ")", ":", "\n", "        ", "j", "=", "min", "(", "i", "+", "_BATCH_SIZE", ",", "len", "(", "test_x", ")", ")", "\n", "batch_xs", "=", "test_x", "[", "i", ":", "j", ",", ":", "]", "\n", "batch_ys", "=", "test_y", "[", "i", ":", "j", ",", ":", "]", "\n", "predicted_class", "[", "i", ":", "j", "]", "=", "sess", ".", "run", "(", "\n", "y_pred_cls", ",", "\n", "feed_dict", "=", "{", "x", ":", "batch_xs", ",", "y", ":", "batch_ys", ",", "is_training", ":", "False", "}", "\n", ")", "\n", "i", "=", "j", "\n", "\n", "", "correct", "=", "(", "np", ".", "argmax", "(", "test_y", ",", "axis", "=", "1", ")", "==", "predicted_class", ")", "\n", "acc", "=", "correct", ".", "mean", "(", ")", "*", "100", "\n", "correct_numbers", "=", "correct", ".", "sum", "(", ")", "\n", "\n", "hours", ",", "rem", "=", "divmod", "(", "time", "(", ")", "-", "epoch_start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "mes", "=", "\"\\nEpoch {} - accuracy: {:.2f}% ({}/{}) - time: {:0>2}:{:0>2}:{:05.2f}\"", "\n", "#print(mes.format((epoch+1), acc, correct_numbers, len(test_x), int(hours), int(minutes), seconds))", "\n", "\n", "\n", "if", "global_accuracy", "!=", "0", "and", "global_accuracy", "<", "acc", ":", "\n", "\n", "        ", "saver", ".", "save", "(", "sess", ",", "save_path", "=", "_SAVE_PATH", ",", "global_step", "=", "_global_step", ")", "\n", "\n", "mes", "=", "\"The epoch {} receive better accuracy: {:.2f} > {:.2f}. Saving session...\"", "\n", "print", "(", "mes", ".", "format", "(", "(", "epoch", "+", "1", ")", ",", "acc", ",", "global_accuracy", ")", ")", "\n", "global_accuracy", "=", "acc", "\n", "\n", "", "elif", "global_accuracy", "==", "0", ":", "\n", "        ", "global_accuracy", "=", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.train.main": [[234, 252], ["time.time", "print", "print", "print", "range", "divmod", "divmod", "print", "print", "print", "print", "print", "train.train", "mes.format", "str", "str", "time.time", "str", "str", "int", "int"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.model_training.train.train"], ["", "", "def", "main", "(", ")", ":", "\n", "\n", "    ", "train_start", "=", "time", "(", ")", "\n", "print", "(", "\"Learning rate:\"", "+", "str", "(", "args", ".", "lr", ")", ")", "\n", "print", "(", "\"Suffix:\"", "+", "str", "(", "args", ".", "suffix", ")", ")", "\n", "print", "(", "\"##############################################\"", ")", "\n", "for", "i", "in", "range", "(", "_EPOCH", ")", ":", "\n", "        ", "train", "(", "i", ")", "\n", "\n", "\n", "", "hours", ",", "rem", "=", "divmod", "(", "time", "(", ")", "-", "train_start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "\"###########################################################################################################\"", ")", "\n", "print", "(", "\"Learning rate:\"", "+", "str", "(", "args", ".", "lr", ")", ")", "\n", "print", "(", "\"Suffix:\"", "+", "str", "(", "args", ".", "suffix", ")", ")", "\n", "mes", "=", "\"Best accuracy : {:.2f}, time: {:0>2}:{:0>2}:{:05.2f}\"", "\n", "print", "(", "mes", ".", "format", "(", "global_accuracy", ",", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "print", "(", "\"###########################################################################################################\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.rescale": [[10, 19], ["numpy.min", "numpy.max", "output.append"], "function", ["None"], ["def", "rescale", "(", "values", ",", "new_min", "=", "0", ",", "new_max", "=", "255", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "old_min", ",", "old_max", "=", "np", ".", "min", "(", "values", ")", ",", "np", ".", "max", "(", "values", ")", "\n", "\n", "for", "v", "in", "values", ":", "\n", "        ", "new_v", "=", "(", "new_max", "-", "new_min", ")", "/", "(", "old_max", "-", "old_min", ")", "*", "(", "v", "-", "old_min", ")", "+", "new_min", "\n", "output", ".", "append", "(", "new_v", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.get_data_set": [[20, 59], ["numpy.load", "numpy.array", "keras.utils.to_categorical", "os.path.exists", "numpy.zeros", "numpy.load", "numpy.concatenate", "numpy.concatenate", "open", "pickle.load", "open.close", "numpy.array", "numpy.array", "x.transpose.reshape", "x.transpose.transpose", "numpy.array"], "function", ["None"], ["", "def", "get_data_set", "(", "name", "=", "\"train\"", ",", "suffix", "=", "''", ",", "folder_name", "=", "''", ")", ":", "\n", "\n", "    ", "data_file_name", "=", "'X_'", "+", "suffix", "+", "'.npy'", "\n", "label_file_name", "=", "'y_'", "+", "suffix", "+", "'.npy'", "\n", "\n", "x", "=", "None", "\n", "y", "=", "None", "\n", "\n", "if", "name", "is", "\"train\"", ":", "\n", "\n", "            ", "_X", "=", "np", ".", "load", "(", "folder_name", "+", "'/'", "+", "data_file_name", ")", "\n", "_X", "=", "np", ".", "array", "(", "_X", ",", "dtype", "=", "float", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "folder_name", "+", "'/'", "+", "label_file_name", ")", ":", "\n", "                ", "_Y", "=", "np", ".", "zeros", "(", "(", "_X", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "_Y", "=", "np", ".", "load", "(", "folder_name", "+", "'/'", "+", "label_file_name", ")", "\n", "\n", "", "if", "x", "is", "None", ":", "\n", "                ", "x", "=", "_X", "\n", "y", "=", "_Y", "\n", "", "else", ":", "\n", "                ", "x", "=", "np", ".", "concatenate", "(", "(", "x", ",", "_X", ")", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "concatenate", "(", "(", "y", ",", "_Y", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "elif", "name", "is", "\"test\"", ":", "\n", "        ", "f", "=", "open", "(", "'./data_set/cifar_10/test_batch'", ",", "'rb'", ")", "\n", "datadict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "x", "=", "datadict", "[", "\"data\"", "]", "\n", "x", "=", "np", ".", "array", "(", "x", ",", "dtype", "=", "float", ")", "\n", "y", "=", "np", ".", "array", "(", "datadict", "[", "'labels'", "]", ")", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "[", "-", "1", ",", "3", ",", "32", ",", "32", "]", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "x", "=", "np", ".", "array", "(", "x", ",", "dtype", "=", "float", ")", "/", "255.0", "\n", "\n", "", "return", "x", ",", "to_categorical", "(", "y", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.original_data_set": [[61, 104], ["range", "keras.utils.to_categorical", "open", "pickle.load", "open.close", "numpy.array", "_X.transpose.reshape", "_X.transpose.transpose", "open", "pickle.load", "open.close", "numpy.array", "numpy.array", "np.concatenate.reshape", "np.concatenate.transpose", "numpy.array", "numpy.concatenate", "numpy.concatenate", "numpy.array", "str"], "function", ["None"], ["", "def", "original_data_set", "(", "name", "=", "\"train\"", ",", "suffix", "=", "''", ",", "folder_name", "=", "''", ")", ":", "\n", "\n", "    ", "x", "=", "None", "\n", "y", "=", "None", "\n", "\n", "folder_name", "=", "\"cifar_10\"", "\n", "\n", "if", "name", "is", "\"train\"", ":", "\n", "        ", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "f", "=", "open", "(", "'./data_set/'", "+", "folder_name", "+", "'/data_batch_'", "+", "str", "(", "i", "+", "1", ")", ",", "'rb'", ")", "\n", "datadict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "_X", "=", "datadict", "[", "\"data\"", "]", "\n", "_Y", "=", "datadict", "[", "'labels'", "]", "\n", "\n", "_X", "=", "np", ".", "array", "(", "_X", ",", "dtype", "=", "float", ")", "\n", "_X", "=", "_X", ".", "reshape", "(", "[", "-", "1", ",", "3", ",", "32", ",", "32", "]", ")", "\n", "_X", "=", "_X", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "_X", "=", "np", ".", "array", "(", "_X", ",", "dtype", "=", "float", ")", "/", "255.0", "\n", "\n", "if", "x", "is", "None", ":", "\n", "                ", "x", "=", "_X", "\n", "y", "=", "_Y", "\n", "", "else", ":", "\n", "                ", "x", "=", "np", ".", "concatenate", "(", "(", "x", ",", "_X", ")", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "concatenate", "(", "(", "y", ",", "_Y", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "", "elif", "name", "is", "\"test\"", ":", "\n", "        ", "f", "=", "open", "(", "'./data_set/'", "+", "folder_name", "+", "'/test_batch'", ",", "'rb'", ")", "\n", "datadict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "x", "=", "datadict", "[", "\"data\"", "]", "\n", "y", "=", "np", ".", "array", "(", "datadict", "[", "'labels'", "]", ")", "\n", "\n", "x", "=", "np", ".", "array", "(", "x", ",", "dtype", "=", "float", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "-", "1", ",", "3", ",", "32", ",", "32", "]", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "x", "=", "np", ".", "array", "(", "x", ",", "dtype", "=", "float", ")", "/", "255.0", "\n", "\n", "", "return", "x", ",", "to_categorical", "(", "y", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.shuffle_training_data": [[105, 114], ["numpy.random.seed", "numpy.random.shuffle", "numpy.random.seed", "numpy.random.shuffle", "numpy.random.seed", "numpy.random.shuffle"], "function", ["None"], ["", "def", "shuffle_training_data", "(", "train_data", ",", "train_labels", ",", "train_softmax_values", ")", ":", "\n", "    ", "seed", "=", "777", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_data", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_labels", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_softmax_values", ")", "\n", "return", "train_data", ",", "train_labels", ",", "train_softmax_values", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.dense_to_one_hot": [[116, 123], ["numpy.zeros", "numpy.arange", "labels_dense.ravel"], "function", ["None"], ["", "def", "dense_to_one_hot", "(", "labels_dense", ",", "num_classes", "=", "10", ")", ":", "\n", "    ", "num_labels", "=", "labels_dense", ".", "shape", "[", "0", "]", "\n", "index_offset", "=", "np", ".", "arange", "(", "num_labels", ")", "*", "num_classes", "\n", "labels_one_hot", "=", "np", ".", "zeros", "(", "(", "num_labels", ",", "num_classes", ")", ")", "\n", "labels_one_hot", ".", "flat", "[", "index_offset", "+", "labels_dense", ".", "ravel", "(", ")", "]", "=", "1", "\n", "\n", "return", "labels_one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.data_new.sampling": [[124, 157], ["numpy.argmax", "list", "sorted", "numpy.array", "numpy.unique", "len", "enumerate", "numpy.concatenate", "numpy.array", "keras.utils.to_categorical", "numpy.array", "zip", "range", "numpy.random.seed", "numpy.random.choice", "np.concatenate.append", "sampled_data[].tolist", "numpy.array", "sampled_data[].tolist", "sampled_data[].tolist"], "function", ["None"], ["", "def", "sampling", "(", "train_x", ",", "train_y", ",", "train_y_softmax", ",", "sample_per_class", ",", "num_classes", "=", "10", ")", ":", "\n", "    ", "train_y", "=", "np", ".", "argmax", "(", "train_y", ",", "axis", "=", "1", ")", "\n", "#seed = 777", "\n", "#np.random.seed(seed)", "\n", "data", "=", "list", "(", "zip", "(", "train_x", ",", "train_y", ",", "train_y_softmax", ")", ")", "\n", "data", "=", "sorted", "(", "data", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "unique", ",", "counts", "=", "np", ".", "unique", "(", "data", "[", ":", ",", "1", "]", ",", "return_counts", "=", "True", ")", "\n", "#print np.asarray((unique, counts)).T", "\n", "num_classes", "=", "len", "(", "unique", ")", "\n", "data_per_class", "=", "counts", "\n", "end", "=", "0", "\n", "sampled_data", "=", "[", "]", "\n", "for", "index", ",", "class_no", "in", "enumerate", "(", "range", "(", "num_classes", ")", ")", ":", "\n", "        ", "start", "=", "end", "\n", "end", "=", "start", "+", "data_per_class", "[", "index", "]", "\n", "class_data", "=", "data", "[", "start", ":", "end", "]", "\n", "\n", "if", "data_per_class", "[", "index", "]", ">=", "sample_per_class", ":", "\n", "            ", "replace", "=", "False", "\n", "", "else", ":", "\n", "            ", "replace", "=", "True", "\n", "", "seed", "=", "777", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "sampled_class_data", "=", "np", ".", "random", ".", "choice", "(", "data_per_class", "[", "index", "]", ",", "size", "=", "sample_per_class", ",", "replace", "=", "replace", ")", "\n", "sampled_data", ".", "append", "(", "class_data", "[", "sampled_class_data", "]", ")", "\n", "\n", "", "sampled_data", "=", "np", ".", "concatenate", "(", "sampled_data", ",", "axis", "=", "0", ")", "\n", "train_x_subset", "=", "np", ".", "array", "(", "sampled_data", "[", ":", ",", "0", "]", ".", "tolist", "(", ")", ")", "\n", "train_y_subset", "=", "to_categorical", "(", "np", ".", "array", "(", "sampled_data", "[", ":", ",", "1", "]", ".", "tolist", "(", ")", ")", ",", "10", ")", "\n", "train_y_softmax_subset", "=", "np", ".", "array", "(", "sampled_data", "[", ":", ",", "2", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "return", "train_x_subset", ",", "train_y_subset", ",", "train_y_softmax_subset", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.maxpool": [[8, 15], ["tensorflow.nn.max_pool"], "function", ["None"], ["def", "maxpool", "(", "x", ",", "ksize", ",", "strides", ",", "padding", "=", "\"SAME\"", ")", ":", "\n", "    ", "\"\"\"max-pooling layer\"\"\"", "\n", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "\n", "ksize", "=", "[", "1", ",", "ksize", ",", "ksize", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "\n", "padding", "=", "padding", ",", "\n", "name", "=", "'maxpooling'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.dropout": [[16, 19], ["tensorflow.layers.dropout"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout"], ["", "def", "dropout", "(", "x", ",", "rate", ",", "is_training", ")", ":", "\n", "    ", "\"\"\"drop out layer\"\"\"", "\n", "return", "tf", ".", "layers", ".", "dropout", "(", "x", ",", "rate", ",", "name", "=", "'dropout'", ",", "training", "=", "is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.lrn": [[20, 28], ["tensorflow.nn.local_response_normalization"], "function", ["None"], ["", "def", "lrn", "(", "x", ",", "depth_r", "=", "2", ",", "alpha", "=", "0.0001", ",", "beta", "=", "0.75", ",", "bias", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"local response normalization\"\"\"", "\n", "return", "tf", ".", "nn", ".", "local_response_normalization", "(", "x", ",", "\n", "depth_radius", "=", "depth_r", ",", "\n", "alpha", "=", "alpha", ",", "\n", "beta", "=", "beta", ",", "\n", "bias", "=", "bias", ",", "\n", "name", "=", "'lrn'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.fc": [[29, 48], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.xw_plus_b", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["", "def", "fc", "(", "x", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ")", ":", "\n", "    ", "\"\"\"fully connected layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "0.0", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "out", "=", "tf", ".", "nn", ".", "xw_plus_b", "(", "x", ",", "w", ",", "b", ")", "\n", "if", "activation_func", ":", "\n", "            ", "return", "activation_func", "(", "out", ")", "\n", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.conv": [[49, 69], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["", "", "", "def", "conv", "(", "x", ",", "ksize", ",", "strides", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ",", "padding", "=", "\"SAME\"", ",", "bias", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"conv layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "ksize", ",", "ksize", ",", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "bias", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "padding", "=", "padding", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "b", ")", "\n", "\n", "if", "activation_func", ":", "\n", "            ", "conv", "=", "activation_func", "(", "conv", ")", "\n", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.batch_norm": [[70, 73], ["tensorflow.variable_scope", "tensorflow.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm"], ["", "", "def", "batch_norm", "(", "x", ",", "name", ",", "is_training", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "return", "tf_contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "is_training", "=", "is_training", ",", "updates_collections", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_half.model": [[74, 162], ["tensorflow.argmax", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.Variable", "print", "batch_norm.get_shape().as_list", "tensorflow.reshape", "print", "tensorflow.name_scope", "model_alex_half.conv", "model_alex_half.lrn", "print", "model_alex_half.maxpool", "print", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.conv", "model_alex_half.lrn", "print", "model_alex_half.maxpool", "print", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.conv", "print", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.conv", "print", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.conv", "print", "model_alex_half.maxpool", "print", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.fc", "print", "model_alex_half.dropout", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.fc", "print", "model_alex_half.dropout", "model_alex_half.batch_norm", "tensorflow.name_scope", "model_alex_half.fc", "print", "print", "tensorflow.variable_scope", "tensorflow.nn.softmax", "batch_norm.get_shape", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "fc.get_shape().as_list", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "fc.get_shape"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc"], ["", "", "def", "model", "(", ")", ":", "\n", "    ", "_IMAGE_SIZE", "=", "32", "\n", "_IMAGE_CHANNELS", "=", "3", "\n", "_NUM_CLASSES", "=", "10", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'student_alex_half'", ")", ":", "\n", "        ", "keepPro", "=", "0.5", "\n", "#temperature = 1.0", "\n", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_IMAGE_SIZE", ",", "_IMAGE_SIZE", ",", "_IMAGE_CHANNELS", "]", ",", "name", "=", "'Input'", ")", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "\n", "is_training", "=", "tf", ".", "placeholder_with_default", "(", "True", ",", "shape", "=", "(", ")", ")", "\n", "\n", "x_image", "=", "x", "\n", "\n", "global_step", "=", "tf", ".", "Variable", "(", "initial_value", "=", "0", ",", "trainable", "=", "False", ",", "name", "=", "'global_step'", ")", "\n", "print", "(", "\"Network Details\"", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'conv1layer'", ")", ":", "\n", "            ", "conv1", "=", "conv", "(", "x", "=", "x_image", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "24", ",", "name", "=", "'conv1'", ")", "# output[32,32,48]", "\n", "conv1", "=", "lrn", "(", "conv1", ")", "\n", "print", "(", "'conv1:{}'", ".", "format", "(", "conv1", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv1", "=", "maxpool", "(", "conv1", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[15,15,48]", "\n", "print", "(", "'maxpool1:{}'", ".", "format", "(", "conv1", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv1", "=", "batch_norm", "(", "conv1", ",", "'bn1'", ",", "is_training", ")", "\n", "#print(conv1)", "\n", "\n", "# layer 2", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv2layer'", ")", ":", "\n", "            ", "conv2", "=", "conv", "(", "x", "=", "conv1", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "64", ",", "bias", "=", "1.0", ",", "name", "=", "'conv2'", ")", "# output[15,15,128]", "\n", "conv2", "=", "lrn", "(", "conv2", ")", "\n", "print", "(", "'conv2:{}'", ".", "format", "(", "conv2", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv2", "=", "maxpool", "(", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[7,7,128]", "\n", "print", "(", "'maxpool2:{}'", ".", "format", "(", "conv2", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv2", "=", "batch_norm", "(", "conv2", ",", "'bn2'", ",", "is_training", ")", "\n", "\n", "# layer 3", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv3layer'", ")", ":", "\n", "            ", "conv3", "=", "conv", "(", "x", "=", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "96", ",", "name", "=", "'conv3'", ")", "# output[7,7,192]", "\n", "print", "(", "'conv3:{}'", ".", "format", "(", "conv3", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv3", "=", "batch_norm", "(", "conv3", ",", "'bn3'", ",", "is_training", ")", "\n", "\n", "# layer 4", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv4layer'", ")", ":", "\n", "            ", "conv4", "=", "conv", "(", "x", "=", "conv3", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "96", ",", "bias", "=", "1.0", ",", "name", "=", "'conv4'", ")", "# output[7,7,192]", "\n", "print", "(", "'conv4:{}'", ".", "format", "(", "conv4", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv4", "=", "batch_norm", "(", "conv4", ",", "'bn4'", ",", "is_training", ")", "\n", "\n", "# layer 5", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv5layer'", ")", ":", "\n", "            ", "conv5", "=", "conv", "(", "x", "=", "conv4", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "64", ",", "bias", "=", "1.0", ",", "name", "=", "'conv5'", ")", "# output[7,7,128]", "\n", "print", "(", "'conv5:{}'", ".", "format", "(", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv5", "=", "maxpool", "(", "conv5", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "#output[3,3,128]", "\n", "print", "(", "'maxpool5:{}'", ".", "format", "(", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "conv5", "=", "batch_norm", "(", "conv5", ",", "'bn5'", ",", "is_training", ")", "\n", "\n", "# flatten", "\n", "", "conv5size", "=", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "conv5", "=", "tf", ".", "reshape", "(", "conv5", ",", "[", "-", "1", ",", "conv5size", "[", "1", "]", "*", "conv5size", "[", "2", "]", "*", "conv5size", "[", "3", "]", "]", ")", "\n", "print", "(", "'flatten:{}'", ".", "format", "(", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "\n", "# layer 6", "\n", "with", "tf", ".", "name_scope", "(", "'fc1layer'", ")", ":", "\n", "            ", "fc1", "=", "fc", "(", "x", "=", "conv5", ",", "output_size", "=", "256", ",", "name", "=", "'fc1'", ")", "\n", "print", "(", "'fc1:{}'", ".", "format", "(", "fc1", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "fc1", "=", "dropout", "(", "fc1", ",", "keepPro", ",", "is_training", ")", "\n", "fc1", "=", "batch_norm", "(", "fc1", ",", "'bn6'", ",", "is_training", ")", "\n", "\n", "# layer 7", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc2layer'", ")", ":", "\n", "            ", "fc2", "=", "fc", "(", "x", "=", "fc1", ",", "output_size", "=", "128", ",", "name", "=", "'fc2'", ")", "\n", "print", "(", "'fc2:{}'", ".", "format", "(", "fc2", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "fc2", "=", "dropout", "(", "fc2", ",", "keepPro", ",", "is_training", ")", "\n", "fc2", "=", "batch_norm", "(", "fc2", ",", "'bn7'", ",", "is_training", ")", "\n", "\n", "# layer 8 - output", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc3layer'", ")", ":", "\n", "            ", "logits", "=", "fc", "(", "x", "=", "fc2", ",", "output_size", "=", "10", ",", "activation_func", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "print", "(", "'fc3:{}'", ".", "format", "(", "logits", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", ")", "\n", "print", "(", "\"##############################################\"", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'softmax'", ")", ":", "\n", "            ", "softmax", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "=", "logits", ")", "\n", "\n", "", "", "y_pred_cls", "=", "tf", ".", "argmax", "(", "softmax", ",", "axis", "=", "1", ")", "\n", "\n", "return", "x", ",", "y", ",", "z", ",", "logits", ",", "y_pred_cls", ",", "global_step", ",", "is_training", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.maxpool": [[8, 15], ["tensorflow.nn.max_pool"], "function", ["None"], ["def", "maxpool", "(", "x", ",", "ksize", ",", "strides", ",", "padding", "=", "\"SAME\"", ")", ":", "\n", "    ", "\"\"\"max-pooling layer\"\"\"", "\n", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "\n", "ksize", "=", "[", "1", ",", "ksize", ",", "ksize", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "\n", "padding", "=", "padding", ",", "\n", "name", "=", "'maxpooling'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.dropout": [[16, 19], ["tensorflow.layers.dropout"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout"], ["", "def", "dropout", "(", "x", ",", "rate", ",", "is_training", ")", ":", "\n", "    ", "\"\"\"drop out layer\"\"\"", "\n", "return", "tf", ".", "layers", ".", "dropout", "(", "x", ",", "rate", ",", "name", "=", "'dropout'", ",", "training", "=", "is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.lrn": [[20, 28], ["tensorflow.nn.local_response_normalization"], "function", ["None"], ["", "def", "lrn", "(", "x", ",", "depth_r", "=", "2", ",", "alpha", "=", "0.0001", ",", "beta", "=", "0.75", ",", "bias", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"local response normalization\"\"\"", "\n", "return", "tf", ".", "nn", ".", "local_response_normalization", "(", "x", ",", "\n", "depth_radius", "=", "depth_r", ",", "\n", "alpha", "=", "alpha", ",", "\n", "beta", "=", "beta", ",", "\n", "bias", "=", "bias", ",", "\n", "name", "=", "'lrn'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.fc": [[29, 48], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.xw_plus_b", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["", "def", "fc", "(", "x", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ")", ":", "\n", "    ", "\"\"\"fully connected layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "0.0", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "out", "=", "tf", ".", "nn", ".", "xw_plus_b", "(", "x", ",", "w", ",", "b", ")", "\n", "if", "activation_func", ":", "\n", "            ", "return", "activation_func", "(", "out", ")", "\n", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.conv": [[49, 69], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["", "", "", "def", "conv", "(", "x", ",", "ksize", ",", "strides", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ",", "padding", "=", "\"SAME\"", ",", "bias", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"conv layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "ksize", ",", "ksize", ",", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "bias", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "padding", "=", "padding", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "b", ")", "\n", "\n", "if", "activation_func", ":", "\n", "            ", "conv", "=", "activation_func", "(", "conv", ")", "\n", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.batch_norm": [[70, 73], ["tensorflow.variable_scope", "tensorflow.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm"], ["", "", "def", "batch_norm", "(", "x", ",", "name", ",", "is_training", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "return", "tf_contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "is_training", "=", "is_training", ",", "updates_collections", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.include.model_alex_full.model": [[74, 159], ["tensorflow.argmax", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.Variable", "batch_norm.get_shape().as_list", "tensorflow.reshape", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.lrn", "model_alex_full.maxpool", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.lrn", "model_alex_full.maxpool", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.maxpool", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "model_alex_full.dropout", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "model_alex_full.dropout", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "tensorflow.variable_scope", "tensorflow.nn.softmax", "batch_norm.get_shape"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc"], ["", "", "def", "model", "(", ")", ":", "\n", "    ", "_IMAGE_SIZE", "=", "32", "\n", "_IMAGE_CHANNELS", "=", "3", "\n", "_NUM_CLASSES", "=", "10", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'teacher_alex'", ")", ":", "\n", "        ", "keepPro", "=", "0.5", "\n", "#temperature = 1.0", "\n", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_IMAGE_SIZE", ",", "_IMAGE_SIZE", ",", "_IMAGE_CHANNELS", "]", ",", "name", "=", "'Input'", ")", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "\n", "is_training", "=", "tf", ".", "placeholder_with_default", "(", "True", ",", "shape", "=", "(", ")", ")", "\n", "\n", "x_image", "=", "x", "\n", "\n", "global_step", "=", "tf", ".", "Variable", "(", "initial_value", "=", "0", ",", "trainable", "=", "False", ",", "name", "=", "'global_step'", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'conv1layer'", ")", ":", "\n", "            ", "conv1", "=", "conv", "(", "x", "=", "x_image", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "48", ",", "name", "=", "'conv1'", ")", "# output[32,32,48]", "\n", "conv1", "=", "lrn", "(", "conv1", ")", "\n", "#print('conv1:{}'.format(conv1.get_shape().as_list()))", "\n", "conv1", "=", "maxpool", "(", "conv1", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[15,15,48]", "\n", "#print('maxpool1:{}'.format(conv1.get_shape().as_list()))", "\n", "conv1", "=", "batch_norm", "(", "conv1", ",", "'bn1'", ",", "is_training", ")", "\n", "#print(conv1)", "\n", "\n", "# layer 2", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv2layer'", ")", ":", "\n", "            ", "conv2", "=", "conv", "(", "x", "=", "conv1", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "128", ",", "bias", "=", "1.0", ",", "name", "=", "'conv2'", ")", "# output[15,15,128]", "\n", "conv2", "=", "lrn", "(", "conv2", ")", "\n", "#print('conv2:{}'.format(conv2.get_shape().as_list()))", "\n", "conv2", "=", "maxpool", "(", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[7,7,128]", "\n", "#print('maxpool2:{}'.format(conv2.get_shape().as_list()))", "\n", "conv2", "=", "batch_norm", "(", "conv2", ",", "'bn2'", ",", "is_training", ")", "\n", "\n", "# layer 3", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv3layer'", ")", ":", "\n", "            ", "conv3", "=", "conv", "(", "x", "=", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "192", ",", "name", "=", "'conv3'", ")", "# output[7,7,192]", "\n", "#print('conv3:{}'.format(conv3.get_shape().as_list()))", "\n", "conv3", "=", "batch_norm", "(", "conv3", ",", "'bn3'", ",", "is_training", ")", "\n", "\n", "# layer 4", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv4layer'", ")", ":", "\n", "            ", "conv4", "=", "conv", "(", "x", "=", "conv3", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "192", ",", "bias", "=", "1.0", ",", "name", "=", "'conv4'", ")", "# output[7,7,192]", "\n", "#print('conv4:{}'.format(conv4.get_shape().as_list()))", "\n", "conv4", "=", "batch_norm", "(", "conv4", ",", "'bn4'", ",", "is_training", ")", "\n", "\n", "# layer 5", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv5layer'", ")", ":", "\n", "            ", "conv5", "=", "conv", "(", "x", "=", "conv4", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "128", ",", "bias", "=", "1.0", ",", "name", "=", "'conv5'", ")", "# output[7,7,128]", "\n", "#print('conv5:{}'.format(conv5.get_shape().as_list()))", "\n", "conv5", "=", "maxpool", "(", "conv5", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "#output[3,3,128]", "\n", "#print('maxpool5:{}'.format(conv5.get_shape().as_list()))", "\n", "conv5", "=", "batch_norm", "(", "conv5", ",", "'bn5'", ",", "is_training", ")", "\n", "\n", "# flatten", "\n", "", "conv5size", "=", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "conv5", "=", "tf", ".", "reshape", "(", "conv5", ",", "[", "-", "1", ",", "conv5size", "[", "1", "]", "*", "conv5size", "[", "2", "]", "*", "conv5size", "[", "3", "]", "]", ")", "\n", "#print('flatten:{}'.format(conv5.get_shape().as_list()))", "\n", "\n", "# layer 6", "\n", "with", "tf", ".", "name_scope", "(", "'fc1layer'", ")", ":", "\n", "            ", "fc1", "=", "fc", "(", "x", "=", "conv5", ",", "output_size", "=", "512", ",", "name", "=", "'fc1'", ")", "\n", "#print('fc1:{}'.format(fc1.get_shape().as_list()))", "\n", "fc1", "=", "dropout", "(", "fc1", ",", "keepPro", ",", "is_training", ")", "\n", "fc1", "=", "batch_norm", "(", "fc1", ",", "'bn6'", ",", "is_training", ")", "\n", "\n", "# layer 7", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc2layer'", ")", ":", "\n", "            ", "fc2", "=", "fc", "(", "x", "=", "fc1", ",", "output_size", "=", "256", ",", "name", "=", "'fc2'", ")", "\n", "#print('fc2:{}'.format(fc2.get_shape().as_list()))", "\n", "fc2", "=", "dropout", "(", "fc2", ",", "keepPro", ",", "is_training", ")", "\n", "fc2", "=", "batch_norm", "(", "fc2", ",", "'bn7'", ",", "is_training", ")", "\n", "\n", "# layer 8 - output", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc3layer'", ")", ":", "\n", "            ", "logits", "=", "fc", "(", "x", "=", "fc2", ",", "output_size", "=", "10", ",", "activation_func", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'softmax'", ")", ":", "\n", "            ", "softmax", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "=", "logits", ")", "\n", "\n", "", "", "y_pred_cls", "=", "tf", ".", "argmax", "(", "softmax", ",", "axis", "=", "1", ")", "\n", "\n", "return", "x", ",", "y", ",", "z", ",", "logits", ",", "y_pred_cls", ",", "global_step", ",", "is_training", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool": [[8, 15], ["tensorflow.nn.max_pool"], "function", ["None"], ["def", "maxpool", "(", "x", ",", "ksize", ",", "strides", ",", "padding", "=", "\"SAME\"", ")", ":", "\n", "    ", "\"\"\"max-pooling layer\"\"\"", "\n", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "\n", "ksize", "=", "[", "1", ",", "ksize", ",", "ksize", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "\n", "padding", "=", "padding", ",", "\n", "name", "=", "'maxpooling'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout": [[16, 19], ["tensorflow.layers.dropout"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout"], ["", "def", "dropout", "(", "x", ",", "rate", ",", "is_training", ")", ":", "\n", "    ", "\"\"\"drop out layer\"\"\"", "\n", "return", "tf", ".", "layers", ".", "dropout", "(", "x", ",", "rate", ",", "name", "=", "'dropout'", ",", "training", "=", "is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn": [[20, 28], ["tensorflow.nn.local_response_normalization"], "function", ["None"], ["", "def", "lrn", "(", "x", ",", "depth_r", "=", "2", ",", "alpha", "=", "0.0001", ",", "beta", "=", "0.75", ",", "bias", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"local response normalization\"\"\"", "\n", "return", "tf", ".", "nn", ".", "local_response_normalization", "(", "x", ",", "\n", "depth_radius", "=", "depth_r", ",", "\n", "alpha", "=", "alpha", ",", "\n", "beta", "=", "beta", ",", "\n", "bias", "=", "bias", ",", "\n", "name", "=", "'lrn'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc": [[29, 49], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.xw_plus_b", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["", "def", "fc", "(", "x", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ")", ":", "\n", "    ", "\"\"\"fully connected layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "0.0", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "out", "=", "tf", ".", "nn", ".", "xw_plus_b", "(", "x", ",", "w", ",", "b", ")", "\n", "if", "activation_func", ":", "\n", "            ", "return", "activation_func", "(", "out", ")", "\n", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n", "", "", "", "def", "conv", "(", "x", ",", "ksize", ",", "strides", ",", "output_size", ",", "name", ",", "activation_func", "=", "tf", ".", "nn", ".", "relu", ",", "padding", "=", "\"SAME\"", ",", "bias", "=", "0.0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv": [[50, 70], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "x.get_shape().as_list", "tensorflow.random_normal", "tensorflow.constant", "activation_func", "x.get_shape"], "function", ["None"], ["    ", "\"\"\"conv layer\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "w", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "ksize", ",", "ksize", ",", "input_size", ",", "output_size", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "'weights'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "value", "=", "bias", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "output_size", "]", ")", ",", "\n", "name", "=", "'bias'", ")", "\n", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "[", "1", ",", "strides", ",", "strides", ",", "1", "]", ",", "padding", "=", "padding", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "b", ")", "\n", "\n", "if", "activation_func", ":", "\n", "            ", "conv", "=", "activation_func", "(", "conv", ")", "\n", "\n", "", "return", "conv", "\n", "\n", "", "", "def", "batch_norm", "(", "x", ",", "name", ",", "is_training", ")", ":", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm": [[71, 74], ["tensorflow.variable_scope", "tensorflow.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm"], ["    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "return", "tf_contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "center", "=", "True", ",", "scale", "=", "True", ",", "is_training", "=", "is_training", ",", "updates_collections", "=", "None", ")", "\n", "\n", "", "", "def", "model", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.model": [[75, 163], ["tensorflow.argmax", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.Variable", "print", "print", "batch_norm.get_shape().as_list", "tensorflow.reshape", "print", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.lrn", "print", "model_alex_full.maxpool", "print", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "model_alex_full.lrn", "print", "model_alex_full.maxpool", "print", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "print", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "print", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.conv", "print", "model_alex_full.maxpool", "print", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "print", "model_alex_full.dropout", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "print", "model_alex_full.dropout", "model_alex_full.batch_norm", "tensorflow.name_scope", "model_alex_full.fc", "tensorflow.variable_scope", "tensorflow.nn.softmax", "batch_norm.get_shape", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape().as_list", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape", "batch_norm.get_shape"], "function", ["home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.lrn", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.conv", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.maxpool", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.dropout", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.batch_norm", "home.repos.pwc.inspect_result.vcl-iisc_ZSKD.di_generation.model_alex_full.fc"], ["    ", "_IMAGE_SIZE", "=", "32", "\n", "_IMAGE_CHANNELS", "=", "3", "\n", "_NUM_CLASSES", "=", "10", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'teacher_alex'", ")", ":", "\n", "        ", "keepPro", "=", "0.5", "\n", "#temperature = 1.0", "\n", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_IMAGE_SIZE", ",", "_IMAGE_SIZE", ",", "_IMAGE_CHANNELS", "]", ",", "name", "=", "'Input'", ")", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "\n", "is_training", "=", "tf", ".", "placeholder_with_default", "(", "True", ",", "shape", "=", "(", ")", ")", "\n", "\n", "x_image", "=", "x", "\n", "\n", "global_step", "=", "tf", ".", "Variable", "(", "initial_value", "=", "0", ",", "trainable", "=", "False", ",", "name", "=", "'global_step'", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'conv1layer'", ")", ":", "\n", "            ", "conv1", "=", "conv", "(", "x", "=", "x_image", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "48", ",", "name", "=", "'conv1'", ")", "# output[32,32,48]", "\n", "conv1", "=", "lrn", "(", "conv1", ")", "\n", "#print('conv1:{}'.format(conv1.get_shape().as_list()))", "\n", "conv1", "=", "maxpool", "(", "conv1", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[15,15,48]", "\n", "#print('maxpool1:{}'.format(conv1.get_shape().as_list()))", "\n", "conv1", "=", "batch_norm", "(", "conv1", ",", "'bn1'", ",", "is_training", ")", "\n", "#print(conv1)", "\n", "\n", "# layer 2", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv2layer'", ")", ":", "\n", "            ", "conv2", "=", "conv", "(", "x", "=", "conv1", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "output_size", "=", "128", ",", "bias", "=", "1.0", ",", "name", "=", "'conv2'", ")", "# output[15,15,128]", "\n", "conv2", "=", "lrn", "(", "conv2", ")", "\n", "#print('conv2:{}'.format(conv2.get_shape().as_list()))", "\n", "conv2", "=", "maxpool", "(", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "# output[7,7,128]", "\n", "#print('maxpool2:{}'.format(conv2.get_shape().as_list()))", "\n", "conv2", "=", "batch_norm", "(", "conv2", ",", "'bn2'", ",", "is_training", ")", "\n", "\n", "# layer 3", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv3layer'", ")", ":", "\n", "            ", "conv3", "=", "conv", "(", "x", "=", "conv2", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "192", ",", "name", "=", "'conv3'", ")", "# output[7,7,192]", "\n", "#print('conv3:{}'.format(conv3.get_shape().as_list()))", "\n", "conv3", "=", "batch_norm", "(", "conv3", ",", "'bn3'", ",", "is_training", ")", "\n", "\n", "# layer 4", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv4layer'", ")", ":", "\n", "            ", "conv4", "=", "conv", "(", "x", "=", "conv3", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "192", ",", "bias", "=", "1.0", ",", "name", "=", "'conv4'", ")", "# output[7,7,192]", "\n", "#print('conv4:{}'.format(conv4.get_shape().as_list()))", "\n", "conv4", "=", "batch_norm", "(", "conv4", ",", "'bn4'", ",", "is_training", ")", "\n", "\n", "# layer 5", "\n", "", "with", "tf", ".", "name_scope", "(", "'conv5layer'", ")", ":", "\n", "            ", "conv5", "=", "conv", "(", "x", "=", "conv4", ",", "ksize", "=", "3", ",", "strides", "=", "1", ",", "output_size", "=", "128", ",", "bias", "=", "1.0", ",", "name", "=", "'conv5'", ")", "# output[7,7,128]", "\n", "#print('conv5:{}'.format(conv5.get_shape().as_list()))", "\n", "conv5", "=", "maxpool", "(", "conv5", ",", "ksize", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'VALID'", ")", "#output[3,3,128]", "\n", "#print('maxpool5:{}'.format(conv5.get_shape().as_list()))", "\n", "conv5", "=", "batch_norm", "(", "conv5", ",", "'bn5'", ",", "is_training", ")", "\n", "\n", "# flatten", "\n", "", "conv5size", "=", "conv5", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "conv5", "=", "tf", ".", "reshape", "(", "conv5", ",", "[", "-", "1", ",", "conv5size", "[", "1", "]", "*", "conv5size", "[", "2", "]", "*", "conv5size", "[", "3", "]", "]", ")", "\n", "#print('flatten:{}'.format(conv5.get_shape().as_list()))", "\n", "\n", "# layer 6", "\n", "with", "tf", ".", "name_scope", "(", "'fc1layer'", ")", ":", "\n", "            ", "fc1", "=", "fc", "(", "x", "=", "conv5", ",", "output_size", "=", "512", ",", "name", "=", "'fc1'", ")", "\n", "#print('fc1:{}'.format(fc1.get_shape().as_list()))", "\n", "fc1", "=", "dropout", "(", "fc1", ",", "keepPro", ",", "is_training", ")", "\n", "fc1", "=", "batch_norm", "(", "fc1", ",", "'bn6'", ",", "is_training", ")", "\n", "\n", "# layer 7", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc2layer'", ")", ":", "\n", "            ", "fc2", "=", "fc", "(", "x", "=", "fc1", ",", "output_size", "=", "256", ",", "name", "=", "'fc2'", ")", "\n", "#print('fc2:{}'.format(fc2.get_shape().as_list()))", "\n", "fc2", "=", "dropout", "(", "fc2", ",", "keepPro", ",", "is_training", ")", "\n", "fc2", "=", "batch_norm", "(", "fc2", ",", "'bn7'", ",", "is_training", ")", "\n", "\n", "# layer 8 - output", "\n", "", "with", "tf", ".", "name_scope", "(", "'fc3layer'", ")", ":", "\n", "            ", "logits", "=", "fc", "(", "x", "=", "fc2", ",", "output_size", "=", "10", ",", "activation_func", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'softmax'", ")", ":", "\n", "            ", "softmax", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "=", "logits", ")", "\n", "\n", "", "", "y_pred_cls", "=", "tf", ".", "argmax", "(", "softmax", ",", "axis", "=", "1", ")", "\n", "\n", "return", "x", ",", "y", ",", "z", ",", "logits", ",", "y_pred_cls", ",", "global_step", ",", "is_training", "\n", "\n", "\n", "", ""]]}