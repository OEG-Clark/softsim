{"home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.Demo.test_video": [[30, 142], ["time.time", "model.cuda.state_dict", "checkpoint.keys", "model.cuda.load_state_dict", "model.cuda.eval", "cv2.imread", "torchvision.Compose", "cap.release", "cv2.destroyAllWindows", "torch.load", "torch.load", "getattr", "model.cuda.cuda", "dlib.shape_predictor", "dlib.get_frontal_face_detector", "scipy.loadmat", "cap.read", "dlib.get_frontal_face_detector.", "utils.inference.crop_img", "cv2.resize", "transforms.Compose.unsqueeze", "utils.inference.predict_68pts", "utils.inference.predict_dense", "utils.estimate_pose.parse_pose", "Ps.append", "poses.append", "pts_res.append", "range", "cv2.imshow", "scipy.loadmat", "utils.ddfa.ToTensorGjz", "utils.ddfa.NormalizeGjz", "cap.read", "max", "cv2.resize", "torch.no_grad", "torch.no_grad", "time.time", "model.cuda.", "print", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten().astype", "utils.inference.parse_roi_box_from_landmark", "utils.inference.crop_img", "cv2.resize", "transforms.Compose.unsqueeze", "utils.inference.predict_68pts", "face_regressor().parts.append", "cv2.circle", "utils.cv_plot.plot_pose_box", "utils.drawMesh", "print", "time.time", "ord", "k.replace", "float", "dlib.rectangle", "dlib.shape_predictor.parts", "utils.inference.parse_roi_box_from_landmark", "utils.inference.parse_roi_box_from_bbox", "transforms.Compose.", "input.cuda.cuda", "torch.no_grad", "torch.no_grad", "model.cuda.", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten().astype", "time.time", "cv2.waitKey", "max", "int", "int", "int", "int", "int", "int", "numpy.array", "int", "int", "int", "int", "time.time", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten", "transforms.Compose.", "input.cuda.cuda", "dlib.shape_predictor.", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten", "time.time", "rect.left", "rect.top", "rect.right", "rect.bottom", "rect.left", "rect.top", "rect.right", "rect.bottom", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu", "param.squeeze().cpu().numpy().flatten().astype.squeeze", "param.squeeze().cpu().numpy().flatten().astype.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_dense", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.parse_pose", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_landmark", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.plot_pose_box", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawMesh", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_landmark", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_bbox"], ["def", "test_video", "(", "args", ")", ":", "\n", "    ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "x", "=", "1", "# displays the frame rate every 1 second", "\n", "counter", "=", "0", "\n", "checkpoint_fp", "=", "'models/DAMDNet.pth.tar'", "\n", "arch", "=", "'DAMDNet_v1'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_fp", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "[", "'state_dict'", "]", "\n", "model", "=", "getattr", "(", "DAMDNet", ",", "arch", ")", "(", "num_classes", "=", "62", ")", "# 62 = 12(pose) + 40(shape) +10(expression)", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "k", "in", "checkpoint", ".", "keys", "(", ")", ":", "\n", "        ", "model_dict", "[", "k", ".", "replace", "(", "'module.'", ",", "''", ")", "]", "=", "checkpoint", "[", "k", "]", "\n", "", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "if", "args", ".", "mode", "==", "'gpu'", ":", "\n", "        ", "cudnn", ".", "benchmark", "=", "True", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "# 2. load dlib model for face detection and landmark used for face cropping", "\n", "if", "args", ".", "dlib_landmark", ":", "\n", "        ", "dlib_landmark_model", "=", "'models/shape_predictor_68_face_landmarks.dat'", "\n", "face_regressor", "=", "dlib", ".", "shape_predictor", "(", "dlib_landmark_model", ")", "\n", "", "if", "args", ".", "dlib_bbox", ":", "\n", "        ", "face_detector", "=", "dlib", ".", "get_frontal_face_detector", "(", ")", "\n", "# 3. forward", "\n", "", "tri", "=", "sio", ".", "loadmat", "(", "'visualize/tri.mat'", ")", "[", "'tri'", "]", "-", "1", "\n", "tri_pts68", "=", "sio", ".", "loadmat", "(", "'visualize/pats68_tri.mat'", ")", "[", "'tri'", "]", "\n", "textureImg", "=", "cv2", ".", "imread", "(", "image_name", ")", "\n", "cameraImg", "=", "cap", ".", "read", "(", ")", "[", "1", "]", "\n", "# textureCoords=df.getFaceTextureCoords(textureImg)", "\n", "# drawface=Drawing3DFace.Draw3DFace(cameraImg,textureImg,textureCoords,tri_pts68.T)", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "ToTensorGjz", "(", ")", ",", "NormalizeGjz", "(", "mean", "=", "127.5", ",", "std", "=", "128", ")", "]", ")", "\n", "while", "True", ":", "\n", "# get a frame", "\n", "        ", "img_ori", "=", "cap", ".", "read", "(", ")", "[", "1", "]", "\n", "imgScale", "=", "1", "\n", "scaledImg", "=", "img_ori", "\n", "if", "max", "(", "img_ori", ".", "shape", ")", ">", "maxImgSizeForDetection", ":", "\n", "            ", "imgScale", "=", "maxImgSizeForDetection", "/", "float", "(", "max", "(", "img_ori", ".", "shape", ")", ")", "\n", "scaledImg", "=", "cv2", ".", "resize", "(", "img_ori", ",", "(", "int", "(", "img_ori", ".", "shape", "[", "1", "]", "*", "imgScale", ")", ",", "int", "(", "img_ori", ".", "shape", "[", "0", "]", "*", "imgScale", ")", ")", ")", "\n", "", "rects", "=", "face_detector", "(", "scaledImg", ",", "1", ")", "\n", "\n", "Ps", "=", "[", "]", "# Camera matrix collection", "\n", "poses", "=", "[", "]", "# pose collection", "\n", "pts_res", "=", "[", "]", "\n", "# suffix=get_suffix(img_ori)", "\n", "for", "rect", "in", "rects", ":", "\n", "            ", "if", "args", ".", "dlib_landmark", ":", "\n", "                ", "faceRectangle", "=", "rectangle", "(", "int", "(", "rect", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "top", "(", ")", "/", "imgScale", ")", ",", "\n", "int", "(", "rect", ".", "right", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "bottom", "(", ")", "/", "imgScale", ")", ")", "\n", "\n", "# - use landmark for cropping", "\n", "pts", "=", "face_regressor", "(", "img_ori", ",", "faceRectangle", ")", ".", "parts", "(", ")", "\n", "pts", "=", "np", ".", "array", "(", "[", "[", "pt", ".", "x", ",", "pt", ".", "y", "]", "for", "pt", "in", "pts", "]", ")", ".", "T", "\n", "roi_box", "=", "parse_roi_box_from_landmark", "(", "pts", ")", "\n", "", "else", ":", "\n", "                ", "bbox", "=", "[", "int", "(", "rect", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "top", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "right", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "bottom", "(", ")", "/", "imgScale", ")", "]", "\n", "roi_box", "=", "parse_roi_box_from_bbox", "(", "bbox", ")", "\n", "", "", "img", "=", "crop_img", "(", "img_ori", ",", "roi_box", ")", "\n", "# forward: one step", "\n", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "STD_SIZE", ",", "STD_SIZE", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "input", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "args", ".", "mode", "==", "'gpu'", ":", "\n", "                ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "", "s", "=", "time", ".", "time", "(", ")", "\n", "param", "=", "model", "(", "input", ")", "\n", "print", "(", "time", ".", "time", "(", ")", "-", "s", ")", "\n", "param", "=", "param", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# 68 pts", "\n", "", "pts68", "=", "predict_68pts", "(", "param", ",", "roi_box", ")", "\n", "# df.triDelaunay(pts68)", "\n", "densePts", "=", "predict_dense", "(", "param", ",", "roi_box", ")", "\n", "P", ",", "pose", "=", "parse_pose", "(", "param", ")", "\n", "Ps", ".", "append", "(", "P", ")", "\n", "poses", ".", "append", "(", "pose", ")", "\n", "# two-step for more accurate bbox to crop face", "\n", "if", "args", ".", "bbox_init", "==", "'two'", ":", "\n", "            ", "roi_box", "=", "parse_roi_box_from_landmark", "(", "pts68", ")", "\n", "img_step2", "=", "crop_img", "(", "img_ori", ",", "roi_box", ")", "\n", "img_step2", "=", "cv2", ".", "resize", "(", "img_step2", ",", "dsize", "=", "(", "STD_SIZE", ",", "STD_SIZE", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "input", "=", "transform", "(", "img_step2", ")", ".", "unsqueeze", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "args", ".", "mode", "==", "'gpu'", ":", "\n", "                    ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "", "param", "=", "model", "(", "input", ")", "\n", "param", "=", "param", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "pts68", "=", "predict_68pts", "(", "param", ",", "roi_box", ")", "\n", "", "pts_res", ".", "append", "(", "pts68", ")", "\n", "pts", "=", "[", "]", "\n", "#draw landmark", "\n", "for", "indx", "in", "range", "(", "68", ")", ":", "\n", "            ", "pos", "=", "(", "pts68", "[", "0", ",", "indx", "]", ",", "pts68", "[", "1", ",", "indx", "]", ")", "\n", "pts", ".", "append", "(", "pos", ")", "\n", "cv2", ".", "circle", "(", "img_ori", ",", "pos", ",", "3", ",", "color", "=", "(", "255", ",", "255", ",", "255", ")", ",", "thickness", "=", "-", "1", ")", "\n", "##draw pose box", "\n", "", "if", "args", ".", "dump_pose", ":", "\n", "            ", "img_ori", "=", "plot_pose_box", "(", "img_ori", ",", "Ps", ",", "pts_res", ")", "\n", "#draw face mesh", "\n", "", "if", "args", ".", "dump_2D_face_mesh", ":", "\n", "            ", "img_ori", "=", "df", ".", "drawMesh", "(", "img_ori", ",", "densePts", ".", "T", ",", "tri", ".", "T", ")", "\n", "", "if", "args", ".", "dump_3D_face_mesh", ":", "\n", "            ", "pass", "\n", "# img=drawface.render(pts68)", "\n", "", "cv2", ".", "imshow", "(", "\"faceDetector\"", ",", "img_ori", ")", "\n", "counter", "+=", "1", "\n", "if", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ">", "x", ":", "\n", "            ", "print", "(", "\"FPS: \"", ",", "counter", "/", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "counter", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "if", "cv2", ".", "waitKey", "(", "1", ")", "&", "0xFF", "==", "ord", "(", "'q'", ")", ":", "\n", "            ", "break", "\n", "", "", "cap", ".", "release", "(", ")", "\n", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.Demo.video": [[144, 153], ["cap.release", "cv2.destroyAllWindows", "cap.read", "cv2.imshow", "ord", "cv2.waitKey"], "function", ["None"], ["", "def", "video", "(", ")", ":", "\n", "    ", "while", "True", ":", "\n", "# get a frame", "\n", "        ", "ret", ",", "image", "=", "cap", ".", "read", "(", ")", "\n", "cv2", ".", "imshow", "(", "\"faceDetector02\"", ",", "image", ")", "\n", "if", "cv2", ".", "waitKey", "(", "1", ")", "&", "0xFF", "==", "ord", "(", "'q'", ")", ":", "\n", "            ", "break", "\n", "", "", "cap", ".", "release", "(", ")", "\n", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.SpatialGroupEnhance.__init__": [[15, 22], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", "=", "64", ")", ":", "\n", "        ", "super", "(", "SpatialGroupEnhance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "groups", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "groups", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sig", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.SpatialGroupEnhance.forward": [[23, 52], ["x.view.view.size", "x.view.view.view", "xn.sum.sum.sum", "xn.sum.sum.view", "t.view.view.view", "t.view.view.view", "x.view.view.view", "DAMDNet.SpatialGroupEnhance.avg_pool", "t.view.view.mean", "t.view.view.std", "DAMDNet.SpatialGroupEnhance.sig"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "# (b, c, h, w)", "\n", "# y=torch.squeeze(x,0)", "\n", "# y=torch.unsqueeze(y.permute(1,2,0)[:,:,1],2).numpy()", "\n", "# y=cv2.resize(y,(520,520),cv2.INTER_LINEAR)", "\n", "# cv2.imshow(\"test_1\", y)", "\n", "# cv2.waitKey(0)", "\n", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "b", "*", "self", ".", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "xn", "=", "x", "*", "self", ".", "avg_pool", "(", "x", ")", "\n", "xn", "=", "xn", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "t", "=", "xn", ".", "view", "(", "b", "*", "self", ".", "groups", ",", "-", "1", ")", "\n", "t", "=", "t", "-", "t", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "std", "=", "t", ".", "std", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-5", "\n", "t", "=", "t", "/", "std", "\n", "t", "=", "t", ".", "view", "(", "b", ",", "self", ".", "groups", ",", "h", ",", "w", ")", "\n", "t", "=", "t", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "t", "=", "t", ".", "view", "(", "b", "*", "self", ".", "groups", ",", "1", ",", "h", ",", "w", ")", "\n", "x", "=", "x", "*", "self", ".", "sig", "(", "t", ")", "\n", "\n", "# z=torch.squeeze(x, 0)", "\n", "# z=torch.unsqueeze(z.permute(1, 2, 0)[:, :, 1], 2).numpy()", "\n", "# z=cv2.resize(z, (520, 520), cv2.INTER_LINEAR)", "\n", "# cv2.imshow(\"test_2\", z)", "\n", "# cv2.waitKey(0)", "\n", "\n", "x", "=", "x", ".", "view", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.Bottleneck.__init__": [[55, 69], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "DAMDNet.SpatialGroupEnhance", "int"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "transition_layer", "=", "None", ",", "expansion", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "inplanes", "*", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "expansion", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "expansion", ",", "inplanes", "*", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ",", "groups", "=", "inplanes", "*", "expansion", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "expansion", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "expansion", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "transition_layer", "=", "transition_layer", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "sge", "=", "SpatialGroupEnhance", "(", "int", "(", "planes", "/", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.Bottleneck.forward": [[70, 93], ["DAMDNet.Bottleneck.conv1", "DAMDNet.Bottleneck.bn1", "DAMDNet.Bottleneck.relu", "DAMDNet.Bottleneck.conv2", "DAMDNet.Bottleneck.bn2", "DAMDNet.Bottleneck.relu", "DAMDNet.Bottleneck.conv3", "DAMDNet.Bottleneck.bn3", "DAMDNet.Bottleneck.sge", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "DAMDNet.Bottleneck.relu", "DAMDNet.Bottleneck.transition_layer", "DAMDNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "sge", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "residual", "]", ",", "1", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "transition_layer", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet.__init__": [[95, 127], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "DAMDNet.DAMDNet._make_layer", "utils.se_module.SELayer", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "DAMDNet.DAMDNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "62", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "32", "\n", "super", "(", "DAMDNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "16", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "expansion", "=", "1", ")", "\n", "self", ".", "seLayer1", "=", "SELayer", "(", "16", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "24", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer2", "=", "SELayer", "(", "24", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "32", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer3", "=", "SELayer", "(", "32", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer4", "=", "SELayer", "(", "64", ")", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "block", ",", "96", ",", "layers", "[", "4", "]", ",", "stride", "=", "1", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer5", "=", "SELayer", "(", "96", ")", "\n", "self", ".", "layer6", "=", "self", ".", "_make_layer", "(", "block", ",", "160", ",", "layers", "[", "5", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer6", "=", "SELayer", "(", "160", ")", "\n", "self", ".", "layer7", "=", "self", ".", "_make_layer", "(", "block", ",", "320", ",", "layers", "[", "6", "]", ",", "stride", "=", "1", ",", "expansion", "=", "6", ")", "\n", "self", ".", "seLayer7", "=", "SELayer", "(", "320", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "320", ",", "1280", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "4", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "1280", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet._transition_layer": [[128, 133], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "", "", "def", "_transition_layer", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "transition_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "return", "transition_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet._downsample": [[134, 138], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "def", "_downsample", "(", "self", ",", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "downsample", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", ")", "\n", "return", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet._make_layer": [[139, 151], ["torch.Sequential", "torch.Sequential", "DAMDNet.DAMDNet._downsample", "layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block", "DAMDNet.DAMDNet._downsample", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._downsample", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._downsample"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ",", "expansion", ")", ":", "\n", "        ", "downsample", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", ",", ")", "\n", "layers", "=", "[", "]", "\n", "\n", "transition_layer", "=", "self", ".", "_downsample", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "transition_layer", "=", "transition_layer", ",", "expansion", "=", "expansion", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "transition_layer", "=", "self", ".", "_downsample", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "transition_layer", "=", "transition_layer", ",", "expansion", "=", "expansion", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet.forward": [[152, 178], ["DAMDNet.DAMDNet.conv1", "DAMDNet.DAMDNet.bn1", "DAMDNet.DAMDNet.relu", "DAMDNet.DAMDNet.layer1", "DAMDNet.DAMDNet.seLayer1", "DAMDNet.DAMDNet.layer2", "DAMDNet.DAMDNet.seLayer2", "DAMDNet.DAMDNet.layer3", "DAMDNet.DAMDNet.seLayer3", "DAMDNet.DAMDNet.layer4", "DAMDNet.DAMDNet.seLayer4", "DAMDNet.DAMDNet.layer5", "DAMDNet.DAMDNet.seLayer5", "DAMDNet.DAMDNet.layer6", "DAMDNet.DAMDNet.seLayer6", "DAMDNet.DAMDNet.layer7", "DAMDNet.DAMDNet.seLayer7", "DAMDNet.DAMDNet.conv8", "DAMDNet.DAMDNet.avgpool", "DAMDNet.DAMDNet.conv9", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer4", "(", "x", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer5", "(", "x", ")", "\n", "x", "=", "self", ".", "layer6", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer6", "(", "x", ")", "\n", "x", "=", "self", ".", "layer7", "(", "x", ")", "\n", "x", "=", "self", ".", "seLayer7", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv8", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "conv9", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.DAMDNet.DAMDNet_v1": [[180, 185], ["DAMDNet.DAMDNet"], "function", ["None"], ["", "", "def", "DAMDNet_v1", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a MobileNetV2-19 add SE-Module model.\n    \"\"\"", "\n", "model", "=", "DAMDNet", "(", "Bottleneck", ",", "[", "1", ",", "2", ",", "3", ",", "4", ",", "3", ",", "3", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.Bottleneck.__init__": [[11, 24], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "transition_layer", "=", "None", ",", "expansion", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "inplanes", "*", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "expansion", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "expansion", ",", "inplanes", "*", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ",", "groups", "=", "inplanes", "*", "expansion", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "expansion", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "expansion", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "transition_layer", "=", "transition_layer", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.Bottleneck.forward": [[25, 47], ["MobDenseNet.Bottleneck.conv1", "MobDenseNet.Bottleneck.bn1", "MobDenseNet.Bottleneck.relu", "MobDenseNet.Bottleneck.conv2", "MobDenseNet.Bottleneck.bn2", "MobDenseNet.Bottleneck.relu", "MobDenseNet.Bottleneck.conv3", "MobDenseNet.Bottleneck.bn3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MobDenseNet.Bottleneck.relu", "MobDenseNet.Bottleneck.transition_layer", "MobDenseNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "residual", "]", ",", "1", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "transition_layer", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4.__init__": [[52, 76], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "MobDenseNet.DenseMobileNetV4._make_layer", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "MobDenseNet.DenseMobileNetV4.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "32", "\n", "super", "(", "DenseMobileNetV4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "16", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "expansion", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "24", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "32", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "block", ",", "96", ",", "layers", "[", "4", "]", ",", "stride", "=", "1", ",", "expansion", "=", "6", ")", "\n", "self", ".", "layer6", "=", "self", ".", "_make_layer", "(", "block", ",", "160", ",", "layers", "[", "5", "]", ",", "stride", "=", "2", ",", "expansion", "=", "6", ")", "\n", "self", ".", "layer7", "=", "self", ".", "_make_layer", "(", "block", ",", "320", ",", "layers", "[", "6", "]", ",", "stride", "=", "1", ",", "expansion", "=", "6", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "320", ",", "1280", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "4", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "1280", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._transition_layer": [[77, 82], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "", "", "def", "_transition_layer", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "transition_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "return", "transition_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._downsample": [[83, 87], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "def", "_downsample", "(", "self", ",", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "downsample", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", ")", "\n", "return", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._make_layer": [[88, 99], ["torch.Sequential", "torch.Sequential", "MobDenseNet.DenseMobileNetV4._downsample", "layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block", "MobDenseNet.DenseMobileNetV4._downsample", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._downsample", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4._downsample"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ",", "expansion", ")", ":", "\n", "        ", "downsample", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", ",", ")", "\n", "layers", "=", "[", "]", "\n", "transition_layer", "=", "self", ".", "_downsample", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "transition_layer", "=", "transition_layer", ",", "expansion", "=", "expansion", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "transition_layer", "=", "self", ".", "_downsample", "(", "self", ".", "inplanes", "+", "planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "transition_layer", "=", "transition_layer", ",", "expansion", "=", "expansion", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.DenseMobileNetV4.forward": [[100, 118], ["MobDenseNet.DenseMobileNetV4.conv1", "MobDenseNet.DenseMobileNetV4.bn1", "MobDenseNet.DenseMobileNetV4.relu", "MobDenseNet.DenseMobileNetV4.layer1", "MobDenseNet.DenseMobileNetV4.layer2", "MobDenseNet.DenseMobileNetV4.layer3", "MobDenseNet.DenseMobileNetV4.layer4", "MobDenseNet.DenseMobileNetV4.layer5", "MobDenseNet.DenseMobileNetV4.layer6", "MobDenseNet.DenseMobileNetV4.layer7", "MobDenseNet.DenseMobileNetV4.conv8", "MobDenseNet.DenseMobileNetV4.avgpool", "MobDenseNet.DenseMobileNetV4.conv9", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "x", "=", "self", ".", "layer6", "(", "x", ")", "\n", "x", "=", "self", ".", "layer7", "(", "x", ")", "\n", "x", "=", "self", ".", "conv8", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "conv9", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.MobDenseNet.mobdensenet_v1": [[120, 125], ["MobDenseNet.DenseMobileNetV4"], "function", ["None"], ["", "", "def", "mobdensenet_v1", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a MobDenseNet_v1 model.\n    \"\"\"", "\n", "model", "=", "DenseMobileNetV4", "(", "Bottleneck", ",", "[", "1", ",", "2", ",", "3", ",", "4", ",", "3", ",", "3", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.get_landmark.get_image_path_list": [[22, 24], ["None"], "function", ["None"], ["def", "get_image_path_list", "(", "root", ")", ":", "\n", "  ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.get_landmark.get_landmark_2d": [[25, 77], ["cv2.imread", "model.cuda.state_dict", "model.cuda.eval", "torchvision.Compose", "dlib.get_frontal_face_detector.", "utils.inference.crop_img", "cv2.resize", "transforms.Compose.unsqueeze", "utils.inference.predict_68pts", "os.path.join", "torch.load", "torch.load", "getattr", "model.cuda.cuda", "dlib.shape_predictor", "dlib.get_frontal_face_detector", "max", "cv2.resize", "torch.no_grad", "torch.no_grad", "model.cuda.", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten().astype", "scipy.loadmat", "utils.ddfa.ToTensorGjz", "utils.ddfa.NormalizeGjz", "float", "dlib.rectangle", "dlib.shape_predictor.parts", "utils.inference.parse_roi_box_from_landmark", "utils.inference.parse_roi_box_from_bbox", "transforms.Compose.", "input.cuda.cuda", "max", "int", "int", "int", "int", "int", "int", "numpy.array", "int", "int", "int", "int", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten", "dlib.shape_predictor.", "rect.left", "rect.top", "rect.right", "rect.bottom", "rect.left", "rect.top", "rect.right", "rect.bottom", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu", "param.squeeze().cpu().numpy().flatten().astype.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_landmark", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_bbox"], ["", "def", "get_landmark_2d", "(", "root", ",", "image_path", ")", ":", "\n", "# 0.read image", "\n", "    ", "img_ori", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "root", ",", "image_path", ")", ")", "\n", "# 1. load pre-tained model", "\n", "checkpoint_fp", "=", "'models/MobDenseNet.pth.tar'", "\n", "arch", "=", "'mobdensenet_v1'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_fp", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "[", "'state_dict'", "]", "\n", "model", "=", "getattr", "(", "MobDenseNet", ",", "arch", ")", "(", "num_classes", "=", "62", ")", "# 62 = 12(pose) + 40(shape) +10(expression)", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "if", "args", ".", "mode", "==", "'gpu'", ":", "\n", "        ", "cudnn", ".", "benchmark", "=", "True", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "# 2. load dlib model for face detection and landmark used for face cropping", "\n", "if", "args", ".", "dlib_landmark", ":", "\n", "        ", "dlib_landmark_model", "=", "'models/shape_predictor_68_face_landmarks.dat'", "\n", "face_regressor", "=", "dlib", ".", "shape_predictor", "(", "dlib_landmark_model", ")", "\n", "", "if", "args", ".", "dlib_bbox", ":", "\n", "        ", "face_detector", "=", "dlib", ".", "get_frontal_face_detector", "(", ")", "\n", "# 3. forward", "\n", "", "tri", "=", "sio", ".", "loadmat", "(", "'visualize/tri.mat'", ")", "[", "'tri'", "]", "-", "1", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "ToTensorGjz", "(", ")", ",", "NormalizeGjz", "(", "mean", "=", "127.5", ",", "std", "=", "128", ")", "]", ")", "\n", "imgScale", "=", "1", "\n", "scaledImg", "=", "img_ori", "\n", "if", "max", "(", "img_ori", ".", "shape", ")", ">", "maxImgSizeForDetection", ":", "\n", "        ", "imgScale", "=", "maxImgSizeForDetection", "/", "float", "(", "max", "(", "img_ori", ".", "shape", ")", ")", "\n", "scaledImg", "=", "cv2", ".", "resize", "(", "img_ori", ",", "(", "int", "(", "img_ori", ".", "shape", "[", "1", "]", "*", "imgScale", ")", ",", "int", "(", "img_ori", ".", "shape", "[", "0", "]", "*", "imgScale", ")", ")", ")", "\n", "", "rects", "=", "face_detector", "(", "scaledImg", ",", "1", ")", "\n", "for", "rect", "in", "rects", ":", "\n", "        ", "if", "args", ".", "dlib_landmark", ":", "\n", "            ", "faceRectangle", "=", "rectangle", "(", "int", "(", "rect", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "top", "(", ")", "/", "imgScale", ")", ",", "\n", "int", "(", "rect", ".", "right", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "bottom", "(", ")", "/", "imgScale", ")", ")", "\n", "# - use landmark for cropping", "\n", "pts", "=", "face_regressor", "(", "img_ori", ",", "faceRectangle", ")", ".", "parts", "(", ")", "\n", "pts", "=", "np", ".", "array", "(", "[", "[", "pt", ".", "x", ",", "pt", ".", "y", "]", "for", "pt", "in", "pts", "]", ")", ".", "T", "\n", "roi_box", "=", "parse_roi_box_from_landmark", "(", "pts", ")", "\n", "", "else", ":", "\n", "            ", "bbox", "=", "[", "int", "(", "rect", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "top", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "right", "(", ")", "/", "imgScale", ")", ",", "\n", "int", "(", "rect", ".", "bottom", "(", ")", "/", "imgScale", ")", "]", "\n", "roi_box", "=", "parse_roi_box_from_bbox", "(", "bbox", ")", "\n", "", "", "img", "=", "crop_img", "(", "img_ori", ",", "roi_box", ")", "\n", "# forward: one step", "\n", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "STD_SIZE", ",", "STD_SIZE", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "input", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "args", ".", "mode", "==", "'gpu'", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "", "param", "=", "model", "(", "input", ")", "\n", "param", "=", "param", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# 68 pts", "\n", "", "pts68", "=", "predict_68pts", "(", "param", ",", "roi_box", ")", "\n", "return", "pts68", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.__init__": [[21, 42], ["torch.Module.__init__", "_to_tensor", "_to_tensor", "_to_tensor", "_to_tensor", "_to_tensor", "_to_tensor", "np.log"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt_style", "=", "'resample'", ",", "w", "=", "10", ",", "epsilon", "=", "2.0", ")", ":", "\n", "        ", "super", "(", "WINGLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w", "=", "w", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "C", "=", "self", ".", "w", "-", "self", ".", "w", "*", "np", ".", "log", "(", "1", "+", "self", ".", "w", "/", "self", ".", "epsilon", ")", "\n", "self", ".", "opt_style", "=", "opt_style", "\n", "self", ".", "u", "=", "_to_tensor", "(", "u", ")", "\n", "self", ".", "param_mean", "=", "_to_tensor", "(", "param_mean", ")", "\n", "self", ".", "param_std", "=", "_to_tensor", "(", "param_std", ")", "\n", "self", ".", "w_shp", "=", "_to_tensor", "(", "w_shp", ")", "\n", "self", ".", "w_exp", "=", "_to_tensor", "(", "w_exp", ")", "\n", "\n", "self", ".", "keypoints", "=", "_to_tensor", "(", "keypoints", ")", "\n", "self", ".", "u_base", "=", "self", ".", "u", "[", "self", ".", "keypoints", "]", "\n", "self", ".", "w_shp_base", "=", "self", ".", "w_shp", "[", "self", ".", "keypoints", "]", "\n", "self", ".", "w_exp_base", "=", "self", ".", "w_exp", "[", "self", ".", "keypoints", "]", "\n", "\n", "self", ".", "w_shp_length", "=", "self", ".", "w_shp", ".", "shape", "[", "0", "]", "//", "3", "\n", "\n", "\n", "self", ".", "opt_style", "=", "opt_style", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.reconstruct_and_parse": [[43, 51], ["wing_loss._parse_param_batch", "wing_loss._parse_param_batch"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss._parse_param_batch", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss._parse_param_batch"], ["", "def", "reconstruct_and_parse", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "# reconstruct", "\n", "        ", "param", "=", "input", "*", "self", ".", "param_std", "+", "self", ".", "param_mean", "\n", "param_gt", "=", "target", "*", "self", ".", "param_std", "+", "self", ".", "param_mean", "\n", "# parse param", "\n", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", "=", "_parse_param_batch", "(", "param", ")", "\n", "pg", ",", "offsetg", ",", "alpha_shpg", ",", "alpha_expg", "=", "_parse_param_batch", "(", "param_gt", ")", "\n", "return", "(", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", ")", ",", "(", "pg", ",", "offsetg", ",", "alpha_shpg", ",", "alpha_expg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.forward_resample": [[52, 72], ["wing_loss.WINGLoss.reconstruct_and_parse", "[].reshape", "torch.cat().view().cuda", "torch.cat().view().cuda", "torch.cat().view().cuda", "torch.cat().view().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.reconstruct_and_parse"], ["", "def", "forward_resample", "(", "self", ",", "input", ",", "target", ",", "resample_num", "=", "132", ")", ":", "\n", "        ", "(", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", ")", ",", "(", "pg", ",", "offsetg", ",", "alpha_shpg", ",", "alpha_expg", ")", "=", "self", ".", "reconstruct_and_parse", "(", "input", ",", "target", ")", "\n", "\n", "# resample index", "\n", "index", "=", "torch", ".", "randperm", "(", "self", ".", "w_shp_length", ")", "[", ":", "resample_num", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "keypoints_resample", "=", "torch", ".", "cat", "(", "(", "3", "*", "index", ",", "3", "*", "index", "+", "1", ",", "3", "*", "index", "+", "2", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ")", ".", "cuda", "(", ")", "\n", "keypoints_mix", "=", "torch", ".", "cat", "(", "(", "self", ".", "keypoints", ",", "keypoints_resample", ")", ")", "\n", "w_shp_base", "=", "self", ".", "w_shp", "[", "keypoints_mix", "]", "\n", "u_base", "=", "self", ".", "u", "[", "keypoints_mix", "]", "\n", "w_exp_base", "=", "self", ".", "w_exp", "[", "keypoints_mix", "]", "\n", "\n", "offset", "[", ":", ",", "-", "1", "]", "=", "offsetg", "[", ":", ",", "-", "1", "]", "\n", "\n", "N", "=", "input", ".", "shape", "[", "0", "]", "\n", "gt_vertex", "=", "pg", "@", "(", "u_base", "+", "w_shp_base", "@", "alpha_shpg", "+", "w_exp_base", "@", "alpha_expg", ")", ".", "view", "(", "N", ",", "-", "1", ",", "3", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "+", "offsetg", "\n", "vertex", "=", "p", "@", "(", "u_base", "+", "w_shp_base", "@", "alpha_shp", "+", "w_exp_base", "@", "alpha_exp", ")", ".", "view", "(", "N", ",", "-", "1", ",", "3", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "+", "offset", "\n", "return", "vertex", ",", "gt_vertex", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.forward": [[73, 84], ["wing_loss.WINGLoss.forward_resample", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "Exception", "torch.where", "torch.where", "torch.where", "torch.where", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss.WINGLoss.forward_resample"], ["", "def", "forward", "(", "self", ",", "input_", ",", "target_", ")", ":", "\n", "        ", "if", "self", ".", "opt_style", "==", "'resample'", ":", "\n", "            ", "input", ",", "target", "=", "self", ".", "forward_resample", "(", "input_", ",", "target_", ")", "\n", "x", "=", "input", "-", "target", "\n", "absolute_x", "=", "torch", ".", "abs", "(", "x", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "where", "(", "absolute_x", "<", "self", ".", "w", ",", "\n", "self", ".", "w", "*", "torch", ".", "log", "(", "1", "+", "absolute_x", "/", "self", ".", "epsilon", ")", ",", "\n", "absolute_x", "-", "self", ".", "C", ")", ")", "\n", "return", "loss", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "f'Unknown opt style: {self.opt_style}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.None.wing_loss._parse_param_batch": [[10, 19], ["param[].view", "p_[].view", "param[].view", "param[].view"], "function", ["None"], ["def", "_parse_param_batch", "(", "param", ")", ":", "\n", "    ", "\"\"\"Work for both numpy and tensor\"\"\"", "\n", "N", "=", "param", ".", "shape", "[", "0", "]", "\n", "p_", "=", "param", "[", ":", ",", ":", "12", "]", ".", "view", "(", "N", ",", "3", ",", "-", "1", ")", "\n", "p", "=", "p_", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "offset", "=", "p_", "[", ":", ",", ":", ",", "-", "1", "]", ".", "view", "(", "N", ",", "3", ",", "1", ")", "\n", "alpha_shp", "=", "param", "[", ":", ",", "12", ":", "52", "]", ".", "view", "(", "N", ",", "-", "1", ",", "1", ")", "\n", "alpha_exp", "=", "param", "[", ":", ",", "52", ":", "]", ".", "view", "(", "N", ",", "-", "1", ",", "1", ")", "\n", "return", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.se_module.SELayer.__init__": [[5, 13], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Linear", "torch.ReLU", "torch.Linear", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.se_module.SELayer.forward": [[15, 20], ["x.size", "se_module.SELayer.avg_pool().view", "se_module.SELayer.fc().view", "se_module.SELayer.expand_as", "se_module.SELayer.avg_pool", "se_module.SELayer.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand_as", "(", "x", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.AverageMeter.__init__": [[77, 79], ["ddfa.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.AverageMeter.reset": [[80, 85], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.AverageMeter.update": [[86, 91], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.ToTensorGjz.__call__": [[94, 98], ["isinstance", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy.float", "torch.from_numpy.float", "pic.transpose"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pic", ")", ":", "\n", "        ", "if", "isinstance", "(", "pic", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "pic", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "return", "img", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.ToTensorGjz.__repr__": [[99, 101], ["None"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.NormalizeGjz.__init__": [[104, 107], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.NormalizeGjz.__call__": [[108, 111], ["tensor.sub_().div_", "tensor.sub_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "tensor", ".", "sub_", "(", "self", ".", "mean", ")", ".", "div_", "(", "self", ".", "std", ")", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFADataset.__init__": [[114, 120], ["pathlib.Path().read_text().strip().split", "io._numpy_to_tensor", "io._load_cpu", "pathlib.Path().read_text().strip", "pathlib.Path().read_text", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "filelists", ",", "param_fp", ",", "transform", "=", "None", ",", "**", "kargs", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "lines", "=", "Path", "(", "filelists", ")", ".", "read_text", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "self", ".", "params", "=", "_numpy_to_tensor", "(", "_load_cpu", "(", "param_fp", ")", ")", "\n", "self", ".", "img_loader", "=", "img_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFADataset._target_loader": [[121, 125], ["None"], "methods", ["None"], ["", "def", "_target_loader", "(", "self", ",", "index", ")", ":", "\n", "        ", "target", "=", "self", ".", "params", "[", "index", "]", "\n", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFADataset.__getitem__": [[126, 135], ["os.join", "ddfa.DDFADataset.img_loader", "ddfa.DDFADataset._target_loader", "ddfa.DDFADataset.transform"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.img_loader", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFADataset._target_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "osp", ".", "join", "(", "self", ".", "root", ",", "self", ".", "lines", "[", "index", "]", ")", "\n", "img", "=", "self", ".", "img_loader", "(", "path", ")", "\n", "\n", "target", "=", "self", ".", "_target_loader", "(", "index", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFADataset.__len__": [[136, 138], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFATestDataset.__init__": [[141, 145], ["pathlib.Path().read_text().strip().split", "pathlib.Path().read_text().strip", "pathlib.Path().read_text", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filelists", ",", "root", "=", "''", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "lines", "=", "Path", "(", "filelists", ")", ".", "read_text", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFATestDataset.__getitem__": [[146, 153], ["os.join", "ddfa.img_loader", "ddfa.DDFATestDataset.transform"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.img_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "osp", ".", "join", "(", "self", ".", "root", ",", "self", ".", "lines", "[", "index", "]", ")", "\n", "img", "=", "img_loader", "(", "path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.DDFATestDataset.__len__": [[154, 156], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "lines", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa._parse_param": [[17, 25], ["param[].reshape", "p_[].reshape", "param[].reshape", "param[].reshape"], "function", ["None"], ["def", "_parse_param", "(", "param", ")", ":", "\n", "    ", "\"\"\"Work for both numpy and tensor\"\"\"", "\n", "p_", "=", "param", "[", ":", "12", "]", ".", "reshape", "(", "3", ",", "-", "1", ")", "\n", "p", "=", "p_", "[", ":", ",", ":", "3", "]", "\n", "offset", "=", "p_", "[", ":", ",", "-", "1", "]", ".", "reshape", "(", "3", ",", "1", ")", "\n", "alpha_shp", "=", "param", "[", "12", ":", "52", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "alpha_exp", "=", "param", "[", "52", ":", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "return", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.reconstruct_vertex": [[27, 59], ["ddfa._parse_param", "len", "numpy.concatenate", "len", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa._parse_param"], ["", "def", "reconstruct_vertex", "(", "param", ",", "whitening", "=", "True", ",", "dense", "=", "False", ",", "transform", "=", "True", ")", ":", "\n", "    ", "\"\"\"Whitening param -> 3d vertex, based on the 3dmm param: u_base, w_shp, w_exp\n    dense: if True, return dense vertex, else return 68 sparse landmarks. All dense or sparse vertex is transformed to\n    image coordinate space, but without alignment caused by face cropping.\n    transform: whether transform to image space\n    \"\"\"", "\n", "if", "len", "(", "param", ")", "==", "12", ":", "\n", "        ", "param", "=", "np", ".", "concatenate", "(", "(", "param", ",", "[", "0", "]", "*", "50", ")", ")", "\n", "", "if", "whitening", ":", "\n", "        ", "if", "len", "(", "param", ")", "==", "62", ":", "\n", "            ", "param", "=", "param", "*", "param_std", "+", "param_mean", "\n", "", "else", ":", "\n", "            ", "param", "=", "np", ".", "concatenate", "(", "(", "param", "[", ":", "11", "]", ",", "[", "0", "]", ",", "param", "[", "11", ":", "]", ")", ")", "\n", "param", "=", "param", "*", "param_std", "+", "param_mean", "\n", "\n", "", "", "p", ",", "offset", ",", "alpha_shp", ",", "alpha_exp", "=", "_parse_param", "(", "param", ")", "\n", "\n", "if", "dense", ":", "\n", "        ", "vertex", "=", "p", "@", "(", "u", "+", "w_shp", "@", "alpha_shp", "+", "w_exp", "@", "alpha_exp", ")", ".", "reshape", "(", "3", ",", "-", "1", ",", "order", "=", "'F'", ")", "+", "offset", "\n", "\n", "if", "transform", ":", "\n", "# transform to image coordinate space", "\n", "            ", "vertex", "[", "1", ",", ":", "]", "=", "std_size", "+", "1", "-", "vertex", "[", "1", ",", ":", "]", "\n", "", "", "else", ":", "\n", "        ", "\"\"\"For 68 pts\"\"\"", "\n", "vertex", "=", "p", "@", "(", "u_base", "+", "w_shp_base", "@", "alpha_shp", "+", "w_exp_base", "@", "alpha_exp", ")", ".", "reshape", "(", "3", ",", "-", "1", ",", "order", "=", "'F'", ")", "+", "offset", "\n", "\n", "if", "transform", ":", "\n", "# transform to image coordinate space", "\n", "            ", "vertex", "[", "1", ",", ":", "]", "=", "std_size", "+", "1", "-", "vertex", "[", "1", ",", ":", "]", "\n", "\n", "", "", "return", "vertex", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.img_loader": [[61, 63], ["cv2.imread"], "function", ["None"], ["", "def", "img_loader", "(", "path", ")", ":", "\n", "    ", "return", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.str2bool": [[65, 72], ["v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "if", "v", ".", "lower", "(", ")", "in", "(", "'yes'", ",", "'true'", ",", "'t'", ",", "'y'", ",", "'1'", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "'no'", ",", "'false'", ",", "'f'", ",", "'n'", ",", "'0'", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "'Boolean value expected'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io.mkdir": [[11, 15], ["os.system", "os.path.isdir", "os.path.exists"], "function", ["None"], ["def", "mkdir", "(", "d", ")", ":", "\n", "    ", "\"\"\"only works on *nix system\"\"\"", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", "and", "not", "os", ".", "path", ".", "exists", "(", "d", ")", ":", "\n", "        ", "os", ".", "system", "(", "'mkdir -p {}'", ".", "format", "(", "d", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._get_suffix": [[17, 23], ["filename.rfind"], "function", ["None"], ["", "", "def", "_get_suffix", "(", "filename", ")", ":", "\n", "    ", "\"\"\"a.jpg -> jpg\"\"\"", "\n", "pos", "=", "filename", ".", "rfind", "(", "'.'", ")", "\n", "if", "pos", "==", "-", "1", ":", "\n", "        ", "return", "''", "\n", "", "return", "filename", "[", "pos", "+", "1", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load": [[25, 31], ["io._get_suffix", "numpy.load", "pickle.load", "open"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._get_suffix"], ["", "def", "_load", "(", "fp", ")", ":", "\n", "    ", "suffix", "=", "_get_suffix", "(", "fp", ")", "\n", "if", "suffix", "==", "'npy'", ":", "\n", "        ", "return", "np", ".", "load", "(", "fp", ")", "\n", "", "elif", "suffix", "==", "'pkl'", ":", "\n", "        ", "return", "pickle", ".", "load", "(", "open", "(", "fp", ",", "'rb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._dump": [[33, 41], ["io._get_suffix", "numpy.save", "pickle.dump", "Exception", "open"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._get_suffix"], ["", "", "def", "_dump", "(", "wfp", ",", "obj", ")", ":", "\n", "    ", "suffix", "=", "_get_suffix", "(", "wfp", ")", "\n", "if", "suffix", "==", "'npy'", ":", "\n", "        ", "np", ".", "save", "(", "wfp", ",", "obj", ")", "\n", "", "elif", "suffix", "==", "'pkl'", ":", "\n", "        ", "pickle", ".", "dump", "(", "obj", ",", "open", "(", "wfp", ",", "'wb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Unknown Type: {}'", ".", "format", "(", "suffix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load_tensor": [[43, 48], ["mode.lower", "torch.from_numpy", "io._load", "mode.lower", "torch.from_numpy().cuda", "torch.from_numpy", "io._load"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load"], ["", "", "def", "_load_tensor", "(", "fp", ",", "mode", "=", "'cpu'", ")", ":", "\n", "    ", "if", "mode", ".", "lower", "(", ")", "==", "'cpu'", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "_load", "(", "fp", ")", ")", "\n", "", "elif", "mode", ".", "lower", "(", ")", "==", "'gpu'", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "_load", "(", "fp", ")", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._tensor_to_cuda": [[50, 55], ["x.cuda"], "function", ["None"], ["", "", "def", "_tensor_to_cuda", "(", "x", ")", ":", "\n", "    ", "if", "x", ".", "is_cuda", ":", "\n", "        ", "return", "x", "\n", "", "else", ":", "\n", "        ", "return", "x", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load_gpu": [[57, 59], ["torch.from_numpy().cuda", "torch.from_numpy", "io._load"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load"], ["", "", "def", "_load_gpu", "(", "fp", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "_load", "(", "fp", ")", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io.load_bfm": [[61, 108], ["io._get_suffix", "scipy.loadmat", "model[].astype", "model[].astype", "numpy.concatenate", "np.concatenate.T.flatten", "numpy.concatenate", "numpy.linalg.norm", "numpy.linalg.norm", "u[].reshape", "io._dump", "io._load", "model[].astype", "model[].astype", "model_path.replace"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._get_suffix", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._dump", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.io._load"], ["", "def", "load_bfm", "(", "model_path", ")", ":", "\n", "    ", "suffix", "=", "_get_suffix", "(", "model_path", ")", "\n", "if", "suffix", "==", "'mat'", ":", "\n", "        ", "C", "=", "sio", ".", "loadmat", "(", "model_path", ")", "\n", "model", "=", "C", "[", "'model_refine'", "]", "\n", "model", "=", "model", "[", "0", ",", "0", "]", "\n", "\n", "model_new", "=", "{", "}", "\n", "w_shp", "=", "model", "[", "'w'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "model_new", "[", "'w_shp_sim'", "]", "=", "w_shp", "[", ":", ",", ":", "40", "]", "\n", "w_exp", "=", "model", "[", "'w_exp'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "model_new", "[", "'w_exp_sim'", "]", "=", "w_exp", "[", ":", ",", ":", "10", "]", "\n", "\n", "u_shp", "=", "model", "[", "'mu_shape'", "]", "\n", "u_exp", "=", "model", "[", "'mu_exp'", "]", "\n", "u", "=", "(", "u_shp", "+", "u_exp", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "model_new", "[", "'mu'", "]", "=", "u", "\n", "model_new", "[", "'tri'", "]", "=", "model", "[", "'tri'", "]", ".", "astype", "(", "np", ".", "int32", ")", "-", "1", "\n", "\n", "# flatten it, pay attention to index value", "\n", "keypoints", "=", "model", "[", "'keypoints'", "]", ".", "astype", "(", "np", ".", "int32", ")", "-", "1", "\n", "keypoints", "=", "np", ".", "concatenate", "(", "(", "3", "*", "keypoints", ",", "3", "*", "keypoints", "+", "1", ",", "3", "*", "keypoints", "+", "2", ")", ",", "axis", "=", "0", ")", "\n", "\n", "model_new", "[", "'keypoints'", "]", "=", "keypoints", ".", "T", ".", "flatten", "(", ")", "\n", "\n", "#", "\n", "w", "=", "np", ".", "concatenate", "(", "(", "w_shp", ",", "w_exp", ")", ",", "axis", "=", "1", ")", "\n", "w_base", "=", "w", "[", "keypoints", "]", "\n", "w_norm", "=", "np", ".", "linalg", ".", "norm", "(", "w", ",", "axis", "=", "0", ")", "\n", "w_base_norm", "=", "np", ".", "linalg", ".", "norm", "(", "w_base", ",", "axis", "=", "0", ")", "\n", "\n", "dim", "=", "w_shp", ".", "shape", "[", "0", "]", "//", "3", "\n", "u_base", "=", "u", "[", "keypoints", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "w_shp_base", "=", "w_shp", "[", "keypoints", "]", "\n", "w_exp_base", "=", "w_exp", "[", "keypoints", "]", "\n", "\n", "model_new", "[", "'w_norm'", "]", "=", "w_norm", "\n", "model_new", "[", "'w_base_norm'", "]", "=", "w_base_norm", "\n", "model_new", "[", "'dim'", "]", "=", "dim", "\n", "model_new", "[", "'u_base'", "]", "=", "u_base", "\n", "model_new", "[", "'w_shp_base'", "]", "=", "w_shp_base", "\n", "model_new", "[", "'w_exp_base'", "]", "=", "w_exp_base", "\n", "\n", "_dump", "(", "model_path", ".", "replace", "(", "'.mat'", ",", "'.pkl'", ")", ",", "model_new", ")", "\n", "return", "model_new", "\n", "", "else", ":", "\n", "        ", "return", "_load", "(", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.plot_kpt": [[17, 33], ["cv2.line.copy", "numpy.round().astype", "range", "cv2.circle", "cv2.line", "numpy.round"], "function", ["None"], ["def", "plot_kpt", "(", "image", ",", "kpt", ")", ":", "\n", "    ", "''' Draw 68 key points\n    Args:\n        image: the input image\n        kpt: (68, 3).\n    '''", "\n", "image", "=", "image", ".", "copy", "(", ")", "\n", "kpt", "=", "np", ".", "round", "(", "kpt", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "i", "in", "range", "(", "kpt", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "st", "=", "kpt", "[", "i", ",", ":", "2", "]", "\n", "image", "=", "cv2", ".", "circle", "(", "image", ",", "(", "st", "[", "0", "]", ",", "st", "[", "1", "]", ")", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "if", "i", "in", "end_list", ":", "\n", "            ", "continue", "\n", "", "ed", "=", "kpt", "[", "i", "+", "1", ",", ":", "2", "]", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "(", "st", "[", "0", "]", ",", "st", "[", "1", "]", ")", ",", "(", "ed", "[", "0", "]", ",", "ed", "[", "1", "]", ")", ",", "(", "255", ",", "255", ",", "255", ")", ",", "1", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.build_camera_box": [[35, 54], ["np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "int", "int", "np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "np.array().reshape.append", "numpy.array().reshape", "numpy.array"], "function", ["None"], ["", "def", "build_camera_box", "(", "rear_size", "=", "90", ")", ":", "\n", "    ", "point_3d", "=", "[", "]", "\n", "rear_depth", "=", "0", "\n", "point_3d", ".", "append", "(", "(", "-", "rear_size", ",", "-", "rear_size", ",", "rear_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "-", "rear_size", ",", "rear_size", ",", "rear_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "rear_size", ",", "rear_size", ",", "rear_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "rear_size", ",", "-", "rear_size", ",", "rear_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "-", "rear_size", ",", "-", "rear_size", ",", "rear_depth", ")", ")", "\n", "\n", "front_size", "=", "int", "(", "4", "/", "3", "*", "rear_size", ")", "\n", "front_depth", "=", "int", "(", "4", "/", "3", "*", "rear_size", ")", "\n", "point_3d", ".", "append", "(", "(", "-", "front_size", ",", "-", "front_size", ",", "front_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "-", "front_size", ",", "front_size", ",", "front_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "front_size", ",", "front_size", ",", "front_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "front_size", ",", "-", "front_size", ",", "front_depth", ")", ")", "\n", "point_3d", ".", "append", "(", "(", "-", "front_size", ",", "-", "front_size", ",", "front_depth", ")", ")", "\n", "point_3d", "=", "np", ".", "array", "(", "point_3d", ",", "dtype", "=", "np", ".", "float", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "\n", "return", "point_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.plot_pose_box": [[56, 92], ["image.copy.copy", "range", "isinstance", "isinstance", "len", "utils.inference.calc_hypotenuse", "cv_plot.build_camera_box", "numpy.hstack", "numpy.int32", "cv2.polylines", "cv2.line", "cv2.line", "cv2.line", "np.hstack.dot", "numpy.mean", "np.int32.reshape", "tuple", "tuple", "tuple", "tuple", "tuple", "tuple", "numpy.ones", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.calc_hypotenuse", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.build_camera_box"], ["", "def", "plot_pose_box", "(", "image", ",", "Ps", ",", "pts68s", ",", "color", "=", "(", "40", ",", "255", ",", "0", ")", ",", "line_width", "=", "2", ")", ":", "\n", "    ", "''' Draw a 3D box as annotation of pose. Ref:https://github.com/yinguobing/head-pose-estimation/blob/master/pose_estimator.py\n    Args:\n        image: the input image\n        P: (3, 4). Affine Camera Matrix.\n        kpt: (2, 68) or (3, 68)\n    '''", "\n", "image", "=", "image", ".", "copy", "(", ")", "\n", "if", "not", "isinstance", "(", "pts68s", ",", "list", ")", ":", "\n", "        ", "pts68s", "=", "[", "pts68s", "]", "\n", "", "if", "not", "isinstance", "(", "Ps", ",", "list", ")", ":", "\n", "        ", "Ps", "=", "[", "Ps", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "pts68s", ")", ")", ":", "\n", "        ", "pts68", "=", "pts68s", "[", "i", "]", "\n", "llength", "=", "calc_hypotenuse", "(", "pts68", ")", "\n", "point_3d", "=", "build_camera_box", "(", "llength", ")", "\n", "P", "=", "Ps", "[", "i", "]", "\n", "\n", "# Map to 2d image points", "\n", "point_3d_homo", "=", "np", ".", "hstack", "(", "(", "point_3d", ",", "np", ".", "ones", "(", "[", "point_3d", ".", "shape", "[", "0", "]", ",", "1", "]", ")", ")", ")", "# n x 4", "\n", "point_2d", "=", "point_3d_homo", ".", "dot", "(", "P", ".", "T", ")", "[", ":", ",", ":", "2", "]", "\n", "\n", "point_2d", "[", ":", ",", "1", "]", "=", "-", "point_2d", "[", ":", ",", "1", "]", "\n", "point_2d", "[", ":", ",", ":", "2", "]", "=", "point_2d", "[", ":", ",", ":", "2", "]", "-", "np", ".", "mean", "(", "point_2d", "[", ":", "4", ",", ":", "2", "]", ",", "0", ")", "+", "np", ".", "mean", "(", "pts68", "[", ":", "2", ",", ":", "27", "]", ",", "1", ")", "\n", "point_2d", "=", "np", ".", "int32", "(", "point_2d", ".", "reshape", "(", "-", "1", ",", "2", ")", ")", "\n", "\n", "# Draw all the lines", "\n", "cv2", ".", "polylines", "(", "image", ",", "[", "point_2d", "]", ",", "True", ",", "color", ",", "line_width", ",", "cv2", ".", "LINE_AA", ")", "\n", "cv2", ".", "line", "(", "image", ",", "tuple", "(", "point_2d", "[", "1", "]", ")", ",", "tuple", "(", "\n", "point_2d", "[", "6", "]", ")", ",", "color", ",", "line_width", ",", "cv2", ".", "LINE_AA", ")", "\n", "cv2", ".", "line", "(", "image", ",", "tuple", "(", "point_2d", "[", "2", "]", ")", ",", "tuple", "(", "\n", "point_2d", "[", "7", "]", ")", ",", "color", ",", "line_width", ",", "cv2", ".", "LINE_AA", ")", "\n", "cv2", ".", "line", "(", "image", ",", "tuple", "(", "point_2d", "[", "3", "]", ")", ",", "tuple", "(", "\n", "point_2d", "[", "8", "]", ")", ",", "color", ",", "line_width", ",", "cv2", ".", "LINE_AA", ")", "\n", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.main": [[94, 96], ["None"], "function", ["None"], ["", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.is_point_in_tri": [[21, 56], ["numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], "function", ["None"], ["def", "is_point_in_tri", "(", "point", ",", "tri_points", ")", ":", "\n", "    ", "''' Judge whether the point is in the triangle\n    Method:\n        http://blackpawn.com/texts/pointinpoly/\n    Args:\n        point: [u, v] or [x, y]\n        tri_points: three vertices(2d points) of a triangle. 2 coords x 3 vertices\n    Returns:\n        bool: true for in triangle\n    '''", "\n", "tp", "=", "tri_points", "\n", "\n", "# vectors", "\n", "v0", "=", "tp", "[", ":", ",", "2", "]", "-", "tp", "[", ":", ",", "0", "]", "\n", "v1", "=", "tp", "[", ":", ",", "1", "]", "-", "tp", "[", ":", ",", "0", "]", "\n", "v2", "=", "point", "-", "tp", "[", ":", ",", "0", "]", "\n", "\n", "# dot products", "\n", "dot00", "=", "np", ".", "dot", "(", "v0", ".", "T", ",", "v0", ")", "\n", "dot01", "=", "np", ".", "dot", "(", "v0", ".", "T", ",", "v1", ")", "\n", "dot02", "=", "np", ".", "dot", "(", "v0", ".", "T", ",", "v2", ")", "\n", "dot11", "=", "np", ".", "dot", "(", "v1", ".", "T", ",", "v1", ")", "\n", "dot12", "=", "np", ".", "dot", "(", "v1", ".", "T", ",", "v2", ")", "\n", "\n", "# barycentric coordinates", "\n", "if", "dot00", "*", "dot11", "-", "dot01", "*", "dot01", "==", "0", ":", "\n", "        ", "inverDeno", "=", "0", "\n", "", "else", ":", "\n", "        ", "inverDeno", "=", "1", "/", "(", "dot00", "*", "dot11", "-", "dot01", "*", "dot01", ")", "\n", "\n", "", "u", "=", "(", "dot11", "*", "dot02", "-", "dot01", "*", "dot12", ")", "*", "inverDeno", "\n", "v", "=", "(", "dot00", "*", "dot12", "-", "dot01", "*", "dot02", ")", "*", "inverDeno", "\n", "\n", "# check if point in triangle", "\n", "return", "(", "u", ">=", "0", ")", "&", "(", "v", ">=", "0", ")", "&", "(", "u", "+", "v", "<", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.render_colors": [[58, 94], ["numpy.zeros", "range", "numpy.zeros", "max", "min", "max", "min", "range", "int", "int", "int", "int", "range", "numpy.ceil", "numpy.floor", "numpy.ceil", "numpy.floor", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "render.is_point_in_tri"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.is_point_in_tri"], ["", "def", "render_colors", "(", "vertices", ",", "colors", ",", "tri", ",", "h", ",", "w", ",", "c", "=", "3", ")", ":", "\n", "    ", "\"\"\" render mesh by z buffer\n    Args:\n        vertices: 3 x nver\n        colors: 3 x nver\n        tri: 3 x ntri\n        h: height\n        w: width\n    \"\"\"", "\n", "# initial", "\n", "image", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "\n", "depth_buffer", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", "]", ")", "-", "999999.", "\n", "# triangle depth: approximate the depth to the average value of z in each vertex(v0, v1, v2), since the vertices are closed to each other", "\n", "tri_depth", "=", "(", "vertices", "[", "2", ",", "tri", "[", "0", ",", ":", "]", "]", "+", "vertices", "[", "2", ",", "tri", "[", "1", ",", ":", "]", "]", "+", "vertices", "[", "2", ",", "tri", "[", "2", ",", ":", "]", "]", ")", "/", "3.", "\n", "tri_tex", "=", "(", "colors", "[", ":", ",", "tri", "[", "0", ",", ":", "]", "]", "+", "colors", "[", ":", ",", "tri", "[", "1", ",", ":", "]", "]", "+", "colors", "[", ":", ",", "tri", "[", "2", ",", ":", "]", "]", ")", "/", "3.", "\n", "\n", "for", "i", "in", "range", "(", "tri", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "tri_idx", "=", "tri", "[", ":", ",", "i", "]", "# 3 vertex indices", "\n", "\n", "# the inner bounding box", "\n", "umin", "=", "max", "(", "int", "(", "np", ".", "ceil", "(", "np", ".", "min", "(", "vertices", "[", "0", ",", "tri_idx", "]", ")", ")", ")", ",", "0", ")", "\n", "umax", "=", "min", "(", "int", "(", "np", ".", "floor", "(", "np", ".", "max", "(", "vertices", "[", "0", ",", "tri_idx", "]", ")", ")", ")", ",", "w", "-", "1", ")", "\n", "\n", "vmin", "=", "max", "(", "int", "(", "np", ".", "ceil", "(", "np", ".", "min", "(", "vertices", "[", "1", ",", "tri_idx", "]", ")", ")", ")", ",", "0", ")", "\n", "vmax", "=", "min", "(", "int", "(", "np", ".", "floor", "(", "np", ".", "max", "(", "vertices", "[", "1", ",", "tri_idx", "]", ")", ")", ")", ",", "h", "-", "1", ")", "\n", "\n", "if", "umax", "<", "umin", "or", "vmax", "<", "vmin", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "u", "in", "range", "(", "umin", ",", "umax", "+", "1", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "vmin", ",", "vmax", "+", "1", ")", ":", "\n", "                ", "if", "tri_depth", "[", "i", "]", ">", "depth_buffer", "[", "v", ",", "u", "]", "and", "is_point_in_tri", "(", "[", "u", ",", "v", "]", ",", "vertices", "[", ":", "2", ",", "tri_idx", "]", ")", ":", "\n", "                    ", "depth_buffer", "[", "v", ",", "u", "]", "=", "tri_depth", "[", "i", "]", "\n", "image", "[", "v", ",", "u", ",", ":", "]", "=", "tri_tex", "[", ":", ",", "i", "]", "\n", "", "", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.get_depths_image": [[96, 114], ["numpy.zeros", "range", "len", "render.render_colors", "np.zeros.squeeze", "min", "max"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.render_colors"], ["", "def", "get_depths_image", "(", "img", ",", "vertices_lst", ",", "tri", ")", ":", "\n", "    ", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "c", "=", "1", "\n", "\n", "depths_img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "vertices_lst", ")", ")", ":", "\n", "        ", "vertices", "=", "vertices_lst", "[", "i", "]", "\n", "\n", "z", "=", "vertices", "[", "2", ",", ":", "]", "\n", "z_min", ",", "z_max", "=", "min", "(", "z", ")", ",", "max", "(", "z", ")", "\n", "vertices", "[", "2", ",", ":", "]", "=", "(", "z", "-", "z_min", ")", "/", "(", "z_max", "-", "z_min", ")", "\n", "\n", "z", "=", "vertices", "[", "2", ":", ",", ":", "]", "\n", "depth_img", "=", "render_colors", "(", "vertices", ",", "z", ",", "tri", ",", "h", ",", "w", ",", "1", ")", "\n", "depths_img", "[", "depth_img", ">", "0", "]", "=", "depth_img", "[", "depth_img", ">", "0", "]", "\n", "\n", "", "depths_img", "=", "depths_img", ".", "squeeze", "(", ")", "*", "255", "\n", "return", "depths_img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.crender_colors": [[116, 150], ["vertices.T.astype().copy.T.astype().copy", "triangles.T.astype().copy.T.astype().copy", "colors.T.astype().copy.T.astype().copy", "cython.mesh_core_cython.render_colors_core", "numpy.zeros", "numpy.zeros", "vertices.T.astype().copy.T.astype", "triangles.T.astype().copy.T.astype", "colors.T.astype().copy.T.astype", "params.pncc_code"], "function", ["None"], ["", "def", "crender_colors", "(", "vertices", ",", "triangles", ",", "colors", ",", "h", ",", "w", ",", "c", "=", "3", ",", "BG", "=", "None", ")", ":", "\n", "    ", "\"\"\" render mesh with colors\n    Args:\n        vertices: [nver, 3]\n        triangles: [ntri, 3]\n        colors: [nver, 3]\n        h: height\n        w: width\n        c: channel\n        BG: background image\n    Returns:\n        image: [h, w, c]. rendered image./rendering.\n    \"\"\"", "\n", "\n", "if", "BG", "is", "None", ":", "\n", "        ", "image", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "assert", "BG", ".", "shape", "[", "0", "]", "==", "h", "and", "BG", ".", "shape", "[", "1", "]", "==", "w", "and", "BG", ".", "shape", "[", "2", "]", "==", "c", "\n", "image", "=", "BG", "\n", "", "depth_buffer", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", "]", ",", "dtype", "=", "np", ".", "float32", ",", "order", "=", "'C'", ")", "-", "999999.", "\n", "\n", "# to C order", "\n", "vertices", "=", "vertices", ".", "T", ".", "astype", "(", "np", ".", "float32", ")", ".", "copy", "(", "order", "=", "'C'", ")", "\n", "triangles", "=", "triangles", ".", "T", ".", "astype", "(", "np", ".", "int32", ")", ".", "copy", "(", "order", "=", "'C'", ")", "\n", "colors", "=", "colors", ".", "T", ".", "astype", "(", "np", ".", "float32", ")", ".", "copy", "(", "order", "=", "'C'", ")", "\n", "\n", "mesh_core_cython", ".", "render_colors_core", "(", "\n", "image", ",", "vertices", ",", "triangles", ",", "\n", "colors", ",", "\n", "depth_buffer", ",", "\n", "vertices", ".", "shape", "[", "0", "]", ",", "triangles", ".", "shape", "[", "0", "]", ",", "\n", "h", ",", "w", ",", "c", "\n", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.cget_depths_image": [[152, 171], ["numpy.zeros", "range", "len", "render.crender_colors", "np.zeros.squeeze", "min", "max"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.crender_colors"], ["", "def", "cget_depths_image", "(", "img", ",", "vertices_lst", ",", "tri", ")", ":", "\n", "    ", "\"\"\"cython version for depth image render\"\"\"", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "c", "=", "1", "\n", "\n", "depths_img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "vertices_lst", ")", ")", ":", "\n", "        ", "vertices", "=", "vertices_lst", "[", "i", "]", "\n", "\n", "z", "=", "vertices", "[", "2", ",", ":", "]", "\n", "z_min", ",", "z_max", "=", "min", "(", "z", ")", ",", "max", "(", "z", ")", "\n", "vertices", "[", "2", ",", ":", "]", "=", "(", "z", "-", "z_min", ")", "/", "(", "z_max", "-", "z_min", ")", "\n", "z", "=", "vertices", "[", "2", ":", ",", ":", "]", "\n", "\n", "depth_img", "=", "crender_colors", "(", "vertices", ",", "tri", ",", "z", ",", "h", ",", "w", ",", "1", ")", "\n", "depths_img", "[", "depth_img", ">", "0", "]", "=", "depth_img", "[", "depth_img", ">", "0", "]", "\n", "\n", "", "depths_img", "=", "depths_img", ".", "squeeze", "(", ")", "*", "255", "\n", "return", "depths_img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.ncc": [[173, 190], ["numpy.min().reshape", "numpy.max().reshape", "numpy.min", "numpy.max"], "function", ["None"], ["", "def", "ncc", "(", "vertices", ")", ":", "\n", "## simple version", "\n", "# ncc_vertices = np.zeros_like(vertices)", "\n", "# x = vertices[0, :]", "\n", "# y = vertices[1, :]", "\n", "# z = vertices[2, :]", "\n", "#", "\n", "# ncc_vertices[0, :] = (x - min(x)) / (max(x) - min(x))", "\n", "# ncc_vertices[1, :] = (y - min(y)) / (max(y) - min(y))", "\n", "# ncc_vertices[2, :] = (z - min(z)) / (max(z) - min(z))", "\n", "\n", "# matrix version", "\n", "    ", "v_min", "=", "np", ".", "min", "(", "vertices", ",", "axis", "=", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "v_max", "=", "np", ".", "max", "(", "vertices", ",", "axis", "=", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "ncc_vertices", "=", "(", "vertices", "-", "v_min", ")", "/", "(", "v_max", "-", "v_min", ")", "\n", "\n", "return", "ncc_vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.cpncc": [[192, 205], ["numpy.zeros", "range", "len", "render.crender_colors", "np.zeros.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.crender_colors"], ["", "def", "cpncc", "(", "img", ",", "vertices_lst", ",", "tri", ")", ":", "\n", "    ", "\"\"\"cython version for PNCC render: original paper\"\"\"", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "c", "=", "3", "\n", "\n", "pnccs_img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "vertices_lst", ")", ")", ":", "\n", "        ", "vertices", "=", "vertices_lst", "[", "i", "]", "\n", "pncc_img", "=", "crender_colors", "(", "vertices", ",", "tri", ",", "pncc_code", ",", "h", ",", "w", ",", "c", ")", "\n", "pnccs_img", "[", "pncc_img", ">", "0", "]", "=", "pncc_img", "[", "pncc_img", ">", "0", "]", "\n", "\n", "", "pnccs_img", "=", "pnccs_img", ".", "squeeze", "(", ")", "*", "255", "\n", "return", "pnccs_img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.cpncc_v2": [[207, 221], ["numpy.zeros", "range", "len", "render.ncc", "render.crender_colors", "np.zeros.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.ncc", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.crender_colors"], ["", "def", "cpncc_v2", "(", "img", ",", "vertices_lst", ",", "tri", ")", ":", "\n", "    ", "\"\"\"cython version for PNCC render\"\"\"", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "c", "=", "3", "\n", "\n", "pnccs_img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "vertices_lst", ")", ")", ":", "\n", "        ", "vertices", "=", "vertices_lst", "[", "i", "]", "\n", "ncc_vertices", "=", "ncc", "(", "vertices", ")", "\n", "pncc_img", "=", "crender_colors", "(", "vertices", ",", "tri", ",", "ncc_vertices", ",", "h", ",", "w", ",", "c", ")", "\n", "pnccs_img", "[", "pncc_img", ">", "0", "]", "=", "pncc_img", "[", "pncc_img", ">", "0", "]", "\n", "\n", "", "pnccs_img", "=", "pnccs_img", ".", "squeeze", "(", ")", "*", "255", "\n", "return", "pnccs_img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.render.main": [[223, 225], ["None"], "function", ["None"], ["", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.get_suffix": [[12, 18], ["filename.rfind"], "function", ["None"], ["def", "get_suffix", "(", "filename", ")", ":", "\n", "    ", "\"\"\"a.jpg -> jpg\"\"\"", "\n", "pos", "=", "filename", ".", "rfind", "(", "'.'", ")", "\n", "if", "pos", "==", "-", "1", ":", "\n", "        ", "return", "''", "\n", "", "return", "filename", "[", "pos", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img": [[20, 51], ["int", "len", "numpy.zeros", "numpy.zeros", "round"], "function", ["None"], ["", "def", "crop_img", "(", "img", ",", "roi_box", ")", ":", "\n", "    ", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "sx", ",", "sy", ",", "ex", ",", "ey", "=", "[", "int", "(", "round", "(", "_", ")", ")", "for", "_", "in", "roi_box", "]", "\n", "dh", ",", "dw", "=", "ey", "-", "sy", ",", "ex", "-", "sx", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "        ", "res", "=", "np", ".", "zeros", "(", "(", "dh", ",", "dw", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "np", ".", "zeros", "(", "(", "dh", ",", "dw", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "if", "sx", "<", "0", ":", "\n", "        ", "sx", ",", "dsx", "=", "0", ",", "-", "sx", "\n", "", "else", ":", "\n", "        ", "dsx", "=", "0", "\n", "\n", "", "if", "ex", ">", "w", ":", "\n", "        ", "ex", ",", "dex", "=", "w", ",", "dw", "-", "(", "ex", "-", "w", ")", "\n", "", "else", ":", "\n", "        ", "dex", "=", "dw", "\n", "\n", "", "if", "sy", "<", "0", ":", "\n", "        ", "sy", ",", "dsy", "=", "0", ",", "-", "sy", "\n", "", "else", ":", "\n", "        ", "dsy", "=", "0", "\n", "\n", "", "if", "ey", ">", "h", ":", "\n", "        ", "ey", ",", "dey", "=", "h", ",", "dh", "-", "(", "ey", "-", "h", ")", "\n", "", "else", ":", "\n", "        ", "dey", "=", "dh", "\n", "\n", "", "res", "[", "dsy", ":", "dey", ",", "dsx", ":", "dex", "]", "=", "img", "[", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.calc_hypotenuse": [[53, 60], ["math.sqrt", "min", "min", "max", "max", "max"], "function", ["None"], ["", "def", "calc_hypotenuse", "(", "pts", ")", ":", "\n", "    ", "bbox", "=", "[", "min", "(", "pts", "[", "0", ",", ":", "]", ")", ",", "min", "(", "pts", "[", "1", ",", ":", "]", ")", ",", "max", "(", "pts", "[", "0", ",", ":", "]", ")", ",", "max", "(", "pts", "[", "1", ",", ":", "]", ")", "]", "\n", "center", "=", "[", "(", "bbox", "[", "0", "]", "+", "bbox", "[", "2", "]", ")", "/", "2", ",", "(", "bbox", "[", "1", "]", "+", "bbox", "[", "3", "]", ")", "/", "2", "]", "\n", "radius", "=", "max", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ",", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "/", "2", "\n", "bbox", "=", "[", "center", "[", "0", "]", "-", "radius", ",", "center", "[", "1", "]", "-", "radius", ",", "center", "[", "0", "]", "+", "radius", ",", "center", "[", "1", "]", "+", "radius", "]", "\n", "llength", "=", "sqrt", "(", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "**", "2", "+", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "**", "2", ")", "\n", "return", "llength", "/", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_landmark": [[62, 80], ["math.sqrt", "min", "min", "max", "max", "max"], "function", ["None"], ["", "def", "parse_roi_box_from_landmark", "(", "pts", ")", ":", "\n", "    ", "\"\"\"calc roi box from landmark\"\"\"", "\n", "bbox", "=", "[", "min", "(", "pts", "[", "0", ",", ":", "]", ")", ",", "min", "(", "pts", "[", "1", ",", ":", "]", ")", ",", "max", "(", "pts", "[", "0", ",", ":", "]", ")", ",", "max", "(", "pts", "[", "1", ",", ":", "]", ")", "]", "\n", "center", "=", "[", "(", "bbox", "[", "0", "]", "+", "bbox", "[", "2", "]", ")", "/", "2", ",", "(", "bbox", "[", "1", "]", "+", "bbox", "[", "3", "]", ")", "/", "2", "]", "\n", "radius", "=", "max", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ",", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "/", "2", "\n", "bbox", "=", "[", "center", "[", "0", "]", "-", "radius", ",", "center", "[", "1", "]", "-", "radius", ",", "center", "[", "0", "]", "+", "radius", ",", "center", "[", "1", "]", "+", "radius", "]", "\n", "\n", "llength", "=", "sqrt", "(", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "**", "2", "+", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "**", "2", ")", "\n", "center_x", "=", "(", "bbox", "[", "2", "]", "+", "bbox", "[", "0", "]", ")", "/", "2", "\n", "center_y", "=", "(", "bbox", "[", "3", "]", "+", "bbox", "[", "1", "]", ")", "/", "2", "\n", "\n", "roi_box", "=", "[", "0", "]", "*", "4", "\n", "roi_box", "[", "0", "]", "=", "center_x", "-", "llength", "/", "2", "\n", "roi_box", "[", "1", "]", "=", "center_y", "-", "llength", "/", "2", "\n", "roi_box", "[", "2", "]", "=", "roi_box", "[", "0", "]", "+", "llength", "\n", "roi_box", "[", "3", "]", "=", "roi_box", "[", "1", "]", "+", "llength", "\n", "\n", "return", "roi_box", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_bbox": [[82, 94], ["int"], "function", ["None"], ["", "def", "parse_roi_box_from_bbox", "(", "bbox", ")", ":", "\n", "    ", "left", ",", "top", ",", "right", ",", "bottom", "=", "bbox", "\n", "old_size", "=", "(", "right", "-", "left", "+", "bottom", "-", "top", ")", "/", "2", "\n", "center_x", "=", "right", "-", "(", "right", "-", "left", ")", "/", "2.0", "\n", "center_y", "=", "bottom", "-", "(", "bottom", "-", "top", ")", "/", "2.0", "+", "old_size", "*", "0.14", "\n", "size", "=", "int", "(", "old_size", "*", "1.58", ")", "\n", "roi_box", "=", "[", "0", "]", "*", "4", "\n", "roi_box", "[", "0", "]", "=", "center_x", "-", "size", "/", "2", "\n", "roi_box", "[", "1", "]", "=", "center_y", "-", "size", "/", "2", "\n", "roi_box", "[", "2", "]", "=", "roi_box", "[", "0", "]", "+", "size", "\n", "roi_box", "[", "3", "]", "=", "roi_box", "[", "1", "]", "+", "size", "\n", "return", "roi_box", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.dump_to_ply": [[96, 120], ["header.format.format", "print", "open", "f.write", "range", "range", "f.write", "f.write"], "function", ["None"], ["", "def", "dump_to_ply", "(", "vertex", ",", "tri", ",", "wfp", ")", ":", "\n", "    ", "header", "=", "\"\"\"ply\n    format ascii 1.0\n    element vertex {}\n    property float x\n    property float y\n    property float z\n    element face {}\n    property list uchar int vertex_indices\n    end_header\"\"\"", "\n", "\n", "n_vertex", "=", "vertex", ".", "shape", "[", "1", "]", "\n", "n_face", "=", "tri", ".", "shape", "[", "1", "]", "\n", "header", "=", "header", ".", "format", "(", "n_vertex", ",", "n_face", ")", "\n", "\n", "with", "open", "(", "wfp", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "header", "+", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "n_vertex", ")", ":", "\n", "            ", "x", ",", "y", ",", "z", "=", "vertex", "[", ":", ",", "i", "]", "\n", "f", ".", "write", "(", "'{:.4f} {:.4f} {:.4f}\\n'", ".", "format", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "", "for", "i", "in", "range", "(", "n_face", ")", ":", "\n", "            ", "idx1", ",", "idx2", ",", "idx3", "=", "tri", "[", ":", ",", "i", "]", "\n", "f", ".", "write", "(", "'3 {} {} {}\\n'", ".", "format", "(", "idx1", "-", "1", ",", "idx2", "-", "1", ",", "idx3", "-", "1", ")", ")", "\n", "", "", "print", "(", "'Dump tp {}'", ".", "format", "(", "wfp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.dump_vertex": [[122, 125], ["scipy.savemat", "print"], "function", ["None"], ["", "def", "dump_vertex", "(", "vertex", ",", "wfp", ")", ":", "\n", "    ", "sio", ".", "savemat", "(", "wfp", ",", "{", "'vertex'", ":", "vertex", "}", ")", "\n", "print", "(", "'Dump to {}'", ".", "format", "(", "wfp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference._predict_vertices": [[127, 139], ["ddfa.reconstruct_vertex"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.ddfa.reconstruct_vertex"], ["", "def", "_predict_vertices", "(", "param", ",", "roi_bbox", ",", "dense", ",", "transform", "=", "True", ")", ":", "\n", "    ", "vertex", "=", "reconstruct_vertex", "(", "param", ",", "dense", "=", "dense", ")", "\n", "sx", ",", "sy", ",", "ex", ",", "ey", "=", "roi_bbox", "\n", "scale_x", "=", "(", "ex", "-", "sx", ")", "/", "120", "\n", "scale_y", "=", "(", "ey", "-", "sy", ")", "/", "120", "\n", "vertex", "[", "0", ",", ":", "]", "=", "vertex", "[", "0", ",", ":", "]", "*", "scale_x", "+", "sx", "\n", "vertex", "[", "1", ",", ":", "]", "=", "vertex", "[", "1", ",", ":", "]", "*", "scale_y", "+", "sy", "\n", "\n", "s", "=", "(", "scale_x", "+", "scale_y", ")", "/", "2", "\n", "vertex", "[", "2", ",", ":", "]", "*=", "s", "\n", "\n", "return", "vertex", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts": [[141, 143], ["inference._predict_vertices"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference._predict_vertices"], ["", "def", "predict_68pts", "(", "param", ",", "roi_box", ")", ":", "\n", "    ", "return", "_predict_vertices", "(", "param", ",", "roi_box", ",", "dense", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_dense": [[145, 147], ["inference._predict_vertices"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference._predict_vertices"], ["", "def", "predict_dense", "(", "param", ",", "roi_box", ")", ":", "\n", "    ", "return", "_predict_vertices", "(", "param", ",", "roi_box", ",", "dense", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.draw_landmarks": [[149, 193], ["matplotlib.figure", "matplotlib.imshow", "matplotlib.subplots_adjust", "matplotlib.axis", "range", "len", "matplotlib.savefig", "print", "matplotlib.show", "type", "matplotlib.plot", "kwargs.get", "kwargs.get", "plot_close", "plot_close", "plot_close", "plot_close", "range", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "len"], "function", ["None"], ["", "def", "draw_landmarks", "(", "img", ",", "pts", ",", "style", "=", "'fancy'", ",", "wfp", "=", "None", ",", "show_flg", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Draw landmarks using matplotlib\"\"\"", "\n", "height", ",", "width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "height", "/", "width", "*", "12", ")", ")", "\n", "plt", ".", "imshow", "(", "img", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "plt", ".", "subplots_adjust", "(", "left", "=", "0", ",", "right", "=", "1", ",", "top", "=", "1", ",", "bottom", "=", "0", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "if", "not", "type", "(", "pts", ")", "in", "[", "tuple", ",", "list", "]", ":", "\n", "        ", "pts", "=", "[", "pts", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "pts", ")", ")", ":", "\n", "        ", "if", "style", "==", "'simple'", ":", "\n", "            ", "plt", ".", "plot", "(", "pts", "[", "i", "]", "[", "0", ",", ":", "]", ",", "pts", "[", "i", "]", "[", "1", ",", ":", "]", ",", "'o'", ",", "markersize", "=", "4", ",", "color", "=", "'g'", ")", "\n", "\n", "", "elif", "style", "==", "'fancy'", ":", "\n", "            ", "alpha", "=", "0.8", "\n", "markersize", "=", "4", "\n", "lw", "=", "1.5", "\n", "color", "=", "kwargs", ".", "get", "(", "'color'", ",", "'w'", ")", "\n", "markeredgecolor", "=", "kwargs", ".", "get", "(", "'markeredgecolor'", ",", "'black'", ")", "\n", "\n", "nums", "=", "[", "0", ",", "17", ",", "22", ",", "27", ",", "31", ",", "36", ",", "42", ",", "48", ",", "60", ",", "68", "]", "\n", "\n", "# close eyes and mouths", "\n", "plot_close", "=", "lambda", "i1", ",", "i2", ":", "plt", ".", "plot", "(", "[", "pts", "[", "i", "]", "[", "0", ",", "i1", "]", ",", "pts", "[", "i", "]", "[", "0", ",", "i2", "]", "]", ",", "[", "pts", "[", "i", "]", "[", "1", ",", "i1", "]", ",", "pts", "[", "i", "]", "[", "1", ",", "i2", "]", "]", ",", "\n", "color", "=", "color", ",", "lw", "=", "lw", ",", "alpha", "=", "alpha", "-", "0.1", ")", "\n", "plot_close", "(", "41", ",", "36", ")", "\n", "plot_close", "(", "47", ",", "42", ")", "\n", "plot_close", "(", "59", ",", "48", ")", "\n", "plot_close", "(", "67", ",", "60", ")", "\n", "\n", "for", "ind", "in", "range", "(", "len", "(", "nums", ")", "-", "1", ")", ":", "\n", "                ", "l", ",", "r", "=", "nums", "[", "ind", "]", ",", "nums", "[", "ind", "+", "1", "]", "\n", "plt", ".", "plot", "(", "pts", "[", "i", "]", "[", "0", ",", "l", ":", "r", "]", ",", "pts", "[", "i", "]", "[", "1", ",", "l", ":", "r", "]", ",", "color", "=", "color", ",", "lw", "=", "lw", ",", "alpha", "=", "alpha", "-", "0.1", ")", "\n", "\n", "plt", ".", "plot", "(", "pts", "[", "i", "]", "[", "0", ",", "l", ":", "r", "]", ",", "pts", "[", "i", "]", "[", "1", ",", "l", ":", "r", "]", ",", "marker", "=", "'o'", ",", "linestyle", "=", "'None'", ",", "markersize", "=", "markersize", ",", "\n", "color", "=", "color", ",", "\n", "markeredgecolor", "=", "markeredgecolor", ",", "alpha", "=", "alpha", ")", "\n", "\n", "", "", "", "if", "wfp", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "wfp", ",", "dpi", "=", "200", ")", "\n", "print", "(", "'Save visualization result to {}'", ".", "format", "(", "wfp", ")", ")", "\n", "", "if", "show_flg", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.get_colors": [[195, 203], ["numpy.minimum", "numpy.minimum", "numpy.round().astype", "numpy.maximum", "numpy.maximum", "numpy.round"], "function", ["None"], ["", "", "def", "get_colors", "(", "image", ",", "vertices", ")", ":", "\n", "    ", "[", "h", ",", "w", ",", "_", "]", "=", "image", ".", "shape", "\n", "vertices", "[", "0", ",", ":", "]", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "vertices", "[", "0", ",", ":", "]", ",", "0", ")", ",", "w", "-", "1", ")", "# x", "\n", "vertices", "[", "1", ",", ":", "]", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "vertices", "[", "1", ",", ":", "]", ",", "0", ")", ",", "h", "-", "1", ")", "# y", "\n", "ind", "=", "np", ".", "round", "(", "vertices", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "colors", "=", "image", "[", "ind", "[", "1", ",", ":", "]", ",", "ind", "[", "0", ",", ":", "]", ",", ":", "]", "# n x 3", "\n", "\n", "return", "colors", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.write_obj_with_colors": [[205, 223], ["triangles.copy.copy", "open", "range", "range", "obj_name.split", "f.write", "f.write"], "function", ["None"], ["", "def", "write_obj_with_colors", "(", "obj_name", ",", "vertices", ",", "triangles", ",", "colors", ")", ":", "\n", "    ", "triangles", "=", "triangles", ".", "copy", "(", ")", "# meshlab start with 1", "\n", "\n", "if", "obj_name", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "!=", "'obj'", ":", "\n", "        ", "obj_name", "=", "obj_name", "+", "'.obj'", "\n", "\n", "# write obj", "\n", "", "with", "open", "(", "obj_name", ",", "'w'", ")", "as", "f", ":", "\n", "# write vertices & colors", "\n", "        ", "for", "i", "in", "range", "(", "vertices", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "s", "=", "'v {:.4f} {:.4f} {:.4f} {} {} {}\\n'", ".", "format", "(", "vertices", "[", "1", ",", "i", "]", ",", "vertices", "[", "0", ",", "i", "]", ",", "vertices", "[", "2", ",", "i", "]", ",", "colors", "[", "i", ",", "2", "]", ",", "\n", "colors", "[", "i", ",", "1", "]", ",", "colors", "[", "i", ",", "0", "]", ")", "\n", "f", ".", "write", "(", "s", ")", "\n", "\n", "# write f: ver ind/ uv ind", "\n", "", "for", "i", "in", "range", "(", "triangles", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "s", "=", "'f {} {} {}\\n'", ".", "format", "(", "triangles", "[", "0", ",", "i", "]", ",", "triangles", "[", "1", ",", "i", "]", ",", "triangles", "[", "2", ",", "i", "]", ")", "\n", "f", ".", "write", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.main": [[225, 227], ["None"], "function", ["None"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.parse_pose": [[13, 23], ["param[].reshape", "estimate_pose.P2sRt", "numpy.concatenate", "estimate_pose.matrix2angle", "t3d.reshape"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.P2sRt", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.matrix2angle"], ["def", "parse_pose", "(", "param", ")", ":", "\n", "    ", "param", "=", "param", "*", "param_std", "+", "param_mean", "\n", "Ps", "=", "param", "[", ":", "12", "]", ".", "reshape", "(", "3", ",", "-", "1", ")", "# camera matrix", "\n", "# R = P[:, :3]", "\n", "s", ",", "R", ",", "t3d", "=", "P2sRt", "(", "Ps", ")", "\n", "P", "=", "np", ".", "concatenate", "(", "(", "R", ",", "t3d", ".", "reshape", "(", "3", ",", "-", "1", ")", ")", ",", "axis", "=", "1", ")", "# without scale", "\n", "# P = Ps / s", "\n", "pose", "=", "matrix2angle", "(", "R", ")", "# yaw, pitch, roll", "\n", "# offset = p_[:, -1].reshape(3, 1)", "\n", "return", "P", ",", "pose", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.matrix2angle": [[25, 51], ["math.asin", "math.atan2", "math.atan2", "math.cos", "math.cos", "math.cos", "math.cos", "math.atan2", "math.atan2"], "function", ["None"], ["", "def", "matrix2angle", "(", "R", ")", ":", "\n", "    ", "''' compute three Euler angles from a Rotation Matrix. Ref: http://www.gregslabaugh.net/publications/euler.pdf\n    Args:\n        R: (3,3). rotation matrix\n    Returns:\n        x: yaw\n        y: pitch\n        z: roll\n    '''", "\n", "# assert(isRotationMatrix(R))", "\n", "\n", "if", "R", "[", "2", ",", "0", "]", "!=", "1", "or", "R", "[", "2", ",", "0", "]", "!=", "-", "1", ":", "\n", "        ", "x", "=", "asin", "(", "R", "[", "2", ",", "0", "]", ")", "\n", "y", "=", "atan2", "(", "R", "[", "2", ",", "1", "]", "/", "cos", "(", "x", ")", ",", "R", "[", "2", ",", "2", "]", "/", "cos", "(", "x", ")", ")", "\n", "z", "=", "atan2", "(", "R", "[", "1", ",", "0", "]", "/", "cos", "(", "x", ")", ",", "R", "[", "0", ",", "0", "]", "/", "cos", "(", "x", ")", ")", "\n", "\n", "", "else", ":", "# Gimbal lock", "\n", "        ", "z", "=", "0", "# can be anything", "\n", "if", "R", "[", "2", ",", "0", "]", "==", "-", "1", ":", "\n", "            ", "x", "=", "np", ".", "pi", "/", "2", "\n", "y", "=", "z", "+", "atan2", "(", "R", "[", "0", ",", "1", "]", ",", "R", "[", "0", ",", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "-", "np", ".", "pi", "/", "2", "\n", "y", "=", "-", "z", "+", "atan2", "(", "-", "R", "[", "0", ",", "1", "]", ",", "-", "R", "[", "0", ",", "2", "]", ")", "\n", "\n", "", "", "return", "x", ",", "y", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.P2sRt": [[53, 72], ["numpy.cross", "numpy.concatenate", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "P2sRt", "(", "P", ")", ":", "\n", "    ", "''' decompositing camera matrix P.\n    Args:\n        P: (3, 4). Affine Camera Matrix.\n    Returns:\n        s: scale factor.\n        R: (3, 3). rotation matrix.\n        t2d: (2,). 2d translation.\n    '''", "\n", "t3d", "=", "P", "[", ":", ",", "3", "]", "\n", "R1", "=", "P", "[", "0", ":", "1", ",", ":", "3", "]", "\n", "R2", "=", "P", "[", "1", ":", "2", ",", ":", "3", "]", "\n", "s", "=", "(", "np", ".", "linalg", ".", "norm", "(", "R1", ")", "+", "np", ".", "linalg", ".", "norm", "(", "R2", ")", ")", "/", "2.0", "\n", "r1", "=", "R1", "/", "np", ".", "linalg", ".", "norm", "(", "R1", ")", "\n", "r2", "=", "R2", "/", "np", ".", "linalg", ".", "norm", "(", "R2", ")", "\n", "r3", "=", "np", ".", "cross", "(", "r1", ",", "r2", ")", "\n", "\n", "R", "=", "np", ".", "concatenate", "(", "(", "r1", ",", "r2", ",", "r3", ")", ",", "0", ")", "\n", "return", "s", ",", "R", ",", "t3d", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.main": [[74, 76], ["None"], "function", ["None"], ["", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.draw_face.drawMesh": [[29, 51], ["shape[].astype", "shape[].astype", "shape[].astype", "cv2.line", "cv2.line", "cv2.line", "cv2.line", "cv2.line", "cv2.line"], "function", ["None"], ["def", "drawMesh", "(", "img", ",", "shape", ",", "mesh", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", ":", "\n", "    ", "\"\"\"\n    \u7ed8\u5236\u4e8c\u7ef4\u4eba\u8138Mesh\n    :param img:\n    :param shape: 2D\u4eba\u8138\u9876\u70b9\n    :param mesh: \u4e09\u89d2\u5212\u5206\u4e0b\u6807\n    :param color:\n    :return:\n    \"\"\"", "\n", "i", "=", "0", "\n", "for", "triangle", "in", "mesh", ":", "\n", "        ", "if", "i", "==", "6", ":", "\n", "            ", "i", "=", "0", "\n", "point1", "=", "shape", "[", "triangle", "[", "0", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "point2", "=", "shape", "[", "triangle", "[", "1", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "point3", "=", "shape", "[", "triangle", "[", "2", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point1", "[", "0", "]", ",", "point1", "[", "1", "]", ")", ",", "(", "point2", "[", "0", "]", ",", "point2", "[", "1", "]", ")", ",", "color", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point2", "[", "0", "]", ",", "point2", "[", "1", "]", ")", ",", "(", "point3", "[", "0", "]", ",", "point3", "[", "1", "]", ")", ",", "color", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point3", "[", "0", "]", ",", "point3", "[", "1", "]", ")", ",", "(", "point1", "[", "0", "]", ",", "point1", "[", "1", "]", ")", ",", "color", ",", "1", ")", "\n", "", "i", "=", "i", "+", "1", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.draw_face.triDelaunay": [[52, 59], ["scipy.spatial.Delaunay", "matplotlib.figure", "plt.figure.add_subplot", "fig.add_subplot.plot_trisurf", "matplotlib.show", "scipy.savemat", "numpy.array"], "function", ["None"], ["", "def", "triDelaunay", "(", "pts68", ")", ":", "\n", "    ", "tri", "=", "Delaunay", "(", "np", ".", "array", "(", "[", "pts68", "[", "0", "]", ",", "pts68", "[", "1", "]", "]", ")", ".", "T", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ",", "projection", "=", "'3d'", ")", "\n", "ax", ".", "plot_trisurf", "(", "pts68", "[", "0", "]", ",", "pts68", "[", "1", "]", ",", "pts68", "[", "2", "]", ",", "triangles", "=", "tri", ".", "simplices", ",", "cmap", "=", "plt", ".", "cm", ".", "Spectral", ")", "\n", "plt", ".", "show", "(", ")", "\n", "scio", ".", "savemat", "(", "\"./visualize/pats68_tri.mat\"", ",", "{", "\"tri\"", ":", "tri", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.draw_face.getFaceTextureCoords": [[60, 95], ["model.cuda.state_dict", "checkpoint.keys", "model.cuda.load_state_dict", "model.cuda.cuda", "model.cuda.eval", "dlib.get_frontal_face_detector", "torchvision.Compose", "dlib.get_frontal_face_detector.", "torch.load", "torch.load", "getattr", "utils.inference.parse_roi_box_from_bbox", "utils.inference.crop_img", "cv2.resize", "cv2.resize", "transforms.Compose.unsqueeze", "utils.inference.predict_68pts", "utils.ddfa.ToTensorGjz", "utils.ddfa.NormalizeGjz", "rect.left", "rect.top", "rect.right", "rect.bottom", "torch.no_grad", "torch.no_grad", "input.cuda.cuda", "model.cuda.", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten().astype", "k.replace", "transforms.Compose.", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu", "param.squeeze().cpu().numpy().flatten().astype.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_bbox", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts"], ["", "def", "getFaceTextureCoords", "(", "textImag", ")", ":", "\n", "    ", "checkpoint_fp", "=", "'models/MobDenseNet.pth.tar'", "\n", "arch", "=", "'densemobilenetv4_19'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_fp", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "[", "'state_dict'", "]", "\n", "model", "=", "getattr", "(", "MobDenseNet", ",", "arch", ")", "(", "num_classes", "=", "62", ")", "# 62 = 12(pose) + 40(shape) +10(expression)", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# because the model is trained by multiple gpus, prefix module should be removed", "\n", "for", "k", "in", "checkpoint", ".", "keys", "(", ")", ":", "\n", "        ", "model_dict", "[", "k", ".", "replace", "(", "'module.'", ",", "''", ")", "]", "=", "checkpoint", "[", "k", "]", "\n", "", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "face_detector", "=", "dlib", ".", "get_frontal_face_detector", "(", ")", "\n", "# 3. forward", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "ToTensorGjz", "(", ")", ",", "NormalizeGjz", "(", "mean", "=", "127.5", ",", "std", "=", "128", ")", "]", ")", "\n", "img_ori", "=", "textImag", "\n", "rects", "=", "face_detector", "(", "img_ori", ",", "1", ")", "\n", "for", "rect", "in", "rects", ":", "\n", "# - use detected face bbox", "\n", "        ", "bbox", "=", "[", "rect", ".", "left", "(", ")", ",", "rect", ".", "top", "(", ")", ",", "rect", ".", "right", "(", ")", ",", "rect", ".", "bottom", "(", ")", "]", "\n", "roi_box", "=", "parse_roi_box_from_bbox", "(", "bbox", ")", "\n", "img", "=", "crop_img", "(", "img_ori", ",", "roi_box", ")", "\n", "\n", "# forward: one step", "\n", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "STD_SIZE", ",", "STD_SIZE", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "input", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "param", "=", "model", "(", "input", ")", "\n", "param", "=", "param", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# 68 pts", "\n", "", "pts68", "=", "predict_68pts", "(", "param", ",", "roi_box", ")", "\n", "return", "pts68", "[", "[", "0", ",", "1", "]", ",", ":", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.FaceRenderer.__init__": [[29, 48], ["pygame.init", "pygame.display.set_mode", "FaceRendering.setOrtho", "glEnable", "glEnable", "FaceRendering.addTexture", "FaceRendering.addTexture"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.setOrtho", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture"], ["    ", "def", "__init__", "(", "self", ",", "targetImg", ",", "textureImg", ",", "textureCoords", ",", "mesh", ")", ":", "\n", "        ", "self", ".", "h", "=", "targetImg", ".", "shape", "[", "0", "]", "\n", "self", ".", "w", "=", "targetImg", ".", "shape", "[", "1", "]", "\n", "\n", "pygame", ".", "init", "(", ")", "\n", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "w", ",", "self", ".", "h", ")", ",", "DOUBLEBUF", "|", "OPENGL", ")", "\n", "setOrtho", "(", "self", ".", "w", ",", "self", ".", "h", ")", "\n", "\n", "glEnable", "(", "GL_DEPTH_TEST", ")", "\n", "glEnable", "(", "GL_TEXTURE_2D", ")", "\n", "\n", "self", ".", "textureCoords", "=", "textureCoords", "\n", "self", ".", "textureCoords", "[", "0", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "1", "]", "\n", "self", ".", "textureCoords", "[", "1", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "faceTexture", "=", "addTexture", "(", "textureImg", ")", "\n", "self", ".", "renderTexture", "=", "addTexture", "(", "targetImg", ")", "\n", "\n", "self", ".", "mesh", "=", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.FaceRenderer.drawFace": [[49, 59], ["glBindTexture", "glBegin", "glEnd", "glTexCoord2fv", "glVertex3fv"], "methods", ["None"], ["", "def", "drawFace", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "self", ".", "faceTexture", ")", "\n", "\n", "glBegin", "(", "GL_TRIANGLES", ")", "\n", "for", "triangle", "in", "self", ".", "mesh", ":", "\n", "            ", "for", "vertex", "in", "triangle", ":", "\n", "                ", "glTexCoord2fv", "(", "self", ".", "textureCoords", "[", ":", ",", "vertex", "]", ")", "\n", "glVertex3fv", "(", "vertices", "[", ":", ",", "vertex", "]", ")", "\n", "\n", "", "", "glEnd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.FaceRenderer.render": [[60, 72], ["glClear", "FaceRendering.FaceRenderer.drawFace", "glReadPixels", "numpy.fromstring", "renderedImg.reshape.reshape.reshape", "range", "pygame.display.flip", "numpy.flipud"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.drawFace"], ["", "def", "render", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glClear", "(", "GL_COLOR_BUFFER_BIT", "|", "GL_DEPTH_BUFFER_BIT", ")", "\n", "self", ".", "drawFace", "(", "vertices", ")", "\n", "\n", "data", "=", "glReadPixels", "(", "0", ",", "0", ",", "self", ".", "w", ",", "self", ".", "h", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ")", "\n", "renderedImg", "=", "np", ".", "fromstring", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "renderedImg", "=", "renderedImg", ".", "reshape", "(", "(", "self", ".", "h", ",", "self", ".", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "renderedImg", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "renderedImg", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "flipud", "(", "renderedImg", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "\n", "", "pygame", ".", "display", ".", "flip", "(", ")", "\n", "return", "renderedImg", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.Draw3DFace.__init__": [[75, 84], ["pygame.init", "pygame.display.set_mode", "FaceRendering.setOrtho", "glEnable", "glEnable"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.setOrtho"], ["    ", "def", "__init__", "(", "self", ",", "targetImg", ",", "mesh", ")", ":", "\n", "        ", "self", ".", "h", "=", "targetImg", ".", "shape", "[", "0", "]", "\n", "self", ".", "w", "=", "targetImg", ".", "shape", "[", "1", "]", "\n", "pygame", ".", "init", "(", ")", "\n", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "w", ",", "self", ".", "h", ")", ",", "DOUBLEBUF", "|", "OPENGL", ")", "\n", "setOrtho", "(", "self", ".", "w", ",", "self", ".", "h", ")", "\n", "glEnable", "(", "GL_DEPTH_TEST", ")", "\n", "glEnable", "(", "GL_TEXTURE_2D", ")", "\n", "self", ".", "mesh", "=", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.Draw3DFace.drawFace": [[85, 93], ["glBegin", "glEnd", "glVertex3fv"], "methods", ["None"], ["", "def", "drawFace", "(", "self", ",", "vertices", ")", ":", "\n", "# glBindTexture(GL_TEXTURE_2D, self.faceTexture)", "\n", "        ", "glBegin", "(", "GL_TRIANGLES", ")", "\n", "for", "triangle", "in", "self", ".", "mesh", ":", "\n", "            ", "for", "vertex", "in", "triangle", ":", "\n", "# glTexCoord2fv(self.textureCoords[:, vertex])", "\n", "                ", "glVertex3fv", "(", "vertices", "[", ":", ",", "vertex", "]", ")", "\n", "", "", "glEnd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.Draw3DFace.render": [[94, 105], ["FaceRendering.Draw3DFace.drawFace", "glReadPixels", "numpy.fromstring", "renderedImg.reshape.reshape.reshape", "range", "pygame.display.flip", "numpy.flipud"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.drawFace"], ["", "def", "render", "(", "self", ",", "vertices", ")", ":", "\n", "# glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)", "\n", "        ", "self", ".", "drawFace", "(", "vertices", ")", "\n", "\n", "data", "=", "glReadPixels", "(", "0", ",", "0", ",", "self", ".", "w", ",", "self", ".", "h", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ")", "\n", "renderedImg", "=", "np", ".", "fromstring", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "renderedImg", "=", "renderedImg", ".", "reshape", "(", "(", "self", ".", "h", ",", "self", ".", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "renderedImg", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "renderedImg", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "flipud", "(", "renderedImg", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "", "pygame", ".", "display", ".", "flip", "(", ")", "\n", "return", "renderedImg", "", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.setOrtho": [[10, 15], ["glMatrixMode", "glLoadIdentity", "glOrtho", "glMatrixMode"], "function", ["None"], ["def", "setOrtho", "(", "w", ",", "h", ")", ":", "\n", "    ", "glMatrixMode", "(", "GL_PROJECTION", ")", "\n", "glLoadIdentity", "(", ")", "\n", "glOrtho", "(", "0", ",", "w", ",", "h", ",", "0", ",", "-", "1000", ",", "1000", ")", "\n", "glMatrixMode", "(", "GL_MODELVIEW", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.FaceRendering.addTexture": [[16, 27], ["glGenTextures", "glBindTexture", "glPixelStorei", "glTexImage2D", "glTexParameterf", "glTexParameterf", "glTexEnvf"], "function", ["None"], ["", "def", "addTexture", "(", "img", ")", ":", "\n", "    ", "textureId", "=", "glGenTextures", "(", "1", ")", "\n", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "textureId", ")", "\n", "glPixelStorei", "(", "GL_UNPACK_ALIGNMENT", ",", "1", ")", "\n", "glTexImage2D", "(", "GL_TEXTURE_2D", ",", "0", ",", "GL_RGB", ",", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ",", "0", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ",", "img", ")", "\n", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MAG_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MIN_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexEnvf", "(", "GL_TEXTURE_ENV", ",", "GL_TEXTURE_ENV_MODE", ",", "GL_DECAL", ")", "\n", "\n", "return", "textureId", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.params.make_abs_path": [[9, 11], ["os.join", "os.dirname", "os.realpath"], "function", ["None"], ["def", "make_abs_path", "(", "d", ")", ":", "\n", "    ", "return", "osp", ".", "join", "(", "osp", ".", "dirname", "(", "osp", ".", "realpath", "(", "__file__", ")", ")", ",", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.Drawing3DFace.Draw3DFace.__init__": [[30, 46], ["pygame.init", "pygame.display.set_mode", "Drawing3DFace.setOrtho", "glEnable", "glEnable", "Drawing3DFace.addTexture", "Drawing3DFace.addTexture"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.setOrtho", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture"], ["    ", "def", "__init__", "(", "self", ",", "targetImg", ",", "textureImg", ",", "textureCoords", ",", "mesh", ")", ":", "\n", "        ", "self", ".", "h", "=", "targetImg", ".", "shape", "[", "0", "]", "\n", "self", ".", "w", "=", "targetImg", ".", "shape", "[", "1", "]", "\n", "pygame", ".", "init", "(", ")", "\n", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "w", ",", "self", ".", "h", ")", ",", "DOUBLEBUF", "|", "OPENGL", ")", "\n", "setOrtho", "(", "self", ".", "w", ",", "self", ".", "h", ")", "\n", "glEnable", "(", "GL_DEPTH_TEST", ")", "\n", "glEnable", "(", "GL_TEXTURE_2D", ")", "\n", "\n", "self", ".", "textureCoords", "=", "textureCoords", "\n", "self", ".", "textureCoords", "[", "0", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "1", "]", "\n", "self", ".", "textureCoords", "[", "1", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "faceTexture", "=", "addTexture", "(", "textureImg", ")", "\n", "self", ".", "renderTexture", "=", "addTexture", "(", "targetImg", ")", "\n", "self", ".", "mesh", "=", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.Drawing3DFace.Draw3DFace.drawFace": [[47, 59], ["glBindTexture", "glBegin", "glEnd", "glTexCoord2fv", "glVertex3fv"], "methods", ["None"], ["", "def", "drawFace", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "self", ".", "faceTexture", ")", "\n", "glBegin", "(", "GL_TRIANGLES", ")", "\n", "i", "=", "0", "\n", "for", "triangle", "in", "self", ".", "mesh", ":", "\n", "# if i==20:", "\n", "#     i=0", "\n", "                ", "for", "vertex", "in", "triangle", ":", "\n", "                    ", "glTexCoord2fv", "(", "self", ".", "textureCoords", "[", ":", ",", "vertex", "]", ")", "\n", "glVertex3fv", "(", "vertices", "[", ":", ",", "vertex", "]", ")", "\n", "# i=i+1", "\n", "", "", "glEnd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.Drawing3DFace.Draw3DFace.render": [[60, 77], ["glClear", "Drawing3DFace.Draw3DFace.drawFace", "glReadPixels", "numpy.fromstring", "renderedImg.reshape.reshape.reshape", "range", "pygame.display.flip", "numpy.flipud"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.drawFace"], ["", "def", "render", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glClear", "(", "GL_COLOR_BUFFER_BIT", "|", "GL_DEPTH_BUFFER_BIT", ")", "\n", "self", ".", "drawFace", "(", "vertices", ")", "\n", "\n", "data", "=", "glReadPixels", "(", "0", ",", "0", ",", "self", ".", "w", ",", "self", ".", "h", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ")", "\n", "renderedImg", "=", "np", ".", "fromstring", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "renderedImg", "=", "renderedImg", ".", "reshape", "(", "(", "self", ".", "h", ",", "self", ".", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "renderedImg", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "renderedImg", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "flipud", "(", "renderedImg", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "", "pygame", ".", "display", ".", "flip", "(", ")", "\n", "# glutInit()", "\n", "# glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)", "\n", "# glutInitWindowSize(400, 400)", "\n", "# glutCreateWindow(b\"First\")", "\n", "# glutDisplayFunc(drawFunc\uff09", "\n", "# glutMainLoop()", "\n", "return", "renderedImg", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.Drawing3DFace.setOrtho": [[11, 16], ["glMatrixMode", "glLoadIdentity", "glOrtho", "glMatrixMode"], "function", ["None"], ["def", "setOrtho", "(", "w", ",", "h", ")", ":", "\n", "    ", "glMatrixMode", "(", "GL_PROJECTION", ")", "\n", "glLoadIdentity", "(", ")", "\n", "glOrtho", "(", "0", ",", "w", ",", "h", ",", "0", ",", "-", "1000", ",", "1000", ")", "\n", "glMatrixMode", "(", "GL_MODELVIEW", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.Drawing3DFace.addTexture": [[18, 29], ["glGenTextures", "glBindTexture", "glPixelStorei", "glTexImage2D", "glTexParameterf", "glTexParameterf", "glTexEnvf"], "function", ["None"], ["", "def", "addTexture", "(", "img", ")", ":", "\n", "    ", "textureId", "=", "glGenTextures", "(", "1", ")", "\n", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "textureId", ")", "\n", "glPixelStorei", "(", "GL_UNPACK_ALIGNMENT", ",", "1", ")", "\n", "glTexImage2D", "(", "GL_TEXTURE_2D", ",", "0", ",", "GL_RGB", ",", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ",", "0", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ",", "img", ")", "\n", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MAG_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MIN_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexEnvf", "(", "GL_TEXTURE_ENV", ",", "GL_TEXTURE_ENV_MODE", ",", "GL_DECAL", ")", "\n", "\n", "return", "textureId", "\n", "", "class", "Draw3DFace", ":", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.Model.residual": [[11, 16], ["r.flatten.flatten.flatten", "models.Model.fun"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["def", "residual", "(", "self", ",", "params", ",", "x", ",", "y", ")", ":", "\n", "        ", "r", "=", "y", "-", "self", ".", "fun", "(", "x", ",", "params", ")", "\n", "r", "=", "r", ".", "flatten", "(", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.Model.fun": [[18, 21], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "fun", "(", "self", ",", "x", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.Model.jacobian": [[23, 26], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "jacobian", "(", "self", ",", "params", ",", "x", ",", "y", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.Model.getExampleParameters": [[28, 31], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "getExampleParameters", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.Model.getInitialParameters": [[33, 36], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "getInitialParameters", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.__init__": [[40, 43], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "nBlendshapes", ")", ":", "\n", "        ", "self", ".", "nBlendshapes", "=", "nBlendshapes", "\n", "self", ".", "nParams", "+=", "nBlendshapes", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun": [[44, 64], ["cv2.Rodrigues", "numpy.sum", "numpy.dot"], "methods", ["None"], ["", "def", "fun", "(", "self", ",", "x", ",", "params", ")", ":", "\n", "#skalowanie", "\n", "        ", "s", "=", "params", "[", "0", "]", "\n", "#rotacja", "\n", "r", "=", "params", "[", "1", ":", "4", "]", "\n", "#przesuniecie (translacja)", "\n", "t", "=", "params", "[", "4", ":", "6", "]", "\n", "w", "=", "params", "[", "6", ":", "]", "\n", "\n", "mean3DShape", "=", "x", "[", "0", "]", "\n", "blendshapes", "=", "x", "[", "1", "]", "\n", "\n", "#macierz rotacji z wektora rotacji, wzor Rodriguesa", "\n", "R", "=", "cv2", ".", "Rodrigues", "(", "r", ")", "[", "0", "]", "\n", "P", "=", "R", "[", ":", "2", "]", "\n", "shape3D", "=", "mean3DShape", "+", "np", ".", "sum", "(", "w", "[", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "blendshapes", ",", "axis", "=", "0", ")", "\n", "\n", "projected", "=", "s", "*", "np", ".", "dot", "(", "P", ",", "shape3D", ")", "+", "t", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "return", "projected", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.jacobian": [[65, 104], ["numpy.zeros", "numpy.dot().flatten", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "cv2.Rodrigues", "numpy.sum", "numpy.dot", "numpy.dot().flatten", "models.OrthographicProjectionBlendshapes.fun", "models.OrthographicProjectionBlendshapes.fun", "models.OrthographicProjectionBlendshapes.fun", "models.OrthographicProjectionBlendshapes.fun", "models.OrthographicProjectionBlendshapes.fun", "models.OrthographicProjectionBlendshapes.fun", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["", "def", "jacobian", "(", "self", ",", "params", ",", "x", ",", "y", ")", ":", "\n", "        ", "s", "=", "params", "[", "0", "]", "\n", "r", "=", "params", "[", "1", ":", "4", "]", "\n", "t", "=", "params", "[", "4", ":", "6", "]", "\n", "w", "=", "params", "[", "6", ":", "]", "\n", "\n", "mean3DShape", "=", "x", "[", "0", "]", "\n", "blendshapes", "=", "x", "[", "1", "]", "\n", "\n", "R", "=", "cv2", ".", "Rodrigues", "(", "r", ")", "[", "0", "]", "\n", "P", "=", "R", "[", ":", "2", "]", "\n", "shape3D", "=", "mean3DShape", "+", "np", ".", "sum", "(", "w", "[", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "blendshapes", ",", "axis", "=", "0", ")", "\n", "\n", "nPoints", "=", "mean3DShape", ".", "shape", "[", "1", "]", "\n", "\n", "#nSamples * 2 poniewaz kazdy punkt ma dwa wymiary (x i y)", "\n", "jacobian", "=", "np", ".", "zeros", "(", "(", "nPoints", "*", "2", ",", "self", ".", "nParams", ")", ")", "\n", "\n", "jacobian", "[", ":", ",", "0", "]", "=", "np", ".", "dot", "(", "P", ",", "shape3D", ")", ".", "flatten", "(", ")", "\n", "\n", "stepSize", "=", "10e-4", "\n", "step", "=", "np", ".", "zeros", "(", "self", ".", "nParams", ")", "\n", "step", "[", "1", "]", "=", "stepSize", ";", "\n", "jacobian", "[", ":", ",", "1", "]", "=", "(", "(", "self", ".", "fun", "(", "x", ",", "params", "+", "step", ")", "-", "self", ".", "fun", "(", "x", ",", "params", ")", ")", "/", "stepSize", ")", ".", "flatten", "(", ")", "\n", "step", "=", "np", ".", "zeros", "(", "self", ".", "nParams", ")", "\n", "step", "[", "2", "]", "=", "stepSize", ";", "\n", "jacobian", "[", ":", ",", "2", "]", "=", "(", "(", "self", ".", "fun", "(", "x", ",", "params", "+", "step", ")", "-", "self", ".", "fun", "(", "x", ",", "params", ")", ")", "/", "stepSize", ")", ".", "flatten", "(", ")", "\n", "step", "=", "np", ".", "zeros", "(", "self", ".", "nParams", ")", "\n", "step", "[", "3", "]", "=", "stepSize", ";", "\n", "jacobian", "[", ":", ",", "3", "]", "=", "(", "(", "self", ".", "fun", "(", "x", ",", "params", "+", "step", ")", "-", "self", ".", "fun", "(", "x", ",", "params", ")", ")", "/", "stepSize", ")", ".", "flatten", "(", ")", "\n", "\n", "jacobian", "[", ":", "nPoints", ",", "4", "]", "=", "1", "\n", "jacobian", "[", "nPoints", ":", ",", "5", "]", "=", "1", "\n", "\n", "startIdx", "=", "self", ".", "nParams", "-", "self", ".", "nBlendshapes", "\n", "for", "i", "in", "range", "(", "self", ".", "nBlendshapes", ")", ":", "\n", "            ", "jacobian", "[", ":", ",", "i", "+", "startIdx", "]", "=", "s", "*", "np", ".", "dot", "(", "P", ",", "blendshapes", "[", "i", "]", ")", ".", "flatten", "(", ")", "\n", "\n", "", "return", "jacobian", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.getExampleParameters": [[106, 111], ["numpy.zeros"], "methods", ["None"], ["", "def", "getExampleParameters", "(", "self", ")", ":", "\n", "        ", "params", "=", "np", ".", "zeros", "(", "self", ".", "nParams", ")", "\n", "params", "[", "0", "]", "=", "1", "\n", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.getInitialParameters": [[112, 128], ["numpy.zeros", "numpy.mean", "numpy.mean", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.mean", "numpy.mean"], "methods", ["None"], ["", "def", "getInitialParameters", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "mean3DShape", "=", "x", ".", "T", "\n", "shape2D", "=", "y", ".", "T", "\n", "\n", "shape3DCentered", "=", "mean3DShape", "-", "np", ".", "mean", "(", "mean3DShape", ",", "axis", "=", "0", ")", "\n", "shape2DCentered", "=", "shape2D", "-", "np", ".", "mean", "(", "shape2D", ",", "axis", "=", "0", ")", "\n", "\n", "scale", "=", "np", ".", "linalg", ".", "norm", "(", "shape2DCentered", ")", "/", "np", ".", "linalg", ".", "norm", "(", "shape3DCentered", "[", ":", ",", ":", "2", "]", ")", "\n", "t", "=", "np", ".", "mean", "(", "shape2D", ",", "axis", "=", "0", ")", "-", "np", ".", "mean", "(", "mean3DShape", "[", ":", ",", ":", "2", "]", ",", "axis", "=", "0", ")", "\n", "\n", "params", "=", "np", ".", "zeros", "(", "self", ".", "nParams", ")", "\n", "params", "[", "0", "]", "=", "scale", "\n", "params", "[", "4", "]", "=", "t", "[", "0", "]", "\n", "params", "[", "5", "]", "=", "t", "[", "1", "]", "\n", "\n", "return", "params", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.R3FR_predictor.r3fa_landmark": [[17, 53], ["torchvision.Compose", "dlib.rectangle", "predictor().parts", "utils.inference.parse_roi_box_from_landmark", "utils.inference.crop_img", "cv2.resize", "transforms.Compose.unsqueeze", "utils.inference.predict_68pts", "pts_res.append", "utils.estimate_pose.parse_pose", "Ps.append", "int", "int", "int", "int", "numpy.array", "torch.no_grad", "input.cuda.cuda", "model", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten().astype", "utils.ddfa.ToTensorGjz", "utils.ddfa.NormalizeGjz", "predictor", "transforms.Compose.", "rect.left", "rect.top", "rect.right", "rect.bottom", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy().flatten", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu().numpy", "param.squeeze().cpu().numpy().flatten().astype.squeeze().cpu", "param.squeeze().cpu().numpy().flatten().astype.squeeze"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.parse_roi_box_from_landmark", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.crop_img", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.inference.predict_68pts", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.estimate_pose.parse_pose"], ["def", "r3fa_landmark", "(", "image", ",", "rect", ",", "model", ",", "predictor", ",", "imgScale", ")", ":", "\n", "\n", "    ", "transform", "=", "transforms", ".", "Compose", "(", "[", "ToTensorGjz", "(", ")", ",", "NormalizeGjz", "(", "mean", "=", "127.5", ",", "std", "=", "128", ")", "]", ")", "\n", "Ps", "=", "[", "]", "# Camera matrix collection", "\n", "pts_res", "=", "[", "]", "\n", "faceRectangle", "=", "rectangle", "(", "int", "(", "rect", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "top", "(", ")", "/", "imgScale", ")", ",", "int", "(", "rect", ".", "right", "(", ")", "/", "imgScale", ")", ",", "\n", "int", "(", "rect", ".", "bottom", "(", ")", "/", "imgScale", ")", ")", "\n", "\n", "# - use landmark for cropping", "\n", "pts", "=", "predictor", "(", "image", ",", "faceRectangle", ")", ".", "parts", "(", ")", "\n", "pts", "=", "np", ".", "array", "(", "[", "[", "pt", ".", "x", ",", "pt", ".", "y", "]", "for", "pt", "in", "pts", "]", ")", ".", "T", "\n", "roi_box", "=", "parse_roi_box_from_landmark", "(", "pts", ")", "\n", "#     # - use detected face bbox", "\n", "# bbox=[rects.left(), rects.top(), rects.right(), rects.bottom()]", "\n", "# roi_box=parse_roi_box_from_bbox(bbox)", "\n", "img", "=", "crop_img", "(", "image", ",", "roi_box", ")", "\n", "\n", "# forward: one step", "\n", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "STD_SIZE", ",", "STD_SIZE", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "input", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "param", "=", "model", "(", "input", ")", "\n", "param", "=", "param", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# 68 pts", "\n", "", "pts68", "=", "predict_68pts", "(", "param", ",", "roi_box", ")", "\n", "pts_res", ".", "append", "(", "pts68", ")", "\n", "P", ",", "pose", "=", "parse_pose", "(", "param", ")", "\n", "Ps", ".", "append", "(", "P", ")", "\n", "# # \u7ed8\u5236landmark", "\n", "# for indx in range(68):", "\n", "#     pos=(pts68[0, indx], pts68[1, indx])", "\n", "#     # pts.append(pos)", "\n", "#     cv2.circle(img, pos, 3, color=(255, 255, 255), thickness=-1)", "\n", "# img_ori=plot_pose_box(img, Ps, pts_res)", "\n", "return", "Ps", ",", "pts68", "[", "[", "0", ",", "1", "]", ",", ":", "]", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getNormal": [[8, 21], ["numpy.cross", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["def", "getNormal", "(", "triangle", ")", ":", "\n", "    ", "a", "=", "triangle", "[", ":", ",", "0", "]", "\n", "b", "=", "triangle", "[", ":", ",", "1", "]", "\n", "c", "=", "triangle", "[", ":", ",", "2", "]", "\n", "\n", "axisX", "=", "b", "-", "a", "\n", "axisX", "=", "axisX", "/", "np", ".", "linalg", ".", "norm", "(", "axisX", ")", "\n", "axisY", "=", "c", "-", "a", "\n", "axisY", "=", "axisY", "/", "np", ".", "linalg", ".", "norm", "(", "axisY", ")", "\n", "axisZ", "=", "np", ".", "cross", "(", "axisX", ",", "axisY", ")", "\n", "axisZ", "=", "axisZ", "/", "np", ".", "linalg", ".", "norm", "(", "axisZ", ")", "\n", "\n", "return", "axisZ", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.flipWinding": [[22, 24], ["None"], "function", ["None"], ["", "def", "flipWinding", "(", "triangle", ")", ":", "\n", "    ", "return", "[", "triangle", "[", "1", "]", ",", "triangle", "[", "0", "]", ",", "triangle", "[", "2", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.fixMeshWinding": [[25, 33], ["range", "utils_.getNormal", "utils_.flipWinding"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getNormal", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.flipWinding"], ["", "def", "fixMeshWinding", "(", "mesh", ",", "vertices", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "mesh", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "triangle", "=", "mesh", "[", "i", "]", "\n", "normal", "=", "getNormal", "(", "vertices", "[", ":", ",", "triangle", "]", ")", "\n", "if", "normal", "[", "2", "]", ">", "0", ":", "\n", "            ", "mesh", "[", "i", "]", "=", "flipWinding", "(", "triangle", ")", "\n", "\n", "", "", "return", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getShape3D": [[34, 51], ["cv2.Rodrigues", "numpy.sum", "numpy.dot"], "function", ["None"], ["", "def", "getShape3D", "(", "mean3DShape", ",", "blendshapes", ",", "params", ")", ":", "\n", "#skalowanie", "\n", "    ", "s", "=", "params", "[", "0", "]", "\n", "#rotacja", "\n", "r", "=", "params", "[", "1", ":", "4", "]", "\n", "#przesuniecie (translacja)", "\n", "t", "=", "params", "[", "4", ":", "6", "]", "\n", "w", "=", "params", "[", "6", ":", "]", "\n", "\n", "#macierz rotacji z wektora rotacji, wzor Rodriguesa", "\n", "R", "=", "cv2", ".", "Rodrigues", "(", "r", ")", "[", "0", "]", "\n", "shape3D", "=", "mean3DShape", "+", "np", ".", "sum", "(", "w", "[", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "blendshapes", ",", "axis", "=", "0", ")", "\n", "\n", "shape3D", "=", "s", "*", "np", ".", "dot", "(", "R", ",", "shape3D", ")", "\n", "shape3D", "[", ":", "2", ",", ":", "]", "=", "shape3D", "[", ":", "2", ",", ":", "]", "+", "t", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "return", "shape3D", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getMask": [[52, 54], ["numpy.zeros"], "function", ["None"], ["", "def", "getMask", "(", "renderedImg", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "renderedImg", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.load3DFaceModel": [[55, 65], ["numpy.load", "utils_.fixMeshWinding"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.fixMeshWinding"], ["", "def", "load3DFaceModel", "(", "filename", ")", ":", "\n", "    ", "faceModelFile", "=", "np", ".", "load", "(", "filename", ")", "\n", "mean3DShape", "=", "faceModelFile", "[", "\"mean3DShape\"", "]", "\n", "mesh", "=", "faceModelFile", "[", "\"mesh\"", "]", "\n", "idxs3D", "=", "faceModelFile", "[", "\"idxs3D\"", "]", "\n", "idxs2D", "=", "faceModelFile", "[", "\"idxs2D\"", "]", "\n", "blendshapes", "=", "faceModelFile", "[", "\"blendshapes\"", "]", "\n", "mesh", "=", "fixMeshWinding", "(", "mesh", ",", "mean3DShape", ")", "\n", "\n", "return", "mean3DShape", ",", "blendshapes", ",", "mesh", ",", "idxs3D", ",", "idxs2D", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getFaceKeypoints": [[66, 94], ["detector", "max", "cv2.resize", "len", "dlib.rectangle", "predictor", "numpy.array", "shapes2D.append", "float", "int", "int", "int", "int", "max", "int", "int", "det.left", "det.top", "det.right", "det.bottom", "predictor.parts"], "function", ["None"], ["", "def", "getFaceKeypoints", "(", "img", ",", "detector", ",", "model", ",", "predictor", ",", "maxImgSizeForDetection", "=", "640", ")", ":", "\n", "    ", "imgScale", "=", "1", "\n", "scaledImg", "=", "img", "\n", "if", "max", "(", "img", ".", "shape", ")", ">", "maxImgSizeForDetection", ":", "\n", "        ", "imgScale", "=", "maxImgSizeForDetection", "/", "float", "(", "max", "(", "img", ".", "shape", ")", ")", "\n", "scaledImg", "=", "cv2", ".", "resize", "(", "img", ",", "(", "int", "(", "img", ".", "shape", "[", "1", "]", "*", "imgScale", ")", ",", "int", "(", "img", ".", "shape", "[", "0", "]", "*", "imgScale", ")", ")", ")", "\n", "\n", "\n", "#detekcja twarzy", "\n", "", "dets", "=", "detector", "(", "scaledImg", ",", "1", ")", "\n", "\n", "if", "len", "(", "dets", ")", "==", "0", ":", "\n", "        ", "return", "None", "\n", "\n", "", "shapes2D", "=", "[", "]", "\n", "for", "det", "in", "dets", ":", "\n", "        ", "faceRectangle", "=", "rectangle", "(", "int", "(", "det", ".", "left", "(", ")", "/", "imgScale", ")", ",", "int", "(", "det", ".", "top", "(", ")", "/", "imgScale", ")", ",", "int", "(", "det", ".", "right", "(", ")", "/", "imgScale", ")", ",", "int", "(", "det", ".", "bottom", "(", ")", "/", "imgScale", ")", ")", "\n", "\n", "#detekcja punktow charakterystycznych twarzy", "\n", "dlibShape", "=", "predictor", "(", "img", ",", "faceRectangle", ")", "\n", "# Ps,dlibShape=R3FR_predictor.r3fa_landmark(img, faceRectangle,model,predictor,imgScale)", "\n", "# shape2D=dlibShape.T", "\n", "shape2D", "=", "np", ".", "array", "(", "[", "[", "p", ".", "x", ",", "p", ".", "y", "]", "for", "p", "in", "dlibShape", ".", "parts", "(", ")", "]", ")", "\n", "#transpozycja, zeby ksztalt byl 2 x n a nie n x 2, pozniej ulatwia to obliczenia", "\n", "shape2D", "=", "shape2D", ".", "T", "\n", "shapes2D", ".", "append", "(", "shape2D", ")", "\n", "\n", "", "return", "shapes2D", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getFaceTextureCoords": [[96, 106], ["models.OrthographicProjectionBlendshapes", "utils_.getFaceKeypoints", "models.OrthographicProjectionBlendshapes.getInitialParameters", "FaceSwap.GaussNewton", "models.OrthographicProjectionBlendshapes.fun"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.utils_.getFaceKeypoints", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.getInitialParameters", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.NonLinearLeastSquares.GaussNewton", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["", "def", "getFaceTextureCoords", "(", "img", ",", "mean3DShape", ",", "blendshapes", ",", "idxs2D", ",", "idxs3D", ",", "detector", ",", "model", ",", "predictor", ")", ":", "\n", "    ", "projectionModel", "=", "models", ".", "OrthographicProjectionBlendshapes", "(", "blendshapes", ".", "shape", "[", "0", "]", ")", "\n", "\n", "keypoints", "=", "getFaceKeypoints", "(", "img", ",", "detector", ",", "model", ",", "predictor", ")", "\n", "keypoints", "=", "keypoints", "[", "0", "]", "\n", "modelParams", "=", "projectionModel", ".", "getInitialParameters", "(", "mean3DShape", "[", ":", ",", "idxs3D", "]", ",", "keypoints", "[", ":", ",", "idxs2D", "]", ")", "\n", "modelParams", "=", "NonLinearLeastSquares", ".", "GaussNewton", "(", "modelParams", ",", "projectionModel", ".", "residual", ",", "projectionModel", ".", "jacobian", ",", "(", "[", "mean3DShape", "[", ":", ",", "idxs3D", "]", ",", "blendshapes", "[", ":", ",", ":", ",", "idxs3D", "]", "]", ",", "keypoints", "[", ":", ",", "idxs2D", "]", ")", ",", "verbose", "=", "0", ")", "\n", "textureCoords", "=", "projectionModel", ".", "fun", "(", "[", "mean3DShape", ",", "blendshapes", "]", ",", "modelParams", ")", "\n", "\n", "return", "textureCoords", "", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.__init__": [[29, 48], ["pygame.init", "pygame.display.set_mode", "FaceRendering.setOrtho", "glEnable", "glEnable", "FaceRendering.addTexture", "FaceRendering.addTexture"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.setOrtho", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture"], ["    ", "def", "__init__", "(", "self", ",", "targetImg", ",", "textureImg", ",", "textureCoords", ",", "mesh", ")", ":", "\n", "        ", "self", ".", "h", "=", "targetImg", ".", "shape", "[", "0", "]", "\n", "self", ".", "w", "=", "targetImg", ".", "shape", "[", "1", "]", "\n", "\n", "pygame", ".", "init", "(", ")", "\n", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "w", ",", "self", ".", "h", ")", ",", "DOUBLEBUF", "|", "OPENGL", ")", "\n", "setOrtho", "(", "self", ".", "w", ",", "self", ".", "h", ")", "\n", "\n", "glEnable", "(", "GL_DEPTH_TEST", ")", "\n", "glEnable", "(", "GL_TEXTURE_2D", ")", "\n", "\n", "self", ".", "textureCoords", "=", "textureCoords", "\n", "self", ".", "textureCoords", "[", "0", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "1", "]", "\n", "self", ".", "textureCoords", "[", "1", ",", ":", "]", "/=", "textureImg", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "faceTexture", "=", "addTexture", "(", "textureImg", ")", "\n", "self", ".", "renderTexture", "=", "addTexture", "(", "targetImg", ")", "\n", "\n", "self", ".", "mesh", "=", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.drawFace": [[49, 59], ["glBindTexture", "glBegin", "glEnd", "glTexCoord2fv", "glVertex3fv"], "methods", ["None"], ["", "def", "drawFace", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "self", ".", "faceTexture", ")", "\n", "\n", "glBegin", "(", "GL_TRIANGLES", ")", "\n", "for", "triangle", "in", "self", ".", "mesh", ":", "\n", "            ", "for", "vertex", "in", "triangle", ":", "\n", "                ", "glTexCoord2fv", "(", "self", ".", "textureCoords", "[", ":", ",", "vertex", "]", ")", "\n", "glVertex3fv", "(", "vertices", "[", ":", ",", "vertex", "]", ")", "\n", "\n", "", "", "glEnd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.render": [[60, 72], ["glClear", "FaceRendering.FaceRenderer.drawFace", "glReadPixels", "numpy.fromstring", "renderedImg.reshape.reshape.reshape", "range", "pygame.display.flip", "numpy.flipud"], "methods", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.FaceRenderer.drawFace"], ["", "def", "render", "(", "self", ",", "vertices", ")", ":", "\n", "        ", "glClear", "(", "GL_COLOR_BUFFER_BIT", "|", "GL_DEPTH_BUFFER_BIT", ")", "\n", "self", ".", "drawFace", "(", "vertices", ")", "\n", "\n", "data", "=", "glReadPixels", "(", "0", ",", "0", ",", "self", ".", "w", ",", "self", ".", "h", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ")", "\n", "renderedImg", "=", "np", ".", "fromstring", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "renderedImg", "=", "renderedImg", ".", "reshape", "(", "(", "self", ".", "h", ",", "self", ".", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "renderedImg", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "renderedImg", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "flipud", "(", "renderedImg", "[", ":", ",", ":", ",", "i", "]", ")", "\n", "\n", "", "pygame", ".", "display", ".", "flip", "(", ")", "\n", "return", "renderedImg", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.setOrtho": [[10, 15], ["glMatrixMode", "glLoadIdentity", "glOrtho", "glMatrixMode"], "function", ["None"], ["def", "setOrtho", "(", "w", ",", "h", ")", ":", "\n", "    ", "glMatrixMode", "(", "GL_PROJECTION", ")", "\n", "glLoadIdentity", "(", ")", "\n", "glOrtho", "(", "0", ",", "w", ",", "h", ",", "0", ",", "-", "1000", ",", "1000", ")", "\n", "glMatrixMode", "(", "GL_MODELVIEW", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.FaceRendering.addTexture": [[16, 27], ["glGenTextures", "glBindTexture", "glPixelStorei", "glTexImage2D", "glTexParameterf", "glTexParameterf", "glTexEnvf"], "function", ["None"], ["", "def", "addTexture", "(", "img", ")", ":", "\n", "    ", "textureId", "=", "glGenTextures", "(", "1", ")", "\n", "glBindTexture", "(", "GL_TEXTURE_2D", ",", "textureId", ")", "\n", "glPixelStorei", "(", "GL_UNPACK_ALIGNMENT", ",", "1", ")", "\n", "glTexImage2D", "(", "GL_TEXTURE_2D", ",", "0", ",", "GL_RGB", ",", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ",", "0", ",", "GL_BGR", ",", "GL_UNSIGNED_BYTE", ",", "img", ")", "\n", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MAG_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexParameterf", "(", "GL_TEXTURE_2D", ",", "GL_TEXTURE_MIN_FILTER", ",", "GL_NEAREST", ")", "\n", "glTexEnvf", "(", "GL_TEXTURE_ENV", ",", "GL_TEXTURE_ENV_MODE", ",", "GL_DECAL", ")", "\n", "\n", "return", "textureId", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.NonLinearLeastSquares.LineSearchFun": [[4, 7], ["fun", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["def", "LineSearchFun", "(", "alpha", ",", "x", ",", "d", ",", "fun", ",", "args", ")", ":", "\n", "    ", "r", "=", "fun", "(", "x", "+", "alpha", "*", "d", ",", "*", "args", ")", "\n", "return", "np", ".", "sum", "(", "r", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.NonLinearLeastSquares.GaussNewton": [[8, 43], ["numpy.array", "range", "fun", "numpy.sum", "funJack", "numpy.dot", "numpy.dot", "numpy.linalg.solve", "scipy.optimize.minimize_scalar", "print", "fun", "numpy.sum", "print", "print", "print", "abs", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["", "def", "GaussNewton", "(", "x0", ",", "fun", ",", "funJack", ",", "args", ",", "maxIter", "=", "10", ",", "eps", "=", "10e-7", ",", "verbose", "=", "1", ")", ":", "\n", "    ", "x", "=", "np", ".", "array", "(", "x0", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "oldCost", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "maxIter", ")", ":", "\n", "        ", "r", "=", "fun", "(", "x", ",", "*", "args", ")", "\n", "cost", "=", "np", ".", "sum", "(", "r", "**", "2", ")", "\n", "\n", "if", "verbose", ">", "0", ":", "\n", "            ", "print", "(", "\"Cost at iteration \"", "+", "str", "(", "i", ")", "+", "\": \"", "+", "str", "(", "cost", ")", ")", "\n", "\n", "", "if", "(", "cost", "<", "eps", "or", "abs", "(", "cost", "-", "oldCost", ")", "<", "eps", ")", ":", "\n", "            ", "break", "\n", "", "oldCost", "=", "cost", "\n", "\n", "J", "=", "funJack", "(", "x", ",", "*", "args", ")", "\n", "grad", "=", "np", ".", "dot", "(", "J", ".", "T", ",", "r", ")", "\n", "H", "=", "np", ".", "dot", "(", "J", ".", "T", ",", "J", ")", "\n", "direction", "=", "np", ".", "linalg", ".", "solve", "(", "H", ",", "grad", ")", "\n", "\n", "#optymalizacja dlugosci kroku", "\n", "lineSearchRes", "=", "optimize", ".", "minimize_scalar", "(", "LineSearchFun", ",", "args", "=", "(", "x", ",", "direction", ",", "fun", ",", "args", ")", ")", "\n", "#dlugosc kroku", "\n", "alpha", "=", "lineSearchRes", "[", "\"x\"", "]", "\n", "\n", "x", "=", "x", "+", "alpha", "*", "direction", "\n", "\n", "", "if", "verbose", ">", "0", ":", "\n", "        ", "print", "(", "\"Gauss Netwon finished after \"", "+", "str", "(", "i", "+", "1", ")", "+", "\" iterations\"", ")", "\n", "r", "=", "fun", "(", "x", ",", "*", "args", ")", "\n", "cost", "=", "np", ".", "sum", "(", "r", "**", "2", ")", "\n", "print", "(", "\"cost = \"", "+", "str", "(", "cost", ")", ")", "\n", "print", "(", "\"x = \"", "+", "str", "(", "x", ")", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.NonLinearLeastSquares.SteepestDescent": [[44, 80], ["numpy.array", "range", "fun", "numpy.sum", "funJack", "scipy.optimize.minimize_scalar", "print", "fun", "numpy.sum", "print", "print", "print", "numpy.dot", "abs", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun"], ["", "def", "SteepestDescent", "(", "x0", ",", "fun", ",", "funJack", ",", "args", ",", "maxIter", "=", "10", ",", "eps", "=", "10e-7", ",", "verbose", "=", "1", ")", ":", "\n", "    ", "x", "=", "np", ".", "array", "(", "x0", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "oldCost", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "maxIter", ")", ":", "\n", "        ", "r", "=", "fun", "(", "x", ",", "*", "args", ")", "\n", "cost", "=", "np", ".", "sum", "(", "r", "**", "2", ")", "\n", "\n", "if", "verbose", ">", "0", ":", "\n", "            ", "print", "(", "\"Cost at iteration \"", "+", "str", "(", "i", ")", "+", "\": \"", "+", "str", "(", "cost", ")", ")", "\n", "\n", "#warunki stopu", "\n", "", "if", "(", "cost", "<", "eps", "or", "abs", "(", "cost", "-", "oldCost", ")", "<", "eps", ")", ":", "\n", "            ", "break", "\n", "", "oldCost", "=", "cost", "\n", "\n", "J", "=", "funJack", "(", "x", ",", "*", "args", ")", "\n", "grad", "=", "2", "*", "np", ".", "dot", "(", "J", ".", "T", ",", "r", ")", "\n", "direction", "=", "grad", "\n", "\n", "#optymalizacja dlugosci kroku", "\n", "lineSearchRes", "=", "optimize", ".", "minimize_scalar", "(", "LineSearchFun", ",", "args", "=", "(", "x", ",", "direction", ",", "fun", ",", "args", ")", ")", "\n", "#dlugosc kroku", "\n", "alpha", "=", "lineSearchRes", "[", "\"x\"", "]", "\n", "\n", "x", "=", "x", "+", "alpha", "*", "direction", "\n", "\n", "", "if", "verbose", ">", "0", ":", "\n", "        ", "print", "(", "\"Steepest Descent finished after \"", "+", "str", "(", "i", "+", "1", ")", "+", "\" iterations\"", ")", "\n", "r", "=", "fun", "(", "x", ",", "*", "args", ")", "\n", "cost", "=", "np", ".", "sum", "(", "r", "**", "2", ")", "\n", "print", "(", "\"cost = \"", "+", "str", "(", "cost", ")", ")", "\n", "print", "(", "\"x = \"", "+", "str", "(", "x", ")", ")", "\n", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawPoints": [[5, 8], ["cv2.circle", "int", "int"], "function", ["None"], ["def", "drawPoints", "(", "img", ",", "points", ",", "color", "=", "(", "255", ",", "255", ",", "255", ")", ")", ":", "\n", "    ", "for", "point", "in", "points", ":", "\n", "        ", "cv2", ".", "circle", "(", "img", ",", "(", "int", "(", "point", "[", "0", "]", ")", ",", "int", "(", "point", "[", "1", "]", ")", ")", ",", "3", ",", "color", ",", "thickness", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawPose": [[9, 13], ["pts_res.append", "utils.cv_plot.plot_pose_box"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.utils.cv_plot.plot_pose_box"], ["", "", "def", "drawPose", "(", "img", ",", "shape2D", ",", "Ps", ")", ":", "\n", "    ", "pts_res", "=", "[", "]", "\n", "pts_res", ".", "append", "(", "shape2D", ")", "\n", "plot_pose_box", "(", "img", ",", "Ps", ",", "pts_res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawCross": [[14, 26], ["numpy.array", "numpy.dot", "cv2.line", "cv2.line", "cv2.line", "cv2.Rodrigues"], "function", ["None"], ["", "def", "drawCross", "(", "img", ",", "params", ",", "center", "=", "(", "100", ",", "100", ")", ",", "scale", "=", "30.0", ")", ":", "\n", "    ", "R", "=", "cv2", ".", "Rodrigues", "(", "params", "[", "1", ":", "4", "]", ")", "[", "0", "]", "\n", "\n", "points", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "-", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "-", "1", "]", "]", ")", "\n", "points", "=", "np", ".", "dot", "(", "points", ",", "R", ".", "T", ")", "\n", "points2D", "=", "points", "[", ":", ",", ":", "2", "]", "\n", "\n", "points2D", "=", "(", "points2D", "*", "scale", "+", "center", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "cv2", ".", "line", "(", "img", ",", "(", "center", "[", "0", "]", ",", "center", "[", "1", "]", ")", ",", "(", "points2D", "[", "0", ",", "0", "]", ",", "points2D", "[", "0", ",", "1", "]", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "3", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "center", "[", "0", "]", ",", "center", "[", "1", "]", ")", ",", "(", "points2D", "[", "1", ",", "0", "]", ",", "points2D", "[", "1", ",", "1", "]", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "3", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "center", "[", "0", "]", ",", "center", "[", "1", "]", ")", ",", "(", "points2D", "[", "2", ",", "0", "]", ",", "points2D", "[", "2", ",", "1", "]", ")", ",", "(", "0", ",", "0", ",", "255", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawMesh": [[27, 36], ["shape[].astype", "shape[].astype", "shape[].astype", "cv2.line", "cv2.line", "cv2.line"], "function", ["None"], ["", "def", "drawMesh", "(", "img", ",", "shape", ",", "mesh", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", ":", "\n", "    ", "for", "triangle", "in", "mesh", ":", "\n", "        ", "point1", "=", "shape", "[", "triangle", "[", "0", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "point2", "=", "shape", "[", "triangle", "[", "1", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "point3", "=", "shape", "[", "triangle", "[", "2", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point1", "[", "0", "]", ",", "point1", "[", "1", "]", ")", ",", "(", "point2", "[", "0", "]", ",", "point2", "[", "1", "]", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point2", "[", "0", "]", ",", "point2", "[", "1", "]", ")", ",", "(", "point3", "[", "0", "]", ",", "point3", "[", "1", "]", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "cv2", ".", "line", "(", "img", ",", "(", "point3", "[", "0", "]", ",", "point3", "[", "1", "]", ")", ",", "(", "point1", "[", "0", "]", ",", "point1", "[", "1", "]", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawProjectedShape": [[37, 49], ["numpy.copy", "projection.fun", "drawing.drawMesh", "drawing.drawCross"], "function", ["home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.models.OrthographicProjectionBlendshapes.fun", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawMesh", "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.drawing.drawCross"], ["", "", "def", "drawProjectedShape", "(", "img", ",", "x", ",", "projection", ",", "mesh", ",", "params", ",", "lockedTranslation", "=", "False", ")", ":", "\n", "    ", "localParams", "=", "np", ".", "copy", "(", "params", ")", "\n", "\n", "if", "lockedTranslation", ":", "\n", "        ", "localParams", "[", "4", "]", "=", "100", "\n", "localParams", "[", "5", "]", "=", "200", "\n", "\n", "", "projectedShape", "=", "projection", ".", "fun", "(", "x", ",", "localParams", ")", "\n", "\n", "# drawPoints(img, projectedShape.T, (0, 0, 255))", "\n", "drawMesh", "(", "img", ",", "projectedShape", ".", "T", ",", "mesh", ")", "\n", "drawCross", "(", "img", ",", "params", ")", "#\u7ed8\u5236\u5de6\u4e0a\u89d2\u5750\u6807\u7cfb", "\n", "", ""]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.ImageProcessing.blendImages": [[6, 25], ["numpy.where", "numpy.hstack", "cv2.convexHull", "numpy.zeros", "range", "numpy.clip", "numpy.copy", "numpy.max", "numpy.min", "numpy.max", "cv2.pointPolygonTest"], "function", ["None"], ["def", "blendImages", "(", "src", ",", "dst", ",", "mask", ",", "featherAmount", "=", "0.2", ")", ":", "\n", "#indeksy nie czarnych pikseli maski", "\n", "    ", "maskIndices", "=", "np", ".", "where", "(", "mask", "!=", "0", ")", "\n", "#te same indeksy tylko, ze teraz w jednej macierzy, gdzie kazdy wiersz to jeden piksel (x, y)", "\n", "maskPts", "=", "np", ".", "hstack", "(", "(", "maskIndices", "[", "1", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "maskIndices", "[", "0", "]", "[", ":", ",", "np", ".", "newaxis", "]", ")", ")", "\n", "faceSize", "=", "np", ".", "max", "(", "maskPts", ",", "axis", "=", "0", ")", "-", "np", ".", "min", "(", "maskPts", ",", "axis", "=", "0", ")", "\n", "featherAmount", "=", "featherAmount", "*", "np", ".", "max", "(", "faceSize", ")", "\n", "\n", "hull", "=", "cv2", ".", "convexHull", "(", "maskPts", ")", "\n", "dists", "=", "np", ".", "zeros", "(", "maskPts", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "maskPts", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "dists", "[", "i", "]", "=", "cv2", ".", "pointPolygonTest", "(", "hull", ",", "(", "maskPts", "[", "i", ",", "0", "]", ",", "maskPts", "[", "i", ",", "1", "]", ")", ",", "True", ")", "\n", "\n", "", "weights", "=", "np", ".", "clip", "(", "dists", "/", "featherAmount", ",", "0", ",", "1", ")", "\n", "\n", "composedImg", "=", "np", ".", "copy", "(", "dst", ")", "\n", "composedImg", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", "=", "weights", "[", ":", ",", "np", ".", "newaxis", "]", "*", "src", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", "+", "(", "1", "-", "weights", "[", ":", ",", "np", ".", "newaxis", "]", ")", "*", "dst", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", "\n", "\n", "return", "composedImg", "\n", "\n"]], "home.repos.pwc.inspect_result.LeiJiangJNU_DAMDNet.FaceSwap.ImageProcessing.colorTransfer": [[27, 46], ["numpy.copy", "numpy.where", "src[].astype", "dst[].astype", "numpy.mean", "numpy.mean", "numpy.clip"], "function", ["None"], ["", "def", "colorTransfer", "(", "src", ",", "dst", ",", "mask", ")", ":", "\n", "    ", "transferredDst", "=", "np", ".", "copy", "(", "dst", ")", "\n", "#indeksy nie czarnych pikseli maski", "\n", "maskIndices", "=", "np", ".", "where", "(", "mask", "!=", "0", ")", "\n", "#src[maskIndices[0], maskIndices[1]] zwraca piksele w nie czarnym obszarze maski", "\n", "\n", "maskedSrc", "=", "src", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "maskedDst", "=", "dst", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "meanSrc", "=", "np", ".", "mean", "(", "maskedSrc", ",", "axis", "=", "0", ")", "\n", "meanDst", "=", "np", ".", "mean", "(", "maskedDst", ",", "axis", "=", "0", ")", "\n", "\n", "maskedDst", "=", "maskedDst", "-", "meanDst", "\n", "maskedDst", "=", "maskedDst", "+", "meanSrc", "\n", "maskedDst", "=", "np", ".", "clip", "(", "maskedDst", ",", "0", ",", "255", ")", "\n", "\n", "transferredDst", "[", "maskIndices", "[", "0", "]", ",", "maskIndices", "[", "1", "]", "]", "=", "maskedDst", "\n", "\n", "return", "transferredDst", "\n", "\n"]]}