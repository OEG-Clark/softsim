{"home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo.evaluate_criterion": [[207, 346], ["tensorflow.shape", "evaluate_mes.mes", "print", "evaluate_ei.ei", "evaluate_ucb.ucb", "evaluate_pes.pes", "evaluate_mp.mp", "evaluate_sample_mp.mp", "Exception"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mes.mes", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ei.ei", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ucb.ucb", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.pes", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp"], ["def", "evaluate_criterion", "(", "xs", ",", "nx", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "\n", "Xsamples", "=", "required_placeholders", "[", "'X'", "]", "\n", "Ysamples", "=", "required_placeholders", "[", "'Y'", "]", "\n", "nobs", "=", "tf", ".", "shape", "(", "Xsamples", ")", "[", "0", "]", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "\n", "opt_fsample_maxima", "=", "required_placeholders", "[", "'opt_fsample_maxima'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_mes", ".", "mes", "(", "xs", ",", "\n", "xdim", ",", "nmax", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "opt_fsample_maxima", ",", "invKs", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "print", "(", "\"EI uses max observed y.\"", ")", "\n", "max_observed_y", "=", "required_placeholders", "[", "'max_observed_y'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_ei", ".", "ei", "(", "xs", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "\n", "max_observed_y", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "\n", "        ", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_ucb", ".", "ucb", "(", "xs", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "\n", "required_placeholders", "[", "'iteration'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "\n", "max_observed_y", "=", "required_placeholders", "[", "'max_observed_y'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "invKmaxsams", "=", "required_placeholders", "[", "'invKmaxsams'", "]", "\n", "opt_fsample_maximizers", "=", "required_placeholders", "[", "'opt_fsample_maximizers'", "]", "\n", "\n", "vals", "=", "evaluate_pes", ".", "pes", "(", "xs", ",", "\n", "xdim", ",", "nmax", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "opt_fsample_maximizers", ",", "\n", "invKs", ",", "invKmaxsams", ",", "\n", "max_observed_y", ",", "\n", "dtype", "=", "dtype", ",", "n_x", "=", "nx", ")", "\n", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "deterministic", "=", "crit_params", "[", "'deterministic'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_mean_tests", "=", "required_placeholders", "[", "'post_mean_tests'", "]", "\n", "post_cov_tests", "=", "required_placeholders", "[", "'post_cov_tests'", "]", "\n", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_mp", ".", "mp", "(", "xs", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "max_probs", ",", "\n", "\n", "post_mean_tests", ",", "\n", "post_cov_tests", ",", "\n", "\n", "invKs", ",", "\n", "invpNKs", ",", "\n", "\n", "stochastic", "=", "1", "-", "deterministic", ",", "\n", "dtype", "=", "dtype", ",", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_test_samples", "=", "required_placeholders", "[", "'post_test_samples'", "]", "\n", "post_test_masks", "=", "required_placeholders", "[", "'post_test_masks'", "]", "\n", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_sample_mp", ".", "mp", "(", "xs", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs", ",", "# nhyp, nmax", "\n", "\n", "post_test_samples", ",", "# nhyp, nmax, ntest, nsample", "\n", "post_test_masks", ",", "# nhyp, nmax, nsample, dtype: tf.bool", "\n", "\n", "invpNKs", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "dtype", ",", "\n", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown criterion: {}\"", ".", "format", "(", "criterion", ")", ")", "\n", "\n", "", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo.get_required_placeholders": [[348, 478], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "function", ["None"], ["", "def", "get_required_placeholders", "(", "criterion", ",", "crit_params", ",", "\n", "dtype", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "X_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "xdim", ")", ",", "name", "=", "'X_plc'", ")", "\n", "Y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "1", ")", ",", "name", "=", "'Y_plc'", ")", "\n", "\n", "max_observed_y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", ")", ",", "\n", "name", "=", "'max_observed_y_plc'", ")", "\n", "\n", "invKs_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'invKs_plc'", ")", "\n", "# (nhyp, nobs, nobs)", "\n", "opt_fsample_maxima_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ")", ",", "name", "=", "'opt_fsample_maximizers_plc'", ")", "\n", "# (nhyp,nmax)", "\n", "opt_fsample_maximizers_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ",", "xdim", ")", ",", "name", "=", "'opt_fsample_maxima_plc'", ")", "\n", "# (nhyp,nmax,xdim)", "\n", "\n", "opt_meanf_maximizer_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "1", ",", "xdim", ")", ",", "name", "=", "'opt_meanf_maximizer_plc'", ")", "\n", "# assuming same for all nhyp", "\n", "\n", "test_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "crit_params", "[", "'xdim'", "]", ")", ",", "\n", "name", "=", "'test_xs'", ")", "\n", "# (ntest,xdim)s", "\n", "max_probs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ")", ",", "name", "=", "'max_probs_plc'", ")", "\n", "# (nhyp, nmax)", "\n", "post_mean_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_mean_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest)", "\n", "post_cov_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_cov_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest, ntest)", "\n", "\n", "invpNKs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'invpNKs_plc'", ")", "\n", "# (nhyp, nobs+ntest, nobs+ntest)", "\n", "\n", "opt_meanf_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_meanf_candidate_xs'", ")", "\n", "opt_fsample_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_fsample_candidate_xs'", ")", "\n", "opt_crit_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_crit_candidate_xs'", ")", "\n", "\n", "thetas_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", ")", ",", "\n", "name", "=", "'thetas'", ")", "\n", "Ws_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "xdim", ")", ",", "\n", "name", "=", "'Ws'", ")", "\n", "bs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", ")", ",", "\n", "name", "=", "'bs'", ")", "\n", "\n", "iteration_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", ")", ",", "name", "=", "'iteration_plc'", ")", "\n", "\n", "required_placeholders", "=", "{", "\n", "'iteration'", ":", "iteration_plc", ",", "\n", "'X'", ":", "X_plc", ",", "\n", "'Y'", ":", "Y_plc", ",", "\n", "'opt_meanf_candidate_xs'", ":", "opt_meanf_candidate_xs_plc", ",", "\n", "'opt_fsample_candidate_xs'", ":", "opt_fsample_candidate_xs_plc", ",", "\n", "'opt_crit_candidate_xs'", ":", "opt_crit_candidate_xs_plc", ",", "\n", "'invKs'", ":", "invKs_plc", ",", "\n", "\n", "'thetas'", ":", "thetas_plc", ",", "\n", "'Ws'", ":", "Ws_plc", ",", "\n", "'bs'", ":", "bs_plc", ",", "\n", "\n", "'opt_fsample_maximizers'", ":", "opt_fsample_maximizers_plc", ",", "\n", "'opt_fsample_maxima'", ":", "opt_fsample_maxima_plc", ",", "\n", "\n", "\n", "'opt_meanf_maximizer'", ":", "opt_meanf_maximizer_plc", "\n", "}", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "required_placeholders", "[", "'opt_fsample_maxima'", "]", "=", "opt_fsample_maxima_plc", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "required_placeholders", "[", "'max_observed_y'", "]", "=", "max_observed_y_plc", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "invKmaxsams_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ",", "None", ")", ",", "# nhyp, nmax, nobs+1, nobs+1", "\n", "name", "=", "'invKmaxsams_plc'", ")", "\n", "\n", "required_placeholders", "[", "'opt_fsample_maximizer'", "]", "=", "opt_fsample_maximizers_plc", "\n", "required_placeholders", "[", "'invKmaxsams'", "]", "=", "invKmaxsams_plc", "\n", "required_placeholders", "[", "'max_observed_y'", "]", "=", "max_observed_y_plc", "\n", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "        ", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_mean_tests'", "]", "=", "post_mean_tests_plc", "\n", "required_placeholders", "[", "'post_cov_tests'", "]", "=", "post_cov_tests_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "post_test_samples_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_samples_plc'", ")", "\n", "post_test_masks_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "bool", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_masks_plc'", ")", "\n", "\n", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_test_samples'", "]", "=", "post_test_samples_plc", "\n", "required_placeholders", "[", "'post_test_masks'", "]", "=", "post_test_masks_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "return", "required_placeholders", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo.get_intermediate_tensors": [[480, 665], ["tensorflow.reduce_max", "utils.precomputeInvKs", "utils_for_continuous.optimize_continuous_function", "utils_for_continuous.sample_function", "utils_for_continuous.sample_xmaxs_fmaxs", "utils_for_continuous.optimize_continuous_function", "utils.compute_mean_f", "bo.evaluate_criterion", "bo.evaluate_criterion", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "utils.eval_invKmaxsams", "range", "tensorflow.stack", "tensorflow.stack", "evaluate_mp.get_pNK_test_obs", "utils.compute_mean_var_f", "tf.stack.append", "tf.stack.append", "tensorflow.squeeze"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.precomputeInvKs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.optimize_continuous_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_xmaxs_fmaxs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.optimize_continuous_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.eval_invKmaxsams", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_pNK_test_obs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["", "def", "get_intermediate_tensors", "(", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "dtype", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "xmin", "=", "crit_params", "[", "'xmin'", "]", "\n", "xmax", "=", "crit_params", "[", "'xmax'", "]", "\n", "opt_meanf_top_init_k", "=", "crit_params", "[", "'opt_meanf_top_init_k'", "]", "\n", "opt_fsample_top_init_k", "=", "crit_params", "[", "'opt_fsample_top_init_k'", "]", "\n", "opt_crit_top_init_k", "=", "crit_params", "[", "'opt_crit_top_init_k'", "]", "\n", "\n", "X_plc", "=", "required_placeholders", "[", "'X'", "]", "\n", "Y_plc", "=", "required_placeholders", "[", "'Y'", "]", "\n", "\n", "intermediate_tensors", "=", "{", "}", "\n", "\n", "max_observed_y", "=", "tf", ".", "reduce_max", "(", "Y_plc", ")", "\n", "intermediate_tensors", "[", "'max_observed_y'", "]", "=", "max_observed_y", "\n", "\n", "invKs", "=", "utils", ".", "precomputeInvKs", "(", "xdim", ",", "nhyp", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_plc", ",", "dtype", ")", "\n", "# nhyp x nobs x nobs", "\n", "intermediate_tensors", "[", "'invKs'", "]", "=", "invKs", "\n", "\n", "\n", "# optimize mean function", "\n", "opt_meanf_func", "=", "lambda", "x", ":", "utils", ".", "compute_mean_f", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "opt_meanf_assign", ",", "opt_meanf_train", ",", "opt_meanf_maximizer", ",", "opt_meanf_maximum", "=", "utils_for_continuous", ".", "optimize_continuous_function", "(", "xdim", ",", "\n", "opt_meanf_func", ",", "\n", "required_placeholders", "[", "'opt_meanf_candidate_xs'", "]", ",", "\n", "opt_meanf_top_init_k", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "xmin", "=", "xmin", ",", "\n", "xmax", "=", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'opt_meanf'", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_meanf_assign'", "]", "=", "opt_meanf_assign", "\n", "intermediate_tensors", "[", "'opt_meanf_train'", "]", "=", "opt_meanf_train", "\n", "intermediate_tensors", "[", "'opt_meanf_maximizer'", "]", "=", "opt_meanf_maximizer", "\n", "intermediate_tensors", "[", "'opt_meanf_maximum'", "]", "=", "opt_meanf_maximum", "\n", "\n", "\n", "# sample function", "\n", "# move the computation of thetas, Ws, bs", "\n", "# to numpy instead of tensorflow ", "\n", "# to avoid numerical error (return None of tf.linalg.eigh)", "\n", "thetas_all", ",", "Ws_all", ",", "bs_all", "=", "utils_for_continuous", ".", "sample_function", "(", "\n", "xdim", ",", "nhyp", ",", "nmax", ",", "nfeature", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "dtype", "=", "dtype", ")", "\n", "intermediate_tensors", "[", "'thetas'", "]", "=", "thetas_all", "\n", "intermediate_tensors", "[", "'Ws'", "]", "=", "Ws_all", "\n", "intermediate_tensors", "[", "'bs'", "]", "=", "bs_all", "\n", "\n", "\n", "# optimize function samples", "\n", "opt_fsample_assigns", ",", "opt_fsample_trains", ",", "opt_fsample_maximizers", ",", "opt_fsample_maxima", "=", "utils_for_continuous", ".", "sample_xmaxs_fmaxs", "(", "\n", "xdim", ",", "nhyp", ",", "nmax", ",", "nfeature", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "required_placeholders", "[", "'thetas'", "]", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ",", "\n", "required_placeholders", "[", "'bs'", "]", ",", "\n", "\n", "required_placeholders", "[", "'opt_fsample_candidate_xs'", "]", ",", "\n", "opt_fsample_top_init_k", ",", "\n", "\n", "xmin", ",", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "name", "=", "'sample_xmaxs_fmaxs'", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_fsample_assigns'", "]", "=", "opt_fsample_assigns", "\n", "intermediate_tensors", "[", "'opt_fsample_trains'", "]", "=", "opt_fsample_trains", "\n", "intermediate_tensors", "[", "'opt_fsample_maximizers'", "]", "=", "opt_fsample_maximizers", "\n", "intermediate_tensors", "[", "'opt_fsample_maxima'", "]", "=", "opt_fsample_maxima", "\n", "\n", "\n", "# optimize acquisition function", "\n", "opt_fsample_maximizers", "=", "required_placeholders", "[", "'opt_fsample_maximizers'", "]", "# (nhyp, nmax, xdim)", "\n", "opt_fsample_maxima", "=", "required_placeholders", "[", "'opt_fsample_maxima'", "]", "# (nhyp, nmax)", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "invKmaxsams", "=", "utils", ".", "eval_invKmaxsams", "(", "xdim", ",", "nhyp", ",", "nmax", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", "[", "'X'", "]", ",", "\n", "required_placeholders", "[", "'opt_fsample_maximizer'", "]", ",", "\n", "dtype", ")", "\n", "intermediate_tensors", "[", "'invKmaxsams'", "]", "=", "invKmaxsams", "\n", "\n", "", "elif", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "mean_tests_given_data", "=", "[", "]", "# nhyp, ntest", "\n", "cov_tests_given_data", "=", "[", "]", "# nhyp, ntest, ntest", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "            ", "mean_test_i", ",", "cov_test_i", "=", "utils", ".", "compute_mean_var_f", "(", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "sigma0s", "[", "i", ",", "...", "]", ",", "\n", "fullcov", "=", "True", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "mean_tests_given_data", ".", "append", "(", "tf", ".", "squeeze", "(", "mean_test_i", ")", ")", "\n", "cov_tests_given_data", ".", "append", "(", "cov_test_i", ")", "\n", "\n", "", "mean_tests_given_data", "=", "tf", ".", "stack", "(", "mean_tests_given_data", ")", "\n", "# (nhyp, ntest)", "\n", "cov_tests_given_data", "=", "tf", ".", "stack", "(", "cov_tests_given_data", ")", "\n", "# (nhyp, ntest, ntest)", "\n", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", "=", "mean_tests_given_data", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "=", "cov_tests_given_data", "\n", "\n", "_", ",", "invpNKs", "=", "evaluate_mp", ".", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "nhyp", ",", "\n", "X_plc", ",", "\n", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", "=", "invpNKs", "\n", "\n", "\n", "", "opt_crit_func", "=", "lambda", "x", ":", "evaluate_criterion", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "1", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "opt_crit_multiple_func", "=", "lambda", "x", ":", "evaluate_criterion", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "opt_crit_top_init_k", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "# opt_crit_func = lambda x: utils_for_continuous.func_with_2d_input(opt_crit_func, x, xdim)", "\n", "\n", "opt_crit_assign", ",", "opt_crit_train", ",", "opt_crit_maximizer", ",", "opt_crit_maximum", "=", "utils_for_continuous", ".", "optimize_continuous_function", "(", "\n", "xdim", ",", "opt_crit_func", ",", "\n", "required_placeholders", "[", "'opt_crit_candidate_xs'", "]", ",", "\n", "opt_crit_top_init_k", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "xmin", "=", "xmin", ",", "\n", "xmax", "=", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'optimize_crit'", ",", "\n", "multiple_func", "=", "opt_crit_multiple_func", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_crit_assign'", "]", "=", "opt_crit_assign", "\n", "intermediate_tensors", "[", "'opt_crit_train'", "]", "=", "opt_crit_train", "\n", "intermediate_tensors", "[", "'opt_crit_maximizer'", "]", "=", "opt_crit_maximizer", "\n", "intermediate_tensors", "[", "'opt_crit_maximum'", "]", "=", "opt_crit_maximum", "\n", "\n", "return", "intermediate_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo.get_placeholder_values": [[668, 910], ["sess.run", "range", "sess.run", "sess.run", "sess.run", "numpy.linspace().reshape", "numpy.concatenate", "sess.run", "sess.run", "range", "sess.run", "sess.run", "print", "sess.run", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "print", "numpy.linspace().reshape", "numpy.concatenate", "sess.run", "utils.remove_duplicates_np", "print", "print", "utils.remove_duplicates_np.reshape", "sess.run", "utils.get_testidxs_stats", "sess.run", "numpy.linspace", "optfunc.draw_random_init_weights_features_np", "numpy.ones", "numpy.sum", "post_test_v1.astype", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.remove_duplicates_np", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_testidxs_stats", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features_np"], ["", "def", "get_placeholder_values", "(", "sess", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "intermediate_tensors", ",", "\n", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_np", ",", "Y_np", ",", "\n", "candidate_xs", ",", "\n", "\n", "iteration", "=", "1", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "ntrain", "=", "crit_params", "[", "'ntrain'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "xmin", "=", "crit_params", "[", "'xmin'", "]", "\n", "xmax", "=", "crit_params", "[", "'xmax'", "]", "\n", "\n", "values", "=", "{", "\n", "'iteration'", ":", "iteration", ",", "\n", "'query_x'", ":", "None", "}", "\n", "\n", "if", "'max_observed_y'", "in", "intermediate_tensors", ":", "\n", "        ", "max_observed_y_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'max_observed_y'", "]", ",", "\n", "feed_dict", "=", "{", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "}", "\n", ")", "\n", "\n", "values", "[", "'max_observed_y'", "]", "=", "max_observed_y_np", "\n", "\n", "", "if", "'invKs'", "in", "intermediate_tensors", ":", "\n", "        ", "invKs_np", "=", "sess", ".", "run", "(", "intermediate_tensors", "[", "'invKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", "\n", "}", ")", "\n", "values", "[", "'invKs'", "]", "=", "invKs_np", "\n", "\n", "\n", "# Optimize for best guess", "\n", "", "if", "candidate_xs", "[", "'opt_meanf'", "]", "is", "None", ":", "\n", "        ", "rand_candidate_xs_np", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "100", ")", ".", "reshape", "(", "100", ",", "1", ")", "\n", "#np.random.rand(100, xdim) * (xmax - xmin) + xmin", "\n", "\n", "opt_meanf_candidate_xs_np", "=", "np", ".", "concatenate", "(", "[", "rand_candidate_xs_np", ",", "X_np", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "opt_meanf_candidate_xs_np", "=", "candidate_xs", "[", "'opt_meanf'", "]", "\n", "\n", "", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_meanf_assign'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'opt_meanf_candidate_xs'", "]", ":", "opt_meanf_candidate_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "for", "_", "in", "range", "(", "crit_params", "[", "'ntrain'", "]", ")", ":", "\n", "        ", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_meanf_train'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "", "opt_meanf_maximizer_np", ",", "opt_meanf_maximum_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'opt_meanf_maximizer'", "]", ",", "\n", "intermediate_tensors", "[", "'opt_meanf_maximum'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "values", "[", "'opt_meanf_maximizer'", "]", "=", "opt_meanf_maximizer_np", "\n", "values", "[", "'opt_meanf_maximum'", "]", "=", "opt_meanf_maximum_np", "\n", "\n", "\n", "if", "'opt_fsample_maximizer'", "in", "intermediate_tensors", "or", "'opt_fsample_maxima'", "in", "intermediate_tensors", ":", "\n", "\n", "        ", "if", "use_GPU_for_sample_functions", ":", "\n", "# sample functions", "\n", "# move the computation of thetas, Ws, bs", "\n", "# to numpy instead of tensorflow ", "\n", "# to avoid numerical error (return None of tf.linalg.eigh)", "\n", "            ", "print", "(", "\"use GPU to sample functions.\"", ")", "\n", "thetas_np", ",", "Ws_np", ",", "bs_np", "=", "sess", ".", "run", "(", "\n", "[", "intermediate_tensors", "[", "'thetas'", "]", ",", "\n", "intermediate_tensors", "[", "'Ws'", "]", ",", "\n", "intermediate_tensors", "[", "'bs'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"use CPU to sample functions.\"", ")", "\n", "thetas_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", "]", ")", "\n", "Ws_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "xdim", "]", ")", "\n", "bs_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", "]", ")", "\n", "\n", "for", "hyp_idx", "in", "range", "(", "nhyp", ")", ":", "\n", "                ", "thetas_np", "[", "hyp_idx", ",", "...", "]", ",", "Ws_np", "[", "hyp_idx", ",", "...", "]", ",", "bs_np", "[", "hyp_idx", ",", "...", "]", "=", "optfunc", ".", "draw_random_init_weights_features_np", "(", "\n", "xdim", ",", "nmax", ",", "nfeature", ",", "\n", "X_np", ",", "Y_np", ",", "\n", "ls", "[", "hyp_idx", "]", ",", "sigmas", "[", "hyp_idx", "]", ",", "sigma0s", "[", "hyp_idx", "]", ")", "\n", "\n", "# optimize functions", "\n", "# assign initial values", "\n", "\n", "", "", "if", "candidate_xs", "[", "'opt_fsample'", "]", "is", "None", ":", "\n", "            ", "print", "(", "\"generate opt_fsample_candidate_xs by combining Xsamples_np with 100 equi-distant points\"", ")", "\n", "\n", "rand_candidate_xs_np", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "100", ")", ".", "reshape", "(", "100", ",", "xdim", ")", "\n", "#np.random.rand(100, xdim) * (xmax - xmin) + xmin", "\n", "\n", "opt_fsample_candidate_xs_np", "=", "np", ".", "concatenate", "(", "[", "rand_candidate_xs_np", ",", "Xsamples_np", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "opt_fsample_candidate_xs_np", "=", "candidate_xs", "[", "'opt_fsample'", "]", "\n", "\n", "", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_fsample_assigns'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", ",", "\n", "required_placeholders", "[", "'opt_fsample_candidate_xs'", "]", ":", "opt_fsample_candidate_xs_np", "\n", "}", ")", "\n", "\n", "for", "xx", "in", "range", "(", "ntrain", ")", ":", "\n", "            ", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_fsample_trains'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", "\n", "}", ")", "\n", "\n", "", "opt_fsample_maximizers_np", ",", "opt_fsample_maxima_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'opt_fsample_maximizers'", "]", ",", "\n", "intermediate_tensors", "[", "'opt_fsample_maxima'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", "\n", "}", ")", "\n", "\n", "values", "[", "'opt_fsample_maximizers'", "]", "=", "opt_fsample_maximizers_np", "\n", "values", "[", "'opt_fsample_maxima'", "]", "=", "opt_fsample_maxima_np", "\n", "\n", "# optimize acquisition function", "\n", "", "if", "criterion", "==", "'pes'", ":", "\n", "        ", "invKmaxsams_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'invKmaxsams'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'opt_fsample_maximizers'", "]", ":", "opt_fsample_maximizers_np", "\n", "}", ")", "\n", "values", "[", "'invKmaxsams'", "]", "=", "invKmaxsams_np", "\n", "\n", "", "elif", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "unique_opt_fsample_maximizers_np", "=", "utils", ".", "remove_duplicates_np", "(", "\n", "opt_fsample_maximizers_np", "[", "0", ",", "...", "]", ",", "\n", "resolution", "=", "duplicate_resolution", ")", "\n", "\n", "print", "(", "\"Set test_xs = opt_fsample_maximizers unique by resolution = {}\"", ".", "format", "(", "duplicate_resolution", ")", ")", "\n", "print", "(", "unique_opt_fsample_maximizers_np", ")", "\n", "test_xs_np", "=", "unique_opt_fsample_maximizers_np", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "\n", "ntest", "=", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "\n", "if", "ntest", "==", "1", ":", "\n", "# there is only 1 unique opt_fsample_maximizer", "\n", "            ", "values", "[", "'test_xs'", "]", "=", "test_xs_np", "\n", "values", "[", "'max_probs'", "]", "=", "np", ".", "ones", "(", "ntest", ")", "\n", "values", "[", "'max_probs'", "]", "/=", "np", ".", "sum", "(", "values", "[", "'max_probs'", "]", ")", "\n", "values", "[", "'query_x'", "]", "=", "test_xs_np", "\n", "return", "values", "\n", "\n", "", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", ",", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "test_xs_np", ",", "max_probs_np", ",", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", ",", "post_test_v0", ",", "post_test_v1", "=", "utils", ".", "get_testidxs_stats", "(", "nhyp", ",", "\n", "test_xs_np", ",", "# (ntest, xdim)", "\n", "mean_tests_given_data_np", ",", "# (nhyp, ntest)", "\n", "cov_tests_given_data_np", ",", "# (nhyp, ntest, ntest)", "\n", "mode", "=", "crit_params", "[", "'mode'", "]", ",", "\n", "nsample", "=", "crit_params", "[", "'ntestsample'", "]", ",", "\n", "n_min_sample", "=", "crit_params", "[", "'n_min_sample'", "]", ")", "\n", "\n", "\"\"\"\n        depending on crit_params['mode']\n            post_test_v0 and post_test_v1 are interpreted differently\n        crit_params['mode']:\n            'sample': post_test_sample, post_test_masks\n            'ep', 'empirical': post_mean_tests, post_cov_tests\n        \"\"\"", "\n", "\n", "if", "test_xs_np", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "values", "[", "'test_xs'", "]", "=", "test_xs_np", "\n", "values", "[", "'max_probs'", "]", "=", "max_probs_np", "\n", "values", "[", "'query_x'", "]", "=", "test_xs_np", "\n", "return", "values", "\n", "\n", "", "invpNKs_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "values", "[", "'test_xs'", "]", "=", "test_xs_np", "\n", "values", "[", "'max_probs'", "]", "=", "max_probs_np", "\n", "values", "[", "'invpNKs'", "]", "=", "invpNKs_np", "\n", "\n", "if", "criterion", "==", "'sftl'", ":", "\n", "            ", "post_test_samples_np", "=", "post_test_v0", "\n", "post_test_masks_np", "=", "post_test_v1", ".", "astype", "(", "bool", ")", "\n", "\n", "values", "[", "'post_test_samples'", "]", "=", "post_test_samples_np", "\n", "values", "[", "'post_test_masks'", "]", "=", "post_test_masks_np", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "            ", "post_mean_test_np", "=", "post_test_v0", "\n", "post_cov_test_np", "=", "post_test_v1", "\n", "\n", "values", "[", "'post_mean_tests'", "]", "=", "post_mean_test_np", "\n", "values", "[", "'post_cov_tests'", "]", "=", "post_cov_test_np", "\n", "\n", "", "", "return", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_approx_stat_xs": [[8, 29], ["numpy.linalg.inv", "np.linalg.inv.dot", "numpy.sqrt", "site_vars.reshape", "cs_mul_prec.dot", "inv_cov_xs.dot", "numpy.sum", "site_vars.reshape", "site_means.reshape"], "function", ["None"], ["def", "get_approx_stat_xs", "(", "\n", "cs", ",", "# (nx, nx-1)", "\n", "mean_xs", ",", "# (nx,1)", "\n", "inv_cov_xs", ",", "# (nx,nx)", "\n", "site_means", ",", "site_vars", "# (nx-1,)", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n        approx_mean: (nx,1)\n        approx_cov: (nx,nx)\n    \"\"\"", "\n", "\n", "cs_mul_prec", "=", "cs", "/", "np", ".", "sqrt", "(", "site_vars", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", "\n", "\n", "approx_cov", "=", "np", ".", "linalg", ".", "inv", "(", "inv_cov_xs", "+", "cs_mul_prec", ".", "dot", "(", "cs_mul_prec", ".", "T", ")", ")", "\n", "approx_mean", "=", "approx_cov", ".", "dot", "(", "\n", "inv_cov_xs", ".", "dot", "(", "mean_xs", ")", "\n", "+", "np", ".", "sum", "(", "cs", "*", "site_means", ".", "reshape", "(", "1", ",", "-", "1", ")", "/", "site_vars", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", ")", "\n", "\n", "return", "approx_mean", ",", "approx_cov", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_cavity_parameters": [[31, 50], ["numpy.diag", "cs.T.dot().squeeze", "numpy.diag", "cs.T.dot().dot", "cs.T.dot().dot", "cs.T.dot", "cs.T.dot", "cs.T.dot"], "function", ["None"], ["", "def", "get_cavity_parameters", "(", "\n", "max_idx", ",", "\n", "cs", ",", "# (nx, nx-1)", "\n", "approx_mean", ",", "# (nx,1)", "\n", "approx_cov", ",", "# (nx,nx)", "\n", "site_means", ",", "# (nx-1,)", "\n", "site_vars", "# (nx-1,)", "\n", ")", ":", "\n", "    ", "cav_vars", "=", "1.0", "/", "(", "\n", "1.0", "/", "np", ".", "diag", "(", "cs", ".", "T", ".", "dot", "(", "approx_cov", ")", ".", "dot", "(", "cs", ")", ")", "-", "\n", "1.0", "/", "site_vars", ")", "\n", "# (nx-1,)", "\n", "\n", "cav_means", "=", "cav_vars", "*", "(", "\n", "cs", ".", "T", ".", "dot", "(", "approx_mean", ")", ".", "squeeze", "(", ")", "/", "np", ".", "diag", "(", "cs", ".", "T", ".", "dot", "(", "approx_cov", ")", ".", "dot", "(", "cs", ")", ")", "\n", "-", "site_means", "/", "site_vars", ")", "\n", "# (nx-1)", "\n", "\n", "return", "cav_means", ",", "cav_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_cf_statistics": [[52, 61], ["numpy.sqrt", "scipy.norm.pdf", "scipy.norm.cdf", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "get_cf_statistics", "(", "cav_means", ",", "# (nx-1,)", "\n", "cav_vars", ")", ":", "# (nx-1,)", "\n", "    ", "beta", "=", "cav_means", "/", "np", ".", "sqrt", "(", "cav_vars", ")", "\n", "\n", "pdf_over_cdf", "=", "spst", ".", "norm", ".", "pdf", "(", "beta", ")", "/", "spst", ".", "norm", ".", "cdf", "(", "beta", ")", "\n", "cf_means", "=", "cav_means", "+", "np", ".", "sqrt", "(", "cav_vars", ")", "*", "pdf_over_cdf", "\n", "cf_vars", "=", "-", "cav_means", "*", "np", ".", "sqrt", "(", "cav_vars", ")", "*", "pdf_over_cdf", "-", "cf_means", "*", "cf_means", "+", "2.", "*", "cav_means", "*", "cf_means", "-", "cav_means", "*", "cav_means", "+", "cav_vars", "\n", "\n", "return", "cf_means", ",", "cf_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.update_site_parameters": [[63, 71], ["None"], "function", ["None"], ["", "def", "update_site_parameters", "(", "cf_means", ",", "cf_vars", ",", "cav_means", ",", "cav_vars", ")", ":", "\n", "    ", "\"\"\"\n    Requires: all parameters of shape (nx-1,)\n    \"\"\"", "\n", "site_vars", "=", "1.0", "/", "(", "1.0", "/", "cf_vars", "-", "1.0", "/", "cav_vars", ")", "\n", "site_means", "=", "site_vars", "*", "(", "cf_means", "/", "cf_vars", "-", "cav_means", "/", "cav_vars", ")", "\n", "\n", "return", "site_means", ",", "site_vars", "# (nx-1,)", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.approximate_EP_np": [[73, 205], ["mean_xs.reshape.reshape", "numpy.zeros", "range", "numpy.ones", "np.zeros.T.dot().reshape", "numpy.diag().copy", "numpy.linalg.inv", "ep.get_approx_stat_xs", "print", "ep.get_cavity_parameters", "ep.get_cf_statistics", "ep.update_site_parameters", "ep.get_approx_stat_xs", "numpy.mean", "numpy.any", "numpy.any", "np.zeros.T.dot", "numpy.diag", "numpy.isnan", "numpy.isnan", "print", "print", "np.zeros.T.dot().dot", "numpy.isnan", "numpy.isinf", "np.zeros.T.dot"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_approx_stat_xs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_cavity_parameters", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_cf_statistics", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.update_site_parameters", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.get_approx_stat_xs"], ["", "def", "approximate_EP_np", "(", "\n", "max_idx", ",", "\n", "mean_xs", ",", "\n", "cov_xs", ",", "\n", "resolution", "=", "1e-9", ",", "\n", "max_niter", "=", "1000", ")", ":", "\n", "    ", "\"\"\"\n    Requires:\n        l: (xdim,)\n        sigma, sigma0: scalar\n        sigma0: noise variance\n        max_idx: integer in: 0,..,nx (exclusive nx)\n        X: (nxdata, xdim)\n        Y: (nxdata,1)\n\n        mean_xs: (nx,1)\n        cov_xs: (nx,nx)\n    \"\"\"", "\n", "mean_xs", "=", "mean_xs", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "nx", "=", "mean_xs", ".", "shape", "[", "0", "]", "\n", "\n", "# there are nx - 1: vector c", "\n", "# for nx - 1 differences: xi - x_max_idx", "\n", "cs", "=", "np", ".", "zeros", "(", "[", "nx", ",", "nx", "-", "1", "]", ")", "\n", "\n", "j", "=", "0", "\n", "for", "i", "in", "range", "(", "nx", ")", ":", "\n", "        ", "if", "i", "!=", "max_idx", ":", "\n", "            ", "cs", "[", "max_idx", "]", "[", "j", "]", "=", "1", "\n", "cs", "[", "i", "]", "[", "j", "]", "=", "-", "1", "\n", "j", "+=", "1", "\n", "\n", "# site parameters: (nx - 1)", "\n", "", "", "Zs", "=", "np", ".", "ones", "(", "nx", "-", "1", ")", "# \\tilde{Z}_i", "\n", "site_means", "=", "cs", ".", "T", ".", "dot", "(", "mean_xs", ")", ".", "reshape", "(", "nx", "-", "1", ")", "#np.zeros(nx-1) # \\tilde{\\mu}_i", "\n", "site_vars", "=", "np", ".", "diag", "(", "cs", ".", "T", ".", "dot", "(", "cov_xs", ")", ".", "dot", "(", "cs", ")", ")", ".", "copy", "(", ")", "#np.ones(nx-1) # \\tilde{\\tau}_i", "\n", "\n", "inv_cov_xs", "=", "np", ".", "linalg", ".", "inv", "(", "cov_xs", ")", "\n", "\n", "approx_mean", ",", "approx_cov", "=", "get_approx_stat_xs", "(", "cs", ",", "\n", "mean_xs", ",", "\n", "inv_cov_xs", ",", "\n", "site_means", ",", "site_vars", ")", "\n", "# (nx,1), (nx,nx)", "\n", "\n", "count_niter", "=", "0", "\n", "converge_diff", "=", "1e10", "\n", "while", "converge_diff", ">", "resolution", "and", "count_niter", "<", "max_niter", ":", "\n", "        ", "count_niter", "+=", "1", "\n", "\n", "# cavity distribution parameters", "\n", "# of cf", "\n", "cav_means", ",", "cav_vars", "=", "get_cavity_parameters", "(", "\n", "max_idx", ",", "\n", "cs", ",", "# (nx, nx-1)", "\n", "approx_mean", ",", "# (nx,1)", "\n", "approx_cov", ",", "# (nx,nx)", "\n", "site_means", ",", "# (nx-1,)", "\n", "site_vars", "# (nx-1,)", "\n", ")", "\n", "# (nx-1,)", "\n", "\n", "# if np.any(cav_vars <= 0.):", "\n", "#     print(\"NEGATIVE CAVITY VAR\")", "\n", "#     print(site_means, site_vars)", "\n", "#     print(cav_means, cav_vars)", "\n", "#     raise Exception(\"err\")", "\n", "\n", "# statistics of cavity distribution * original distribution[i]", "\n", "# t(cf)w^{\\i}(cf)", "\n", "cf_means", ",", "cf_vars", "=", "get_cf_statistics", "(", "cav_means", ",", "cav_vars", ")", "\n", "\n", "# if np.any(cf_vars <= 0.):", "\n", "#     print(\"NEGATIVE CF VAR\")", "\n", "#     print(site_means, site_vars)", "\n", "#     print(cav_means, cav_vars)", "\n", "#     print(cf_means, cf_vars)", "\n", "#     raise Exception(\"err\")", "\n", "\n", "# update site parameters", "\n", "updated_site_means", ",", "updated_site_vars", "=", "update_site_parameters", "(", "cf_means", ",", "cf_vars", ",", "cav_means", ",", "cav_vars", ")", "\n", "\n", "# if np.any(updated_site_vars <= 0.):", "\n", "#     print(\"NEGATIVE SITE VAR\")", "\n", "#     print(cf_means, cf_vars)", "\n", "#     print(cav_means, cav_vars)", "\n", "#     print(updated_site_means, updated_site_vars)", "\n", "#     raise Exception(\"err\")", "\n", "\n", "updated_idx", "=", "count_niter", "%", "(", "nx", "-", "1", ")", "\n", "\n", "# if site_var is negative for current updated_idx, update another idx", "\n", "last_count_niter", "=", "count_niter", "-", "1", "if", "count_niter", ">=", "1", "else", "nx", "-", "2", "\n", "\n", "while", "(", "updated_site_vars", "[", "updated_idx", "]", "<=", "0", "\n", "or", "np", ".", "isnan", "(", "updated_site_vars", "[", "updated_idx", "]", ")", "\n", "or", "np", ".", "isinf", "(", "updated_site_vars", "[", "updated_idx", "]", ")", "\n", ")", "and", "updated_idx", "!=", "last_count_niter", ":", "\n", "            ", "count_niter", "+=", "1", "\n", "updated_idx", "=", "count_niter", "%", "(", "nx", "-", "1", ")", "\n", "\n", "# if count_niter == last_count_niter:", "\n", "#     print(\"All updates return nan!\")", "\n", "#     print(\"EP stops at {} iteration, parameters difference = {:.2e}\".format(count_niter, converge_diff))", "\n", "#     return approx_mean, approx_cov", "\n", "\n", "", "site_means", "[", "updated_idx", "]", "=", "updated_site_means", "[", "updated_idx", "]", "\n", "site_vars", "[", "updated_idx", "]", "=", "updated_site_vars", "[", "updated_idx", "]", "\n", "\n", "updated_approx_mean", ",", "updated_approx_cov", "=", "get_approx_stat_xs", "(", "cs", ",", "\n", "mean_xs", ",", "\n", "inv_cov_xs", ",", "\n", "site_means", ",", "site_vars", ")", "\n", "\n", "diff_mean", "=", "updated_approx_mean", "-", "approx_mean", "\n", "diff_cov", "=", "updated_approx_cov", "-", "approx_cov", "\n", "\n", "converge_diff", "=", "np", ".", "mean", "(", "diff_mean", "*", "diff_mean", "+", "diff_cov", "*", "diff_cov", ")", "\n", "\n", "is_cov_nan", "=", "np", ".", "any", "(", "np", ".", "isnan", "(", "updated_approx_cov", ")", ")", "\n", "is_mean_nan", "=", "np", ".", "any", "(", "np", ".", "isnan", "(", "updated_approx_mean", ")", ")", "\n", "if", "is_cov_nan", "or", "is_mean_nan", ":", "\n", "            ", "print", "(", "\"Early stopping EP due to nan! mean:{} cov:{}\"", ".", "format", "(", "is_mean_nan", ",", "is_cov_nan", ")", ")", "\n", "print", "(", "\"EP stops at {} iteration, parameters difference = {:.2e}\"", ".", "format", "(", "count_niter", ",", "converge_diff", ")", ")", "\n", "return", "approx_mean", ",", "approx_cov", "\n", "\n", "", "approx_mean", ",", "approx_cov", "=", "updated_approx_mean", ",", "updated_approx_cov", "\n", "\n", "\n", "", "print", "(", "\"EP stops at {} iteration, parameters difference = {:.2e}\"", ".", "format", "(", "count_niter", ",", "converge_diff", ")", ")", "\n", "\n", "return", "approx_mean", ",", "approx_cov", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_batch.evaluate_criterion": [[195, 278], ["tensorflow.shape", "evaluate_batch_mp.mp", "evaluate_batch_sample_mp.mp", "Exception"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp"], ["", "def", "evaluate_criterion", "(", "xs", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "\n", "Xsamples", "=", "required_placeholders", "[", "'X'", "]", "\n", "Ysamples", "=", "required_placeholders", "[", "'Y'", "]", "\n", "nobs", "=", "tf", ".", "shape", "(", "Xsamples", ")", "[", "0", "]", "\n", "\n", "if", "criterion", "==", "'ftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_mean_tests", "=", "required_placeholders", "[", "'post_mean_tests'", "]", "\n", "post_cov_tests", "=", "required_placeholders", "[", "'post_cov_tests'", "]", "\n", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_batch_mp", ".", "mp", "(", "xs", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "\n", "xdim", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "max_probs", ",", "\n", "\n", "post_mean_tests", ",", "\n", "post_cov_tests", ",", "\n", "\n", "invKs", ",", "\n", "invpNKs", ",", "\n", "\n", "\n", "dtype", "=", "dtype", ",", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_test_samples", "=", "required_placeholders", "[", "'post_test_samples'", "]", "\n", "post_test_masks", "=", "required_placeholders", "[", "'post_test_masks'", "]", "\n", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_batch_sample_mp", ".", "mp", "(", "xs", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs", ",", "# nhyp, nmax", "\n", "\n", "post_test_samples", ",", "# nhyp, nmax, ntest, nsample", "\n", "post_test_masks", ",", "# nhyp, nmax, nsample, dtype: tf.bool", "\n", "\n", "invpNKs", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "dtype", ",", "\n", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown criterion: {}\"", ".", "format", "(", "criterion", ")", ")", "\n", "\n", "", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_batch.get_required_placeholders": [[280, 389], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "function", ["None"], ["", "def", "get_required_placeholders", "(", "criterion", ",", "crit_params", ",", "\n", "dtype", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "batchsize", "=", "crit_params", "[", "'batchsize'", "]", "\n", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "X_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "xdim", ")", ",", "name", "=", "'X_plc'", ")", "\n", "Y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "1", ")", ",", "name", "=", "'Y_plc'", ")", "\n", "\n", "max_observed_y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", ")", ",", "\n", "name", "=", "'max_observed_y_plc'", ")", "\n", "\n", "invKs_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'invKs_plc'", ")", "\n", "# (nhyp, nobs, nobs)", "\n", "opt_fsample_maxima_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ")", ",", "name", "=", "'opt_fsample_maximizers_plc'", ")", "\n", "# (nhyp,nmax)", "\n", "opt_fsample_maximizers_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ",", "xdim", ")", ",", "name", "=", "'opt_fsample_maxima_plc'", ")", "\n", "# (nhyp,nmax,xdim)", "\n", "\n", "opt_meanf_maximizer_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "1", ",", "xdim", ")", ",", "name", "=", "'opt_meanf_maximizer_plc'", ")", "\n", "# assuming same for all nhyp", "\n", "\n", "test_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "crit_params", "[", "'xdim'", "]", ")", ",", "\n", "name", "=", "'test_xs'", ")", "\n", "# (ntest,xdim)s", "\n", "max_probs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ")", ",", "name", "=", "'max_probs_plc'", ")", "\n", "# (nhyp, nmax)", "\n", "post_mean_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_mean_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest)", "\n", "post_cov_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_cov_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest, ntest)", "\n", "\n", "invpNKs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'invpNKs_plc'", ")", "\n", "# (nhyp, nobs+ntest, nobs+ntest)", "\n", "\n", "opt_meanf_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_meanf_candidate_xs'", ")", "\n", "opt_fsample_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_fsample_candidate_xs'", ")", "\n", "opt_crit_candidate_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "batchsize", ",", "xdim", ")", ",", "\n", "name", "=", "'opt_crit_candidate_xs'", ")", "\n", "\n", "thetas_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", ")", ",", "\n", "name", "=", "'thetas'", ")", "\n", "Ws_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "xdim", ")", ",", "\n", "name", "=", "'Ws'", ")", "\n", "bs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", ")", ",", "\n", "name", "=", "'bs'", ")", "\n", "\n", "required_placeholders", "=", "{", "\n", "'X'", ":", "X_plc", ",", "\n", "'Y'", ":", "Y_plc", ",", "\n", "'opt_meanf_candidate_xs'", ":", "opt_meanf_candidate_xs_plc", ",", "\n", "'opt_fsample_candidate_xs'", ":", "opt_fsample_candidate_xs_plc", ",", "\n", "'opt_crit_candidate_xs'", ":", "opt_crit_candidate_xs_plc", ",", "\n", "'invKs'", ":", "invKs_plc", ",", "\n", "\n", "'thetas'", ":", "thetas_plc", ",", "\n", "'Ws'", ":", "Ws_plc", ",", "\n", "'bs'", ":", "bs_plc", ",", "\n", "\n", "'opt_fsample_maximizers'", ":", "opt_fsample_maximizers_plc", ",", "\n", "'opt_fsample_maxima'", ":", "opt_fsample_maxima_plc", ",", "\n", "\n", "'opt_meanf_maximizer'", ":", "opt_meanf_maximizer_plc", "\n", "}", "\n", "\n", "if", "criterion", "==", "'ftl'", ":", "\n", "        ", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_mean_tests'", "]", "=", "post_mean_tests_plc", "\n", "required_placeholders", "[", "'post_cov_tests'", "]", "=", "post_cov_tests_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "post_test_samples_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_samples_plc'", ")", "\n", "post_test_masks_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "bool", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_masks_plc'", ")", "\n", "\n", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_test_samples'", "]", "=", "post_test_samples_plc", "\n", "required_placeholders", "[", "'post_test_masks'", "]", "=", "post_test_masks_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "return", "required_placeholders", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_batch.get_intermediate_tensors": [[391, 547], ["tensorflow.reduce_max", "utils.precomputeInvKs", "utils_for_continuous.optimize_continuous_function", "utils_for_continuous.sample_function", "utils_for_continuous.sample_xmaxs_fmaxs", "utils_for_continuous.optimize_continuous_function", "utils.compute_mean_f", "range", "tensorflow.stack", "tensorflow.stack", "evaluate_batch_mp.get_pNK_test_obs", "bo_batch.evaluate_criterion", "tensorflow.reshape", "tensorflow.reshape", "utils.compute_mean_var_f", "tf.stack.append", "tf.stack.append", "tensorflow.reshape", "tensorflow.squeeze"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.precomputeInvKs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.optimize_continuous_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_xmaxs_fmaxs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.optimize_continuous_function", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_pNK_test_obs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["", "def", "get_intermediate_tensors", "(", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "dtype", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "xmin", "=", "crit_params", "[", "'xmin'", "]", "\n", "xmax", "=", "crit_params", "[", "'xmax'", "]", "\n", "batchsize", "=", "crit_params", "[", "'batchsize'", "]", "\n", "opt_meanf_top_init_k", "=", "crit_params", "[", "'opt_meanf_top_init_k'", "]", "\n", "opt_fsample_top_init_k", "=", "crit_params", "[", "'opt_fsample_top_init_k'", "]", "\n", "opt_crit_top_init_k", "=", "crit_params", "[", "'opt_crit_top_init_k'", "]", "\n", "\n", "X_plc", "=", "required_placeholders", "[", "'X'", "]", "\n", "Y_plc", "=", "required_placeholders", "[", "'Y'", "]", "\n", "\n", "intermediate_tensors", "=", "{", "}", "\n", "\n", "max_observed_y", "=", "tf", ".", "reduce_max", "(", "Y_plc", ")", "\n", "intermediate_tensors", "[", "'max_observed_y'", "]", "=", "max_observed_y", "\n", "\n", "invKs", "=", "utils", ".", "precomputeInvKs", "(", "xdim", ",", "nhyp", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_plc", ",", "dtype", ")", "\n", "# nhyp x nobs x nobs", "\n", "intermediate_tensors", "[", "'invKs'", "]", "=", "invKs", "\n", "\n", "\n", "# optimize mean function", "\n", "opt_meanf_func", "=", "lambda", "x", ":", "utils", ".", "compute_mean_f", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "opt_meanf_assign", ",", "opt_meanf_train", ",", "opt_meanf_maximizer", ",", "opt_meanf_maximum", "=", "utils_for_continuous", ".", "optimize_continuous_function", "(", "xdim", ",", "\n", "opt_meanf_func", ",", "\n", "required_placeholders", "[", "'opt_meanf_candidate_xs'", "]", ",", "\n", "opt_meanf_top_init_k", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "xmin", "=", "xmin", ",", "\n", "xmax", "=", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'opt_meanf'", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_meanf_assign'", "]", "=", "opt_meanf_assign", "\n", "intermediate_tensors", "[", "'opt_meanf_train'", "]", "=", "opt_meanf_train", "\n", "intermediate_tensors", "[", "'opt_meanf_maximizer'", "]", "=", "opt_meanf_maximizer", "\n", "intermediate_tensors", "[", "'opt_meanf_maximum'", "]", "=", "opt_meanf_maximum", "\n", "\n", "\n", "# sample function", "\n", "thetas_all", ",", "Ws_all", ",", "bs_all", "=", "utils_for_continuous", ".", "sample_function", "(", "\n", "xdim", ",", "nhyp", ",", "nmax", ",", "nfeature", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "dtype", "=", "dtype", ")", "\n", "intermediate_tensors", "[", "'thetas'", "]", "=", "thetas_all", "\n", "intermediate_tensors", "[", "'Ws'", "]", "=", "Ws_all", "\n", "intermediate_tensors", "[", "'bs'", "]", "=", "bs_all", "\n", "\n", "\n", "# optimize function samples", "\n", "opt_fsample_assigns", ",", "opt_fsample_trains", ",", "opt_fsample_maximizers", ",", "opt_fsample_maxima", "=", "utils_for_continuous", ".", "sample_xmaxs_fmaxs", "(", "\n", "xdim", ",", "nhyp", ",", "nmax", ",", "nfeature", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "required_placeholders", "[", "'thetas'", "]", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ",", "\n", "required_placeholders", "[", "'bs'", "]", ",", "\n", "\n", "required_placeholders", "[", "'opt_fsample_candidate_xs'", "]", ",", "\n", "opt_fsample_top_init_k", ",", "\n", "\n", "xmin", ",", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "name", "=", "'sample_xmaxs_fmaxs'", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_fsample_assigns'", "]", "=", "opt_fsample_assigns", "\n", "intermediate_tensors", "[", "'opt_fsample_trains'", "]", "=", "opt_fsample_trains", "\n", "intermediate_tensors", "[", "'opt_fsample_maximizers'", "]", "=", "opt_fsample_maximizers", "\n", "intermediate_tensors", "[", "'opt_fsample_maxima'", "]", "=", "opt_fsample_maxima", "\n", "\n", "# optimize acquisition function", "\n", "opt_fsample_maximizers", "=", "required_placeholders", "[", "'opt_fsample_maximizers'", "]", "# (nhyp, nmax, xdim)", "\n", "opt_fsample_maxima", "=", "required_placeholders", "[", "'opt_fsample_maxima'", "]", "# (nhyp, nmax)", "\n", "\n", "if", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "mean_tests_given_data", "=", "[", "]", "# nhyp, ntest", "\n", "cov_tests_given_data", "=", "[", "]", "# nhyp, ntest, ntest", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "            ", "mean_test_i", ",", "cov_test_i", "=", "utils", ".", "compute_mean_var_f", "(", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "X_plc", ",", "Y_plc", ",", "\n", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "sigma0s", "[", "i", ",", "...", "]", ",", "\n", "fullcov", "=", "True", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "mean_tests_given_data", ".", "append", "(", "tf", ".", "squeeze", "(", "mean_test_i", ")", ")", "\n", "cov_tests_given_data", ".", "append", "(", "cov_test_i", ")", "\n", "\n", "", "mean_tests_given_data", "=", "tf", ".", "stack", "(", "mean_tests_given_data", ")", "\n", "# (nhyp, ntest)", "\n", "cov_tests_given_data", "=", "tf", ".", "stack", "(", "cov_tests_given_data", ")", "\n", "# (nhyp, ntest, ntest)", "\n", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", "=", "mean_tests_given_data", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "=", "cov_tests_given_data", "\n", "\n", "_", ",", "invpNKs", "=", "evaluate_batch_mp", ".", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "nhyp", ",", "\n", "X_plc", ",", "\n", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", "=", "invpNKs", "\n", "\n", "\n", "", "opt_crit_func", "=", "lambda", "x", ":", "evaluate_criterion", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "batchsize", ",", "xdim", ")", ")", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "# to use function utils_for_continuous.optimize_continuous_function for batch of inputs", "\n", "# reshape batch (batchsize,xdim) to batchsize*xdim dimension vector: (1,batchsize*xdim)", "\n", "opt_crit_assign", ",", "opt_crit_train", ",", "opt_crit_maximizer", ",", "opt_crit_maximum", "=", "utils_for_continuous", ".", "optimize_continuous_function", "(", "\n", "xdim", "*", "batchsize", ",", "opt_crit_func", ",", "\n", "tf", ".", "reshape", "(", "required_placeholders", "[", "'opt_crit_candidate_xs'", "]", ",", "\n", "shape", "=", "(", "-", "1", ",", "xdim", "*", "batchsize", ")", ")", ",", "\n", "opt_crit_top_init_k", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ",", "\n", "xmin", "=", "xmin", ",", "\n", "xmax", "=", "xmax", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'optimize_crit'", ")", "\n", "\n", "intermediate_tensors", "[", "'opt_crit_assign'", "]", "=", "opt_crit_assign", "\n", "intermediate_tensors", "[", "'opt_crit_train'", "]", "=", "opt_crit_train", "\n", "intermediate_tensors", "[", "'opt_crit_maximizer'", "]", "=", "opt_crit_maximizer", "# (1, xdim * batchsize)", "\n", "intermediate_tensors", "[", "'opt_crit_maximum'", "]", "=", "opt_crit_maximum", "\n", "\n", "return", "intermediate_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_batch.get_placeholder_values": [[550, 768], ["sess.run", "range", "sess.run", "sess.run", "sess.run", "numpy.linspace().reshape", "numpy.concatenate", "sess.run", "sess.run", "range", "sess.run", "opt_fsample_maximizers_np[].reshape", "print", "sess.run", "utils.get_testidxs_stats", "print", "sess.run", "print", "sess.run", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "print", "numpy.linspace().reshape", "numpy.concatenate", "sess.run", "print", "print", "post_test_v1.astype", "numpy.linspace", "optfunc.draw_random_init_weights_features_np", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_testidxs_stats", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features_np"], ["", "def", "get_placeholder_values", "(", "sess", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "intermediate_tensors", ",", "\n", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X_np", ",", "Y_np", ",", "\n", "candidate_xs", ",", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "nfeature", "=", "crit_params", "[", "'nfeature'", "]", "\n", "ntrain", "=", "crit_params", "[", "'ntrain'", "]", "\n", "xmin", "=", "crit_params", "[", "'xmin'", "]", "\n", "xmax", "=", "crit_params", "[", "'xmax'", "]", "\n", "batchsize", "=", "crit_params", "[", "'batchsize'", "]", "\n", "\n", "values", "=", "{", "'query_x'", ":", "None", "}", "\n", "\n", "if", "'max_observed_y'", "in", "intermediate_tensors", ":", "\n", "        ", "max_observed_y_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'max_observed_y'", "]", ",", "\n", "feed_dict", "=", "{", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "}", "\n", ")", "\n", "\n", "values", "[", "'max_observed_y'", "]", "=", "max_observed_y_np", "\n", "\n", "", "if", "'invKs'", "in", "intermediate_tensors", ":", "\n", "        ", "invKs_np", "=", "sess", ".", "run", "(", "intermediate_tensors", "[", "'invKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", "\n", "}", ")", "\n", "values", "[", "'invKs'", "]", "=", "invKs_np", "\n", "\n", "\n", "# Optimize for best guess", "\n", "", "if", "candidate_xs", "[", "'opt_meanf'", "]", "is", "None", ":", "\n", "        ", "rand_candidate_xs_np", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "100", ")", ".", "reshape", "(", "100", ",", "1", ")", "\n", "#np.random.rand(100, xdim) * (xmax - xmin) + xmin", "\n", "\n", "opt_meanf_candidate_xs_np", "=", "np", ".", "concatenate", "(", "[", "rand_candidate_xs_np", ",", "X_np", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "opt_meanf_candidate_xs_np", "=", "candidate_xs", "[", "'opt_meanf'", "]", "\n", "\n", "", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_meanf_assign'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'opt_meanf_candidate_xs'", "]", ":", "opt_meanf_candidate_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "for", "_", "in", "range", "(", "crit_params", "[", "'ntrain'", "]", ")", ":", "\n", "        ", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_meanf_train'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "", "opt_meanf_maximizer_np", ",", "opt_meanf_maximum_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'opt_meanf_maximizer'", "]", ",", "\n", "intermediate_tensors", "[", "'opt_meanf_maximum'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "values", "[", "'invKs'", "]", "\n", "}", ")", "\n", "\n", "values", "[", "'opt_meanf_maximizer'", "]", "=", "opt_meanf_maximizer_np", "\n", "values", "[", "'opt_meanf_maximum'", "]", "=", "opt_meanf_maximum_np", "\n", "\n", "\n", "if", "'opt_fsample_maximizer'", "in", "intermediate_tensors", "or", "'opt_fsample_maxima'", "in", "intermediate_tensors", ":", "\n", "\n", "        ", "if", "use_GPU_for_sample_functions", ":", "\n", "# sample functions", "\n", "            ", "print", "(", "\"use GPU to sample functions.\"", ")", "\n", "thetas_np", ",", "Ws_np", ",", "bs_np", "=", "sess", ".", "run", "(", "\n", "[", "intermediate_tensors", "[", "'thetas'", "]", ",", "\n", "intermediate_tensors", "[", "'Ws'", "]", ",", "\n", "intermediate_tensors", "[", "'bs'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"use CPU to sample functions.\"", ")", "\n", "thetas_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", "]", ")", "\n", "Ws_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "xdim", "]", ")", "\n", "bs_np", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmax", ",", "nfeature", ",", "1", "]", ")", "\n", "\n", "for", "hyp_idx", "in", "range", "(", "nhyp", ")", ":", "\n", "                ", "thetas_np", "[", "hyp_idx", ",", "...", "]", ",", "Ws_np", "[", "hyp_idx", ",", "...", "]", ",", "bs_np", "[", "hyp_idx", ",", "...", "]", "=", "optfunc", ".", "draw_random_init_weights_features_np", "(", "\n", "xdim", ",", "nmax", ",", "nfeature", ",", "\n", "X_np", ",", "Y_np", ",", "\n", "ls", "[", "hyp_idx", "]", ",", "sigmas", "[", "hyp_idx", "]", ",", "sigma0s", "[", "hyp_idx", "]", ")", "\n", "\n", "\n", "# optimize functions", "\n", "# assign initial values", "\n", "\n", "", "", "if", "candidate_xs", "[", "'opt_fsample'", "]", "is", "None", ":", "\n", "            ", "print", "(", "\"generate opt_fsample_candidate_xs by combining Xsamples_np with 100 random points\"", ")", "\n", "\n", "rand_candidate_xs_np", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "100", ")", ".", "reshape", "(", "100", ",", "1", ")", "\n", "#np.random.rand(100, xdim) * (xmax - xmin) + xmin", "\n", "\n", "opt_fsample_candidate_xs_np", "=", "np", ".", "concatenate", "(", "[", "rand_candidate_xs_np", ",", "Xsamples_np", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "opt_fsample_candidate_xs_np", "=", "candidate_xs", "[", "'opt_fsample'", "]", "\n", "\n", "", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_fsample_assigns'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", ",", "\n", "required_placeholders", "[", "'opt_fsample_candidate_xs'", "]", ":", "opt_fsample_candidate_xs_np", "\n", "}", ")", "\n", "\n", "for", "xx", "in", "range", "(", "ntrain", ")", ":", "\n", "            ", "sess", ".", "run", "(", "intermediate_tensors", "[", "'opt_fsample_trains'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", "\n", "}", ")", "\n", "\n", "", "opt_fsample_maximizers_np", ",", "opt_fsample_maxima_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'opt_fsample_maximizers'", "]", ",", "\n", "intermediate_tensors", "[", "'opt_fsample_maxima'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'thetas'", "]", ":", "thetas_np", ",", "\n", "required_placeholders", "[", "'Ws'", "]", ":", "Ws_np", ",", "\n", "required_placeholders", "[", "'bs'", "]", ":", "bs_np", "\n", "}", ")", "\n", "\n", "values", "[", "'opt_fsample_maximizers'", "]", "=", "opt_fsample_maximizers_np", "\n", "values", "[", "'opt_fsample_maxima'", "]", "=", "opt_fsample_maxima_np", "\n", "\n", "# optimize acquisition function", "\n", "", "if", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "test_xs_np", "=", "opt_fsample_maximizers_np", "[", "0", ",", "...", "]", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "ntest", "=", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Set test_xs to be opt_fsample_maximizers. ntest = {}\"", ".", "format", "(", "ntest", ")", ")", "\n", "\n", "if", "ntest", "==", "1", ":", "\n", "            ", "print", "(", "\"There not enough distinctive fsample_maximizers. Skip optimizing criterion!\"", ")", "\n", "# the number of distinct opt_fsample_maximizer < batchsize", "\n", "# return the (possibly duplicate) opt_fsample_maximizers", "\n", "values", "[", "'query_x'", "]", "=", "opt_fsample_maximizers_np", "[", "0", ",", ":", "batchsize", ",", ":", "]", "\n", "return", "values", "\n", "\n", "", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", ",", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "test_xs_np", ",", "max_probs_np", ",", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", ",", "post_test_v0", ",", "post_test_v1", "=", "utils", ".", "get_testidxs_stats", "(", "nhyp", ",", "\n", "test_xs_np", ",", "# (ntest, xdim)", "\n", "mean_tests_given_data_np", ",", "# (nhyp, ntest)", "\n", "cov_tests_given_data_np", ",", "# (nhyp, ntest, ntest)", "\n", "mode", "=", "crit_params", "[", "'mode'", "]", ",", "\n", "nsample", "=", "crit_params", "[", "'ntestsample'", "]", ",", "\n", "n_min_sample", "=", "crit_params", "[", "'n_min_sample'", "]", ")", "\n", "\n", "print", "(", "\"Number of test_xs after removing those strongly-correlated. ntest = {}\"", ".", "format", "(", "test_xs_np", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "if", "test_xs_np", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "# values['test_xs'] = test_xs_np", "\n", "# values['max_probs'] = max_probs_np", "\n", "# values['query_x'] = test_xs_np", "\n", "            ", "print", "(", "\"There is only 1 test_xs. Skip optimizing criterion!\"", ")", "\n", "values", "[", "'query_x'", "]", "=", "opt_fsample_maximizers_np", "[", "0", ",", ":", "batchsize", ",", ":", "]", "\n", "return", "values", "\n", "\n", "", "invpNKs_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "values", "[", "'test_xs'", "]", "=", "test_xs_np", "\n", "values", "[", "'max_probs'", "]", "=", "max_probs_np", "\n", "values", "[", "'invpNKs'", "]", "=", "invpNKs_np", "\n", "\n", "if", "criterion", "==", "'sftl'", ":", "\n", "            ", "post_test_samples_np", "=", "post_test_v0", "\n", "post_test_masks_np", "=", "post_test_v1", ".", "astype", "(", "bool", ")", "\n", "\n", "values", "[", "'post_test_samples'", "]", "=", "post_test_samples_np", "\n", "values", "[", "'post_test_masks'", "]", "=", "post_test_masks_np", "\n", "", "elif", "criterion", "in", "[", "'ftl'", "]", ":", "\n", "            ", "post_mean_test_np", "=", "post_test_v0", "\n", "post_cov_test_np", "=", "post_test_v1", "\n", "\n", "values", "[", "'post_mean_tests'", "]", "=", "post_mean_test_np", "\n", "values", "[", "'post_cov_tests'", "]", "=", "post_cov_test_np", "\n", "\n", "", "", "return", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.func_with_2d_input": [[15, 18], ["tensorflow.reshape", "func"], "function", ["None"], ["def", "func_with_2d_input", "(", "func", ",", "x", ",", "xdim", ")", ":", "\n", "    ", "x", "=", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", "\n", "return", "func", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.optimize_continuous_function": [[20, 88], ["tensorflow.random.uniform", "tensorflow.concat", "tensorflow.TensorArray", "tensorflow.while_loop", "tensorflow.squeeze", "tensorflow.math.top_k", "tensorflow.gather", "tensorflow.get_variable", "tensorflow.assign", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.argmax", "tensorflow.gather", "tensorflow.reshape", "tensorflow.gather", "tensorflow.shape", "tf.TensorArray.stack", "func", "multiple_func", "tensorflow.squeeze", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_sum", "tensorflow.clip_by_value", "tf.TensorArray.write", "func"], "function", ["None"], ["", "def", "optimize_continuous_function", "(", "xdim", ",", "func", ",", "\n", "candidate_xs", ",", "top_init_k", ",", "\n", "parallel_iterations", "=", "5", ",", "\n", "xmin", "=", "-", "np", ".", "infty", ",", "\n", "xmax", "=", "np", ".", "infty", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "name", "=", "'optimize_cont_func'", ",", "\n", "debug", "=", "False", ",", "\n", "multiple_func", "=", "None", ")", ":", "\n", "# requires: func's input is a vector of 1d", "\n", "#           func's output is a scalar", "\n", "#   func can receive a vector of 2d", "\n", "#        returns a 1d output", "\n", "\n", "# add top_init_k candidates to make sure", "\n", "# ncandidate > top_init_k", "\n", "    ", "rand_candidate_xs", "=", "tf", ".", "random", ".", "uniform", "(", "shape", "=", "(", "top_init_k", ",", "xdim", ")", ",", "\n", "minval", "=", "xmin", ",", "maxval", "=", "xmax", ",", "dtype", "=", "dtype", ")", "\n", "candidate_xs", "=", "tf", ".", "concat", "(", "[", "candidate_xs", ",", "rand_candidate_xs", "]", ",", "axis", "=", "0", ")", "\n", "\n", "\n", "ncandidate", "=", "tf", ".", "shape", "(", "candidate_xs", ")", "[", "0", "]", "\n", "\n", "candidate_fs_tfarr", "=", "tf", ".", "TensorArray", "(", "dtype", "=", "dtype", ",", "size", "=", "ncandidate", ")", "\n", "\n", "_", ",", "candidate_fs_tfarr", "=", "tf", ".", "while_loop", "(", "\n", "cond", "=", "lambda", "i", ",", "_", ":", "i", "<", "ncandidate", ",", "\n", "body", "=", "lambda", "i", ",", "candidate_fs_tfarr", ":", "(", "\n", "i", "+", "1", ",", "\n", "candidate_fs_tfarr", ".", "write", "(", "i", ",", "func", "(", "candidate_xs", "[", "i", ",", ":", "]", ")", ")", "\n", ")", ",", "\n", "loop_vars", "=", "(", "0", ",", "candidate_fs_tfarr", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "\n", "candidate_fs", "=", "tf", ".", "squeeze", "(", "candidate_fs_tfarr", ".", "stack", "(", ")", ")", "\n", "\n", "_", ",", "top_k_idxs", "=", "tf", ".", "math", ".", "top_k", "(", "candidate_fs", ",", "\n", "k", "=", "top_init_k", ")", "\n", "\n", "top_init_xs", "=", "tf", ".", "gather", "(", "candidate_xs", ",", "top_k_idxs", ")", "\n", "\n", "xs", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "top_init_k", ",", "xdim", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'{}_xs'", ".", "format", "(", "name", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "\n", "assign", "=", "tf", ".", "assign", "(", "xs", ",", "top_init_xs", ")", "\n", "\n", "if", "multiple_func", "is", "None", ":", "\n", "        ", "fs", "=", "func", "(", "xs", ")", "\n", "", "else", ":", "\n", "        ", "fs", "=", "multiple_func", "(", "xs", ")", "\n", "\n", "", "train", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", ".", "minimize", "(", "\n", "-", "tf", ".", "reduce_sum", "(", "fs", ")", ",", "\n", "var_list", "=", "[", "xs", "]", ")", "\n", "\n", "max_idx", "=", "tf", ".", "argmax", "(", "tf", ".", "squeeze", "(", "fs", ")", ")", "\n", "\n", "maximizer", "=", "tf", ".", "gather", "(", "xs", ",", "max_idx", ")", "\n", "maximizer", "=", "tf", ".", "reshape", "(", "maximizer", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "\n", "maximum", "=", "tf", ".", "gather", "(", "fs", ",", "max_idx", ")", "\n", "\n", "if", "debug", ":", "\n", "        ", "return", "assign", ",", "train", ",", "maximizer", ",", "maximum", ",", "xs", ",", "fs", "\n", "\n", "", "return", "assign", ",", "train", ",", "maximizer", ",", "maximum", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_function": [[90, 133], ["range", "tensorflow.reshape", "optfunc.draw_random_init_weights_features", "tf.stack.append", "tf.stack.append", "tf.stack.append", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features"], ["", "def", "sample_function", "(", "\n", "xdim", ",", "n_hyp", ",", "\n", "n_funcs", ",", "n_features", ",", "\n", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "# (nhyp, xdim), (nhyp,), (nhyp,)", "\n", "\n", "Xsamples", ",", "# (nobs, xdim)", "\n", "Ysamples", ",", "# (nobs, 1)", "\n", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "thetas_all", "=", "[", "]", "\n", "Ws_all", "=", "[", "]", "\n", "bs_all", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "thetas", ",", "Ws", ",", "bs", "=", "optfunc", ".", "draw_random_init_weights_features", "(", "\n", "xdim", ",", "n_funcs", ",", "n_features", ",", "\n", "\n", "Xsamples", ",", "\n", "Ysamples", ",", "\n", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'random_features_{}'", ".", "format", "(", "i", ")", ")", "\n", "# thetas.shape = (n_funcs, n_features, 1)", "\n", "# Ws.shape = (n_funcs, n_features, xdim)", "\n", "# bs.shape = (n_funcs, n_features, 1)", "\n", "\n", "thetas_all", ".", "append", "(", "thetas", ")", "\n", "Ws_all", ".", "append", "(", "Ws", ")", "\n", "bs_all", ".", "append", "(", "bs", ")", "\n", "\n", "thetas_all", "=", "tf", ".", "stack", "(", "thetas_all", ")", "\n", "Ws_all", "=", "tf", ".", "stack", "(", "Ws_all", ")", "\n", "bs_all", "=", "tf", ".", "stack", "(", "bs_all", ")", "\n", "\n", "", "return", "thetas_all", ",", "Ws_all", ",", "bs_all", "\n", "# thetas_all.shape = (nhyp, n_funcs, n_features, 1)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.sample_xmaxs_fmaxs": [[138, 253], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.reshape", "tensorflow.TensorArray", "tensorflow.while_loop", "tf.TensorArray.stack", "tensorflow.get_variable", "tensorflow.assign", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.argmax", "range", "tensorflow.stack", "tensorflow.reduce_max", "assigns.append", "trains.append", "tf.stack.append", "tf.stack.append", "tensorflow.stack", "tensorflow.squeeze", "tensorflow.reshape", "tensorflow.math.top_k", "tf.stack.append", "tf.stack.append", "tf.TensorArray.write", "tensorflow.sqrt", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.gather", "tensorflow.sqrt", "tensorflow.matmul", "tensorflow.gather", "tensorflow.clip_by_value", "tensorflow.cos", "tensorflow.cos", "tensorflow.matmul", "tensorflow.matmul"], "function", ["None"], ["", "def", "sample_xmaxs_fmaxs", "(", "\n", "xdim", ",", "n_hyp", ",", "n_funcs", ",", "n_features", ",", "\n", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "thetas_all", ",", "# (nhyp, n_funcs, n_features, 1)", "\n", "Ws_all", ",", "# (nhyp, n_funcs, n_features, xdim)", "\n", "bs_all", ",", "# (nhyp, n_funcs, n_features, 1)", "\n", "\n", "initializers", ",", "# ( n_init, xdim)", "\n", "top_init_k", ",", "# scalar", "\n", "\n", "xmin", ",", "xmax", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "parallel_iterations", "=", "5", ",", "\n", "get_xs", "=", "False", ",", "\n", "name", "=", "'sample_maxs'", ")", ":", "\n", "# Requires: n_init >= top_init_k", "\n", "    ", "assigns", "=", "[", "]", "\n", "trains", "=", "[", "]", "\n", "max_xs", "=", "[", "]", "\n", "max_fs", "=", "[", "]", "\n", "xs_all", "=", "[", "]", "\n", "\n", "n_init", "=", "tf", ".", "shape", "(", "initializers", ")", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "# Find the top k to initialize the optimization", "\n", "top_k_inits_tfarr", "=", "tf", ".", "TensorArray", "(", "dtype", "=", "dtype", ",", "size", "=", "n_funcs", ")", "\n", "\n", "def", "body", "(", "j", ",", "top_k_inits_tfarr", ")", ":", "\n", "            ", "fvals", "=", "tf", ".", "squeeze", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "tf", ".", "matmul", "(", "thetas_all", "[", "i", ",", "j", ",", "...", "]", ",", "\n", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "Ws_all", "[", "i", ",", "j", ",", "...", "]", ",", "\n", "initializers", ",", "\n", "transpose_b", "=", "True", ")", "\n", "+", "bs_all", "[", "i", ",", "j", ",", "...", "]", ")", ",", "\n", "transpose_a", "=", "True", ")", ")", "\n", "fvals", "=", "tf", ".", "reshape", "(", "fvals", ",", "shape", "=", "(", "n_init", ",", ")", ")", "\n", "# (n_init,)", "\n", "\n", "_", ",", "idxs", "=", "tf", ".", "math", ".", "top_k", "(", "fvals", ",", "k", "=", "top_init_k", ")", "\n", "# (top_init_k,)", "\n", "\n", "return", "j", "+", "1", ",", "top_k_inits_tfarr", ".", "write", "(", "j", ",", "\n", "tf", ".", "gather", "(", "initializers", ",", "idxs", ")", ")", "\n", "\n", "", "_", ",", "top_k_inits_tfarr", "=", "tf", ".", "while_loop", "(", "\n", "cond", "=", "lambda", "j", ",", "_", ":", "j", "<", "n_funcs", ",", "\n", "body", "=", "body", ",", "\n", "loop_vars", "=", "(", "0", ",", "top_k_inits_tfarr", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "top_k_inits", "=", "top_k_inits_tfarr", ".", "stack", "(", ")", "\n", "# (n_funcs, top_init_k, xdim)", "\n", "\n", "# Optimize function samples", "\n", "name", "=", "'{}_{}'", ".", "format", "(", "name", ",", "i", ")", "\n", "\n", "xs", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "n_funcs", ",", "top_init_k", ",", "xdim", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "name", "=", "'{}_xs'", ".", "format", "(", "name", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "\n", "assign", "=", "tf", ".", "assign", "(", "xs", ",", "top_k_inits", ")", "\n", "\n", "fvals", "=", "tf", ".", "reshape", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "tf", ".", "matmul", "(", "thetas_all", "[", "i", ",", "...", "]", ",", "\n", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "Ws_all", "[", "i", ",", "...", "]", ",", "\n", "xs", ",", "\n", "transpose_b", "=", "True", ")", "\n", "+", "bs_all", "[", "i", ",", "...", "]", ")", ",", "\n", "transpose_a", "=", "True", ")", ",", "\n", "shape", "=", "(", "n_funcs", ",", "top_init_k", ")", ")", "\n", "# (n_funcs, top_init_k)", "\n", "\n", "sum_fvals", "=", "tf", ".", "reduce_sum", "(", "fvals", ")", "\n", "# scalar", "\n", "\n", "train", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", ".", "minimize", "(", "-", "sum_fvals", ",", "var_list", "=", "[", "xs", "]", ")", "\n", "\n", "idx", "=", "tf", ".", "argmax", "(", "fvals", ",", "axis", "=", "1", ")", "\n", "# (n_funcs,)", "\n", "\n", "max_x", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "max_x", ".", "append", "(", "tf", ".", "gather", "(", "xs", "[", "j", ",", "...", "]", ",", "idx", "[", "j", "]", ")", ")", "\n", "", "max_x", "=", "tf", ".", "stack", "(", "max_x", ")", "\n", "# (n_funcs, xdim)", "\n", "\n", "max_f", "=", "tf", ".", "reduce_max", "(", "fvals", ",", "axis", "=", "1", ")", "\n", "# (n_funcs,)", "\n", "\n", "assigns", ".", "append", "(", "assign", ")", "\n", "trains", ".", "append", "(", "train", ")", "\n", "max_xs", ".", "append", "(", "max_x", ")", "\n", "max_fs", ".", "append", "(", "max_f", ")", "\n", "\n", "if", "get_xs", ":", "\n", "            ", "xs_all", ".", "append", "(", "xs", ")", "\n", "\n", "", "", "max_xs", "=", "tf", ".", "stack", "(", "max_xs", ")", "\n", "# (nhyp, n_funcs, xdim)", "\n", "max_fs", "=", "tf", ".", "stack", "(", "max_fs", ")", "\n", "# (nhyp, n_funcs)", "\n", "\n", "if", "get_xs", ":", "\n", "        ", "xs_all", "=", "tf", ".", "stack", "(", "xs_all", ")", "\n", "# (nhyp, n_funcs, top_init_k, xdim)", "\n", "return", "assigns", ",", "trains", ",", "max_xs", ",", "max_fs", ",", "xs_all", "\n", "\n", "", "return", "assigns", ",", "trains", ",", "max_xs", ",", "max_fs", "\n", "# list of nhyp elements", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils_for_continuous.get_function_samples": [[257, 296], ["range", "tensorflow.reshape", "tensorflow.reshape", "fvals_all.append", "tensorflow.sqrt", "tensorflow.matmul", "tensorflow.cos", "tensorflow.matmul", "tensorflow.tile", "tensorflow.expand_dims"], "function", ["None"], ["", "def", "get_function_samples", "(", "xs", ",", "# (nx, xdim)", "\n", "xdim", ",", "n_hyp", ",", "n_funcs", ",", "n_features", ",", "\n", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "thetas_all", ",", "# (nhyp, n_funcs, n_features, 1)", "\n", "Ws_all", ",", "# (nhyp, n_funcs, n_features, xdim)", "\n", "bs_all", ",", "# (nhyp, n_funcs, n_features, 1)", "\n", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "fvals_all", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "# Find the top k to initialize the optimization", "\n", "top_k_inits", "=", "[", "]", "\n", "\n", "fvals", "=", "tf", ".", "reshape", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "tf", ".", "matmul", "(", "thetas_all", "[", "i", ",", "...", "]", ",", "\n", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "Ws_all", "[", "i", ",", "...", "]", ",", "\n", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "\n", "xs", ",", "\n", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "n_funcs", ",", "1", ",", "1", ")", "\n", ")", ",", "\n", "transpose_b", "=", "True", ")", "\n", "+", "bs_all", "[", "i", ",", "...", "]", ")", ",", "\n", "transpose_a", "=", "True", ")", ",", "\n", "shape", "=", "(", "n_funcs", ",", "-", "1", ")", ")", "\n", "# (n_funcs, nx)", "\n", "\n", "fvals_all", ".", "append", "(", "fvals", ")", "\n", "\n", "", "return", "fvals_all", "\n", "# (nhyp, n_funcs, nx)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.__init__": [[805, 841], ["keras.datasets.cifar10.load_data", "x_train.astype.astype.astype", "x_test.astype.astype.astype", "keras.utils.to_categorical", "keras.utils.to_categorical", "tensorflow.ConfigProto"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "xdim", ",", "xmin", ",", "xmax", ",", "xs", ",", "seed_value", "=", "0", ")", ":", "\n", "        ", "self", ".", "xdim", "=", "xdim", "\n", "self", ".", "xmin", "=", "xmin", "\n", "self", ".", "xmax", "=", "xmax", "\n", "self", ".", "xs", "=", "xs", "\n", "self", ".", "seed_value", "=", "seed_value", "\n", "\n", "self", ".", "range", "=", "{", "\"batch_size\"", ":", "[", "16", ",", "512", "]", ",", "\n", "\"learning_rate\"", ":", "[", "1e-7", ",", "1e-1", "]", ",", "\n", "\"learning_rate_decay\"", ":", "[", "1e-7", ",", "1e-3", "]", ",", "\n", "\"l2_regular\"", ":", "[", "1e-7", ",", "1e-3", "]", ",", "\n", "\"conv_filters\"", ":", "[", "6", ",", "256", "]", ",", "\n", "\"dense_units\"", ":", "[", "128", ",", "2048", "]", ",", "\n", "\"dropout_rate\"", ":", "[", "0", ",", "0.75", "]", "}", "\n", "\n", "self", ".", "params", "=", "{", "\"batch_size\"", ":", "32", ",", "\n", "\"learning_rate\"", ":", "1e-7", ",", "\n", "\"learning_rate_decay\"", ":", "1e-7", ",", "\n", "\"l2_regular\"", ":", "1e-7", ",", "\n", "\"conv_filters\"", ":", "128", ",", "\n", "\"dense_units\"", ":", "256", ",", "\n", "\"dropout_rate\"", ":", "0.25", "}", "\n", "\n", "#### load the CIFAR-10 dataset", "\n", "num_classes", "=", "10", "\n", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "cifar10", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", ".", "astype", "(", "'float32'", ")", "\n", "x_test", "=", "x_test", ".", "astype", "(", "'float32'", ")", "\n", "self", ".", "x_train", "=", "x_train", "/", "255", "\n", "self", ".", "x_test", "=", "x_test", "/", "255", "\n", "self", ".", "y_train", "=", "keras", ".", "utils", ".", "to_categorical", "(", "y_train", ",", "num_classes", ")", "\n", "self", ".", "y_test", "=", "keras", ".", "utils", ".", "to_categorical", "(", "y_test", ",", "num_classes", ")", "\n", "\n", "# self.graph = self.build_graph(seed_value=seed_value)", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.convert": [[842, 849], ["int"], "methods", ["None"], ["", "def", "convert", "(", "self", ",", "param_val", ",", "param_type", ")", ":", "\n", "        ", "converted_val", "=", "param_val", "*", "(", "self", ".", "range", "[", "param_type", "]", "[", "1", "]", "-", "self", ".", "range", "[", "param_type", "]", "[", "0", "]", ")", "+", "self", ".", "range", "[", "param_type", "]", "[", "0", "]", "\n", "\n", "if", "param_type", "in", "[", "\"batch_size\"", ",", "\"conv_filters\"", ",", "\"dense_units\"", "]", ":", "\n", "            ", "converted_val", "=", "int", "(", "converted_val", ")", "\n", "\n", "", "return", "converted_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.build_graph": [[850, 930], ["tensorflow.Graph", "functions.set_global_determinism", "tensorflow.Graph.as_default", "tensorflow.argmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.argmax", "tensorflow.cast", "tensorflow.train.AdamOptimizer", "tensorflow.compat.v1.glorot_uniform_initializer", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2", "tensorflow.compat.v1.glorot_uniform_initializer", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2", "tensorflow.compat.v1.glorot_uniform_initializer", "tensorflow.compat.v1.glorot_uniform_initializer"], "methods", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.set_global_determinism"], ["", "def", "build_graph", "(", "self", ",", "seed_value", "=", "0", ")", ":", "\n", "### The tensorflow model of CNN is built below", "\n", "        ", "_IMAGE_SIZE", "=", "32", "\n", "_IMAGE_CHANNELS", "=", "3", "\n", "_NUM_CLASSES", "=", "10", "\n", "\n", "graph", "=", "tf", ".", "Graph", "(", ")", "\n", "set_global_determinism", "(", "seed_value", "=", "seed_value", ")", "\n", "\n", "with", "graph", ".", "as_default", "(", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "'main_params'", ")", ":", "\n", "                ", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_IMAGE_SIZE", ",", "_IMAGE_SIZE", ",", "_IMAGE_CHANNELS", "]", ",", "name", "=", "'Input'", ")", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "_NUM_CLASSES", "]", ",", "name", "=", "'Output'", ")", "\n", "x_image", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "_IMAGE_SIZE", ",", "_IMAGE_SIZE", ",", "_IMAGE_CHANNELS", "]", ",", "name", "=", "'images'", ")", "\n", "\n", "global_step", "=", "tf", ".", "Variable", "(", "initial_value", "=", "0", ",", "trainable", "=", "False", ",", "name", "=", "'global_step'", ")", "\n", "learning_rate_placeholder", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "]", ",", "name", "=", "'learning_rate'", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'conv1'", ")", "as", "scope", ":", "\n", "                ", "conv", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "inputs", "=", "x_image", ",", "\n", "filters", "=", "self", ".", "params", "[", "'conv_filters'", "]", ",", "\n", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "glorot_uniform_initializer", "(", "seed", "=", "seed_value", ")", ",", "\n", "bias_initializer", "=", "'zero'", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", "bias_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", "activity_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", ")", "\n", "pool", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "conv", ",", "pool_size", "=", "[", "2", ",", "2", "]", ",", "strides", "=", "2", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "conv", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "inputs", "=", "pool", ",", "\n", "filters", "=", "self", ".", "params", "[", "'conv_filters'", "]", ",", "\n", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "glorot_uniform_initializer", "(", "seed", "=", "seed_value", ")", ",", "\n", "bias_initializer", "=", "'zero'", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", "bias_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", "activity_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "self", ".", "params", "[", "'l2_regular'", "]", ")", ",", "\n", ")", "\n", "pool", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "conv", ",", "pool_size", "=", "[", "2", ",", "2", "]", ",", "strides", "=", "2", ",", "padding", "=", "'SAME'", ")", "\n", "drop", "=", "tf", ".", "layers", ".", "dropout", "(", "pool", ",", "rate", "=", "self", ".", "params", "[", "'dropout_rate'", "]", ",", "name", "=", "scope", ".", "name", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'fully_connected'", ")", "as", "scope", ":", "\n", "                ", "flat", "=", "tf", ".", "reshape", "(", "drop", ",", "[", "-", "1", ",", "8", "*", "8", "*", "self", ".", "params", "[", "'conv_filters'", "]", "]", ")", "\n", "\n", "fc", "=", "tf", ".", "layers", ".", "dense", "(", "inputs", "=", "flat", ",", "units", "=", "self", ".", "params", "[", "'dense_units'", "]", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "glorot_uniform_initializer", "(", "seed", "=", "seed_value", ")", ",", "\n", "bias_initializer", "=", "'zero'", "\n", ")", "\n", "drop", "=", "tf", ".", "layers", ".", "dropout", "(", "fc", ",", "rate", "=", "self", ".", "params", "[", "'dropout_rate'", "]", ",", "name", "=", "scope", ".", "name", ")", "\n", "softmax", "=", "tf", ".", "layers", ".", "dense", "(", "inputs", "=", "drop", ",", "units", "=", "_NUM_CLASSES", ",", "name", "=", "scope", ".", "name", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "glorot_uniform_initializer", "(", "seed", "=", "seed_value", ")", ",", "\n", "bias_initializer", "=", "'zero'", "\n", ")", "\n", "\n", "", "self", ".", "y_pred_cls", "=", "tf", ".", "argmax", "(", "softmax", ",", "axis", "=", "1", ",", "name", "=", "'y_pred_cls'", ")", "\n", "\n", "# LOSS AND OPTIMIZER", "\n", "self", ".", "loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits_v2", "(", "logits", "=", "softmax", ",", "labels", "=", "y", ")", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate_placeholder", ",", "\n", "beta1", "=", "0.9", ",", "\n", "beta2", "=", "0.999", ",", "\n", "epsilon", "=", "1e-08", ")", ".", "minimize", "(", "self", ".", "loss", ",", "\n", "global_step", "=", "global_step", ",", "\n", "name", "=", "'optimizer'", ")", "\n", "\n", "# PREDICTION AND ACCURACY CALCULATION", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "self", ".", "y_pred_cls", ",", "tf", ".", "argmax", "(", "y", ",", "axis", "=", "1", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "# Initialize the variables (i.e. assign their default value)", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "\n", "", "return", "graph", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.evaluate": [[931, 990], ["range", "print", "functions.CNN_CIFAR_10.build_graph", "len", "functions.CNN_CIFAR_10.convert", "tensorflow.Session", "sess.run", "range", "int", "range", "numpy.zeros", "numpy.zeros", "correct.mean", "val_epochs.append", "math.ceil", "time.time", "sess.run", "len", "min", "sess.run", "numpy.argmax", "numpy.argmax", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.build_graph", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.convert"], ["", "def", "evaluate", "(", "self", ",", "param", ",", "N", "=", "20", ")", ":", "\n", "        ", "'''\n            param: parameters\n            N: the maximum number of epochs\n        '''", "\n", "\n", "training_epochs", "=", "N", "\n", "\n", "param_types", "=", "[", "\"batch_size\"", ",", "\"learning_rate\"", ",", "\"learning_rate_decay\"", ",", "\"l2_regular\"", ",", "\"conv_filters\"", ",", "\n", "\"dense_units\"", ",", "\"dropout_rate\"", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "param_types", ")", ")", ":", "\n", "            ", "self", ".", "params", "[", "param_types", "[", "i", "]", "]", "=", "self", ".", "convert", "(", "param", "[", "i", "]", ",", "param_types", "[", "i", "]", ")", "\n", "\n", "", "print", "(", "self", ".", "params", ")", "\n", "\n", "graph", "=", "self", ".", "build_graph", "(", ")", "\n", "\n", "with", "tf", ".", "Session", "(", "graph", "=", "graph", ",", "config", "=", "self", ".", "config", ")", "as", "sess", ":", "\n", "# Run the initializer", "\n", "            ", "sess", ".", "run", "(", "self", ".", "init", ")", "\n", "\n", "val_epochs", "=", "[", "]", "\n", "\n", "for", "epoch", "in", "range", "(", "training_epochs", ")", ":", "\n", "                ", "total_batch", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "self", ".", "x_train", ")", "/", "self", ".", "params", "[", "'batch_size'", "]", ")", ")", "\n", "\n", "lr", "=", "self", ".", "params", "[", "'learning_rate'", "]", "*", "(", "1.", "/", "(", "1.", "+", "self", ".", "params", "[", "'learning_rate_decay'", "]", "*", "epoch", ")", ")", "\n", "\n", "for", "s", "in", "range", "(", "total_batch", ")", ":", "\n", "                    ", "batch_xs", "=", "self", ".", "x_train", "[", "s", "*", "self", ".", "params", "[", "'batch_size'", "]", ":", "(", "s", "+", "1", ")", "*", "self", ".", "params", "[", "'batch_size'", "]", "]", "\n", "batch_ys", "=", "self", ".", "y_train", "[", "s", "*", "self", ".", "params", "[", "'batch_size'", "]", ":", "(", "s", "+", "1", ")", "*", "self", ".", "params", "[", "'batch_size'", "]", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "i_global", ",", "_", ",", "batch_loss", ",", "batch_acc", "=", "sess", ".", "run", "(", "\n", "[", "'main_params/global_step'", ",", "'optimizer'", ",", "self", ".", "loss", ",", "self", ".", "accuracy", "]", ",", "\n", "feed_dict", "=", "{", "'main_params/Input:0'", ":", "batch_xs", ",", "\n", "'main_params/Output:0'", ":", "batch_ys", ",", "\n", "'main_params/learning_rate:0'", ":", "lr", "}", ")", "\n", "\n", "", "i", "=", "0", "\n", "predicted_class", "=", "np", ".", "zeros", "(", "shape", "=", "len", "(", "self", ".", "x_test", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "while", "i", "<", "len", "(", "self", ".", "x_test", ")", ":", "\n", "                    ", "j", "=", "min", "(", "i", "+", "self", ".", "params", "[", "'batch_size'", "]", ",", "len", "(", "self", ".", "x_test", ")", ")", "\n", "batch_xs", "=", "self", ".", "x_test", "[", "i", ":", "j", ",", ":", "]", "\n", "batch_ys", "=", "self", ".", "y_test", "[", "i", ":", "j", ",", ":", "]", "\n", "predicted_class", "[", "i", ":", "j", "]", "=", "sess", ".", "run", "(", "\n", "self", ".", "y_pred_cls", ",", "\n", "feed_dict", "=", "{", "'main_params/Input:0'", ":", "batch_xs", ",", "\n", "'main_params/Output:0'", ":", "batch_ys", ",", "\n", "'main_params/learning_rate:0'", ":", "lr", "}", "\n", ")", "\n", "i", "=", "j", "\n", "\n", "", "correct", "=", "(", "np", ".", "argmax", "(", "self", ".", "y_test", ",", "axis", "=", "1", ")", "==", "predicted_class", ")", "\n", "acc", "=", "correct", ".", "mean", "(", ")", "\n", "val_epochs", ".", "append", "(", "acc", ")", "\n", "# print(\"ACC: {}\".format(acc))", "\n", "\n", "", "", "return", "val_epochs", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.maximize_func": [[71, 98], ["negf().reshape", "xs[].reshape", "scipy.minimize", "scopt.minimize.x.squeeze", "scipy.minimize", "scopt.minimize.x.squeeze", "print", "print", "functions.func_gp_prior.f", "negf", "x.reshape", "numpy.argmax"], "function", ["None"], ["def", "maximize_func", "(", "xdim", ",", "f", ",", "xs", ",", "xmin", ",", "xmax", ")", ":", "\n", "\n", "    ", "negf", "=", "lambda", "x", ":", "-", "f", "(", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", ")", "\n", "fs", "=", "negf", "(", "xs", ")", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "x0", "=", "xs", "[", "np", ".", "argmax", "(", "-", "fs", ")", "]", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "\n", "res", "=", "scopt", ".", "minimize", "(", "fun", "=", "negf", ",", "\n", "x0", "=", "x0", ",", "\n", "method", "=", "'L-BFGS-B'", ",", "\n", "bounds", "=", "[", "(", "xmin", ",", "xmax", ")", "]", "*", "xdim", ")", "\n", "\n", "maximum", "=", "-", "res", ".", "fun", "\n", "maximizer", "=", "res", ".", "x", ".", "squeeze", "(", ")", "\n", "\n", "res", "=", "scopt", ".", "minimize", "(", "fun", "=", "f", ",", "\n", "x0", "=", "x0", ",", "\n", "method", "=", "'L-BFGS-B'", ",", "\n", "bounds", "=", "[", "(", "xmin", ",", "xmax", ")", "]", "*", "xdim", ")", "\n", "\n", "minimum", "=", "res", ".", "fun", "\n", "minimizer", "=", "res", ".", "x", ".", "squeeze", "(", ")", "\n", "\n", "print", "(", "\"maximum value: {} at {}\"", ".", "format", "(", "maximum", ",", "maximizer", ")", ")", "\n", "print", "(", "\"minimum value: {} at {}\"", ".", "format", "(", "minimum", ",", "minimizer", ")", ")", "\n", "\n", "return", "maximizer", ",", "maximum", ",", "minimizer", ",", "minimum", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_gphyp_gpy": [[100, 133], ["GPy.kern.RBF", "GPy.mappings.Constant", "GPy.models.GPRegression.optimize", "GPy.models.GPRegression", "Exception", "numpy.ones", "GPy.models.GPRegression", "GPy.models.GPRegression.Gaussian_noise.variance.fix", "Exception"], "function", ["None"], ["", "def", "get_gphyp_gpy", "(", "X", ",", "Y", ",", "noise_var", "=", "None", ",", "train_noise_var", "=", "True", ",", "max_iters", "=", "500", ")", ":", "\n", "# use gpflow to get the hyperparameters for the function", "\n", "\n", "    ", "try", ":", "\n", "        ", "import", "GPy", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Requires gpflow!\"", ")", "\n", "\n", "", "xdim", "=", "X", ".", "shape", "[", "1", "]", "\n", "\n", "kernel", "=", "GPy", ".", "kern", ".", "RBF", "(", "input_dim", "=", "xdim", ",", "variance", "=", "1.", ",", "lengthscale", "=", "np", ".", "ones", "(", "xdim", ")", ",", "ARD", "=", "True", ")", "\n", "meanf", "=", "GPy", ".", "mappings", ".", "Constant", "(", "input_dim", "=", "xdim", ",", "output_dim", "=", "1", ",", "value", "=", "0.0", ")", "\n", "\n", "if", "train_noise_var", ":", "\n", "        ", "m", "=", "GPy", ".", "models", ".", "GPRegression", "(", "X", ",", "Y", ",", "kernel", "=", "kernel", ",", "mean_function", "=", "meanf", ")", "\n", "", "elif", "noise_var", "is", "not", "None", ":", "\n", "        ", "m", "=", "GPy", ".", "models", ".", "GPRegression", "(", "X", ",", "Y", ",", "kernel", "=", "kernel", ",", "mean_function", "=", "meanf", ",", "noise_var", "=", "noise_var", ")", "\n", "m", ".", "Gaussian_noise", ".", "variance", ".", "fix", "(", ")", "# unfix()", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"functions.py get_gphyp_gpy:Require noise variance!\"", ")", "\n", "\n", "", "m", ".", "optimize", "(", "max_iters", "=", "max_iters", ")", "\n", "\n", "gpy_lscale", "=", "m", ".", "rbf", ".", "lengthscale", ".", "values", "\n", "gpy_signal_var", "=", "m", ".", "rbf", ".", "variance", ".", "values", "\n", "lscale", "=", "1.0", "/", "(", "gpy_lscale", "*", "gpy_lscale", ")", "\n", "mean_f_const", "=", "m", ".", "constmap", ".", "C", ".", "values", "\n", "\n", "# print(\"Mean: {}\".format(mean_f_const))", "\n", "# print(\"Kernel: sigvar {}, lscale {}\".format(gpy_signal_var, lscale))", "\n", "# print(\"Gaussian_noise variance: {}\".format(m.Gaussian_noise.variance.values))", "\n", "\n", "return", "mean_f_const", ",", "gpy_signal_var", ",", "lscale", ",", "m", ".", "Gaussian_noise", ".", "variance", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid": [[135, 142], ["numpy.linspace", "numpy.meshgrid", "numpy.concatenate", "xd.reshape"], "function", ["None"], ["", "def", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "nx", ",", "xdim", ")", ":", "\n", "    ", "x1d", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "nx", ")", "\n", "vals", "=", "[", "x1d", "]", "*", "xdim", "\n", "xds", "=", "np", ".", "meshgrid", "(", "*", "vals", ")", "\n", "\n", "xs", "=", "np", ".", "concatenate", "(", "[", "xd", ".", "reshape", "(", "-", "1", ",", "1", ")", "for", "xd", "in", "xds", "]", ",", "axis", "=", "1", ")", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_info": [[145, 151], ["globals"], "function", ["None"], ["", "def", "get_info", "(", "func_name", ")", ":", "\n", "    ", "f_info", "=", "globals", "(", ")", "[", "func_name", "]", "(", ")", "\n", "\n", "return", "f_info", "[", "'xdim'", "]", ",", "f_info", "[", "'xmin'", "]", ",", "f_info", "[", "'xmax'", "]", ",", "f_info", "[", "'xs'", "]", ",", "f_info", "[", "'noise.variance'", "]", ",", "f_info", "[", "'RBF.variance'", "]", ",", "f_info", "[", "'RBF.lengthscale'", "]", ",", "f_info", "[", "'maximizer'", "]", ",", "f_info", "[", "'maximum'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.call_func": [[153, 161], ["numpy.array().reshape", "f().squeeze", "globals", "numpy.array", "numpy.random.randn", "numpy.exp", "functions.func_gp_prior.f"], "function", ["None"], ["", "def", "call_func", "(", "x", ",", "func_name", ",", "log_noise_std", ")", ":", "\n", "    ", "f_info", "=", "globals", "(", ")", "[", "func_name", "]", "(", ")", "#func_1d_4modes()", "\n", "f", "=", "f_info", "[", "'function'", "]", "\n", "xdim", "=", "f_info", "[", "'xdim'", "]", "\n", "\n", "x", "=", "np", ".", "array", "(", "x", ")", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "n", "=", "x", ".", "shape", "[", "0", "]", "\n", "return", "f", "(", "x", ")", ".", "squeeze", "(", ")", "+", "np", ".", "random", ".", "randn", "(", "n", ")", "*", "np", ".", "exp", "(", "log_noise_std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior": [[163, 178], ["numpy.random.seed", "numpy.random.randn", "numpy.ones", "numpy.random.randn", "numpy.tile", "numpy.random.rand", "x.reshape.reshape", "np.random.randn.T.dot().dot().squeeze", "numpy.sqrt", "np.random.randn.T.dot().dot", "numpy.cos", "np.random.randn.T.dot", "numpy.sqrt", "W.dot", "numpy.tile"], "function", ["None"], ["", "def", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "n_feats", "=", "10000", "\n", "l", "=", "np", ".", "ones", "(", "[", "1", ",", "xdim", "]", ")", "*", "l", "\n", "W", "=", "np", ".", "random", ".", "randn", "(", "n_feats", ",", "xdim", ")", "*", "np", ".", "tile", "(", "np", ".", "sqrt", "(", "l", ")", ",", "(", "n_feats", ",", "1", ")", ")", "\n", "b", "=", "2.", "*", "np", ".", "pi", "*", "np", ".", "random", ".", "rand", "(", "n_feats", ",", "1", ")", "\n", "theta", "=", "np", ".", "random", ".", "randn", "(", "n_feats", ",", "1", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "return", "(", "theta", ".", "T", ".", "dot", "(", "np", ".", "sqrt", "(", "2.", "*", "sigma", "/", "n_feats", ")", ")", ".", "dot", "(", "np", ".", "cos", "(", "W", ".", "dot", "(", "x", ".", "T", ")", "\n", "+", "np", ".", "tile", "(", "b", ",", "(", "1", ",", "x", ".", "shape", "[", "0", "]", ")", ")", ")", ")", ")", ".", "squeeze", "(", ")", "\n", "\n", "", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_1d_8modes": [[180, 202], ["numpy.linspace().reshape", "functions.func_gp_prior", "numpy.array", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior"], ["", "def", "func_1d_8modes", "(", ")", ":", "\n", "    ", "xdim", "=", "1", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "10.", "\n", "seed", "=", "1", "\n", "l", "=", "10.0", "\n", "sigma", "=", "2.0", "\n", "\n", "xs", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "400", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "f", "=", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", "\n", "\n", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "# 2.1892,", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "l", "]", ")", ",", "# 9.49,", "\n", "'maximizer'", ":", "0.796431278", ",", "\n", "'maximum'", ":", "1.95724434", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_1d_4modes": [[204, 225], ["numpy.linspace().reshape", "functions.func_gp_prior", "numpy.array", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior"], ["", "def", "func_1d_4modes", "(", ")", ":", "\n", "    ", "xdim", "=", "1", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "10.", "\n", "seed", "=", "1", "\n", "l", "=", "1.0", "\n", "sigma", "=", "2.0", "\n", "\n", "xs", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "400", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "f", "=", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", "\n", "\n", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "# 3.5855", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "l", "]", ")", ",", "# 0.8121", "\n", "'maximizer'", ":", "2.518537", ",", "\n", "'maximum'", ":", "1.95724434", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_2d_smallls": [[227, 249], ["functions.get_meshgrid", "functions.func_gp_prior", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior"], ["", "def", "func_2d_smallls", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "10.", "\n", "seed", "=", "1", "\n", "l", "=", "4.0", "\n", "sigma", "=", "2.0", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "70", ",", "xdim", ")", "\n", "\n", "f", "=", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", "\n", "\n", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "l", "]", "*", "xdim", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "1.812655", ",", "8.882240", "]", ")", ",", "\n", "'maximum'", ":", "4.243544687", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_2d_largels": [[251, 273], ["functions.get_meshgrid", "functions.func_gp_prior", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior"], ["", "def", "func_2d_largels", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "10.", "\n", "seed", "=", "1", "\n", "l", "=", "1.0", "\n", "sigma", "=", "2.0", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "50", ",", "xdim", ")", "\n", "\n", "f", "=", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", "\n", "\n", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "l", "]", "*", "xdim", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "10.", ",", "3.02511199", "]", ")", ",", "\n", "'maximum'", ":", "3.500", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_3d_largels": [[275, 297], ["functions.get_meshgrid", "functions.func_gp_prior", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.func_gp_prior"], ["", "def", "func_3d_largels", "(", ")", ":", "\n", "    ", "xdim", "=", "3", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "5.", "\n", "seed", "=", "1", "\n", "l", "=", "1.0", "\n", "sigma", "=", "2.0", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "10", ",", "xdim", ")", "\n", "\n", "f", "=", "func_gp_prior", "(", "xdim", ",", "l", ",", "sigma", ",", "seed", ")", "\n", "\n", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "l", "]", "*", "xdim", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "2.09414372", ",", "0.", ",", "1.86934563", "]", ")", ",", "\n", "'maximum'", ":", "3.354097574", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.log10K": [[299, 331], ["numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "functions.get_meshgrid", "x.reshape.reshape", "utils.compute_mean_f_np", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f_np"], ["", "def", "log10K", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "\n", "name", "=", "'log10K'", "\n", "X", "=", "np", ".", "loadtxt", "(", "'pHdata/X_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "Y", "=", "np", ".", "loadtxt", "(", "'pHdata/Y_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "hypers", "=", "np", ".", "loadtxt", "(", "'pHdata/hyperparameters_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "\n", "sigma", "=", "hypers", "[", "0", "]", "\n", "lengthscales", "=", "hypers", "[", "1", ":", "3", "]", "\n", "sigma0", "=", "hypers", "[", "3", "]", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "20", ",", "xdim", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "\n", "vals", "=", "utils", ".", "compute_mean_f_np", "(", "x", ",", "X", ",", "Y", ",", "lengthscales", ",", "sigma", ",", "sigma0", ")", "\n", "return", "vals", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "sigma0", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "lengthscales", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.43437075", ",", "0.68692362", "]", ")", ",", "\n", "'maximum'", ":", "0.33465834", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.log10P": [[333, 365], ["numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "functions.get_meshgrid", "x.reshape.reshape", "utils.compute_mean_f_np", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f_np"], ["", "def", "log10P", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "\n", "name", "=", "'log10P'", "\n", "X", "=", "np", ".", "loadtxt", "(", "'pHdata/X_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "Y", "=", "np", ".", "loadtxt", "(", "'pHdata/Y_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "hypers", "=", "np", ".", "loadtxt", "(", "'pHdata/hyperparameters_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "\n", "sigma", "=", "hypers", "[", "0", "]", "\n", "lengthscales", "=", "hypers", "[", "1", ":", "3", "]", "\n", "sigma0", "=", "hypers", "[", "3", "]", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "20", ",", "xdim", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "\n", "vals", "=", "utils", ".", "compute_mean_f_np", "(", "x", ",", "X", ",", "Y", ",", "lengthscales", ",", "sigma", ",", "sigma0", ")", "\n", "return", "vals", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "sigma0", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "lengthscales", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.68527863", ",", "0.06831491", "]", ")", ",", "\n", "'maximum'", ":", "1.09202265", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.pH": [[367, 399], ["numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "functions.get_meshgrid", "x.reshape.reshape", "utils.compute_mean_f_np", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f_np"], ["", "def", "pH", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "\n", "name", "=", "'pH'", "\n", "X", "=", "np", ".", "loadtxt", "(", "'pHdata/X_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "Y", "=", "np", ".", "loadtxt", "(", "'pHdata/Y_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "hypers", "=", "np", ".", "loadtxt", "(", "'pHdata/hyperparameters_{}.txt'", ".", "format", "(", "name", ")", ")", "\n", "\n", "sigma", "=", "hypers", "[", "0", "]", "\n", "lengthscales", "=", "hypers", "[", "1", ":", "3", "]", "\n", "sigma0", "=", "hypers", "[", "3", "]", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "20", ",", "xdim", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "\n", "vals", "=", "utils", ".", "compute_mean_f_np", "(", "x", ",", "X", ",", "Y", ",", "lengthscales", ",", "sigma", ",", "sigma0", ")", "\n", "return", "vals", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "sigma0", ",", "\n", "'RBF.variance'", ":", "sigma", ",", "\n", "'RBF.lengthscale'", ":", "lengthscales", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.18600983", ",", "0.17848398", "]", ")", ",", "\n", "'maximum'", ":", "0.73425606", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_hartmann3d": [[401, 447], ["functions.get_meshgrid", "numpy.array", "numpy.array", "numpy.array", "numpy.tile", "numpy.sum", "numpy.array", "numpy.array", "np.tile.reshape", "numpy.exp", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_hartmann3d", "(", ")", ":", "\n", "# xdim = 3", "\n", "# range: (0,1) for all dimensions", "\n", "# global maximum: -3.86278 at (0.114614, 0.555649, 0.852547)", "\n", "    ", "xdim", "=", "3", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "# maximum = 3.86277979", "\n", "# minimum = 0.00027354", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "10", ",", "xdim", ")", "\n", "# xs = np.random.rand(2000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "A", "=", "np", ".", "array", "(", "[", "\n", "[", "3.", ",", "10.", ",", "30.", "]", ",", "\n", "[", "0.1", ",", "10.", ",", "35.", "]", ",", "\n", "[", "3.", ",", "10.", ",", "30.", "]", ",", "\n", "[", "0.1", ",", "10.", ",", "35.", "]", "\n", "]", ")", "\n", "\n", "alpha", "=", "np", ".", "array", "(", "[", "1.", ",", "1.2", ",", "3.", ",", "3.2", "]", ")", "\n", "\n", "P", "=", "1e-4", "*", "np", ".", "array", "(", "[", "\n", "[", "3689.", ",", "1170.", ",", "2673.", "]", ",", "\n", "[", "4699.", ",", "4387.", ",", "7470.", "]", ",", "\n", "[", "1091.", ",", "8732.", ",", "5547.", "]", ",", "\n", "[", "381.", ",", "5743.", ",", "8828.", "]", "\n", "]", ")", "\n", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "tile", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ",", "xdim", ")", ",", "reps", "=", "(", "1", ",", "4", ",", "1", ")", ")", "\n", "val", "=", "np", ".", "sum", "(", "alpha", "*", "np", ".", "exp", "(", "-", "np", ".", "sum", "(", "A", "*", "(", "x", "-", "P", ")", "**", "2", ",", "axis", "=", "2", ")", ")", ",", "axis", "=", "1", ")", "\n", "# val = (val - minimum) / (maximum - minimum) * 2.0 - 1.0", "\n", "return", "val", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "0.5222", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "2.0945", ",", "10.4904", ",", "32.5504", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.11458923", ",", "0.55564889", ",", "0.85254695", "]", ")", ",", "\n", "'maximum'", ":", "3.86277979", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_hartmann4d": [[449, 498], ["functions.get_meshgrid", "numpy.array", "numpy.array", "numpy.array", "numpy.tile", "numpy.array", "numpy.array", "np.tile.reshape", "numpy.sum", "numpy.exp", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_hartmann4d", "(", ")", ":", "\n", "# xdim = 3", "\n", "# range: (0,1) for all dimensions", "\n", "# global maximum: -3.86278 at (0.114614, 0.555649, 0.852547)", "\n", "    ", "xdim", "=", "4", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "# maximum = 3.13449414", "\n", "# minimum = -1.30954062", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "10", ",", "xdim", ")", "\n", "# xs = np.random.rand(2000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "A", "=", "np", ".", "array", "(", "[", "\n", "[", "10.", ",", "3.", ",", "17.", ",", "3.5", ",", "1.7", ",", "8.", "]", ",", "\n", "[", "0.05", ",", "10.", ",", "17.", ",", "0.1", ",", "8.", ",", "14.", "]", ",", "\n", "[", "3.", ",", "3.5", ",", "1.7", ",", "10.", ",", "17.", ",", "8.", "]", ",", "\n", "[", "17.", ",", "8.", ",", "0.05", ",", "10.", ",", "0.1", ",", "14.", "]", "\n", "]", ")", "\n", "A", "=", "A", "[", ":", ",", ":", "4", "]", "\n", "\n", "alpha", "=", "np", ".", "array", "(", "[", "1.", ",", "1.2", ",", "3.", ",", "3.2", "]", ")", "\n", "\n", "P", "=", "1e-4", "*", "np", ".", "array", "(", "[", "\n", "[", "1312.", ",", "1696.", ",", "5569.", ",", "124.", ",", "8283.", ",", "5886.", "]", ",", "\n", "[", "2329.", ",", "4135.", ",", "8307.", ",", "3736.", ",", "1004.", ",", "9991.", "]", ",", "\n", "[", "2348.", ",", "1451.", ",", "3522.", ",", "2883.", ",", "3047.", ",", "6650.", "]", ",", "\n", "[", "4047.", ",", "8828.", ",", "8732.", ",", "5743.", ",", "1091.", ",", "381.", "]", "\n", "]", ")", "\n", "P", "=", "P", "[", ":", ",", ":", "4", "]", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "tile", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ",", "xdim", ")", ",", "reps", "=", "(", "1", ",", "4", ",", "1", ")", ")", "\n", "val", "=", "-", "(", "1.1", "-", "np", ".", "sum", "(", "alpha", "*", "np", ".", "exp", "(", "-", "np", ".", "sum", "(", "A", "*", "(", "x", "-", "P", ")", "**", "2", ",", "axis", "=", "2", ")", ")", ",", "axis", "=", "1", ")", ")", "/", "0.839", "\n", "# val = (val - minimum) / (maximum - minimum) * 2.0 - 1.0", "\n", "return", "val", "\n", "# return np.sum(alpha * np.exp(- np.sum(A * (x - P)**2, axis=2)), axis=1)", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "0.5985", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "14.2876", ",", "8.2371", ",", "8.0386", ",", "9.7550", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.1873952", ",", "0.19415135", ",", "0.55791794", ",", "0.26477959", "]", ")", ",", "\n", "'maximum'", ":", "3.13449414", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_rescaled_hartmann6d": [[500, 546], ["functions.get_meshgrid", "numpy.array", "numpy.array", "numpy.array", "numpy.tile", "numpy.array", "numpy.array", "np.tile.reshape", "numpy.sum", "numpy.exp", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_rescaled_hartmann6d", "(", ")", ":", "\n", "# xdim = 3", "\n", "# range: (0,1) for all dimensions", "\n", "# global maximum: -3.86278 at (0.114614, 0.555649, 0.852547)", "\n", "    ", "xdim", "=", "6", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "# maximum = 3.13449414", "\n", "# minimum = -1.30954062", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "5", ",", "xdim", ")", "\n", "# xs = np.random.rand(1000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "A", "=", "np", ".", "array", "(", "[", "\n", "[", "10.", ",", "3.", ",", "17.", ",", "3.5", ",", "1.7", ",", "8.", "]", ",", "\n", "[", "0.05", ",", "10.", ",", "17.", ",", "0.1", ",", "8.", ",", "14.", "]", ",", "\n", "[", "3.", ",", "3.5", ",", "1.7", ",", "10.", ",", "17.", ",", "8.", "]", ",", "\n", "[", "17.", ",", "8.", ",", "0.05", ",", "10.", ",", "0.1", ",", "14.", "]", "\n", "]", ")", "\n", "\n", "alpha", "=", "np", ".", "array", "(", "[", "1.", ",", "1.2", ",", "3.", ",", "3.2", "]", ")", "\n", "\n", "P", "=", "1e-4", "*", "np", ".", "array", "(", "[", "\n", "[", "1312.", ",", "1696.", ",", "5569.", ",", "124.", ",", "8283.", ",", "5886.", "]", ",", "\n", "[", "2329.", ",", "4135.", ",", "8307.", ",", "3736.", ",", "1004.", ",", "9991.", "]", ",", "\n", "[", "2348.", ",", "1451.", ",", "3522.", ",", "2883.", ",", "3047.", ",", "6650.", "]", ",", "\n", "[", "4047.", ",", "8828.", ",", "8732.", ",", "5743.", ",", "1091.", ",", "381.", "]", "\n", "]", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "tile", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ",", "xdim", ")", ",", "reps", "=", "(", "1", ",", "4", ",", "1", ")", ")", "\n", "val", "=", "(", "2.58", "+", "np", ".", "sum", "(", "alpha", "*", "np", ".", "exp", "(", "-", "np", ".", "sum", "(", "A", "*", "(", "x", "-", "P", ")", "**", "2", ",", "axis", "=", "2", ")", ")", ",", "axis", "=", "1", ")", ")", "/", "1.94", "\n", "# val = (val - minimum) / (maximum - minimum) * 2.0 - 1.0", "\n", "return", "val", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "1.423", ",", "#0.3446,", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "6.9512", ",", "1.9341", ",", "0.506", ",", "4.2067", ",", "5.0986", ",", "3.5949", "]", ")", ",", "# np.array([6.1398, 2.3368, 0.7698, 6.6535, 5.1594, 5.3718]),", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.20169", ",", "0.150011", ",", "0.476874", ",", "0.275332", ",", "0.311652", ",", "0.6573", "]", ")", ",", "\n", "'maximum'", ":", "3.32237", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_Branin": [[548, 582], ["functions.get_meshgrid", "x.reshape.reshape", "numpy.array", "numpy.array", "numpy.array", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_Branin", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "# maximum = 1.04739389", "\n", "# minimum = -4.87620974", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "20", ",", "xdim", ")", "\n", "# xs = np.random.rand(1000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "x", "=", "15.", "*", "x", "-", "np", ".", "array", "(", "[", "5.", ",", "0.", "]", ")", "\n", "\n", "val", "=", "-", "1.0", "/", "51.95", "*", "(", "\n", "(", "x", "[", ":", ",", "1", "]", "-", "5.1", "*", "x", "[", ":", ",", "0", "]", "**", "2", "/", "(", "4", "*", "np", ".", "pi", "**", "2", ")", "+", "5.", "*", "x", "[", ":", ",", "0", "]", "/", "np", ".", "pi", "-", "6.", ")", "**", "2", "\n", "+", "(", "10.", "-", "10.", "/", "(", "8.", "*", "np", ".", "pi", ")", ")", "*", "np", ".", "cos", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "-", "44.81", "\n", ")", "\n", "\n", "# val = (val - minimum) / (maximum - minimum) * 2.0 - 1.0", "\n", "return", "val", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "0.589", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "25.5866", ",", "6.3735", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.96165196", ",", "0.16499956", "]", ")", ",", "\n", "'maximum'", ":", "1.04739389", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_egg_holder": [[585, 617], ["x.reshape.reshape", "numpy.array", "numpy.array", "numpy.random.rand", "numpy.sin", "numpy.sin", "numpy.sqrt", "numpy.sqrt", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "negative_egg_holder", "(", ")", ":", "\n", "# xdim = 2", "\n", "# range: [-512,512] for all dimensions", "\n", "# global maximum: 959.6407 at (512, 404.2319)", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "-", "1.0", "# -512.0", "\n", "xmax", "=", "1.0", "# 512.0", "\n", "maximum", "=", "959.64066272", "\n", "minimum", "=", "-", "1049.1316235", "\n", "\n", "# xs = get_meshgrid(xmin, xmax, 70, xdim)", "\n", "xs", "=", "np", ".", "random", ".", "rand", "(", "1000", ",", "xdim", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "val", "=", "(", "\n", "(", "x", "[", ":", ",", "1", "]", "*", "512.", "+", "47.", ")", "*", "np", ".", "sin", "(", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "x", "[", ":", ",", "1", "]", "*", "512.", "+", "0.5", "*", "x", "[", ":", ",", "0", "]", "*", "512.", "+", "47.", ")", ")", ")", "\n", "+", "x", "[", ":", ",", "0", "]", "*", "512.", "*", "np", ".", "sin", "(", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "x", "[", ":", ",", "0", "]", "*", "512.", "-", "(", "x", "[", ":", ",", "1", "]", "*", "512.", "+", "47.", ")", ")", ")", ")", "\n", ")", "\n", "val", "=", "(", "val", "-", "minimum", ")", "/", "(", "maximum", "-", "minimum", ")", "*", "2.0", "-", "1.0", "\n", "return", "val", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "0.1299", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "260.8678", ",", "341.01061", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "1.", ",", "0.78951524", "]", ")", ",", "\n", "'maximum'", ":", "1.0", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_Goldstein": [[619, 662], ["functions.get_meshgrid", "x.reshape.reshape", "numpy.array", "numpy.array", "numpy.log"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_Goldstein", "(", ")", ":", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1.", "\n", "# maximum = 2.18038839", "\n", "# minimum = -0.33341016", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "50", ",", "xdim", ")", "\n", "# xs = np.random.rand(2000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "xb", "=", "x", "*", "4.", "-", "2.", "\n", "\n", "val", "=", "-", "(", "\n", "np", ".", "log", "(", "\n", "(", "\n", "1", "\n", "+", "(", "xb", "[", ":", ",", "0", "]", "+", "xb", "[", ":", ",", "1", "]", "+", "1.", ")", "**", "2", "\n", "*", "(", "19", "-", "14", "*", "x", "[", ":", ",", "0", "]", "+", "3", "*", "x", "[", ":", ",", "0", "]", "**", "2", "-", "14", "*", "x", "[", ":", ",", "1", "]", "+", "6", "*", "x", "[", ":", ",", "0", "]", "*", "x", "[", ":", ",", "1", "]", "+", "3", "*", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", ")", "\n", "*", "(", "\n", "30", "\n", "+", "(", "2", "*", "x", "[", ":", ",", "0", "]", "-", "3", "*", "x", "[", ":", ",", "1", "]", ")", "**", "2", "\n", "*", "(", "18", "-", "32", "*", "x", "[", ":", ",", "0", "]", "+", "12", "*", "x", "[", ":", ",", "0", "]", "**", "2", "+", "48", "*", "x", "[", ":", ",", "1", "]", "-", "36", "*", "x", "[", ":", ",", "0", "]", "*", "x", "[", ":", ",", "1", "]", "+", "27", "*", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", ")", "\n", ")", "-", "8.693", "\n", ")", "/", "2.427", "\n", "\n", "# val = (val - minimum) / (maximum - minimum) * 2.0 - 1.0", "\n", "return", "val", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "0.3193", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "73.5594", ",", "74.9745", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.45", ",", "0.30", "]", ")", ",", "\n", "'maximum'", ":", "2.180388", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_shubert": [[664, 694], ["functions.get_meshgrid", "numpy.array().astype().reshape", "x.reshape.reshape", "numpy.array", "numpy.array", "numpy.array().astype", "numpy.sum", "numpy.sum", "numpy.array", "numpy.cos", "list", "numpy.cos", "range"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_shubert", "(", ")", ":", "\n", "# constraint to [-2.,2.]", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "50", ",", "xdim", ")", "\n", "# xs = np.random.rand(2000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "arr", "=", "np", ".", "array", "(", "list", "(", "range", "(", "1", ",", "6", ")", ")", ")", ".", "astype", "(", "float", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "xb", "=", "x", "*", "4.", "-", "2.", "\n", "\n", "val", "=", "-", "np", ".", "sum", "(", "arr", "*", "np", ".", "cos", "(", "(", "arr", "+", "1.0", ")", "*", "xb", "[", ":", ",", "0", "]", "+", "arr", ")", ",", "axis", "=", "0", ")", "*", "np", ".", "sum", "(", "arr", "*", "np", ".", "cos", "(", "(", "arr", "+", "1.0", ")", "*", "xb", "[", ":", ",", "1", "]", "+", "arr", ")", ",", "axis", "=", "0", ")", "\n", "return", "val", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "3.7443", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "35.88", ",", "28.3715", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.3", ",", "0.143718", "]", ")", ",", "\n", "'maximum'", ":", "186.73091", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.negative_stylbinski": [[696, 728], ["functions.get_meshgrid", "numpy.array().astype().reshape", "x.reshape.reshape", "numpy.array", "numpy.array", "numpy.array().astype", "numpy.sum", "numpy.array", "list", "range"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.get_meshgrid"], ["", "def", "negative_stylbinski", "(", ")", ":", "\n", "# constraint to [-5.,5.]", "\n", "    ", "xdim", "=", "2", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "1", "\n", "maximum", "=", "78.33233141", "\n", "minimum", "=", "-", "200.0", "\n", "\n", "xs", "=", "get_meshgrid", "(", "xmin", ",", "xmax", ",", "50", ",", "xdim", ")", "\n", "# xs = np.random.rand(2000, xdim) * (xmax - xmin) + xmin", "\n", "\n", "arr", "=", "np", ".", "array", "(", "list", "(", "range", "(", "1", ",", "6", ")", ")", ")", ".", "astype", "(", "float", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "xb", "=", "x", "*", "10.", "-", "5.", "\n", "\n", "val", "=", "-", "0.5", "*", "np", ".", "sum", "(", "xb", "**", "4", "-", "16", "*", "xb", "**", "2", "+", "5", "*", "xb", ",", "axis", "=", "1", ")", "\n", "val", "=", "(", "val", "-", "minimum", ")", "/", "(", "maximum", "-", "minimum", ")", "*", "2.0", "-", "1.0", "\n", "return", "val", "\n", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "8.8434e5", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "0.2449", ",", "0.2474", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0.20964659", ",", "0.20964659", "]", ")", ",", "\n", "'maximum'", ":", "1.0", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.set_global_determinism": [[776, 801], ["str", "random.seed", "tensorflow.set_random_seed", "numpy.random.seed", "print", "print", "print", "patch"], "function", ["None"], ["", "def", "set_global_determinism", "(", "seed_value", "=", "0", ",", "fast_n_close", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n        Enable 100% reproducibility on operations related to tensor and randomness.\n        Parameters:\n        seed (int): seed value for global randomness\n        fast_n_close (bool): whether to achieve efficient at the cost of determinism/reproducibility\n    \"\"\"", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed_value", ")", "\n", "random", ".", "seed", "(", "seed_value", ")", "\n", "tf", ".", "set_random_seed", "(", "seed_value", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed_value", ")", "\n", "if", "fast_n_close", ":", "\n", "        ", "return", "\n", "\n", "", "print", "(", "\"*******************************************************************************\"", ")", "\n", "print", "(", "\"*** set_global_determinism is called,setting full determinism, will be slow ***\"", ")", "\n", "print", "(", "\"*******************************************************************************\"", ")", "\n", "\n", "os", ".", "environ", "[", "'TF_DETERMINISTIC_OPS'", "]", "=", "'1'", "\n", "os", ".", "environ", "[", "'TF_CUDNN_DETERMINISTIC'", "]", "=", "'1'", "\n", "# https://www.tensorflow.org/api_docs/python/tf/config/threading/set_inter_op_parallelism_threads", "\n", "# tf.config.threading.set_inter_op_parallelism_threads(1)", "\n", "# tf.config.threading.set_intra_op_parallelism_threads(1)", "\n", "from", "tfdeterminism", "import", "patch", "\n", "patch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.cnn_cifar_10": [[992, 1019], ["functions.CNN_CIFAR_10", "x.reshape.reshape", "numpy.zeros", "enumerate", "numpy.array", "numpy.array", "numpy.random.rand", "functions.CNN_CIFAR_10.evaluate"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.functions.CNN_CIFAR_10.evaluate"], ["", "", "def", "cnn_cifar_10", "(", ")", ":", "\n", "    ", "seed_value", "=", "1", "\n", "xdim", "=", "7", "\n", "xmin", "=", "0", "\n", "xmax", "=", "1", "\n", "xs", "=", "np", ".", "random", ".", "rand", "(", "100000", ",", "xdim", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "my_func", "=", "CNN_CIFAR_10", "(", "xdim", "=", "xdim", ",", "xmin", "=", "xmin", ",", "xmax", "=", "xmax", ",", "xs", "=", "xs", ",", "seed_value", "=", "seed_value", ")", "\n", "\n", "def", "f", "(", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "vals", "=", "np", ".", "zeros", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "\n", "for", "i", ",", "param", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "vals", "[", "i", "]", "=", "my_func", ".", "evaluate", "(", "param", ",", "N", "=", "10", ")", "\n", "\n", "", "return", "vals", "\n", "\n", "", "return", "{", "'function'", ":", "f", ",", "\n", "'xdim'", ":", "xdim", ",", "\n", "'xmin'", ":", "xmin", ",", "\n", "'xmax'", ":", "xmax", ",", "\n", "'xs'", ":", "xs", ",", "\n", "'noise.variance'", ":", "0.0001", ",", "\n", "'RBF.variance'", ":", "1", ",", "\n", "'RBF.lengthscale'", ":", "np", ".", "array", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ",", "\n", "'maximizer'", ":", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ")", ",", "\n", "'maximum'", ":", "1", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features": [[52, 164], ["tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.get_variable", "print", "optfunc.draw_random_init_weights_features.false_clause"], "function", ["None"], ["def", "draw_random_init_weights_features", "(", "\n", "xdim", ",", "n_funcs", ",", "n_features", ",", "\n", "\n", "xx", ",", "# (nobs, xdim)", "\n", "yy", ",", "# (nobs, 1)", "\n", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "# (1,xdim), (), ()", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "name", "=", "'random_features'", ")", ":", "\n", "    ", "\"\"\"\n    sigma, sigma0: scalars\n    l: 1 x xdim\n    xx: n x xdim\n    yy: n x 1\n    n_features: a scalar\n    different from draw_random_weights_features,\n        this function set W, b, noise as Variable that is initialized randomly\n        rather than sample W, b, noise from random function\n    \"\"\"", "\n", "\n", "n", "=", "tf", ".", "shape", "(", "xx", ")", "[", "0", "]", "\n", "\n", "xx", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "xx", ",", "axis", "=", "0", ")", ",", "multiples", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "yy", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "yy", ",", "axis", "=", "0", ")", ",", "multiples", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "idn", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "tf", ".", "eye", "(", "n", ",", "dtype", "=", "dtype", ")", ",", "axis", "=", "0", ")", ",", "multiples", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "\n", "# draw weights for the random features.", "\n", "W", "=", "tf", ".", "get_variable", "(", "name", "=", "\"{}_W\"", ".", "format", "(", "name", ")", ",", "\n", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "xdim", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", ")", ")", "*", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "tf", ".", "sqrt", "(", "l", ")", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ")", "\n", "# W = tf.random.normal(shape=(n_funcs, n_features,xdim), dtype=dtype) * tf.tile( tf.expand_dims(tf.sqrt(l), axis=0), multiples=(n_funcs,n_features,1) )", "\n", "# n_funcs x n_features x xdim", "\n", "\n", "b", "=", "2.0", "*", "np", ".", "pi", "*", "tf", ".", "get_variable", "(", "\n", "name", "=", "\"{}_b\"", ".", "format", "(", "name", ")", ",", "\n", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "0.", ",", "maxval", "=", "1.", ")", ")", "\n", "# b = 2.0 * np.pi * tf.random.uniform(shape=(n_funcs,n_features,1), dtype=dtype)", "\n", "# n_funcs x n_features x 1", "\n", "\n", "# compute the features for xx.", "\n", "Z", "=", "tf", ".", "cast", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", ",", "dtype", "=", "dtype", ")", "*", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "W", ",", "xx", ",", "transpose_b", "=", "True", ")", "\n", "+", "tf", ".", "tile", "(", "b", ",", "multiples", "=", "(", "1", ",", "1", ",", "n", ")", ")", ")", "\n", "# n_funcs x n_features x n", "\n", "\n", "# draw the coefficient theta.", "\n", "noise", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "\"{}_noise\"", ".", "format", "(", "name", ")", ",", "\n", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", ")", ")", "\n", "# noise = tf.random.normal(shape=(n_funcs,n_features,1))", "\n", "# n_funcs x n_features x 1", "\n", "\n", "\n", "def", "true_clause", "(", ")", ":", "\n", "        ", "Sigma", "=", "tf", ".", "matmul", "(", "Z", ",", "Z", ",", "transpose_a", "=", "True", ")", "+", "sigma0", "*", "idn", "\n", "# n_funcs x n x n of rank n or n_features", "\n", "\n", "mu", "=", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "Z", ",", "utils", ".", "multichol2inv", "(", "Sigma", ",", "n_funcs", ",", "dtype", "=", "dtype", ")", ")", ",", "yy", ")", "\n", "# n_funcs x n_features x 1", "\n", "\n", "# tf.linalg.eigh returns None sometimes!!!", "\n", "e", ",", "v", "=", "tf", ".", "linalg", ".", "eigh", "(", "Sigma", ")", "\n", "\n", "# e = tf.linalg.eigvalsh(Sigma)", "\n", "e", "=", "tf", ".", "expand_dims", "(", "e", ",", "axis", "=", "-", "1", ")", "\n", "# n_funcs x n x 1", "\n", "\n", "r", "=", "tf", ".", "reciprocal", "(", "tf", ".", "sqrt", "(", "e", ")", "*", "(", "tf", ".", "sqrt", "(", "e", ")", "+", "tf", ".", "sqrt", "(", "sigma0", ")", ")", ")", "\n", "# n_funcs x n x 1", "\n", "\n", "theta", "=", "noise", "-", "tf", ".", "matmul", "(", "Z", ",", "\n", "tf", ".", "matmul", "(", "v", ",", "\n", "r", "*", "tf", ".", "matmul", "(", "v", ",", "\n", "tf", ".", "matmul", "(", "Z", ",", "noise", ",", "transpose_a", "=", "True", ")", ",", "\n", "transpose_a", "=", "True", ")", ")", ")", "+", "mu", "\n", "# n_funcs x n_features x 1", "\n", "\n", "return", "theta", "\n", "\n", "\n", "", "def", "false_clause", "(", ")", ":", "\n", "        ", "Sigma", "=", "utils", ".", "multichol2inv", "(", "tf", ".", "matmul", "(", "Z", ",", "Z", ",", "transpose_b", "=", "True", ")", "/", "sigma0", "\n", "+", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "tf", ".", "eye", "(", "n_features", ",", "dtype", "=", "dtype", ")", ",", "axis", "=", "0", ")", ",", "multiples", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", ",", "\n", "n_funcs", ",", "dtype", "=", "dtype", ")", "\n", "\n", "mu", "=", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "Sigma", ",", "Z", ")", ",", "yy", ")", "/", "sigma0", "\n", "\n", "theta", "=", "mu", "+", "tf", ".", "matmul", "(", "tf", ".", "cholesky", "(", "Sigma", ")", ",", "noise", ")", "\n", "return", "theta", "\n", "\n", "\n", "# theta = tf.cond(", "\n", "#             pred=tf.less(n, n_features),", "\n", "#             true_fn=true_clause,", "\n", "#             false_fn=false_clause", "\n", "#         )", "\n", "", "print", "(", "\"Need to debug the sampling of theta, W, b in optfunc.py:draw_random_init_weights_features\"", ")", "\n", "theta", "=", "false_clause", "(", ")", "\n", "\n", "return", "theta", ",", "W", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.make_function_sample": [[166, 179], ["tensorflow.squeeze", "tensorflow.sqrt", "tensorflow.matmul", "tensorflow.cos", "tensorflow.matmul"], "function", ["None"], ["", "def", "make_function_sample", "(", "x", ",", "n_features", ",", "sigma", ",", "theta", ",", "W", ",", "b", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "fval", "=", "tf", ".", "squeeze", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "tf", ".", "matmul", "(", "theta", ",", "\n", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "W", ",", "\n", "x", ",", "\n", "transpose_b", "=", "True", ")", "\n", "+", "b", ")", ",", "\n", "transpose_a", "=", "True", ")", ")", "\n", "# x must be a 2d tensor", "\n", "# return: n_funcs x tf.shape(x)[0]", "\n", "#      or (tf.shape(x)[0],) if n_funcs = 1", "\n", "\n", "return", "fval", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.duplicate_function_with_multiple_inputs": [[181, 194], ["range", "tensorflow.squeeze", "tensorflow.stack", "tensorflow.get_variable", "f", "tensorflow.stack", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "duplicate_function_with_multiple_inputs", "(", "f", ",", "n_inits", ",", "xmin", "=", "-", "np", ".", "infty", ",", "xmax", "=", "np", ".", "infty", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "xs_list", "=", "[", "None", "]", "*", "n_inits", "\n", "fvals", "=", "[", "None", "]", "*", "n_inits", "\n", "\n", "for", "i", "in", "range", "(", "n_inits", ")", ":", "\n", "        ", "xs_list", "[", "i", "]", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'{}_{}'", ".", "format", "(", "name", ",", "i", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "\n", "fvals", "[", "i", "]", "=", "f", "(", "xs_list", "[", "i", "]", ")", "\n", "\n", "", "fvals", "=", "tf", ".", "squeeze", "(", "tf", ".", "stack", "(", "fvals", ")", ")", "\n", "xs", "=", "tf", ".", "stack", "(", "xs_list", ")", "\n", "return", "xs", ",", "xs_list", ",", "fvals", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_with_multiple_init_tensor": [[198, 225], ["range", "tensorflow.argmax", "optimizer.minimize"], "function", ["None"], ["", "def", "find_maximum_with_multiple_init_tensor", "(", "xs_list", ",", "fvals", ",", "n_inits", ",", "xdim", ",", "optimizer", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    # xmin=-np.infty, xmax=np.infty,\n    xs: list of size n_inits of (1,xdim)\n    fvals: (n_inits,): function value with inputs are xs tensor\n    initializers: n_inits x xdim\n    \"\"\"", "\n", "# initializers: n x d", "\n", "# func: a tensor function ", "\n", "#     input:  tensor n x d ", "\n", "#     output: tensor n x 1", "\n", "# n_inits: scalar (not a tensor)", "\n", "\"\"\"\n    returns:\n        vals: shape = (n_inits,)\n        invars: shape = (n_inits,xdim)\n        maxval: scalar\n        maxinvar: shape= (xdim,)\n    \"\"\"", "\n", "\n", "trains", "=", "[", "None", "]", "*", "n_inits", "\n", "\n", "for", "i", "in", "range", "(", "n_inits", ")", ":", "\n", "        ", "trains", "[", "i", "]", "=", "optimizer", ".", "minimize", "(", "-", "fvals", "[", "i", "]", ",", "var_list", "=", "[", "xs_list", "[", "i", "]", "]", ")", "\n", "\n", "", "max_idx", "=", "tf", ".", "argmax", "(", "fvals", ")", "\n", "return", "trains", ",", "max_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_list_of_funcs": [[227, 253], ["range", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "optfunc.find_maximum_with_multiple_init_tensor", "train_all.extend", "max_idx_all.append", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_with_multiple_init_tensor"], ["", "def", "find_maximum_list_of_funcs", "(", "xdim", ",", "n_inits", ",", "n_funcs", ",", "xs", ",", "xs_list", ",", "fvals", ",", "optimizer", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    xs: shape=(n_funcs, n_inits, xdim)\n    xs_list: list of n_funcs lists of size n_inits of tensor (1,xdim)\n    fvals: tensor of shape (n_funcs, n_inits)\n    #initializers: (n_funcs, n_inits, xdim)\n    \"\"\"", "\n", "train_all", "=", "[", "]", "\n", "max_val_all", "=", "[", "None", "]", "*", "n_funcs", "\n", "max_input_all", "=", "[", "None", "]", "*", "n_funcs", "\n", "max_idx_all", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "trains", ",", "max_idx", "=", "find_maximum_with_multiple_init_tensor", "(", "xs_list", "[", "i", "]", ",", "fvals", "[", "i", ",", "...", "]", ",", "n_inits", ",", "xdim", ",", "dtype", "=", "dtype", ",", "optimizer", "=", "optimizer", ")", "\n", "\n", "train_all", ".", "extend", "(", "trains", ")", "\n", "max_idx_all", ".", "append", "(", "max_idx", ")", "\n", "\n", "max_input_all", "[", "i", "]", "=", "xs", "[", "i", ",", "max_idx", ",", "...", "]", "\n", "max_val_all", "[", "i", "]", "=", "fvals", "[", "i", ",", "max_idx", "]", "\n", "\n", "", "max_val_arr", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "max_val_all", ")", ",", "shape", "=", "(", "n_funcs", ",", ")", ")", "\n", "max_input_arr", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "max_input_all", ")", ",", "shape", "=", "(", "n_funcs", ",", "xdim", ")", ")", "\n", "max_idx_arr", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "max_idx_all", ")", ",", "shape", "=", "(", "n_funcs", ",", ")", ")", "\n", "\n", "return", "train_all", ",", "max_val_arr", ",", "max_input_arr", ",", "max_idx_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.gen_fval_xs": [[255, 299], ["isinstance", "print", "len", "range", "tensorflow.stack", "range", "tensorflow.stack", "print", "tensorflow.reshape", "tensorflow.squeeze", "tf.reshape.append", "range", "tf.squeeze.append", "tensorflow.get_variable", "funcs", "tensorflow.concat", "tensorflow.concat", "tensorflow.get_variable", "range", "tensorflow.stack", "fvals_i.append", "tensorflow.squeeze", "range", "range", "tensorflow.squeeze", "tensorflow.stack", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "gen_fval_xs", "(", "funcs", ",", "n_inits", ",", "xdim", ",", "xmin", ",", "xmax", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'test'", ")", ":", "\n", "    ", "\"\"\"\n    if funcs is a list of functions\n        return xs: nfuncs x n_inits x xdim\n               xs_list: list of nfuncs lists of n_inits tensors of size (1,xdim)\n               fvals: nfuncs x n_inits\n    else:\n        return xs: n_inits x xdim\n               xs_list: list of n_inits tensors of size (1,xdim)\n               fvals: n_inits,\n    \"\"\"", "\n", "if", "isinstance", "(", "funcs", ",", "list", ")", ":", "\n", "        ", "print", "(", "\"List of functions\"", ")", "\n", "\n", "n_funcs", "=", "len", "(", "funcs", ")", "\n", "xs_list", "=", "[", "[", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'{}_{}_{}'", ".", "format", "(", "name", ",", "i", ",", "j", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "for", "i", "in", "range", "(", "n_inits", ")", "]", "for", "j", "in", "range", "(", "n_funcs", ")", "]", "\n", "\n", "xs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "xs", ".", "append", "(", "tf", ".", "stack", "(", "xs_list", "[", "i", "]", ")", ")", "\n", "", "xs", "=", "tf", ".", "stack", "(", "xs", ")", "\n", "\n", "fvals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "fvals_i", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_inits", ")", ":", "\n", "                ", "fvals_i", ".", "append", "(", "tf", ".", "squeeze", "(", "funcs", "[", "i", "]", "(", "xs_list", "[", "i", "]", "[", "j", "]", ")", ")", ")", "\n", "\n", "", "fvals", ".", "append", "(", "tf", ".", "squeeze", "(", "tf", ".", "stack", "(", "fvals_i", ")", ")", ")", "\n", "\n", "", "fvals", "=", "tf", ".", "stack", "(", "fvals", ")", "\n", "\n", "", "else", ":", "# funcs is a function", "\n", "        ", "print", "(", "\"A function\"", ")", "\n", "xs_list", "=", "[", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'test_func_mul_init_{}'", ".", "format", "(", "i", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "for", "i", "in", "range", "(", "n_inits", ")", "]", "\n", "\n", "fvals", "=", "[", "funcs", "(", "x", ")", "for", "x", "in", "xs_list", "]", "\n", "\n", "xs", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "xs_list", ",", "axis", "=", "0", ")", ",", "shape", "=", "(", "n_inits", ",", "xdim", ")", ")", "\n", "fvals", "=", "tf", ".", "squeeze", "(", "tf", ".", "concat", "(", "fvals", ",", "axis", "=", "0", ")", ")", "\n", "\n", "", "return", "xs", ",", "xs_list", ",", "fvals", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features_np": [[303, 386], ["l.reshape.reshape", "numpy.tile", "numpy.tile", "numpy.tile", "numpy.random.randn", "np.tile.reshape", "np.tile.reshape", "numpy.eye().reshape", "numpy.random.randn", "numpy.tile", "numpy.random.rand", "numpy.sqrt", "numpy.cos", "numpy.matmul", "numpy.linalg.eig", "e.reshape.reshape", "numpy.linalg.inv", "numpy.sqrt().reshape", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.tile", "numpy.transpose", "numpy.linalg.inv", "numpy.sqrt", "numpy.matmul", "numpy.tile", "numpy.matmul", "numpy.linalg.cholesky", "numpy.sqrt", "numpy.transpose", "numpy.sqrt", "numpy.sqrt", "numpy.matmul", "numpy.matmul", "numpy.eye().reshape", "numpy.transpose", "numpy.matmul", "numpy.eye", "numpy.transpose", "numpy.matmul", "numpy.transpose"], "function", ["None"], ["", "def", "draw_random_init_weights_features_np", "(", "\n", "xdim", ",", "n_funcs", ",", "n_features", ",", "\n", "\n", "xx", ",", "# (nobs, xdim)", "\n", "yy", ",", "# (nobs, 1)", "\n", "\n", "l", ",", "sigma", ",", "sigma0", ")", ":", "\n", "# (1,xdim), (), ()", "\n", "    ", "\"\"\"\n    sigma, sigma0: scalars\n    l: 1 x xdim\n    xx: n x xdim\n    yy: n x 1\n    n_features: a scalar\n    different from draw_random_weights_features,\n        this function set W, b, noise as Variable that is initialized randomly\n        rather than sample W, b, noise from random function\n    \"\"\"", "\n", "n", "=", "xx", ".", "shape", "[", "0", "]", "\n", "l", "=", "l", ".", "reshape", "(", "1", ",", "xdim", ")", "\n", "\n", "xx", "=", "np", ".", "tile", "(", "xx", ".", "reshape", "(", "1", ",", "n", ",", "xdim", ")", ",", "reps", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "yy", "=", "np", ".", "tile", "(", "yy", ".", "reshape", "(", "1", ",", "n", ",", "1", ")", ",", "reps", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "idn", "=", "np", ".", "tile", "(", "np", ".", "eye", "(", "n", ")", ".", "reshape", "(", "1", ",", "n", ",", "n", ")", ",", "reps", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", "\n", "# draw weights for the random features.", "\n", "W", "=", "np", ".", "random", ".", "randn", "(", "n_funcs", ",", "n_features", ",", "xdim", ")", "*", "np", ".", "tile", "(", "np", ".", "sqrt", "(", "l", ")", ".", "reshape", "(", "1", ",", "1", ",", "xdim", ")", ",", "\n", "reps", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ")", "\n", "# n_funcs x n_features x xdim", "\n", "\n", "b", "=", "2.0", "*", "np", ".", "pi", "*", "np", ".", "random", ".", "rand", "(", "n_funcs", ",", "n_features", ",", "1", ")", "\n", "# n_funcs x n_features x 1", "\n", "\n", "# compute the features for xx.", "\n", "Z", "=", "np", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "np", ".", "cos", "(", "np", ".", "matmul", "(", "W", ",", "np", ".", "transpose", "(", "xx", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "+", "np", ".", "tile", "(", "b", ",", "reps", "=", "(", "1", ",", "1", ",", "n", ")", ")", ")", "\n", "# n_funcs x n_features x n", "\n", "\n", "# draw the coefficient theta.", "\n", "noise", "=", "np", ".", "random", ".", "randn", "(", "n_funcs", ",", "n_features", ",", "1", ")", "\n", "# n_funcs x n_features x 1", "\n", "\n", "if", "n", "<", "n_features", ":", "\n", "        ", "Sigma", "=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "Z", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "Z", ")", "+", "sigma0", "*", "idn", "\n", "# n_funcs x n x n", "\n", "\n", "mu", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "Z", ",", "np", ".", "linalg", ".", "inv", "(", "Sigma", ")", ")", ",", "yy", ")", "\n", "# n_funcs x n_features x 1", "\n", "\n", "e", ",", "v", "=", "np", ".", "linalg", ".", "eig", "(", "Sigma", ")", "\n", "# n_funcs, n", "\n", "# n_funcs, n, n", "\n", "\n", "e", "=", "e", ".", "reshape", "(", "n_funcs", ",", "n", ",", "1", ")", "\n", "# n_funcs x n x 1", "\n", "\n", "r", "=", "1.0", "/", "(", "np", ".", "sqrt", "(", "e", ")", "*", "(", "np", ".", "sqrt", "(", "e", ")", "+", "np", ".", "sqrt", "(", "sigma0", ")", ")", ")", "\n", "# n_funcs x n x 1", "\n", "\n", "theta", "=", "noise", "-", "np", ".", "matmul", "(", "Z", ",", "\n", "np", ".", "matmul", "(", "v", ",", "\n", "r", "*", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "v", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "\n", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "Z", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "\n", "noise", ")", "\n", ")", "\n", ")", "\n", ")", "+", "mu", "\n", "# n_funcs x n_features x 1", "\n", "", "else", ":", "\n", "        ", "Sigma", "=", "np", ".", "linalg", ".", "inv", "(", "\n", "np", ".", "matmul", "(", "Z", ",", "np", ".", "transpose", "(", "Z", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "/", "sigma0", "\n", "+", "np", ".", "tile", "(", "np", ".", "eye", "(", "n_features", ")", ".", "reshape", "(", "1", ",", "n_features", ",", "n_features", ")", ",", "reps", "=", "(", "n_funcs", ",", "1", ",", "1", ")", ")", "\n", ")", "\n", "mu", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "Sigma", ",", "Z", ")", ",", "yy", ")", "/", "sigma0", "\n", "\n", "theta", "=", "mu", "+", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "cholesky", "(", "Sigma", ")", ",", "noise", ")", "\n", "\n", "", "return", "theta", ",", "W", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.make_function_sample_np": [[389, 403], ["numpy.squeeze", "numpy.sqrt", "numpy.matmul", "numpy.cos", "numpy.matmul"], "function", ["None"], ["", "def", "make_function_sample_np", "(", "x", ",", "n_features", ",", "sigma", ",", "theta", ",", "W", ",", "b", ")", ":", "\n", "    ", "fval", "=", "np", ".", "squeeze", "(", "\n", "np", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "\n", "*", "np", ".", "matmul", "(", "theta", ".", "T", ",", "\n", "np", ".", "cos", "(", "\n", "np", ".", "matmul", "(", "W", ",", "x", ".", "T", ")", "\n", "+", "b", "\n", ")", "\n", ")", ")", "\n", "# x must be a 2d tensor", "\n", "# return: n_funcs x tf.shape(x)[0]", "\n", "#      or (tf.shape(x)[0],) if n_funcs = 1", "\n", "\n", "return", "fval", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.test_find_maximum_with_multiple_init_tensor": [[406, 449], ["tensorflow.reset_default_graph", "optfunc.gen_fval_xs", "range", "tensorflow.train.AdamOptimizer", "optfunc.find_maximum_with_multiple_init_tensor", "tensorflow.sin", "assign_inits.append", "tensorflow.Session", "sess.run", "sess.run", "sess.run", "print", "print", "print", "print", "range", "print", "print", "print", "print", "tensorflow.matmul", "tensorflow.random.uniform", "tensorflow.assign", "tensorflow.global_variables_initializer", "sess.run", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.gen_fval_xs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_with_multiple_init_tensor"], ["", "def", "test_find_maximum_with_multiple_init_tensor", "(", "ntrain", "=", "10", ",", "n_inits", "=", "5", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    Adam with 1000 iterations\n    \"\"\"", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "xdim", "=", "2", "\n", "xmin", "=", "-", "10.", "\n", "xmax", "=", "10.", "\n", "\n", "func", "=", "lambda", "x", ":", "tf", ".", "sin", "(", "tf", ".", "matmul", "(", "x", ",", "x", ",", "transpose_b", "=", "True", ")", ")", "\n", "\n", "initializers", "=", "tf", ".", "random", ".", "uniform", "(", "shape", "=", "(", "n_inits", ",", "xdim", ")", ",", "dtype", "=", "dtype", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "\n", "xs", ",", "xs_list", ",", "fvals", "=", "gen_fval_xs", "(", "func", ",", "n_inits", ",", "xdim", ",", "xmin", ",", "xmax", ",", "dtype", "=", "dtype", ",", "name", "=", "'test_max_f_mulinit'", ")", "\n", "\n", "assign_inits", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_inits", ")", ":", "\n", "        ", "assign_inits", ".", "append", "(", "tf", ".", "assign", "(", "xs_list", "[", "i", "]", ",", "tf", ".", "reshape", "(", "initializers", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", ")", ")", "\n", "\n", "", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "trains", ",", "max_idx", "=", "find_maximum_with_multiple_init_tensor", "(", "xs_list", ",", "fvals", ",", "n_inits", ",", "xdim", ",", "dtype", "=", "dtype", ",", "name", "=", "'find_maximum_multiple_inputs'", ",", "optimizer", "=", "optimizer", ")", "\n", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "sess", ".", "run", "(", "assign_inits", ")", "\n", "\n", "xs_val", ",", "xs_list_val", ",", "fvals_val", "=", "sess", ".", "run", "(", "[", "xs", ",", "xs_list", ",", "fvals", "]", ")", "\n", "print", "(", "''", ")", "\n", "print", "(", "'input = '", ",", "xs_val", "[", "0", ",", "...", "]", ")", "\n", "print", "(", "xs_list_val", "[", "0", "]", ")", "\n", "print", "(", "'output = '", ",", "fvals_val", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "ntrain", ")", ":", "\n", "            ", "_", ",", "max_idx_val", ",", "xs_val", ",", "xs_list_val", ",", "fvals_val", "=", "sess", ".", "run", "(", "[", "trains", ",", "max_idx", ",", "xs", ",", "xs_list", ",", "fvals", "]", ")", "\n", "\n", "", "print", "(", "''", ")", "\n", "print", "(", "'input = '", ",", "xs_val", "[", "0", ",", "...", "]", ")", "\n", "print", "(", "xs_list_val", "[", "0", "]", ")", "\n", "print", "(", "'output = '", ",", "fvals_val", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.test_find_maximum_list_of_funcs": [[451, 494], ["tensorflow.reset_default_graph", "len", "optfunc.gen_fval_xs", "range", "tensorflow.train.AdamOptimizer", "optfunc.find_maximum_list_of_funcs", "range", "tensorflow.Session", "sess.run", "sess.run", "range", "tensorflow.sin", "tensorflow.random.uniform", "assign_inits.append", "tensorflow.global_variables_initializer", "sess.run", "tensorflow.matmul", "tensorflow.cos", "tensorflow.assign", "print", "print", "print", "print", "print", "tensorflow.matmul", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.gen_fval_xs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_list_of_funcs"], ["", "", "def", "test_find_maximum_list_of_funcs", "(", "ntrain", ",", "n_inits", "=", "5", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    Adam with 1000 iterations\n    \"\"\"", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "xdim", "=", "2", "\n", "xmin", "=", "-", "10.", "\n", "xmax", "=", "10.", "\n", "\n", "funcs", "=", "[", "lambda", "x", ":", "tf", ".", "sin", "(", "tf", ".", "matmul", "(", "x", ",", "x", ",", "transpose_b", "=", "True", ")", ")", ",", "\n", "lambda", "x", ":", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "x", ",", "x", ",", "transpose_b", "=", "True", ")", ")", "+", "2.0", "]", "\n", "n_funcs", "=", "len", "(", "funcs", ")", "\n", "\n", "initializers", "=", "tf", ".", "random", ".", "uniform", "(", "shape", "=", "(", "n_funcs", ",", "n_inits", ",", "xdim", ")", ",", "dtype", "=", "dtype", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "\n", "xs", ",", "xs_list", ",", "fvals", "=", "gen_fval_xs", "(", "funcs", ",", "n_inits", ",", "xdim", ",", "xmin", ",", "xmax", ",", "dtype", "=", "dtype", ",", "name", "=", "'test_max_listf'", ")", "\n", "\n", "assign_inits", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "n_inits", ")", ":", "\n", "            ", "assign_inits", ".", "append", "(", "tf", ".", "assign", "(", "xs_list", "[", "i", "]", "[", "j", "]", ",", "tf", ".", "reshape", "(", "initializers", "[", "i", ",", "j", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", ")", ")", "\n", "\n", "", "", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "trains", ",", "max_vals", ",", "max_inputs", "=", "find_maximum_list_of_funcs", "(", "xdim", ",", "n_inits", ",", "n_funcs", ",", "xs", ",", "xs_list", ",", "fvals", ",", "optimizer", "=", "optimizer", ",", "dtype", "=", "dtype", ",", "name", "=", "\"opt_list_funcs\"", ")", "\n", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "sess", ".", "run", "(", "assign_inits", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "ntrain", ")", ":", "\n", "            ", "_", ",", "max_vals_val", ",", "max_inputs_val", ",", "xs_val", ",", "fvals_val", "=", "sess", ".", "run", "(", "[", "trains", ",", "max_vals", ",", "max_inputs", ",", "xs", ",", "fvals", "]", ")", "\n", "\n", "if", "i", "==", "ntrain", "-", "1", "or", "i", "==", "1", ":", "\n", "                ", "print", "(", "''", ")", "\n", "print", "(", "'max input = '", ",", "max_inputs_val", ")", "\n", "print", "(", "'max output = '", ",", "max_vals_val", ")", "\n", "print", "(", "'xs = '", ",", "xs_val", ")", "\n", "print", "(", "'fvals = '", ",", "fvals_val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.test_draw_random_weights_features": [[496, 585], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "optfunc.draw_random_init_weights_features", "numpy.array", "numpy.array", "numpy.array", "numpy.linspace().reshape", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "range", "tensorflow.stack", "range", "tensorflow.stack", "tensorflow.Session", "sess.run", "tf.get_variable.load", "tf.get_variable.load", "tf.get_variable.load", "time.time", "range", "print", "matplotlib.subplots", "range", "matplotlib.show", "tf.stack.append", "tf.stack.append", "numpy.linspace", "tensorflow.global_variables_initializer", "sess.run", "func_vals.append", "range", "axs[].scatter", "optfunc.make_function_sample", "optfunc.make_function_sample", "sess.run", "sess.run", "sess.run", "axs[].plot", "tensorflow.global_variables_initializer", "sess.run", "time.time", "numpy.squeeze", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.make_function_sample", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.make_function_sample"], ["", "", "", "", "def", "test_draw_random_weights_features", "(", "n_funcs", "=", "10", ",", "n_features", "=", "500", ",", "dtype", "=", "tf", ".", "float32", ",", "randomize_funcs", "=", "False", ",", "func_param_plc", "=", "False", ",", "plot", "=", "True", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "xdim", "=", "1", "\n", "\n", "xx", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'xx'", ")", "\n", "yy", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'yy'", ")", "\n", "l", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'l'", ")", "\n", "sigma", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'sigma'", ")", "\n", "sigma0", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'sigma0'", ")", "\n", "\n", "x", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'x'", ")", "\n", "\n", "\n", "thetas", ",", "Ws", ",", "bs", "=", "draw_random_init_weights_features", "(", "xdim", ",", "n_funcs", ",", "n_features", ",", "xx", ",", "yy", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ",", "name", "=", "'random_features'", ")", "\n", "\n", "if", "func_param_plc", ":", "\n", "        ", "thetas_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'theta'", ")", "\n", "Ws_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'W'", ")", "\n", "bs_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'b'", ")", "\n", "\n", "fvals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "fvals", ".", "append", "(", "make_function_sample", "(", "x", ",", "n_features", ",", "sigma", ",", "thetas_plc", "[", "i", ",", "...", "]", ",", "Ws_plc", "[", "i", ",", "...", "]", ",", "bs_plc", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", ")", "\n", "", "fvals", "=", "tf", ".", "stack", "(", "fvals", ")", "\n", "\n", "", "else", ":", "\n", "        ", "fvals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "fvals", ".", "append", "(", "make_function_sample", "(", "x", ",", "n_features", ",", "sigma", ",", "thetas", "[", "i", ",", "...", "]", ",", "Ws", "[", "i", ",", "...", "]", ",", "bs", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", ")", "\n", "", "fvals", "=", "tf", ".", "stack", "(", "fvals", ")", "\n", "\n", "\n", "\n", "", "xx_val", "=", "np", ".", "array", "(", "[", "[", "0.", "]", ",", "[", "1.", "]", ",", "[", "4.", "]", ",", "[", "5.", "]", "]", ")", "\n", "yy_val", "=", "np", ".", "array", "(", "[", "[", "-", "5.", "]", ",", "[", "0.5", "]", ",", "[", "3.0", "]", ",", "[", "0.3", "]", "]", ")", "\n", "l_val", "=", "np", ".", "array", "(", "[", "[", "10.0", "]", "]", ")", "\n", "# xx_val = np.array([[0., 1.], [1.,1.], [4.,1.], [5.,1.1]])", "\n", "# yy_val = np.array([[-5.], [0.5], [3.0], [0.3]])", "\n", "# l_val = np.array([[10.0, 5.0]])", "\n", "\n", "sigma_val", "=", "2.0", "\n", "sigma0_val", "=", "1e-3", "\n", "\n", "x_val", "=", "np", ".", "linspace", "(", "0.", ",", "5.", ",", "100", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "# x_val = np.array(list(zip( np.linspace(0., 5., 50), np.ones(50) )))", "\n", "\n", "n_plot_funcs", "=", "3", "\n", "func_vals", "=", "[", "]", "\n", "fixed_func_vals", "=", "[", "]", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "l", ".", "load", "(", "l_val", ",", "sess", ")", "\n", "sigma", ".", "load", "(", "sigma_val", ",", "sess", ")", "\n", "sigma0", ".", "load", "(", "sigma0_val", ",", "sess", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "feed_dict", "=", "{", "xx", ":", "xx_val", ",", "yy", ":", "yy_val", ",", "x", ":", "x_val", "}", "\n", "\n", "if", "func_param_plc", "and", "not", "randomize_funcs", ":", "\n", "            ", "thetas_val", ",", "Ws_val", ",", "bs_val", "=", "sess", ".", "run", "(", "[", "thetas", ",", "Ws", ",", "bs", "]", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n_plot_funcs", ")", ":", "\n", "            ", "if", "randomize_funcs", ":", "\n", "                ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "if", "func_param_plc", ":", "\n", "                    ", "thetas_val", ",", "Ws_val", ",", "bs_val", "=", "sess", ".", "run", "(", "[", "thetas", ",", "Ws", ",", "bs", "]", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "", "", "if", "func_param_plc", ":", "\n", "                ", "func_val", "=", "sess", ".", "run", "(", "fvals", ",", "feed_dict", "=", "feed_dict", ")", "\n", "", "else", ":", "\n", "                ", "func_val", "=", "sess", ".", "run", "(", "fvals", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "", "func_vals", ".", "append", "(", "func_val", ")", "\n", "", "print", "(", "\"End in {:.4f}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "\n", "", "if", "plot", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "n_plot_funcs", ",", "2", ")", "\n", "for", "j", "in", "range", "(", "n_plot_funcs", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "                ", "axs", "[", "j", ",", "0", "]", ".", "plot", "(", "np", ".", "squeeze", "(", "x_val", ")", ",", "np", ".", "squeeze", "(", "func_vals", "[", "j", "]", "[", "i", ",", "...", "]", ")", ")", "\n", "\n", "", "axs", "[", "j", ",", "0", "]", ".", "scatter", "(", "xx_val", ",", "yy_val", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.test_maximize_random_weights_features": [[587, 740], ["tensorflow.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "optfunc.draw_random_init_weights_features", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "range", "range", "tensorflow.stack", "print", "sys.stdout.flush", "print", "range", "tensorflow.stack", "range", "tensorflow.stack", "range", "tensorflow.train.AdamOptimizer", "optfunc.find_maximum_list_of_funcs", "numpy.array", "numpy.array", "numpy.array", "numpy.linspace().reshape", "funcs.append", "tf.stack.append", "len", "tf.stack.append", "range", "tf.stack.append", "range", "tensorflow.Session", "sess.run", "time.time", "tf.get_variable.load", "tf.get_variable.load", "tf.get_variable.load", "sess.run", "tf.get_variable.load", "tf.get_variable.load", "tf.get_variable.load", "sess.run", "print", "sys.stdout.flush", "time.time", "sess.run", "sess.run", "range", "print", "sys.stdout.flush", "matplotlib.subplots", "range", "axs.scatter", "axs.scatter", "matplotlib.show", "tensorflow.random.uniform", "tensorflow.get_variable", "range", "tensorflow.stack", "tensorflow.squeeze", "fvals_i.append", "tensorflow.squeeze", "assign_inits.append", "numpy.linspace", "tensorflow.global_variables_initializer", "sess.run", "axs.plot", "numpy.squeeze", "optfunc.make_function_sample", "range", "tensorflow.stack", "tensorflow.assign", "print", "print", "print", "print", "numpy.squeeze", "numpy.squeeze", "tensorflow.sqrt", "tensorflow.matmul", "tensorflow.reshape", "time.time", "time.time", "tensorflow.clip_by_value", "tensorflow.cos", "tensorflow.matmul"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.draw_random_init_weights_features", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.find_maximum_list_of_funcs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.optfunc.make_function_sample"], ["", "", "def", "test_maximize_random_weights_features", "(", "n_funcs", "=", "10", ",", "ntrain", "=", "100", ",", "n_inits", "=", "5", ",", "n_features", "=", "500", ",", "dtype", "=", "tf", ".", "float32", ",", "plot", "=", "True", ")", ":", "\n", "# TODO: not working, only optimize for 1 functions...", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "xdim", "=", "1", "\n", "xmin", "=", "0.", "\n", "xmax", "=", "5.", "\n", "\n", "xx", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'xx'", ")", "\n", "yy", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'yy'", ")", "\n", "l", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'l'", ")", "\n", "sigma", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'sigma'", ")", "\n", "sigma0", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'sigma0'", ")", "\n", "\n", "x", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "None", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'x'", ")", "\n", "\n", "\n", "thetas", ",", "Ws", ",", "bs", "=", "draw_random_init_weights_features", "(", "xdim", ",", "n_funcs", ",", "n_features", ",", "xx", ",", "yy", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ",", "name", "=", "'random_features'", ")", "\n", "\n", "thetas_plc", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'theta'", ")", "\n", "Ws_plc", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'W'", ")", "\n", "bs_plc", "=", "tf", ".", "get_variable", "(", "shape", "=", "(", "n_funcs", ",", "n_features", ",", "1", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'b'", ")", "\n", "\n", "\n", "# funcs = [lambda x: tf.sin( x ),", "\n", "#          lambda x: tf.cos(x) + 2.0 ]", "\n", "# funcs_np = [lambda x: np.sin( x ),", "\n", "#             lambda x: np.cos(x) + 2.0 ]", "\n", "# n_funcs = len(funcs)", "\n", "\n", "\n", "\n", "# optimizing function samples", "\n", "initializers", "=", "tf", ".", "random", ".", "uniform", "(", "shape", "=", "(", "n_funcs", ",", "n_inits", ",", "xdim", ")", ",", "dtype", "=", "dtype", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "\n", "funcs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "funcs", ".", "append", "(", "(", "lambda", "x", ":", "make_function_sample", "(", "x", ",", "n_features", ",", "sigma", ",", "thetas_plc", "[", "i", ",", "...", "]", ",", "Ws_plc", "[", "i", ",", "...", "]", ",", "bs_plc", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", ")", ")", "\n", "\n", "", "fvals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "fvals", ".", "append", "(", "funcs", "[", "i", "]", "(", "x", ")", ")", "\n", "", "fvals", "=", "tf", ".", "stack", "(", "fvals", ")", "\n", "\n", "print", "(", "\"# of funcs: \"", ",", "len", "(", "funcs", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "# xs, xs_list, opt_fvals = gen_fval_xs(funcs, n_inits, xdim, xmin, xmax, dtype=dtype, name='test_max_listf')", "\n", "print", "(", "\"IMPORTANT: cannot use gen_fval_xs, only the last function would be used\"", ")", "\n", "name", "=", "'test_max_listf'", "\n", "xs_list", "=", "[", "[", "tf", ".", "get_variable", "(", "shape", "=", "(", "1", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'{}_{}_{}'", ".", "format", "(", "name", ",", "i", ",", "j", ")", ",", "\n", "constraint", "=", "lambda", "x", ":", "tf", ".", "clip_by_value", "(", "x", ",", "xmin", ",", "xmax", ")", ")", "for", "i", "in", "range", "(", "n_inits", ")", "]", "for", "j", "in", "range", "(", "n_funcs", ")", "]", "\n", "\n", "xs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "xs", ".", "append", "(", "tf", ".", "stack", "(", "xs_list", "[", "i", "]", ")", ")", "\n", "", "xs", "=", "tf", ".", "stack", "(", "xs", ")", "\n", "\n", "opt_fvals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "fvals_i", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_inits", ")", ":", "\n", "            ", "fval", "=", "tf", ".", "squeeze", "(", "tf", ".", "sqrt", "(", "2.0", "*", "sigma", "/", "n_features", ")", "*", "tf", ".", "matmul", "(", "thetas_plc", "[", "i", ",", "...", "]", ",", "\n", "tf", ".", "cos", "(", "tf", ".", "matmul", "(", "Ws_plc", "[", "i", ",", "...", "]", ",", "\n", "xs_list", "[", "i", "]", "[", "j", "]", ",", "\n", "transpose_b", "=", "True", ")", "\n", "+", "bs_plc", "[", "i", ",", "...", "]", ")", ",", "\n", "transpose_a", "=", "True", ")", ")", "\n", "fvals_i", ".", "append", "(", "fval", ")", "\n", "\n", "\n", "", "opt_fvals", ".", "append", "(", "tf", ".", "squeeze", "(", "tf", ".", "stack", "(", "fvals_i", ")", ")", ")", "\n", "\n", "", "opt_fvals", "=", "tf", ".", "stack", "(", "opt_fvals", ")", "\n", "\n", "\n", "\n", "\n", "assign_inits", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "n_inits", ")", ":", "\n", "            ", "assign_inits", ".", "append", "(", "tf", ".", "assign", "(", "xs_list", "[", "i", "]", "[", "j", "]", ",", "tf", ".", "reshape", "(", "initializers", "[", "i", ",", "j", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", ")", ")", "\n", "\n", "", "", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "trains", ",", "max_vals", ",", "max_inputs", ",", "max_idx_arr", "=", "find_maximum_list_of_funcs", "(", "xdim", ",", "n_inits", ",", "n_funcs", ",", "xs", ",", "xs_list", ",", "opt_fvals", ",", "optimizer", "=", "optimizer", ",", "dtype", "=", "dtype", ",", "name", "=", "\"opt_list_funcs\"", ")", "\n", "\n", "\n", "xx_val", "=", "np", ".", "array", "(", "[", "[", "0.", "]", ",", "[", "1.", "]", ",", "[", "4.", "]", ",", "[", "5.", "]", "]", ")", "\n", "yy_val", "=", "np", ".", "array", "(", "[", "[", "-", "5.", "]", ",", "[", "0.5", "]", ",", "[", "3.0", "]", ",", "[", "0.3", "]", "]", ")", "\n", "l_val", "=", "np", ".", "array", "(", "[", "[", "10.0", "]", "]", ")", "\n", "\n", "sigma_val", "=", "2.0", "\n", "sigma0_val", "=", "1e-3", "\n", "\n", "x_val", "=", "np", ".", "linspace", "(", "xmin", ",", "xmax", ",", "100", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "l", ".", "load", "(", "l_val", ",", "sess", ")", "\n", "sigma", ".", "load", "(", "sigma_val", ",", "sess", ")", "\n", "sigma0", ".", "load", "(", "sigma0_val", ",", "sess", ")", "\n", "\n", "thetas_val", ",", "Ws_val", ",", "bs_val", "=", "sess", ".", "run", "(", "[", "thetas", ",", "Ws", ",", "bs", "]", ",", "feed_dict", "=", "{", "xx", ":", "xx_val", ",", "\n", "yy", ":", "yy_val", ",", "\n", "x", ":", "x_val", "}", ")", "\n", "\n", "thetas_plc", ".", "load", "(", "thetas_val", ",", "sess", ")", "\n", "Ws_plc", ".", "load", "(", "Ws_val", ",", "sess", ")", "\n", "bs_plc", ".", "load", "(", "bs_val", ",", "sess", ")", "\n", "\n", "func_val", "=", "sess", ".", "run", "(", "fvals", ",", "feed_dict", "=", "{", "x", ":", "x_val", "}", ")", "\n", "\n", "print", "(", "\"End evaluating functions in {:.4f}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "sess", ".", "run", "(", "assign_inits", ")", "\n", "\n", "\n", "xs_val", ",", "opt_fvals_val", "=", "sess", ".", "run", "(", "[", "xs", ",", "opt_fvals", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "ntrain", ")", ":", "\n", "            ", "_", ",", "max_vals_val", ",", "max_inputs_val", ",", "max_idx_arr_val", "=", "sess", ".", "run", "(", "[", "trains", ",", "max_vals", ",", "max_inputs", ",", "max_idx_arr", "]", ")", "\n", "\n", "if", "i", "==", "ntrain", "-", "1", "or", "i", "==", "1", ":", "\n", "                ", "print", "(", "''", ")", "\n", "print", "(", "'max input = '", ",", "max_inputs_val", ")", "\n", "print", "(", "'max output = '", ",", "max_vals_val", ")", "\n", "print", "(", "'max_idx_arr = '", ",", "max_idx_arr_val", ")", "\n", "# for j in range(n_funcs):", "\n", "#     print('              ', xs_val[j,max_idx_arr_val[j],...])", "\n", "#     print('            f:', opt_fvals_val[j,max_idx_arr_val[j],...])", "\n", "\n", "", "", "print", "(", "\"End optimizing in {:.4f}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "if", "plot", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_funcs", ")", ":", "\n", "            ", "axs", ".", "plot", "(", "np", ".", "squeeze", "(", "x_val", ")", ",", "np", ".", "squeeze", "(", "func_val", "[", "i", ",", "...", "]", ")", ",", "zorder", "=", "0", ")", "\n", "\n", "", "axs", ".", "scatter", "(", "xx_val", ",", "yy_val", ",", "zorder", "=", "3", ")", "\n", "axs", ".", "scatter", "(", "np", ".", "squeeze", "(", "max_inputs_val", ")", ",", "max_vals_val", ",", "zorder", "=", "5", ",", "c", "=", "'r'", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.optimize_mean_f": [[196, 216], ["utils.compute_mean_f", "tensorflow.argmax"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f"], ["def", "optimize_mean_f", "(", "xdim", ",", "nhyp", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "invKs", ",", "\n", "xs", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    sess.run: \n        assign\n        train for n times\n        max_x\n    \"\"\"", "\n", "mean_f", "=", "utils", ".", "compute_mean_f", "(", "xs", ",", "xdim", ",", "nhyp", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "dtype", "=", "dtype", ")", "\n", "# shape = (nx,)", "\n", "\n", "idx", "=", "tf", ".", "argmax", "(", "mean_f", ")", "\n", "return", "xs", "[", "idx", ",", ":", "]", ",", "mean_f", "[", "idx", "]", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.get_required_placeholders": [[218, 323], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "function", ["None"], ["", "def", "get_required_placeholders", "(", "criterion", ",", "crit_params", ",", "\n", "dtype", ",", "is_debug_mode", "=", "False", ")", ":", "\n", "\n", "    ", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nx_to_optimize", "=", "crit_params", "[", "'nx_to_optimize'", "]", "\n", "batchsize", "=", "crit_params", "[", "'batchsize'", "]", "# batchsize to evaluate/optimize criterion", "\n", "# nmax = crit_params['nmax']", "\n", "\n", "invKs_plc", "=", "tf", ".", "placeholder", "(", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'invKs_plc'", ")", "\n", "# (nhyp, nobs, nobs)", "\n", "sample_max_fs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ")", ",", "name", "=", "'sample_max_xs_plc'", ")", "\n", "# (nhyp,nmax)", "\n", "sample_max_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "nhyp", ",", "None", ",", "xdim", ")", ",", "name", "=", "'sample_max_fs_plc'", ")", "\n", "# (nhyp,nmax,xdim)", "\n", "\n", "test_xs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "crit_params", "[", "'xdim'", "]", ")", ",", "\n", "name", "=", "'test_xs'", ")", "\n", "# (ntest,xdim)s", "\n", "max_probs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ")", ",", "name", "=", "'max_probs_plc'", ")", "\n", "# (nhyp, nmax)", "\n", "post_mean_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_mean_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest)", "\n", "post_cov_tests_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_cov_tests_plc'", ")", "\n", "# (nhyp, nmax, ntest, ntest)", "\n", "\n", "invpNKs_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "crit_params", "[", "'nhyp'", "]", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'invpNKs_plc'", ")", "\n", "# (nhyp, nobs+ntest, nobs+ntest)", "\n", "\n", "X_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "xdim", ")", ",", "name", "=", "'X_plc'", ")", "\n", "Y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", "None", ",", "1", ")", ",", "name", "=", "'Y_plc'", ")", "\n", "\n", "xs_to_optimize", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'xs_to_optimize'", ")", "\n", "xs_batch", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "\n", "name", "=", "'xs_batch'", ")", "\n", "\n", "max_observed_y_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "shape", "=", "(", ")", ",", "\n", "name", "=", "'max_observed_y_plc'", ")", "\n", "\n", "required_placeholders", "=", "{", "\n", "'X'", ":", "X_plc", ",", "\n", "'Y'", ":", "Y_plc", ",", "\n", "'xs_to_optimize'", ":", "xs_to_optimize", ",", "\n", "'xs_batch'", ":", "xs_batch", "\n", "}", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "required_placeholders", "[", "'sample_max_fs'", "]", "=", "sample_max_fs_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'max_observed_y'", "]", "=", "max_observed_y_plc", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "        ", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "invKmaxsams_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ",", "None", ")", ",", "# nhyp, nmax, nobs+1, nobs+1", "\n", "name", "=", "'invKmaxsams_plc'", ")", "\n", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'sample_max_xs'", "]", "=", "sample_max_xs_plc", "\n", "required_placeholders", "[", "'invKmaxsams'", "]", "=", "invKmaxsams_plc", "\n", "required_placeholders", "[", "'max_observed_y'", "]", "=", "max_observed_y_plc", "\n", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "        ", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_mean_tests'", "]", "=", "post_mean_tests_plc", "\n", "required_placeholders", "[", "'post_cov_tests'", "]", "=", "post_cov_tests_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "post_test_samples_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "dtype", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_samples_plc'", ")", "\n", "post_test_masks_plc", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "bool", ",", "\n", "shape", "=", "(", "nhyp", ",", "None", ",", "None", ")", ",", "\n", "name", "=", "'post_test_masks_plc'", ")", "\n", "\n", "required_placeholders", "[", "'test_xs'", "]", "=", "test_xs_plc", "\n", "required_placeholders", "[", "'max_probs'", "]", "=", "max_probs_plc", "\n", "required_placeholders", "[", "'post_test_samples'", "]", "=", "post_test_samples_plc", "\n", "required_placeholders", "[", "'post_test_masks'", "]", "=", "post_test_masks_plc", "\n", "required_placeholders", "[", "'invKs'", "]", "=", "invKs_plc", "\n", "required_placeholders", "[", "'invpNKs'", "]", "=", "invpNKs_plc", "\n", "\n", "", "if", "is_debug_mode", ":", "\n", "        ", "required_placeholders", "[", "'xs_to_debug'", "]", "=", "tf", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "xdim", ")", ",", "dtype", "=", "dtype", ",", "name", "=", "'xs_plot'", ")", "\n", "\n", "", "return", "required_placeholders", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.get_intermediate_tensors": [[325, 502], ["utils.precomputeInvKs", "bo_discrete.optimize_mean_f", "tensorflow_probability.distributions.MultivariateNormalDiag", "tfp.distributions.MultivariateNormalDiag.sample", "range", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.reduce_max", "bo_discrete.optimize_criterion", "utils.compute_mean_var_f", "tf.stack.append", "tf.stack.append", "utils.sqrtm", "tensorflow.argmax", "tensorflow.gather", "tensorflow.reduce_max", "tf.stack.append", "tf.stack.append", "utils.compute_mean_f", "bo_discrete.evaluate_criterion", "tensorflow.zeros", "tensorflow.ones", "tensorflow.reshape", "tensorflow.transpose", "utils.eval_invKmaxsams", "range", "tensorflow.stack", "tensorflow.stack", "evaluate_mp.get_pNK_test_obs", "utils.compute_mean_var_f", "tf.stack.append", "tf.stack.append", "tensorflow.squeeze"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.precomputeInvKs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.optimize_mean_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.optimize_criterion", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sqrtm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.eval_invKmaxsams", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_pNK_test_obs", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["", "def", "get_intermediate_tensors", "(", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "# tf.variable to load", "\n", "dtype", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "batchsize", "=", "crit_params", "[", "'batchsize'", "]", "# batchsize to evaluate/optimize criterion", "\n", "\n", "xs_to_optimize", "=", "required_placeholders", "[", "'xs_to_optimize'", "]", "\n", "xs_batch", "=", "required_placeholders", "[", "'xs_batch'", "]", "\n", "Xsamples_plc", "=", "required_placeholders", "[", "'X'", "]", "\n", "Ysamples_plc", "=", "required_placeholders", "[", "'Y'", "]", "\n", "\n", "invKs", "=", "utils", ".", "precomputeInvKs", "(", "xdim", ",", "nhyp", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples_plc", ",", "dtype", ")", "\n", "# nhyp x nobs x nobs", "\n", "\n", "\n", "# Optimize mean function", "\n", "max_meanf_x", ",", "max_meanf_f", ",", "max_meanf_idx", "=", "optimize_mean_f", "(", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ",", "\n", "xs_to_optimize", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "\n", "# Sampling functions from the GP posterior", "\n", "obs_standard_norm", "=", "tfp", ".", "distributions", ".", "MultivariateNormalDiag", "(", "\n", "loc", "=", "tf", ".", "zeros", "(", "nx", ",", "dtype", "=", "dtype", ")", ",", "\n", "scale_diag", "=", "tf", ".", "ones", "(", "nx", ",", "dtype", "=", "dtype", ")", ")", "\n", "obs_samples", "=", "obs_standard_norm", ".", "sample", "(", "sample_shape", "=", "nmax", ")", "\n", "# (nmax, nx)", "\n", "\n", "sample_max_xs", "=", "[", "]", "\n", "sample_max_fs", "=", "[", "]", "\n", "\n", "x_to_opt_meanf_all", "=", "[", "]", "\n", "x_to_opt_covf_all", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "x_to_opt_meanf", ",", "x_to_opt_covf", "=", "utils", ".", "compute_mean_var_f", "(", "\n", "xs_to_optimize", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "sigma0s", "[", "i", ",", "...", "]", ",", "\n", "fullcov", "=", "True", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "x_to_opt_meanf_all", ".", "append", "(", "x_to_opt_meanf", ")", "\n", "x_to_opt_covf_all", ".", "append", "(", "x_to_opt_covf", ")", "\n", "\n", "x_to_opt_sqrtcovf", "=", "utils", ".", "sqrtm", "(", "x_to_opt_covf", ")", "\n", "\n", "x_to_opt_fsamples", "=", "x_to_opt_sqrtcovf", "@", "tf", ".", "transpose", "(", "obs_samples", ")", "+", "tf", ".", "reshape", "(", "x_to_opt_meanf", ",", "shape", "=", "(", "nx", ",", "1", ")", ")", "\n", "# shape = (nx, nmax)", "\n", "\n", "max_idx", "=", "tf", ".", "argmax", "(", "x_to_opt_fsamples", ",", "axis", "=", "0", ")", "\n", "sample_max_x", "=", "tf", ".", "gather", "(", "xs_to_optimize", ",", "max_idx", ",", "axis", "=", "0", ")", "\n", "# nmax, xdim", "\n", "sample_max_f", "=", "tf", ".", "reduce_max", "(", "x_to_opt_fsamples", ",", "axis", "=", "0", ")", "\n", "# nmax,", "\n", "\n", "sample_max_xs", ".", "append", "(", "sample_max_x", ")", "\n", "sample_max_fs", ".", "append", "(", "sample_max_f", ")", "\n", "\n", "", "sample_max_xs", "=", "tf", ".", "stack", "(", "sample_max_xs", ")", "\n", "# nhyp, nmax, xdim", "\n", "sample_max_fs", "=", "tf", ".", "stack", "(", "sample_max_fs", ")", "\n", "# nhyp, nmax", "\n", "\n", "x_to_opt_meanf_all", "=", "tf", ".", "stack", "(", "x_to_opt_meanf_all", ")", "\n", "x_to_opt_covf_all", "=", "tf", ".", "stack", "(", "x_to_opt_covf_all", ")", "\n", "\n", "max_observed_y", "=", "tf", ".", "reduce_max", "(", "Ysamples_plc", ")", "\n", "\n", "max_crit_x", ",", "max_crit", ",", "max_crit_idx", "=", "optimize_criterion", "(", "\n", "xs_batch", ",", "batchsize", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "intermediate_tensors", "=", "{", "\n", "'max_meanf_x'", ":", "max_meanf_x", ",", "\n", "'max_meanf_f'", ":", "max_meanf_f", ",", "\n", "'max_meanf_idx'", ":", "max_meanf_idx", ",", "\n", "'max_crit_x'", ":", "max_crit_x", ",", "\n", "'max_crit'", ":", "max_crit", ",", "\n", "'max_crit_idx'", ":", "max_crit_idx", ",", "\n", "'invKs'", ":", "invKs", ",", "\n", "\n", "# for distributional performance measure", "\n", "'x_to_opt_meanf'", ":", "x_to_opt_meanf_all", ",", "\n", "'x_to_opt_covf'", ":", "x_to_opt_covf_all", ",", "\n", "}", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "intermediate_tensors", "[", "'sample_max_xs'", "]", "=", "sample_max_xs", "\n", "intermediate_tensors", "[", "'sample_max_fs'", "]", "=", "sample_max_fs", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "intermediate_tensors", "[", "'max_observed_y'", "]", "=", "max_observed_y", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "invKmaxsams", "=", "utils", ".", "eval_invKmaxsams", "(", "xdim", ",", "nhyp", ",", "nmax", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", "[", "'X'", "]", ",", "\n", "required_placeholders", "[", "'sample_max_xs'", "]", ",", "\n", "dtype", ")", "\n", "\n", "intermediate_tensors", "[", "'invKmaxsams'", "]", "=", "invKmaxsams", "\n", "intermediate_tensors", "[", "'sample_max_xs'", "]", "=", "sample_max_xs", "\n", "intermediate_tensors", "[", "'sample_max_fs'", "]", "=", "sample_max_fs", "\n", "intermediate_tensors", "[", "'max_observed_y'", "]", "=", "max_observed_y", "\n", "\n", "", "elif", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "mean_tests_given_data", "=", "[", "]", "# nhyp, ntest", "\n", "cov_tests_given_data", "=", "[", "]", "# nhyp, ntest, ntest", "\n", "\n", "for", "i", "in", "range", "(", "crit_params", "[", "'nhyp'", "]", ")", ":", "\n", "            ", "mean_test_i", ",", "cov_test_i", "=", "utils", ".", "compute_mean_var_f", "(", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "sigma0s", "[", "i", ",", "...", "]", ",", "\n", "fullcov", "=", "True", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "mean_tests_given_data", ".", "append", "(", "tf", ".", "squeeze", "(", "mean_test_i", ")", ")", "\n", "cov_tests_given_data", ".", "append", "(", "cov_test_i", ")", "\n", "\n", "", "mean_tests_given_data", "=", "tf", ".", "stack", "(", "mean_tests_given_data", ")", "\n", "# (nhyp, ntest)", "\n", "cov_tests_given_data", "=", "tf", ".", "stack", "(", "cov_tests_given_data", ")", "\n", "# (nhyp, ntest, ntest)", "\n", "\n", "_", ",", "invpNKs", "=", "evaluate_mp", ".", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "nhyp", ",", "\n", "required_placeholders", "[", "'X'", "]", ",", "\n", "required_placeholders", "[", "'test_xs'", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", "=", "invpNKs", "\n", "intermediate_tensors", "[", "'sample_max_xs'", "]", "=", "sample_max_xs", "\n", "intermediate_tensors", "[", "'sample_max_fs'", "]", "=", "sample_max_fs", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", "=", "mean_tests_given_data", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "=", "cov_tests_given_data", "\n", "\n", "", "if", "is_debug_mode", ":", "\n", "        ", "mean_f_debug", "=", "utils", ".", "compute_mean_f", "(", "\n", "xs_to_debug", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples_plc", ",", "Ysamples_plc", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ",", "\n", "dtype", ")", "\n", "\n", "crit_to_debug", "=", "evaluate_criterion", "(", "\n", "xs_to_debug", ",", "xs_to_debug", ".", "shape", "[", "0", "]", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "intermediate_tensors", "[", "'mean_f_debug'", "]", "=", "mean_f_debug", "\n", "intermediate_tensors", "[", "'crit_to_debug'", "]", "=", "crit_to_debug", "\n", "\n", "", "return", "intermediate_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.get_placeholder_values": [[504, 648], ["sess.run", "sess.run", "sess.run", "print", "utils.remove_duplicates_np", "sess.run", "utils.remove_duplicates_np.reshape", "utils.remove_duplicates_np", "sess.run", "utils.get_testidxs_stats", "sess.run", "print", "print", "numpy.array", "numpy.random.shuffle", "numpy.concatenate", "post_test_v1.astype", "list", "range"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.remove_duplicates_np", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.remove_duplicates_np", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_testidxs_stats"], ["", "def", "get_placeholder_values", "(", "sess", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "required_placeholders", ",", "\n", "intermediate_tensors", ",", "\n", "\n", "X_np", ",", "Y_np", ",", "\n", "xs_to_optimize_np", ",", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "is_debug_mode", "=", "False", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "# is_test_include_obs == True", "\n", "# nmax == ntest", "\n", "\n", "values", "=", "{", "'query_x'", ":", "None", "}", "\n", "\n", "if", "'max_observed_y'", "in", "intermediate_tensors", ":", "\n", "        ", "max_observed_y_np", "=", "sess", ".", "run", "(", "intermediate_tensors", "[", "'max_observed_y'", "]", ",", "\n", "feed_dict", "=", "{", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "}", ")", "\n", "values", "[", "'max_observed_y'", "]", "=", "max_observed_y_np", "\n", "\n", "", "if", "'invKs'", "in", "intermediate_tensors", ":", "\n", "        ", "invKs_np", "=", "sess", ".", "run", "(", "intermediate_tensors", "[", "'invKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", "\n", "}", ")", "\n", "values", "[", "'invKs'", "]", "=", "invKs_np", "\n", "\n", "\n", "", "if", "'sample_max_xs'", "in", "intermediate_tensors", "or", "'sample_max_fs'", "in", "intermediate_tensors", ":", "\n", "# Optimize function samples", "\n", "        ", "sample_max_fs_np", ",", "sample_max_xs_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'sample_max_fs'", "]", ",", "\n", "intermediate_tensors", "[", "'sample_max_xs'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'xs_to_optimize'", "]", ":", "xs_to_optimize_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'invKs'", "]", ":", "invKs_np", "\n", "}", ")", "\n", "values", "[", "'sample_max_fs'", "]", "=", "sample_max_fs_np", "\n", "values", "[", "'sample_max_xs'", "]", "=", "sample_max_xs_np", "\n", "\n", "# Optimize acquisition functions", "\n", "", "if", "criterion", "in", "[", "'pes'", ",", "'ftl'", ",", "'sftl'", "]", ":", "\n", "        ", "print", "(", "\"Only implement for known GP hyperparameter only!\"", ")", "\n", "\n", "unique_sample_max_xs_np", "=", "utils", ".", "remove_duplicates_np", "(", "\n", "sample_max_xs_np", "[", "0", ",", "...", "]", ",", "\n", "resolution", "=", "duplicate_resolution", ")", "\n", "\n", "if", "unique_sample_max_xs_np", ".", "shape", "[", "0", "]", "==", "1", "and", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "            ", "values", "[", "'query_x'", "]", "=", "unique_sample_max_xs_np", "\n", "return", "values", "\n", "\n", "", "if", "criterion", "==", "'pes'", ":", "\n", "            ", "invKmaxsams_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'invKmaxsams'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", ",", "\n", "required_placeholders", "[", "'sample_max_xs'", "]", ":", "sample_max_xs_np", "\n", "}", ")", "\n", "values", "[", "'invKmaxsams'", "]", "=", "invKmaxsams_np", "\n", "\n", "", "elif", "criterion", "in", "[", "'ftl'", ",", "'sftl'", "]", ":", "\n", "            ", "max_n_test", "=", "crit_params", "[", "'max_n_test'", "]", "\n", "\n", "test_xs_np", "=", "unique_sample_max_xs_np", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "if", "max_n_test", ">", "test_xs_np", ".", "shape", "[", "0", "]", ":", "\n", "# include more inputs from X_np into test_xs_np", "\n", "                ", "n_extra", "=", "max_n_test", "-", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "n_extra", "=", "n_extra", "if", "n_extra", "<", "X_np", ".", "shape", "[", "0", "]", "else", "X_np", ".", "shape", "[", "0", "]", "\n", "\n", "print", "(", "\"Include {} more x from X_np into test_xs_np: randomly\"", ".", "format", "(", "n_extra", ")", ")", "\n", "print", "(", "\"Another option is to select based on mean_f\"", ")", "\n", "\n", "idxs", "=", "np", ".", "array", "(", "list", "(", "range", "(", "X_np", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "test_xs_np", "=", "np", ".", "concatenate", "(", "[", "test_xs_np", ",", "X_np", "[", "idxs", "[", ":", "n_extra", "]", ",", ":", "]", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "test_xs_np", "=", "utils", ".", "remove_duplicates_np", "(", "\n", "test_xs_np", ",", "\n", "resolution", "=", "duplicate_resolution", ")", "\n", "\n", "ntest", "=", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "\n", "if", "ntest", "==", "1", ":", "\n", "                ", "values", "[", "'query_x'", "]", "=", "test_xs_np", "\n", "return", "values", "\n", "\n", "", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", "=", "sess", ".", "run", "(", "[", "\n", "intermediate_tensors", "[", "'mean_test_given_data'", "]", ",", "\n", "intermediate_tensors", "[", "'cov_test_given_data'", "]", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "test_xs_np", ",", "max_probs_np", ",", "mean_tests_given_data_np", ",", "cov_tests_given_data_np", ",", "post_test_v0", ",", "post_test_v1", "=", "utils", ".", "get_testidxs_stats", "(", "nhyp", ",", "\n", "test_xs_np", ",", "# (ntest, xdim)", "\n", "mean_tests_given_data_np", ",", "# (nhyp, ntest)", "\n", "cov_tests_given_data_np", ",", "# (nhyp, ntest, ntest)", "\n", "mode", "=", "crit_params", "[", "'mode'", "]", ",", "\n", "nsample", "=", "crit_params", "[", "'ntestsample'", "]", ")", "\n", "\n", "if", "test_xs_np", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "                ", "values", "[", "'query_x'", "]", "=", "test_xs_np", "\n", "return", "values", "\n", "\n", "", "invpNKs_np", "=", "sess", ".", "run", "(", "\n", "intermediate_tensors", "[", "'invpNKs'", "]", ",", "\n", "feed_dict", "=", "{", "\n", "required_placeholders", "[", "'test_xs'", "]", ":", "test_xs_np", ",", "\n", "required_placeholders", "[", "'X'", "]", ":", "X_np", ",", "\n", "required_placeholders", "[", "'Y'", "]", ":", "Y_np", "\n", "}", ")", "\n", "\n", "values", "[", "'test_xs'", "]", "=", "test_xs_np", "\n", "values", "[", "'max_probs'", "]", "=", "max_probs_np", "\n", "values", "[", "'invpNKs'", "]", "=", "invpNKs_np", "\n", "\n", "if", "criterion", "==", "'sftl'", ":", "\n", "                ", "post_test_samples_np", "=", "post_test_v0", "\n", "post_test_masks_np", "=", "post_test_v1", ".", "astype", "(", "bool", ")", "\n", "\n", "values", "[", "'post_test_samples'", "]", "=", "post_test_samples_np", "\n", "values", "[", "'post_test_masks'", "]", "=", "post_test_masks_np", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "                ", "post_mean_test_np", "=", "post_test_v0", "\n", "post_cov_test_np", "=", "post_test_v1", "\n", "\n", "values", "[", "'post_mean_tests'", "]", "=", "post_mean_test_np", "\n", "values", "[", "'post_cov_tests'", "]", "=", "post_cov_test_np", "\n", "\n", "", "", "", "return", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion": [[651, 791], ["tensorflow.shape", "evaluate_mes.mes", "print", "evaluate_ei.ei", "print", "evaluate_ucb.ucb", "evaluate_pes.pes", "evaluate_mp.mp", "evaluate_sample_mp.mp", "Exception"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mes.mes", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ei.ei", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ucb.ucb", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.pes", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp"], ["", "def", "evaluate_criterion", "(", "xs", ",", "nx", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "xdim", "=", "crit_params", "[", "'xdim'", "]", "\n", "nhyp", "=", "crit_params", "[", "'nhyp'", "]", "\n", "\n", "Xsamples", "=", "required_placeholders", "[", "'X'", "]", "\n", "Ysamples", "=", "required_placeholders", "[", "'Y'", "]", "\n", "nobs", "=", "tf", ".", "shape", "(", "Xsamples", ")", "[", "0", "]", "\n", "\n", "if", "criterion", "==", "'mes'", ":", "\n", "        ", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "\n", "sample_max_fs", "=", "required_placeholders", "[", "'sample_max_fs'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_mes", ".", "mes", "(", "xs", ",", "\n", "xdim", ",", "nmax", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "sample_max_fs", ",", "invKs", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "", "elif", "criterion", "==", "'ei'", ":", "\n", "        ", "print", "(", "\"EI uses max observed y.\"", ")", "\n", "max_observed_y", "=", "required_placeholders", "[", "'max_observed_y'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_ei", ".", "ei", "(", "xs", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "\n", "max_observed_y", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "", "elif", "criterion", "==", "'ucb'", ":", "\n", "        ", "beta", "=", "1.5", "\n", "print", "(", "\"UCB uses beta={}.\"", ".", "format", "(", "beta", ")", ")", "\n", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "\n", "vals", "=", "evaluate_ucb", ".", "ucb", "(", "xs", ",", "\n", "xdim", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "\n", "dtype", "=", "dtype", ",", "beta", "=", "beta", ")", "\n", "\n", "", "elif", "criterion", "==", "'pes'", ":", "\n", "        ", "nmax", "=", "crit_params", "[", "'nmax'", "]", "\n", "\n", "max_observed_y", "=", "required_placeholders", "[", "'max_observed_y'", "]", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "invKmaxsams", "=", "required_placeholders", "[", "'invKmaxsams'", "]", "\n", "sample_max_xs", "=", "required_placeholders", "[", "'sample_max_xs'", "]", "\n", "\n", "vals", "=", "evaluate_pes", ".", "pes", "(", "xs", ",", "\n", "xdim", ",", "nmax", ",", "nhyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "sample_max_xs", ",", "\n", "invKs", ",", "invKmaxsams", ",", "\n", "max_observed_y", ",", "\n", "dtype", "=", "dtype", ",", "n_x", "=", "nx", ")", "\n", "\n", "", "elif", "criterion", "==", "'ftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "deterministic", "=", "crit_params", "[", "'deterministic'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_mean_tests", "=", "required_placeholders", "[", "'post_mean_tests'", "]", "\n", "post_cov_tests", "=", "required_placeholders", "[", "'post_cov_tests'", "]", "\n", "\n", "invKs", "=", "required_placeholders", "[", "'invKs'", "]", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_mp", ".", "mp", "(", "xs", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "max_probs", ",", "\n", "\n", "post_mean_tests", ",", "\n", "post_cov_tests", ",", "\n", "\n", "invKs", ",", "\n", "invpNKs", ",", "\n", "\n", "stochastic", "=", "1", "-", "deterministic", ",", "\n", "dtype", "=", "dtype", ",", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "elif", "criterion", "==", "'sftl'", ":", "\n", "        ", "nysample", "=", "crit_params", "[", "'nysample'", "]", "\n", "nstoiter", "=", "crit_params", "[", "'nstoiter'", "]", "\n", "parallel_iterations", "=", "crit_params", "[", "'parallel_iterations'", "]", "\n", "\n", "test_xs", "=", "required_placeholders", "[", "'test_xs'", "]", "\n", "max_probs", "=", "required_placeholders", "[", "'max_probs'", "]", "\n", "post_test_samples", "=", "required_placeholders", "[", "'post_test_samples'", "]", "\n", "post_test_masks", "=", "required_placeholders", "[", "'post_test_masks'", "]", "\n", "\n", "invpNKs", "=", "required_placeholders", "[", "'invpNKs'", "]", "\n", "\n", "vals", "=", "evaluate_sample_mp", ".", "mp", "(", "xs", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "Ysamples", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs", ",", "# nhyp, nmax", "\n", "\n", "post_test_samples", ",", "# nhyp, nmax, ntest, nsample", "\n", "post_test_masks", ",", "# nhyp, nmax, nsample, dtype: tf.bool", "\n", "\n", "invpNKs", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "dtype", ",", "\n", "\n", "niteration", "=", "nstoiter", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown criterion: {}\"", ".", "format", "(", "criterion", ")", ")", "\n", "\n", "", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.optimize_criterion": [[794, 808], ["bo_discrete.evaluate_criterion", "tensorflow.argmax"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.bo_discrete.evaluate_criterion"], ["", "def", "optimize_criterion", "(", "xs", ",", "nx", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "fvals", "=", "evaluate_criterion", "(", "xs", ",", "nx", ",", "\n", "criterion", ",", "crit_params", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "required_placeholders", ",", "\n", "dtype", "=", "dtype", ")", "\n", "\n", "idx", "=", "tf", ".", "argmax", "(", "fvals", ")", "# TODO: check the shape of fvals", "\n", "return", "xs", "[", "idx", ",", "...", "]", ",", "fvals", "[", "idx", "]", ",", "idx", "\n", "# return assign, train, max_x", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_samples_by_importance_sampling": [[9, 33], ["mean_xs.reshape.reshape", "numpy.array", "scipy.stats.multivariate_normal.rvs", "scipy.stats.multivariate_normal.rvs", "numpy.ones", "range", "numpy.concatenate", "numpy.where"], "function", ["None"], ["def", "get_samples_by_importance_sampling", "(", "mean_xs", ",", "cov_xs", ",", "max_idx", ",", "nsample", "=", "100", ",", "ntrial", "=", "1000", ")", ":", "\n", "    ", "xdim", "=", "cov_xs", ".", "shape", "[", "0", "]", "\n", "mean_xs", "=", "mean_xs", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "all_samples", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "\n", "while", "all_samples", ".", "shape", "[", "0", "]", "<", "nsample", ":", "\n", "\n", "        ", "samples", "=", "scipy", ".", "stats", ".", "multivariate_normal", ".", "rvs", "(", "mean_xs", ",", "cov_xs", ",", "ntrial", ")", "\n", "# (nsample, xdim)", "\n", "\n", "valid", "=", "np", ".", "ones", "(", "ntrial", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "range", "(", "xdim", ")", ":", "\n", "            ", "valid_i", "=", "(", "samples", "[", ":", ",", "max_idx", "]", ">=", "samples", "[", ":", ",", "i", "]", ")", ".", "astype", "(", "int", ")", "\n", "valid", "=", "valid", "*", "valid_i", "\n", "", "valid_samples", "=", "samples", "[", "np", ".", "where", "(", "valid", "==", "1", ")", "[", "0", "]", ",", ":", "]", "\n", "\n", "if", "all_samples", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "all_samples", "=", "valid_samples", "\n", "", "else", ":", "\n", "            ", "all_samples", "=", "np", ".", "concatenate", "(", "[", "all_samples", ",", "valid_samples", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "all_samples", "=", "all_samples", "[", ":", "nsample", ",", ":", "]", "\n", "return", "all_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_samples_by_conditional_sampling": [[35, 82], ["mean_xs.reshape.reshape", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "scipy.stats.multivariate_normal.rvs().reshape", "scipy.stats.multivariate_normal.rvs().reshape", "numpy.max", "numpy.concatenate", "numpy.linalg.inv", "numpy.squeeze", "numpy.squeeze", "scipy.stats.norm.logsf", "scipy.stats.norm.logsf", "numpy.exp", "scipy.stats.truncnorm.rvs().reshape", "scipy.stats.truncnorm.rvs().reshape", "numpy.any", "numpy.concatenate", "numpy.delete", "numpy.delete", "scipy.special.logsumexp", "scipy.special.logsumexp", "numpy.where", "numpy.isinf", "print", "scipy.stats.multivariate_normal.rvs", "scipy.stats.multivariate_normal.rvs", "np.concatenate.dot().dot", "np.concatenate.dot().dot", "numpy.sqrt", "scipy.stats.truncnorm.rvs", "scipy.stats.truncnorm.rvs", "numpy.isinf", "np.concatenate.dot", "np.concatenate.dot", "numpy.sqrt", "np.concatenate.reshape", "numpy.sqrt"], "function", ["None"], ["", "def", "get_samples_by_conditional_sampling", "(", "mean_xs", ",", "cov_xs", ",", "max_idx", ",", "nsample", "=", "100", ")", ":", "\n", "    ", "xdim", "=", "cov_xs", ".", "shape", "[", "0", "]", "\n", "mean_xs", "=", "mean_xs", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "max_idx_mean", "=", "mean_xs", "[", "max_idx", "]", "\n", "max_idx_var", "=", "cov_xs", "[", "max_idx", ",", "max_idx", "]", "\n", "\n", "non_max_mean", "=", "np", ".", "concatenate", "(", "[", "mean_xs", "[", ":", "max_idx", "]", ",", "mean_xs", "[", "(", "max_idx", "+", "1", ")", ":", "]", "]", ")", "\n", "non_max_cov", "=", "np", ".", "concatenate", "(", "[", "cov_xs", "[", ":", "max_idx", ",", ":", "]", ",", "cov_xs", "[", "(", "max_idx", "+", "1", ")", ":", "]", "]", ",", "axis", "=", "0", ")", "\n", "non_max_cov", "=", "np", ".", "concatenate", "(", "[", "non_max_cov", "[", ":", ",", ":", "max_idx", "]", ",", "non_max_cov", "[", ":", ",", "(", "max_idx", "+", "1", ")", ":", "]", "]", ",", "axis", "=", "1", ")", "\n", "\n", "non_max_samples", "=", "scipy", ".", "stats", ".", "multivariate_normal", ".", "rvs", "(", "non_max_mean", ",", "non_max_cov", ",", "nsample", ")", ".", "reshape", "(", "nsample", ",", "-", "1", ")", "\n", "# (nsample,nx-1)", "\n", "max_non_max_samples", "=", "np", ".", "max", "(", "non_max_samples", ",", "axis", "=", "1", ")", "\n", "# (nsample,)", "\n", "\n", "# compute conditional max_idx distribution", "\n", "# shape (nsample,)", "\n", "k_maxidx_rest", "=", "np", ".", "concatenate", "(", "[", "cov_xs", "[", "max_idx", ",", ":", "(", "max_idx", ")", "]", ",", "cov_xs", "[", "max_idx", ",", "(", "max_idx", "+", "1", ")", ":", "]", "]", ")", "\n", "invk_rest_rest", "=", "np", ".", "linalg", ".", "inv", "(", "non_max_cov", ")", "\n", "conditional_max_idx_mean", "=", "np", ".", "squeeze", "(", "\n", "max_idx_mean", "\n", "+", "k_maxidx_rest", ".", "dot", "(", "invk_rest_rest", ")", ".", "dot", "(", "(", "non_max_samples", "-", "non_max_mean", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", ".", "T", ")", ")", "\n", "conditional_max_idx_var", "=", "np", ".", "squeeze", "(", "max_idx_var", "-", "k_maxidx_rest", ".", "dot", "(", "invk_rest_rest", ")", ".", "dot", "(", "k_maxidx_rest", ".", "T", ")", ")", "\n", "\n", "logweight", "=", "scipy", ".", "stats", ".", "norm", ".", "logsf", "(", "max_non_max_samples", ",", "loc", "=", "max_idx_mean", ",", "scale", "=", "np", ".", "sqrt", "(", "max_idx_var", ")", ")", "\n", "# (xdim,)", "\n", "\n", "logweight", "=", "logweight", "-", "scipy", ".", "special", ".", "logsumexp", "(", "logweight", ")", "\n", "weight", "=", "np", ".", "exp", "(", "logweight", ")", "\n", "\n", "max_idx_samples", "=", "scipy", ".", "stats", ".", "truncnorm", ".", "rvs", "(", "a", "=", "(", "max_non_max_samples", "-", "conditional_max_idx_mean", ")", "/", "np", ".", "sqrt", "(", "conditional_max_idx_var", ")", ",", "b", "=", "np", ".", "infty", ",", "loc", "=", "conditional_max_idx_mean", ",", "scale", "=", "np", ".", "sqrt", "(", "conditional_max_idx_var", ")", ")", ".", "reshape", "(", "nsample", ",", "1", ")", "\n", "# (nsample,1)", "\n", "\n", "\n", "\n", "infidxs", "=", "np", ".", "where", "(", "np", ".", "isinf", "(", "max_idx_samples", ")", ")", "[", "0", "]", "\n", "\n", "if", "np", ".", "any", "(", "np", ".", "isinf", "(", "max_idx_samples", ")", ")", ":", "\n", "        ", "print", "(", "\"empirical_approximation.py:get_samples_by_conditional_sampling:truncnorm sampling return INF sample! Remove {} inf samples\"", ".", "format", "(", "infidxs", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "", "samples", "=", "np", ".", "concatenate", "(", "[", "non_max_samples", "[", ":", ",", ":", "max_idx", "]", ",", "max_idx_samples", ",", "non_max_samples", "[", ":", ",", "max_idx", ":", "]", "]", ",", "axis", "=", "1", ")", "\n", "samples", "=", "np", ".", "delete", "(", "samples", ",", "infidxs", ",", "axis", "=", "0", ")", "\n", "weight", "=", "np", ".", "delete", "(", "weight", ",", "infidxs", ")", "\n", "weight", "*=", "weight", ".", "shape", "[", "0", "]", "\n", "\n", "return", "samples", ",", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_empirical_stat_from_samples": [[86, 106], ["numpy.sum", "np.ones.reshape", "numpy.ones", "numpy.sum", "numpy.sqrt", "zero_mean_samples.T.dot", "emean.reshape"], "function", ["None"], ["", "def", "get_empirical_stat_from_samples", "(", "samples", ",", "weight", "=", "None", ")", ":", "\n", "# samples: nx, xdim", "\n", "# weight: nx,", "\n", "\n", "    ", "n", "=", "samples", ".", "shape", "[", "0", "]", "\n", "if", "weight", "is", "None", ":", "\n", "        ", "weight", "=", "np", ".", "ones", "(", "n", ")", "\n", "\n", "", "total_weight", "=", "np", ".", "sum", "(", "weight", ")", "\n", "\n", "weight", "=", "weight", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "emean", "=", "np", ".", "sum", "(", "samples", "*", "weight", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "/", "total_weight", "\n", "# (1,xdim)", "\n", "\n", "zero_mean_samples", "=", "(", "samples", "-", "emean", ")", "*", "np", ".", "sqrt", "(", "weight", ")", "\n", "ecov", "=", "zero_mean_samples", ".", "T", ".", "dot", "(", "zero_mean_samples", ")", "/", "(", "total_weight", "-", "1.0", ")", "\n", "# (xdim,xdim)", "\n", "\n", "return", "emean", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "ecov", "\n", "# (xdim,1)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_empirical_stat": [[110, 124], ["mean_xs.reshape.reshape", "empirical_approximation.get_samples_by_importance_sampling", "empirical_approximation.get_samples_by_conditional_sampling", "len", "empirical_approximation.get_empirical_stat_from_samples"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_samples_by_importance_sampling", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_samples_by_conditional_sampling", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_empirical_stat_from_samples"], ["", "def", "get_empirical_stat", "(", "mean_xs", ",", "cov_xs", ",", "max_idx", ",", "nsample", "=", "100", ",", "ntrial", "=", "1000", ",", "importance_sampling", "=", "False", ")", ":", "\n", "    ", "mean_xs", "=", "mean_xs", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "if", "importance_sampling", ":", "\n", "        ", "samples", "=", "get_samples_by_importance_sampling", "(", "mean_xs", ",", "cov_xs", ",", "max_idx", ",", "nsample", ",", "ntrial", ")", "\n", "weights", "=", "None", "\n", "", "else", ":", "\n", "        ", "samples", ",", "weights", "=", "get_samples_by_conditional_sampling", "(", "mean_xs", ",", "cov_xs", ",", "max_idx", ",", "nsample", ")", "\n", "\n", "", "if", "len", "(", "samples", ")", ">", "0", ":", "\n", "        ", "mean", ",", "cov", "=", "get_empirical_stat_from_samples", "(", "samples", ",", "weights", ")", "\n", "return", "mean", ",", "cov", "\n", "\n", "", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.perturb": [[15, 46], ["range", "range", "numpy.sqrt", "numpy.sum", "numpy.any", "numpy.any", "numpy.sqrt", "numpy.sum", "numpy.random.rand"], "function", ["None"], ["def", "perturb", "(", "xs", ",", "duplicate_resolution", ",", "xmin", ",", "xmax", ")", ":", "\n", "    ", "\"\"\"\n    xs: n x d\n    if exist i,j dist(xs[i,:], xs[j,:]) <= duplicate_resolution\n        perturb xs[i,:] such that dist(xs[i,:], xs[j,:]) > duplicate_resolution\n            and xs[i,:] >= xmin and xs[i,:] <= xmax\n    \"\"\"", "\n", "n", "=", "xs", ".", "shape", "[", "0", "]", "\n", "d", "=", "xs", ".", "shape", "[", "1", "]", "\n", "\n", "is_duplicated", "=", "True", "\n", "\n", "while", "is_duplicated", ":", "\n", "\n", "        ", "is_duplicated", "=", "False", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "n", ")", ":", "\n", "                ", "diff", "=", "xs", "[", "i", ",", ":", "]", "-", "xs", "[", "j", ",", ":", "]", "\n", "rms", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "diff", "*", "diff", ")", ")", "\n", "\n", "while", "rms", "<=", "duplicate_resolution", "or", "np", ".", "any", "(", "xs", "[", "j", ",", ":", "]", "<", "xmin", ")", "or", "np", ".", "any", "(", "xs", "[", "j", ",", ":", "]", ">", "xmax", ")", ":", "\n", "# modify xs[j]", "\n", "                    ", "xs", "[", "j", ",", ":", "]", "=", "xs", "[", "i", ",", ":", "]", "+", "np", ".", "random", ".", "rand", "(", "1", ",", "d", ")", "*", "duplicate_resolution", "*", "4.0", "-", "duplicate_resolution", "*", "2.0", "\n", "\n", "diff", "=", "xs", "[", "i", ",", ":", "]", "-", "xs", "[", "j", ",", ":", "]", "\n", "rms", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "diff", "*", "diff", ")", ")", "\n", "\n", "is_duplicated", "=", "True", "\n", "\n", "", "", "", "", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sqrtm": [[49, 54], ["tensorflow.svd", "tensorflow.transpose", "tensorflow.sqrt"], "function", ["None"], ["", "def", "sqrtm", "(", "mat", ")", ":", "\n", "# return tf.linalg.sqrtm(mat)", "\n", "# only valid for positive symmetric matrix", "\n", "    ", "s", ",", "u", ",", "_", "=", "tf", ".", "svd", "(", "mat", ",", "full_matrices", "=", "True", ")", "\n", "return", "u", "*", "tf", ".", "sqrt", "(", "s", ")", "@", "tf", ".", "transpose", "(", "u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_uniform_random_vect": [[56, 59], ["numpy.random.rand"], "function", ["None"], ["", "def", "get_uniform_random_vect", "(", "size", ",", "dim", ",", "xmin", ",", "xmax", ")", ":", "\n", "    ", "xs", "=", "np", ".", "random", ".", "rand", "(", "size", ",", "dim", ")", "*", "(", "xmax", "-", "xmin", ")", "+", "xmin", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_maxfd_maxfs_given_maxxs": [[60, 126], ["tensorflow_probability.distributions.MultivariateNormalDiag", "tfp.distributions.MultivariateNormalDiag.sample", "tensorflow.reduce_max", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow_probability.distributions.TruncatedNormal().sample", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.zeros", "tensorflow.ones", "tensorflow.transpose", "tensorflow_probability.distributions.TruncatedNormal"], "function", ["None"], ["", "def", "sample_maxfd_maxfs_given_maxxs", "(", "\n", "X", ",", "Y", ",", "\n", "\n", "xdim", ",", "\n", "nobs", ",", "nmaxloc", ",", "\n", "nmaxfd", ",", "# == n_maxfobs", "\n", "nmaxf", ",", "# == nmaxf_per_maxfobs", "\n", "\n", "maxlocs", ",", "# (nmaxloc, xdim)", "\n", "mean_maxfs", ",", "std_maxfs", ",", "# (nmaxloc,)", "\n", "post_data_f_mean", ",", "# (nobs,)", "\n", "sqrt_post_data_f_cov", ",", "# (nobs, nobs)", "\n", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    sample maxfd and maxfs given maxxs\n    \"\"\"", "\n", "\n", "obs_standard_norm", "=", "tfp", ".", "distributions", ".", "MultivariateNormalDiag", "(", "\n", "loc", "=", "tf", ".", "zeros", "(", "nobs", ",", "dtype", "=", "dtype", ")", ",", "\n", "scale_diag", "=", "tf", ".", "ones", "(", "nobs", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "\"\"\"\n    1. a. sample f values at the observed inputs\n        RETURN: shape = (nhyp, nmaxfd, n_obs)\n        b. sample maximum f at observed inputs\n        RETURN: shape = (nhyp, nmaxfd)\n    \"\"\"", "\n", "standardized_data_f_samples", "=", "obs_standard_norm", ".", "sample", "(", "sample_shape", "=", "(", "nmaxfd", ",", ")", ")", "\n", "# shape = (nmaxfd, n_obs)", "\n", "\n", "data_f_samples", "=", "sqrt_post_data_f_cov", "@", "tf", ".", "transpose", "(", "standardized_data_f_samples", ")", "+", "tf", ".", "reshape", "(", "post_data_f_mean", ",", "shape", "=", "(", "nobs", ",", "1", ")", ")", "\n", "# shape = (n_obs, nmaxfd)", "\n", "\n", "return_data_maxfs", "=", "tf", ".", "reduce_max", "(", "data_f_samples", ",", "axis", "=", "0", ")", "\n", "# shape = (nmaxfd,)", "\n", "\n", "data_maxfs", "=", "tf", ".", "reshape", "(", "return_data_maxfs", ",", "shape", "=", "(", "1", ",", "nmaxfd", ")", ")", "\n", "\n", "\"\"\"\n    2. sample max_fs for each max_x in maxlocs\n        RETURN: shape = (nhyp, nmaxloc, nmaxfd, nmaxf_per_maxfobs)\n    \"\"\"", "\n", "# (2) Sample fmax for each xmax in maxlocs", "\n", "mean_maxfs", "=", "tf", ".", "reshape", "(", "mean_maxfs", ",", "shape", "=", "(", "nmaxloc", ",", "1", ")", ")", "\n", "std_maxfs", "=", "tf", ".", "reshape", "(", "std_maxfs", ",", "shape", "=", "(", "nmaxloc", ",", "1", ")", ")", "\n", "\n", "# truncated normal with mean_fmaxs_i, var_fmaxs_i", "\n", "#     lower bound by: data_maxfs", "\n", "#     mean_fmaxs_i.shape = (nmaxloc,1)", "\n", "#     data_maxfs.shape   = (1, nmaxfd)", "\n", "#     sample_shape       = nmaxf_per_maxfobs", "\n", "#     return shape = (nmaxf, nmaxloc, nmaxfd)", "\n", "max_fs", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "\n", "loc", "=", "mean_maxfs", ",", "\n", "scale", "=", "std_maxfs", ",", "\n", "low", "=", "data_maxfs", ",", "\n", "high", "=", "np", ".", "infty", ",", "\n", "allow_nan_stats", "=", "False", ")", ".", "sample", "(", "nmaxf", ")", "\n", "# shape = (nmaxf, nmaxloc, nmaxfd)", "\n", "\n", "max_fs", "=", "tf", ".", "transpose", "(", "max_fs", ",", "perm", "=", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "# shape = (nmaxloc, nmaxfd, nmaxf)", "\n", "\n", "return", "max_fs", ",", "return_data_maxfs", "\n", "# shape = (nmaxloc, nmaxfd, nmaxf)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_tnorm_plus_norm": [[249, 327], ["tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow_probability.distributions.TruncatedNormal().sample", "tensorflow.reshape", "tensorflow.random.normal", "tensorflow_probability.distributions.TruncatedNormal", "tensorflow.concat", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape"], "function", ["None"], ["", "def", "sample_tnorm_plus_norm", "(", "\n", "mn", ",", "sn", ",", "mf", ",", "sf", ",", "\n", "maxfs", ",", "\n", "n_sample_each_distribution", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    for each distribution defined in mn, sn, mf, sf, maxfs\n    sample n_sample_each_distribution samples\n    for mni, sni, mfi, sfi, maxfsi in (mn, sn, mf, sf, maxfs):\n        distribution is sum of Normal(mni,sni) \n                    and TruncatedNormal(mfi, sfi, low=-infty, high=maxfsi)\n\n    Requires:\n    # maxfs: (..., 1)\n    # mn: (..., nx)\n    # sn: (..., nx)\n    # mf: (..., nx)\n    # sf: (..., nx)\n    # `...' in maxfs, mf, sf should be the same\n    #       but can be multiple dimensions\n    # for example:\n    #   maxfs.shape = (100,10,1)\n    #   mn.shape    = (100,10,500)\n    #   sn.shape    = (100,10,500)\n    #   mf.shape    = (100,10,500)\n    #   sf.shape    = (100,10,500)\n    # IMPORTANT: sf is updated in this function to avoid zero standard deviation\n    # hence we need to update it accordingly outside the function\n\n    Returns:\n        ysamples (shape =(n_sample_each_distribution,..., nx))\n    \"\"\"", "\n", "\n", "r0_low", "=", "-", "np", ".", "infty", "\n", "\n", "# to avoid division by zero in r0_high", "\n", "#   if sf is zero", "\n", "#       set mf and sf to some feasible values", "\n", "#   create masked_sf to set zero entropy for zero sf when returning the result", "\n", "\n", "r0_high", "=", "(", "maxfs", "-", "mf", ")", "/", "sf", "\n", "\n", "# epsilon = tf.cast(1e-6, dtype=dtype)", "\n", "# mask = tf.where(tf.greater(sf, epsilon), tf.ones_like(sf, dtype=dtype), tf.zeros_like(sf, dtype=dtype))", "\n", "# sf = tf.where(tf.greater(sf, epsilon), sf, epsilon * tf.ones_like(sf, dtype=dtype)) # to avoid division by zero in r0_high    ", "\n", "# r0_high = (maxfs - mf) * mask / sf + tf.cast(1e6, dtype=dtype) * (tf.cast(1.0, dtype=dtype) - mask)", "\n", "\n", "r0_loc", "=", "tf", ".", "zeros_like", "(", "r0_high", ",", "dtype", "=", "dtype", ")", "\n", "r0_scale", "=", "tf", ".", "ones_like", "(", "r0_high", ",", "dtype", "=", "dtype", ")", "\n", "# shape = (n_max, nx)", "\n", "\n", "r0", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "\n", "loc", "=", "r0_loc", ",", "\n", "scale", "=", "r0_scale", ",", "\n", "low", "=", "r0_low", ",", "\n", "high", "=", "r0_high", ")", ".", "sample", "(", "n_sample_each_distribution", ")", "\n", "\n", "r0", "=", "tf", ".", "reshape", "(", "r0", ",", "\n", "shape", "=", "tf", ".", "concat", "(", "[", "[", "n_sample_each_distribution", "]", ",", "\n", "tf", ".", "shape", "(", "r0_loc", ")", "]", ",", "\n", "axis", "=", "0", ")", ")", "\n", "# shape = (n_sample_each_maxf, n_max, nx)", "\n", "\n", "\n", "r1", "=", "tf", ".", "random", ".", "normal", "(", "shape", "=", "tf", ".", "concat", "(", "[", "[", "n_sample_each_distribution", "]", ",", "\n", "tf", ".", "shape", "(", "r0_loc", ")", "]", ",", "\n", "axis", "=", "0", ")", ",", "\n", "dtype", "=", "dtype", ")", "\n", "# shape = (n_sample_each_maxf, n_max, nx)", "\n", "\n", "rt", "=", "r0", "*", "sf", "+", "mf", "\n", "rn", "=", "r1", "*", "sn", "+", "mn", "\n", "y_samples", "=", "rn", "+", "rt", "\n", "# shape = (n_sample_each_maxf, n_max, nx)", "\n", "\n", "# IMPORTANT: sf is updated in this function to avoid zero standard deviation", "\n", "# hence we need to update it accordingly outside the function", "\n", "return", "y_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_submatrices_subvects": [[328, 381], ["tensorflow.linalg.diag_part", "tensorflow.transpose", "range", "list", "list", "list", "list", "list", "numpy.meshgrid", "list", "numpy.array().reshape", "tensorflow.gather_nd", "tensorflow.transpose", "tensorflow.linalg.inv", "subcovfs.append", "invsubcovfs.append", "tensorflow.gather", "varfs.append", "range", "range", "range", "range", "range", "zip", "tensorflow.gather", "tensorflow.gather", "tensorflow.transpose", "kdxs.append", "max", "max", "yv.reshape", "xv.reshape", "numpy.array", "numpy.array", "list", "range"], "function", ["None"], ["", "def", "get_submatrices_subvects", "(", "covmat", ",", "n", ",", "covmatdim", ")", ":", "\n", "    ", "\"\"\"\n    covmat.shape = (...,n,n)\n    covmatdim: number of dimensions in covmat\n    return\n        list of submatrices\n        list of subvects\n    \"\"\"", "\n", "varf", "=", "tf", ".", "linalg", ".", "diag_part", "(", "covmat", ")", "\n", "# (...,n)", "\n", "\n", "mat_permute_order", "=", "list", "(", "range", "(", "max", "(", "covmatdim", "-", "2", ",", "0", ")", ",", "covmatdim", ")", ")", "+", "list", "(", "range", "(", "covmatdim", "-", "2", ")", ")", "\n", "covmat", "=", "tf", ".", "transpose", "(", "covmat", ",", "perm", "=", "mat_permute_order", ")", "\n", "\n", "vec_permute_order", "=", "list", "(", "range", "(", "max", "(", "covmatdim", "-", "2", ",", "0", ")", ",", "covmatdim", "-", "1", ")", ")", "+", "list", "(", "range", "(", "covmatdim", "-", "2", ")", ")", "\n", "\n", "subcovfs", "=", "[", "]", "\n", "invsubcovfs", "=", "[", "]", "\n", "kdxs", "=", "[", "]", "\n", "varfs", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "idxs", "=", "list", "(", "range", "(", "i", "+", "1", ")", ")", "\n", "xv", ",", "yv", "=", "np", ".", "meshgrid", "(", "idxs", ",", "idxs", ")", "\n", "idxs", "=", "list", "(", "zip", "(", "yv", ".", "reshape", "(", "-", "1", ",", ")", ",", "xv", ".", "reshape", "(", "-", "1", ",", ")", ")", ")", "\n", "idxs", "=", "np", ".", "array", "(", "idxs", ")", ".", "reshape", "(", "i", "+", "1", ",", "i", "+", "1", ",", "2", ")", "\n", "\n", "subcovi", "=", "tf", ".", "gather_nd", "(", "covmat", ",", "idxs", ")", "\n", "# shape=(i+1,i+1,...)", "\n", "\n", "subcovi", "=", "tf", ".", "transpose", "(", "subcovi", ",", "perm", "=", "mat_permute_order", ")", "\n", "# shape=(...,i+1,i+1)", "\n", "invsubcovi", "=", "tf", ".", "linalg", ".", "inv", "(", "subcovi", ")", "\n", "# shape=(...,i+1,i+1)", "\n", "\n", "\n", "subcovfs", ".", "append", "(", "subcovi", ")", "\n", "invsubcovfs", ".", "append", "(", "invsubcovi", ")", "\n", "\n", "varfi", "=", "tf", ".", "gather", "(", "varf", ",", "indices", "=", "i", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...)", "\n", "varfs", ".", "append", "(", "varfi", ")", "\n", "\n", "if", "i", ">", "0", ":", "\n", "            ", "kdx", "=", "tf", ".", "gather", "(", "subcovi", ",", "i", ")", "\n", "# shape=(i+1,...)", "\n", "kdx", "=", "tf", ".", "gather", "(", "kdx", ",", "np", ".", "array", "(", "list", "(", "range", "(", "i", ")", ")", ",", "dtype", "=", "int", ")", ")", "\n", "# shape=(i,...)", "\n", "kdx", "=", "tf", ".", "transpose", "(", "kdx", ",", "perm", "=", "vec_permute_order", ")", "\n", "# shape=(...,i)", "\n", "kdxs", ".", "append", "(", "kdx", ")", "\n", "\n", "", "", "return", "subcovfs", ",", "invsubcovfs", ",", "kdxs", ",", "varfs", "\n", "# list (n) with i: (...,i+1,i+1)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_conditional_mean_from_submatrices": [[387, 429], ["tensorflow.gather", "tensorflow.expand_dims", "tensorflow.tile", "range", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.expand_dims", "tensorflow.gather", "tf.concat.append", "tensorflow.expand_dims", "list", "list", "range", "range"], "function", ["None"], ["", "def", "compute_conditional_mean_from_submatrices", "(", "\n", "meanf", ",", "# (..., n)", "\n", "invsubcovfs", ",", "# list (n) with i: (...,i+1,i+1)", "\n", "kdxs", ",", "# list (n-1) with i: (...,i+1)", "\n", "varfs", ",", "# list (n) with i: (...) (can be scalar)", "\n", "n", ",", "dim", ",", "\n", "samples", ",", "# (..., n, nsample)", "\n", "nsample", ")", ":", "\n", "    ", "meanfi", "=", "tf", ".", "gather", "(", "meanf", ",", "indices", "=", "0", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...)", "\n", "meanfi", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "meanfi", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...,1,1)", "\n", "meanfi", "=", "tf", ".", "tile", "(", "meanfi", ",", "multiples", "=", "(", "[", "1", "]", "*", "(", "dim", "-", "1", ")", "+", "[", "nsample", "]", ")", ")", "\n", "conditional_meanf", "=", "[", "meanfi", "]", "\n", "\n", "# second dimension of covf onwards", "\n", "for", "i", "in", "range", "(", "1", ",", "n", ")", ":", "\n", "        ", "kdx", "=", "tf", ".", "expand_dims", "(", "kdxs", "[", "i", "-", "1", "]", ",", "axis", "=", "-", "1", ")", "\n", "# shape = (...,i,1)", "\n", "kxd", "=", "tf", ".", "expand_dims", "(", "kdxs", "[", "i", "-", "1", "]", ",", "axis", "=", "-", "2", ")", "\n", "# shape = (...,1,i)", "\n", "\n", "meanfi_1", "=", "tf", ".", "gather", "(", "meanf", ",", "indices", "=", "list", "(", "range", "(", "i", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...,i)", "\n", "meanfi_1", "=", "tf", ".", "expand_dims", "(", "meanfi_1", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...,i,1)", "\n", "\n", "meanfi", "=", "tf", ".", "gather", "(", "meanf", ",", "indices", "=", "i", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...)", "\n", "meanfi", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "meanfi", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...,1,1)", "\n", "\n", "samples_i", "=", "tf", ".", "gather", "(", "samples", ",", "indices", "=", "list", "(", "range", "(", "i", ")", ")", ",", "axis", "=", "dim", "-", "2", ")", "\n", "# shape=(...,i,nsample)", "\n", "\n", "meanfi", "=", "meanfi", "+", "kxd", "@", "invsubcovfs", "[", "i", "-", "1", "]", "@", "(", "samples_i", "-", "meanfi_1", ")", "\n", "# shape=(...,1,nsample)", "\n", "conditional_meanf", ".", "append", "(", "meanfi", ")", "\n", "\n", "", "conditional_meanf", "=", "tf", ".", "concat", "(", "conditional_meanf", ",", "axis", "=", "dim", "-", "2", ")", "\n", "# shape=(...,n,nsample)", "\n", "return", "conditional_meanf", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_conditional_std_from_submatrices": [[431, 462], ["tensorflow.expand_dims", "tensorflow.expand_dims", "range", "tensorflow.concat", "tensorflow.gather", "tensorflow.sqrt", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tf.gather.append", "tensorflow.sqrt"], "function", ["None"], ["", "def", "compute_conditional_std_from_submatrices", "(", "\n", "invsubcovfs", ",", "# list (n) with i: (...,i+1,i+1)", "\n", "kdxs", ",", "# list (n-1) with i: (...,i+1)", "\n", "varfs", ",", "# list (n) with i: (...) (can be scalar)", "\n", "n", ",", "dim", ")", ":", "\n", "# first dimension of covf", "\n", "    ", "varfi", "=", "tf", ".", "expand_dims", "(", "varfs", "[", "0", "]", ",", "axis", "=", "-", "1", ")", "\n", "varfi", "=", "tf", ".", "expand_dims", "(", "varfi", ",", "axis", "=", "-", "1", ")", "\n", "# shape=(...,1,1)", "\n", "conditional_stdf", "=", "[", "tf", ".", "sqrt", "(", "varfi", ")", "]", "\n", "\n", "# second dimension of covf onwards", "\n", "for", "i", "in", "range", "(", "1", ",", "n", ")", ":", "\n", "        ", "varfi", "=", "tf", ".", "expand_dims", "(", "varfs", "[", "i", "]", ",", "axis", "=", "-", "1", ")", "\n", "varfi", "=", "tf", ".", "expand_dims", "(", "varfi", ",", "axis", "=", "-", "1", ")", "\n", "# shape = (...,1,1)", "\n", "\n", "kdx", "=", "tf", ".", "expand_dims", "(", "kdxs", "[", "i", "-", "1", "]", ",", "axis", "=", "-", "1", ")", "\n", "# shape = (...,i,1)", "\n", "kxd", "=", "tf", ".", "expand_dims", "(", "kdxs", "[", "i", "-", "1", "]", ",", "axis", "=", "-", "2", ")", "\n", "# shape = (...,1,i)", "\n", "varfi", "=", "varfi", "-", "kxd", "@", "invsubcovfs", "[", "i", "-", "1", "]", "@", "kdx", "\n", "# shape = (...,1,1)", "\n", "conditional_stdf", ".", "append", "(", "tf", ".", "sqrt", "(", "varfi", ")", ")", "\n", "\n", "", "conditional_stdf", "=", "tf", ".", "concat", "(", "conditional_stdf", ",", "axis", "=", "dim", "-", "2", ")", "\n", "# shape=(...,n,1)", "\n", "conditional_stdf", "=", "tf", ".", "gather", "(", "conditional_stdf", ",", "indices", "=", "0", ",", "axis", "=", "dim", "-", "1", ")", "\n", "# shape=(...,n)", "\n", "\n", "return", "conditional_stdf", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_conditional_statistics": [[464, 509], ["utils.get_submatrices_subvects", "utils.compute_conditional_mean_from_submatrices", "utils.compute_conditional_std_from_submatrices"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_submatrices_subvects", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_conditional_mean_from_submatrices", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_conditional_std_from_submatrices"], ["", "def", "compute_conditional_statistics", "(", "\n", "meanf", ",", "# (..., n)", "\n", "covf", ",", "# (..., n, n)", "\n", "n", ",", "dim", ",", "\n", "samples", ",", "# (..., n, nsample)", "\n", "nsample", ",", "\n", "invsubcovfs", "=", "None", ",", "\n", "kdxs", "=", "None", ",", "\n", "varfs", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Requires:\n        dim: number of dimensions in covf\n        meanf: shape = (..., n)\n        covf: shape = (..., n, n)\n        samples: shape = (..., n, nsample)\n        n is not a tensor\n            but is a numpy integer\n    Returns:\n        conditional_meanf: shape (..., n, nsample)\n        conditional_stdf: shape (..., n)\n    \n    f ~ N(meanf, covf) # n-variate Normal distribution\n    f = (f1,...,fn)\n\n    fi|f1^j,...,f{i-1}^j ~ N(conditional_meanf[...,j,i], conditional_stdf[...,j,i])\n        (conditioned on the j-th sample, i.e., samples[...,:i,j])\n    \"\"\"", "\n", "# get covariance matrix for each conditional", "\n", "_", ",", "invsubcovfs", ",", "kdxs", ",", "varfs", "=", "get_submatrices_subvects", "(", "covf", ",", "n", ",", "dim", ")", "\n", "# subcovs list (n) with i: (...,i+1,i+1)", "\n", "# kdxs list (n-1) with i: (...,i+1)", "\n", "# varfs list (n) with i: (...) (can be scalar)", "\n", "\n", "conditional_means", "=", "compute_conditional_mean_from_submatrices", "(", "\n", "meanf", ",", "\n", "invsubcovfs", ",", "kdxs", ",", "varfs", ",", "\n", "n", ",", "dim", ",", "\n", "samples", ",", "nsample", ")", "\n", "\n", "conditional_stds", "=", "compute_conditional_std_from_submatrices", "(", "\n", "invsubcovfs", ",", "kdxs", ",", "varfs", ",", "\n", "n", ",", "dim", ")", "\n", "\n", "\n", "return", "conditional_means", ",", "conditional_stds", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_tnorm_mv": [[512, 593], ["tensorflow_probability.distributions.TruncatedNormal().sample", "tensorflow.transpose", "tensorflow.expand_dims", "range", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow_probability.distributions.TruncatedNormal().sample", "tensorflow.reshape", "tensorflow.concat", "tensorflow_probability.distributions.TruncatedNormal", "tensorflow.expand_dims", "list", "list", "tensorflow_probability.distributions.TruncatedNormal", "range", "range", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims"], "function", ["None"], ["", "def", "sample_tnorm_mv", "(", "\n", "meanfs", ",", "# (..., batchsize)", "\n", "conditional_stdfs", ",", "# (..., batchsize)", "\n", "maxfs", ",", "# (..., 1)", "\n", "invsubcovfs", ",", "# list (batchsize) i: (..., i+1,i+1)", "\n", "kdxs", ",", "# list (batchsize-1) i: (..., i+1)", "\n", "batchsize", ",", "ndim", ",", "\n", "nsample", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    NOTE: shape of maxfs: (...,1)\n        which means the uppers of all dimension in batch are the same!\n\n    ndim: number of dimensions of meanfs = number of dimensions of conditional_stdfs\n\n    truncated multivariate Gaussian\n        by sampling sequentially truncated normal?\n        or rejection sampling from multivariate normal?\n            the first method is easier for derivative?\n\n    Requires:\n        meanfs: (..., batchsize)\n        conditional_stdfs: (..., batchsize)\n        maxfs: (..., 1)\n        invsubcovfs: list with item i: (..., i+1,i+1)\n        kdxs: list with item i: (..., i)\n    Returns:\n        (..., batchsize, nsample)\n    \"\"\"", "\n", "\n", "# Sample for 1st dimension", "\n", "f_samples", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "\n", "loc", "=", "meanfs", "[", "...", ",", "0", "]", ",", "\n", "scale", "=", "conditional_stdfs", "[", "...", ",", "0", "]", ",", "\n", "low", "=", "-", "np", ".", "infty", ",", "\n", "high", "=", "maxfs", "[", "...", ",", "0", "]", ")", ".", "sample", "(", "nsample", ")", "\n", "# (nsample, ...)", "\n", "f_samples", "=", "tf", ".", "transpose", "(", "f_samples", ",", "perm", "=", "(", "list", "(", "range", "(", "1", ",", "ndim", ")", ")", "+", "[", "0", "]", ")", ")", "\n", "# (..., nsample)", "\n", "f_samples", "=", "tf", ".", "expand_dims", "(", "f_samples", ",", "axis", "=", "-", "2", ")", "\n", "# (..., 1, nsample)", "\n", "\n", "# Sample for 2nd dimension onwards", "\n", "for", "i", "in", "range", "(", "1", ",", "batchsize", ")", ":", "\n", "# get conditional mean given previous dimension samples", "\n", "        ", "meanfi", "=", "meanfs", "[", "...", ",", "i", "]", "# (...)", "\n", "meanfi", "=", "tf", ".", "expand_dims", "(", "\n", "tf", ".", "expand_dims", "(", "meanfi", ",", "axis", "=", "-", "1", ")", ",", "\n", "axis", "=", "-", "1", ")", "\n", "# (...,1,1)", "\n", "\n", "meanf_beforei", "=", "tf", ".", "gather", "(", "meanfs", ",", "\n", "indices", "=", "list", "(", "range", "(", "i", ")", ")", ",", "\n", "axis", "=", "-", "1", ")", "# (...,i)", "\n", "meanf_beforei", "=", "tf", ".", "expand_dims", "(", "meanf_beforei", ",", "axis", "=", "-", "1", ")", "\n", "# (...,i,1)", "\n", "\n", "kdxsi", "=", "tf", ".", "expand_dims", "(", "kdxs", "[", "i", "-", "1", "]", ",", "axis", "=", "-", "2", ")", "\n", "# (...,1,i)", "\n", "\n", "cond_meanfi", "=", "meanfi", "+", "kdxsi", "@", "invsubcovfs", "[", "i", "-", "1", "]", "@", "(", "f_samples", "-", "meanf_beforei", ")", "\n", "# (..., 1, nsample)", "\n", "\n", "# sample i-th dimension sample", "\n", "f_samples_i", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "\n", "loc", "=", "cond_meanfi", ",", "# (..., 1, nsample) ", "\n", "scale", "=", "tf", ".", "expand_dims", "(", "\n", "tf", ".", "expand_dims", "(", "conditional_stdfs", "[", "...", ",", "i", "]", ",", "\n", "axis", "=", "-", "1", ")", ",", "\n", "axis", "=", "-", "1", ")", ",", "# (..., 1, 1) ", "\n", "low", "=", "-", "np", ".", "infty", ",", "\n", "high", "=", "tf", ".", "expand_dims", "(", "\n", "tf", ".", "expand_dims", "(", "maxfs", "[", "...", ",", "0", "]", ",", "\n", "axis", "=", "-", "1", ")", ",", "\n", "axis", "=", "-", "1", ")", ",", "# (..., 1, 1)", "\n", ")", ".", "sample", "(", "1", ")", "\n", "# (1,..., 1, nsample)", "\n", "f_samples_i", "=", "tf", ".", "reshape", "(", "f_samples_i", ",", "shape", "=", "tf", ".", "shape", "(", "f_samples_i", ")", "[", "1", ":", "]", ")", "\n", "# (...,1, nsample)", "\n", "f_samples", "=", "tf", ".", "concat", "(", "[", "f_samples", ",", "f_samples_i", "]", ",", "axis", "=", "-", "2", ")", "\n", "\n", "", "return", "f_samples", "\n", "# (..., batchsize, nsample)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_no_z_part": [[596, 602], ["tensorflow.log", "tensorflow.sqrt", "tensorflow.cast", "tensorflow.sqrt", "tensorflow.constant", "tensorflow.erf", "tensorflow.cast", "numpy.sqrt"], "function", ["None"], ["", "def", "evaluate_logpdf_no_z_part", "(", "mt", ",", "st", ",", "m", ",", "s", ",", "u", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "# logpdf = evaluate_logpdf_z_part - evaluate_logpdf_no_z_part", "\n", "    ", "st2", "=", "st", "*", "st", "\n", "s2", "=", "s", "*", "s", "\n", "return", "tf", ".", "log", "(", "tf", ".", "cast", "(", "tf", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", ",", "dtype", "=", "dtype", ")", "\n", "*", "(", "tf", ".", "constant", "(", "1.0", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "erf", "(", "(", "u", "-", "mt", ")", "/", "(", "tf", ".", "cast", "(", "np", ".", "sqrt", "(", "2", ")", ",", "dtype", "=", "dtype", ")", "*", "st", ")", ")", ")", "*", "tf", ".", "sqrt", "(", "st2", "+", "s2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_z_part": [[604, 618], ["tensorflow.log", "tensorflow.square", "tensorflow.constant", "tensorflow.erf", "tensorflow.sqrt", "tensorflow.cast", "numpy.sqrt"], "function", ["None"], ["", "def", "evaluate_logpdf_z_part", "(", "z", ",", "mt", ",", "st", ",", "m", ",", "s", ",", "u", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    z is the value of the random variable = sum of truncated norm and norm\n    mt, st: mean, standard deviation of truncated normal rv\n    u: upper bound of truncated normal rv\n    m, s: mean, standard deviation of normal rv\n    \"\"\"", "\n", "# logpdf = evaluate_logpdf_z_part - evaluate_logpdf_no_z_part", "\n", "st2", "=", "st", "*", "st", "\n", "s2", "=", "s", "*", "s", "\n", "\n", "return", "(", "-", "tf", ".", "square", "(", "mt", "+", "m", "-", "z", ")", "/", "(", "2", "*", "(", "st2", "+", "s2", ")", ")", "\n", "+", "tf", ".", "log", "(", "tf", ".", "constant", "(", "1.0", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "erf", "(", "(", "(", "u", "-", "z", "+", "m", ")", "*", "st2", "+", "(", "u", "-", "mt", ")", "*", "s2", ")", "\n", "/", "(", "tf", ".", "cast", "(", "np", ".", "sqrt", "(", "2", ")", ",", "dtype", "=", "dtype", ")", "*", "st", "*", "s", "*", "tf", ".", "sqrt", "(", "s2", "+", "st2", ")", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_tnorm_plus_norm_entropy": [[620, 645], ["tensorflow_probability.distributions.TruncatedNormal().sample", "tensorflow.reshape", "tensorflow.random.normal", "utils.evaluate_logpdf_no_z_part", "utils.evaluate_logpdf_z_part", "tensorflow.reduce_mean", "tensorflow_probability.distributions.TruncatedNormal", "tensorflow.concat", "tensorflow.concat", "tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow.constant", "tensorflow.shape", "tensorflow.constant", "tensorflow.shape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_no_z_part", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_z_part"], ["", "def", "evaluate_tnorm_plus_norm_entropy", "(", "mn", ",", "sn", ",", "mf", ",", "sf", ",", "maxf", ",", "n", ",", "dtype", "=", "tf", ".", "float32", ",", "debug", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    N ~ Norm(mn, sn^2)\n    F ~ Norm(mf, sf^2) truncated above at maxf\n    Y = N + F\n    return the entropy of Y\n        init_rt: initial random samples of the standardized F\n    \"\"\"", "\n", "r0", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "loc", "=", "tf", ".", "zeros_like", "(", "mf", ",", "dtype", "=", "dtype", ")", ",", "scale", "=", "tf", ".", "ones_like", "(", "sf", ",", "dtype", "=", "dtype", ")", ",", "low", "=", "-", "np", ".", "infty", ",", "high", "=", "(", "maxf", "-", "mf", ")", "/", "sf", ")", ".", "sample", "(", "n", ")", "\n", "r0", "=", "tf", ".", "reshape", "(", "r0", ",", "shape", "=", "tf", ".", "concat", "(", "[", "tf", ".", "constant", "(", "[", "n", "]", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "tf", ".", "shape", "(", "mf", ")", "]", ",", "axis", "=", "0", ")", ")", "\n", "\n", "r1", "=", "tf", ".", "random", ".", "normal", "(", "shape", "=", "tf", ".", "concat", "(", "[", "tf", ".", "constant", "(", "[", "n", "]", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "tf", ".", "shape", "(", "mf", ")", "]", ",", "axis", "=", "0", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "rt", "=", "r0", "*", "sf", "+", "mf", "\n", "rn", "=", "r1", "*", "sn", "+", "mn", "\n", "sumr", "=", "rn", "+", "rt", "\n", "\n", "logpdf_no_z_part", "=", "evaluate_logpdf_no_z_part", "(", "mf", ",", "sf", ",", "mn", ",", "sn", ",", "maxf", ",", "dtype", "=", "dtype", ")", "\n", "logpdf_z_part", "=", "evaluate_logpdf_z_part", "(", "sumr", ",", "mf", ",", "sf", ",", "mn", ",", "sn", ",", "maxf", ",", "dtype", "=", "dtype", ")", "\n", "\n", "entropy", "=", "logpdf_no_z_part", "-", "tf", ".", "reduce_mean", "(", "logpdf_z_part", ",", "axis", "=", "0", ")", "# - average of logpdf", "\n", "\n", "if", "debug", ":", "\n", "        ", "return", "entropy", ",", "r0", ",", "r1", ",", "rt", ",", "rn", ",", "sumr", ",", "logpdf_no_z_part", ",", "logpdf_z_part", "\n", "", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_tnorm_entropy": [[647, 651], ["tensorflow.distributions.Normal", "tensorflow.constant", "tensorflow.constant", "tf.distributions.Normal.log_cdf", "tensorflow.constant", "tensorflow.log", "tf.distributions.Normal.prob", "tensorflow.constant", "tf.distributions.Normal.cdf", "tensorflow.cast", "tensorflow.sqrt"], "function", ["None"], ["", "def", "evaluate_tnorm_entropy", "(", "mf", ",", "sf", ",", "maxf", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "maxf2", "=", "(", "maxf", "-", "mf", ")", "/", "sf", "\n", "norm", "=", "tf", ".", "distributions", ".", "Normal", "(", "loc", "=", "tf", ".", "constant", "(", "0.", ",", "dtype", "=", "dtype", ")", ",", "scale", "=", "tf", ".", "constant", "(", "1.", ",", "dtype", "=", "dtype", ")", ")", "\n", "return", "tf", ".", "constant", "(", "0.5", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "log", "(", "tf", ".", "cast", "(", "tf", ".", "sqrt", "(", "2.0", "*", "np", ".", "pi", ")", ",", "dtype", "=", "dtype", ")", "*", "sf", ")", "+", "norm", ".", "log_cdf", "(", "maxf2", ")", "-", "maxf2", "*", "norm", ".", "prob", "(", "maxf2", ")", "/", "(", "tf", ".", "constant", "(", "2.0", ",", "dtype", "=", "dtype", ")", "*", "norm", ".", "cdf", "(", "maxf2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy": [[653, 655], ["tensorflow.constant", "tensorflow.cast", "tensorflow.log", "tensorflow.log"], "function", ["None"], ["", "def", "evaluate_norm_entropy", "(", "s", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "return", "tf", ".", "cast", "(", "0.5", "*", "tf", ".", "log", "(", "2", "*", "np", ".", "pi", ")", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "log", "(", "s", ")", "+", "tf", ".", "constant", "(", "0.5", ",", "dtype", "=", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.chol2inv": [[657, 675], ["tensorflow.matrix_solve", "tensorflow.shape", "tensorflow.linalg.cholesky", "tensorflow.eye", "tensorflow.transpose"], "function", ["None"], ["", "def", "chol2inv", "(", "mat", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "n", "=", "tf", ".", "shape", "(", "mat", ")", "[", "0", "]", "\n", "\n", "# _, mat, _ = tf.while_loop(", "\n", "#     cond = lambda i, mat, eigs: tf.reduce_min(eigs) < 1e-9,", "\n", "#     body = lambda i, mat, eigs: [0.0, ", "\n", "#             mat + tf.eye(n, dtype=dtype) * 1e-4, ", "\n", "#             tf.linalg.eigvalsh(mat + tf.eye(n, dtype=dtype) * 1e-4)],", "\n", "#     loop_vars = (0.0, mat, tf.linalg.eigvalsh(mat)) )", "\n", "\n", "# mat = mat + tf.reduce_max(mat) * 1e-3 * tf.eye(n, dtype=dtype)", "\n", "\n", "# lower = tf.linalg.cholesky(mat)", "\n", "invlower", "=", "tf", ".", "matrix_solve", "(", "tf", ".", "linalg", ".", "cholesky", "(", "mat", ")", ",", "\n", "tf", ".", "eye", "(", "n", ",", "dtype", "=", "dtype", ")", ")", "\n", "invmat", "=", "tf", ".", "transpose", "(", "invlower", ")", "@", "invlower", "\n", "return", "invmat", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.multichol2inv": [[677, 701], ["tensorflow.matrix_solve", "tensorflow.matmul", "tensorflow.linalg.cholesky", "tensorflow.tile", "tensorflow.expand_dims", "tensorflow.eye", "tensorflow.shape"], "function", ["None"], ["", "def", "multichol2inv", "(", "mat", ",", "n_mat", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "# lower = tf.linalg.cholesky(mat)", "\n", "# mat: (n_mat, m,m)", "\n", "\n", "# eye_mat = tf.tile(tf.expand_dims(tf.eye(tf.shape(mat)[1], dtype=dtype), ", "\n", "#                                                   axis=0), ", "\n", "#                                    multiples=(n_mat,1,1) )", "\n", "# # (n_mat, m, m)", "\n", "\n", "# max_vals = tf.expand_dims(", "\n", "#             tf.expand_dims(", "\n", "#                 tf.reduce_max(tf.reduce_max(mat, axis=-1), axis=-1),", "\n", "#                 axis=-1),", "\n", "#            axis=-1)", "\n", "# # (n_max,1,1)", "\n", "\n", "# mat = mat + eye_mat * 1e-3 *  max_vals", "\n", "\n", "    ", "invlower", "=", "tf", ".", "matrix_solve", "(", "tf", ".", "linalg", ".", "cholesky", "(", "mat", ")", ",", "\n", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "tf", ".", "eye", "(", "tf", ".", "shape", "(", "mat", ")", "[", "1", "]", ",", "dtype", "=", "dtype", ")", ",", "\n", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "n_mat", ",", "1", ",", "1", ")", ")", ")", "\n", "invmat", "=", "tf", ".", "matmul", "(", "invlower", ",", "invlower", ",", "transpose_a", "=", "True", ")", "\n", "return", "invmat", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm": [[703, 720], ["tensorflow.tile", "tensorflow.tile", "tensorflow.shape", "tensorflow.shape", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.exp", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.square"], "function", ["None"], ["", "def", "computeKnm", "(", "X", ",", "Xbar", ",", "l", ",", "sigma", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: n x d\n    l: d\n    \"\"\"", "\n", "n", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "m", "=", "tf", ".", "shape", "(", "Xbar", ")", "[", "0", "]", "\n", "\n", "X", "=", "X", "*", "tf", ".", "sqrt", "(", "l", ")", "\n", "Xbar", "=", "Xbar", "*", "tf", ".", "sqrt", "(", "l", ")", "\n", "\n", "Q", "=", "tf", ".", "tile", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "X", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "multiples", "=", "(", "1", ",", "m", ")", ")", "\n", "Qbar", "=", "tf", ".", "tile", "(", "tf", ".", "transpose", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "Xbar", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", ",", "multiples", "=", "(", "n", ",", "1", ")", ")", "\n", "\n", "dist", "=", "Qbar", "+", "Q", "-", "2", "*", "X", "@", "tf", ".", "transpose", "(", "Xbar", ")", "\n", "knm", "=", "sigma", "*", "tf", ".", "exp", "(", "-", "0.5", "*", "dist", ")", "\n", "return", "knm", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm_old": [[722, 738], ["tensorflow.tile", "tensorflow.shape", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.square", "tensorflow.transpose", "tensorflow.transpose"], "function", ["None"], ["", "def", "computeKmm_old", "(", "X", ",", "l", ",", "sigma", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: n x d\n    l: 1 x d\n    sigma: signal variance\n    sigma * exp( - 0.5 * (X - X)^2 * lengthscale)\n    X' = X * a\n    lengthscale' = lengthscale / a^2\n    \"\"\"", "\n", "n", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "X", "=", "X", "*", "tf", ".", "sqrt", "(", "l", ")", "\n", "Q", "=", "tf", ".", "tile", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "X", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "multiples", "=", "(", "1", ",", "n", ")", ")", "\n", "dist", "=", "Q", "+", "tf", ".", "transpose", "(", "Q", ")", "-", "2", "*", "X", "@", "tf", ".", "transpose", "(", "X", ")", "\n", "\n", "kmm", "=", "sigma", "*", "tf", ".", "exp", "(", "-", "0.5", "*", "dist", ")", "\n", "return", "kmm", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm": [[740, 763], ["tensorflow.reduce_sum", "numpy.array", "tensorflow.shape", "tensorflow.sqrt", "tensorflow.square", "list", "tensorflow.exp", "tensorflow.reshape", "range", "tensorflow.transpose", "tensorflow.transpose"], "function", ["None"], ["", "def", "computeKmm", "(", "X", ",", "l", ",", "sigma", ",", "nd", "=", "2", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: (...,n,d)\n    nd = len(tf.shape(X))\n    l: (1,d)\n    sigma: signal variance\n    return (...,n,n)\n    \"\"\"", "\n", "n", "=", "tf", ".", "shape", "(", "X", ")", "[", "-", "2", "]", "\n", "X", "=", "X", "*", "tf", ".", "sqrt", "(", "tf", ".", "reshape", "(", "l", ",", "shape", "=", "(", "1", ",", "-", "1", ")", ")", ")", "\n", "# (...,n,d)", "\n", "Q", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "X", ")", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "# (...,n,1)", "\n", "\n", "transpose_idxs", "=", "np", ".", "array", "(", "list", "(", "range", "(", "nd", ")", ")", ")", "\n", "transpose_idxs", "[", "-", "2", "]", "=", "nd", "-", "1", "\n", "transpose_idxs", "[", "-", "1", "]", "=", "nd", "-", "2", "\n", "\n", "dist", "=", "Q", "+", "tf", ".", "transpose", "(", "Q", ",", "perm", "=", "transpose_idxs", ")", "-", "2", "*", "X", "@", "tf", ".", "transpose", "(", "X", ",", "perm", "=", "transpose_idxs", ")", "\n", "\n", "kmm", "=", "sigma", "*", "tf", ".", "exp", "(", "-", "0.5", "*", "dist", ")", "\n", "\n", "return", "kmm", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm": [[765, 784], ["print", "utils.computeKmm", "tensorflow.eye", "tensorflow.shape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["", "def", "computeNKmm", "(", "X", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: n x d\n    l: 1 x d\n    sigma: signal variance\n    sigma0: noise variance\n    \"\"\"", "\n", "# cond = tf.less(sigma0, 1e-2)", "\n", "# tf.where(cond)", "\n", "\"\"\"\n    if sigma0 >= 1e-2:\n        perturb = 1e-10\n    else:\n        perturb = 1e-4\n    \"\"\"", "\n", "# print(\"Add jitter for computeNKmm\")", "\n", "# return computeKmm(X, l, sigma) + tf.eye(tf.shape(X)[0], dtype=dtype) * (sigma0 + sigma * tf.constant(1e-10, dtype=dtype))", "\n", "print", "(", "\"No jitter for computeNKmm\"", ")", "\n", "return", "computeKmm", "(", "X", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "eye", "(", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", ",", "dtype", "=", "dtype", ")", "*", "sigma0", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f": [[786, 816], ["utils.computeKnm", "tensorflow.squeeze", "utils.computeNKmm", "utils.chol2inv", "utils.computeKmm", "tensorflow.linalg.diag_part", "tensorflow.clip_by_value", "tensorflow.linalg.set_diag", "tensorflow.clip_by_value", "tensorflow.reduce_sum", "tensorflow.transpose"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.chol2inv", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["", "def", "compute_mean_var_f", "(", "x", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "\n", "NKInv", "=", "None", ",", "fullcov", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    NKsampleInv = inv(KXsampleInv + eye(n)*sigma0)\n    l: 1 x d\n    Ysamples: m x 1\n    Xsamples: m x d\n    x: n x d\n\n    return: mean: n x 1\n            var : n x 1\n    \"\"\"", "\n", "if", "NKInv", "is", "None", ":", "\n", "        ", "NK", "=", "computeNKmm", "(", "Xsamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ")", "\n", "NKInv", "=", "chol2inv", "(", "NK", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "kstar", "=", "computeKnm", "(", "x", ",", "Xsamples", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "\n", "mean", "=", "tf", ".", "squeeze", "(", "kstar", "@", "(", "NKInv", "@", "Ysamples", ")", ")", "\n", "\n", "if", "fullcov", ":", "\n", "        ", "Kx", "=", "computeKmm", "(", "x", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "\n", "var", "=", "Kx", "-", "kstar", "@", "NKInv", "@", "tf", ".", "transpose", "(", "kstar", ")", "\n", "diag_var", "=", "tf", ".", "linalg", ".", "diag_part", "(", "var", ")", "\n", "diag_var", "=", "tf", ".", "clip_by_value", "(", "diag_var", ",", "clip_value_min", "=", "clip_min", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "var", "=", "tf", ".", "linalg", ".", "set_diag", "(", "var", ",", "diag_var", ")", "\n", "", "else", ":", "\n", "        ", "var", "=", "sigma", "-", "tf", ".", "reduce_sum", "(", "(", "kstar", "@", "NKInv", ")", "*", "kstar", ",", "axis", "=", "1", ")", "\n", "var", "=", "tf", ".", "clip_by_value", "(", "var", ",", "clip_value_min", "=", "clip_min", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "\n", "", "return", "mean", ",", "var", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm_np": [[818, 834], ["l.reshape.reshape", "numpy.tile", "numpy.sqrt", "numpy.sum", "numpy.exp", "X.dot"], "function", ["None"], ["", "def", "computeKmm_np", "(", "X", ",", "l", ",", "sigma", ")", ":", "\n", "    ", "n", "=", "X", ".", "shape", "[", "0", "]", "\n", "xdim", "=", "X", ".", "shape", "[", "1", "]", "\n", "\n", "l", "=", "l", ".", "reshape", "(", "1", ",", "xdim", ")", "\n", "\n", "X", "=", "X", "*", "np", ".", "sqrt", "(", "l", ")", "\n", "\n", "Q", "=", "np", ".", "tile", "(", "\n", "np", ".", "sum", "(", "X", "*", "X", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "\n", "reps", "=", "(", "1", ",", "n", ")", "\n", ")", "\n", "dist", "=", "Q", "+", "Q", ".", "T", "-", "2", "*", "X", ".", "dot", "(", "X", ".", "T", ")", "\n", "\n", "kmm", "=", "sigma", "*", "np", ".", "exp", "(", "-", "0.5", "*", "dist", ")", "\n", "return", "kmm", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm_np": [[836, 860], ["l.reshape.reshape", "numpy.tile", "numpy.tile", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.sqrt", "numpy.sqrt", "numpy.sum", "numpy.exp", "numpy.sum", "X.dot"], "function", ["None"], ["", "def", "computeKnm_np", "(", "X", ",", "Xbar", ",", "l", ",", "sigma", ")", ":", "\n", "    ", "\"\"\"\n    X: n x d\n    l: d\n    \"\"\"", "\n", "n", "=", "np", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "m", "=", "np", ".", "shape", "(", "Xbar", ")", "[", "0", "]", "\n", "xdim", "=", "np", ".", "shape", "(", "X", ")", "[", "1", "]", "\n", "\n", "l", "=", "l", ".", "reshape", "(", "1", ",", "xdim", ")", "\n", "\n", "X", "=", "X", "*", "np", ".", "sqrt", "(", "l", ")", "\n", "Xbar", "=", "Xbar", "*", "np", ".", "sqrt", "(", "l", ")", "\n", "\n", "Q", "=", "np", ".", "tile", "(", "\n", "np", ".", "sum", "(", "X", "*", "X", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "\n", "reps", "=", "(", "1", ",", "m", ")", ")", "\n", "Qbar", "=", "np", ".", "tile", "(", "\n", "np", ".", "sum", "(", "Xbar", "*", "Xbar", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ".", "T", ",", "\n", "reps", "=", "(", "n", ",", "1", ")", ")", "\n", "\n", "dist", "=", "Qbar", "+", "Q", "-", "2", "*", "X", ".", "dot", "(", "Xbar", ".", "T", ")", "\n", "knm", "=", "sigma", "*", "np", ".", "exp", "(", "-", "0.5", "*", "dist", ")", "\n", "return", "knm", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f_np": [[862, 886], ["x.reshape.reshape", "Ysamples.reshape.reshape", "numpy.linalg.inv", "utils.computeKnm_np", "computeKnm_np.dot", "kstar.dot.reshape", "utils.computeKmm_np", "np.linalg.inv.dot", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm_np", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm_np"], ["", "def", "compute_mean_f_np", "(", "x", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ")", ":", "\n", "    ", "\"\"\"\n    x: n x xdim\n    Xsample: m x xdim\n    Ysamples: m x 1\n    return mean: n x 1\n\n    l: 1 x xdim\n    sigma, sigma0: scalar\n    \"\"\"", "\n", "m", "=", "Xsamples", ".", "shape", "[", "0", "]", "\n", "xdim", "=", "Xsamples", ".", "shape", "[", "1", "]", "\n", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "xdim", ")", "\n", "n", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "Ysamples", "=", "Ysamples", ".", "reshape", "(", "m", ",", "1", ")", "\n", "\n", "NKmm", "=", "computeKmm_np", "(", "Xsamples", ",", "l", ",", "sigma", ")", "+", "np", ".", "eye", "(", "m", ")", "*", "sigma0", "\n", "invNKmm", "=", "np", ".", "linalg", ".", "inv", "(", "NKmm", ")", "\n", "\n", "kstar", "=", "computeKnm_np", "(", "x", ",", "Xsamples", ",", "l", ",", "sigma", ")", "\n", "mean", "=", "kstar", ".", "dot", "(", "invNKmm", ".", "dot", "(", "Ysamples", ")", ")", "\n", "\n", "return", "mean", ".", "reshape", "(", "n", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm_multiple_data": [[888, 913], ["tensorflow.pad", "range", "tensorflow.stack", "tensorflow.shape", "tensorflow.eye", "tensorflow.concat", "utils.computeKmm", "utils.chol2inv", "ret.append", "ret.append", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.chol2inv"], ["", "def", "computeNKmm_multiple_data", "(", "nxs", ",", "Xsamples", ",", "xs", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "tf", ".", "float32", ",", "inverted", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    xs: shape = (nxs,xdim)\n    compute covariance matrix of [Xsamples, x] for x in xs\n        where Xsamples include noise\n              x does not include noise\n    return shape (nxs, n_data+1, n_data+1)\n        where n_data = tf.shape(Xsamples)[0]\n    \"\"\"", "\n", "n_data", "=", "tf", ".", "shape", "(", "Xsamples", ")", "[", "0", "]", "\n", "noise_mat", "=", "tf", ".", "eye", "(", "n_data", ",", "dtype", "=", "dtype", ")", "*", "sigma0", "\n", "noise_mat", "=", "tf", ".", "pad", "(", "noise_mat", ",", "[", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "ret", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nxs", ")", ":", "\n", "        ", "X_concat", "=", "tf", ".", "concat", "(", "[", "Xsamples", ",", "tf", ".", "expand_dims", "(", "xs", "[", "i", ",", ":", "]", ",", "0", ")", "]", ",", "axis", "=", "0", ")", "\n", "NKmm", "=", "computeKmm", "(", "X_concat", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "+", "noise_mat", "\n", "\n", "if", "inverted", ":", "\n", "            ", "invNKmm", "=", "chol2inv", "(", "NKmm", ",", "dtype", "=", "dtype", ")", "\n", "ret", ".", "append", "(", "invNKmm", ")", "\n", "", "else", ":", "\n", "            ", "ret", ".", "append", "(", "NKmm", ")", "\n", "\n", "", "", "return", "tf", ".", "stack", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f_multiple_data": [[916, 979], ["range", "print", "tensorflow.stack", "tensorflow.stack", "utils.computeKmm", "utils.computeNKmm_multiple_data", "tensorflow.concat", "utils.computeKnm", "tf.stack.append", "range", "tf.stack.append", "tensorflow.linalg.diag_part", "tensorflow.clip_by_value", "tensorflow.linalg.set_diag", "tensorflow.clip_by_value", "tensorflow.squeeze", "mean_i.append", "tensorflow.stack", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.concat", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm_multiple_data", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm"], ["", "def", "compute_mean_var_f_multiple_data", "(", "n_xs", ",", "n_ys_per_x", ",", "x", ",", "Xsamples", ",", "Ysamples", ",", "xs", ",", "fs", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "NKInvs", "=", "None", ",", "fullcov", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    x: nx x d\n        \n    NKsampleInv = inv(KXsampleInv + eye(n)*sigma0)\n    l: 1 x d\n    sigma: scalar\n    Xsamples: n x d\n    Ysamples: n x 1\n\n    fs: n_xs x n_ys_per_x\n    xs: n_xs x d\n\n    NKInvs: n_xs x (n+1) x (n+1)\n            NOTE: the first n element contain noise variance\n                  the last element doesn't contain noise variance\n\n    return: mean: n_xs x n_ys_per_x x nx\n            var:  n_xs x nx if fullcov == False\n                  n_xs x nx x nx if fullcov == True\n    \"\"\"", "\n", "if", "fullcov", ":", "\n", "        ", "Kx", "=", "computeKmm", "(", "x", ",", "l", ",", "sigma", ",", "\n", "dtype", "=", "dtype", ",", "inverted", "=", "False", ")", "\n", "\n", "", "if", "NKInvs", "is", "None", ":", "\n", "        ", "NKInvs", "=", "computeNKmm_multiple_data", "(", "n_xs", ",", "Xsamples", ",", "xs", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ",", "inverted", "=", "True", ")", "\n", "\n", "", "var_all", "=", "[", "]", "\n", "mean_all", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_xs", ")", ":", "\n", "        ", "NKInv", "=", "NKInvs", "[", "i", ",", "...", "]", "\n", "X_concat", "=", "tf", ".", "concat", "(", "[", "Xsamples", ",", "tf", ".", "expand_dims", "(", "xs", "[", "i", ",", ":", "]", ",", "0", ")", "]", ",", "axis", "=", "0", ")", "\n", "\n", "kstar", "=", "computeKnm", "(", "x", ",", "X_concat", ",", "l", ",", "sigma", ")", "\n", "\n", "if", "fullcov", ":", "\n", "            ", "var", "=", "Kx", "-", "kstar", "@", "NKInv", "@", "tf", ".", "transpose", "(", "kstar", ")", "\n", "diag_var", "=", "tf", ".", "linalg", ".", "diag_part", "(", "var", ")", "\n", "diag_var", "=", "tf", ".", "clip_by_value", "(", "diag_var", ",", "clip_value_min", "=", "clip_min", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "var", "=", "tf", ".", "linalg", ".", "set_diag", "(", "var", ",", "diag_var", ")", "\n", "", "else", ":", "\n", "            ", "var", "=", "sigma", "-", "tf", ".", "reduce_sum", "(", "(", "kstar", "@", "NKInv", ")", "*", "kstar", ",", "axis", "=", "1", ")", "\n", "var", "=", "tf", ".", "clip_by_value", "(", "var", ",", "clip_value_min", "=", "clip_min", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "\n", "", "var_all", ".", "append", "(", "var", ")", "\n", "\n", "mean_i", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_ys_per_x", ")", ":", "\n", "            ", "mean", "=", "tf", ".", "squeeze", "(", "kstar", "@", "(", "NKInv", "@", "\n", "tf", ".", "concat", "(", "[", "Ysamples", ",", "tf", ".", "reshape", "(", "fs", "[", "i", ",", "j", "]", ",", "\n", "shape", "=", "(", "1", ",", "1", ")", ")", "]", ",", "axis", "=", "0", ")", ")", ")", "\n", "mean_i", ".", "append", "(", "mean", ")", "\n", "", "mean_all", ".", "append", "(", "tf", ".", "stack", "(", "mean_i", ")", ")", "\n", "\n", "", "print", "(", "\"utils.compute_mean_var_f_multiple_data: clip value of var at {}!\"", ".", "format", "(", "clip_min", ")", ")", "\n", "var_all", "=", "tf", ".", "stack", "(", "var_all", ")", "\n", "mean_all", "=", "tf", ".", "stack", "(", "mean_all", ")", "\n", "\n", "return", "mean_all", ",", "var_all", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_f": [[982, 1010], ["tensorflow.constant", "range", "tensorflow.reshape", "utils.computeKnm", "tensorflow.squeeze", "tensorflow.constant"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm"], ["", "def", "compute_mean_f", "(", "x", ",", "\n", "xdim", ",", "n_hyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "NKInvs", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    NKsampleInv = inv(KXsampleInv + eye(n)*sigma0)\n    l: 1 x d\n    Ysamples: n x 1\n    Xsamples: n x d\n    x: 1 x d\n\n    return: mean: n x 1\n            var : n x 1\n    \"\"\"", "\n", "\n", "mean", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "NKInv", "=", "NKInvs", "[", "i", "]", "\n", "\n", "kstar", "=", "computeKnm", "(", "x", ",", "Xsamples", ",", "l", ",", "sigma", ")", "\n", "mean", "=", "mean", "+", "tf", ".", "squeeze", "(", "kstar", "@", "(", "NKInv", "@", "Ysamples", ")", ")", "/", "tf", ".", "constant", "(", "n_hyp", ",", "dtype", "=", "dtype", ")", "\n", "", "return", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.find_top_k": [[1020, 1024], ["tensorflow.math.top_k", "tensorflow.reshape", "tensorflow.squeeze"], "function", ["None"], ["", "def", "find_top_k", "(", "ys", ",", "k", ")", ":", "\n", "    ", "_", ",", "idxs", "=", "tf", ".", "math", ".", "top_k", "(", "tf", ".", "squeeze", "(", "ys", ")", ",", "k", ",", "sorted", "=", "False", ")", "\n", "idxs", "=", "tf", ".", "reshape", "(", "idxs", ",", "(", "-", "1", ",", ")", ")", "\n", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_initializers": [[1026, 1040], ["range", "tensorflow.concat", "utils.find_top_k", "top_k_inits.append"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.find_top_k"], ["", "def", "get_initializers", "(", "func", ",", "ngroups", ",", "groups", ",", "n_inits", ")", ":", "\n", "# get top n_inits[i] points from groups[i]", "\n", "# n_inits[i]: scalar", "\n", "# groups[i]: array of shape n x xdim", "\n", "# func(x) -> scalar", "\n", "# func is a function need maximization", "\n", "# requires: all n_inits > 0", "\n", "    ", "top_k_inits", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "ngroups", ")", ":", "\n", "        ", "inits", "=", "utils", ".", "find_top_k", "(", "func", ",", "groups", "[", "i", "]", ",", "n_inits", "[", "i", "]", ")", "\n", "top_k_inits", ".", "append", "(", "inits", ")", "\n", "\n", "", "return", "tf", ".", "concat", "(", "top_k_inits", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.merge_2dicts": [[1042, 1046], ["d1.copy", "d1.copy.update"], "function", ["None"], ["", "def", "merge_2dicts", "(", "d1", ",", "d2", ")", ":", "\n", "    ", "d", "=", "d1", ".", "copy", "(", ")", "\n", "d", ".", "update", "(", "d2", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.find_top_ks": [[1049, 1087], ["enumerate", "numpy.concatenate", "range", "numpy.squeeze", "np.concatenate.append", "numpy.tile", "numpy.concatenate", "func", "np.squeeze.append", "numpy.concatenate", "g[].reshape", "g[].reshape", "numpy.argsort", "numpy.argsort"], "function", ["None"], ["", "def", "find_top_ks", "(", "func", ",", "init_groups", ",", "ks", ",", "batchsize", ")", ":", "\n", "    ", "\"\"\"\n    init_groups: list of lists of inputs\n    ks: list of k values\n    batchsize: batchsize for evaluating func at 1 sess.run\n    return: concatenation of top ks[i] of init_groups[i] for all i\n    func = lambda x: sess.run(f, feed_dict=merge_2dicts(train_dict, {'initializers': x}))\n    # need to test\n    \"\"\"", "\n", "res", "=", "[", "]", "\n", "xdim", "=", "init_groups", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "for", "gi", ",", "g", "in", "enumerate", "(", "init_groups", ")", ":", "\n", "        ", "remain_size", "=", "g", ".", "shape", "[", "0", "]", "%", "batchsize", "\n", "if", "remain_size", ":", "\n", "            ", "padding_size", "=", "batchsize", "-", "(", "g", ".", "shape", "[", "0", "]", "%", "batchsize", ")", "\n", "padding", "=", "np", ".", "tile", "(", "g", "[", "-", "1", ",", ":", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "reps", "=", "(", "padding_size", ",", "1", ")", ")", "\n", "g", "=", "np", ".", "concatenate", "(", "[", "g", ",", "padding", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "padding_size", "=", "0", "\n", "\n", "", "vals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "g", ".", "shape", "[", "0", "]", ",", "batchsize", ")", ":", "\n", "# feed_dict[input_key] = g[i:i+batchsize,:]", "\n", "# val = sess.run(func, feed_dict=feed_dict)", "\n", "            ", "val", "=", "func", "(", "g", "[", "i", ":", "i", "+", "batchsize", ",", ":", "]", ")", "\n", "vals", ".", "append", "(", "val", ")", "\n", "\n", "", "vals", "=", "np", ".", "squeeze", "(", "np", ".", "concatenate", "(", "vals", ")", ")", "\n", "\n", "if", "padding_size", ":", "\n", "            ", "idxs", "=", "np", ".", "argsort", "(", "vals", "[", ":", "-", "padding_size", "]", ")", "[", "-", "ks", "[", "gi", "]", ":", "]", "\n", "", "else", ":", "\n", "            ", "idxs", "=", "np", ".", "argsort", "(", "vals", ")", "[", "-", "ks", "[", "gi", "]", ":", "]", "\n", "\n", "", "res", ".", "append", "(", "g", "[", "idxs", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "xdim", ")", ")", "\n", "", "res", "=", "np", ".", "concatenate", "(", "res", ",", "axis", "=", "0", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_tnorm_plus_norm_entropy_given_y_samples": [[1089, 1223], ["utils.evaluate_logpdf_no_z_part", "tensorflow.expand_dims", "tensorflow.reduce_mean", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "utils.evaluate_logpdf_z_part", "tensorflow.reduce_mean", "tensorflow.while_loop", "tensorflow.math.reduce_logsumexp", "utils.evaluate_logpdf_z_part", "tensorflow.reshape", "tensorflow.math.reduce_logsumexp", "tensorflow.constant", "tensorflow.zeros", "tensorflow.log", "tensorflow.reshape", "tensorflow.log", "tensorflow.reshape", "tensorflow.shape", "tensorflow.shape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_no_z_part", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_z_part", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_logpdf_z_part"], ["", "def", "evaluate_tnorm_plus_norm_entropy_given_y_samples", "(", "\n", "mn", ",", "sn", ",", "mf", ",", "sf", ",", "# (n_average, n_mixture, nx)", "\n", "\n", "mix_probs", ",", "# (n_average, n_mixture)", "\n", "avg_probs", ",", "# (n_average,)", "\n", "\n", "maxfs", ",", "# (n_average, n_mixture, 1)", "\n", "y_samples", ",", "# (n_ysample, n_average, n_mixture, nx)", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "15", ")", ":", "\n", "    ", "\"\"\"\n    for mni, sni, mfi, sfi, maxfsi in (mn, sn, mf, sf, maxfs)\n        for mnj, snj, mfj, sfj, maxfsj in (mni, sni, mfi, sfi, maxfsi)\n            Yj is a sum of Normal(mnj, snj)\n                and TruncatedNormal(mfj, sfj, low=-infty, high=maxfsj)\n        Yi ~ mixture of Yj\n        Hi = entropy of Yi\n    return average of Hi\n\n    Requires:\n        maxf -> several xmax -> several mf\n        H[y|maxf] average over maxf (mixture of xmax)\n        H[y|xmax,maxf] average over xmax, maxf\n            which one to average?\n            which one to mixture?\n\n        mix_probs: (n_average, n_mixture)\n        # mix_probs[i,j] probability for distribution [i,j] in mixture i\n\n        maxfs: (n_average, n_mixture, 1)\n        mf:    (n_average, n_mixture, nx)\n        sf:    (n_average, n_mixture, nx)\n        mn:    (n_average, n_mixture, nx)\n        sn:    (n_average, n_mixture, nx)\n        y_samples: (n_ysample, n_average, n_mixture, nx)\n\n        average over n_average dimension\n        mixture (marginalizing) over n_mixture dimension\n\n        H[y|x] = int p(x,y) log p(y|x)\n                 int p(y|x) p(x) log p(y|x) dx dy\n                 int p(x) [int p(y|x) log p(y|x) dy] dx\n                 -> requires different samples y for different x\n                    sample pairs of (x,y) compute log p(y|x) do not mix between x and y!!!\n                    y_samples: (n_ysample, n_average, n_mixture, nx)\n\n        problem: condition on y, sample x is not easy\n        sample pair x,y condition on y only 1 x????\n        sample several y\n            p(x*|y*) \\propto p(y*|x*,D) p(x*|D)\n            p(y*|x*,D) = ???\n        I[y; x_*|y_*] = I[y; x_*,y_*] - I[y; y_*]\n        I[y; y_*|x_*] = I[y; x_*,y_*] - I[y; x_*]\n        I[y; x_*] = I[y; x_*,y_*] - I[y; y_*|x_*]\n    \"\"\"", "\n", "nx", "=", "tf", ".", "shape", "(", "mf", ")", "[", "1", "]", "\n", "n_average", "=", "tf", ".", "shape", "(", "mf", ")", "[", "0", "]", "\n", "n_mixture", "=", "tf", ".", "shape", "(", "mf", ")", "[", "1", "]", "\n", "\n", "# 2. evaluate log p(y|x_*, D)", "\n", "\n", "# rename:", "\n", "#   n_average: n_mixture", "\n", "#   n_mixture: mixture_size", "\n", "\n", "logpdf_no_z_part", "=", "evaluate_logpdf_no_z_part", "(", "mf", ",", "sf", ",", "mn", ",", "sn", ",", "maxfs", ",", "dtype", "=", "dtype", ")", "\n", "# shape = (n_average, n_mixture, nx)", "\n", "logpdf_no_z_part", "=", "tf", ".", "expand_dims", "(", "logpdf_no_z_part", ",", "axis", "=", "0", ")", "\n", "# shape = (1, n_average, n_mixture, nx)", "\n", "\n", "if", "not", "use_loop", ":", "\n", "        ", "logpdf_z_part", "=", "evaluate_logpdf_z_part", "(", "y_samples", ",", "mf", ",", "sf", ",", "mn", ",", "sn", ",", "maxfs", ",", "dtype", "=", "dtype", ")", "\n", "# shape = (n_ysample, n_average, n_mixture, nx)", "\n", "\n", "# log p(y| each distribution)", "\n", "logpdf_y_given_fmax", "=", "(", "-", "logpdf_no_z_part", "+", "logpdf_z_part", ")", "# * masked_sf# - 1e6 * (1.0 - masked_sf)", "\n", "# shape = (n_ysample, n_average, n_mixture, nx)", "\n", "\n", "# - log p(y| each mixture of distribution)", "\n", "negative_logp_y", "=", "-", "tf", ".", "math", ".", "reduce_logsumexp", "(", "\n", "logpdf_y_given_fmax", "+", "tf", ".", "log", "(", "tf", ".", "reshape", "(", "mix_probs", ",", "shape", "=", "(", "1", ",", "n_average", ",", "n_mixture", ",", "1", ")", ")", ")", ",", "\n", "axis", "=", "2", ",", "keepdims", "=", "False", ")", "\n", "# shape = (n_ysample, n_average, nx)", "\n", "\n", "# average [-log p(y)] over all mixtures", "\n", "negative_logp_y", "=", "tf", ".", "reduce_mean", "(", "negative_logp_y", "\n", "*", "tf", ".", "reshape", "(", "avg_probs", ",", "\n", "shape", "=", "(", "1", ",", "n_average", ",", "1", ")", ")", ",", "\n", "axis", "=", "1", ")", "\n", "# shape = (n_ysample, nx)", "\n", "\n", "", "else", ":", "\n", "        ", "while_loop_cond", "=", "lambda", "i", ",", "lprob", ":", "i", "<", "n_average", "\n", "\n", "# loop over average", "\n", "def", "while_loop_body", "(", "i", ",", "avg_negative_logp_y", ")", ":", "\n", "            ", "logpdf_z_part", "=", "evaluate_logpdf_z_part", "(", "\n", "y_samples", "[", ":", ",", "i", ",", "...", "]", ",", "# (n_ysample, n_average, n_mixture, nx)", "\n", "mf", "[", "i", ",", "...", "]", ",", "# (n_average, n_mixture, nx)", "\n", "sf", "[", "i", ",", "...", "]", ",", "\n", "mn", "[", "i", ",", "...", "]", ",", "\n", "sn", "[", "i", ",", "...", "]", ",", "\n", "maxfs", "[", "i", ",", "...", "]", ",", "\n", "dtype", "=", "dtype", ")", "\n", "# shape = (n_ysample, n_mixture, nx)", "\n", "\n", "# log p(y) for each distribution", "\n", "logpdf_y_given_fmax", "=", "(", "-", "logpdf_no_z_part", "[", "0", ",", "i", ",", "...", "]", "+", "logpdf_z_part", ")", "\n", "# shape = (n_ysample, n_mixture, nx)", "\n", "\n", "# log p(y) for each mixture", "\n", "negative_logp_y", "=", "-", "tf", ".", "math", ".", "reduce_logsumexp", "(", "\n", "logpdf_y_given_fmax", "+", "tf", ".", "log", "(", "\n", "tf", ".", "reshape", "(", "mix_probs", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "n_mixture", ",", "1", ")", ")", ")", ",", "\n", "axis", "=", "1", ",", "keepdims", "=", "False", ")", "\n", "# shape = (n_ysample, nx)", "\n", "\n", "avg_negative_logp_y", "=", "avg_negative_logp_y", "+", "negative_logp_y", "*", "avg_probs", "[", "i", "]", "\n", "return", "i", "+", "1", ",", "avg_negative_logp_y", "\n", "\n", "", "_", ",", "avg_negative_logp_y", "=", "tf", ".", "while_loop", "(", "while_loop_cond", ",", "\n", "while_loop_body", ",", "\n", "(", "tf", ".", "constant", "(", "0", ")", ",", "\n", "tf", ".", "zeros", "(", "(", "tf", ".", "shape", "(", "y_samples", ")", "[", "0", "]", ",", "tf", ".", "shape", "(", "y_samples", ")", "[", "3", "]", ")", ",", "dtype", "=", "dtype", ")", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", ")", "\n", "# shape = (n_ysample, nx)", "\n", "\n", "\n", "", "entropy", "=", "tf", ".", "reduce_mean", "(", "avg_negative_logp_y", ",", "axis", "=", "0", ")", "\n", "# shape = (nx,)", "\n", "\n", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.estimate_posterior_maxx_tensor": [[1228, 1288], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow_probability.distributions.TruncatedNormal().sample", "range", "numpy.zeros", "range", "scipy.special.logsumexp().reshape", "numpy.exp", "tensorflow.shape", "tensorflow.shape", "tensorflow_probability.distributions.Normal().log_cdf", "range", "tensorflow_probability.distributions.TruncatedNormal", "samples.reshape.reshape", "numpy.concatenate().reshape", "numpy.concatenate().reshape", "scipy.norm.logcdf", "scipy.special.logsumexp", "tensorflow_probability.distributions.Normal", "numpy.log", "tensorflow.zeros_like", "tensorflow.ones_like", "numpy.concatenate", "numpy.concatenate", "scipy.special.logsumexp", "numpy.log", "scipy.norm.sf", "tensorflow.ones_like", "tensorflow.expand_dims", "tensorflow.expand_dims", "numpy.sum"], "function", ["None"], ["", "def", "estimate_posterior_maxx_tensor", "(", "\n", "nhyp", ",", "\n", "meanf", ",", "# (nhyp, nmaxloc)", "\n", "stdf", ",", "# (nhyp, nmaxloc)", "\n", "maxfd", ",", "# (nhyp, nmaxfd)", "\n", "nsample", ")", ":", "\n", "    ", "nmaxloc", "=", "tf", ".", "shape", "(", "meanf", ")", "[", "1", "]", "\n", "nmaxfd", "=", "tf", ".", "shape", "(", "maxfd", ")", "[", "1", "]", "\n", "\n", "maxfd", "=", "tf", ".", "reshape", "(", "maxfd", ",", "shape", "=", "(", "nhyp", ",", "1", ",", "nmaxfd", ")", ")", "\n", "meanf", "=", "tf", ".", "reshape", "(", "meanf", ",", "shape", "=", "(", "nhyp", ",", "nmaxloc", ",", "1", ")", ")", "\n", "stdf", "=", "tf", ".", "reshape", "(", "stdf", ",", "shape", "=", "(", "nhyp", ",", "nmaxloc", ",", "1", ")", ")", "\n", "\n", "standardized_maxfd", "=", "(", "maxfd", "-", "meanf", ")", "/", "stdf", "\n", "\n", "standardized_samples", "=", "tfp", ".", "distributions", ".", "TruncatedNormal", "(", "\n", "loc", "=", "tf", ".", "zeros_like", "(", "standardized_maxfd", ")", ",", "\n", "scale", "=", "tf", ".", "ones_like", "(", "standardized_maxfd", ")", ",", "\n", "low", "=", "standardized_maxfd", ",", "\n", "high", "=", "np", ".", "infty", "*", "tf", ".", "ones_like", "(", "standardized_maxfd", ")", "\n", ")", ".", "sample", "(", "nsample", ")", "\n", "# shape = (nsample, nhyp, nmaxloc, nmaxfd)", "\n", "\n", "# no nhyp", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "log_cdf", "=", "tfp", ".", "distributions", ".", "Normal", "(", "\n", "loc", "=", "tf", ".", "expand_dims", "(", "meanf", "[", "i", ",", "...", "]", ",", "0", ")", ",", "\n", "scale", "=", "tf", ".", "expand_dims", "(", "stdf", "[", "i", ",", "...", "]", ",", "0", ")", "\n", ")", ".", "log_cdf", "(", "standardized_samples", "[", ":", ",", "i", ",", "...", "]", ")", "\n", "\n", "\n", "\n", "", "unnormalized_logprob", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "nmaxfd", ",", "nmaxloc", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "nmaxloc", ")", ":", "\n", "            ", "samples", "=", "standardized_samples", "[", ":", ",", "i", ",", "j", ",", ":", "]", "*", "stdf", "[", "i", ",", "j", "]", "+", "meanf", "[", "i", ",", "j", "]", "\n", "# (nsample, nmaxfd)", "\n", "samples", "=", "samples", ".", "reshape", "(", "1", ",", "nsample", ",", "nmaxfd", ")", "\n", "# (1, nsample, nmaxfd)", "\n", "\n", "other_meanf", "=", "np", ".", "concatenate", "(", "[", "meanf", "[", "i", ",", ":", "j", "]", ",", "meanf", "[", "i", ",", "(", "j", "+", "1", ")", ":", "]", "]", ")", ".", "reshape", "(", "nmaxloc", "-", "1", ",", "1", ",", "1", ")", "\n", "other_stdf", "=", "np", ".", "concatenate", "(", "[", "stdf", "[", "i", ",", ":", "j", "]", ",", "stdf", "[", "i", ",", "(", "j", "+", "1", ")", ":", "]", "]", ")", ".", "reshape", "(", "nmaxloc", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "logcdf_samples", "=", "spst", ".", "norm", ".", "logcdf", "(", "samples", ",", "\n", "loc", "=", "other_meanf", ",", "scale", "=", "other_stdf", ")", "\n", "# (nmaxloc-1, nsample, nmaxfd)", "\n", "unnormalized_logprob_maxloc", "=", "sp", ".", "special", ".", "logsumexp", "(", "np", ".", "sum", "(", "logcdf_samples", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "-", "np", ".", "log", "(", "nsample", ")", "+", "np", ".", "log", "(", "spst", ".", "norm", ".", "sf", "(", "maxfd", "[", "i", ",", ":", "]", ",", "loc", "=", "meanf", "[", "i", ",", "j", "]", ",", "scale", "=", "stdf", "[", "i", ",", "j", "]", ")", ")", "\n", "# (nmaxfd,)", "\n", "unnormalized_logprob", "[", "i", ",", ":", ",", "j", "]", "=", "unnormalized_logprob_maxloc", "\n", "\n", "", "", "log_normalizer", "=", "sp", ".", "special", ".", "logsumexp", "(", "unnormalized_logprob", ",", "axis", "=", "2", ")", ".", "reshape", "(", "nhyp", ",", "nmaxfd", ",", "1", ")", "\n", "\n", "prob", "=", "np", ".", "exp", "(", "unnormalized_logprob", "-", "log_normalizer", ")", "\n", "# (nhyp, nmaxfd, nmaxloc)", "\n", "\n", "return", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.estimate_posterior_maxx_fullcov_tf": [[1325, 1383], ["tensorflow.constant", "range", "tensorflow.stack", "tensorflow.transpose", "list", "range", "tensorflow.stack", "tf.transpose.append", "tensorflow.expand_dims", "range", "tensorflow.constant", "tensorflow.linalg.diag_part", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.where", "tensorflow.where", "tensorflow.greater", "tensorflow.where", "tensorflow.where", "tensorflow.sqrt", "tensorflow_probability.distributions.Normal().cdf", "tf.stack.append", "tensorflow.reduce_sum", "tensorflow.eye", "[].reshape", "tensorflow.reshape", "tensorflow.not_equal", "tensorflow.ones_like", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow.zeros_like", "tensorflow.constant", "tensorflow.reduce_prod", "tensorflow_probability.distributions.Normal", "tensorflow.transpose", "numpy.eye"], "function", ["None"], ["def", "estimate_posterior_maxx_fullcov_tf", "(", "\n", "nhyp", ",", "\n", "nmaxloc", ",", "\n", "meanf", ",", "# (nhyp, nmaxloc)", "\n", "covf", ",", "# (nhyp, nmaxloc, nmaxloc)", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    Requires:\n        meanf: column vector (nx,1)\n        covf: (nx,nx)\n    using full covariance matrix of f_max\n    not considering fD\n    p(x_i \\in X is max) = prod_j p(x_i > x_j) (assuming independent between pair of x's)\n    p((xi,xj)) = N((xi,xj)| (mean_xi,mean_xj), cov)\n    z = (xi,xj).T * [1, -1] ~ N( mean_xi - mean_xj, [1,-1].T * cov * [1,-1] )\n    p(z > 0) = p(x_i > x_j) = Phi_z(0)\n\n    IMPORTANT: all maxlocs must be different\n        if not, a submatrix of covf is not positive definite\n    \"\"\"", "\n", "idxs", "=", "tf", ".", "constant", "(", "list", "(", "range", "(", "nmaxloc", ")", ")", ",", "dtype", "=", "dtype", ")", "\n", "prob_max", "=", "[", "]", "\n", "\n", "# wrong dimension for nhyp!!!!!!!!!", "\n", "for", "i", "in", "range", "(", "nmaxloc", ")", ":", "\n", "        ", "diff_eye", "=", "-", "tf", ".", "eye", "(", "nmaxloc", ",", "dtype", "=", "dtype", ")", "+", "tf", ".", "constant", "(", "np", ".", "eye", "(", "nmaxloc", ")", "[", ":", ",", "i", "]", ".", "reshape", "(", "nmaxloc", ",", "1", ")", ",", "dtype", "=", "dtype", ")", "\n", "prob_max_i", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "nhyp", ")", ":", "\n", "            ", "varfj", "=", "tf", ".", "linalg", ".", "diag_part", "(", "tf", ".", "transpose", "(", "diff_eye", ")", "@", "covf", "[", "j", ",", "...", "]", "@", "diff_eye", ")", "# nmaxloc,", "\n", "meanfj", "=", "tf", ".", "reshape", "(", "meanf", "[", "j", ",", "...", "]", ",", "shape", "=", "(", "1", ",", "nmaxloc", ")", ")", "@", "diff_eye", "# nmaxloc,", "\n", "varfj", "=", "tf", ".", "squeeze", "(", "varfj", ")", "\n", "meanfj", "=", "tf", ".", "squeeze", "(", "meanfj", ")", "\n", "\n", "varfj", "=", "tf", ".", "where", "(", "tf", ".", "not_equal", "(", "idxs", ",", "i", ")", ",", "varfj", ",", "tf", ".", "ones_like", "(", "varfj", ")", ")", "\n", "meanfj", "=", "tf", ".", "where", "(", "tf", ".", "not_equal", "(", "idxs", ",", "i", ")", ",", "meanfj", ",", "tf", ".", "zeros_like", "(", "meanfj", ")", ")", "\n", "\n", "# avoid the issue that 2 maxlocs are the same", "\n", "# std of the difference of 2 variables is zero", "\n", "varfj_greater_clip_min", "=", "tf", ".", "greater", "(", "varfj", ",", "clip_min", ")", "\n", "varfj", "=", "tf", ".", "where", "(", "varfj_greater_clip_min", ",", "varfj", ",", "tf", ".", "ones_like", "(", "varfj", ")", ")", "\n", "meanfj", "=", "tf", ".", "where", "(", "varfj_greater_clip_min", ",", "meanfj", ",", "tf", ".", "zeros_like", "(", "meanfj", ")", ")", "\n", "\n", "stdfj", "=", "tf", ".", "sqrt", "(", "varfj", ")", "\n", "\n", "cdf_max", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "meanfj", ",", "scale", "=", "stdfj", ")", ".", "cdf", "(", "0.0", ")", "\n", "sf_max", "=", "tf", ".", "constant", "(", "1.0", ",", "dtype", "=", "dtype", ")", "-", "cdf_max", "\n", "# nmaxloc,", "\n", "\n", "prob_max_i", ".", "append", "(", "tf", ".", "reduce_prod", "(", "sf_max", ")", ")", "\n", "\n", "", "prob_max_i", "=", "tf", ".", "stack", "(", "prob_max_i", ")", "# (nhyp)", "\n", "prob_max", ".", "append", "(", "prob_max_i", ")", "\n", "\n", "", "prob_max", "=", "tf", ".", "stack", "(", "prob_max", ")", "# (nmaxloc, nhyp)", "\n", "prob_max", "=", "tf", ".", "transpose", "(", "prob_max", ")", "# (nhyp, nmaxloc)", "\n", "prob_max", "=", "prob_max", "/", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "prob_max", ",", "axis", "=", "1", ")", ",", "1", ")", "\n", "return", "prob_max", "# (nhyp, nmaxloc)", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.estimate_posterior_maxf_numpy": [[1472, 1516], ["Exception", "maxf.reshape.reshape", "meanf.reshape.reshape", "stdf.reshape.reshape", "scipy.norm.logcdf", "numpy.sum", "scipy.special.logsumexp().reshape", "numpy.exp", "numpy.zeros_like", "numpy.ones_like", "scipy.special.logsumexp"], "function", ["None"], ["", "def", "estimate_posterior_maxf_numpy", "(", "\n", "meanf", ",", "# (nhyp, nobs)", "\n", "stdf", ",", "# (nhyp, nobs)", "\n", "maxf", "# (nhyp, nmaxf)", "\n", ")", ":", "\n", "    ", "\"\"\"\n    using numpy\n    probability maxf being f*\n        p(f(x) < maxf for other x in the set of observed inputs so far)\n\n    Requires:\n        meanf, stdf: statistics of function values at observed inputs so far\n        maxf: samples of the maximum\n        nsample: number of sample to estimate the posterior\n    \n    Returns:\n        the probabilities of each maximizers given hyp\n            shape = (nhyp, nmaxf)\n    \"\"\"", "\n", "raise", "Exception", "(", "\"Should we include p(maxf) term? to reduce the probability of very large maxf?\"", ")", "\n", "nhyp", "=", "meanf", ".", "shape", "[", "0", "]", "\n", "nobs", "=", "meanf", ".", "shape", "[", "1", "]", "\n", "nmaxf", "=", "maxf", ".", "shape", "[", "1", "]", "\n", "\n", "maxf", "=", "maxf", ".", "reshape", "(", "nhyp", ",", "nmaxf", ",", "1", ")", "\n", "meanf", "=", "meanf", ".", "reshape", "(", "nhyp", ",", "1", ",", "nobs", ")", "\n", "stdf", "=", "stdf", ".", "reshape", "(", "nhyp", ",", "1", ",", "nobs", ")", "\n", "\n", "standardized_maxf", "=", "(", "maxf", "-", "meanf", ")", "/", "stdf", "\n", "\n", "logcdf_maxf", "=", "spst", ".", "norm", ".", "logcdf", "(", "standardized_maxf", ",", "\n", "loc", "=", "np", ".", "zeros_like", "(", "standardized_maxf", ")", ",", "\n", "scale", "=", "np", ".", "ones_like", "(", "standardized_maxf", ")", ")", "\n", "# (nhyp, nobs, nmaxf)", "\n", "\n", "unnormalized_logprob_maxf", "=", "np", ".", "sum", "(", "logcdf_maxf", ",", "axis", "=", "2", ")", "\n", "# (nhyp, nmaxf)", "\n", "\n", "log_normalizer", "=", "sp", ".", "special", ".", "logsumexp", "(", "unnormalized_logprob_maxf", ",", "axis", "=", "1", ")", ".", "reshape", "(", "nhyp", ",", "1", ")", "\n", "# (nhyp,1)", "\n", "\n", "prob_maxf", "=", "np", ".", "exp", "(", "unnormalized_logprob_maxf", "-", "log_normalizer", ")", "\n", "\n", "return", "prob_maxf", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.test_estimate_posterior_maxx_numpy": [[1518, 1535], ["numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "estimate_posterior_maxx_numpy", "numpy.array", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "test_estimate_posterior_maxx_numpy", "(", ")", ":", "\n", "    ", "mean_f", "=", "np", ".", "array", "(", "[", "1.", ",", "2.", ",", "3.", ",", "4.", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "std_f", "=", "np", ".", "array", "(", "[", "2.", ",", "2.", ",", "2.", ",", "2.", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "# mean_f = np.array([1.]).reshape(1, -1)", "\n", "# std_f = np.array( [2.]).reshape(1, -1)", "\n", "\n", "nsample", "=", "10", "\n", "maxfd", "=", "np", ".", "array", "(", "[", "5.", ",", "10.", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "probs", "=", "estimate_posterior_maxx_numpy", "(", "\n", "mean_f", ",", "\n", "std_f", ",", "\n", "maxfd", ",", "\n", "nsample", ")", "\n", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.test_estimate_posterior_maxf_numpy": [[1537, 1552], ["numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "utils.estimate_posterior_maxf_numpy", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.estimate_posterior_maxf_numpy"], ["", "def", "test_estimate_posterior_maxf_numpy", "(", ")", ":", "\n", "# mean_f = np.array([1., 2., 3., 4.]).reshape(1, -1)", "\n", "# std_f = np.array( [2., 2., 2., 2.]).reshape(1, -1)", "\n", "\n", "    ", "mean_f", "=", "np", ".", "array", "(", "[", "1.", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "std_f", "=", "np", ".", "array", "(", "[", "2.", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "maxfd", "=", "np", ".", "array", "(", "[", "5.", ",", "4.8", "]", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "probs", "=", "estimate_posterior_maxf_numpy", "(", "\n", "mean_f", ",", "\n", "std_f", ",", "\n", "maxfd", ")", "\n", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_duplicate_mask_np": [[1554, 1574], ["numpy.zeros", "range", "range", "numpy.sqrt", "numpy.sum"], "function", ["None"], ["", "def", "get_duplicate_mask_np", "(", "xs", ",", "resolution", "=", "1e-5", ")", ":", "\n", "    ", "\"\"\"\n    duplicate_mask[i] = 1 if xs[i,:] is already in xs[:i,:]\n    \"\"\"", "\n", "n", "=", "xs", ".", "shape", "[", "0", "]", "\n", "\n", "duplicate_mask", "=", "np", ".", "zeros", "(", "n", ")", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "if", "duplicate_mask", "[", "i", "]", "==", "1.0", ":", "\n", "# already duplicated", "\n", "            ", "continue", "\n", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "n", ")", ":", "\n", "            ", "adiff", "=", "xs", "[", "j", ",", ":", "]", "-", "xs", "[", "i", ",", ":", "]", "\n", "dist", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "adiff", "*", "adiff", ")", ")", "\n", "if", "dist", "<=", "resolution", ":", "\n", "                ", "duplicate_mask", "[", "j", "]", "=", "1.0", "\n", "\n", "", "", "", "return", "duplicate_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.remove_duplicates_np": [[1576, 1582], ["utils.get_duplicate_mask_np", "numpy.delete", "numpy.where"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_duplicate_mask_np"], ["", "def", "remove_duplicates_np", "(", "xs", ",", "resolution", "=", "1e-5", ")", ":", "\n", "    ", "invalid_tests", "=", "get_duplicate_mask_np", "(", "xs", ",", "resolution", ")", "\n", "\n", "remove_idxs", "=", "np", ".", "where", "(", "invalid_tests", "==", "1.0", ")", "[", "0", "]", "\n", "xs", "=", "np", ".", "delete", "(", "xs", ",", "remove_idxs", ",", "axis", "=", "0", ")", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_post_maxidxs_np": [[1584, 1652], ["mean.reshape.reshape", "numpy.diag().reshape", "numpy.eye", "numpy.zeros", "range", "numpy.argsort", "numpy.zeros", "range", "numpy.sum", "numpy.sum", "np.eye.copy", "numpy.delete", "np.delete.T.dot", "numpy.sqrt", "numpy.min", "np.eye.copy", "numpy.delete", "np.delete.T.dot", "np.delete.T.dot().dot", "scipy.multivariate_normal.cdf", "numpy.diag", "np.delete.T.dot", "print", "numpy.zeros", "np.delete.T.dot", "numpy.linalg.eigvalsh", "numpy.eye", "c.T.dot.squeeze", "numpy.where"], "function", ["None"], ["", "def", "compute_post_maxidxs_np", "(", "\n", "mean", ",", "# ntest,1 or ntest,", "\n", "cov", ",", "# ntest, ntest", "\n", "max_idxs", ",", "# nmax,", "\n", "zero_prob", "=", "0.0", ",", "\n", "nlimit", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Requires: cov to be non-degenerate\n        i.e., no duplicate x\n    \"\"\"", "\n", "# tested in test_ep.py ", "\n", "\n", "nmax", "=", "max_idxs", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "mean", ".", "shape", "[", "0", "]", "\n", "mean", "=", "mean", ".", "reshape", "(", "ntest", ",", "1", ")", "\n", "\n", "if", "nlimit", "is", "None", ":", "\n", "        ", "nlimit", "=", "nmax", "\n", "\n", "# find top nlimit based on min zscore", "\n", "# in nmax", "\n", "", "var", "=", "np", ".", "diag", "(", "cov", ")", ".", "reshape", "(", "ntest", ",", "1", ")", "\n", "eye", "=", "np", ".", "eye", "(", "ntest", ")", "\n", "minzscores", "=", "np", ".", "zeros", "(", "nmax", ")", "\n", "\n", "for", "i", "in", "range", "(", "nmax", ")", ":", "\n", "        ", "c", "=", "eye", ".", "copy", "(", ")", "\n", "c", "=", "np", ".", "delete", "(", "c", ",", "max_idxs", "[", "i", "]", ",", "axis", "=", "1", ")", "\n", "c", "[", "max_idxs", "[", "i", "]", ",", ":", "]", "=", "1.0", "\n", "\n", "mean_diff", "=", "c", ".", "T", ".", "dot", "(", "mean", ")", "\n", "# (ntest-1,1)", "\n", "std_diff", "=", "np", ".", "sqrt", "(", "c", ".", "T", ".", "dot", "(", "var", ")", ")", "# (ntest-1,1)", "\n", "zscore", "=", "-", "mean_diff", "/", "std_diff", "\n", "# (ntest-1,)", "\n", "minzscores", "[", "i", "]", "=", "np", ".", "min", "(", "zscore", ")", "\n", "\n", "", "sorted_minzscore_idxs", "=", "np", ".", "argsort", "(", "minzscores", ")", "\n", "compute_post_idxs", "=", "sorted_minzscore_idxs", "[", ":", "nlimit", "]", "\n", "\n", "\n", "probs", "=", "np", ".", "zeros", "(", "nmax", ")", "\n", "perturb", "=", "1e-5", "\n", "for", "i", "in", "range", "(", "nmax", ")", ":", "\n", "        ", "if", "i", "not", "in", "compute_post_idxs", ":", "\n", "            ", "probs", "[", "i", "]", "=", "0.0", "\n", "\n", "", "c", "=", "eye", ".", "copy", "(", ")", "\n", "c", "=", "np", ".", "delete", "(", "c", ",", "max_idxs", "[", "i", "]", ",", "axis", "=", "1", ")", "\n", "c", "[", "max_idxs", "[", "i", "]", ",", ":", "]", "=", "-", "1.0", "\n", "\n", "mean_diff", "=", "c", ".", "T", ".", "dot", "(", "mean", ")", "\n", "# (ntest-1,1)", "\n", "\n", "cov_diff", "=", "c", ".", "T", ".", "dot", "(", "cov", ")", ".", "dot", "(", "c", ")", "\n", "# (ntest-1,ntest-1)", "\n", "\n", "while", "np", ".", "linalg", ".", "eigvalsh", "(", "cov_diff", ")", "[", "0", "]", "<", "1e-6", ":", "\n", "            ", "print", "(", "\"utils.py:compute_post_maxidxs_np: degenerate cov_diff, add perturb {}\"", ".", "format", "(", "perturb", ")", ")", "\n", "cov_diff", "+=", "np", ".", "eye", "(", "ntest", "-", "1", ")", "*", "perturb", "\n", "\n", "", "probs", "[", "i", "]", "=", "spst", ".", "multivariate_normal", ".", "cdf", "(", "np", ".", "zeros", "(", "ntest", "-", "1", ")", ",", "mean", "=", "mean_diff", ".", "squeeze", "(", ")", ",", "cov", "=", "cov_diff", ")", "\n", "\n", "", "probs", "/=", "np", ".", "sum", "(", "probs", ")", "\n", "probs", "[", "np", ".", "where", "(", "probs", "<", "zero_prob", ")", "[", "0", "]", "]", "=", "0.0", "\n", "probs", "/=", "np", ".", "sum", "(", "probs", ")", "\n", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_multivariate_normal_maxidx_np": [[1654, 1730], ["mean.reshape.reshape", "numpy.linalg.eig", "numpy.clip", "eigvects.dot", "numpy.expand_dims", "numpy.random.normal", "numpy.mean", "np.mean.copy", "numpy.argmax", "range", "len", "numpy.array", "numpy.array", "numpy.diag", "numpy.tril", "numpy.where", "len", "numpy.max", "numpy.zeros", "numpy.zeros().astype", "enumerate", "numpy.sqrt", "mean.reshape.reshape", "numpy.matmul", "numpy.corrcoef", "numpy.where", "max_samples.append", "np.array.append", "np.array.append", "numpy.tile", "numpy.zeros", "mean.reshape.reshape"], "function", ["None"], ["", "def", "sample_multivariate_normal_maxidx_np", "(", "mean", ",", "cov", ",", "nsample", ",", "n_min_sample", "=", "1", ",", "get_sample", "=", "True", ",", "remove_correlated_dims", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    mean: (n,1)\n    cov: (n,n)\n\n    Returns:\n        as the numbers of samples for different maxidxs are different\n        but we return a matrix of sample size for all maxidxs\n        we need a mask array to say which samples are used\n    \"\"\"", "\n", "\n", "n", "=", "cov", ".", "shape", "[", "0", "]", "\n", "mean", "=", "mean", ".", "reshape", "(", "n", ",", ")", "\n", "\n", "eigvalues", ",", "eigvects", "=", "np", ".", "linalg", ".", "eig", "(", "cov", ")", "\n", "eigvalues", "=", "np", ".", "clip", "(", "eigvalues", ",", "a_min", "=", "0.0", ",", "a_max", "=", "np", ".", "infty", ")", "\n", "transform_cov_mat", "=", "eigvects", ".", "dot", "(", "np", ".", "diag", "(", "np", ".", "sqrt", "(", "eigvalues", ")", ")", ")", "\n", "transform_cov_mat", "=", "np", ".", "expand_dims", "(", "transform_cov_mat", ",", "0", ")", "\n", "# (1,n,n)", "\n", "\n", "standard_normal_sample", "=", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "nsample", ",", "n", ",", "1", ")", ")", "\n", "samples", "=", "np", ".", "mean", "(", "mean", ".", "reshape", "(", "1", ",", "n", ")", "+", "np", ".", "matmul", "(", "transform_cov_mat", ",", "standard_normal_sample", ")", ",", "axis", "=", "-", "1", ")", "\n", "# (nsample, n)", "\n", "\n", "corr_idxs", "=", "[", "]", "\n", "\n", "if", "remove_correlated_dims", ":", "\n", "# find dimensions that are highly correlated", "\n", "        ", "correlations", "=", "np", ".", "tril", "(", "np", ".", "corrcoef", "(", "samples", ".", "T", ")", ",", "k", "=", "-", "1", ")", "\n", "# remove highly correlated dimensions", "\n", "rows", ",", "cols", "=", "np", ".", "where", "(", "correlations", ">", "1", "-", "1e-6", ")", "\n", "corr_idxs", "=", "rows", "\n", "\n", "", "ignore_correlated_samples", "=", "samples", ".", "copy", "(", ")", "\n", "ignore_correlated_samples", "[", ":", ",", "corr_idxs", "]", "=", "-", "np", ".", "infty", "\n", "\n", "\n", "# samples = spst.multivariate_normal.rvs(mean=mean, cov=cov, size=nsample)", "\n", "# # (nsample,n)", "\n", "maxidxs", "=", "np", ".", "argmax", "(", "ignore_correlated_samples", ",", "axis", "=", "1", ")", "\n", "# (nsample,)", "\n", "\n", "unique_maxidxs", "=", "[", "]", "\n", "max_samples", "=", "[", "]", "# list of samples with same maximizer", "\n", "max_samples_size", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "idxs", "=", "np", ".", "where", "(", "maxidxs", "==", "i", ")", "[", "0", "]", "\n", "ni", "=", "len", "(", "idxs", ")", "\n", "if", "ni", ">=", "n_min_sample", ":", "\n", "            ", "maxi_samples", "=", "samples", "[", "idxs", ",", ":", "]", "\n", "max_samples", ".", "append", "(", "maxi_samples", ")", "\n", "max_samples_size", ".", "append", "(", "ni", ")", "\n", "unique_maxidxs", ".", "append", "(", "i", ")", "\n", "\n", "", "", "nmax", "=", "len", "(", "unique_maxidxs", ")", "\n", "unique_maxidxs", "=", "np", ".", "array", "(", "unique_maxidxs", ")", "\n", "max_samples_size", "=", "np", ".", "array", "(", "max_samples_size", ")", "\n", "\n", "if", "get_sample", ":", "\n", "# return samples of different maximizer with same size", "\n", "# so we need return_masks to indicate which samples are used", "\n", "        ", "max_nsample", "=", "np", ".", "max", "(", "max_samples_size", ")", "\n", "return_samples", "=", "np", ".", "zeros", "(", "[", "nmax", ",", "n", ",", "max_nsample", "]", ")", "\n", "return_masks", "=", "np", ".", "zeros", "(", "[", "nmax", ",", "max_nsample", "]", ")", ".", "astype", "(", "int", ")", "\n", "\n", "for", "i", ",", "maxi", "in", "enumerate", "(", "unique_maxidxs", ")", ":", "\n", "            ", "return_samples", "[", "i", ",", ":", ",", ":", "max_samples_size", "[", "i", "]", "]", "=", "max_samples", "[", "i", "]", ".", "T", "\n", "return_samples", "[", "i", ",", ":", ",", "max_samples_size", "[", "i", "]", ":", "]", "=", "np", ".", "tile", "(", "mean", ".", "reshape", "(", "n", ",", "1", ")", ",", "\n", "reps", "=", "(", "1", ",", "max_nsample", "-", "max_samples_size", "[", "i", "]", ")", ")", "\n", "return_masks", "[", "i", ",", ":", "max_samples_size", "[", "i", "]", "]", "=", "1", "\n", "\n", "", "return", "nmax", ",", "unique_maxidxs", ",", "max_nsample", ",", "return_samples", ",", "return_masks", ",", "max_samples_size", "\n", "\n", "", "else", ":", "\n", "        ", "return", "unique_maxidxs", ",", "max_samples_size", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.get_testidxs_stats": [[1733, 1834], ["set", "numpy.zeros", "numpy.zeros().astype", "print", "range", "numpy.array", "print", "numpy.array", "numpy.delete", "numpy.delete", "range", "numpy.ones", "utils.sample_multivariate_normal_maxidx_np", "maxidxs.intersection.intersection", "enumerate", "list", "len", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.sum", "list", "len", "numpy.delete", "numpy.delete", "numpy.delete", "list", "list", "numpy.zeros", "numpy.sum", "set().difference", "range", "range", "range", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.zeros", "numpy.zeros", "range", "Exception", "set", "empirical_approximation.get_empirical_stat_from_samples", "m.squeeze", "range", "range", "ep.approximate_EP_np", "m.squeeze", "post_test_masks[].astype", "test_means[].reshape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_multivariate_normal_maxidx_np", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.empirical_approximation.get_empirical_stat_from_samples", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.ep.approximate_EP_np"], ["", "", "def", "get_testidxs_stats", "(", "nhyp", ",", "\n", "test_xs_np", ",", "# (ntest, xdim)", "\n", "test_means", ",", "# (nhyp, ntest)", "\n", "test_covs", ",", "# (nhyp, ntest, ntest)", "\n", "mode", "=", "\"sample\"", ",", "\n", "nsample", "=", "1000", ",", "\n", "n_min_sample", "=", "2", ")", ":", "\n", "    ", "\"\"\"\n    mode in {'sample', 'ep', 'empirical'}\n    \"\"\"", "\n", "\n", "ntest", "=", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "maxidxs", "=", "set", "(", "range", "(", "ntest", ")", ")", "\n", "max_probs", "=", "np", ".", "ones", "(", "[", "nhyp", ",", "ntest", "]", ")", "/", "ntest", "\n", "max_nsample_all", "=", "0", "\n", "\n", "post_test_samples", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "ntest", ",", "nsample", "]", ")", "\n", "post_test_masks", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "nsample", "]", ")", ".", "astype", "(", "bool", ")", "\n", "\n", "print", "(", "\"min empirical probability: {}%\"", ".", "format", "(", "n_min_sample", "/", "nsample", "*", "100", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "nmax", ",", "unique_maxidxs", ",", "max_nsample", ",", "return_samples", ",", "return_masks", ",", "max_samples_size", "=", "sample_multivariate_normal_maxidx_np", "(", "\n", "test_means", "[", "i", ",", ":", "]", ",", "\n", "test_covs", "[", "i", ",", ":", ",", ":", "]", ",", "\n", "nsample", "=", "nsample", ",", "\n", "n_min_sample", "=", "n_min_sample", ")", "\n", "\n", "max_nsample_all", "=", "max_nsample_all", "if", "max_nsample_all", ">", "max_nsample", "else", "max_nsample", "\n", "maxidxs", "=", "maxidxs", ".", "intersection", "(", "unique_maxidxs", ")", "\n", "\n", "max_probs", "[", "i", ",", "unique_maxidxs", "]", "=", "max_samples_size", "/", "np", ".", "sum", "(", "max_samples_size", ")", "\n", "\n", "for", "j", ",", "maxidx", "in", "enumerate", "(", "unique_maxidxs", ")", ":", "\n", "            ", "post_test_samples", "[", "i", ",", "maxidx", ",", ":", ",", ":", "max_nsample", "]", "=", "return_samples", "[", "j", ",", ":", ",", ":", "]", "\n", "post_test_masks", "[", "i", ",", "maxidx", ",", ":", "max_nsample", "]", "=", "return_masks", "[", "j", ",", ":", "]", "\n", "\n", "\n", "", "", "remove_idxs", "=", "np", ".", "array", "(", "list", "(", "set", "(", "range", "(", "ntest", ")", ")", ".", "difference", "(", "maxidxs", ")", ")", ")", "\n", "print", "(", "remove_idxs", ")", "\n", "if", "len", "(", "remove_idxs", ")", "!=", "0", ":", "\n", "        ", "test_xs_np", "=", "np", ".", "delete", "(", "test_xs_np", ",", "remove_idxs", ",", "axis", "=", "0", ")", "\n", "test_means", "=", "np", ".", "delete", "(", "test_means", ",", "remove_idxs", ",", "axis", "=", "1", ")", "\n", "test_covs", "=", "np", ".", "delete", "(", "test_covs", ",", "remove_idxs", ",", "axis", "=", "1", ")", "\n", "test_covs", "=", "np", ".", "delete", "(", "test_covs", ",", "remove_idxs", ",", "axis", "=", "2", ")", "\n", "max_probs", "=", "np", ".", "delete", "(", "max_probs", ",", "remove_idxs", ",", "axis", "=", "1", ")", "\n", "", "max_probs", "=", "max_probs", "/", "np", ".", "sum", "(", "max_probs", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "ntest", "=", "test_xs_np", ".", "shape", "[", "0", "]", "\n", "max_idxs", "=", "np", ".", "array", "(", "list", "(", "range", "(", "ntest", ")", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "if", "len", "(", "remove_idxs", ")", "!=", "0", ":", "\n", "        ", "post_test_samples", "=", "np", ".", "delete", "(", "post_test_samples", ",", "remove_idxs", ",", "axis", "=", "1", ")", "\n", "post_test_samples", "=", "np", ".", "delete", "(", "post_test_samples", ",", "remove_idxs", ",", "axis", "=", "2", ")", "\n", "post_test_masks", "=", "np", ".", "delete", "(", "post_test_masks", ",", "remove_idxs", ",", "axis", "=", "1", ")", "\n", "", "post_test_samples", "=", "np", ".", "delete", "(", "post_test_samples", ",", "\n", "list", "(", "range", "(", "max_nsample_all", ",", "nsample", ")", ")", ",", "axis", "=", "3", ")", "\n", "post_test_masks", "=", "np", ".", "delete", "(", "post_test_masks", ",", "\n", "list", "(", "range", "(", "max_nsample_all", ",", "nsample", ")", ")", ",", "axis", "=", "2", ")", "\n", "\n", "if", "mode", "==", "'sample'", ":", "\n", "        ", "return", "test_xs_np", ",", "max_probs", ",", "test_means", ",", "test_covs", ",", "post_test_samples", ",", "post_test_masks", "\n", "\n", "", "elif", "mode", "==", "'empirical'", ":", "\n", "        ", "post_mean_tests", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "ntest", "]", ")", "\n", "post_cov_tests", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "ntest", ",", "ntest", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "ntest", ")", ":", "\n", "                ", "m", ",", "c", "=", "empirical_approximation", ".", "get_empirical_stat_from_samples", "(", "\n", "post_test_samples", "[", "i", ",", "j", ",", ":", ",", ":", "]", ".", "T", ",", "\n", "weight", "=", "post_test_masks", "[", "i", ",", "j", ",", ":", "]", ".", "astype", "(", "int", ")", ")", "\n", "\n", "post_mean_tests", "[", "i", ",", "j", ",", ":", "]", "=", "m", ".", "squeeze", "(", ")", "\n", "post_cov_tests", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "c", "\n", "\n", "", "", "return", "test_xs_np", ",", "max_probs", ",", "test_means", ",", "test_covs", ",", "post_mean_tests", ",", "post_cov_tests", "\n", "\n", "", "elif", "mode", "==", "'ep'", ":", "\n", "        ", "post_mean_tests", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "ntest", "]", ")", "\n", "post_cov_tests", "=", "np", ".", "zeros", "(", "[", "nhyp", ",", "ntest", ",", "ntest", ",", "ntest", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "ntest", ")", ":", "\n", "                ", "m", ",", "c", "=", "ep", ".", "approximate_EP_np", "(", "\n", "j", ",", "\n", "test_means", "[", "i", ",", ":", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "\n", "test_covs", "[", "i", ",", ":", ",", ":", "]", ",", "\n", "resolution", "=", "1e-9", ",", "\n", "max_niter", "=", "100", ")", "\n", "\n", "post_mean_tests", "[", "i", ",", "j", ",", ":", "]", "=", "m", ".", "squeeze", "(", ")", "\n", "post_cov_tests", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "c", "\n", "\n", "", "", "return", "test_xs_np", ",", "max_probs", ",", "test_means", ",", "test_covs", ",", "post_mean_tests", ",", "post_cov_tests", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown mode in get_testidxs_stats!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.precomputeInvKs": [[1838, 1857], ["range", "tensorflow.stack", "tensorflow.reshape", "utils.computeNKmm", "utils.chol2inv", "tf.stack.append"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.chol2inv"], ["", "", "def", "precomputeInvKs", "(", "xdim", ",", "nhyp", ",", "ls", ",", "\n", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "\n", "dtype", ")", ":", "\n", "\n", "    ", "invKs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "NK", "=", "computeNKmm", "(", "Xsamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "invK", "=", "chol2inv", "(", "NK", ",", "dtype", "=", "dtype", ")", "\n", "invKs", ".", "append", "(", "invK", ")", "\n", "\n", "", "invKs", "=", "tf", ".", "stack", "(", "invKs", ")", "\n", "return", "invKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.eval_invKmaxsams": [[1859, 1884], ["range", "tensorflow.stack", "tensorflow.reshape", "range", "tf.stack.append", "tensorflow.concat", "utils.computeNKmm", "utils.chol2inv", "invKmaxsams_i.append", "tensorflow.stack", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeNKmm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.chol2inv"], ["", "def", "eval_invKmaxsams", "(", "xdim", ",", "nhyp", ",", "nmax", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "Xsamples", ",", "\n", "maxima", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "# only required for PES criterion", "\n", "    ", "invKmaxsams", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "invKmaxsams_i", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "nmax", ")", ":", "\n", "            ", "xmax_xsam", "=", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "maxima", "[", "i", ",", "j", ",", "...", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", ",", "Xsamples", "]", ",", "axis", "=", "0", ")", "\n", "NKmaxsam", "=", "computeNKmm", "(", "xmax_xsam", ",", "l", ",", "sigma", ",", "sigma0", ",", "dtype", "=", "dtype", ")", "\n", "invKmaxsam", "=", "chol2inv", "(", "NKmaxsam", ",", "dtype", "=", "dtype", ")", "\n", "invKmaxsams_i", ".", "append", "(", "invKmaxsam", ")", "\n", "\n", "", "invKmaxsams", ".", "append", "(", "tf", ".", "stack", "(", "invKmaxsams_i", ")", ")", "\n", "", "invKmaxsams", "=", "tf", ".", "stack", "(", "invKmaxsams", ")", "\n", "# nhyp x nmax x (Xsamples.shape[0] + maxima.shape[0]) x (Xsamples.shape[0] + maxima.shape[0])", "\n", "\n", "return", "invKmaxsams", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_discrete_maximum_distribution_np": [[1887, 1906], ["utils.sample_multivariate_normal_maxidx_np", "xs_meanf.squeeze", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.sample_multivariate_normal_maxidx_np"], ["", "def", "evaluate_discrete_maximum_distribution_np", "(", "xs", ",", "xs_meanf", ",", "xs_covf", ",", "nsample", ")", ":", "\n", "    ", "\"\"\"\n    Requires:\n        xs: nx,xdim\n        xs_meanf: nx\n        xs_covf: nx,nx\n    \"\"\"", "\n", "unique_maxidxs", ",", "max_samples_size", "=", "sample_multivariate_normal_maxidx_np", "(", "\n", "xs_meanf", ".", "squeeze", "(", ")", ",", "xs_covf", ",", "nsample", ",", "\n", "n_min_sample", "=", "1", ",", "get_sample", "=", "False", ")", "\n", "\n", "maximizers", "=", "xs", "[", "unique_maxidxs", ",", ":", "]", "\n", "frequency", "=", "max_samples_size", "/", "np", ".", "sum", "(", "max_samples_size", ")", "\n", "\n", "# sorted_idxs = np.argsort(frequency.squeeze())[-10:]", "\n", "# print(\"maximizers: {}\".format(list(zip(maximizers[sorted_idxs].squeeze(), frequency[sorted_idxs].squeeze())) ))", "\n", "\n", "return", "maximizers", ",", "frequency", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_discrete_regret_distribution_np": [[1908, 1945], ["numpy.array", "numpy.array", "range", "numpy.sqrt", "utils.evaluate_discrete_maximum_distribution_np", "func().squeeze", "numpy.sum", "numpy.sum", "numpy.concatenate", "numpy.concatenate", "func"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_discrete_maximum_distribution_np"], ["", "def", "evaluate_discrete_regret_distribution_np", "(", "nhyp", ",", "\n", "true_maximum", ",", "\n", "xs", ",", "xs_meanf", ",", "xs_covf", ",", "\n", "nsample", ",", "func", ",", "\n", "debug", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Requires:\n        xs: nx,xdim\n\n        xs_meanf: nhyp, nx\n        xs_cov: nhyp, nx, nx\n    \"\"\"", "\n", "regret_mean", "=", "0.0", "\n", "regret2_mean", "=", "0.0", "\n", "regret_all", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "frequency_all", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "\n", "# true_maximum = np.max(func(xs)).squeeze()", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "maximizers", ",", "frequency", "=", "evaluate_discrete_maximum_distribution_np", "(", "\n", "xs", ",", "xs_meanf", "[", "i", ",", ":", "]", ",", "xs_covf", "[", "i", ",", ":", ",", ":", "]", ",", "nsample", ")", "\n", "maxima", "=", "func", "(", "maximizers", ")", ".", "squeeze", "(", ")", "\n", "\n", "regret", "=", "true_maximum", "-", "maxima", "\n", "regret_mean", "+=", "np", ".", "sum", "(", "regret", "*", "frequency", ")", "/", "nhyp", "\n", "regret2_mean", "+=", "np", ".", "sum", "(", "regret", "*", "regret", "*", "frequency", ")", "/", "nhyp", "\n", "\n", "if", "debug", ":", "\n", "            ", "regret_all", "=", "np", ".", "concatenate", "(", "[", "regret_all", ",", "regret", "]", ")", "\n", "frequency_all", "=", "np", ".", "concatenate", "(", "[", "frequency_all", ",", "frequency", "/", "nhyp", "]", ")", "\n", "\n", "", "", "regret_std", "=", "np", ".", "sqrt", "(", "regret2_mean", "-", "regret_mean", "*", "regret_mean", ")", "\n", "\n", "if", "debug", ":", "\n", "        ", "return", "regret_all", ",", "frequency_all", ",", "regret_mean", ",", "regret_std", "\n", "\n", "", "return", "regret_mean", ",", "regret_std", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.find_duplicate_resolution": [[1947, 1971], ["print", "numpy.linalg.cond", "numpy.ones", "numpy.sum", "numpy.exp", "numpy.eye", "numpy.eye"], "function", ["None"], ["", "def", "find_duplicate_resolution", "(", "xdim", ",", "sigmas_np", ",", "ls_np", ",", "size", "=", "2", ",", "min_resolution", "=", "1e-6", ",", "max_resolution", "=", "10", ")", ":", "\n", "# find a proper duplicate resolution", "\n", "    ", "print", "(", "\"Finding a duplicate resolution for GP hyperparameters:\"", ")", "\n", "duplicate_resolution", "=", "1.0", "\n", "\n", "while", "True", ":", "\n", "        ", "duplicate_resolution", "=", "(", "min_resolution", "+", "max_resolution", ")", "/", "2.0", "\n", "\n", "dummy_x", "=", "np", ".", "ones", "(", "xdim", ")", "*", "duplicate_resolution", "**", "2", "\n", "dummy_cov", "=", "sigmas_np", "[", "0", "]", "*", "np", ".", "sum", "(", "np", ".", "exp", "(", "-", "0.5", "*", "ls_np", "[", "0", "]", "*", "dummy_x", ")", ")", "\n", "\n", "\n", "dummy_covmat", "=", "np", ".", "eye", "(", "size", ")", "*", "sigmas_np", "[", "0", "]", "+", "(", "1.0", "-", "np", ".", "eye", "(", "size", ")", ")", "*", "dummy_cov", "\n", "\n", "test_cond", "=", "np", ".", "linalg", ".", "cond", "(", "dummy_covmat", ")", "\n", "\n", "if", "test_cond", "<", "1e3", ":", "\n", "            ", "max_resolution", "=", "duplicate_resolution", "\n", "if", "max_resolution", "-", "min_resolution", "<", "1e-3", ":", "\n", "                ", "break", "\n", "", "", "else", ":", "\n", "            ", "min_resolution", "=", "duplicate_resolution", "\n", "\n", "", "", "return", "duplicate_resolution", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.pHdata.extract_bbarn.getX": [[5, 8], ["numpy.loadtxt"], "function", ["None"], ["def", "getX", "(", "name", ")", ":", "\n", "    ", "X", "=", "np", ".", "loadtxt", "(", "\"/home/qphong/Data/Workspace/hmmbo/src/pHdata/X_{}.txt\"", ".", "format", "(", "name", ")", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.pHdata.extract_bbarn.getY": [[9, 12], ["numpy.loadtxt"], "function", ["None"], ["", "def", "getY", "(", "name", ")", ":", "\n", "    ", "Y", "=", "np", ".", "loadtxt", "(", "\"/home/qphong/Data/Workspace/hmmbo/src/pHdata/Y_{}.txt\"", ".", "format", "(", "name", ")", ")", "\n", "return", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.pHdata.process_bbarn.get_gphyp": [[16, 49], ["gpflow.models.GPR", "gpflow.models.GPR.compile", "gpflow.train.ScipyOptimizer", "gpflow.train.ScipyOptimizer.minimize", "print", "print", "print", "print", "gpflow.kernels.RBF", "gpflow.models.GPR.compute_log_likelihood"], "function", ["None"], ["def", "get_gphyp", "(", "xdim", ",", "X", ",", "Y", ")", ":", "\n", "    ", "m", "=", "gpflow", ".", "models", ".", "GPR", "(", "X", ",", "Y", ",", "kern", "=", "gpflow", ".", "kernels", ".", "RBF", "(", "xdim", ",", "ARD", "=", "True", ")", ")", "\n", "# kern.variance * exp(- 0.5 * np.sum( (X - X2)^2, axis=1 ) / kern.lengthscale^2 )", "\n", "# in utils.py: kern.variance * exp(-0.5 * np.sum( (X - X2)^2, axis=1 ) * kern.lengthscale)", "\n", "# => lengthscale = 1/gpflow_lengthscale^2", "\n", "\n", "# m.as_pandas_table()", "\n", "# m.read_trainables()", "\n", "# m.likelihood.variance = noise_var", "\n", "# m.likelihood.variance.trainable = False", "\n", "\n", "# if sig_var is not None:", "\n", "#     m.kern.variance = sig_var", "\n", "#     m.kern.variance.trainable = False", "\n", "\n", "# m.kern.lengthscales.transform = gpflow.transform.Exp()", "\n", "# m.kern.variance.transform = gpflow.transform.Exp()", "\n", "\n", "m", ".", "compile", "(", ")", "\n", "opt", "=", "gpflow", ".", "train", ".", "ScipyOptimizer", "(", ")", "\n", "opt", ".", "minimize", "(", "m", ")", "\n", "\n", "sig_var", "=", "m", ".", "kern", ".", "variance", ".", "value", "\n", "lengthscales", "=", "1.0", "/", "(", "m", ".", "kern", ".", "lengthscales", ".", "value", "*", "m", ".", "kern", ".", "lengthscales", ".", "value", ")", "\n", "noise_var", "=", "m", ".", "likelihood", ".", "variance", ".", "value", "\n", "\n", "# print(m.as_pandas_table())", "\n", "print", "(", "\"    Loglikelihood: {}\"", ".", "format", "(", "m", ".", "compute_log_likelihood", "(", ")", ")", ")", "\n", "print", "(", "\"    RBF variance = {}\"", ".", "format", "(", "sig_var", ")", ")", "\n", "print", "(", "\"    RBF lengthscale = {}\"", ".", "format", "(", "lengthscales", ")", ")", "\n", "print", "(", "\"    Likelihood variance = {}\"", ".", "format", "(", "noise_var", ")", ")", "\n", "\n", "return", "m", ",", "sig_var", ",", "lengthscales", ",", "noise_var", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp_lite.get_pNK_test_obs": [[12, 54], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.shape", "tensorflow.concat", "utils.computeKmm", "tensorflow.pad", "tensorflow.linalg.inv", "tensorflow.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["def", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "nhyp", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns \n        The covariance between (x_test, x_obs) vs. (x_test, x_obs)\n        The noise is only for x_obs part of K\n\n        pNKs (nhyp, ntest+nobs, ntest+nobs)\n        invpNKs (nhyp, ntest+nobs, ntest+nobs)\n    \"\"\"", "\n", "nobs", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "test_xs", ")", "[", "0", "]", "\n", "pNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "invpNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "\n", "noiselessK", "=", "utils", ".", "computeKmm", "(", "Xtest_obs", ",", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "noisemat", "=", "tf", ".", "eye", "(", "nobs", ",", "dtype", "=", "dtype", ")", "*", "sigma0s", "[", "i", ",", "...", "]", "\n", "\n", "noisemat", "=", "tf", ".", "pad", "(", "noisemat", ",", "[", "[", "ntest", ",", "0", "]", ",", "[", "ntest", ",", "0", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "pNK", "=", "noiselessK", "+", "noisemat", "\n", "\n", "pNKs", "[", "i", "]", "=", "pNK", "\n", "invpNKs", "[", "i", "]", "=", "tf", ".", "linalg", ".", "inv", "(", "pNK", ")", "\n", "\n", "", "pNKs", "=", "tf", ".", "stack", "(", "pNKs", ")", "\n", "invpNKs", "=", "tf", ".", "stack", "(", "invpNKs", ")", "\n", "# (nhyp, ntest + nobs, ntest + nobs)", "\n", "\n", "return", "pNKs", ",", "invpNKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp_lite.get_queried_f_stat_given_data_maxidx": [[56, 113], ["tensorflow.concat", "utils.computeKnm", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.shape", "tensorflow.ones", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.shape", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.tile"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm"], ["", "def", "get_queried_f_stat_given_data_maxidx", "(", "\n", "xs", ",", "# (nx,xdim)", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest            ", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "nx", "=", "tf", ".", "shape", "(", "xs", ")", "[", "0", "]", "\n", "\n", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "# (ntest+nobs,xdim)", "\n", "k_x_xto", "=", "utils", ".", "computeKnm", "(", "xs", ",", "Xtest_obs", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "# K_{xs, Xtest_obs}", "\n", "# (nx, ntest + nobs)", "\n", "\n", "# NOTE: only compute diagonal elements!!", "\n", "k_x", "=", "sigma", "*", "tf", ".", "ones", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "# (nx,)", "\n", "\n", "Kq", "=", "k_x", "-", "tf", ".", "reduce_sum", "(", "(", "k_x_xto", "@", "invpNK", ")", "*", "k_x_xto", ",", "axis", "=", "1", ")", "\n", "# (nx,)", "\n", "\n", "M", "=", "k_x_xto", "@", "invpNK", "[", ":", ",", ":", "ntest", "]", "\n", "# (nx,ntest)", "\n", "b", "=", "k_x_xto", "@", "invpNK", "[", ":", ",", "ntest", ":", "]", "@", "tf", ".", "reshape", "(", "Y", ",", "shape", "=", "(", "nobs", ",", "1", ")", ")", "\n", "# (nx,1)", "\n", "\n", "query_mean", "=", "M", "@", "tf", ".", "transpose", "(", "post_mean_test_fs", ")", "+", "b", "\n", "# (nx,nmax)", "\n", "query_mean", "=", "tf", ".", "transpose", "(", "query_mean", ")", "\n", "# (nmax,nx)", "\n", "\n", "nmax", "=", "tf", ".", "shape", "(", "post_cov_test_fs", ")", "[", "0", "]", "\n", "\n", "M", "=", "tf", ".", "expand_dims", "(", "M", ",", "axis", "=", "0", ")", "\n", "# (1,nx,ntest)", "\n", "Kq", "=", "tf", ".", "reshape", "(", "Kq", ",", "shape", "=", "(", "1", ",", "nx", ")", ")", "\n", "query_var", "=", "Kq", "+", "tf", ".", "reduce_sum", "(", "(", "\n", "tf", ".", "tile", "(", "M", ",", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", "\n", "@", "post_cov_test_fs", ")", "\n", "*", "M", ",", "\n", "axis", "=", "2", ")", "\n", "# (nmax,nx)", "\n", "\n", "query_var", "=", "tf", ".", "reshape", "(", "query_var", ",", "shape", "=", "(", "nmax", ",", "nx", ")", ")", "\n", "\n", "return", "query_mean", ",", "query_var", "\n", "# (nmax, nx)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp_lite.mp": [[116, 226], ["tensorflow.zeros", "range", "tensorflow.shape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "evaluate_mp_lite.get_queried_f_stat_given_data_maxidx", "tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.where", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.constant", "tensorflow.log"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.get_queried_f_stat_given_data_maxidx"], ["", "def", "mp", "(", "x", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X", ",", "Y", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs_all", ",", "# nhyp, nmax", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs_all", ",", "# nhyp, nmax, ntest", "\n", "post_cov_test_fs_all", ",", "# nhyp, nmax, ntest, ntest", "\n", "\n", "# K_test_max needs to be precomputed", "\n", "# and its inverse", "\n", "# need naming convension for noisy", "\n", "# vs. noiseless K", "\n", "# and partial noisy-noiseless?", "\n", "invpNK_all", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    ntest: # of test inputs\n    nmax: # of maximum candidate in test_xs\n    \"\"\"", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_mean_test_fs_all", ")", "[", "2", "]", "\n", "avg_mp", "=", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "# sigma, sigma0: scalar", "\n", "# l: (1,xdim)", "\n", "\n", "max_probs", "=", "max_probs_all", "[", "i", ",", "...", "]", "# nmax,", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", "=", "post_mean_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest", "\n", "post_cov_test_fs", "=", "post_cov_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest, ntest", "\n", "\n", "non_zero_prob_idxs", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "max_probs", ">", "0.", ")", ")", "\n", "nmax", "=", "tf", ".", "shape", "(", "non_zero_prob_idxs", ")", "[", "0", "]", "\n", "post_mean_test_fs", "=", "tf", ".", "gather", "(", "post_mean_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "post_cov_test_fs", "=", "tf", ".", "gather", "(", "post_cov_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "max_probs", "=", "tf", ".", "gather", "(", "max_probs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "invpNK", "=", "invpNK_all", "[", "i", ",", "...", "]", "# ntest+nobs,ntest+nobs", "\n", "\n", "queried_meanf_given_data_maxidx", ",", "queried_varf_given_data_maxidx", "=", "get_queried_f_stat_given_data_maxidx", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest", "\n", "dtype", "=", "dtype", ")", "\n", "# (nmax,nx), (nmax,nx)", "\n", "\n", "queried_meany_given_data_maxidx", "=", "queried_meanf_given_data_maxidx", "\n", "queried_vary_given_data_maxidx", "=", "queried_varf_given_data_maxidx", "+", "sigma0", "\n", "\n", "queried_meany_given_data_maxidx0", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "queried_meany_given_data_maxidx", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", "\n", "\n", "queried_meany_given_data_maxidx1", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "queried_meany_given_data_maxidx", ",", "axis", "=", "1", ")", ",", "\n", "multiples", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "\n", "queried_vary_given_data_maxidx0", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "queried_vary_given_data_maxidx", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", "\n", "\n", "queried_vary_given_data_maxidx1", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "queried_vary_given_data_maxidx", ",", "axis", "=", "1", ")", ",", "\n", "multiples", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "\n", "diff_meany", "=", "queried_meany_given_data_maxidx0", "-", "queried_meany_given_data_maxidx1", "\n", "\n", "mips", "=", "(", "0.5", "*", "tf", ".", "log", "(", "queried_vary_given_data_maxidx1", "/", "queried_vary_given_data_maxidx0", ")", "\n", "+", "0.5", "*", "(", "queried_vary_given_data_maxidx0", "+", "diff_meany", "*", "diff_meany", ")", "/", "queried_vary_given_data_maxidx1", "\n", "-", "0.5", ")", "\n", "# (nmax, nmax, nx)", "\n", "\n", "max_probs0", "=", "tf", ".", "tile", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", ",", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", "\n", "max_probs1", "=", "tf", ".", "tile", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", ",", "multiples", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nmax, nmax, 1)", "\n", "\n", "mp_val", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reduce_sum", "(", "max_probs0", "*", "max_probs1", "*", "mips", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "# (nmax, nmax, nx)", "\n", "\n", "avg_mp", "=", "avg_mp", "+", "mp_val", "/", "tf", ".", "constant", "(", "nhyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "avg_mp", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_sample_mp.get_pNK_test_obs": [[10, 52], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.shape", "tensorflow.concat", "utils.computeKmm", "tensorflow.pad", "tensorflow.linalg.inv", "tensorflow.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["def", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "nhyp", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns \n        The covariance between (x_test, x_obs) vs. (x_test, x_obs)\n        The noise is only for x_obs part of K\n\n        pNKs (nhyp, ntest+nobs, ntest+nobs)\n        invpNKs (nhyp, ntest+nobs, ntest+nobs)\n    \"\"\"", "\n", "nobs", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "test_xs", ")", "[", "0", "]", "\n", "pNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "invpNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "\n", "noiselessK", "=", "utils", ".", "computeKmm", "(", "Xtest_obs", ",", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "noisemat", "=", "tf", ".", "eye", "(", "nobs", ",", "dtype", "=", "dtype", ")", "*", "sigma0s", "[", "i", ",", "...", "]", "\n", "\n", "noisemat", "=", "tf", ".", "pad", "(", "noisemat", ",", "[", "[", "ntest", ",", "0", "]", ",", "[", "ntest", ",", "0", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "pNK", "=", "noiselessK", "+", "noisemat", "\n", "\n", "pNKs", "[", "i", "]", "=", "pNK", "\n", "invpNKs", "[", "i", "]", "=", "tf", ".", "linalg", ".", "inv", "(", "pNK", ")", "\n", "\n", "", "pNKs", "=", "tf", ".", "stack", "(", "pNKs", ")", "\n", "invpNKs", "=", "tf", ".", "stack", "(", "invpNKs", ")", "\n", "# (nhyp, ntest + nobs, ntest + nobs)", "\n", "\n", "return", "pNKs", ",", "invpNKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_sample_mp.get_queried_f_stat_given_test_samples": [[54, 128], ["tensorflow.concat", "utils.computeKnm", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.tile", "tensorflow.tile", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.ones", "tensorflow.transpose", "tensorflow.concat", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm"], ["", "def", "get_queried_f_stat_given_test_samples", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "# invpNK, # (ntest + nobs, ntest + nobs)", "\n", "invpNK_test", ",", "# (ntest + nobs, ntest)", "\n", "invpNK_obs", ",", "# (ntest+nobs, nobs)", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", ",", "# nmax, ntest, nsample", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "nx", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "nmax", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "1", "]", "\n", "nobs", "=", "tf", ".", "shape", "(", "invpNK_obs", ")", "[", "1", "]", "\n", "nsample", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "2", "]", "\n", "\n", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "# (ntest+nobs,xdim)", "\n", "k_x_xto", "=", "utils", ".", "computeKnm", "(", "x", ",", "Xtest_obs", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "# K_{x, Xtest_obs}", "\n", "# (nx, ntest + nobs)", "\n", "\n", "# NOTE: only compute diagonal elements!!", "\n", "k_x", "=", "sigma", "*", "tf", ".", "ones", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "# (nx,)", "\n", "\n", "\"\"\"\n    (nx,ntest+nobs) x (ntest+nobs, ntest+nobs) x (ntest+nobs,nsample)\n    = (nx,nsample)\n    A + B\n    A\n    (nx,ntest+nobs) x (ntest+nobs, :ntest) x (:ntest,nsample)\n    = (nx,nsample)\n    B\n    (nx,ntest+nobs) x (ntest+nobs, ntest:) x (ntest:,nsample)\n    = (nx,nsample)\n    ~ (nx,ntest+nobs) x (ntest+nobs, ntest:) x (nobs,1)\n    = (nx,1)\n    \"\"\"", "\n", "\n", "post_test_samples", "=", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "post_test_samples", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "# nsample, nmax, ntest, 1", "\n", "\n", "tmp_test", "=", "k_x_xto", "@", "invpNK_test", "\n", "# nx, ntest", "\n", "tmp_test", "=", "tf", ".", "reshape", "(", "tmp_test", ",", "shape", "=", "(", "1", ",", "1", ",", "nx", ",", "ntest", ")", ")", "\n", "tmp_test", "=", "tf", ".", "tile", "(", "tmp_test", ",", "multiples", "=", "(", "1", ",", "nmax", ",", "1", ",", "1", ")", ")", "\n", "tmp_test", "=", "tf", ".", "tile", "(", "tmp_test", ",", "multiples", "=", "(", "nsample", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# nsample,nmax,nx,ntest", "\n", "\n", "query_mean_test", "=", "tmp_test", "@", "post_test_samples", "\n", "# nsample, nmax, nx, 1", "\n", "query_mean_test", "=", "tf", ".", "reshape", "(", "query_mean_test", ",", "shape", "=", "(", "nsample", ",", "nmax", ",", "nx", ")", ")", "\n", "query_mean_test", "=", "tf", ".", "transpose", "(", "query_mean_test", ",", "perm", "=", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "# nmax, nx, nsample", "\n", "\n", "query_mean_obs", "=", "k_x_xto", "@", "(", "invpNK_obs", "@", "Y", ")", "\n", "# nx,1", "\n", "query_mean_obs", "=", "tf", ".", "expand_dims", "(", "query_mean_obs", ",", "axis", "=", "0", ")", "\n", "# 1,nx,1", "\n", "query_mean", "=", "query_mean_test", "+", "query_mean_obs", "\n", "# nmax, nx, nsample", "\n", "\n", "tmp", "=", "(", "k_x_xto", "@", "tf", ".", "concat", "(", "[", "invpNK_test", ",", "invpNK_obs", "]", ",", "axis", "=", "1", ")", ")", "\n", "query_var", "=", "k_x", "-", "tf", ".", "reduce_sum", "(", "tmp", "*", "k_x_xto", ",", "axis", "=", "1", ")", "\n", "# (nx,)", "\n", "\n", "return", "query_mean", ",", "query_var", "\n", "# (nmax, nx, nsample)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_sample_mp.mp": [[132, 247], ["tensorflow.zeros", "range", "tensorflow.shape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "evaluate_sample_mp.get_queried_f_stat_given_test_samples", "tensorflow.sqrt", "tensorflow.reshape", "tensorflow.while_loop", "tensorflow.where", "tensorflow.shape", "tensorflow.constant", "tensorflow.range", "tensorflow.range", "tensorflow.constant", "tensorflow.zeros", "tensorflow.constant", "evaluate_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_sample_mp.get_queried_f_stat_given_test_samples", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample"], ["", "def", "mp", "(", "x", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X", ",", "Y", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs_all", ",", "# nhyp, nmax", "\n", "\n", "# samples of f-values ", "\n", "# given different maximum candidates", "\n", "post_test_samples_all", ",", "# nhyp, nmax, ntest, nsample", "\n", "post_test_mask_all", ",", "# nhyp, nmax, nsample, dtype: tf.bool", "\n", "# as the numbers of samples for different nmax are different", "\n", "# mask is to indicate which samples are used", "\n", "\n", "# K_test_max needs to be precomputed", "\n", "# and its inverse", "\n", "# need naming convension for noisy", "\n", "# vs. noiseless K", "\n", "# and partial noisy-noiseless?", "\n", "invpNK_all", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "\n", "niteration", "=", "10", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    ntest: # of test inputs\n    nmax: # of maximum candidate in test_xs\n    \"\"\"", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_test_samples_all", ")", "[", "2", "]", "\n", "avg_mp", "=", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "# sigma, sigma0: scalar", "\n", "# l: (1,xdim)", "\n", "\n", "max_probs", "=", "max_probs_all", "[", "i", ",", "...", "]", "# nmax,", "\n", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", "=", "post_test_samples_all", "[", "i", ",", "...", "]", "# nmax, ntest, nsample", "\n", "post_test_masks", "=", "post_test_mask_all", "[", "i", ",", "...", "]", "# nmax, nsample", "\n", "\n", "non_zero_prob_idxs", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "max_probs", ">", "0.", ")", ")", "\n", "nmax", "=", "tf", ".", "shape", "(", "non_zero_prob_idxs", ")", "[", "0", "]", "\n", "\n", "post_test_samples", "=", "tf", ".", "gather", "(", "post_test_samples", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "# post_test_masks == 0.0 if the sample is invalid,", "\n", "#                    1.0 if the sample if valid", "\n", "post_test_masks", "=", "tf", ".", "gather", "(", "post_test_masks", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "# (nmax,nsample)", "\n", "\n", "max_probs", "=", "tf", ".", "gather", "(", "max_probs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "invpNK", "=", "invpNK_all", "[", "i", ",", "...", "]", "# ntest+nobs,ntest+nobs", "\n", "\n", "invpNK_test", "=", "tf", ".", "gather", "(", "invpNK", ",", "indices", "=", "tf", ".", "range", "(", "ntest", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "axis", "=", "1", ")", "\n", "invpNK_obs", "=", "tf", ".", "gather", "(", "invpNK", ",", "indices", "=", "tf", ".", "range", "(", "ntest", ",", "ntest", "+", "nobs", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "axis", "=", "1", ")", "\n", "\n", "query_meanf_given_test_samples", ",", "query_varf_given_test_samples", "=", "get_queried_f_stat_given_test_samples", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK_test", ",", "# (ntest + nobs, ntest)", "\n", "invpNK_obs", ",", "# (ntest+nobs, nobs)", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", ",", "# nmax, ntest, nsample", "\n", "dtype", "=", "dtype", ")", "\n", "# (nmax, nx, nsample)", "\n", "# (nx,)", "\n", "\n", "query_stdy_given_test_samples", "=", "tf", ".", "sqrt", "(", "query_varf_given_test_samples", "+", "sigma0", ")", "\n", "# (nx,)", "\n", "query_stdy_given_test_samples", "=", "tf", ".", "reshape", "(", "query_stdy_given_test_samples", ",", "shape", "=", "(", "1", ",", "nx", ",", "1", ")", ")", "\n", "# (1,nx,1)", "\n", "\n", "body", "=", "lambda", "j", ",", "sum_mp", ":", "[", "j", "+", "1", ",", "sum_mp", "+", "mp_each_batch_y_samplemp_each_batch_y_sample", "(", "\n", "x", ",", "\n", "nx", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "\n", "\n", "query_meanf_given_test_samples", ",", "# (nmax, nx, nsample)", "\n", "query_stdy_given_test_samples", ",", "# (1,nx,1)", "\n", "post_test_masks", ",", "# (nmax, nsample)", "\n", "dtype", "=", "dtype", "\n", ")", "]", "\n", "\n", "_", ",", "sum_mp", "=", "tf", ".", "while_loop", "(", "\n", "lambda", "j", ",", "sum_mp", ":", "j", "<", "niteration", ",", "\n", "body", ",", "\n", "(", "tf", ".", "constant", "(", "0", ")", ",", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "\n", "mp_val", "=", "sum_mp", "/", "tf", ".", "constant", "(", "niteration", ",", "dtype", "=", "dtype", ")", "\n", "\n", "avg_mp", "=", "avg_mp", "+", "mp_val", "/", "tf", ".", "constant", "(", "nhyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "avg_mp", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample": [[250, 337], ["tensorflow_probability.distributions.Normal", "tfp.distributions.Normal.sample", "tfp.distributions.Normal.log_prob", "tensorflow.reshape", "tensorflow.tile", "tensorflow.tile", "tensorflow.where", "tensorflow.reduce_logsumexp", "print", "tensorflow.tile", "tfp.distributions.Normal.log_prob", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.where", "tensorflow.reduce_logsumexp", "tensorflow.reduce_logsumexp", "tensorflow.reshape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.expand_dims", "tensorflow.log", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.ones_like", "tensorflow.constant", "tensorflow.reduce_sum", "tensorflow.ones_like", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reduce_sum"], "function", ["None"], ["", "def", "mp_each_batch_y_samplemp_each_batch_y_sample", "(", "\n", "x", ",", "\n", "nx", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "# (nmax)", "\n", "\n", "query_meanf_given_test_samples", ",", "# (nmax, nx, nsample)", "\n", "query_stdy_given_test_samples", ",", "# (1,nx,1)", "\n", "post_test_masks", ",", "# (nmax, nsample)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "nsample", "=", "tf", ".", "shape", "(", "query_meanf_given_test_samples", ")", "[", "-", "1", "]", "\n", "normal_dists", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "query_meanf_given_test_samples", ",", "\n", "scale", "=", "query_stdy_given_test_samples", ")", "\n", "# (nmax, nx, nsample)", "\n", "\n", "# sampling y given posterior | max_idx, data", "\n", "# shape (nysample, nmax, nx)", "\n", "ysample", "=", "normal_dists", ".", "sample", "(", "nysample", ")", "\n", "# (nysample, nmax, nx, nsample)", "\n", "\n", "\n", "# (1) H[y|max_idx]", "\n", "log_prob", "=", "normal_dists", ".", "log_prob", "(", "ysample", ")", "\n", "# (nysample, nmax, nx, nsample)", "\n", "\n", "ext_post_test_masks", "=", "tf", ".", "reshape", "(", "post_test_masks", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ",", "nsample", ")", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "nysample", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "1", ",", "1", ",", "nx", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx, nsample)", "\n", "\n", "log_prob", "=", "tf", ".", "where", "(", "ext_post_test_masks", ",", "\n", "log_prob", ",", "\n", "tf", ".", "ones_like", "(", "log_prob", ",", "dtype", "=", "dtype", ")", "\n", "*", "tf", ".", "constant", "(", "-", "np", ".", "infty", ",", "dtype", "=", "dtype", ")", ")", "\n", "log_mixture_prob", "=", "tf", ".", "reduce_logsumexp", "(", "log_prob", ",", "axis", "=", "3", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "weighted_log_mixure_prob", "=", "log_mixture_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "# print(\"evaluate_mp: the line below is incorrectly implemented for other stochastic criteria!\")", "\n", "cond_ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_mixure_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "\n", "# (2) H[y]", "\n", "print", "(", "\"sample from different max_idx should have different weight!, \\\n        this is incorrectly implemented for evaluate_mp.py, \\\n        this could be incorrect for evaluate_emes.py too! CHECK\"", ")", "\n", "# ysample.shape = (nysample, nmax, nx, nsample)", "\n", "marginal_ysample", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "ysample", ",", "axis", "=", "2", ")", ",", "\n", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx, nsample)", "\n", "# ____marginal___", "\n", "\n", "# Marginalizing over nsample", "\n", "log_prob", "=", "normal_dists", ".", "log_prob", "(", "marginal_ysample", ")", "\n", "# (nysample, nmax, nmax, nx, nsample)", "\n", "\n", "ext_post_test_masks", "=", "tf", ".", "expand_dims", "(", "ext_post_test_masks", ",", "axis", "=", "2", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx, nsample)", "\n", "\n", "log_prob", "=", "tf", ".", "where", "(", "ext_post_test_masks", ",", "\n", "log_prob", ",", "\n", "tf", ".", "ones_like", "(", "log_prob", ",", "dtype", "=", "dtype", ")", "\n", "*", "tf", ".", "constant", "(", "-", "np", ".", "infty", ",", "dtype", "=", "dtype", ")", ")", "\n", "log_marginal_mixture_prob", "=", "tf", ".", "reduce_logsumexp", "(", "log_prob", ",", "axis", "=", "4", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "\n", "# Marginalizing over nmax as p(y) mixture of nmax Gaussians", "\n", "weighted_log_marginal_mixture_prob", "=", "log_marginal_mixture_prob", "+", "tf", ".", "log", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "log_marginal_prob", "=", "tf", ".", "reduce_logsumexp", "(", "weighted_log_marginal_mixture_prob", ",", "axis", "=", "2", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "# Weighted average", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_marginal_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "mp_val", "=", "tf", ".", "reshape", "(", "ent_y", "-", "cond_ent_y", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "return", "mp_val", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.get_pNK_test_obs": [[12, 54], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.shape", "tensorflow.concat", "utils.computeKmm", "tensorflow.pad", "tensorflow.linalg.inv", "tensorflow.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["def", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "nhyp", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns \n        The covariance between (x_test, x_obs) vs. (x_test, x_obs)\n        The noise is only for x_obs part of K\n\n        pNKs (nhyp, ntest+nobs, ntest+nobs)\n        invpNKs (nhyp, ntest+nobs, ntest+nobs)\n    \"\"\"", "\n", "nobs", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "test_xs", ")", "[", "0", "]", "\n", "pNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "invpNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "\n", "noiselessK", "=", "utils", ".", "computeKmm", "(", "Xtest_obs", ",", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "noisemat", "=", "tf", ".", "eye", "(", "nobs", ",", "dtype", "=", "dtype", ")", "*", "sigma0s", "[", "i", ",", "...", "]", "\n", "\n", "noisemat", "=", "tf", ".", "pad", "(", "noisemat", ",", "[", "[", "ntest", ",", "0", "]", ",", "[", "ntest", ",", "0", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "pNK", "=", "noiselessK", "+", "noisemat", "\n", "\n", "pNKs", "[", "i", "]", "=", "pNK", "\n", "invpNKs", "[", "i", "]", "=", "tf", ".", "linalg", ".", "inv", "(", "pNK", ")", "\n", "\n", "", "pNKs", "=", "tf", ".", "stack", "(", "pNKs", ")", "\n", "invpNKs", "=", "tf", ".", "stack", "(", "invpNKs", ")", "\n", "# (nhyp, ntest + nobs, ntest + nobs)", "\n", "\n", "return", "pNKs", ",", "invpNKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.get_queried_f_stat_given_data_maxidx": [[56, 113], ["tensorflow.concat", "utils.computeKnm", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.shape", "tensorflow.ones", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.shape", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.tile"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm"], ["", "def", "get_queried_f_stat_given_data_maxidx", "(", "\n", "xs", ",", "# (nx,xdim)", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest            ", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "nx", "=", "tf", ".", "shape", "(", "xs", ")", "[", "0", "]", "\n", "\n", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "# (ntest+nobs,xdim)", "\n", "k_x_xto", "=", "utils", ".", "computeKnm", "(", "xs", ",", "Xtest_obs", ",", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "# K_{xs, Xtest_obs}", "\n", "# (nx, ntest + nobs)", "\n", "\n", "# NOTE: only compute diagonal elements!!", "\n", "k_x", "=", "sigma", "*", "tf", ".", "ones", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "# (nx,)", "\n", "\n", "Kq", "=", "k_x", "-", "tf", ".", "reduce_sum", "(", "(", "k_x_xto", "@", "invpNK", ")", "*", "k_x_xto", ",", "axis", "=", "1", ")", "\n", "# (nx,)", "\n", "\n", "M", "=", "k_x_xto", "@", "invpNK", "[", ":", ",", ":", "ntest", "]", "\n", "# (nx,ntest)", "\n", "b", "=", "k_x_xto", "@", "invpNK", "[", ":", ",", "ntest", ":", "]", "@", "tf", ".", "reshape", "(", "Y", ",", "shape", "=", "(", "nobs", ",", "1", ")", ")", "\n", "# (nx,1)", "\n", "\n", "query_mean", "=", "M", "@", "tf", ".", "transpose", "(", "post_mean_test_fs", ")", "+", "b", "\n", "# (nx,nmax)", "\n", "query_mean", "=", "tf", ".", "transpose", "(", "query_mean", ")", "\n", "# (nmax,nx)", "\n", "\n", "nmax", "=", "tf", ".", "shape", "(", "post_cov_test_fs", ")", "[", "0", "]", "\n", "\n", "M", "=", "tf", ".", "expand_dims", "(", "M", ",", "axis", "=", "0", ")", "\n", "# (1,nx,ntest)", "\n", "Kq", "=", "tf", ".", "reshape", "(", "Kq", ",", "shape", "=", "(", "1", ",", "nx", ")", ")", "\n", "query_var", "=", "Kq", "+", "tf", ".", "reduce_sum", "(", "(", "\n", "tf", ".", "tile", "(", "M", ",", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ")", ")", "\n", "@", "post_cov_test_fs", ")", "\n", "*", "M", ",", "\n", "axis", "=", "2", ")", "\n", "# (nmax,nx)", "\n", "\n", "query_var", "=", "tf", ".", "reshape", "(", "query_var", ",", "shape", "=", "(", "nmax", ",", "nx", ")", ")", "\n", "\n", "return", "query_mean", ",", "query_var", "\n", "# (nmax, nx)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.mp": [[116, 245], ["tensorflow.zeros", "range", "tensorflow.shape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "evaluate_mp.get_queried_f_stat_given_data_maxidx", "tensorflow.sqrt", "tensorflow.where", "tensorflow.shape", "utils.compute_mean_var_f", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.sqrt", "utils.evaluate_norm_entropy", "utils.evaluate_norm_entropy", "tensorflow.reduce_mean", "tensorflow.while_loop", "tensorflow.constant", "tensorflow.constant", "tensorflow.expand_dims", "tensorflow.constant", "tensorflow.zeros", "evaluate_mp.mp_each_batch_y_sample"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.get_queried_f_stat_given_data_maxidx", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp_each_batch_y_sample"], ["", "def", "mp", "(", "x", ",", "# nx, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X", ",", "Y", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nx", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "# only used when stochastic == True", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs_all", ",", "# nhyp, nmax", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs_all", ",", "# nhyp, nmax, ntest", "\n", "post_cov_test_fs_all", ",", "# nhyp, nmax, ntest, ntest", "\n", "\n", "invKobs_all", ",", "# nhyp, nobs, nobs", "\n", "\n", "# K_test_max needs to be precomputed", "\n", "# and its inverse", "\n", "# need naming convension for noisy", "\n", "# vs. noiseless K", "\n", "# and partial noisy-noiseless?", "\n", "invpNK_all", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "stochastic", "=", "False", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "\n", "# niteration, use_loop, parallel_iterations ", "\n", "# are only used when stochastic == True", "\n", "niteration", "=", "10", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    ntest: # of test inputs\n    nmax: # of maximum candidate in test_xs\n    \"\"\"", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_mean_test_fs_all", ")", "[", "2", "]", "\n", "avg_mp", "=", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "# sigma, sigma0: scalar", "\n", "# l: (1,xdim)", "\n", "\n", "max_probs", "=", "max_probs_all", "[", "i", ",", "...", "]", "# nmax,", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", "=", "post_mean_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest", "\n", "post_cov_test_fs", "=", "post_cov_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest, ntest", "\n", "\n", "non_zero_prob_idxs", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "max_probs", ">", "0.", ")", ")", "\n", "nmax", "=", "tf", ".", "shape", "(", "non_zero_prob_idxs", ")", "[", "0", "]", "\n", "post_mean_test_fs", "=", "tf", ".", "gather", "(", "post_mean_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "post_cov_test_fs", "=", "tf", ".", "gather", "(", "post_cov_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "max_probs", "=", "tf", ".", "gather", "(", "max_probs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "invKobs", "=", "invKobs_all", "[", "i", ",", "...", "]", "# nobs, nobs", "\n", "invpNK", "=", "invpNK_all", "[", "i", ",", "...", "]", "# ntest+nobs,ntest+nobs", "\n", "\n", "queried_meanf_given_data_maxidx", ",", "queried_varf_given_data_maxidx", "=", "get_queried_f_stat_given_data_maxidx", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest     ", "\n", "dtype", "=", "dtype", ")", "\n", "# (nmax,nx), (nmax,nx)", "\n", "queried_stdy_given_data_maxidx", "=", "tf", ".", "sqrt", "(", "queried_varf_given_data_maxidx", "+", "sigma0", ")", "\n", "\n", "if", "not", "stochastic", ":", "\n", "\n", "# H[y]", "\n", "            ", "meanf", ",", "varf", "=", "utils", ".", "compute_mean_var_f", "(", "x", ",", "X", ",", "Y", ",", "l", ",", "sigma", ",", "sigma0", ",", "\n", "invKobs", ",", "fullcov", "=", "False", ",", "dtype", "=", "dtype", ")", "\n", "meanf", "=", "tf", ".", "reshape", "(", "meanf", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "varf", "=", "tf", ".", "reshape", "(", "varf", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "\n", "stdy", "=", "tf", ".", "sqrt", "(", "varf", "+", "sigma0", ")", "\n", "# (nx,)", "\n", "\n", "ent_y", "=", "utils", ".", "evaluate_norm_entropy", "(", "stdy", ",", "dtype", "=", "dtype", ")", "\n", "\n", "# H[y|maxidx]", "\n", "cond_ent_y", "=", "utils", ".", "evaluate_norm_entropy", "(", "queried_stdy_given_data_maxidx", ",", "dtype", "=", "dtype", ")", "\n", "# (nmax,nx)", "\n", "\n", "avg_cond_ent_y", "=", "tf", ".", "reduce_mean", "(", "cond_ent_y", "*", "tf", ".", "expand_dims", "(", "max_probs", ",", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "mp_val", "=", "ent_y", "-", "avg_cond_ent_y", "\n", "", "else", ":", "\n", "\n", "            ", "body", "=", "lambda", "j", ",", "sum_mp", ":", "[", "j", "+", "1", ",", "sum_mp", "+", "mp_each_batch_y_sample", "(", "\n", "x", ",", "\n", "nx", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "\n", "\n", "queried_meanf_given_data_maxidx", ",", "\n", "queried_stdy_given_data_maxidx", "\n", ")", "]", "\n", "\n", "_", ",", "sum_mp", "=", "tf", ".", "while_loop", "(", "\n", "lambda", "j", ",", "sum_mp", ":", "j", "<", "niteration", ",", "\n", "body", ",", "\n", "(", "tf", ".", "constant", "(", "0", ")", ",", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "\n", "mp_val", "=", "sum_mp", "/", "tf", ".", "constant", "(", "niteration", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "avg_mp", "=", "avg_mp", "+", "mp_val", "/", "tf", ".", "constant", "(", "nhyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "avg_mp", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mp.mp_each_batch_y_sample": [[248, 296], ["tensorflow_probability.distributions.Normal", "tfp.distributions.Normal.sample", "tfp.distributions.Normal.log_prob", "print", "tensorflow.expand_dims", "tensorflow.tile", "tfp.distributions.Normal.log_prob", "tensorflow.reduce_logsumexp", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.log", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.reduce_sum"], "function", ["None"], ["", "def", "mp_each_batch_y_sample", "(", "x", ",", "# nx, xdim", "\n", "\n", "nx", ",", "\n", "nmax", ",", "\n", "nysample", ",", "# only used when stochastic == True", "\n", "\n", "max_probs", ",", "# nmax,", "\n", "\n", "queried_meany_given_data_maxidx", ",", "# (nmax, nx)", "\n", "queried_stdy_given_data_maxidx", ",", "# (nmax, nx)", "\n", ")", ":", "\n", "\n", "    ", "normal_dists", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "queried_meany_given_data_maxidx", ",", "\n", "scale", "=", "queried_stdy_given_data_maxidx", ")", "\n", "\n", "# sampling y given posterior | max_idx, data", "\n", "# shape (nysample, nmax, nx)", "\n", "ysample", "=", "normal_dists", ".", "sample", "(", "nysample", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "# (1) H[y|max_idx]", "\n", "log_prob", "=", "normal_dists", ".", "log_prob", "(", "ysample", ")", "\n", "# (nysample, nmax, nx)", "\n", "weighted_log_prob", "=", "log_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "\n", "print", "(", "\"evaluate_mp: the line below is incorrectly implemented for other stochastic criteria!\"", ")", "\n", "cond_ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "# (2) H[y]", "\n", "marginal_ysample", "=", "tf", ".", "expand_dims", "(", "ysample", ",", "2", ")", "\n", "# (nysample, nmax, 1, nx)", "\n", "marginal_ysample", "=", "tf", ".", "tile", "(", "marginal_ysample", ",", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "\n", "log_marginal_prob", "=", "normal_dists", ".", "log_prob", "(", "marginal_ysample", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "+", "tf", ".", "log", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", ")", "\n", "log_marginal_prob", "=", "tf", ".", "reduce_logsumexp", "(", "weighted_log_marginal_prob", ",", "axis", "=", "2", ")", "\n", "# (nysample,nmax,nx)", "\n", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample,nmax,nx)", "\n", "ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_marginal_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "mp_val", "=", "tf", ".", "reshape", "(", "ent_y", "-", "cond_ent_y", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "return", "mp_val", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.get_pNK_test_obs": [[10, 52], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.shape", "tensorflow.concat", "utils.computeKmm", "tensorflow.pad", "tensorflow.linalg.inv", "tensorflow.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["def", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "nhyp", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns \n        The covariance between (x_test, x_obs) vs. (x_test, x_obs)\n        The noise is only for x_obs part of K\n\n        pNKs (nhyp, ntest+nobs, ntest+nobs)\n        invpNKs (nhyp, ntest+nobs, ntest+nobs)\n    \"\"\"", "\n", "nobs", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "test_xs", ")", "[", "0", "]", "\n", "pNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "invpNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "\n", "noiselessK", "=", "utils", ".", "computeKmm", "(", "Xtest_obs", ",", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "noisemat", "=", "tf", ".", "eye", "(", "nobs", ",", "dtype", "=", "dtype", ")", "*", "sigma0s", "[", "i", ",", "...", "]", "\n", "\n", "noisemat", "=", "tf", ".", "pad", "(", "noisemat", ",", "[", "[", "ntest", ",", "0", "]", ",", "[", "ntest", ",", "0", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "pNK", "=", "noiselessK", "+", "noisemat", "\n", "\n", "pNKs", "[", "i", "]", "=", "pNK", "\n", "invpNKs", "[", "i", "]", "=", "tf", ".", "linalg", ".", "inv", "(", "pNK", ")", "\n", "\n", "", "pNKs", "=", "tf", ".", "stack", "(", "pNKs", ")", "\n", "invpNKs", "=", "tf", ".", "stack", "(", "invpNKs", ")", "\n", "# (nhyp, ntest + nobs, ntest + nobs)", "\n", "\n", "return", "pNKs", ",", "invpNKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.get_batch_queried_f_stat_given_test_samples": [[54, 156], ["tensorflow.concat", "utils.computeKnm", "tensorflow.reshape", "utils.computeKmm", "tensorflow.tile", "tensorflow.tile", "tensorflow.tile", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.tile", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["", "def", "get_batch_queried_f_stat_given_test_samples", "(", "\n", "x", ",", "# (nx, batchsize, xdim)", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "xdim", ",", "batchsize", ",", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "# invpNK, # (ntest + nobs, ntest + nobs)", "\n", "invpNK_test", ",", "# (ntest+nobs, ntest)", "\n", "invpNK_obs", ",", "# (ntest+nobs, nobs)", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", ",", "# nmax, ntest, nsample", "\n", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "\n", "    ", "nx", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "nmax", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "1", "]", "\n", "nobs", "=", "tf", ".", "shape", "(", "invpNK_obs", ")", "[", "1", "]", "\n", "nsample", "=", "tf", ".", "shape", "(", "post_test_samples", ")", "[", "2", "]", "\n", "\n", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "# (ntest+nobs,xdim)", "\n", "\n", "# K_{x, Xtest_obs}", "\n", "k_x_xto", "=", "utils", ".", "computeKnm", "(", "\n", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "Xtest_obs", ",", "\n", "l", ",", "sigma", ",", "\n", "dtype", "=", "dtype", ")", "\n", "# (nx * batchsize, ntest+nobs)", "\n", "k_x_xto", "=", "tf", ".", "reshape", "(", "k_x_xto", ",", "shape", "=", "(", "nx", ",", "batchsize", ",", "-", "1", ")", ")", "\n", "# (nx, batchsize, ntest+nobs)", "\n", "\n", "k_x", "=", "utils", ".", "computeKmm", "(", "x", ",", "l", ",", "sigma", ",", "nd", "=", "3", ",", "dtype", "=", "dtype", ")", "\n", "# (nx,batchsize,batchsize)", "\n", "\n", "\"\"\"\n    query_mean = k_x_xto @ invpNK @ [post_test_samples, Y]\n    k_x_xto: nx,bs,nt+no\n    invpNK: nt+no,nt+no\n    post_test_samples: nmax,ntest,nsample\n    Y: no,1\n\n    from observation:\n        Y -> nx,no,1\n        invpNK_obs -> (nx,nt+no,no)\n        k_x_xto @ invpNK_obs @ Y\n        nx,bs,1\n    \"\"\"", "\n", "Y", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "Y", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nx,nobs,1)", "\n", "invpNK_obs", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "invpNK_obs", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nx,ntest+nobs,nobs)", "\n", "query_mean_obs", "=", "k_x_xto", "@", "invpNK_obs", "@", "Y", "\n", "# (nx,batchsize,1)", "\n", "\n", "\"\"\"\n    from test samples:\n        invpNK -> nx,nt+no,nt+no\n        k_x_xto ->nmax,nx,bs,nt+no\n        invpNK_test -> nmax,nx,nt+no,nt\n            _obs  -> nmax,nx,nt+no,no\n        post_test_samples -> nmax,nx,ntest,nsample\n        \n        k_x_xto @ invpNK_test @ post_test_samples\n        nmax,nx,bs,nsample\n    \"\"\"", "\n", "invpNK_test", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "invpNK_test", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nx,ntest+nobs,ntest)", "\n", "query_mean_test", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "k_x_xto", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ",", "1", ")", ")", "@", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "invpNK_test", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ",", "1", ")", ")", "@", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "post_test_samples", ",", "axis", "=", "1", ")", ",", "\n", "multiples", "=", "(", "1", ",", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nmax,nx,batchsize,nsample)", "\n", "\n", "query_mean", "=", "tf", ".", "expand_dims", "(", "query_mean_obs", ",", "axis", "=", "0", ")", "+", "query_mean_test", "\n", "# (nmax,nx,batchsize,nsample)", "\n", "\n", "\"\"\"\n    query_cov = k_x - k_x_xto @ invpNK @ k_x_xto.T\n    k_x: nx,bs,bs\n    k_x_xto: nx,bs,nt+no\n    invpNK: nt+no,nt+no -> (nx,nt+no,nt+no) (invpNK_test and invpNK_obs should be converted before)\n    \"\"\"", "\n", "invpNK", "=", "tf", ".", "concat", "(", "[", "invpNK_test", ",", "invpNK_obs", "]", ",", "axis", "=", "2", ")", "\n", "# (nx,ntest+nobs,ntest+nobs)", "\n", "query_cov", "=", "k_x", "-", "k_x_xto", "@", "invpNK", "@", "tf", ".", "transpose", "(", "k_x_xto", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# (nx,batchsize,batchsize)", "\n", "\n", "return", "query_mean", ",", "query_cov", "\n", "# (nmax, nx, batchsize, nsample)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.mp": [[160, 291], ["tensorflow.zeros", "range", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "evaluate_batch_sample_mp.get_batch_queried_f_stat_given_test_samples", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.while_loop", "tensorflow.where", "tensorflow.shape", "tensorflow.eye", "tensorflow.expand_dims", "tensorflow.constant", "tensorflow.range", "tensorflow.range", "tensorflow.constant", "tensorflow.zeros", "tensorflow.constant", "evaluate_batch_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.get_batch_queried_f_stat_given_test_samples", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample"], ["", "def", "mp", "(", "x", ",", "# nx, batchsize, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X", ",", "Y", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs_all", ",", "# nhyp, nmax", "\n", "\n", "# samples of f-values ", "\n", "# given different maximum candidates", "\n", "post_test_samples_all", ",", "# nhyp, nmax, ntest, nsample", "\n", "post_test_mask_all", ",", "# nhyp, nmax, nsample, dtype: tf.bool", "\n", "# as the numbers of samples for different nmax are different", "\n", "# mask is to indicate which samples are used", "\n", "\n", "# K_test_max needs to be precomputed", "\n", "# and its inverse", "\n", "# need naming convension for noisy", "\n", "# vs. noiseless K", "\n", "# and partial noisy-noiseless?", "\n", "invpNK_all", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "\n", "niteration", "=", "10", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    ntest: # of test inputs\n    nmax: # of maximum candidate in test_xs\n    \"\"\"", "\n", "nx", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "batchsize", "=", "tf", ".", "shape", "(", "x", ")", "[", "1", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_test_samples_all", ")", "[", "2", "]", "\n", "avg_mp", "=", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "# sigma, sigma0: scalar", "\n", "# l: (1,xdim)", "\n", "\n", "max_probs", "=", "max_probs_all", "[", "i", ",", "...", "]", "# nmax,", "\n", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", "=", "post_test_samples_all", "[", "i", ",", "...", "]", "# nmax, ntest, nsample", "\n", "post_test_masks", "=", "post_test_mask_all", "[", "i", ",", "...", "]", "# nmax, nsample", "\n", "\n", "non_zero_prob_idxs", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "max_probs", ">", "0.", ")", ")", "\n", "nmax", "=", "tf", ".", "shape", "(", "non_zero_prob_idxs", ")", "[", "0", "]", "\n", "\n", "post_test_samples", "=", "tf", ".", "gather", "(", "post_test_samples", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "# post_test_masks == 0.0 if the sample is invalid,", "\n", "#                    1.0 if the sample if valid", "\n", "post_test_masks", "=", "tf", ".", "gather", "(", "post_test_masks", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "# (nmax,nsample)", "\n", "\n", "max_probs", "=", "tf", ".", "gather", "(", "max_probs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "invpNK", "=", "invpNK_all", "[", "i", ",", "...", "]", "# ntest+nobs,ntest+nobs", "\n", "\n", "invpNK_test", "=", "tf", ".", "gather", "(", "invpNK", ",", "indices", "=", "tf", ".", "range", "(", "ntest", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "axis", "=", "1", ")", "\n", "invpNK_obs", "=", "tf", ".", "gather", "(", "invpNK", ",", "indices", "=", "tf", ".", "range", "(", "ntest", ",", "ntest", "+", "nobs", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "axis", "=", "1", ")", "\n", "\n", "query_meanf_given_test_samples", ",", "query_covf_given_test_samples", "=", "get_batch_queried_f_stat_given_test_samples", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "xdim", ",", "batchsize", ",", "ntest", ",", "nobs", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK_test", ",", "# (ntest + nobs, ntest)", "\n", "invpNK_obs", ",", "# (ntest+nobs, nobs)", "\n", "# samples of f-value given different maximum candidates", "\n", "post_test_samples", ",", "# nmax, ntest, nsample", "\n", "dtype", "=", "dtype", ")", "\n", "# (nmax, nx, batchsize, nsample)", "\n", "# (nx, batchsize, batchsize)", "\n", "\n", "noise_mat", "=", "tf", ".", "eye", "(", "batchsize", ",", "dtype", "=", "dtype", ")", "*", "sigma0", "\n", "noise_mat", "=", "tf", ".", "expand_dims", "(", "noise_mat", ",", "0", ")", "\n", "# (1,batchsize,batchsize)", "\n", "\n", "query_covy_given_test_samples", "=", "query_covf_given_test_samples", "+", "noise_mat", "\n", "# (nx, batchsize, batchsize)", "\n", "\n", "query_meanf_given_test_samples", "=", "tf", ".", "transpose", "(", "\n", "query_meanf_given_test_samples", ",", "\n", "perm", "=", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", ")", "\n", "# (nmax, nx, nsample, batchsize)", "\n", "\n", "query_covy_given_test_samples", "=", "tf", ".", "expand_dims", "(", "\n", "tf", ".", "expand_dims", "(", "query_covy_given_test_samples", ",", "1", ")", ",", "\n", "axis", "=", "0", "\n", ")", "\n", "# (1, nx, 1, batchsize, batchsize)", "\n", "\n", "body", "=", "lambda", "j", ",", "sum_mp", ":", "[", "j", "+", "1", ",", "sum_mp", "+", "mp_each_batch_y_samplemp_each_batch_y_sample", "(", "\n", "x", ",", "\n", "nx", ",", "batchsize", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "\n", "\n", "query_meanf_given_test_samples", ",", "# (nmax, nx, nsample, batchsize)", "\n", "query_covy_given_test_samples", ",", "# (1, nx, 1, batchsize, batchsize)", "\n", "post_test_masks", ",", "# (nmax, nsample)", "\n", "dtype", "=", "dtype", "\n", ")", "]", "\n", "\n", "_", ",", "sum_mp", "=", "tf", ".", "while_loop", "(", "\n", "lambda", "j", ",", "sum_mp", ":", "j", "<", "niteration", ",", "\n", "body", ",", "\n", "(", "tf", ".", "constant", "(", "0", ")", ",", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "\n", "mp_val", "=", "sum_mp", "/", "tf", ".", "constant", "(", "niteration", ",", "dtype", "=", "dtype", ")", "\n", "\n", "avg_mp", "=", "avg_mp", "+", "mp_val", "/", "tf", ".", "constant", "(", "nhyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "avg_mp", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_sample_mp.mp_each_batch_y_samplemp_each_batch_y_sample": [[294, 383], ["tensorflow_probability.distributions.MultivariateNormalFullCovariance", "tfp.distributions.MultivariateNormalFullCovariance.sample", "tfp.distributions.MultivariateNormalFullCovariance.log_prob", "tensorflow.reshape", "tensorflow.tile", "tensorflow.tile", "tensorflow.where", "tensorflow.reduce_logsumexp", "print", "tensorflow.tile", "tfp.distributions.MultivariateNormalFullCovariance.log_prob", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.where", "tensorflow.reduce_logsumexp", "tensorflow.reduce_logsumexp", "tensorflow.reshape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.expand_dims", "tensorflow.log", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.ones_like", "tensorflow.constant", "tensorflow.reduce_sum", "tensorflow.ones_like", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reduce_sum"], "function", ["None"], ["", "def", "mp_each_batch_y_samplemp_each_batch_y_sample", "(", "\n", "x", ",", "\n", "nx", ",", "batchsize", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "# (nmax)", "\n", "\n", "query_meany_given_test_samples", ",", "# (nmax, nx, nsample, batchsize)", "\n", "query_covy_given_test_samples", ",", "# (1, nx, 1, batchsize, batchsize)", "\n", "post_test_masks", ",", "# (nmax, nsample)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "nsample", "=", "tf", ".", "shape", "(", "post_test_masks", ")", "[", "-", "1", "]", "\n", "normal_dists", "=", "tfp", ".", "distributions", ".", "MultivariateNormalFullCovariance", "(", "\n", "loc", "=", "query_meany_given_test_samples", ",", "\n", "covariance_matrix", "=", "query_covy_given_test_samples", "\n", ")", "\n", "# (nmax, nx, nsample, batchsize)", "\n", "\n", "# sampling y given posterior | max_idx, data", "\n", "# shape (nysample, nmax, nx)", "\n", "ysample", "=", "normal_dists", ".", "sample", "(", "nysample", ")", "\n", "# (nysample, nmax, nx, nsample, batchsize)", "\n", "\n", "# (1) H[y|max_idx]", "\n", "log_prob", "=", "normal_dists", ".", "log_prob", "(", "ysample", ")", "\n", "# (nysample, nmax, nx, nsample)", "\n", "\n", "ext_post_test_masks", "=", "tf", ".", "reshape", "(", "post_test_masks", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ",", "nsample", ")", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "nysample", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "1", ",", "1", ",", "nx", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx, nsample)", "\n", "\n", "log_prob", "=", "tf", ".", "where", "(", "ext_post_test_masks", ",", "\n", "log_prob", ",", "\n", "tf", ".", "ones_like", "(", "log_prob", ",", "dtype", "=", "dtype", ")", "\n", "*", "tf", ".", "constant", "(", "-", "np", ".", "infty", ",", "dtype", "=", "dtype", ")", ")", "\n", "log_mixture_prob", "=", "tf", ".", "reduce_logsumexp", "(", "log_prob", ",", "axis", "=", "3", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "weighted_log_mixure_prob", "=", "log_mixture_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "# print(\"evaluate_mp: the line below is incorrectly implemented for other stochastic criteria!\")", "\n", "cond_ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_mixure_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "\n", "# (2) H[y]", "\n", "print", "(", "\"sample from different max_idx should have different weight!, \\\n        this is incorrectly implemented for evaluate_mp.py, \\\n        this could be incorrect for evaluate_emes.py too! CHECK\"", ")", "\n", "# ysample.shape = (nysample, nmax, nx, nsample, batchsize)", "\n", "marginal_ysample", "=", "tf", ".", "tile", "(", "\n", "tf", ".", "expand_dims", "(", "ysample", ",", "axis", "=", "2", ")", ",", "\n", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx, nsample, batchsize)", "\n", "# ____marginal___", "\n", "\n", "# Marginalizing over nsample", "\n", "log_prob", "=", "normal_dists", ".", "log_prob", "(", "marginal_ysample", ")", "\n", "# (nysample, nmax, nmax, nx, nsample)", "\n", "\n", "ext_post_test_masks", "=", "tf", ".", "expand_dims", "(", "ext_post_test_masks", ",", "axis", "=", "2", ")", "\n", "ext_post_test_masks", "=", "tf", ".", "tile", "(", "ext_post_test_masks", ",", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx, nsample)", "\n", "\n", "log_prob", "=", "tf", ".", "where", "(", "ext_post_test_masks", ",", "\n", "log_prob", ",", "\n", "tf", ".", "ones_like", "(", "log_prob", ",", "dtype", "=", "dtype", ")", "\n", "*", "tf", ".", "constant", "(", "-", "np", ".", "infty", ",", "dtype", "=", "dtype", ")", ")", "\n", "log_marginal_mixture_prob", "=", "tf", ".", "reduce_logsumexp", "(", "log_prob", ",", "axis", "=", "4", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "\n", "# Marginalizing over nmax as p(y) mixture of nmax Gaussians", "\n", "weighted_log_marginal_mixture_prob", "=", "log_marginal_mixture_prob", "+", "tf", ".", "log", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "log_marginal_prob", "=", "tf", ".", "reduce_logsumexp", "(", "weighted_log_marginal_mixture_prob", ",", "axis", "=", "2", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "# Weighted average", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nx)", "\n", "\n", "ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_marginal_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "mp_val", "=", "tf", ".", "reshape", "(", "ent_y", "-", "cond_ent_y", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "return", "mp_val", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.pes": [[10, 51], ["tensorflow_probability.distributions.Normal", "range", "tensorflow.squeeze", "tensorflow.constant", "tensorflow.reshape", "evaluate_pes.imposeC2", "utils.compute_mean_var_f", "tensorflow.constant", "range", "tensorflow.stack", "range", "tensorflow.constant", "tensorflow.constant", "tensorflow.reshape", "utils.evaluate_norm_entropy", "range", "tensorflow.sqrt", "tensorflow.reshape", "evaluate_pes.imposeC3", "tensorflow.constant", "utils.evaluate_norm_entropy", "tensorflow.constant", "tensorflow.squeeze", "tensorflow.sqrt"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.imposeC2", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.imposeC3", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy"], ["def", "pes", "(", "xs", ",", "xdim", ",", "n_max", ",", "n_hyp", ",", "Xsamples", ",", "Ysamples", ",", "ls", ",", "sigmas", ",", "sigma0s", ",", "xmaxs", ",", "invKs", ",", "invKmaxsams", ",", "max_observed_y", ",", "dtype", "=", "tf", ".", "float32", ",", "n_x", "=", "1", ")", ":", "\n", "# invKmaxsams shape: (n_hyp, n_max, n_x+1, n_x+1)", "\n", "# TODO: fix xmaxs is of shape(n_hyp, n_max, xdim)", "\n", "\n", "    ", "pes_vals", "=", "[", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "for", "i", "in", "range", "(", "n_x", ")", "]", "\n", "norm", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "tf", ".", "constant", "(", "0.", ",", "dtype", "=", "dtype", ")", ",", "scale", "=", "tf", ".", "constant", "(", "1.", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "invK", "=", "invKs", "[", "i", ",", "...", "]", "\n", "\n", "mean_fmaxs_C2", ",", "var_fmaxs_C2", ",", "_", ",", "_", "=", "imposeC2", "(", "xdim", ",", "n_max", ",", "Xsamples", ",", "Ysamples", ",", "xmaxs", "[", "i", ",", "...", "]", ",", "max_observed_y", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", ")", "\n", "\n", "f_mean_all", ",", "f_var_all", "=", "utils", ".", "compute_mean_var_f", "(", "xs", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", "=", "dtype", ")", "\n", "\n", "zero_const", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "idx", "in", "range", "(", "n_x", ")", ":", "\n", "            ", "x", "=", "tf", ".", "reshape", "(", "xs", "[", "idx", ",", "...", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "\n", "ent_y", "=", "utils", ".", "evaluate_norm_entropy", "(", "tf", ".", "sqrt", "(", "tf", ".", "squeeze", "(", "f_var_all", "[", "idx", "]", ")", "+", "sigma0", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "cond_ent_y", "=", "zero_const", "\n", "\n", "for", "j", "in", "range", "(", "n_max", ")", ":", "\n", "                ", "invKmaxsam", "=", "invKmaxsams", "[", "i", ",", "j", ",", "...", "]", "\n", "mean_fmax_C2", "=", "mean_fmaxs_C2", "[", "j", "]", "\n", "var_fmax_C2", "=", "var_fmaxs_C2", "[", "j", "]", "\n", "xmax", "=", "tf", ".", "reshape", "(", "xmaxs", "[", "i", ",", "j", ",", "...", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "\n", "_", ",", "var_f_C2_C3", "=", "imposeC3", "(", "xdim", ",", "x", ",", "Xsamples", ",", "Ysamples", ",", "xmax", ",", "mean_fmax_C2", ",", "var_fmax_C2", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "invKmaxsam", ",", "norm", ",", "dtype", ")", "\n", "\n", "cond_ent_y", "=", "cond_ent_y", "+", "utils", ".", "evaluate_norm_entropy", "(", "tf", ".", "sqrt", "(", "var_f_C2_C3", "+", "sigma0", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "cond_ent_y", "=", "cond_ent_y", "/", "tf", ".", "constant", "(", "n_max", ",", "dtype", "=", "dtype", ")", "\n", "pes_vals", "[", "idx", "]", "=", "pes_vals", "[", "idx", "]", "+", "(", "ent_y", "-", "cond_ent_y", ")", "/", "tf", ".", "constant", "(", "n_hyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "", "return", "tf", ".", "squeeze", "(", "tf", ".", "stack", "(", "pes_vals", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.imposeC2": [[54, 77], ["tensorflow.squeeze", "tensorflow_probability.distributions.Normal", "utils.compute_mean_var_f", "tensorflow.sqrt", "tensorflow.exp", "tensorflow.clip_by_value", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.sqrt", "tfp.distributions.Normal.log_prob", "tfp.distributions.Normal.log_cdf", "tensorflow.sqrt"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["", "def", "imposeC2", "(", "xdim", ",", "n_max", ",", "Xsamples", ",", "Ysamples", ",", "xmaxs", ",", "max_observed_y", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "# C2: fmax is larger than past observations (> max_observed_y)", "\n", "# xmaxs: shape(n_max x xdim)", "\n", "# max_observed_y: scalar", "\n", "# l: shape(1,xdim)", "\n", "# sigma, sigma0: scalars", "\n", "\n", "    ", "max_observed_y", "=", "tf", ".", "squeeze", "(", "max_observed_y", ")", "\n", "\n", "norm", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "tf", ".", "constant", "(", "0.", ",", "dtype", "=", "dtype", ")", ",", "scale", "=", "tf", ".", "constant", "(", "1.", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "fmax_mean", ",", "fmax_var", "=", "utils", ".", "compute_mean_var_f", "(", "xmaxs", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ")", "\n", "\n", "tmp", "=", "tf", ".", "sqrt", "(", "tf", ".", "constant", "(", "1.0", ",", "dtype", "=", "dtype", ")", "+", "fmax_var", "/", "sigma0", ")", "\n", "\n", "z", "=", "(", "fmax_mean", "-", "max_observed_y", ")", "/", "tf", ".", "sqrt", "(", "sigma0", ")", "/", "tmp", "\n", "\n", "pdf_over_cdf_z", "=", "tf", ".", "exp", "(", "norm", ".", "log_prob", "(", "z", ")", "-", "norm", ".", "log_cdf", "(", "z", ")", ")", "\n", "\n", "mean_fmax_C2", "=", "fmax_mean", "+", "fmax_var", "*", "pdf_over_cdf_z", "/", "(", "tf", ".", "sqrt", "(", "sigma0", ")", "*", "tmp", ")", "\n", "var_fmax_C2", "=", "tf", ".", "clip_by_value", "(", "fmax_var", "-", "fmax_var", "*", "fmax_var", "*", "pdf_over_cdf_z", "/", "(", "sigma0", "+", "fmax_var", ")", "*", "(", "z", "+", "pdf_over_cdf_z", ")", ",", "clip_value_min", "=", "1e-9", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "\n", "return", "mean_fmax_C2", ",", "var_fmax_C2", ",", "fmax_mean", ",", "fmax_var", "\n", "# both are of shape (n_max,)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_pes.imposeC3": [[81, 139], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.concat", "utils.computeKnm", "tensorflow.reshape", "tensorflow.reshape", "utils.computeKmm", "tensorflow.reshape", "tensorflow.constant", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.exp", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "tensorflow.matmul", "tensorflow.concat", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.sqrt", "tensorflow.concat", "norm.log_prob", "norm.log_cdf", "tensorflow.sqrt", "tensorflow.matmul"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["", "def", "imposeC3", "(", "xdim", ",", "x", ",", "Xsamples", ",", "Ysamples", ",", "xmax", ",", "mean_fmax_C2", ",", "var_fmax_C2", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "invKmaxsam", ",", "norm", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "# C3: f(x) is smaller than f_max", "\n", "# xmax: shape(1,xdim)", "\n", "# mean_fmax_C2, var_fmax_C2: scalars", "\n", "# IMPORTANT: only use with a single x", "\n", "#     x.shape=(1,xdim)", "\n", "# invK: include noise", "\n", "# invKmaxsam = inv( K_{xmax Xsamples, xmax Xsamples} + sigma_n^2 * [0;I] )", "\n", "    ", "\"\"\"\n    TODO: if x is close to xmax (wrt the lengthscale): return the mean_fmax_C2, var_fmax_C2\n    \"\"\"", "\n", "\n", "xmax", "=", "tf", ".", "reshape", "(", "xmax", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", "\n", "\n", "mean_fmax_C2", "=", "tf", ".", "reshape", "(", "mean_fmax_C2", ",", "shape", "=", "(", "1", ",", "1", ")", ")", "\n", "var_fmax_C2", "=", "tf", ".", "reshape", "(", "var_fmax_C2", ",", "shape", "=", "(", "1", ",", "1", ")", ")", "\n", "\n", "# distribution of ", "\n", "# [f;fmax] given Xsamples, Ysamples, C2", "\n", "# let f2 = [fmax; f]", "\n", "#     x2 = [xmax; x]", "\n", "\n", "xmaxsam", "=", "tf", ".", "concat", "(", "[", "xmax", ",", "Xsamples", "]", ",", "axis", "=", "0", ")", "\n", "Kx_xmaxsam", "=", "utils", ".", "computeKnm", "(", "x", ",", "xmaxsam", ",", "l", ",", "sigma", ")", "\n", "tmp", "=", "Kx_xmaxsam", "@", "invKmaxsam", "\n", "# in the notes page 3:", "\n", "# tmp[0] = a", "\n", "# tmp[1:] = B", "\n", "\n", "a", "=", "tmp", "[", "0", ",", "0", "]", "\n", "\n", "mean_f_C2", "=", "tf", ".", "reshape", "(", "tmp", "@", "tf", ".", "concat", "(", "[", "mean_fmax_C2", ",", "Ysamples", "]", ",", "axis", "=", "0", ")", ",", "shape", "=", "(", "1", ",", "1", ")", ")", "\n", "mean_f2_C2", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "[", "mean_fmax_C2", ",", "mean_f_C2", "]", ",", "axis", "=", "0", ")", ",", "shape", "=", "(", "2", ",", "1", ")", ")", "\n", "\n", "Kx", "=", "utils", ".", "computeKmm", "(", "x", ",", "l", ",", "sigma", ")", "\n", "var_f_given_fmax", "=", "Kx", "-", "tf", ".", "matmul", "(", "tmp", ",", "Kx_xmaxsam", ",", "transpose_b", "=", "True", ")", "\n", "m00", "=", "var_fmax_C2", "\n", "m01", "=", "a", "*", "var_fmax_C2", "\n", "m11", "=", "var_f_given_fmax", "+", "a", "*", "a", "*", "var_fmax_C2", "\n", "var_f2_C2", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "[", "m00", ",", "m01", ",", "m01", ",", "m11", "]", ",", "axis", "=", "0", ")", ",", "shape", "=", "(", "2", ",", "2", ")", ")", "\n", "\n", "\n", "# let Z = fmax - f", "\n", "# distribution of Z given Xsamples, Ysamples, C2", "\n", "# mean_z, var_z", "\n", "c", "=", "tf", ".", "constant", "(", "[", "[", "1.0", "]", ",", "[", "-", "1.0", "]", "]", ",", "dtype", "=", "dtype", ")", "\n", "mean_z", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "c", ",", "mean_f2_C2", ",", "transpose_a", "=", "True", ")", ")", "\n", "var_z", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "c", ",", "var_f2_C2", "@", "c", ",", "transpose_a", "=", "True", ")", ")", "\n", "\n", "alpha", "=", "mean_z", "/", "tf", ".", "sqrt", "(", "var_z", ")", "\n", "beta", "=", "tf", ".", "exp", "(", "norm", ".", "log_prob", "(", "alpha", ")", "-", "norm", ".", "log_cdf", "(", "alpha", ")", ")", "\n", "\n", "mean_f_C2_C3", "=", "tf", ".", "squeeze", "(", "mean_fmax_C2", "-", "mean_z", "-", "tf", ".", "sqrt", "(", "var_z", ")", "*", "beta", ")", "\n", "var_f2_C2_C3", "=", "var_f2_C2", "-", "beta", "*", "(", "alpha", "+", "beta", ")", "*", "(", "(", "var_f2_C2", "@", "c", ")", "@", "tf", ".", "matmul", "(", "c", ",", "var_f2_C2", ",", "transpose_a", "=", "True", ")", ")", "/", "var_z", "\n", "var_f_C2_C3", "=", "tf", ".", "squeeze", "(", "var_f2_C2_C3", "[", "1", ",", "1", "]", ")", "\n", "\n", "return", "mean_f_C2_C3", ",", "var_f_C2_C3", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_pNK_test_obs": [[13, 58], ["range", "tensorflow.stack", "tensorflow.stack", "tensorflow.shape", "tensorflow.shape", "tensorflow.concat", "utils.computeKmm", "tensorflow.pad", "tensorflow.linalg.inv", "tensorflow.eye"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["def", "get_pNK_test_obs", "(", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "\n", "nhyp", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Returns \n        The covariance between (x_test, x_obs) vs. (x_test, x_obs)\n        The noise is only for x_obs part of K\n\n        pNKs (nhyp, ntest+nobs, ntest+nobs)\n        invpNKs (nhyp, ntest+nobs, ntest+nobs)\n\n        should build this covariance incrementally!\n            -> add noise to x_test only!\n    \"\"\"", "\n", "nobs", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "test_xs", ")", "[", "0", "]", "\n", "pNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "invpNKs", "=", "[", "None", "]", "*", "nhyp", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "\n", "        ", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "\n", "noiselessK", "=", "utils", ".", "computeKmm", "(", "Xtest_obs", ",", "ls", "[", "i", ",", "...", "]", ",", "sigmas", "[", "i", ",", "...", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "noisemat", "=", "tf", ".", "eye", "(", "nobs", ",", "dtype", "=", "dtype", ")", "*", "sigma0s", "[", "i", ",", "...", "]", "\n", "\n", "noisemat", "=", "tf", ".", "pad", "(", "noisemat", ",", "[", "[", "ntest", ",", "0", "]", ",", "[", "ntest", ",", "0", "]", "]", ",", "\"CONSTANT\"", ")", "\n", "\n", "pNK", "=", "noiselessK", "+", "noisemat", "\n", "\n", "pNKs", "[", "i", "]", "=", "pNK", "\n", "invpNKs", "[", "i", "]", "=", "tf", ".", "linalg", ".", "inv", "(", "pNK", ")", "\n", "\n", "", "pNKs", "=", "tf", ".", "stack", "(", "pNKs", ")", "\n", "invpNKs", "=", "tf", ".", "stack", "(", "invpNKs", ")", "\n", "# (nhyp, ntest + nobs, ntest + nobs)", "\n", "\n", "return", "pNKs", ",", "invpNKs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_batch_queried_f_stat_given_data_maxidx": [[60, 141], ["tensorflow.concat", "utils.computeKnm", "tensorflow.reshape", "utils.computeKmm", "tensorflow.tile", "tensorflow.tile", "tensorflow.transpose", "tensorflow.tile", "tensorflow.transpose", "tensorflow.tile", "tensorflow.tile", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.transpose"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKnm", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.computeKmm"], ["", "def", "get_batch_queried_f_stat_given_data_maxidx", "(", "\n", "xs", ",", "# (nx, batchsize, xdim)", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "xdim", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "    ", "nx", "=", "tf", ".", "shape", "(", "xs", ")", "[", "0", "]", "\n", "batchsize", "=", "tf", ".", "shape", "(", "xs", ")", "[", "1", "]", "\n", "nmax", "=", "tf", ".", "shape", "(", "post_cov_test_fs", ")", "[", "0", "]", "\n", "\n", "Xtest_obs", "=", "tf", ".", "concat", "(", "[", "test_xs", ",", "X", "]", ",", "axis", "=", "0", ")", "\n", "# (ntest+nobs,xdim)", "\n", "\n", "# K_{xs, Xtest_obs}", "\n", "k_x_xto", "=", "utils", ".", "computeKnm", "(", "\n", "tf", ".", "reshape", "(", "xs", ",", "shape", "=", "(", "-", "1", ",", "xdim", ")", ")", ",", "\n", "Xtest_obs", ",", "\n", "l", ",", "sigma", ",", "dtype", "=", "dtype", ")", "\n", "# (nx * batchsize, ntest + nobs)", "\n", "k_x_xto", "=", "tf", ".", "reshape", "(", "k_x_xto", ",", "shape", "=", "(", "nx", ",", "batchsize", ",", "-", "1", ")", ")", "\n", "# (nx, batchsize, ntest+nobs)", "\n", "\n", "k_x", "=", "utils", ".", "computeKmm", "(", "xs", ",", "l", ",", "sigma", ",", "nd", "=", "3", ",", "dtype", "=", "dtype", ")", "\n", "# (nx, batchsize, batchsize)", "\n", "\n", "invpNK", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "invpNK", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nx, ntest+nobs, ntest+nobs)", "\n", "\n", "Kq", "=", "k_x", "-", "(", "k_x_xto", "@", "invpNK", ")", "@", "tf", ".", "transpose", "(", "k_x_xto", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# (nx,batchsize,batchsize)", "\n", "\n", "\n", "M", "=", "k_x_xto", "@", "invpNK", "[", ":", ",", ":", ",", ":", "ntest", "]", "\n", "# (nx,batchsize,ntest)", "\n", "\n", "repY", "=", "tf", ".", "tile", "(", "tf", ".", "reshape", "(", "Y", ",", "shape", "=", "(", "1", ",", "nobs", ",", "1", ")", ")", ",", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nx, nobs, 1)", "\n", "b", "=", "k_x_xto", "@", "(", "invpNK", "[", ":", ",", ":", ",", "ntest", ":", "]", "@", "repY", ")", "\n", "# (nx,batchsize,1)", "\n", "\n", "post_mean_test_fs_T", "=", "tf", ".", "transpose", "(", "post_mean_test_fs", ")", "\n", "# ntest, nmax", "\n", "post_mean_test_fs_T", "=", "tf", ".", "tile", "(", "tf", ".", "reshape", "(", "post_mean_test_fs_T", ",", "shape", "=", "(", "1", ",", "ntest", ",", "nmax", ")", ")", ",", "multiples", "=", "(", "nx", ",", "1", ",", "1", ")", ")", "\n", "# nx, ntest, nmax", "\n", "\n", "query_mean", "=", "M", "@", "post_mean_test_fs_T", "+", "b", "\n", "# (nx,batchsize,nmax)", "\n", "\n", "query_mean", "=", "tf", ".", "transpose", "(", "query_mean", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "# (nmax,nx,batchsize)", "\n", "\n", "M", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "M", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# (nmax,nx,batchsize,ntest)", "\n", "Kq", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "Kq", ",", "axis", "=", "0", ")", ",", "\n", "multiples", "=", "(", "nmax", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# (nmax,nx,batchsize,batchsize)", "\n", "\n", "post_cov_test_fs", "=", "tf", ".", "expand_dims", "(", "post_cov_test_fs", ",", "axis", "=", "1", ")", "\n", "# (nmax, 1, ntest, ntest)", "\n", "post_cov_test_fs", "=", "tf", ".", "tile", "(", "post_cov_test_fs", ",", "\n", "multiples", "=", "(", "1", ",", "nx", ",", "1", ",", "1", ")", ")", "\n", "# (nmax, nx, ntest, ntest)", "\n", "\n", "query_var", "=", "Kq", "+", "M", "@", "post_cov_test_fs", "@", "tf", ".", "transpose", "(", "M", ",", "perm", "=", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", "\n", "# (nmax, nx, batchsize, batchsize)", "\n", "\n", "return", "query_mean", ",", "query_var", "\n", "# (nmax, nx, batchsize)", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp": [[145, 268], ["tensorflow.zeros", "range", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "evaluate_batch_mp.get_batch_queried_f_stat_given_data_maxidx", "tensorflow.expand_dims", "tensorflow.linalg.eigh", "tensorflow.clip_by_value", "tensorflow.while_loop", "tensorflow.where", "tensorflow.shape", "tensorflow.eye", "tensorflow.expand_dims", "tensorflow.matrix_diag", "tensorflow.constant", "tensorflow.sqrt", "tensorflow.constant", "tensorflow.zeros", "tensorflow.constant", "evaluate_batch_mp.mp_each_batch_y_sample"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.get_batch_queried_f_stat_given_data_maxidx", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp_each_batch_y_sample"], ["", "def", "mp", "(", "x", ",", "# nx, batchsize, xdim", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "X", ",", "Y", ",", "# (nobs,xdim), (nobs,1)", "\n", "\n", "xdim", ",", "nobs", ",", "nhyp", ",", "\n", "nysample", ",", "\n", "\n", "test_xs", ",", "# ntest, xdim (same for all hyp)", "\n", "max_probs_all", ",", "# nhyp, nmax", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs_all", ",", "# nhyp, nmax, ntest", "\n", "post_cov_test_fs_all", ",", "# nhyp, nmax, ntest, ntest", "\n", "\n", "invKobs_all", ",", "# nhyp, nobs, nobs", "\n", "\n", "# K_test_max needs to be precomputed", "\n", "# and its inverse", "\n", "# need naming convension for noisy", "\n", "# vs. noiseless K", "\n", "# and partial noisy-noiseless?", "\n", "invpNK_all", ",", "# nhyp, ntest+nobs, ntest+nobs", "\n", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "\n", "niteration", "=", "10", ",", "\n", "use_loop", "=", "True", ",", "\n", "parallel_iterations", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    ntest: # of test inputs\n    nmax: # of maximum candidate in test_xs\n    \"\"\"", "\n", "nx", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "ntest", "=", "tf", ".", "shape", "(", "post_mean_test_fs_all", ")", "[", "2", "]", "\n", "batchsize", "=", "tf", ".", "shape", "(", "x", ")", "[", "1", "]", "\n", "\n", "avg_mp", "=", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "nhyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "# sigma, sigma0: scalar", "\n", "# l: (1,xdim)", "\n", "\n", "max_probs", "=", "max_probs_all", "[", "i", ",", "...", "]", "# nmax,", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", "=", "post_mean_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest", "\n", "post_cov_test_fs", "=", "post_cov_test_fs_all", "[", "i", ",", "...", "]", "# nmax, ntest, ntest", "\n", "\n", "non_zero_prob_idxs", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "max_probs", ">", "0.", ")", ")", "\n", "nmax", "=", "tf", ".", "shape", "(", "non_zero_prob_idxs", ")", "[", "0", "]", "\n", "post_mean_test_fs", "=", "tf", ".", "gather", "(", "post_mean_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "post_cov_test_fs", "=", "tf", ".", "gather", "(", "post_cov_test_fs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "max_probs", "=", "tf", ".", "gather", "(", "max_probs", ",", "non_zero_prob_idxs", ",", "axis", "=", "0", ")", "\n", "\n", "invKobs", "=", "invKobs_all", "[", "i", ",", "...", "]", "# nobs, nobs", "\n", "invpNK", "=", "invpNK_all", "[", "i", ",", "...", "]", "# ntest+nobs,ntest+nobs", "\n", "\n", "queried_meanf_given_data_maxidx", ",", "queried_covf_given_data_maxidx", "=", "get_batch_queried_f_stat_given_data_maxidx", "(", "\n", "x", ",", "\n", "l", ",", "sigma", ",", "sigma0", ",", "\n", "\n", "ntest", ",", "nobs", ",", "xdim", ",", "\n", "\n", "X", ",", "# (nobs, xdim)", "\n", "Y", ",", "# (nobs,1)", "\n", "test_xs", ",", "# (ntest, xdim)", "\n", "\n", "invpNK", ",", "# (ntest + nobs, ntest + nobs)", "\n", "\n", "# statistics of f-values at test inputs", "\n", "# given different maximum candidates", "\n", "post_mean_test_fs", ",", "# nmax, ntest", "\n", "post_cov_test_fs", ",", "# nmax, ntest, ntest", "\n", "dtype", "=", "dtype", ")", "\n", "# (nmax, nx, batchsize)", "\n", "# (nmax, nx, batchsize, batchsize)", "\n", "\n", "noise_mat", "=", "tf", ".", "eye", "(", "batchsize", ",", "dtype", "=", "dtype", ")", "*", "sigma0", "\n", "noise_mat", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "noise_mat", ",", "0", ")", ",", "0", ")", "\n", "# (1,1,batchsize,batchsize)", "\n", "\n", "queried_covy_given_data_maxidx", "=", "queried_covf_given_data_maxidx", "+", "noise_mat", "\n", "# (nmax, nx, batchsize, batchsize)", "\n", "\n", "# transform_covy_given_data_maxidx", "\n", "eigvalues", ",", "eigvects", "=", "tf", ".", "linalg", ".", "eigh", "(", "queried_covy_given_data_maxidx", ")", "\n", "# eigvalues: (nmax, nx, batchsize)", "\n", "# eigvects: (nmax, nx, batchsize, batchsize)", "\n", "\n", "eigvalues", "=", "tf", ".", "clip_by_value", "(", "eigvalues", ",", "clip_value_min", "=", "0.", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "transform_covy_given_data_maxidx", "=", "eigvects", "@", "tf", ".", "matrix_diag", "(", "tf", ".", "sqrt", "(", "eigvalues", ")", ")", "\n", "# (nmax, nx, batchsize, batchsize)", "\n", "\n", "body", "=", "lambda", "j", ",", "sum_mp", ":", "[", "j", "+", "1", ",", "sum_mp", "+", "mp_each_batch_y_sample", "(", "\n", "nx", ",", "batchsize", ",", "nmax", ",", "nysample", ",", "\n", "\n", "max_probs", ",", "\n", "\n", "queried_meanf_given_data_maxidx", ",", "# (nmax, nx, batchsize)", "\n", "queried_covy_given_data_maxidx", ",", "# (nmax, nx, batchsize, batchsize)", "\n", "transform_covy_given_data_maxidx", ",", "# (nmax, nx, batchsize, batchsize)", "\n", "dtype", "\n", ")", "]", "\n", "\n", "_", ",", "sum_mp", "=", "tf", ".", "while_loop", "(", "\n", "lambda", "j", ",", "sum_mp", ":", "j", "<", "niteration", ",", "\n", "body", ",", "\n", "(", "tf", ".", "constant", "(", "0", ")", ",", "tf", ".", "zeros", "(", "shape", "=", "(", "nx", ",", ")", ",", "dtype", "=", "dtype", ")", ")", ",", "\n", "parallel_iterations", "=", "parallel_iterations", "\n", ")", "\n", "\n", "mp_val", "=", "sum_mp", "/", "tf", ".", "constant", "(", "niteration", ",", "dtype", "=", "dtype", ")", "\n", "\n", "avg_mp", "=", "avg_mp", "+", "mp_val", "/", "tf", ".", "constant", "(", "nhyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "avg_mp", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_batch_mp.mp_each_batch_y_sample": [[271, 332], ["tensorflow_probability.distributions.MultivariateNormalDiag", "tfp.distributions.MultivariateNormalDiag.sample", "tfp.distributions.MultivariateNormalDiag.log_prob", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.reduce_logsumexp", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.log", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.expand_dims"], "function", ["None"], ["", "def", "mp_each_batch_y_sample", "(", "\n", "nx", ",", "batchsize", ",", "\n", "nmax", ",", "\n", "nysample", ",", "# only used when stochastic == True", "\n", "\n", "max_probs", ",", "# nmax,", "\n", "\n", "queried_meany_given_data_maxidx", ",", "# (nmax, nx, batchsize)", "\n", "queried_covy_given_data_maxidx", ",", "# (nmax, nx, batchsize, batchsize)", "\n", "transform_covy_given_data_maxidx", ",", "# (nmax, nx, batchsize, batchsize)", "\n", "# using eigendecomposition", "\n", "# transform_covy_given_data_maxidx @ transform_covy_given_data_maxidx.T = queried_covy_given_data_maxidx", "\n", "dtype", "=", "tf", ".", "float32", "\n", ")", ":", "\n", "\n", "    ", "standard_normals", "=", "tfp", ".", "distributions", ".", "MultivariateNormalDiag", "(", "\n", "loc", "=", "tf", ".", "zeros_like", "(", "queried_meany_given_data_maxidx", ")", ",", "\n", "scale_diag", "=", "tf", ".", "ones_like", "(", "queried_meany_given_data_maxidx", ")", "\n", ")", "\n", "# (nmax, nx, batchsize)", "\n", "\n", "# sampling y given posterior | max_idx, data", "\n", "# shape (nysample, nmax, nx)", "\n", "standard_normal", "=", "standard_normals", ".", "sample", "(", "nysample", ")", "\n", "# (nysample, nmax, nx, batchsize)", "\n", "\n", "ysample", "=", "tf", ".", "reduce_mean", "(", "transform_covy_given_data_maxidx", "@", "tf", ".", "expand_dims", "(", "standard_normal", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "-", "1", ")", "+", "queried_meany_given_data_maxidx", "\n", "# (nysample, nmax, nx, batchsize)", "\n", "\n", "# (1) H[y|max_idx]", "\n", "log_prob", "=", "standard_normals", ".", "log_prob", "(", "ysample", ")", "\n", "# (nysample, nmax, nx)", "\n", "weighted_log_prob", "=", "log_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "\n", "cond_ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "# (2) H[y]", "\n", "marginal_ysample", "=", "tf", ".", "expand_dims", "(", "ysample", ",", "2", ")", "\n", "# (nysample, nmax, 1, nx, batchsize)", "\n", "\n", "# marginal_ysample = tf.tile(marginal_ysample, multiples=(1, 1, nmax, 1, 1))", "\n", "# # (nysample, nmax, nmax, nx, batchsize)", "\n", "\n", "# log_marginal_prob = normal_dists.log_prob(marginal_ysample)", "\n", "log_marginal_prob", "=", "tf", ".", "expand_dims", "(", "log_prob", ",", "2", ")", "\n", "# (nysample, nmax, 1, nx)", "\n", "log_marginal_prob", "=", "tf", ".", "tile", "(", "log_marginal_prob", ",", "multiples", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample, nmax, nmax, nx)", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "+", "tf", ".", "log", "(", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "1", ",", "nmax", ",", "1", ")", ")", ")", "\n", "log_marginal_prob", "=", "tf", ".", "reduce_logsumexp", "(", "weighted_log_marginal_prob", ",", "axis", "=", "2", ")", "\n", "# (nysample,nmax,nx)", "\n", "\n", "weighted_log_marginal_prob", "=", "log_marginal_prob", "*", "tf", ".", "reshape", "(", "max_probs", ",", "shape", "=", "(", "1", ",", "nmax", ",", "1", ")", ")", "\n", "# (nysample,nmax,nx)", "\n", "ent_y", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "weighted_log_marginal_prob", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "# (nx,)", "\n", "\n", "mp_val", "=", "tf", ".", "reshape", "(", "ent_y", "-", "cond_ent_y", ",", "shape", "=", "(", "nx", ",", ")", ")", "\n", "return", "mp_val", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ei.ei": [[18, 53], ["tensorflow_probability.distributions.Normal", "tensorflow.constant", "range", "tensorflow.reshape", "utils.compute_mean_var_f", "tensorflow.sqrt", "tensorflow.clip_by_value", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.squeeze", "tensorflow.abs", "tfp.distributions.Normal.cdf", "tfp.distributions.Normal.prob"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["def", "ei", "(", "x", ",", "xdim", ",", "n_hyp", ",", "Xsamples", ",", "Ysamples", ",", "ls", ",", "sigmas", ",", "sigma0s", ",", "invKs", ",", "fmax", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: n x xdim\n    Y: n x 1\n    ls: nh x xdim\n    sigmas: nh x 1 signal variances\n    sigma0s: nh x 1 noise variances\n        where nh is the number of hyperparameters\n    invKs: nh x n x n\n    fmax could be the maximum samples (observations) so far\n               or the maximum posterior mean\n    \"\"\"", "\n", "\n", "norm", "=", "tfp", ".", "distributions", ".", "Normal", "(", "loc", "=", "tf", ".", "constant", "(", "0.", ",", "dtype", "=", "dtype", ")", ",", "scale", "=", "tf", ".", "constant", "(", "1.", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "ei_val", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "invK", "=", "invKs", "[", "i", ",", "...", "]", "\n", "\n", "f_mean", ",", "f_var", "=", "utils", ".", "compute_mean_var_f", "(", "x", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", "=", "dtype", ")", "\n", "f_std", "=", "tf", ".", "sqrt", "(", "f_var", ")", "\n", "\n", "# consider the distribution of f, not of y", "\n", "diff", "=", "f_mean", "-", "fmax", "\n", "pos_diff", "=", "tf", ".", "clip_by_value", "(", "diff", ",", "clip_value_min", "=", "0.0", ",", "clip_value_max", "=", "np", ".", "infty", ")", "\n", "standard_diff", "=", "diff", "/", "f_std", "\n", "ei_val", "=", "ei_val", "+", "tf", ".", "squeeze", "(", "pos_diff", "+", "f_std", "*", "norm", ".", "prob", "(", "standard_diff", ")", "-", "tf", ".", "abs", "(", "diff", ")", "*", "norm", ".", "cdf", "(", "standard_diff", ")", ")", "\n", "\n", "", "ei_val", "=", "ei_val", "/", "tf", ".", "constant", "(", "n_hyp", ",", "dtype", "=", "dtype", ")", "\n", "return", "ei_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_ucb.ucb": [[17, 62], ["tensorflow.constant", "range", "tensorflow.log", "tensorflow.reshape", "utils.compute_mean_var_f", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.constant", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.square", "tensorflow.cast", "numpy.log"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f"], ["def", "ucb", "(", "x", ",", "\n", "xdim", ",", "n_hyp", ",", "\n", "Xsamples", ",", "Ysamples", ",", "\n", "ls", ",", "sigmas", ",", "sigma0s", ",", "\n", "invKs", ",", "\n", "iter", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "ntestpoint", "=", "1000", ")", ":", "\n", "    ", "\"\"\"\n    X: n x xdim\n    Y: n x 1\n    ls: nh x xdim\n    sigmas: nh x 1 signal variances\n    sigma0s: nh x 1 noise variances\n        where nh is the number of hyperparameters\n    invKs: nh x n x n\n    iter: the current iteration number\n    \"\"\"", "\n", "\n", "ucb_val", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "u", "=", "3.", "+", "tf", ".", "log", "(", "tf", ".", "square", "(", "tf", ".", "cast", "(", "iter", ",", "dtype", "=", "dtype", ")", ")", "*", "np", ".", "pi", "**", "2", "/", "6.", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "invK", "=", "invKs", "[", "i", ",", "...", "]", "\n", "\n", "f_mean", ",", "f_var", "=", "utils", ".", "compute_mean_var_f", "(", "x", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", "=", "dtype", ")", "\n", "f_std", "=", "tf", ".", "sqrt", "(", "f_var", ")", "\n", "\n", "noise_mean", "=", "0.0", "\n", "\n", "post_var", "=", "f_var", "+", "sigma0", "\n", "\n", "ucb", "=", "tf", ".", "sqrt", "(", "tf", ".", "cast", "(", "2.", "*", "(", "u", "+", "np", ".", "log", "(", "ntestpoint", ")", ")", ",", "\n", "dtype", "=", "dtype", ")", "\n", "*", "post_var", ")", "\n", "\n", "ucb_val", "=", "ucb_val", "+", "tf", ".", "squeeze", "(", "f_mean", "+", "ucb", ")", "\n", "\n", "", "ucb_val", "=", "ucb_val", "/", "tf", ".", "constant", "(", "n_hyp", ",", "dtype", "=", "dtype", ")", "\n", "return", "ucb_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.criteria.evaluate_mes.mes": [[18, 55], ["tensorflow.constant", "range", "tensorflow.reshape", "utils.compute_mean_var_f", "tensorflow.sqrt", "tensorflow.sqrt", "utils.evaluate_norm_entropy", "tensorflow.zeros", "range", "tensorflow.squeeze", "tensorflow.constant", "tensorflow.shape", "utils.evaluate_tnorm_entropy", "tensorflow.constant"], "function", ["home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.compute_mean_var_f", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_norm_entropy", "home.repos.pwc.inspect_result.ZhaoxuanWu_Trusted-Maximizers-Entropy-Search-BO.None.utils.evaluate_tnorm_entropy"], ["def", "mes", "(", "x", ",", "xdim", ",", "n_max", ",", "n_hyp", ",", "Xsamples", ",", "Ysamples", ",", "ls", ",", "sigmas", ",", "sigma0s", ",", "ymaxs", ",", "invKs", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "    ", "\"\"\"\n    X: n x xdim\n    Y: n x 1\n    ls: nh x xdim\n    sigmas: nh x 1 signal variances\n    sigma0s: nh x 1 noise variances\n        where nh is the number of hyperparameters\n    invKs: nh x n x n\n    ymaxs: nh x n_maxs\n    \"\"\"", "\n", "\n", "mes", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_hyp", ")", ":", "\n", "        ", "l", "=", "tf", ".", "reshape", "(", "ls", "[", "i", ",", ":", "]", ",", "shape", "=", "(", "1", ",", "xdim", ")", ")", "\n", "sigma", "=", "sigmas", "[", "i", "]", "\n", "sigma0", "=", "sigma0s", "[", "i", "]", "\n", "\n", "invK", "=", "invKs", "[", "i", ",", "...", "]", "\n", "\n", "f_mean", ",", "f_var", "=", "utils", ".", "compute_mean_var_f", "(", "x", ",", "Xsamples", ",", "Ysamples", ",", "l", ",", "sigma", ",", "sigma0", ",", "invK", ",", "dtype", "=", "dtype", ")", "\n", "f_std", "=", "tf", ".", "sqrt", "(", "f_var", ")", "\n", "\n", "noise_mean", "=", "0.0", "\n", "noise_std", "=", "tf", ".", "sqrt", "(", "sigma0", ")", "\n", "\n", "ent_f", "=", "utils", ".", "evaluate_norm_entropy", "(", "f_std", ",", "dtype", "=", "dtype", ")", "\n", "\n", "ent_tnorm_f", "=", "tf", ".", "zeros", "(", "shape", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", ",", "dtype", "=", "dtype", ")", "\n", "\n", "for", "j", "in", "range", "(", "n_max", ")", ":", "\n", "            ", "ent_tnorm_f", "=", "ent_tnorm_f", "+", "utils", ".", "evaluate_tnorm_entropy", "(", "f_mean", ",", "f_std", ",", "ymaxs", "[", "i", ",", "j", "]", ",", "dtype", "=", "dtype", ")", "/", "tf", ".", "constant", "(", "n_max", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "mes", "=", "mes", "+", "tf", ".", "squeeze", "(", "ent_f", "-", "ent_tnorm_f", ")", "/", "tf", ".", "constant", "(", "n_hyp", ",", "dtype", "=", "dtype", ")", "\n", "\n", "", "return", "mes", "\n", "\n"]]}