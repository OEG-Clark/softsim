{"home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.STFT": [[13, 32], ["numpy.arange", "int", "len", "int", "numpy.zeros", "range", "time.time", "abs", "print", "numpy.linspace", "numpy.floor", "len", "int", "numpy.arange", "scipy.fftpack.fft", "scipy.fftpack.fft", "scipy.fftpack.fft", "numpy.ceil", "float", "int", "int", "len", "int", "int", "numpy.mod", "numpy.linalg.norm", "time.time", "numpy.round", "float", "min", "len", "float", "min", "round", "len", "round"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.norm"], ["def", "STFT", "(", "x", ",", "fr", ",", "fs", ",", "Hop", ",", "h", ")", ":", "\n", "    ", "t", "=", "np", ".", "arange", "(", "0", ",", "np", ".", "ceil", "(", "len", "(", "x", ")", "/", "float", "(", "Hop", ")", ")", "*", "Hop", ",", "Hop", ")", "\n", "N", "=", "int", "(", "fs", "/", "float", "(", "fr", ")", ")", "\n", "window_size", "=", "len", "(", "h", ")", "\n", "f", "=", "fs", "*", "np", ".", "linspace", "(", "0", ",", "0.5", ",", "int", "(", "np", ".", "round", "(", "N", "/", "2", ")", ")", ",", "endpoint", "=", "True", ")", "\n", "Lh", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "window_size", "-", "1", ")", "/", "2", ")", ")", "\n", "tfr", "=", "np", ".", "zeros", "(", "(", "int", "(", "N", ")", ",", "len", "(", "t", ")", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "\n", "for", "icol", "in", "range", "(", "0", ",", "len", "(", "t", ")", ")", ":", "\n", "        ", "ti", "=", "int", "(", "t", "[", "icol", "]", ")", "\n", "tau", "=", "np", ".", "arange", "(", "int", "(", "-", "min", "(", "[", "round", "(", "N", "/", "2.0", ")", "-", "1", ",", "Lh", ",", "ti", "-", "1", "]", ")", ")", ",", "int", "(", "min", "(", "[", "round", "(", "N", "/", "2.0", ")", "-", "1", ",", "Lh", ",", "len", "(", "x", ")", "-", "ti", "]", ")", ")", ")", "\n", "indices", "=", "np", ".", "mod", "(", "N", "+", "tau", ",", "N", ")", "+", "1", "\n", "tfr", "[", "indices", "-", "1", ",", "icol", "]", "=", "x", "[", "ti", "+", "tau", "-", "1", "]", "*", "h", "[", "Lh", "+", "tau", "-", "1", "]", "/", "np", ".", "linalg", ".", "norm", "(", "h", "[", "Lh", "+", "tau", "-", "1", "]", ")", "\n", "", "start", "=", "time", ".", "time", "(", ")", "\n", "tfr", "=", "abs", "(", "scipy", ".", "fftpack", ".", "fft", "(", "tfr", ",", "n", "=", "N", ",", "axis", "=", "0", ")", ")", "\n", "print", "(", "'fft time:'", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "return", "tfr", ",", "f", ",", "t", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.nonlinear_func": [[34, 46], ["int", "numpy.power", "numpy.log"], "function", ["None"], ["", "def", "nonlinear_func", "(", "X", ",", "g", ",", "cutoff", ")", ":", "\n", "    ", "cutoff", "=", "int", "(", "cutoff", ")", "\n", "if", "g", "!=", "0", ":", "\n", "        ", "X", "[", "X", "<", "0", "]", "=", "0", "\n", "X", "[", ":", "cutoff", ",", ":", "]", "=", "0", "\n", "X", "[", "-", "cutoff", ":", ",", ":", "]", "=", "0", "\n", "X", "=", "np", ".", "power", "(", "X", ",", "g", ")", "\n", "", "else", ":", "\n", "        ", "X", "=", "np", ".", "log", "(", "X", ")", "\n", "X", "[", ":", "cutoff", ",", ":", "]", "=", "0", "\n", "X", "[", "-", "cutoff", ":", ",", ":", "]", "=", "0", "\n", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.Freq2LogFreqMapping": [[48, 79], ["int", "range", "len", "numpy.zeros", "range", "numpy.dot", "int", "int", "numpy.ceil", "pow", "central_freq.append", "len", "round", "range", "numpy.log2", "round", "float"], "function", ["None"], ["", "def", "Freq2LogFreqMapping", "(", "tfr", ",", "f", ",", "fr", ",", "fc", ",", "tc", ",", "NumPerOct", ")", ":", "\n", "    ", "StartFreq", "=", "fc", "\n", "StopFreq", "=", "1", "/", "tc", "\n", "Nest", "=", "int", "(", "np", ".", "ceil", "(", "np", ".", "log2", "(", "StopFreq", "/", "StartFreq", ")", ")", "*", "NumPerOct", ")", "\n", "central_freq", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "Nest", ")", ":", "\n", "        ", "CenFreq", "=", "StartFreq", "*", "pow", "(", "2", ",", "float", "(", "i", ")", "/", "NumPerOct", ")", "\n", "if", "CenFreq", "<", "StopFreq", ":", "\n", "            ", "central_freq", ".", "append", "(", "CenFreq", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "\n", "", "", "Nest", "=", "len", "(", "central_freq", ")", "\n", "freq_band_transformation", "=", "np", ".", "zeros", "(", "(", "Nest", "-", "1", ",", "len", "(", "f", ")", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "Nest", "-", "1", ")", ":", "\n", "        ", "l", "=", "int", "(", "round", "(", "central_freq", "[", "i", "-", "1", "]", "/", "fr", ")", ")", "\n", "r", "=", "int", "(", "round", "(", "central_freq", "[", "i", "+", "1", "]", "/", "fr", ")", "+", "1", ")", "\n", "# rounding1", "\n", "if", "l", ">=", "r", "-", "1", ":", "\n", "            ", "freq_band_transformation", "[", "i", ",", "l", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "for", "j", "in", "range", "(", "l", ",", "r", ")", ":", "\n", "                ", "if", "f", "[", "j", "]", ">", "central_freq", "[", "i", "-", "1", "]", "and", "f", "[", "j", "]", "<", "central_freq", "[", "i", "]", ":", "\n", "                    ", "freq_band_transformation", "[", "i", ",", "j", "]", "=", "(", "f", "[", "j", "]", "-", "central_freq", "[", "i", "-", "1", "]", ")", "/", "(", "\n", "central_freq", "[", "i", "]", "-", "central_freq", "[", "i", "-", "1", "]", ")", "\n", "", "elif", "f", "[", "j", "]", ">", "central_freq", "[", "i", "]", "and", "f", "[", "j", "]", "<", "central_freq", "[", "i", "+", "1", "]", ":", "\n", "                    ", "freq_band_transformation", "[", "i", ",", "j", "]", "=", "(", "central_freq", "[", "i", "+", "1", "]", "-", "f", "[", "j", "]", ")", "/", "(", "\n", "central_freq", "[", "i", "+", "1", "]", "-", "central_freq", "[", "i", "]", ")", "\n", "", "", "", "", "tfrL", "=", "np", ".", "dot", "(", "freq_band_transformation", ",", "tfr", ")", "\n", "return", "tfrL", ",", "central_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.Quef2LogFreqMapping": [[81, 105], ["int", "range", "len", "numpy.zeros", "range", "numpy.dot", "range", "numpy.ceil", "pow", "central_freq.append", "len", "int", "int", "numpy.log2", "round", "float", "round"], "function", ["None"], ["", "def", "Quef2LogFreqMapping", "(", "ceps", ",", "q", ",", "fs", ",", "fc", ",", "tc", ",", "NumPerOct", ")", ":", "\n", "    ", "StartFreq", "=", "fc", "\n", "StopFreq", "=", "1", "/", "tc", "\n", "Nest", "=", "int", "(", "np", ".", "ceil", "(", "np", ".", "log2", "(", "StopFreq", "/", "StartFreq", ")", ")", "*", "NumPerOct", ")", "\n", "central_freq", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "Nest", ")", ":", "\n", "        ", "CenFreq", "=", "StartFreq", "*", "pow", "(", "2", ",", "float", "(", "i", ")", "/", "NumPerOct", ")", "\n", "if", "CenFreq", "<", "StopFreq", ":", "\n", "            ", "central_freq", ".", "append", "(", "CenFreq", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "", "", "f", "=", "1", "/", "q", "\n", "Nest", "=", "len", "(", "central_freq", ")", "\n", "freq_band_transformation", "=", "np", ".", "zeros", "(", "(", "Nest", "-", "1", ",", "len", "(", "f", ")", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "Nest", "-", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "int", "(", "round", "(", "fs", "/", "central_freq", "[", "i", "+", "1", "]", ")", ")", ",", "int", "(", "round", "(", "fs", "/", "central_freq", "[", "i", "-", "1", "]", ")", "+", "1", ")", ")", ":", "\n", "            ", "if", "f", "[", "j", "]", ">", "central_freq", "[", "i", "-", "1", "]", "and", "f", "[", "j", "]", "<", "central_freq", "[", "i", "]", ":", "\n", "                ", "freq_band_transformation", "[", "i", ",", "j", "]", "=", "(", "f", "[", "j", "]", "-", "central_freq", "[", "i", "-", "1", "]", ")", "/", "(", "central_freq", "[", "i", "]", "-", "central_freq", "[", "i", "-", "1", "]", ")", "\n", "", "elif", "f", "[", "j", "]", ">", "central_freq", "[", "i", "]", "and", "f", "[", "j", "]", "<", "central_freq", "[", "i", "+", "1", "]", ":", "\n", "                ", "freq_band_transformation", "[", "i", ",", "j", "]", "=", "(", "central_freq", "[", "i", "+", "1", "]", "-", "f", "[", "j", "]", ")", "/", "(", "central_freq", "[", "i", "+", "1", "]", "-", "central_freq", "[", "i", "]", ")", "\n", "\n", "", "", "", "tfrL", "=", "np", ".", "dot", "(", "freq_band_transformation", ",", "ceps", ")", "\n", "return", "tfrL", ",", "central_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.CFP_filterbank": [[107, 145], ["numpy.size", "int", "feature_extraction.STFT", "numpy.power", "numpy.zeros", "int", "int", "feature_extraction.Freq2LogFreqMapping", "feature_extraction.Freq2LogFreqMapping", "feature_extraction.Quef2LogFreqMapping", "abs", "range", "numpy.arange", "float", "float", "round", "round", "numpy.remainder", "round", "feature_extraction.nonlinear_func", "round", "feature_extraction.nonlinear_func", "int", "int", "int", "numpy.real", "numpy.sqrt", "numpy.real", "numpy.sqrt", "round", "round", "round", "numpy.fft.fft", "numpy.fft.fft"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.STFT", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.Freq2LogFreqMapping", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.Freq2LogFreqMapping", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.Quef2LogFreqMapping", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.nonlinear_func", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.nonlinear_func"], ["", "def", "CFP_filterbank", "(", "x", ",", "fr", ",", "fs", ",", "Hop", ",", "h", ",", "fc", ",", "tc", ",", "g", ",", "NumPerOctave", ")", ":", "\n", "    ", "NumofLayer", "=", "np", ".", "size", "(", "g", ")", "\n", "N", "=", "int", "(", "fs", "/", "float", "(", "fr", ")", ")", "\n", "[", "tfr", ",", "f", ",", "t", ",", "N", "]", "=", "STFT", "(", "x", ",", "fr", ",", "fs", ",", "Hop", ",", "h", ")", "\n", "tfr", "=", "np", ".", "power", "(", "abs", "(", "tfr", ")", ",", "g", "[", "0", "]", ")", "\n", "tfr0", "=", "tfr", "# original STFT", "\n", "ceps", "=", "np", ".", "zeros", "(", "tfr", ".", "shape", ")", "\n", "\n", "if", "NumofLayer", ">=", "2", ":", "\n", "        ", "for", "gc", "in", "range", "(", "1", ",", "NumofLayer", ")", ":", "\n", "            ", "if", "np", ".", "remainder", "(", "gc", ",", "2", ")", "==", "1", ":", "\n", "                ", "tc_idx", "=", "round", "(", "fs", "*", "tc", ")", "\n", "ceps", "=", "np", ".", "real", "(", "np", ".", "fft", ".", "fft", "(", "tfr", ",", "axis", "=", "0", ")", ")", "/", "np", ".", "sqrt", "(", "N", ")", "\n", "ceps", "=", "nonlinear_func", "(", "ceps", ",", "g", "[", "gc", "]", ",", "tc_idx", ")", "\n", "", "else", ":", "\n", "                ", "fc_idx", "=", "round", "(", "fc", "/", "fr", ")", "\n", "tfr", "=", "np", ".", "real", "(", "np", ".", "fft", ".", "fft", "(", "ceps", ",", "axis", "=", "0", ")", ")", "/", "np", ".", "sqrt", "(", "N", ")", "\n", "tfr", "=", "nonlinear_func", "(", "tfr", ",", "g", "[", "gc", "]", ",", "fc_idx", ")", "\n", "\n", "", "", "", "tfr0", "=", "tfr0", "[", ":", "int", "(", "round", "(", "N", "/", "2", ")", ")", ",", ":", "]", "\n", "tfr", "=", "tfr", "[", ":", "int", "(", "round", "(", "N", "/", "2", ")", ")", ",", ":", "]", "\n", "ceps", "=", "ceps", "[", ":", "int", "(", "round", "(", "N", "/", "2", ")", ")", ",", ":", "]", "\n", "\n", "HighFreqIdx", "=", "int", "(", "round", "(", "(", "1", "/", "tc", ")", "/", "fr", ")", "+", "1", ")", "\n", "f", "=", "f", "[", ":", "HighFreqIdx", "]", "\n", "tfr0", "=", "tfr0", "[", ":", "HighFreqIdx", ",", ":", "]", "\n", "tfr", "=", "tfr", "[", ":", "HighFreqIdx", ",", ":", "]", "\n", "HighQuefIdx", "=", "int", "(", "round", "(", "fs", "/", "fc", ")", "+", "1", ")", "\n", "\n", "q", "=", "np", ".", "arange", "(", "HighQuefIdx", ")", "/", "float", "(", "fs", ")", "\n", "\n", "ceps", "=", "ceps", "[", ":", "HighQuefIdx", ",", ":", "]", "\n", "\n", "tfrL0", ",", "central_frequencies", "=", "Freq2LogFreqMapping", "(", "tfr0", ",", "f", ",", "fr", ",", "fc", ",", "tc", ",", "NumPerOctave", ")", "\n", "tfrLF", ",", "central_frequencies", "=", "Freq2LogFreqMapping", "(", "tfr", ",", "f", ",", "fr", ",", "fc", ",", "tc", ",", "NumPerOctave", ")", "\n", "tfrLQ", ",", "central_frequencies", "=", "Quef2LogFreqMapping", "(", "ceps", ",", "q", ",", "fs", ",", "fc", ",", "tc", ",", "NumPerOctave", ")", "\n", "\n", "return", "tfrL0", ",", "tfrLF", ",", "tfrLQ", ",", "f", ",", "q", ",", "t", ",", "central_frequencies", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.load_audio": [[147, 169], ["scipy.signal.resample_poly.astype", "AudioSegment.from_mp3", "tempfile.mkstemp", "AudioSegment.from_mp3.export", "soundfile.read", "os.remove", "soundfile.read", "numpy.mean", "scipy.signal.resample_poly", "scipy.signal.resample_poly", "scipy.signal.resample_poly", "len"], "function", ["None"], ["", "def", "load_audio", "(", "filepath", ",", "sr", "=", "None", ",", "mono", "=", "True", ",", "dtype", "=", "'float32'", ")", ":", "\n", "    ", "if", "'.mp3'", "in", "filepath", ":", "\n", "        ", "from", "pydub", "import", "AudioSegment", "\n", "import", "tempfile", "\n", "import", "os", "\n", "mp3", "=", "AudioSegment", ".", "from_mp3", "(", "filepath", ")", "\n", "_", ",", "path", "=", "tempfile", ".", "mkstemp", "(", ")", "\n", "mp3", ".", "export", "(", "path", ",", "format", "=", "\"wav\"", ")", "\n", "del", "mp3", "\n", "x", ",", "fs", "=", "sf", ".", "read", "(", "path", ")", "\n", "os", ".", "remove", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "x", ",", "fs", "=", "sf", ".", "read", "(", "filepath", ")", "\n", "\n", "", "if", "mono", "and", "len", "(", "x", ".", "shape", ")", ">", "1", ":", "\n", "        ", "x", "=", "np", ".", "mean", "(", "x", ",", "axis", "=", "1", ")", "\n", "", "if", "sr", ":", "\n", "        ", "x", "=", "scipy", ".", "signal", ".", "resample_poly", "(", "x", ",", "sr", ",", "fs", ")", "\n", "fs", "=", "sr", "\n", "", "x", "=", "x", ".", "astype", "(", "dtype", ")", "\n", "\n", "return", "x", ",", "fs", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.feature_extraction": [[171, 180], ["scipy.signal.blackmanharris", "scipy.signal.blackmanharris", "scipy.signal.blackmanharris", "numpy.array", "feature_extraction.CFP_filterbank"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.CFP_filterbank"], ["", "def", "feature_extraction", "(", "x", ",", "fs", ",", "Hop", "=", "512", ",", "Window", "=", "2049", ",", "StartFreq", "=", "80.0", ",", "StopFreq", "=", "1000.0", ",", "NumPerOct", "=", "48", ")", ":", "\n", "    ", "fr", "=", "2.0", "# frequency resolution", "\n", "h", "=", "scipy", ".", "signal", ".", "blackmanharris", "(", "Window", ")", "# window size", "\n", "g", "=", "np", ".", "array", "(", "[", "0.24", ",", "0.6", ",", "1", "]", ")", "# gamma value", "\n", "\n", "tfrL0", ",", "tfrLF", ",", "tfrLQ", ",", "f", ",", "q", ",", "t", ",", "CenFreq", "=", "CFP_filterbank", "(", "x", ",", "fr", ",", "fs", ",", "Hop", ",", "h", ",", "StartFreq", ",", "1", "/", "StopFreq", ",", "g", ",", "NumPerOct", ")", "\n", "Z", "=", "tfrLF", "*", "tfrLQ", "\n", "time", "=", "t", "/", "fs", "\n", "return", "Z", ",", "time", ",", "CenFreq", ",", "tfrL0", ",", "tfrLF", ",", "tfrLQ", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.midi2hz": [[182, 184], ["None"], "function", ["None"], ["", "def", "midi2hz", "(", "midi", ")", ":", "\n", "    ", "return", "2", "**", "(", "(", "midi", "-", "69", ")", "/", "12.0", ")", "*", "440", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.hz2midi": [[186, 188], ["numpy.log2"], "function", ["None"], ["", "def", "hz2midi", "(", "hz", ")", ":", "\n", "    ", "return", "69", "+", "12", "*", "np", ".", "log2", "(", "hz", "/", "440.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.get_CenFreq": [[190, 200], ["int", "range", "numpy.ceil", "pow", "central_freq.append", "numpy.log2", "float"], "function", ["None"], ["", "def", "get_CenFreq", "(", "StartFreq", "=", "80", ",", "StopFreq", "=", "1000", ",", "NumPerOct", "=", "48", ")", ":", "\n", "    ", "Nest", "=", "int", "(", "np", ".", "ceil", "(", "np", ".", "log2", "(", "StopFreq", "/", "StartFreq", ")", ")", "*", "NumPerOct", ")", "\n", "central_freq", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "Nest", ")", ":", "\n", "        ", "CenFreq", "=", "StartFreq", "*", "pow", "(", "2", ",", "float", "(", "i", ")", "/", "NumPerOct", ")", "\n", "if", "CenFreq", "<", "StopFreq", ":", "\n", "            ", "central_freq", ".", "append", "(", "CenFreq", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "", "", "return", "central_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.get_time": [[202, 204], ["numpy.arange"], "function", ["None"], ["", "def", "get_time", "(", "fs", ",", "Hop", ",", "end", ")", ":", "\n", "    ", "return", "np", ".", "arange", "(", "Hop", "/", "fs", ",", "end", ",", "Hop", "/", "fs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.lognorm": [[206, 208], ["numpy.log"], "function", ["None"], ["", "def", "lognorm", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "log", "(", "1", "+", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.norm": [[210, 212], ["numpy.min", "numpy.max", "numpy.min"], "function", ["None"], ["", "def", "norm", "(", "x", ")", ":", "\n", "    ", "return", "(", "x", "-", "np", ".", "min", "(", "x", ")", ")", "/", "(", "np", ".", "max", "(", "x", ")", "-", "np", ".", "min", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.cfp_process": [[214, 247], ["print", "feature_extraction.load_audio", "numpy.concatenate", "print", "print", "feature_extraction.feature_extraction", "feature_extraction.feature_extraction", "feature_extraction.norm", "feature_extraction.norm", "feature_extraction.norm", "feature_extraction.lognorm", "feature_extraction.lognorm", "feature_extraction.lognorm", "str", "pandas.read_csv", "numpy.concatenate", "numpy.loadtxt", "str"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.load_audio", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.feature_extraction", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.feature_extraction", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.norm", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.norm", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.norm", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.lognorm", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.lognorm", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.lognorm"], ["", "def", "cfp_process", "(", "fpath", ",", "ypath", "=", "None", ",", "csv", "=", "False", ",", "sr", "=", "None", ",", "hop", "=", "80", ",", "model_type", "=", "'vocal'", ")", ":", "\n", "    ", "print", "(", "'CFP process in '", "+", "str", "(", "fpath", ")", "+", "' ... (It may take some times)'", ")", "\n", "y", ",", "sr", "=", "load_audio", "(", "fpath", ",", "sr", "=", "sr", ")", "\n", "if", "'vocal'", "in", "model_type", ":", "\n", "# 1250", "\n", "# 32 2050", "\n", "        ", "Z", ",", "time", ",", "CenFreq", ",", "tfrL0", ",", "tfrLF", ",", "tfrLQ", "=", "feature_extraction", "(", "y", ",", "sr", ",", "Hop", "=", "hop", ",", "Window", "=", "768", ",", "StartFreq", "=", "32", ",", "\n", "StopFreq", "=", "2050", ",", "\n", "NumPerOct", "=", "60", ")", "\n", "", "if", "'melody'", "in", "model_type", ":", "\n", "        ", "Z", ",", "time", ",", "CenFreq", ",", "tfrL0", ",", "tfrLF", ",", "tfrLQ", "=", "feature_extraction", "(", "y", ",", "sr", ",", "Hop", "=", "hop", ",", "Window", "=", "768", ",", "StartFreq", "=", "20.0", ",", "\n", "StopFreq", "=", "2048.0", ",", "\n", "NumPerOct", "=", "60", ")", "\n", "", "tfrL0", "=", "norm", "(", "lognorm", "(", "tfrL0", ")", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "tfrLF", "=", "norm", "(", "lognorm", "(", "tfrLF", ")", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "tfrLQ", "=", "norm", "(", "lognorm", "(", "tfrLQ", ")", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "W", "=", "np", ".", "concatenate", "(", "(", "tfrL0", ",", "tfrLF", ",", "tfrLQ", ")", ",", "axis", "=", "0", ")", "\n", "print", "(", "'Done!'", ")", "\n", "print", "(", "'Data shape: '", "+", "str", "(", "W", ".", "shape", ")", ")", "\n", "if", "ypath", ":", "\n", "        ", "if", "csv", ":", "\n", "            ", "ycsv", "=", "pd", ".", "read_csv", "(", "ypath", ",", "names", "=", "[", "\"time\"", ",", "\"freq\"", "]", ")", "\n", "gt0", "=", "ycsv", "[", "'time'", "]", ".", "values", "\n", "gt0", "=", "gt0", "[", "1", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "gt1", "=", "ycsv", "[", "'freq'", "]", ".", "values", "\n", "gt1", "=", "gt1", "[", "1", ":", ",", "np", ".", "newaxis", "]", "\n", "gt", "=", "np", ".", "concatenate", "(", "(", "gt0", ",", "gt1", ")", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "gt", "=", "np", ".", "loadtxt", "(", "ypath", ")", "\n", "", "return", "W", ",", "gt", ",", "CenFreq", ",", "time", "\n", "", "else", ":", "\n", "        ", "return", "W", ",", "CenFreq", ",", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.main.train": [[31, 92], ["data_generator.TONetTrainDataset", "torch.utils.data.DataLoader", "torch.nn.BCELoss", "model.tonet.TONet", "pytorch_lightning.Trainer", "pl.Trainer.fit", "data_generator.TONetTestDataset", "torch.utils.data.DataLoader", "model.mcdnn.MCDNN", "model.mcdnn.MCDNN", "model.multi_dr.MLDRnet", "model.multi_dr.MLDRnet", "model.ftanet.FTAnet", "model.ftanet.FTAnet", "model.msnet.MSnet", "model.msnet.MSnet"], "function", ["None"], ["def", "train", "(", ")", ":", "\n", "    ", "train_dataset", "=", "TONetTrainDataset", "(", "\n", "data_list", "=", "config", ".", "train_file", ",", "\n", "config", "=", "config", "\n", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "\n", "dataset", "=", "train_dataset", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "config", ".", "n_workers", ",", "\n", "batch_size", "=", "config", ".", "batch_size", "\n", ")", "\n", "test_datasets", "=", "[", "\n", "TONetTestDataset", "(", "\n", "data_list", "=", "d", ",", "\n", "config", "=", "config", "\n", ")", "for", "d", "in", "config", ".", "test_file", "\n", "]", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "dataset", "=", "d", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "\n", "collate_fn", "=", "tonpy_fn", "\n", ")", "for", "d", "in", "test_datasets", "\n", "]", "\n", "loss_func", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "if", "config", ".", "model_type", "==", "\"MCDNN\"", ":", "\n", "        ", "me_model", "=", "MCDNN", "(", ")", "\n", "me_model_r", "=", "MCDNN", "(", ")", "\n", "", "elif", "config", ".", "model_type", "==", "\"MLDRNet\"", ":", "\n", "        ", "me_model", "=", "MLDRnet", "(", ")", "\n", "me_model_r", "=", "MLDRnet", "(", ")", "\n", "", "elif", "config", ".", "model_type", "==", "\"FTANet\"", ":", "\n", "        ", "me_model", "=", "FTAnet", "(", "freq_bin", "=", "config", ".", "freq_bin", ",", "time_segment", "=", "config", ".", "seg_frame", ")", "\n", "me_model_r", "=", "FTAnet", "(", "freq_bin", "=", "config", ".", "freq_bin", ",", "time_segment", "=", "config", ".", "seg_frame", ")", "\n", "", "else", ":", "# MSNet", "\n", "        ", "me_model", "=", "MSnet", "(", ")", "\n", "me_model_r", "=", "MSnet", "(", ")", "\n", "\n", "", "if", "config", ".", "ablation_mode", "==", "\"single\"", "or", "config", ".", "ablation_mode", "==", "\"spl\"", "or", "config", ".", "ablation_mode", "==", "\"spat\"", ":", "\n", "        ", "me_model_r", "=", "None", "\n", "", "model", "=", "TONet", "(", "\n", "l_model", "=", "me_model", ",", "\n", "r_model", "=", "me_model_r", ",", "\n", "config", "=", "config", ",", "\n", "loss_func", "=", "loss_func", ",", "\n", "mode", "=", "config", ".", "ablation_mode", "\n", ")", "\n", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "deterministic", "=", "True", ",", "\n", "gpus", "=", "1", ",", "\n", "checkpoint_callback", "=", "False", ",", "\n", "max_epochs", "=", "config", ".", "max_epoch", ",", "\n", "auto_lr_find", "=", "True", ",", "\n", "sync_batchnorm", "=", "True", ",", "\n", "# check_val_every_n_epoch = 1,", "\n", "val_check_interval", "=", "0.25", ",", "\n", "# num_sanity_val_steps=0", "\n", ")", "\n", "trainer", ".", "fit", "(", "model", ",", "train_dataloader", ",", "test_dataloaders", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.main.test": [[94, 147], ["torch.nn.BCELoss", "model.tonet.TONet", "pytorch_lightning.Trainer", "torch.load", "torch.load", "model.tonet.TONet.load_state_dict", "pl.Trainer.test", "data_generator.TONetTestDataset", "torch.utils.data.DataLoader", "model.mcdnn.MCDNN", "model.mcdnn.MCDNN", "model.multi_dr.MLDRnet", "model.multi_dr.MLDRnet", "model.ftanet.FTAnet", "model.ftanet.FTAnet", "model.msnet.MSnet", "model.msnet.MSnet"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.main.test"], ["", "def", "test", "(", ")", ":", "\n", "    ", "test_datasets", "=", "[", "\n", "TONetTestDataset", "(", "\n", "data_list", "=", "d", ",", "\n", "config", "=", "config", "\n", ")", "for", "d", "in", "config", ".", "test_file", "\n", "]", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "dataset", "=", "d", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "\n", "collate_fn", "=", "tonpy_fn", "\n", ")", "for", "d", "in", "test_datasets", "\n", "]", "\n", "loss_func", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "if", "config", ".", "model_type", "==", "\"MCDNN\"", ":", "\n", "        ", "me_model", "=", "MCDNN", "(", ")", "\n", "me_model_r", "=", "MCDNN", "(", ")", "\n", "", "elif", "config", ".", "model_type", "==", "\"MLDRNet\"", ":", "\n", "        ", "me_model", "=", "MLDRnet", "(", ")", "\n", "me_model_r", "=", "MLDRnet", "(", ")", "\n", "", "elif", "config", ".", "model_type", "==", "\"FTANet\"", ":", "\n", "        ", "me_model", "=", "FTAnet", "(", "freq_bin", "=", "config", ".", "freq_bin", ",", "time_segment", "=", "config", ".", "seg_frame", ")", "\n", "me_model_r", "=", "FTAnet", "(", "freq_bin", "=", "config", ".", "freq_bin", ",", "time_segment", "=", "config", ".", "seg_frame", ")", "\n", "", "else", ":", "# MSNet", "\n", "        ", "me_model", "=", "MSnet", "(", ")", "\n", "me_model_r", "=", "MSnet", "(", ")", "\n", "\n", "", "if", "config", ".", "ablation_mode", "==", "\"single\"", "or", "config", ".", "ablation_mode", "==", "\"spl\"", "or", "config", ".", "ablation_mode", "==", "\"spat\"", ":", "\n", "        ", "me_model_r", "=", "None", "\n", "", "model", "=", "TONet", "(", "\n", "l_model", "=", "me_model", ",", "\n", "r_model", "=", "me_model_r", ",", "\n", "config", "=", "config", ",", "\n", "loss_func", "=", "loss_func", ",", "\n", "mode", "=", "config", ".", "ablation_mode", "\n", ")", "\n", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "deterministic", "=", "True", ",", "\n", "gpus", "=", "1", ",", "\n", "checkpoint_callback", "=", "False", ",", "\n", "max_epochs", "=", "config", ".", "max_epoch", ",", "\n", "auto_lr_find", "=", "True", ",", "\n", "sync_batchnorm", "=", "True", ",", "\n", "# check_val_every_n_epoch = 1,", "\n", "val_check_interval", "=", "0.25", ",", "\n", ")", "\n", "# load the checkpoint", "\n", "ckpt", "=", "torch", ".", "load", "(", "config", ".", "resume_checkpoint", ",", "map_location", "=", "\"cpu\"", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt", ")", "\n", "trainer", ".", "test", "(", "model", ",", "test_dataloaders", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.index2centf": [[15, 27], ["numpy.zeros", "range", "len", "len", "range", "len"], "function", ["None"], ["def", "index2centf", "(", "seq", ",", "centfreq", ")", ":", "\n", "    ", "centfreq", "[", "0", "]", "=", "0", "\n", "re", "=", "np", ".", "zeros", "(", "len", "(", "seq", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "seq", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "centfreq", ")", ")", ":", "\n", "            ", "if", "seq", "[", "i", "]", "<", "0.1", ":", "\n", "                ", "re", "[", "i", "]", "=", "0", "\n", "break", "\n", "", "elif", "centfreq", "[", "j", "]", ">", "seq", "[", "i", "]", ":", "\n", "                ", "re", "[", "i", "]", "=", "j", "\n", "break", "\n", "", "", "", "return", "re", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.freq2octave": [[58, 63], ["round", "int", "numpy.log2"], "function", ["None"], ["", "def", "freq2octave", "(", "freq", ")", ":", "\n", "    ", "if", "freq", "<", "1.0", "or", "freq", ">", "1990", ":", "\n", "        ", "return", "0", "\n", "", "pitch", "=", "round", "(", "69", "+", "12", "*", "np", ".", "log2", "(", "freq", "/", "440", ")", ")", "\n", "return", "int", "(", "pitch", "//", "12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.freq2tone": [[35, 40], ["int", "numpy.round", "numpy.log2"], "function", ["None"], ["", "", "def", "freq2tone", "(", "freq", ")", ":", "\n", "    ", "if", "freq", "<", "1.0", "or", "freq", ">", "2050", ":", "\n", "        ", "return", "config", ".", "tone_class", "\n", "", "else", ":", "\n", "        ", "return", "int", "(", "np", ".", "round", "(", "69", "+", "12", "*", "np", ".", "log2", "(", "freq", "/", "440", ")", ")", "%", "12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.tofreq": [[41, 46], ["None"], "function", ["None"], ["", "", "def", "tofreq", "(", "tone", ",", "octave", ")", ":", "\n", "    ", "if", "tone", ">=", "config", ".", "tone_class", "or", "octave", ">=", "config", ".", "octave_class", "or", "octave", "<", "2", ":", "\n", "        ", "return", "0.0", "\n", "", "else", ":", "\n", "        ", "return", "440", "*", "2", "**", "(", "(", "12", "*", "octave", "+", "tone", "*", "12", "/", "config", ".", "tone_class", "-", "69", ")", "/", "12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.pos_weight": [[48, 57], ["float", "float", "numpy.zeros", "print", "torch.from_numpy().float", "len", "torch.from_numpy"], "function", ["None"], ["", "", "def", "pos_weight", "(", "data", ",", "freq_bins", ")", ":", "\n", "    ", "frames", "=", "data", ".", "shape", "[", "-", "1", "]", "\n", "non_vocal", "=", "float", "(", "len", "(", "data", "[", "data", "==", "0", "]", ")", ")", "\n", "vocal", "=", "float", "(", "data", ".", "size", "-", "non_vocal", ")", "\n", "z", "=", "np", ".", "zeros", "(", "(", "freq_bins", ",", "frames", ")", ")", "\n", "z", "[", "1", ":", ",", ":", "]", "+=", "(", "non_vocal", "/", "vocal", ")", "\n", "z", "[", "0", ",", ":", "]", "+=", "vocal", "/", "non_vocal", "\n", "print", "(", "non_vocal", ",", "vocal", ")", "\n", "return", "torch", ".", "from_numpy", "(", "z", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.compute_roa": [[64, 70], ["numpy.array", "numpy.array", "numpy.sum", "len", "util.freq2octave", "util.freq2octave"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.util.freq2octave", "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.freq2octave"], ["", "def", "compute_roa", "(", "pred", ",", "gd", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "gd", ">", "0.1", "]", "\n", "gd", "=", "gd", "[", "gd", ">", "0.1", "]", "\n", "pred", "=", "np", ".", "array", "(", "[", "freq2octave", "(", "d", ")", "for", "d", "in", "pred", "]", ")", "\n", "gd", "=", "np", ".", "array", "(", "[", "freq2octave", "(", "d", ")", "for", "d", "in", "gd", "]", ")", "\n", "return", "np", ".", "sum", "(", "pred", "==", "gd", ")", "/", "len", "(", "pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.melody_eval": [[72, 88], ["mir_eval.melody.evaluate", "numpy.array", "numpy.arange", "numpy.arange", "util.compute_roa", "len", "len"], "function", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.util.compute_roa"], ["", "def", "melody_eval", "(", "pred", ",", "gd", ")", ":", "\n", "    ", "ref_time", "=", "np", ".", "arange", "(", "len", "(", "gd", ")", ")", "*", "0.01", "\n", "ref_freq", "=", "gd", "\n", "\n", "est_time", "=", "np", ".", "arange", "(", "len", "(", "pred", ")", ")", "*", "0.01", "\n", "est_freq", "=", "pred", "\n", "\n", "output_eval", "=", "mir_eval", ".", "melody", ".", "evaluate", "(", "ref_time", ",", "ref_freq", ",", "est_time", ",", "est_freq", ")", "\n", "VR", "=", "output_eval", "[", "'Voicing Recall'", "]", "*", "100.0", "\n", "VFA", "=", "output_eval", "[", "'Voicing False Alarm'", "]", "*", "100.0", "\n", "RPA", "=", "output_eval", "[", "'Raw Pitch Accuracy'", "]", "*", "100.0", "\n", "RCA", "=", "output_eval", "[", "'Raw Chroma Accuracy'", "]", "*", "100.0", "\n", "ROA", "=", "compute_roa", "(", "est_freq", ",", "ref_freq", ")", "*", "100.0", "\n", "OA", "=", "output_eval", "[", "'Overall Accuracy'", "]", "*", "100.0", "\n", "eval_arr", "=", "np", ".", "array", "(", "[", "VR", ",", "VFA", ",", "RPA", ",", "RCA", ",", "ROA", ",", "OA", "]", ")", "\n", "return", "eval_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.tonpy_fn": [[89, 95], ["batch[].keys", "numpy.array"], "function", ["None"], ["", "def", "tonpy_fn", "(", "batch", ")", ":", "\n", "    ", "dict_key", "=", "batch", "[", "0", "]", ".", "keys", "(", ")", "\n", "output_batch", "=", "{", "}", "\n", "for", "dk", "in", "dict_key", ":", "\n", "        ", "output_batch", "[", "dk", "]", "=", "np", ".", "array", "(", "[", "d", "[", "dk", "]", "for", "d", "in", "batch", "]", ")", "\n", "", "return", "output_batch", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTrainDataset.__init__": [[30, 86], ["os.path.join", "os.path.join", "numpy.array", "print", "print", "enumerate", "numpy.array", "numpy.array", "numpy.array", "print", "feature_extraction.get_CenFreq", "open", "f.readlines", "len", "tqdm.tqdm.tqdm", "os.path.join", "os.path.join", "numpy.load", "numpy.loadtxt", "range", "util.index2centf", "data_generator.reorganize", "data_generator.TONetTrainDataset.data_tcfp.append", "data_generator.TONetTrainDataset.data_cfp.append", "data_generator.TONetTrainDataset.data_gd.append", "d.split", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.get_CenFreq", "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.index2centf", "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.reorganize"], ["    ", "def", "__init__", "(", "self", ",", "data_list", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "cfp_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "data_path", ",", "config", ".", "cfp_dir", ")", "\n", "self", ".", "f0_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "data_path", ",", "\"f0ref\"", ")", "\n", "self", ".", "data_list", "=", "data_list", "\n", "self", ".", "cent_f", "=", "np", ".", "array", "(", "get_CenFreq", "(", "config", ".", "startfreq", ",", "config", ".", "stopfreq", ",", "config", ".", "octave_res", ")", ")", "\n", "# init data array", "\n", "self", ".", "data_cfp", "=", "[", "]", "\n", "self", ".", "data_gd", "=", "[", "]", "\n", "self", ".", "data_tcfp", "=", "[", "]", "\n", "seg_frame", "=", "config", ".", "seg_frame", "\n", "shift_frame", "=", "config", ".", "shift_frame", "\n", "print", "(", "\"Data List:\"", ",", "data_list", ")", "\n", "with", "open", "(", "data_list", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "data_txt", "=", "f", ".", "readlines", "(", ")", "\n", "data_txt", "=", "[", "d", ".", "split", "(", "\".\"", ")", "[", "0", "]", "for", "d", "in", "data_txt", "]", "\n", "# data_txt = data_txt[:100]", "\n", "", "print", "(", "\"Song Size:\"", ",", "len", "(", "data_txt", ")", ")", "\n", "# process cfp", "\n", "for", "i", ",", "filename", "in", "enumerate", "(", "tqdm", "(", "data_txt", ")", ")", ":", "\n", "# file set", "\n", "            ", "cfp_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cfp_dir", ",", "filename", "+", "\".npy\"", ")", "\n", "ref_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "f0_dir", ",", "filename", "+", "\".txt\"", ")", "\n", "# get raw cfp and freq", "\n", "temp_cfp", "=", "np", ".", "load", "(", "cfp_file", ",", "allow_pickle", "=", "True", ")", "\n", "# temp_cfp[0, :, :] = temp_cfp[1, :, :] * temp_cfp[2, :, :]", "\n", "temp_freq", "=", "np", ".", "loadtxt", "(", "ref_file", ")", "\n", "temp_freq", "=", "temp_freq", "[", ":", ",", "1", "]", "\n", "# check length", "\n", "if", "temp_freq", ".", "shape", "[", "0", "]", ">", "temp_cfp", ".", "shape", "[", "2", "]", ":", "\n", "                ", "temp_freq", "=", "temp_freq", "[", ":", "temp_cfp", ".", "shape", "[", "2", "]", "]", "\n", "", "else", ":", "\n", "                ", "temp_cfp", "=", "temp_cfp", "[", ":", ",", ":", ",", ":", "temp_freq", ".", "shape", "[", "0", "]", "]", "\n", "# build data", "\n", "", "for", "j", "in", "range", "(", "0", ",", "temp_cfp", ".", "shape", "[", "2", "]", ",", "shift_frame", ")", ":", "\n", "                ", "bgnt", "=", "j", "\n", "endt", "=", "j", "+", "seg_frame", "\n", "temp_x", "=", "temp_cfp", "[", ":", ",", ":", ",", "bgnt", ":", "endt", "]", "\n", "temp_gd", "=", "index2centf", "(", "temp_freq", "[", "bgnt", ":", "endt", "]", ",", "self", ".", "cent_f", ")", "\n", "\n", "if", "temp_x", ".", "shape", "[", "2", "]", "<", "seg_frame", ":", "\n", "                    ", "rl", "=", "temp_x", ".", "shape", "[", "2", "]", "\n", "pad_x", "=", "np", ".", "zeros", "(", "(", "temp_x", ".", "shape", "[", "0", "]", ",", "temp_x", ".", "shape", "[", "1", "]", ",", "seg_frame", ")", ")", "\n", "pad_gd", "=", "np", ".", "zeros", "(", "(", "seg_frame", ")", ")", "\n", "pad_gd", "[", ":", "rl", "]", "=", "temp_gd", "\n", "pad_x", "[", ":", ",", ":", ",", ":", "rl", "]", "=", "temp_x", "\n", "temp_x", "=", "pad_x", "\n", "temp_gd", "=", "pad_gd", "\n", "", "temp_tx", "=", "reorganize", "(", "temp_x", "[", ":", "]", ",", "config", ".", "octave_res", ")", "\n", "self", ".", "data_tcfp", ".", "append", "(", "temp_tx", ")", "\n", "self", ".", "data_cfp", ".", "append", "(", "temp_x", ")", "\n", "self", ".", "data_gd", ".", "append", "(", "temp_gd", ")", "\n", "", "", "self", ".", "data_cfp", "=", "np", ".", "array", "(", "self", ".", "data_cfp", ")", "\n", "self", ".", "data_tcfp", "=", "np", ".", "array", "(", "self", ".", "data_tcfp", ")", "\n", "self", ".", "data_gd", "=", "np", ".", "array", "(", "self", ".", "data_gd", ")", "\n", "print", "(", "\"Total Datasize:\"", ",", "self", ".", "data_cfp", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTrainDataset.__len__": [[87, 89], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_cfp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTrainDataset.__getitem__": [[90, 97], ["data_generator.TONetTrainDataset.data_cfp[].astype", "data_generator.TONetTrainDataset.data_tcfp[].astype"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "temp_dict", "=", "{", "\n", "\"cfp\"", ":", "self", ".", "data_cfp", "[", "index", "]", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "\"tcfp\"", ":", "self", ".", "data_tcfp", "[", "index", "]", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "\"gd\"", ":", "self", ".", "data_gd", "[", "index", "]", "\n", "}", "\n", "return", "temp_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTestDataset.__init__": [[100, 161], ["os.path.join", "os.path.join", "numpy.array", "print", "print", "enumerate", "feature_extraction.get_CenFreq", "open", "f.readlines", "len", "tqdm.tqdm.tqdm", "os.path.join", "os.path.join", "numpy.load", "numpy.loadtxt", "data_generator.TONetTestDataset.data_len.append", "range", "numpy.array", "numpy.array", "numpy.array", "data_generator.TONetTestDataset.data_tcfp.append", "data_generator.TONetTestDataset.data_cfp.append", "data_generator.TONetTestDataset.data_gd.append", "len", "data_generator.reorganize", "numpy.array.append", "numpy.array.append", "numpy.array.append", "d.split", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.get_CenFreq", "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.reorganize"], ["    ", "def", "__init__", "(", "self", ",", "data_list", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "cfp_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "data_path", ",", "config", ".", "cfp_dir", ")", "\n", "self", ".", "f0_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "data_path", ",", "\"f0ref\"", ")", "\n", "self", ".", "data_list", "=", "data_list", "\n", "self", ".", "cent_f", "=", "np", ".", "array", "(", "get_CenFreq", "(", "config", ".", "startfreq", ",", "config", ".", "stopfreq", ",", "config", ".", "octave_res", ")", ")", "\n", "# init data array", "\n", "self", ".", "data_cfp", "=", "[", "]", "\n", "self", ".", "data_gd", "=", "[", "]", "\n", "self", ".", "data_len", "=", "[", "]", "\n", "self", ".", "data_tcfp", "=", "[", "]", "\n", "seg_frame", "=", "config", ".", "seg_frame", "\n", "shift_frame", "=", "config", ".", "shift_frame", "\n", "print", "(", "\"Data List:\"", ",", "data_list", ")", "\n", "with", "open", "(", "data_list", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "data_txt", "=", "f", ".", "readlines", "(", ")", "\n", "data_txt", "=", "[", "d", ".", "split", "(", "\".\"", ")", "[", "0", "]", "for", "d", "in", "data_txt", "]", "\n", "", "print", "(", "\"Song Size:\"", ",", "len", "(", "data_txt", ")", ")", "\n", "# process cfp", "\n", "for", "i", ",", "filename", "in", "enumerate", "(", "tqdm", "(", "data_txt", ")", ")", ":", "\n", "            ", "group_cfp", "=", "[", "]", "\n", "group_gd", "=", "[", "]", "\n", "group_tcfp", "=", "[", "]", "\n", "# file set", "\n", "cfp_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cfp_dir", ",", "filename", "+", "\".npy\"", ")", "\n", "ref_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "f0_dir", ",", "filename", "+", "\".txt\"", ")", "\n", "# get raw cfp and freq", "\n", "temp_cfp", "=", "np", ".", "load", "(", "cfp_file", ",", "allow_pickle", "=", "True", ")", "\n", "# temp_cfp[0, :, :] = temp_cfp[1, :, :] * temp_cfp[2, :, :]", "\n", "temp_freq", "=", "np", ".", "loadtxt", "(", "ref_file", ")", "\n", "temp_freq", "=", "temp_freq", "[", ":", ",", "1", "]", "\n", "self", ".", "data_len", ".", "append", "(", "len", "(", "temp_freq", ")", ")", "\n", "# check length", "\n", "if", "temp_freq", ".", "shape", "[", "0", "]", ">", "temp_cfp", ".", "shape", "[", "2", "]", ":", "\n", "                ", "temp_freq", "=", "temp_freq", "[", ":", "temp_cfp", ".", "shape", "[", "2", "]", "]", "\n", "", "else", ":", "\n", "                ", "temp_cfp", "=", "temp_cfp", "[", ":", ",", ":", ",", ":", "temp_freq", ".", "shape", "[", "0", "]", "]", "\n", "# build data", "\n", "", "for", "j", "in", "range", "(", "0", ",", "temp_cfp", ".", "shape", "[", "2", "]", ",", "shift_frame", ")", ":", "\n", "                ", "bgnt", "=", "j", "\n", "endt", "=", "j", "+", "seg_frame", "\n", "temp_x", "=", "temp_cfp", "[", ":", ",", ":", ",", "bgnt", ":", "endt", "]", "\n", "temp_gd", "=", "temp_freq", "[", "bgnt", ":", "endt", "]", "\n", "if", "temp_x", ".", "shape", "[", "2", "]", "<", "seg_frame", ":", "\n", "                    ", "rl", "=", "temp_x", ".", "shape", "[", "2", "]", "\n", "pad_x", "=", "np", ".", "zeros", "(", "(", "temp_x", ".", "shape", "[", "0", "]", ",", "temp_x", ".", "shape", "[", "1", "]", ",", "seg_frame", ")", ")", "\n", "pad_gd", "=", "np", ".", "zeros", "(", "seg_frame", ")", "\n", "pad_gd", "[", ":", "rl", "]", "=", "temp_gd", "\n", "pad_x", "[", ":", ",", ":", ",", ":", "rl", "]", "=", "temp_x", "\n", "temp_x", "=", "pad_x", "\n", "temp_gd", "=", "pad_gd", "\n", "", "temp_tx", "=", "reorganize", "(", "temp_x", "[", ":", "]", ",", "config", ".", "octave_res", ")", "\n", "group_tcfp", ".", "append", "(", "temp_tx", ")", "\n", "group_cfp", ".", "append", "(", "temp_x", ")", "\n", "group_gd", ".", "append", "(", "temp_gd", ")", "\n", "", "group_tcfp", "=", "np", ".", "array", "(", "group_tcfp", ")", "\n", "group_cfp", "=", "np", ".", "array", "(", "group_cfp", ")", "\n", "group_gd", "=", "np", ".", "array", "(", "group_gd", ")", "\n", "self", ".", "data_tcfp", ".", "append", "(", "group_tcfp", ")", "\n", "self", ".", "data_cfp", ".", "append", "(", "group_cfp", ")", "\n", "self", ".", "data_gd", ".", "append", "(", "group_gd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTestDataset.__len__": [[162, 164], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_cfp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.TONetTestDataset.__getitem__": [[165, 173], ["data_generator.TONetTestDataset.data_cfp[].astype", "data_generator.TONetTestDataset.data_tcfp[].astype"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "temp_dict", "=", "{", "\n", "\"cfp\"", ":", "self", ".", "data_cfp", "[", "index", "]", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "\"tcfp\"", ":", "self", ".", "data_tcfp", "[", "index", "]", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "\"gd\"", ":", "self", ".", "data_gd", "[", "index", "]", ",", "\n", "\"length\"", ":", "self", ".", "data_len", "[", "index", "]", "\n", "}", "\n", "return", "temp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.None.data_generator.reorganize": [[18, 27], ["range", "numpy.array", "nx.transpose.transpose", "range", "range"], "function", ["None"], ["def", "reorganize", "(", "x", ",", "octave_res", ")", ":", "\n", "    ", "n_order", "=", "[", "]", "\n", "max_bin", "=", "x", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "octave_res", ")", ":", "\n", "        ", "n_order", "+=", "[", "j", "for", "j", "in", "range", "(", "i", ",", "max_bin", ",", "octave_res", ")", "]", "\n", "", "nx", "=", "[", "x", "[", ":", ",", "n_order", "[", "i", "]", ",", ":", "]", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "1", "]", ")", "]", "\n", "nx", "=", "np", ".", "array", "(", "nx", ")", "\n", "nx", "=", "nx", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "return", "nx", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.__init__": [[29, 147], ["pytorch_lightning.LightningModule.__init__", "numpy.array", "numpy.zeros", "feature_extraction.get_CenFreq", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "attention_layer.PositionalEncoding", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "attention_layer.PositionalEncoding", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.SELU", "torch.nn.SELU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.SELU", "torch.nn.SELU", "attention_layer.CombineLayer", "attention_layer.CombineLayer", "range", "range"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__", "home.repos.pwc.inspect_result.retrocirce_tonet.None.feature_extraction.get_CenFreq"], ["def", "__init__", "(", "self", ",", "l_model", ",", "r_model", ",", "config", ",", "loss_func", ",", "mode", "=", "\"single\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "# l_model for original-CFP", "\n", "self", ".", "l_model", "=", "l_model", "\n", "# r_model for Tone-CFP", "\n", "self", ".", "r_model", "=", "r_model", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "centf", "=", "np", ".", "array", "(", "get_CenFreq", "(", "config", ".", "startfreq", ",", "config", ".", "stopfreq", ",", "config", ".", "octave_res", ")", ")", "\n", "self", ".", "centf", "[", "0", "]", "=", "0", "\n", "self", ".", "loss_func", "=", "loss_func", "\n", "self", ".", "max_metric", "=", "np", ".", "zeros", "(", "(", "3", ",", "6", ")", ")", "\n", "if", "self", ".", "mode", "==", "\"all\"", "or", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "assert", "r_model", "is", "not", "None", ",", "\"Enabling TONet needs two-branch models!\"", "\n", "\n", "\n", "", "self", ".", "gru_dim", "=", "512", "\n", "self", ".", "attn_dim", "=", "2048", "\n", "# define hyperparameter", "\n", "if", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "self", ".", "sp_dim", "=", "self", ".", "config", ".", "freq_bin", "*", "2", "\n", "self", ".", "linear_dim", "=", "self", ".", "config", ".", "freq_bin", "*", "2", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", ":", "\n", "            ", "self", ".", "sp_dim", "=", "self", ".", "config", ".", "freq_bin", "\n", "self", ".", "linear_dim", "=", "self", ".", "gru_dim", "*", "2", "\n", "", "elif", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "self", ".", "sp_dim", "=", "self", ".", "config", ".", "freq_bin", "\n", "self", ".", "linear_dim", "=", "self", ".", "attn_dim", "\n", "", "elif", "self", ".", "mode", "==", "\"all\"", ":", "\n", "            ", "self", ".", "sp_dim", "=", "self", ".", "config", ".", "freq_bin", "*", "2", "\n", "self", ".", "linear_dim", "=", "self", ".", "attn_dim", "\n", "\n", "# Network Architecture ", "\n", "", "if", "self", ".", "mode", "==", "\"spl\"", ":", "\n", "            ", "self", ".", "tone_gru", "=", "nn", ".", "Linear", "(", "self", ".", "sp_dim", ",", "self", ".", "linear_dim", ")", "\n", "# nn.GRU(", "\n", "# self.sp_dim, self.gru_dim, 1,", "\n", "# batch_first=True, bidirectional=True", "\n", "# )", "\n", "self", ".", "octave_gru", "=", "nn", ".", "Linear", "(", "self", ".", "sp_dim", ",", "self", ".", "linear_dim", ")", "\n", "# nn.GRU(", "\n", "#     self.sp_dim, self.gru_dim, 1,", "\n", "#     batch_first=True, bidirectional=True", "\n", "# )", "\n", "", "elif", "self", ".", "mode", "==", "\"spat\"", "or", "self", ".", "mode", "==", "\"all\"", ":", "\n", "            ", "self", ".", "tone_in", "=", "nn", ".", "Linear", "(", "self", ".", "sp_dim", ",", "self", ".", "attn_dim", ")", "\n", "self", ".", "tone_posenc", "=", "PositionalEncoding", "(", "self", ".", "attn_dim", ",", "n_position", "=", "self", ".", "config", ".", "seg_frame", ")", "\n", "self", ".", "tone_dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", "\n", "self", ".", "tone_norm", "=", "nn", ".", "LayerNorm", "(", "self", ".", "attn_dim", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "tone_attn", "=", "nn", ".", "ModuleList", "(", "[", "\n", "CombineLayer", "(", "self", ".", "attn_dim", ",", "self", ".", "attn_dim", "*", "2", ",", "8", ",", "\n", "self", ".", "attn_dim", "//", "8", ",", "self", ".", "attn_dim", "//", "8", ",", "dropout", "=", "0.2", ")", "\n", "for", "_", "in", "range", "(", "2", ")", "]", "\n", ")", "\n", "self", ".", "octave_in", "=", "nn", ".", "Linear", "(", "self", ".", "sp_dim", ",", "self", ".", "attn_dim", ")", "\n", "self", ".", "octave_posenc", "=", "PositionalEncoding", "(", "self", ".", "attn_dim", ",", "n_position", "=", "self", ".", "config", ".", "seg_frame", ")", "\n", "self", ".", "octave_dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", "\n", "self", ".", "octave_norm", "=", "nn", ".", "LayerNorm", "(", "self", ".", "attn_dim", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "octave_attn", "=", "nn", ".", "ModuleList", "(", "[", "\n", "CombineLayer", "(", "self", ".", "attn_dim", ",", "self", ".", "attn_dim", "*", "2", ",", "8", ",", "\n", "self", ".", "attn_dim", "//", "8", ",", "self", ".", "attn_dim", "//", "8", ",", "dropout", "=", "0.2", ")", "\n", "for", "_", "in", "range", "(", "2", ")", "]", "\n", ")", "\n", "", "if", "self", ".", "mode", "!=", "\"single\"", "and", "self", ".", "mode", "!=", "\"tcfp\"", ":", "\n", "            ", "self", ".", "tone_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "linear_dim", ",", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "128", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "128", ",", "self", ".", "config", ".", "tone_class", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "octave_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "linear_dim", ",", "256", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "64", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "64", ",", "self", ".", "config", ".", "octave_class", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "tone_bm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", ",", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "octave_bm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", ",", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "# [bs, 361 + 13 + 9, 128]", "\n", "self", ".", "tcfp_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "config", ".", "freq_bin", "*", "2", ",", "self", ".", "config", ".", "freq_bin", ",", "\n", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "tcfp_bm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "2", ",", "1", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "\n", "self", ".", "config", ".", "tone_class", "+", "self", ".", "config", ".", "octave_class", "+", "self", ".", "config", ".", "freq_bin", "+", "3", ",", "\n", "self", ".", "config", ".", "freq_bin", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "linear_dim", ",", "self", ".", "config", ".", "freq_bin", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "final_bm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", ",", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.tone_decoder": [[152, 165], ["tonet.TONet.tone_dropout", "tonet.TONet.tone_norm", "tonet.TONet.tone_linear", "tone_prob.permute().contiguous.permute().contiguous.permute().contiguous", "tonet.TONet.tone_posenc", "tone_layer", "tonet.TONet.tone_gru", "tonet.TONet.tone_linear", "tone_prob.permute().contiguous.permute().contiguous.permute().contiguous", "tonet.TONet.tone_in", "tone_prob.permute().contiguous.permute().contiguous.permute", "tone_prob.permute().contiguous.permute().contiguous.permute"], "methods", ["None"], ["def", "tone_decoder", "(", "self", ",", "tone_feature", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"all\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "tone_h", "=", "self", ".", "tone_dropout", "(", "self", ".", "tone_posenc", "(", "self", ".", "tone_in", "(", "tone_feature", ")", ")", ")", "\n", "tone_h", "=", "self", ".", "tone_norm", "(", "tone_h", ")", "\n", "for", "tone_layer", "in", "self", ".", "tone_attn", ":", "\n", "                ", "tone_h", ",", "tone_weight", "=", "tone_layer", "(", "tone_h", ",", "slf_attn_mask", "=", "None", ")", "\n", "", "tone_prob", "=", "self", ".", "tone_linear", "(", "tone_h", ")", "\n", "tone_prob", "=", "tone_prob", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", ":", "\n", "            ", "tone_h", "=", "self", ".", "tone_gru", "(", "tone_feature", ")", "\n", "tone_prob", "=", "self", ".", "tone_linear", "(", "tone_h", ")", "\n", "tone_prob", "=", "tone_prob", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "return", "tone_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.octave_decoder": [[166, 179], ["tonet.TONet.octave_dropout", "tonet.TONet.octave_norm", "tonet.TONet.octave_linear", "octave_prob.permute().contiguous.permute().contiguous.permute().contiguous", "tonet.TONet.octave_posenc", "octave_layer", "tonet.TONet.octave_gru", "tonet.TONet.octave_linear", "octave_prob.permute().contiguous.permute().contiguous.permute().contiguous", "tonet.TONet.octave_in", "octave_prob.permute().contiguous.permute().contiguous.permute", "octave_prob.permute().contiguous.permute().contiguous.permute"], "methods", ["None"], ["", "def", "octave_decoder", "(", "self", ",", "octave_feature", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"all\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "octave_h", "=", "self", ".", "octave_dropout", "(", "self", ".", "octave_posenc", "(", "self", ".", "octave_in", "(", "octave_feature", ")", ")", ")", "\n", "octave_h", "=", "self", ".", "octave_norm", "(", "octave_h", ")", "\n", "for", "octave_layer", "in", "self", ".", "octave_attn", ":", "\n", "                ", "octave_h", ",", "octave_weight", "=", "octave_layer", "(", "octave_h", ",", "slf_attn_mask", "=", "None", ")", "\n", "", "octave_prob", "=", "self", ".", "octave_linear", "(", "octave_h", ")", "\n", "octave_prob", "=", "octave_prob", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", ":", "\n", "            ", "octave_h", "=", "self", ".", "octave_gru", "(", "octave_feature", ")", "\n", "octave_prob", "=", "self", ".", "octave_linear", "(", "octave_h", ")", "\n", "octave_prob", "=", "octave_prob", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "return", "octave_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.forward": [[181, 261], ["tonet.TONet.l_model", "tonet.TONet.l_model", "tonet.TONet.r_model", "output_l[].unsqueeze", "output_r[].unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "feature_agg.squeeze.squeeze.squeeze", "tonet.TONet.tcfp_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bm_agg.squeeze.squeeze.squeeze", "tonet.TONet.tcfp_bm", "bm_agg.squeeze.squeeze.permute", "feature_agg.squeeze.squeeze.permute().contiguous", "feature_agg.squeeze.squeeze.permute().contiguous", "tonet.TONet.tone_decoder", "tonet.TONet.octave_decoder", "tonet.TONet.tone_bm", "tonet.TONet.octave_bm", "tone_bm.permute.permute.permute", "octave_bm.permute.permute.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tonet.TONet.final_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "tonet.TONet.l_model", "tonet.TONet.r_model", "output_l[].unsqueeze", "output_r[].unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "feature_agg.squeeze.squeeze.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bm_agg.squeeze.squeeze.permute", "tonet.TONet.final_linear", "tonet.TONet.final_bm", "final_x.permute.permute.permute", "final_bm.permute.permute.permute", "feature_agg.squeeze.squeeze.permute", "feature_agg.squeeze.squeeze.permute", "torch.nn.Softmax", "torch.nn.Softmax", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tonet.TONet.l_model", "output_l[].unsqueeze", "feature_agg.squeeze.squeeze.squeeze", "bm_agg.squeeze.squeeze.squeeze", "feature_agg.squeeze.squeeze.permute().contiguous", "feature_agg.squeeze.squeeze.permute().contiguous", "tonet.TONet.tone_decoder", "tonet.TONet.octave_decoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tonet.TONet.final_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "feature_agg.squeeze.squeeze.permute", "feature_agg.squeeze.squeeze.permute"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.tone_decoder", "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.octave_decoder", "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.tone_decoder", "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.octave_decoder"], ["", "def", "forward", "(", "self", ",", "x", ",", "tx", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"single\"", ":", "\n", "            ", "output", ",", "_", "=", "self", ".", "l_model", "(", "x", ")", "\n", "return", "output", "\n", "", "elif", "self", ".", "mode", "==", "\"all\"", ":", "\n", "            ", "_", ",", "output_l", "=", "self", ".", "l_model", "(", "x", ")", "\n", "_", ",", "output_r", "=", "self", ".", "r_model", "(", "tx", ")", "\n", "bm_l", "=", "output_l", "[", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "output_l", "=", "output_l", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "bm_r", "=", "output_r", "[", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "output_r", "=", "output_r", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "feature_agg", "=", "torch", ".", "cat", "(", "(", "output_l", ",", "output_r", ")", ",", "dim", "=", "2", ")", "\n", "feature_agg", "=", "feature_agg", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "feature_agg_mi", "=", "self", ".", "tcfp_linear", "(", "feature_agg", ")", "# [bs, 360, 128]", "\n", "bm_agg", "=", "torch", ".", "cat", "(", "(", "bm_l", ",", "bm_r", ")", ",", "dim", "=", "2", ")", "\n", "bm_agg", "=", "bm_agg", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "bm_agg_mi", "=", "self", ".", "tcfp_bm", "(", "bm_agg", ")", "\n", "bm_agg", "=", "bm_agg", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "tone_feature", "=", "feature_agg", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "octave_feature", "=", "feature_agg", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "tone_prob", "=", "self", ".", "tone_decoder", "(", "tone_feature", ")", "\n", "octave_prob", "=", "self", ".", "octave_decoder", "(", "octave_feature", ")", "\n", "\n", "tone_bm", "=", "self", ".", "tone_bm", "(", "bm_agg", ")", "\n", "octave_bm", "=", "self", ".", "octave_bm", "(", "bm_agg", ")", "\n", "tone_bm", "=", "tone_bm", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "octave_bm", "=", "octave_bm", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "tone_prob", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "tone_bm", ")", ",", "dim", "=", "1", ")", "\n", "octave_prob", "=", "torch", ".", "cat", "(", "(", "octave_prob", ",", "octave_bm", ")", ",", "dim", "=", "1", ")", "\n", "\n", "final_feature", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "octave_prob", ",", "feature_agg_mi", ",", "bm_agg_mi", ")", ",", "dim", "=", "1", ")", "\n", "final_feature", "=", "self", ".", "final_linear", "(", "final_feature", ")", "\n", "final_feature", "=", "torch", ".", "cat", "(", "(", "bm_agg_mi", ",", "final_feature", ")", ",", "dim", "=", "1", ")", "\n", "final_feature", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "final_feature", ")", "\n", "tone_prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "tone_prob", ")", "\n", "octave_prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "octave_prob", ")", "\n", "return", "tone_prob", ",", "octave_prob", ",", "final_feature", "\n", "", "elif", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "_", ",", "output_l", "=", "self", ".", "l_model", "(", "x", ")", "\n", "_", ",", "output_r", "=", "self", ".", "r_model", "(", "tx", ")", "\n", "bm_l", "=", "output_l", "[", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "output_l", "=", "output_l", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "bm_r", "=", "output_r", "[", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "output_r", "=", "output_r", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "feature_agg", "=", "torch", ".", "cat", "(", "(", "output_l", ",", "output_r", ")", ",", "dim", "=", "2", ")", "\n", "feature_agg", "=", "feature_agg", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "bm_agg", "=", "torch", ".", "cat", "(", "(", "bm_l", ",", "bm_r", ")", ",", "dim", "=", "2", ")", "\n", "bm_agg", "=", "bm_agg", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "final_x", "=", "self", ".", "final_linear", "(", "feature_agg", ")", "\n", "final_bm", "=", "self", ".", "final_bm", "(", "bm_agg", ")", "\n", "final_x", "=", "final_x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "final_bm", "=", "final_bm", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "final_output", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "torch", ".", "cat", "(", "(", "final_bm", ",", "final_x", ")", ",", "dim", "=", "2", ")", ")", "\n", "return", "final_output", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "_", ",", "output_l", "=", "self", ".", "l_model", "(", "x", ")", "\n", "bm_l", "=", "output_l", "[", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "output_l", "=", "output_l", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "feature_agg", "=", "output_l", "\n", "feature_agg", "=", "feature_agg", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "bm_agg", "=", "bm_l", "\n", "bm_agg", "=", "bm_agg", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "tone_feature", "=", "feature_agg", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "octave_feature", "=", "feature_agg", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "tone_prob", "=", "self", ".", "tone_decoder", "(", "tone_feature", ")", "\n", "octave_prob", "=", "self", ".", "octave_decoder", "(", "octave_feature", ")", "\n", "tone_bm", "=", "bm_agg", "\n", "octave_bm", "=", "bm_agg", "\n", "\n", "tone_prob", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "tone_bm", ")", ",", "dim", "=", "1", ")", "\n", "octave_prob", "=", "torch", ".", "cat", "(", "(", "octave_prob", ",", "octave_bm", ")", ",", "dim", "=", "1", ")", "\n", "\n", "final_feature", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "octave_prob", ",", "feature_agg", ",", "bm_agg", ")", ",", "dim", "=", "1", ")", "\n", "final_feature", "=", "self", ".", "final_linear", "(", "final_feature", ")", "\n", "final_feature", "=", "torch", ".", "cat", "(", "(", "bm_agg", ",", "final_feature", ")", ",", "dim", "=", "1", ")", "\n", "final_feature", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "final_feature", ")", "\n", "tone_prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "tone_prob", ")", "\n", "octave_prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "octave_prob", ")", "\n", "return", "tone_prob", ",", "octave_prob", ",", "final_feature", "\n", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.training_step": [[268, 326], ["next", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "tonet.TONet.", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "tonet.TONet.loss_func", "tonet.TONet.log", "tonet.TONet.parameters", "len", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "tonet.TONet.", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tonet.TONet.loss_func", "tonet.TONet.log", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "tonet.TONet.", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "tonet.TONet.loss_func", "tonet.TONet.log", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "tonet.TONet.", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tonet.TONet.loss_func", "tonet.TONet.log", "gds[].long", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "gds[].long", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "gds[].long", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "gds[].long", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["def", "training_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "device_type", "=", "next", "(", "self", ".", "parameters", "(", ")", ")", ".", "device", "\n", "cfps", "=", "batch", "[", "\"cfp\"", "]", "\n", "tcfps", "=", "batch", "[", "\"tcfp\"", "]", "\n", "gds", "=", "batch", "[", "\"gd\"", "]", "\n", "if", "self", ".", "mode", "==", "\"single\"", ":", "\n", "            ", "gd_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "cfps", ".", "shape", "[", "-", "2", "]", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "gds", ")", ")", ":", "\n", "                ", "gd_maps", "[", "i", ",", "gds", "[", "i", "]", ".", "long", "(", ")", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "", "output", "=", "self", "(", "cfps", ")", "\n", "output", "=", "torch", ".", "squeeze", "(", "output", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "loss_func", "(", "output", ",", "gd_maps", ")", "\n", "self", ".", "log", "(", "'loss'", ",", "loss", ",", "on_step", "=", "True", ",", "on_epoch", "=", "True", ",", "prog_bar", "=", "True", ",", "logger", "=", "True", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"all\"", ":", "\n", "# from pure pitch estimation", "\n", "            ", "gd_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "cfps", ".", "shape", "[", "-", "2", "]", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "tone_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "tone_class", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "octave_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "octave_class", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "tone_index", "=", "(", "(", "gds", "%", "60", ")", "*", "self", ".", "config", ".", "tone_class", "/", "60", ")", ".", "long", "(", ")", "\n", "octave_index", "=", "(", "gds", "//", "60", "+", "2", ")", ".", "long", "(", ")", "\n", "tone_index", "[", "gds", "<", "1.0", "]", "=", "self", ".", "config", ".", "tone_class", "\n", "octave_index", "[", "gds", "<", "1.0", "]", "=", "self", ".", "config", ".", "octave_class", "\n", "for", "i", "in", "range", "(", "len", "(", "tone_maps", ")", ")", ":", "\n", "                ", "tone_maps", "[", "i", ",", "tone_index", "[", "i", "]", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "octave_maps", "[", "i", ",", "octave_index", "[", "i", "]", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "gd_maps", "[", "i", ",", "gds", "[", "i", "]", ".", "long", "(", ")", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "", "tone_prob", ",", "octave_prob", ",", "final_prob", "=", "self", "(", "cfps", ",", "tcfps", ")", "\n", "pred_map", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "octave_prob", ",", "final_prob", ")", ",", "dim", "=", "1", ")", "\n", "gd_map", "=", "torch", ".", "cat", "(", "[", "tone_maps", ",", "octave_maps", ",", "gd_maps", "]", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "loss_func", "(", "pred_map", ",", "gd_map", ")", "\n", "self", ".", "log", "(", "'loss'", ",", "loss", ",", "on_step", "=", "True", ",", "on_epoch", "=", "True", ",", "prog_bar", "=", "True", ",", "logger", "=", "True", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "gd_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "cfps", ".", "shape", "[", "-", "2", "]", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "gds", ")", ")", ":", "\n", "                ", "gd_maps", "[", "i", ",", "gds", "[", "i", "]", ".", "long", "(", ")", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "", "output", "=", "self", "(", "cfps", ",", "tcfps", ")", "\n", "output", "=", "torch", ".", "squeeze", "(", "output", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "loss_func", "(", "output", ",", "gd_maps", ")", "\n", "self", ".", "log", "(", "'loss'", ",", "loss", ",", "on_step", "=", "True", ",", "on_epoch", "=", "True", ",", "prog_bar", "=", "True", ",", "logger", "=", "True", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "# from pure pitch estimation", "\n", "            ", "gd_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "cfps", ".", "shape", "[", "-", "2", "]", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "tone_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "tone_class", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "octave_maps", "=", "torch", ".", "zeros", "(", "(", "cfps", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "octave_class", "+", "1", ",", "cfps", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "to", "(", "device_type", ")", "\n", "tone_index", "=", "(", "(", "gds", "%", "60", ")", "*", "self", ".", "config", ".", "tone_class", "/", "60", ")", ".", "long", "(", ")", "\n", "octave_index", "=", "(", "gds", "//", "60", "+", "2", ")", ".", "long", "(", ")", "\n", "tone_index", "[", "gds", "<", "1.0", "]", "=", "self", ".", "config", ".", "tone_class", "\n", "octave_index", "[", "gds", "<", "1.0", "]", "=", "self", ".", "config", ".", "octave_class", "\n", "for", "i", "in", "range", "(", "len", "(", "tone_maps", ")", ")", ":", "\n", "                ", "tone_maps", "[", "i", ",", "tone_index", "[", "i", "]", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "octave_maps", "[", "i", ",", "octave_index", "[", "i", "]", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "gd_maps", "[", "i", ",", "gds", "[", "i", "]", ".", "long", "(", ")", ",", "torch", ".", "arange", "(", "gds", ".", "shape", "[", "-", "1", "]", ")", "]", "=", "1.0", "\n", "", "tone_prob", ",", "octave_prob", ",", "final_prob", "=", "self", "(", "cfps", ")", "\n", "pred_map", "=", "torch", ".", "cat", "(", "(", "tone_prob", ",", "octave_prob", ",", "final_prob", ")", ",", "dim", "=", "1", ")", "\n", "gd_map", "=", "torch", ".", "cat", "(", "[", "tone_maps", ",", "octave_maps", ",", "gd_maps", "]", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "loss_func", "(", "pred_map", ",", "gd_map", ")", "\n", "self", ".", "log", "(", "'loss'", ",", "loss", ",", "on_step", "=", "True", ",", "on_epoch", "=", "True", ",", "prog_bar", "=", "True", ",", "logger", "=", "True", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.write_prediction": [[328, 333], ["numpy.arange", "open", "range", "len", "len", "f.write", "str", "str", "numpy.round"], "methods", ["None"], ["", "def", "write_prediction", "(", "self", ",", "pred", ",", "filename", ")", ":", "\n", "        ", "time_frame", "=", "np", ".", "arange", "(", "len", "(", "pred", ")", ")", "*", "0.01", "\n", "with", "open", "(", "filename", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "time_frame", ")", ")", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "np", ".", "round", "(", "time_frame", "[", "i", "]", ",", "4", ")", ")", "+", "\"\\t\"", "+", "str", "(", "pred", "[", "i", "]", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.validation_step": [[335, 403], ["next", "range", "numpy.concatenate", "tonet.TONet.parameters", "len", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "tonet.TONet.", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "numpy.concatenate.append", "numpy.array", "range", "numpy.concatenate", "len", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "tonet.TONet.", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "numpy.concatenate.append", "range", "numpy.concatenate", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "len", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "tonet.TONet.", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "numpy.concatenate.append", "numpy.array", "range", "numpy.concatenate", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "len", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "tonet.TONet.", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "numpy.concatenate.append", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach", "temp_output.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["None"], ["", "", "", "def", "validation_step", "(", "self", ",", "batch", ",", "batch_idx", ",", "dataset_idx", ")", ":", "\n", "        ", "device_type", "=", "next", "(", "self", ".", "parameters", "(", ")", ")", ".", "device", "\n", "mini_batch", "=", "self", ".", "config", ".", "batch_size", "\n", "cfps", "=", "batch", "[", "\"cfp\"", "]", "[", "0", "]", "\n", "tcfps", "=", "batch", "[", "\"tcfp\"", "]", "[", "0", "]", "\n", "gds", "=", "batch", "[", "\"gd\"", "]", "[", "0", "]", "\n", "lens", "=", "batch", "[", "\"length\"", "]", "[", "0", "]", "\n", "\n", "if", "self", ".", "mode", "==", "\"single\"", ":", "\n", "            ", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "cfps", ")", ",", "mini_batch", ")", ":", "\n", "                ", "temp_cfp", "=", "torch", ".", "from_numpy", "(", "cfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "temp_output", "=", "self", "(", "temp_cfp", ")", "\n", "temp_output", "=", "torch", ".", "squeeze", "(", "temp_output", ",", "dim", "=", "1", ")", "\n", "temp_output", "=", "temp_output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "output", ".", "append", "(", "temp_output", ")", "\n", "", "output", "=", "np", ".", "concatenate", "(", "np", ".", "array", "(", "output", ")", ",", "axis", "=", "0", ")", "\n", "return", "[", "\n", "output", ",", "\n", "gds", ",", "\n", "lens", "\n", "]", "\n", "", "elif", "self", ".", "mode", "==", "\"all\"", ":", "\n", "# output_tone = []", "\n", "# output_octave = []", "\n", "            ", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "cfps", ")", ",", "mini_batch", ")", ":", "\n", "                ", "temp_cfp", "=", "torch", ".", "from_numpy", "(", "cfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "temp_tcfp", "=", "torch", ".", "from_numpy", "(", "tcfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "_", ",", "_", ",", "temp_output", "=", "self", "(", "temp_cfp", ",", "temp_tcfp", ")", "\n", "temp_output", "=", "temp_output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "output", ".", "append", "(", "temp_output", ")", "\n", "", "output", "=", "np", ".", "concatenate", "(", "output", ",", "axis", "=", "0", ")", "\n", "return", "[", "\n", "\n", "output", ",", "\n", "gds", ",", "\n", "lens", "\n", "]", "\n", "", "elif", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "cfps", ")", ",", "mini_batch", ")", ":", "\n", "                ", "temp_cfp", "=", "torch", ".", "from_numpy", "(", "cfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "temp_tcfp", "=", "torch", ".", "from_numpy", "(", "tcfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "temp_output", "=", "self", "(", "temp_cfp", ",", "temp_tcfp", ")", "\n", "temp_output", "=", "torch", ".", "squeeze", "(", "temp_output", ",", "dim", "=", "1", ")", "\n", "temp_output", "=", "temp_output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "output", ".", "append", "(", "temp_output", ")", "\n", "", "output", "=", "np", ".", "concatenate", "(", "np", ".", "array", "(", "output", ")", ",", "axis", "=", "0", ")", "\n", "return", "[", "\n", "output", ",", "\n", "gds", ",", "\n", "lens", "\n", "]", "\n", "", "elif", "self", ".", "mode", "==", "\"spl\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "# output_tone = []", "\n", "# output_octave = []", "\n", "            ", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "cfps", ")", ",", "mini_batch", ")", ":", "\n", "                ", "temp_cfp", "=", "torch", ".", "from_numpy", "(", "cfps", "[", "i", ":", "i", "+", "mini_batch", "]", ")", ".", "to", "(", "device_type", ")", "\n", "_", ",", "_", ",", "temp_output", "=", "self", "(", "temp_cfp", ")", "\n", "temp_output", "=", "temp_output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "output", ".", "append", "(", "temp_output", ")", "\n", "", "output", "=", "np", ".", "concatenate", "(", "output", ",", "axis", "=", "0", ")", "\n", "return", "[", "\n", "output", ",", "\n", "gds", ",", "\n", "lens", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.validation_epoch_end": [[405, 454], ["enumerate", "numpy.array", "numpy.concatenate", "numpy.concatenate", "util.melody_eval", "tonet.TONet.print", "tonet.TONet.print", "tonet.TONet.print", "enumerate", "numpy.argmax", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate.append", "numpy.concatenate.append", "range", "torch.save", "torch.save", "torch.save", "torch.save", "numpy.array", "numpy.concatenate", "numpy.concatenate", "util.melody_eval", "tonet.TONet.print", "tonet.TONet.print", "tonet.TONet.print", "len", "tonet.TONet.state_dict", "numpy.argmax", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate.append", "numpy.concatenate.append", "range", "torch.save", "torch.save", "torch.save", "torch.save", "len", "tonet.TONet.state_dict", "str", "str"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.None.util.melody_eval", "home.repos.pwc.inspect_result.retrocirce_tonet.None.util.melody_eval"], ["", "", "def", "validation_epoch_end", "(", "self", ",", "validation_step_outputs", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"single\"", "or", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "for", "i", ",", "dataset_d", "in", "enumerate", "(", "validation_step_outputs", ")", ":", "\n", "                ", "metric", "=", "np", ".", "array", "(", "[", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", "]", ")", "\n", "preds", "=", "[", "]", "\n", "gds", "=", "[", "]", "\n", "for", "d", "in", "dataset_d", ":", "\n", "                    ", "pred", ",", "gd", ",", "rl", "=", "d", "\n", "pred", "=", "np", ".", "argmax", "(", "pred", ",", "axis", "=", "1", ")", "\n", "pred", "=", "np", ".", "concatenate", "(", "pred", ",", "axis", "=", "0", ")", "\n", "pred", "=", "self", ".", "centf", "[", "pred", "]", "\n", "gd", "=", "np", ".", "concatenate", "(", "gd", ",", "axis", "=", "0", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "gds", ".", "append", "(", "gd", ")", "\n", "", "preds", "=", "np", ".", "concatenate", "(", "preds", ",", "axis", "=", "0", ")", "\n", "gds", "=", "np", ".", "concatenate", "(", "gds", ",", "axis", "=", "0", ")", "\n", "metric", "=", "melody_eval", "(", "preds", ",", "gds", ")", "\n", "self", ".", "print", "(", "\"\\n\"", ")", "\n", "self", ".", "print", "(", "\"Dataset \"", ",", "i", ",", "\" OA:\"", ",", "metric", "[", "-", "1", "]", ")", "\n", "if", "metric", "[", "-", "1", "]", ">", "self", ".", "max_metric", "[", "i", ",", "-", "1", "]", ":", "\n", "                    ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "max_metric", "[", "i", "]", ")", ")", ":", "\n", "                        ", "self", ".", "max_metric", "[", "i", ",", "j", "]", "=", "metric", "[", "j", "]", "\n", "self", ".", "max_metric", "[", "i", ",", "j", "]", "=", "metric", "[", "j", "]", "\n", "", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "\"model_backup/bestk_\"", "+", "str", "(", "i", ")", "+", "\".ckpt\"", ")", "\n", "", "self", ".", "print", "(", "\"Best \"", ",", "i", ",", "\":\"", ",", "self", ".", "max_metric", "[", "i", "]", ")", "\n", "", "", "elif", "self", ".", "mode", "==", "\"all\"", "or", "self", ".", "mode", "==", "\"spl\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "for", "i", ",", "dataset_d", "in", "enumerate", "(", "validation_step_outputs", ")", ":", "\n", "                ", "metric", "=", "np", ".", "array", "(", "[", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", "]", ")", "\n", "preds", "=", "[", "]", "\n", "gds", "=", "[", "]", "\n", "for", "d", "in", "dataset_d", ":", "\n", "                    ", "pred", ",", "gd", ",", "rl", "=", "d", "\n", "pred", "=", "np", ".", "argmax", "(", "pred", ",", "axis", "=", "1", ")", "\n", "pred", "=", "np", ".", "concatenate", "(", "pred", ",", "axis", "=", "0", ")", "\n", "pred", "=", "self", ".", "centf", "[", "pred", "]", "\n", "gd", "=", "np", ".", "concatenate", "(", "gd", ",", "axis", "=", "0", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "gds", ".", "append", "(", "gd", ")", "\n", "", "preds", "=", "np", ".", "concatenate", "(", "preds", ",", "axis", "=", "0", ")", "\n", "gds", "=", "np", ".", "concatenate", "(", "gds", ",", "axis", "=", "0", ")", "\n", "metric", "=", "melody_eval", "(", "preds", ",", "gds", ")", "\n", "self", ".", "print", "(", "\"\\n\"", ")", "\n", "self", ".", "print", "(", "\"Dataset \"", ",", "i", ",", "\" OA:\"", ",", "metric", "[", "-", "1", "]", ")", "\n", "if", "metric", "[", "-", "1", "]", ">", "self", ".", "max_metric", "[", "i", ",", "-", "1", "]", ":", "\n", "                    ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "max_metric", "[", "i", "]", ")", ")", ":", "\n", "                        ", "self", ".", "max_metric", "[", "i", ",", "j", "]", "=", "metric", "[", "j", "]", "\n", "self", ".", "max_metric", "[", "i", ",", "j", "]", "=", "metric", "[", "j", "]", "\n", "", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "\"model_backup/bestk_\"", "+", "str", "(", "i", ")", "+", "\".ckpt\"", ")", "\n", "", "self", ".", "print", "(", "\"Best \"", ",", "i", ",", "\":\"", ",", "self", ".", "max_metric", "[", "i", "]", ")", "\n", "", "", "", "def", "test_step", "(", "self", ",", "batch", ",", "batch_idx", ",", "dataset_idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.test_step": [[454, 456], ["tonet.TONet.validation_step"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.validation_step"], ["", "", "", "def", "test_step", "(", "self", ",", "batch", ",", "batch_idx", ",", "dataset_idx", ")", ":", "\n", "        ", "return", "self", ".", "validation_step", "(", "batch", ",", "batch_idx", ",", "dataset_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.test_epoch_end": [[457, 459], ["tonet.TONet.validation_epoch_end"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.validation_epoch_end"], ["", "def", "test_epoch_end", "(", "self", ",", "test_step_outputs", ")", ":", "\n", "        ", "self", ".", "validation_epoch_end", "(", "test_step_outputs", ")", "\n", "# for i, dataset_d in enumerate(test_step_outputs):  ", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.tonet.TONet.configure_optimizers": [[467, 486], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tonet.TONet.parameters", "torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.LambdaLR"], "methods", ["None"], ["", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "config", ".", "lr", ")", "\n", "def", "lr_foo", "(", "epoch", ")", ":", "\n", "            ", "if", "epoch", "<", "5", ":", "\n", "# warm up lr", "\n", "                ", "lr_scale", "=", "0.5", "\n", "", "else", ":", "\n", "                ", "lr_scale", "=", "0.5", "*", "0.98", "**", "(", "epoch", "-", "5", ")", "\n", "\n", "", "return", "lr_scale", "\n", "\n", "", "if", "self", ".", "mode", "==", "\"single\"", "or", "self", ".", "mode", "==", "\"tcfp\"", ":", "\n", "            ", "return", "optimizer", "\n", "", "elif", "self", ".", "mode", "==", "\"all\"", "or", "self", ".", "mode", "==", "\"spl\"", "or", "self", ".", "mode", "==", "\"spat\"", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "LambdaLR", "(", "\n", "optimizer", ",", "\n", "lr_lambda", "=", "lr_foo", "\n", ")", "\n", "return", "[", "optimizer", "]", ",", "[", "scheduler", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.SF_Module.__init__": [[9, 21], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.SELU", "torch.SELU", "torch.SELU", "max", "torch.Linear", "torch.Linear", "torch.Linear", "max", "range"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_num", ",", "n_channel", ",", "reduction", ",", "limitation", ")", ":", "\n", "        ", "super", "(", "SF_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Fuse Layer", "\n", "self", ".", "f_avg", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "f_bn", "=", "nn", ".", "BatchNorm1d", "(", "n_channel", ")", "\n", "self", ".", "f_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "n_channel", ",", "max", "(", "n_channel", "//", "reduction", ",", "limitation", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "# Select Layer", "\n", "self", ".", "s_linear", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Linear", "(", "max", "(", "n_channel", "//", "reduction", ",", "limitation", ")", ",", "n_channel", ")", "for", "_", "in", "range", "(", "input_num", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.SF_Module.forward": [[24, 55], ["ftanet.SF_Module.f_avg", "ftanet.SF_Module.view", "ftanet.SF_Module.f_bn", "ftanet.SF_Module.f_linear", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "enumerate", "len", "masks.append", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x [3, bs, c, h, w]", "\n", "        ", "fused", "=", "None", "\n", "for", "x_s", "in", "x", ":", "\n", "            ", "if", "fused", "is", "None", ":", "\n", "                ", "fused", "=", "x_s", "\n", "", "else", ":", "\n", "                ", "fused", "=", "fused", "+", "x_s", "\n", "# [bs, c, h, w]", "\n", "", "", "fused", "=", "self", ".", "f_avg", "(", "fused", ")", "# bs,c,1,1", "\n", "fused", "=", "fused", ".", "view", "(", "fused", ".", "shape", "[", "0", "]", ",", "fused", ".", "shape", "[", "1", "]", ")", "\n", "fused", "=", "self", ".", "f_bn", "(", "fused", ")", "\n", "fused", "=", "self", ".", "f_linear", "(", "fused", ")", "\n", "\n", "masks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "            ", "masks", ".", "append", "(", "self", ".", "s_linear", "[", "i", "]", "(", "fused", ")", ")", "\n", "# [3, bs, c]", "\n", "", "mask_stack", "=", "torch", ".", "stack", "(", "masks", ",", "dim", "=", "-", "1", ")", "# bs, c, 3", "\n", "mask_stack", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "2", ")", "(", "mask_stack", ")", "\n", "\n", "selected", "=", "None", "\n", "for", "i", ",", "x_s", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "mask", "=", "mask_stack", "[", ":", ",", ":", ",", "i", "]", "[", ":", ",", ":", ",", "None", ",", "None", "]", "# bs,c,1,1", "\n", "x_s", "=", "x_s", "*", "mask", "\n", "if", "selected", "is", "None", ":", "\n", "                ", "selected", "=", "x_s", "\n", "", "else", ":", "\n", "                ", "selected", "=", "selected", "+", "x_s", "\n", "# [bs, c, h,w]", "\n", "", "", "return", "selected", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.FTA_Module.__init__": [[59, 98], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "shape", ",", "kt", ",", "kf", ")", ":", "\n", "        ", "super", "(", "FTA_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "shape", "[", "2", "]", ")", "\n", "self", ".", "r_cn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "ta_cn1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "kt", ",", "padding", "=", "(", "kt", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "ta_cn2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "shape", "[", "3", "]", ",", "shape", "[", "3", "]", ",", "kt", ",", "padding", "=", "(", "kt", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "ta_cn3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "ta_cn4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "shape", "[", "3", "]", ",", "shape", "[", "3", "]", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "fa_cn1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "kf", ",", "padding", "=", "(", "kf", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "fa_cn2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "shape", "[", "3", "]", ",", "shape", "[", "3", "]", ",", "kf", ",", "padding", "=", "(", "kf", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "fa_cn3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "fa_cn4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "shape", "[", "3", "]", ",", "shape", "[", "3", "]", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.FTA_Module.forward": [[100, 123], ["ftanet.FTA_Module.bn", "ftanet.FTA_Module.r_cn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "ftanet.FTA_Module.ta_cn1", "ftanet.FTA_Module.ta_cn2", "a_t.unsqueeze.unsqueeze.unsqueeze", "ftanet.FTA_Module.ta_cn3", "ftanet.FTA_Module.ta_cn4", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "ftanet.FTA_Module.fa_cn1", "ftanet.FTA_Module.fa_cn2", "a_f.unsqueeze.unsqueeze.unsqueeze", "ftanet.FTA_Module.fa_cn3", "ftanet.FTA_Module.fa_cn4", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x_r", "=", "self", ".", "r_cn", "(", "x", ")", "\n", "\n", "a_t", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "-", "2", ")", "\n", "a_t", "=", "self", ".", "ta_cn1", "(", "a_t", ")", "\n", "a_t", "=", "self", ".", "ta_cn2", "(", "a_t", ")", "\n", "a_t", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "a_t", ")", "\n", "a_t", "=", "a_t", ".", "unsqueeze", "(", "dim", "=", "-", "2", ")", "\n", "x_t", "=", "self", ".", "ta_cn3", "(", "x", ")", "\n", "x_t", "=", "self", ".", "ta_cn4", "(", "x_t", ")", "\n", "x_t", "=", "x_t", "*", "a_t", "\n", "\n", "a_f", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "a_f", "=", "self", ".", "fa_cn1", "(", "a_f", ")", "\n", "a_f", "=", "self", ".", "fa_cn2", "(", "a_f", ")", "\n", "a_f", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "a_f", ")", "\n", "a_f", "=", "a_f", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", "\n", "x_f", "=", "self", ".", "fa_cn3", "(", "x", ")", "\n", "x_f", "=", "self", ".", "fa_cn4", "(", "x_f", ")", "\n", "x_f", "=", "x_f", "*", "a_f", "\n", "\n", "return", "x_r", ",", "x_t", ",", "x_f", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.FTAnet.__init__": [[126, 164], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.FTA_Module", "ftanet.SF_Module", "ftanet.SF_Module", "ftanet.SF_Module", "ftanet.SF_Module", "ftanet.SF_Module", "ftanet.SF_Module", "ftanet.SF_Module", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "freq_bin", "=", "360", ",", "time_segment", "=", "128", ")", ":", "\n", "        ", "super", "(", "FTAnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn_layer", "=", "nn", ".", "BatchNorm2d", "(", "3", ")", "\n", "# bm", "\n", "self", ".", "bm_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "(", "4", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "(", "3", ",", "1", ")", ",", "stride", "=", "(", "3", ",", "1", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "(", "6", ",", "1", ")", ",", "stride", "=", "(", "6", ",", "1", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "1", ",", "(", "5", ",", "1", ")", ",", "stride", "=", "(", "5", ",", "1", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "# fta_module", "\n", "self", ".", "fta_1", "=", "FTA_Module", "(", "(", "freq_bin", ",", "time_segment", ",", "3", ",", "32", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_2", "=", "FTA_Module", "(", "(", "freq_bin", "//", "2", ",", "time_segment", "//", "2", ",", "32", ",", "64", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_3", "=", "FTA_Module", "(", "(", "freq_bin", "//", "4", ",", "time_segment", "//", "4", ",", "64", ",", "128", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_4", "=", "FTA_Module", "(", "(", "freq_bin", "//", "4", ",", "time_segment", "//", "4", ",", "128", ",", "128", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_5", "=", "FTA_Module", "(", "(", "freq_bin", "//", "2", ",", "time_segment", "//", "2", ",", "128", ",", "64", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_6", "=", "FTA_Module", "(", "(", "freq_bin", ",", "time_segment", ",", "64", ",", "32", ")", ",", "3", ",", "3", ")", "\n", "self", ".", "fta_7", "=", "FTA_Module", "(", "(", "freq_bin", ",", "time_segment", ",", "32", ",", "1", ")", ",", "3", ",", "3", ")", "\n", "\n", "# sf_module", "\n", "self", ".", "sf_1", "=", "SF_Module", "(", "3", ",", "32", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_2", "=", "SF_Module", "(", "3", ",", "64", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_3", "=", "SF_Module", "(", "3", ",", "128", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_4", "=", "SF_Module", "(", "3", ",", "128", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_5", "=", "SF_Module", "(", "3", ",", "64", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_6", "=", "SF_Module", "(", "3", ",", "32", ",", "4", ",", "4", ")", "\n", "self", ".", "sf_7", "=", "SF_Module", "(", "3", ",", "1", ",", "4", ",", "4", ")", "\n", "\n", "# maxpool", "\n", "self", ".", "mp_1", "=", "nn", ".", "MaxPool2d", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "mp_2", "=", "nn", ".", "MaxPool2d", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "up_1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", "\n", "self", ".", "up_2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.ftanet.FTAnet.forward": [[165, 198], ["ftanet.FTAnet.bn_layer", "ftanet.FTAnet.bm_layer", "ftanet.FTAnet.fta_1", "ftanet.FTAnet.sf_1", "ftanet.FTAnet.mp_1", "ftanet.FTAnet.fta_2", "ftanet.FTAnet.sf_2", "ftanet.FTAnet.mp_2", "ftanet.FTAnet.fta_3", "ftanet.FTAnet.sf_3", "ftanet.FTAnet.fta_4", "ftanet.FTAnet.sf_4", "ftanet.FTAnet.up_1", "ftanet.FTAnet.fta_5", "ftanet.FTAnet.sf_5", "ftanet.FTAnet.up_2", "ftanet.FTAnet.fta_6", "ftanet.FTAnet.sf_6", "ftanet.FTAnet.fta_7", "ftanet.FTAnet.sf_7", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn_layer", "(", "x", ")", "\n", "bm", "=", "x", "\n", "bm", "=", "self", ".", "bm_layer", "(", "bm", ")", "\n", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_1", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_1", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "x", "=", "self", ".", "mp_1", "(", "x", ")", "\n", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_2", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_2", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "x", "=", "self", ".", "mp_2", "(", "x", ")", "\n", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_3", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_3", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_4", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_4", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "\n", "x", "=", "self", ".", "up_1", "(", "x", ")", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_5", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_5", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "x", "=", "self", ".", "up_2", "(", "x", ")", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_6", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_6", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "\n", "x_r", ",", "x_t", ",", "x_f", "=", "self", ".", "fta_7", "(", "x", ")", "\n", "x", "=", "self", ".", "sf_7", "(", "[", "x_r", ",", "x_t", ",", "x_f", "]", ")", "\n", "\n", "output_pre", "=", "torch", ".", "cat", "(", "[", "bm", ",", "x", "]", ",", "dim", "=", "2", ")", "\n", "output", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "2", ")", "(", "output_pre", ")", "\n", "\n", "return", "output", ",", "output_pre", "", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.msnet.MSnet.__init__": [[7, 59], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MSnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "(", "4", ",", "1", ")", ",", "return_indices", "=", "True", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "1", ")", ",", "return_indices", "=", "True", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "(", "6", ",", "1", ")", ",", "return_indices", "=", "True", ")", "\n", "\n", "self", ".", "bottom", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "5", ",", "padding", "=", "(", "0", ",", "2", ")", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "up_pool3", "=", "nn", ".", "MaxUnpool2d", "(", "(", "6", ",", "1", ")", ")", "\n", "self", ".", "up_conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "up_pool2", "=", "nn", ".", "MaxUnpool2d", "(", "(", "3", ",", "1", ")", ")", "\n", "self", ".", "up_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "up_pool1", "=", "nn", ".", "MaxUnpool2d", "(", "(", "4", ",", "1", ")", ")", "\n", "self", ".", "up_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.msnet.MSnet.forward": [[60, 73], ["msnet.MSnet.pool1", "msnet.MSnet.pool2", "msnet.MSnet.pool3", "msnet.MSnet.bottom", "msnet.MSnet.up_conv3", "msnet.MSnet.up_conv2", "msnet.MSnet.up_conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "msnet.MSnet.softmax", "msnet.MSnet.conv1", "msnet.MSnet.conv2", "msnet.MSnet.conv3", "msnet.MSnet.up_pool3", "msnet.MSnet.up_pool2", "msnet.MSnet.up_pool1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "c1", ",", "ind1", "=", "self", ".", "pool1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "c2", ",", "ind2", "=", "self", ".", "pool2", "(", "self", ".", "conv2", "(", "c1", ")", ")", "\n", "c3", ",", "ind3", "=", "self", ".", "pool3", "(", "self", ".", "conv3", "(", "c2", ")", ")", "\n", "bm", "=", "self", ".", "bottom", "(", "c3", ")", "\n", "u3", "=", "self", ".", "up_conv3", "(", "self", ".", "up_pool3", "(", "c3", ",", "ind3", ")", ")", "\n", "u2", "=", "self", ".", "up_conv2", "(", "self", ".", "up_pool2", "(", "u3", ",", "ind2", ")", ")", "\n", "u1", "=", "self", ".", "up_conv1", "(", "self", ".", "up_pool1", "(", "u2", ",", "ind1", ")", ")", "\n", "output_pre", "=", "torch", ".", "cat", "(", "(", "bm", ",", "u1", ")", ",", "dim", "=", "2", ")", "\n", "output", "=", "self", ".", "softmax", "(", "torch", ".", "cat", "(", "(", "bm", ",", "u1", ")", ",", "dim", "=", "2", ")", ")", "\n", "# output = torch.cat((bm, u1), dim=2)", "\n", "\n", "return", "output", ",", "output_pre", "", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.ScaledDotProductAttention.__init__": [[11, 15], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.ScaledDotProductAttention.forward": [[16, 27], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "attention_layer.ScaledDotProductAttention.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "k.transpose", "attn.masked_fill.masked_fill.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "attn", "=", "torch", ".", "matmul", "(", "q", "/", "self", ".", "temperature", ",", "k", ".", "transpose", "(", "2", ",", "3", ")", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "", "attn", "=", "self", ".", "dropout", "(", "F", ".", "softmax", "(", "attn", ",", "dim", "=", "-", "1", ")", ")", "\n", "output", "=", "torch", ".", "matmul", "(", "attn", ",", "v", ")", "\n", "\n", "return", "output", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.MultiHeadAttention.__init__": [[31, 47], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "attention_layer.ScaledDotProductAttention", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "d_k", "**", "0.5", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.MultiHeadAttention.forward": [[49, 78], ["attention_layer.MultiHeadAttention.layer_norm", "attention_layer.MultiHeadAttention.w_qs().view", "attention_layer.MultiHeadAttention.w_ks().view", "attention_layer.MultiHeadAttention.w_vs().view", "attention_layer.MultiHeadAttention.attention", "attention_layer.MultiHeadAttention.transpose().contiguous().view", "attention_layer.MultiHeadAttention.dropout", "attention_layer.MultiHeadAttention.size", "attention_layer.MultiHeadAttention.size", "attention_layer.MultiHeadAttention.size", "attention_layer.MultiHeadAttention.size", "attention_layer.MultiHeadAttention.transpose", "attention_layer.MultiHeadAttention.transpose", "attention_layer.MultiHeadAttention.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "attention_layer.MultiHeadAttention.fc", "attention_layer.MultiHeadAttention.w_qs", "attention_layer.MultiHeadAttention.w_ks", "attention_layer.MultiHeadAttention.w_vs", "attention_layer.MultiHeadAttention.transpose().contiguous", "attention_layer.MultiHeadAttention.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b", ",", "len_q", ",", "len_k", ",", "len_v", "=", "q", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "k", ".", "size", "(", "1", ")", ",", "v", ".", "size", "(", "1", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "\n", "# Pass through the pre-attention projection: b x lq x (n*dv)", "\n", "# Separate different heads: b x lq x n x dv", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "# Transpose for attention dot product: b x n x lq x dv", "\n", "q", ",", "k", ",", "v", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ",", "v", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "# For head axis broadcasting.", "\n", "\n", "", "q", ",", "attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "# Transpose to move the head dimension back: b x lq x n x dv", "\n", "# Combine the last two dimensions to concatenate all the heads together: b x lq x (n*dv)", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "-", "1", ")", "\n", "q", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "q", ")", ")", "\n", "q", "+=", "residual", "\n", "\n", "return", "q", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionwiseFeedForward.__init__": [[83, 89], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["def", "__init__", "(", "self", ",", "d_in", ",", "d_hid", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w_1", "=", "nn", ".", "Linear", "(", "d_in", ",", "d_hid", ")", "# position-wise", "\n", "self", ".", "w_2", "=", "nn", ".", "Linear", "(", "d_hid", ",", "d_in", ")", "# position-wise", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_in", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionwiseFeedForward.forward": [[90, 97], ["attention_layer.PositionwiseFeedForward.layer_norm", "attention_layer.PositionwiseFeedForward.w_2", "attention_layer.PositionwiseFeedForward.dropout", "torch.relu", "torch.relu", "torch.relu", "attention_layer.PositionwiseFeedForward.w_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "w_2", "(", "F", ".", "relu", "(", "self", ".", "w_1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "+=", "residual", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionalEncoding.__init__": [[100, 105], ["torch.Module.__init__", "attention_layer.PositionalEncoding.register_buffer", "attention_layer.PositionalEncoding._get_sinusoid_encoding_table"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__", "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionalEncoding._get_sinusoid_encoding_table"], ["    ", "def", "__init__", "(", "self", ",", "d_hid", ",", "n_position", "=", "200", ")", ":", "\n", "        ", "super", "(", "PositionalEncoding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Not a parameter", "\n", "self", ".", "register_buffer", "(", "'pos_table'", ",", "self", ".", "_get_sinusoid_encoding_table", "(", "n_position", ",", "d_hid", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionalEncoding._get_sinusoid_encoding_table": [[106, 118], ["numpy.array", "numpy.sin", "numpy.cos", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "attention_layer.PositionalEncoding._get_sinusoid_encoding_table.get_position_angle_vec"], "methods", ["None"], ["", "def", "_get_sinusoid_encoding_table", "(", "self", ",", "n_position", ",", "d_hid", ")", ":", "\n", "        ", "''' Sinusoid position encoding table '''", "\n", "# TODO: make it with torch instead of numpy", "\n", "\n", "def", "get_position_angle_vec", "(", "position", ")", ":", "\n", "            ", "return", "[", "position", "/", "np", ".", "power", "(", "10000", ",", "2", "*", "(", "hid_j", "//", "2", ")", "/", "d_hid", ")", "for", "hid_j", "in", "range", "(", "d_hid", ")", "]", "\n", "\n", "", "sinusoid_table", "=", "np", ".", "array", "(", "[", "get_position_angle_vec", "(", "pos_i", ")", "for", "pos_i", "in", "range", "(", "n_position", ")", "]", ")", "\n", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", "=", "np", ".", "sin", "(", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", ")", "# dim 2i", "\n", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", "=", "np", ".", "cos", "(", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", ")", "# dim 2i+1", "\n", "\n", "return", "torch", ".", "FloatTensor", "(", "sinusoid_table", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.PositionalEncoding.forward": [[119, 121], ["attention_layer.PositionalEncoding.pos_table[].clone().detach", "attention_layer.PositionalEncoding.pos_table[].clone", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "pos_table", "[", ":", ",", ":", "x", ".", "size", "(", "1", ")", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.CombineLayer.__init__": [[125, 129], ["torch.Module.__init__", "attention_layer.MultiHeadAttention", "attention_layer.PositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["def", "__init__", "(", "self", ",", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "CombineLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "slf_attn", "=", "MultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "pos_ffn", "=", "PositionwiseFeedForward", "(", "d_model", ",", "d_inner", ",", "dropout", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.attention_layer.CombineLayer.forward": [[130, 135], ["attention_layer.CombineLayer.slf_attn", "attention_layer.CombineLayer.pos_ffn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "enc_input", ",", "slf_attn_mask", "=", "None", ")", ":", "\n", "        ", "enc_output", ",", "enc_slf_attn", "=", "self", ".", "slf_attn", "(", "\n", "enc_input", ",", "enc_input", ",", "enc_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "enc_output", "=", "self", ".", "pos_ffn", "(", "enc_output", ")", "\n", "return", "enc_output", ",", "enc_slf_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.__init__": [[6, 105], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.SELU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "freq_bin", "=", "360", ")", ":", "\n", "        ", "super", "(", "MLDRnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Encoder", "\n", "self", ".", "encoder_bn", "=", "nn", ".", "BatchNorm2d", "(", "3", ")", "\n", "self", ".", "encoder_c2_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c3_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "encoder_c1_1", "=", "nn", ".", "Conv2d", "(", "10", ",", "10", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c1_2", "=", "nn", ".", "Conv2d", "(", "10", ",", "10", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "encoder_c2_2", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c2_3", "=", "nn", ".", "Conv2d", "(", "10", ",", "10", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "encoder_c3_2", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c3_3", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "encoder_c2_4", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c3_4", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder_c3_5", "=", "nn", ".", "ConvTranspose2d", "(", "10", ",", "10", ",", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "encoder_final", "=", "nn", ".", "Conv2d", "(", "30", ",", "10", ",", "1", ")", "\n", "\n", "# Decoder", "\n", "self", ".", "decoder_bn", "=", "nn", ".", "BatchNorm2d", "(", "10", ")", "\n", "self", ".", "decoder_c1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", ",", "10", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "decoder_bm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "(", "freq_bin", ",", "1", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", ")", ",", "\n", "nn", ".", "Conv2d", "(", "10", ",", "1", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "decoder_final", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "10", ")", ",", "\n", "nn", ".", "Conv2d", "(", "10", ",", "10", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "10", ",", "1", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n", "# Multi-Dilation ModuleList", "\n", "self", ".", "md_bn_1", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "30", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "30", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "30", ")", "\n", "]", ")", "\n", "self", ".", "md_bn_2", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "BatchNorm2d", "(", "13", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "13", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "13", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "40", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "40", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "40", ")", "\n", "]", ")", "\n", "self", ".", "md_bn_3", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "BatchNorm2d", "(", "23", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "23", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "23", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "50", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "50", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "50", ")", "\n", "]", ")", "\n", "self", ".", "md_c1", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "3", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "30", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "30", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "30", ",", "10", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "]", ")", "\n", "self", ".", "md_c2", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "13", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "13", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "13", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "40", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "40", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "40", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", "\n", "\n", "]", ")", "\n", "self", ".", "md_c3", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "23", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "23", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "23", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "50", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "50", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", ",", "\n", "nn", ".", "Conv2d", "(", "50", ",", "10", ",", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", "\n", "]", ")", "\n", "self", ".", "md_act1", "=", "nn", ".", "SELU", "(", ")", "\n", "self", ".", "md_act2", "=", "nn", ".", "SELU", "(", ")", "\n", "self", ".", "md_act3", "=", "nn", ".", "SELU", "(", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.encoder": [[106, 147], ["multi_dr.MLDRnet.encoder_bn", "multi_dr.MLDRnet.encoder_c2_1", "multi_dr.MLDRnet.encoder_c3_1", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.encoder_c1_1", "multi_dr.MLDRnet.encoder_c1_2", "multi_dr.MLDRnet.encoder_c2_2", "multi_dr.MLDRnet.encoder_c2_3", "multi_dr.MLDRnet.encoder_c3_2", "multi_dr.MLDRnet.encoder_c3_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.multi_dilation", "multi_dr.MLDRnet.encoder_c2_4", "multi_dr.MLDRnet.encoder_c3_4", "multi_dr.MLDRnet.encoder_c3_5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "multi_dr.MLDRnet.encoder_final"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation"], ["", "def", "encoder", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder_bn", "(", "x", ")", "\n", "f1", "=", "x", "\n", "f2", "=", "self", ".", "encoder_c2_1", "(", "f1", ")", "\n", "f3", "=", "self", ".", "encoder_c3_1", "(", "f2", ")", "\n", "# print(\"f1 f2 f3:\", f1.shape, f2.shape, f3.shape)", "\n", "f1", "=", "self", ".", "multi_dilation", "(", "f1", ",", "0", ")", "\n", "f2", "=", "self", ".", "multi_dilation", "(", "f2", ",", "1", ")", "\n", "f3", "=", "self", ".", "multi_dilation", "(", "f3", ",", "2", ")", "\n", "# print(\"f1 f2 f3:\", f1.shape, f2.shape, f3.shape)", "\n", "\n", "f1_2", "=", "self", ".", "encoder_c1_1", "(", "f1", ")", "\n", "f1_3", "=", "self", ".", "encoder_c1_2", "(", "f1_2", ")", "\n", "# print(\"f1_3\", f1_3.shape)", "\n", "\n", "f2_1", "=", "self", ".", "encoder_c2_2", "(", "f2", ")", "\n", "f2_3", "=", "self", ".", "encoder_c2_3", "(", "f2", ")", "\n", "# print(\"f2_1 f2_3\", f2_1.shape, f2_3.shape)", "\n", "\n", "f3_2", "=", "self", ".", "encoder_c3_2", "(", "f3", ")", "\n", "f3_1", "=", "self", ".", "encoder_c3_3", "(", "f3_2", ")", "\n", "# print(\"f3_2 f3_1\", f3_2.shape, f3_1.shape)", "\n", "\n", "f1", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2_1", ",", "f3_1", "]", ",", "dim", "=", "1", ")", "\n", "f2", "=", "torch", ".", "cat", "(", "[", "f2", ",", "f1_2", ",", "f3_2", "]", ",", "dim", "=", "1", ")", "\n", "f3", "=", "torch", ".", "cat", "(", "[", "f3", ",", "f1_3", ",", "f2_3", "]", ",", "dim", "=", "1", ")", "\n", "# print(\"f1 f2 f3:\", f1.shape, f2.shape, f3.shape)", "\n", "\n", "f1", "=", "self", ".", "multi_dilation", "(", "f1", ",", "3", ")", "\n", "f2", "=", "self", ".", "multi_dilation", "(", "f2", ",", "4", ")", "\n", "f3", "=", "self", ".", "multi_dilation", "(", "f3", ",", "5", ")", "\n", "# print(\"f1 f2 f3:\", f1.shape, f2.shape, f3.shape)", "\n", "\n", "f2", "=", "self", ".", "encoder_c2_4", "(", "f2", ")", "\n", "f3", "=", "self", ".", "encoder_c3_4", "(", "f3", ")", "\n", "f3", "=", "self", ".", "encoder_c3_5", "(", "f3", ")", "\n", "# print(\"f1 f2 f3:\", f1.shape, f2.shape, f3.shape)", "\n", "final_x", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2", ",", "f3", "]", ",", "dim", "=", "1", ")", "\n", "final_x", "=", "self", ".", "encoder_final", "(", "final_x", ")", "\n", "# print(\"final_x:\", final_x.shape)", "\n", "return", "final_x", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.decoder": [[148, 159], ["multi_dr.MLDRnet.decoder_bn", "multi_dr.MLDRnet.decoder_c1", "multi_dr.MLDRnet.decoder_bm", "multi_dr.MLDRnet.decoder_final", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "decoder", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "decoder_bn", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder_c1", "(", "x", ")", "\n", "\n", "bm", "=", "self", ".", "decoder_bm", "(", "x", ")", "\n", "# print(\"bm:\", bm.shape)", "\n", "\n", "final_x", "=", "self", ".", "decoder_final", "(", "x", ")", "\n", "final_x", "=", "torch", ".", "cat", "(", "[", "bm", ",", "final_x", "]", ",", "dim", "=", "-", "2", ")", "\n", "# print(\"final_x\", final_x.shape)", "\n", "return", "final_x", ",", "bm", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.multi_dilation": [[161, 181], ["multi_dr.MLDRnet.md_act1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "multi_dr.MLDRnet.md_act2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "multi_dr.MLDRnet.md_act3"], "methods", ["None"], ["", "def", "multi_dilation", "(", "self", ",", "x", ",", "i", ")", ":", "\n", "        ", "x0", "=", "x", "\n", "x1", "=", "self", ".", "md_bn_1", "[", "i", "]", "(", "x0", ")", "\n", "x1", "=", "self", ".", "md_c1", "[", "i", "]", "(", "x1", ")", "\n", "x1", "=", "self", ".", "md_act1", "(", "x1", ")", "\n", "# print(\"x1:\", x1.shape)", "\n", "\n", "x2", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", "]", ",", "dim", "=", "1", ")", "\n", "x2", "=", "self", ".", "md_bn_2", "[", "i", "]", "(", "x2", ")", "\n", "x2", "=", "self", ".", "md_c2", "[", "i", "]", "(", "x2", ")", "\n", "x2", "=", "self", ".", "md_act2", "(", "x2", ")", "\n", "# print(\"x2:\", x2.shape)", "\n", "\n", "x3", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", ",", "x2", "]", ",", "dim", "=", "1", ")", "\n", "x3", "=", "self", ".", "md_bn_3", "[", "i", "]", "(", "x3", ")", "\n", "x3", "=", "self", ".", "md_c3", "[", "i", "]", "(", "x3", ")", "\n", "x3", "=", "self", ".", "md_act3", "(", "x3", ")", "\n", "# print(\"x3:\", x3.shape)", "\n", "\n", "return", "x3", "\n", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.forward": [[182, 189], ["multi_dr.MLDRnet.encoder", "multi_dr.MLDRnet.decoder", "multi_dr.MLDRnet.softmax"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.encoder", "home.repos.pwc.inspect_result.retrocirce_tonet.model.multi_dr.MLDRnet.decoder"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "output_pre", ",", "bm", "=", "self", ".", "decoder", "(", "x", ")", "\n", "output", "=", "self", ".", "softmax", "(", "output_pre", ")", "\n", "# print(\"output bm:\", output.shape, bm.shape)", "\n", "# exit()", "\n", "return", "output", ",", "output_pre", "", "", "", ""]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__": [[6, 30], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.SELU", "torch.SELU", "torch.SELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.SELU", "torch.SELU", "torch.SELU"], "methods", ["home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MCDNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mcdnn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "360", "*", "3", ",", "2048", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "1024", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "360", ")", "\n", ")", "\n", "self", ".", "bm_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "360", "*", "3", ",", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "128", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "SELU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.retrocirce_tonet.model.mcdnn.MCDNN.forward": [[32, 46], ["x.permute.permute.view", "x.permute.permute.permute", "mcdnn.MCDNN.mcdnn", "mcdnn.MCDNN.bm_layer", "torch.cat.permute", "torch.cat.permute", "torch.cat.permute", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "bm.unsqueeze.unsqueeze.permute", "bm.unsqueeze.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# [bs, 3, f, t]", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "x", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# [bs, t, f * 3]", "\n", "output_pre", "=", "self", ".", "mcdnn", "(", "x", ")", "\n", "bm", "=", "self", ".", "bm_layer", "(", "x", ")", "\n", "output_pre", "=", "output_pre", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "output_pre", "=", "output_pre", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "bm", "=", "bm", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "bm", "=", "bm", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "output_pre", "=", "torch", ".", "cat", "(", "(", "bm", ",", "output_pre", ")", ",", "dim", "=", "2", ")", "\n", "output", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "output_pre", ")", "\n", "\n", "return", "output", ",", "output_pre", "", "", "", ""]]}