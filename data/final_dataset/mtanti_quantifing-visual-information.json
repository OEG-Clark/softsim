{"home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.config.raw_data_dir": [[3, 5], ["None"], "function", ["None"], ["def", "raw_data_dir", "(", "dataset_name", ")", ":", "\n", "    ", "return", "'/media/mtanti/1600F6D3236FB8C7/phd/datasets/capgen/{}/karpathy'", ".", "format", "(", "dataset_name", ")", "#Karpathy raw data expected (http://cs.stanford.edu/people/karpathy/deepimagesent/)", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.ProgressBar.__init__": [[16, 23], ["ValueError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_value", ",", "perc_inc", ")", ":", "\n", "        ", "if", "perc_inc", "<=", "0", "or", "100", "%", "perc_inc", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'{} is not a factor of 100.'", ".", "format", "(", "perc_inc", ")", ")", "\n", "", "self", ".", "curr_value", "=", "0", "\n", "self", ".", "max_value", "=", "max_value", "\n", "self", ".", "perc_inc", "=", "perc_inc", "\n", "self", ".", "last_perc_shown", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.ProgressBar.reset": [[24, 27], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "curr_value", "=", "0", "\n", "self", ".", "last_perc_shown", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.ProgressBar.inc_value": [[28, 40], ["builtins.int", "ValueError", "builtins.range", "print", "print"], "methods", ["None"], ["", "def", "inc_value", "(", "self", ",", "amount", "=", "1", ")", ":", "\n", "        ", "self", ".", "curr_value", "+=", "amount", "\n", "if", "self", ".", "curr_value", ">", "self", ".", "max_value", ":", "\n", "            ", "raise", "ValueError", "(", "'Current value {} has been increased beyond maximum value {} after being incremented by {}.'", ".", "format", "(", "self", ".", "curr_value", ",", "self", ".", "max_value", ",", "amount", ")", ")", "\n", "", "curr_perc", "=", "int", "(", "self", ".", "curr_value", "/", "self", ".", "max_value", "*", "100", ")", "\n", "if", "curr_perc", ">=", "self", ".", "last_perc_shown", "+", "self", ".", "perc_inc", ":", "\n", "            ", "for", "p", "in", "range", "(", "self", ".", "last_perc_shown", "+", "self", ".", "perc_inc", ",", "curr_perc", "+", "1", ",", "self", ".", "perc_inc", ")", ":", "\n", "                ", "if", "self", ".", "last_perc_shown", "!=", "0", ":", "\n", "                    ", "print", "(", "' {}%'", ".", "format", "(", "p", ")", ",", "end", "=", "''", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'{}%'", ".", "format", "(", "p", ")", ",", "end", "=", "''", ")", "\n", "", "self", ".", "last_perc_shown", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.ProgressBar.width": [[41, 45], ["len", "builtins.range"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "width", "(", "perc_inc", ")", ":", "\n", "        ", "all_percs", "=", "' '", ".", "join", "(", "'{}%'", ".", "format", "(", "p", ")", "for", "p", "in", "range", "(", "0", "+", "perc_inc", ",", "100", "+", "1", ",", "perc_inc", ")", ")", "\n", "return", "len", "(", "all_percs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.Timer.__init__": [[74, 76], ["timeit.default_timer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.Timer.restart": [[77, 79], ["timeit.default_timer"], "methods", ["None"], ["", "def", "restart", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.Timer.get_duration": [[80, 82], ["builtins.round", "timeit.default_timer"], "methods", ["None"], ["", "def", "get_duration", "(", "self", ")", ":", "\n", "        ", "return", "round", "(", "timeit", ".", "default_timer", "(", ")", "-", "self", ".", "start_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.create_dir": [[47, 53], ["os.makedirs", "os.makedirs"], "function", ["None"], ["", "", "def", "create_dir", "(", "path", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "            ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.file_exists": [[55, 57], ["os.path.isfile", "os.path.isfile"], "function", ["None"], ["", "", "", "def", "file_exists", "(", "path", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "isfile", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.format_duration": [[59, 70], ["divmod", "divmod"], "function", ["None"], ["", "def", "format_duration", "(", "seconds", ")", ":", "\n", "    ", "remainder", "=", "seconds", "\n", "(", "hours", ",", "remainder", ")", "=", "divmod", "(", "remainder", ",", "60", "*", "60", ")", "\n", "(", "minutes", ",", "remainder", ")", "=", "divmod", "(", "remainder", ",", "60", ")", "\n", "\n", "if", "hours", ">", "0", ":", "\n", "        ", "return", "'{:>2}h:{:>2}m:{:>2}s'", ".", "format", "(", "hours", ",", "minutes", ",", "remainder", ")", "\n", "", "elif", "minutes", ">", "0", ":", "\n", "        ", "return", "'    {:>2}m:{:>2}s'", ".", "format", "(", "minutes", ",", "remainder", ")", "\n", "", "else", ":", "\n", "        ", "return", "'        {:>2}s'", ".", "format", "(", "remainder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.formatted_clock": [[84, 86], ["time.strftime"], "function", ["None"], ["", "", "def", "formatted_clock", "(", ")", ":", "\n", "    ", "return", "time", ".", "strftime", "(", "'%Y/%m/%d %H:%M:%S'", ")", "", "", ""]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.analyse_retention_output_jsd.jsd": [[20, 23], ["scipy.stats.entropy", "scipy.stats.entropy"], "function", ["None"], ["def", "jsd", "(", "p", ",", "q", ")", ":", "\n", "    ", "m", "=", "(", "p", "+", "q", ")", "/", "2", "\n", "return", "(", "stats", ".", "entropy", "(", "p", ",", "m", ")", "+", "stats", ".", "entropy", "(", "q", ",", "m", ")", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.__init__": [[14, 21], ["sum", "list", "builtins.range", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "caption_groups", ",", "images", "=", "None", ",", "image_filenames", "=", "None", ",", "indexes", "=", "None", ")", ":", "\n", "        ", "self", ".", "indexes", "=", "list", "(", "range", "(", "len", "(", "caption_groups", ")", ")", ")", "if", "indexes", "is", "None", "else", "indexes", "\n", "self", ".", "caption_groups", "=", "caption_groups", "\n", "self", ".", "first_captions", "=", "[", "group", "[", "0", "]", "for", "group", "in", "caption_groups", "]", "\n", "self", ".", "images", "=", "images", "\n", "self", ".", "image_filenames", "=", "image_filenames", "\n", "self", ".", "size", "=", "sum", "(", "len", "(", "group", ")", "for", "group", "in", "caption_groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.shuffle": [[22, 33], ["numpy.random.randint", "numpy.random.RandomState", "numpy.random.RandomState.seed", "numpy.random.RandomState.shuffle", "numpy.random.RandomState.seed", "numpy.random.RandomState.shuffle", "numpy.random.RandomState.seed", "numpy.random.RandomState.shuffle"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.shuffle", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.shuffle", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.shuffle"], ["", "def", "shuffle", "(", "self", ")", ":", "\n", "        ", "seed", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "0xFFFFFFFF", ",", "dtype", "=", "np", ".", "uint32", ")", "\n", "rand", "=", "np", ".", "random", ".", "RandomState", "(", ")", "\n", "\n", "rand", ".", "seed", "(", "seed", ")", "\n", "rand", ".", "shuffle", "(", "self", ".", "indexes", ")", "\n", "rand", ".", "seed", "(", "seed", ")", "\n", "rand", ".", "shuffle", "(", "self", ".", "caption_groups", ")", "\n", "if", "self", ".", "images", "is", "not", "None", ":", "\n", "            ", "rand", ".", "seed", "(", "seed", ")", "\n", "rand", ".", "shuffle", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.sublist": [[34, 39], ["data.DataSource"], "methods", ["None"], ["", "", "def", "sublist", "(", "self", ",", "groups_prefix_size", ")", ":", "\n", "        ", "return", "DataSource", "(", "\n", "caption_groups", "=", "self", ".", "caption_groups", "[", ":", "groups_prefix_size", "]", ",", "\n", "images", "=", "self", ".", "images", "[", ":", "groups_prefix_size", "]", "if", "self", ".", "images", "is", "not", "None", "else", "None", ",", "\n", "indexes", "=", "self", ".", "indexes", "[", ":", "groups_prefix_size", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.first_caption_only": [[41, 46], ["data.DataSource"], "methods", ["None"], ["", "def", "first_caption_only", "(", "self", ")", ":", "\n", "        ", "return", "DataSource", "(", "\n", "caption_groups", "=", "[", "[", "group", "[", "0", "]", "]", "for", "group", "in", "self", ".", "caption_groups", "]", ",", "\n", "images", "=", "self", ".", "images", "if", "self", ".", "images", "is", "not", "None", "else", "None", ",", "\n", "indexes", "=", "self", ".", "indexes", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.text_only": [[48, 52], ["data.DataSource"], "methods", ["None"], ["", "def", "text_only", "(", "self", ")", ":", "\n", "        ", "return", "DataSource", "(", "\n", "caption_groups", "=", "self", ".", "caption_groups", ",", "\n", "indexes", "=", "self", ".", "indexes", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.get_vocab": [[54, 66], ["collections.Counter", "sorted", "collections.Counter.keys", "sorted.pop", "sorted"], "methods", ["None"], ["", "def", "get_vocab", "(", "self", ",", "min_token_freq", ")", ":", "\n", "        ", "all_tokens", "=", "(", "token", "for", "cap_group", "in", "self", ".", "caption_groups", "for", "cap", "in", "cap_group", "for", "token", "in", "cap", ")", "\n", "token_freqs", "=", "collections", ".", "Counter", "(", "all_tokens", ")", "\n", "vocab", "=", "sorted", "(", "token_freqs", ".", "keys", "(", ")", ",", "key", "=", "lambda", "token", ":", "(", "-", "token_freqs", "[", "token", "]", ",", "token", ")", ")", "\n", "while", "token_freqs", "[", "vocab", "[", "-", "1", "]", "]", "<", "min_token_freq", ":", "\n", "            ", "vocab", ".", "pop", "(", ")", "\n", "", "vocab", "=", "[", "'<EDG>'", ",", "'<UNK>'", "]", "+", "sorted", "(", "vocab", ")", "\n", "\n", "assert", "vocab", "[", "EDGE_INDEX", "]", "==", "'<EDG>'", "\n", "assert", "vocab", "[", "UNKNOWN_INDEX", "]", "==", "'<UNK>'", "\n", "\n", "return", "vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.ProcessedCaptions.__init__": [[70, 74], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prefixes_indexes", ",", "prefixes_lens", ",", "targets_indexes", ")", ":", "\n", "        ", "self", ".", "prefixes_indexes", "=", "prefixes_indexes", "\n", "self", ".", "prefixes_lens", "=", "prefixes_lens", "\n", "self", ".", "targets_indexes", "=", "targets_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset.__init__": [[78, 96], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "min_token_freq", "=", "None", ",", "training_datasource", "=", "None", ",", "validation_datasource", "=", "None", ",", "testing_datasource", "=", "None", ")", ":", "\n", "        ", "self", ".", "min_token_freq", "=", "min_token_freq", "\n", "self", ".", "training_datasource", "=", "training_datasource", "\n", "self", ".", "validation_datasource", "=", "validation_datasource", "\n", "self", ".", "testing_datasource", "=", "testing_datasource", "\n", "self", ".", "loaded", "=", "False", "\n", "\n", "self", ".", "vocab", "=", "None", "\n", "self", ".", "vocab_size", "=", "None", "\n", "self", ".", "token_to_index", "=", "None", "\n", "self", ".", "index_to_token", "=", "None", "\n", "\n", "self", ".", "training_images", "=", "None", "\n", "self", ".", "training_proccaps", "=", "None", "\n", "self", ".", "validation_images", "=", "None", "\n", "self", ".", "validation_proccaps", "=", "None", "\n", "self", ".", "testing_images", "=", "None", "\n", "self", ".", "testing_proccaps", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset.minimal_load": [[98, 109], ["len", "builtins.open", "json.loads", "f.read", "enumerate", "enumerate"], "methods", ["None"], ["", "def", "minimal_load", "(", "self", ",", "data_save_dir", ")", ":", "\n", "        ", "with", "open", "(", "data_save_dir", "+", "'/vocab.json'", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "vocab", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "", "assert", "vocab", "[", "EDGE_INDEX", "]", "==", "'<EDG>'", "\n", "assert", "vocab", "[", "UNKNOWN_INDEX", "]", "==", "'<UNK>'", "\n", "\n", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "vocab_size", "=", "len", "(", "self", ".", "vocab", ")", "\n", "self", ".", "token_to_index", "=", "{", "token", ":", "i", "for", "(", "i", ",", "token", ")", "in", "enumerate", "(", "self", ".", "vocab", ")", "}", "\n", "self", ".", "index_to_token", "=", "{", "i", ":", "token", "for", "(", "i", ",", "token", ")", "in", "enumerate", "(", "self", ".", "vocab", ")", "}", "\n", "self", ".", "loaded", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset.minimal_save": [[111, 114], ["builtins.open", "print", "builtins.str", "json.dumps"], "methods", ["None"], ["", "def", "minimal_save", "(", "self", ",", "data_save_dir", ")", ":", "\n", "        ", "with", "open", "(", "data_save_dir", "+", "'/vocab.json'", ",", "'w'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "print", "(", "str", "(", "json", ".", "dumps", "(", "self", ".", "vocab", ")", ")", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset.process": [[116, 135], ["len", "data.Dataset._process_captions", "ValueError", "ValueError", "data.Dataset.training_datasource.get_vocab", "data.Dataset._process_captions", "data.Dataset._process_captions", "enumerate", "enumerate"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset._process_captions", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.get_vocab", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset._process_captions", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset._process_captions"], ["", "", "def", "process", "(", "self", ",", "vocab", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "training_datasource", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'Cannot process a dataset without a training data source'", ")", "\n", "", "if", "self", ".", "min_token_freq", "is", "None", "==", "vocab", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'Cannot set or leave out both min_token_freq and vocab'", ")", "\n", "\n", "", "if", "vocab", "is", "None", ":", "\n", "            ", "self", ".", "vocab", "=", "self", ".", "training_datasource", ".", "get_vocab", "(", "self", ".", "min_token_freq", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "vocab", "=", "vocab", "\n", "", "self", ".", "vocab_size", "=", "len", "(", "self", ".", "vocab", ")", "\n", "self", ".", "token_to_index", "=", "{", "token", ":", "i", "for", "(", "i", ",", "token", ")", "in", "enumerate", "(", "self", ".", "vocab", ")", "}", "\n", "self", ".", "index_to_token", "=", "{", "i", ":", "token", "for", "(", "i", ",", "token", ")", "in", "enumerate", "(", "self", ".", "vocab", ")", "}", "\n", "\n", "(", "self", ".", "training_proccaps", ",", "self", ".", "training_images", ")", "=", "self", ".", "_process_captions", "(", "self", ".", "training_datasource", ")", "\n", "if", "self", ".", "validation_datasource", "is", "not", "None", ":", "\n", "            ", "(", "self", ".", "validation_proccaps", ",", "self", ".", "validation_images", ")", "=", "self", ".", "_process_captions", "(", "self", ".", "validation_datasource", ")", "\n", "", "if", "self", ".", "testing_datasource", "is", "not", "None", ":", "\n", "            ", "(", "self", ".", "testing_proccaps", ",", "self", ".", "testing_images", ")", "=", "self", ".", "_process_captions", "(", "self", ".", "testing_datasource", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.Dataset._process_captions": [[137, 159], ["list", "list", "list", "enumerate", "max", "numpy.zeros", "numpy.array", "numpy.zeros", "enumerate", "data.ProcessedCaptions", "list.append", "list.append", "numpy.array", "list.append", "data.Dataset.token_to_index.get", "len", "len", "len"], "methods", ["None"], ["", "", "def", "_process_captions", "(", "self", ",", "datasource", ")", ":", "\n", "        ", "raw_indexes", "=", "list", "(", ")", "\n", "raw_lens", "=", "list", "(", ")", "\n", "images", "=", "list", "(", ")", "\n", "for", "(", "i", ",", "cap_group", ")", "in", "enumerate", "(", "datasource", ".", "caption_groups", ")", ":", "\n", "            ", "for", "cap", "in", "cap_group", ":", "\n", "                ", "if", "datasource", ".", "images", "is", "not", "None", ":", "\n", "                    ", "images", ".", "append", "(", "datasource", ".", "images", "[", "i", "]", ")", "\n", "", "cap_indexes", "=", "[", "self", ".", "token_to_index", ".", "get", "(", "token", ",", "UNKNOWN_INDEX", ")", "for", "token", "in", "cap", "]", "\n", "raw_indexes", ".", "append", "(", "cap_indexes", ")", "\n", "raw_lens", ".", "append", "(", "len", "(", "cap", ")", "+", "1", ")", "#add 1 due to edge token", "\n", "\n", "", "", "max_len", "=", "max", "(", "raw_lens", ")", "\n", "\n", "prefixes_indexes", "=", "np", ".", "zeros", "(", "[", "datasource", ".", "size", ",", "max_len", "]", ",", "np", ".", "int32", ")", "\n", "prefixes_lens", "=", "np", ".", "array", "(", "raw_lens", ",", "np", ".", "int32", ")", "\n", "targets_indexes", "=", "np", ".", "zeros", "(", "[", "datasource", ".", "size", ",", "max_len", "]", ",", "np", ".", "int32", ")", "\n", "for", "(", "i", ",", "cap_indexes", ")", "in", "enumerate", "(", "raw_indexes", ")", ":", "\n", "            ", "prefixes_indexes", "[", "i", ",", ":", "len", "(", "cap_indexes", ")", "+", "1", "]", "=", "[", "EDGE_INDEX", "]", "+", "cap_indexes", "\n", "targets_indexes", "[", "i", ",", ":", "len", "(", "cap_indexes", ")", "+", "1", "]", "=", "cap_indexes", "+", "[", "EDGE_INDEX", "]", "\n", "\n", "", "return", "(", "ProcessedCaptions", "(", "prefixes_indexes", ",", "prefixes_lens", ",", "targets_indexes", ")", ",", "np", ".", "array", "(", "images", ")", "if", "datasource", ".", "images", "is", "not", "None", "else", "None", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.helper_datasources.DataSources.__init__": [[16, 48], ["config.raw_data_dir", "enumerate", "data.DataSource", "data.DataSource", "data.DataSource", "builtins.open", "builtins.zip", "[].append", "[].append", "[].append", "json.load", "scipy.io.loadmat", "list", "list", "list", "list", "list", "list", "list", "list", "list", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.config.raw_data_dir"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ")", ":", "\n", "        ", "raw_data_dir", "=", "config", ".", "raw_data_dir", "(", "dataset_name", ")", "\n", "\n", "with", "open", "(", "raw_data_dir", "+", "'/dataset.json'", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "captions_f", ":", "\n", "            ", "captions_data", "=", "json", ".", "load", "(", "captions_f", ")", "[", "'images'", "]", "\n", "", "features", "=", "scipy", ".", "io", ".", "loadmat", "(", "raw_data_dir", "+", "'/vgg_feats.mat'", ")", "[", "'feats'", "]", ".", "T", "#image features matrix are transposed", "\n", "\n", "raw_dataset", "=", "{", "\n", "'train'", ":", "{", "'filenames'", ":", "list", "(", ")", ",", "'images'", ":", "list", "(", ")", ",", "'captions'", ":", "list", "(", ")", "}", ",", "\n", "'val'", ":", "{", "'filenames'", ":", "list", "(", ")", ",", "'images'", ":", "list", "(", ")", ",", "'captions'", ":", "list", "(", ")", "}", ",", "\n", "'test'", ":", "{", "'filenames'", ":", "list", "(", ")", ",", "'images'", ":", "list", "(", ")", ",", "'captions'", ":", "list", "(", ")", "}", ",", "\n", "}", "\n", "for", "(", "image_id", ",", "(", "caption_data", ",", "image", ")", ")", "in", "enumerate", "(", "zip", "(", "captions_data", ",", "features", ")", ")", ":", "\n", "            ", "split", "=", "caption_data", "[", "'split'", "]", "\n", "if", "split", "==", "'restval'", ":", "\n", "                ", "continue", "\n", "", "filename", "=", "caption_data", "[", "'filename'", "]", "\n", "caption_group", "=", "[", "caption", "[", "'tokens'", "]", "for", "caption", "in", "caption_data", "[", "'sentences'", "]", "]", "\n", "#image = image/np.linalg.norm(image)", "\n", "\n", "raw_dataset", "[", "split", "]", "[", "'filenames'", "]", ".", "append", "(", "filename", ")", "\n", "raw_dataset", "[", "split", "]", "[", "'images'", "]", ".", "append", "(", "image", ")", "\n", "raw_dataset", "[", "split", "]", "[", "'captions'", "]", ".", "append", "(", "caption_group", ")", "\n", "\n", "", "if", "config", ".", "debug", ":", "\n", "            ", "for", "split", "in", "raw_dataset", ":", "\n", "                ", "for", "column", "in", "raw_dataset", "[", "split", "]", ":", "\n", "                    ", "raw_dataset", "[", "split", "]", "[", "column", "]", "=", "raw_dataset", "[", "split", "]", "[", "column", "]", "[", ":", "500", "]", "\n", "\n", "", "", "", "self", ".", "train", "=", "data", ".", "DataSource", "(", "caption_groups", "=", "raw_dataset", "[", "'train'", "]", "[", "'captions'", "]", ",", "images", "=", "np", ".", "array", "(", "raw_dataset", "[", "'train'", "]", "[", "'images'", "]", ")", ",", "image_filenames", "=", "raw_dataset", "[", "'train'", "]", "[", "'filenames'", "]", ")", "\n", "self", ".", "val", "=", "data", ".", "DataSource", "(", "caption_groups", "=", "raw_dataset", "[", "'val'", "]", "[", "'captions'", "]", ",", "images", "=", "np", ".", "array", "(", "raw_dataset", "[", "'val'", "]", "[", "'images'", "]", ")", ",", "image_filenames", "=", "raw_dataset", "[", "'val'", "]", "[", "'filenames'", "]", ")", "\n", "self", ".", "test", "=", "data", ".", "DataSource", "(", "caption_groups", "=", "raw_dataset", "[", "'test'", "]", "[", "'captions'", "]", ",", "images", "=", "np", ".", "array", "(", "raw_dataset", "[", "'test'", "]", "[", "'images'", "]", ")", ",", "image_filenames", "=", "raw_dataset", "[", "'test'", "]", "[", "'filenames'", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.__init__": [[14, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_started": [[17, 19], ["None"], "methods", ["None"], ["", "def", "fit_started", "(", "self", ",", "model", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.epoch_started": [[20, 22], ["None"], "methods", ["None"], ["", "def", "epoch_started", "(", "self", ",", "model", ",", "epoch_num", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.training_started": [[23, 25], ["None"], "methods", ["None"], ["", "def", "training_started", "(", "self", ",", "model", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.minibatch_started": [[26, 28], ["None"], "methods", ["None"], ["", "def", "minibatch_started", "(", "self", ",", "model", ",", "minibatch_num", ",", "num_minibatches", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.minibatch_ended": [[29, 31], ["None"], "methods", ["None"], ["", "def", "minibatch_ended", "(", "self", ",", "model", ",", "minibatch_num", ",", "num_minibatches", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.training_ended": [[32, 34], ["None"], "methods", ["None"], ["", "def", "training_ended", "(", "self", ",", "model", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.validation_started": [[35, 37], ["None"], "methods", ["None"], ["", "def", "validation_started", "(", "self", ",", "model", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.validation_ended": [[38, 40], ["None"], "methods", ["None"], ["", "def", "validation_ended", "(", "self", ",", "model", ",", "validation_loss", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.epoch_ended": [[41, 43], ["None"], "methods", ["None"], ["", "def", "epoch_ended", "(", "self", ",", "model", ",", "epoch_num", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_ended": [[44, 46], ["None"], "methods", ["None"], ["", "def", "fit_ended", "(", "self", ",", "model", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.__init__": [[54, 57], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "beam_width", ")", ":", "\n", "        ", "self", ".", "heap", "=", "list", "(", ")", "\n", "self", ".", "beam_width", "=", "beam_width", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.add": [[59, 63], ["heapq.heappush", "len", "heapq.heappop"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "logprob", ",", "complete", ",", "prefix", ",", "prefix_len", ")", ":", "\n", "        ", "heapq", ".", "heappush", "(", "self", ".", "heap", ",", "(", "logprob", ",", "complete", ",", "prefix", ",", "prefix_len", ")", ")", "\n", "if", "len", "(", "self", ".", "heap", ")", ">", "self", ".", "beam_width", ":", "\n", "            ", "heapq", ".", "heappop", "(", "self", ".", "heap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.__iter__": [[65, 67], ["iter"], "methods", ["None"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "heap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.__init__": [[71, 74], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "val_minibatch_size", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "val_minibatch_size", "=", "val_minibatch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.compile_model": [[77, 79], ["None"], "methods", ["None"], ["", "def", "compile_model", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.init_params": [[82, 84], ["None"], "methods", ["None"], ["", "def", "init_params", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.save_params": [[87, 89], ["None"], "methods", ["None"], ["", "def", "save_params", "(", "self", ",", "param_save_dir", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.load_params": [[92, 94], ["None"], "methods", ["None"], ["", "def", "load_params", "(", "self", ",", "param_save_dir", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.fit": [[97, 101], ["model_base.FitListener", "listener.fit_started", "listener.fit_ended"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_ended"], ["", "def", "fit", "(", "self", ",", "param_save_dir", ",", "listener", "=", "FitListener", "(", ")", ")", ":", "\n", "        ", "listener", ".", "fit_started", "(", "self", ")", "\n", "listener", ".", "fit_ended", "(", "self", ")", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.get_num_params": [[104, 106], ["None"], "methods", ["None"], ["", "def", "get_num_params", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.get_raw_probs": [[109, 111], ["None"], "methods", ["None"], ["", "def", "get_raw_probs", "(", "self", ",", "images", ",", "prefixes", ",", "prefixes_lens", ",", "temperature", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_logprobs": [[114, 152], ["len", "enumerate", "builtins.zip", "unpadded_batch_caps.append", "batch_caps_lens.append", "batch_images.append", "max", "numpy.zeros", "numpy.zeros", "enumerate", "model_base.Model.get_raw_probs", "builtins.zip", "model_base.Model.dataset.token_to_index.get", "len", "len", "builtins.zip", "listener", "len", "len", "len", "cap_logprobs.append", "cap_logprobs.append", "numpy.sum", "numpy.log2", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.get_raw_probs"], ["", "def", "image_caption_logprobs", "(", "self", ",", "images", ",", "captions", ",", "listener", "=", "lambda", "curr_pos", ",", "final_pos", ":", "None", ")", ":", "\n", "        ", "num_batched_caps", "=", "self", ".", "val_minibatch_size", "\n", "\n", "cap_logprobs", "=", "[", "]", "\n", "\n", "unpadded_batch_caps", "=", "[", "]", "\n", "batch_caps_lens", "=", "[", "]", "\n", "batch_images", "=", "[", "]", "\n", "num_ready", "=", "0", "\n", "amount", "=", "len", "(", "captions", ")", "\n", "for", "(", "i", ",", "(", "cap", ",", "img", ")", ")", "in", "enumerate", "(", "zip", "(", "captions", ",", "images", ")", ")", ":", "\n", "            ", "unpadded_batch_caps", ".", "append", "(", "[", "self", ".", "dataset", ".", "token_to_index", ".", "get", "(", "token", ",", "data", ".", "UNKNOWN_INDEX", ")", "for", "token", "in", "cap", "]", ")", "\n", "batch_caps_lens", ".", "append", "(", "len", "(", "cap", ")", "+", "1", ")", "#include edge", "\n", "batch_images", ".", "append", "(", "img", ")", "\n", "if", "len", "(", "unpadded_batch_caps", ")", "==", "num_batched_caps", "or", "i", "==", "len", "(", "captions", ")", "-", "1", ":", "#if batch is full or all captions have been processed", "\n", "                ", "max_len", "=", "max", "(", "batch_caps_lens", ")", "\n", "batch_caps", "=", "np", ".", "zeros", "(", "[", "len", "(", "unpadded_batch_caps", ")", ",", "max_len", "]", ",", "np", ".", "int32", ")", "\n", "batch_targets", "=", "np", ".", "zeros", "(", "[", "len", "(", "unpadded_batch_caps", ")", ",", "max_len", "]", ",", "np", ".", "int32", ")", "\n", "for", "(", "j", ",", "(", "indexes", ",", "cap_len", ")", ")", "in", "enumerate", "(", "zip", "(", "unpadded_batch_caps", ",", "batch_caps_lens", ")", ")", ":", "\n", "                    ", "batch_caps", "[", "j", ",", ":", "cap_len", "]", "=", "[", "data", ".", "EDGE_INDEX", "]", "+", "indexes", "\n", "batch_targets", "[", "j", ",", ":", "cap_len", "]", "=", "indexes", "+", "[", "data", ".", "EDGE_INDEX", "]", "\n", "\n", "", "batch_distributions", "=", "self", ".", "get_raw_probs", "(", "batch_images", ",", "batch_caps", ",", "batch_caps_lens", ",", "1.0", ")", "\n", "\n", "for", "(", "distribution", ",", "targets", ",", "cap_len", ")", "in", "zip", "(", "batch_distributions", ",", "batch_targets", ",", "batch_caps_lens", ")", ":", "\n", "                    ", "probs", "=", "distribution", "[", "np", ".", "arange", "(", "distribution", ".", "shape", "[", "0", "]", ")", ",", "targets", "]", "[", ":", "cap_len", "]", "\n", "if", "0.0", "in", "probs", ":", "\n", "                        ", "cap_logprobs", ".", "append", "(", "np", ".", "inf", ")", "\n", "", "else", ":", "\n", "                        ", "cap_logprobs", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "log2", "(", "probs", ")", ")", ")", "\n", "", "num_ready", "+=", "1", "\n", "listener", "(", "num_ready", ",", "amount", ")", "\n", "\n", "", "del", "unpadded_batch_caps", "[", ":", "]", "\n", "del", "batch_caps_lens", "[", ":", "]", "\n", "del", "batch_images", "[", ":", "]", "\n", "\n", "", "", "return", "cap_logprobs", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_logperplexities": [[155, 164], ["model_base.Model.image_caption_logprobs", "builtins.zip", "len"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_logprobs"], ["", "def", "image_caption_logperplexities", "(", "self", ",", "images", ",", "captions", ",", "listener", "=", "lambda", "curr_pos", ",", "final_pos", ":", "None", ")", ":", "\n", "# Let P = probability of a caption with L words", "\n", "# Let pi = probability of word i in caption", "\n", "# P = p1*...*pL", "\n", "# log P = (log p1) + ... + (log pL)", "\n", "# pplx = 2^(-1/L log P) = 2^(-1/L (log p1 + ... + log pL))", "\n", "# log pplx = -1/L (log p1 + ... + log pL) = -1/L logprob = -logprob/L", "\n", "        ", "logprobs", "=", "self", ".", "image_caption_logprobs", "(", "images", ",", "captions", ",", "listener", ")", "\n", "return", "[", "-", "logprob", "/", "(", "len", "(", "cap", ")", "+", "1", ")", "for", "(", "logprob", ",", "cap", ")", "in", "zip", "(", "logprobs", ",", "captions", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_loggeomean_perplexities": [[167, 175], ["model_base.Model.image_caption_logperplexities", "sum", "numpy.sum", "len", "numpy.isinf", "numpy.isinf"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_logperplexities"], ["", "def", "image_caption_loggeomean_perplexities", "(", "self", ",", "images", ",", "captions", ",", "listener", "=", "lambda", "curr_pos", ",", "final_pos", ":", "None", ")", ":", "\n", "# Let pplxi = perplexity of caption i out of N captions", "\n", "# geomean = (pplx1*...*pplxN)**(1/N)", "\n", "# log geomean = (1/N) log (pplx1*...*pplxN) = (1/N) (log pplx1 + ... + log pplxN) = (logpplx1 + ... + logpplxN)/N", "\n", "        ", "logpplxs", "=", "self", ".", "image_caption_logperplexities", "(", "images", ",", "captions", ",", "listener", ")", "\n", "return", "(", "\n", "np", ".", "sum", "(", "logpplx", "for", "logpplx", "in", "logpplxs", "if", "not", "np", ".", "isinf", "(", "logpplx", ")", ")", "/", "len", "(", "captions", ")", ",", "\n", "sum", "(", "np", ".", "isinf", "(", "logpplx", ")", "for", "logpplx", "in", "logpplxs", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.generate_captions_beamsearch": [[179, 252], ["len", "builtins.range", "model_base._Beam", "model_base._Beam.add", "prev_beams.append", "builtins.range", "max", "numpy.zeros", "enumerate", "model_base.Model.get_raw_probs", "collections.defaultdict", "builtins.zip", "collections.defaultdict.items", "model_base._Beam", "len", "builtins.zip", "grouped_beam_batches[].append", "max", "builtins.zip", "builtins.range", "len", "enumerate", "listener", "curr_beams[].add", "batch_orig_indexes.append", "unpadded_batch_prefixes.append", "batch_prefixes_logprobs.append", "batch_prefixes_lens.append", "batch_images.append", "curr_beams[].add", "curr_beams[].add", "numpy.log2", "numpy.log2"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.add", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.get_raw_probs", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.add", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.add", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base._Beam.add"], ["", "def", "generate_captions_beamsearch", "(", "self", ",", "images", ",", "beam_width", "=", "3", ",", "lower_bound_len", "=", "3", ",", "upper_bound_len", "=", "50", ",", "temperature", "=", "1.0", ",", "listener", "=", "lambda", "curr_pos", ",", "final_pos", ":", "None", ")", ":", "\n", "        ", "num_batched_beams", "=", "self", ".", "val_minibatch_size", "//", "beam_width", "\n", "\n", "num_ready", "=", "0", "\n", "amount", "=", "len", "(", "images", ")", "\n", "is_cap_complete", "=", "[", "False", "]", "*", "amount", "\n", "complete_caps", "=", "[", "None", "]", "*", "amount", "\n", "complete_caps_logprobs", "=", "[", "None", "]", "*", "amount", "\n", "prev_beams", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "amount", ")", ":", "\n", "            ", "beam", "=", "_Beam", "(", "beam_width", ")", "\n", "beam", ".", "add", "(", "0.0", ",", "False", ",", "[", "data", ".", "EDGE_INDEX", "]", ",", "1", ")", "\n", "prev_beams", ".", "append", "(", "beam", ")", "\n", "", "while", "True", ":", "\n", "            ", "curr_beams", "=", "[", "_Beam", "(", "beam_width", ")", "for", "_", "in", "range", "(", "amount", ")", "]", "\n", "batch_orig_indexes", "=", "[", "]", "\n", "unpadded_batch_prefixes", "=", "[", "]", "\n", "batch_prefixes_logprobs", "=", "[", "]", "\n", "batch_prefixes_lens", "=", "[", "]", "\n", "batch_images", "=", "[", "]", "\n", "beams_batched", "=", "0", "\n", "for", "i", "in", "range", "(", "amount", ")", ":", "\n", "                ", "if", "not", "is_cap_complete", "[", "i", "]", ":", "\n", "                    ", "for", "(", "prefix_logprob", ",", "complete", ",", "prefix", ",", "prefix_len", ")", "in", "prev_beams", "[", "i", "]", ":", "\n", "                        ", "if", "complete", "==", "True", ":", "\n", "                            ", "curr_beams", "[", "i", "]", ".", "add", "(", "prefix_logprob", ",", "True", ",", "prefix", ",", "prefix_len", ")", "\n", "", "else", ":", "\n", "                            ", "batch_orig_indexes", ".", "append", "(", "i", ")", "\n", "unpadded_batch_prefixes", ".", "append", "(", "prefix", ")", "\n", "batch_prefixes_logprobs", ".", "append", "(", "prefix_logprob", ")", "\n", "batch_prefixes_lens", ".", "append", "(", "prefix_len", ")", "\n", "batch_images", ".", "append", "(", "images", "[", "i", "]", ")", "\n", "", "", "beams_batched", "+=", "1", "\n", "if", "beams_batched", "==", "num_batched_beams", ":", "\n", "                        ", "break", "\n", "", "", "", "if", "len", "(", "batch_orig_indexes", ")", "==", "0", ":", "\n", "                ", "break", "\n", "\n", "", "max_len", "=", "max", "(", "batch_prefixes_lens", ")", "\n", "batch_prefixes", "=", "np", ".", "zeros", "(", "[", "len", "(", "unpadded_batch_prefixes", ")", ",", "max_len", "]", ",", "np", ".", "int32", ")", "\n", "for", "(", "i", ",", "(", "indexes", ",", "prefix_len", ")", ")", "in", "enumerate", "(", "zip", "(", "unpadded_batch_prefixes", ",", "batch_prefixes_lens", ")", ")", ":", "\n", "                ", "batch_prefixes", "[", "i", ",", ":", "prefix_len", "]", "=", "indexes", "\n", "\n", "", "batch_distributions", "=", "self", ".", "get_raw_probs", "(", "batch_images", ",", "batch_prefixes", ",", "batch_prefixes_lens", ",", "temperature", ")", "\n", "\n", "grouped_beam_batches", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "for", "(", "orig_index", ",", "prefix", ",", "prefix_logprob", ",", "prefix_len", ",", "distribution_series", ")", "in", "zip", "(", "batch_orig_indexes", ",", "unpadded_batch_prefixes", ",", "batch_prefixes_logprobs", ",", "batch_prefixes_lens", ",", "batch_distributions", ")", ":", "\n", "                ", "distribution", "=", "distribution_series", "[", "prefix_len", "-", "1", "]", "\n", "grouped_beam_batches", "[", "orig_index", "]", ".", "append", "(", "(", "prefix", ",", "prefix_logprob", ",", "prefix_len", ",", "distribution", ")", ")", "\n", "\n", "", "for", "(", "orig_index", ",", "beam_group", ")", "in", "grouped_beam_batches", ".", "items", "(", ")", ":", "\n", "                ", "for", "(", "prefix", ",", "prefix_logprob", ",", "prefix_len", ",", "distribution", ")", "in", "beam_group", ":", "\n", "                    ", "for", "(", "next_index", ",", "next_prob", ")", "in", "enumerate", "(", "distribution", ")", ":", "\n", "                        ", "if", "next_index", "==", "data", ".", "UNKNOWN_INDEX", ":", "#skip unknown", "\n", "                            ", "pass", "\n", "", "elif", "next_index", "==", "data", ".", "EDGE_INDEX", ":", "#if next item is the end token then mark prefix as complete and leave out the end token", "\n", "                            ", "if", "prefix_len", ">=", "lower_bound_len", ":", "#only consider terminating the prefix if it has sufficient length", "\n", "                                ", "curr_beams", "[", "orig_index", "]", ".", "add", "(", "prefix_logprob", "+", "np", ".", "log2", "(", "next_prob", ")", ",", "True", ",", "prefix", ",", "prefix_len", ")", "\n", "", "", "else", ":", "#if next item is a non-end token then mark prefix as incomplete (if its length does not exceed the clip length, ignoring start token)", "\n", "                            ", "curr_beams", "[", "orig_index", "]", ".", "add", "(", "prefix_logprob", "+", "np", ".", "log2", "(", "next_prob", ")", ",", "prefix_len", "==", "upper_bound_len", ",", "prefix", "+", "[", "next_index", "]", ",", "prefix_len", "+", "1", ")", "\n", "\n", "", "", "", "(", "best_logprob", ",", "best_complete", ",", "best_prefix", ",", "best_prefix_len", ")", "=", "max", "(", "curr_beams", "[", "orig_index", "]", ")", "\n", "if", "best_complete", "==", "True", ":", "\n", "                    ", "is_cap_complete", "[", "orig_index", "]", "=", "True", "\n", "curr_beams", "[", "orig_index", "]", "=", "None", "\n", "complete_caps", "[", "orig_index", "]", "=", "best_prefix", "[", "1", ":", "best_prefix_len", "]", "\n", "complete_caps_logprobs", "[", "orig_index", "]", "=", "best_logprob", "\n", "num_ready", "+=", "1", "\n", "listener", "(", "num_ready", ",", "amount", ")", "\n", "\n", "", "prev_beams", "[", "orig_index", "]", "=", "curr_beams", "[", "orig_index", "]", "\n", "\n", "", "", "return", "[", "(", "[", "self", ".", "dataset", ".", "index_to_token", "[", "index", "]", "for", "index", "in", "cap", "]", ",", "cap_logprob", ")", "for", "(", "cap", ",", "cap_logprob", ")", "in", "zip", "(", "complete_caps", ",", "complete_caps_logprobs", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.close": [[255, 257], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.__enter__": [[260, 262], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.__exit__": [[265, 267], ["model_base.Model.close"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.close"], ["", "def", "__exit__", "(", "self", ",", "type", ",", "value", ",", "traceback", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.__init__": [[15, 81], ["model_base.Model.__init__", "builtins.dict", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "builtins.super"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "init_method", ",", "min_init_weight", ",", "max_init_weight", ",", "embed_size", ",", "rnn_size", ",", "post_image_size", ",", "post_image_activation", ",", "rnn_type", ",", "learnable_init_state", ",", "multimodal_method", ",", "optimizer", ",", "learning_rate", ",", "normalize_image", ",", "weights_reg_weight", ",", "image_dropout_prob", ",", "post_image_dropout_prob", ",", "embedding_dropout_prob", ",", "rnn_dropout_prob", ",", "max_epochs", ",", "val_minibatch_size", ",", "train_minibatch_size", ")", ":", "\n", "        ", "'''\n        init_method: uniform, normal, xavier_uniform, xavier_normal\n        post_image_activation: none, relu, tanh, swish\n        rnn_type: srnn, gru, lstm\n        multimodal_method: init, pre, par, merge\n        optimizer: adam, rmsprop, adagrad\n        '''", "\n", "super", "(", "NormalModel", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "val_minibatch_size", ")", "\n", "\n", "if", "init_method", "not", "in", "'uniform, normal, xavier_uniform, xavier_normal'", ".", "split", "(", "', '", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid init_method ({})'", ".", "format", "(", "init_method", ")", ")", "\n", "", "if", "post_image_activation", "not", "in", "'none, relu, tanh, swish'", ".", "split", "(", "', '", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid post_image_activation ({})'", ".", "format", "(", "post_image_activation", ")", ")", "\n", "", "if", "rnn_type", "not", "in", "'srnn, gru, lstm'", ".", "split", "(", "', '", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid rnn_type ({})'", ".", "format", "(", "rnn_type", ")", ")", "\n", "", "if", "multimodal_method", "not", "in", "'init, pre, par, merge'", ".", "split", "(", "', '", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid multimodal_method ({})'", ".", "format", "(", "multimodal_method", ")", ")", "\n", "", "if", "optimizer", "not", "in", "'adam, rmsprop, adagrad'", ".", "split", "(", "', '", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid optimizer ({})'", ".", "format", "(", "optimizer", ")", ")", "\n", "", "if", "multimodal_method", "==", "'init'", "and", "rnn_size", "!=", "post_image_size", ":", "\n", "            ", "raise", "ValueError", "(", "'Init multimodal method requires that rnn size and post image size be equal ({} != {})'", ".", "format", "(", "rnn_size", ",", "post_image_size", ")", ")", "\n", "", "if", "multimodal_method", "==", "'pre'", "and", "embed_size", "!=", "post_image_size", ":", "\n", "            ", "raise", "ValueError", "(", "'Pre multimodal method requires that embed size and post image size be equal ({} != {})'", ".", "format", "(", "embed_size", ",", "post_image_size", ")", ")", "\n", "\n", "", "self", ".", "init_method", "=", "init_method", "\n", "self", ".", "min_init_weight", "=", "min_init_weight", "\n", "self", ".", "max_init_weight", "=", "max_init_weight", "\n", "self", ".", "embed_size", "=", "embed_size", "\n", "self", ".", "rnn_size", "=", "rnn_size", "\n", "self", ".", "image_size", "=", "4096", "\n", "self", ".", "post_image_size", "=", "post_image_size", "\n", "self", ".", "post_image_activation", "=", "post_image_activation", "\n", "self", ".", "rnn_type", "=", "rnn_type", "\n", "self", ".", "learnable_init_state", "=", "learnable_init_state", "\n", "self", ".", "multimodal_method", "=", "multimodal_method", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "normalize_image", "=", "normalize_image", "\n", "self", ".", "weights_reg_weight", "=", "weights_reg_weight", "\n", "self", ".", "image_dropout_prob", "=", "image_dropout_prob", "\n", "self", ".", "post_image_dropout_prob", "=", "post_image_dropout_prob", "\n", "self", ".", "embedding_dropout_prob", "=", "embedding_dropout_prob", "\n", "self", ".", "rnn_dropout_prob", "=", "rnn_dropout_prob", "\n", "self", ".", "max_epochs", "=", "max_epochs", "\n", "self", ".", "train_minibatch_size", "=", "train_minibatch_size", "\n", "\n", "self", ".", "prefixes", "=", "None", "\n", "self", ".", "prefixes_lens", "=", "None", "\n", "self", ".", "images", "=", "None", "\n", "self", ".", "temperature", "=", "None", "\n", "self", ".", "dropout", "=", "None", "\n", "self", ".", "targets", "=", "None", "\n", "self", ".", "post_images", "=", "None", "\n", "self", ".", "embedded_seq", "=", "None", "\n", "self", ".", "prefix_vectors", "=", "None", "\n", "self", ".", "predictions", "=", "None", "\n", "self", ".", "grad_wrt_img", "=", "None", "\n", "self", ".", "grad_wrt_prevtoken", "=", "None", "\n", "self", ".", "logits", "=", "None", "\n", "self", ".", "loss", "=", "None", "\n", "self", ".", "session", "=", "None", "\n", "self", ".", "train_step", "=", "None", "\n", "self", ".", "initializer", "=", "None", "\n", "self", ".", "param_setters", "=", "dict", "(", ")", "\n", "self", ".", "num_params", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.compile_model": [[84, 220], ["tensorflow.contrib.layers.xavier_initializer", "tensorflow.Graph().as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.cast", "tensorflow.cond", "tensorflow.cond", "tensorflow.cond", "tensorflow.cond", "tensorflow.trainable_variables", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.get_default_graph().finalize", "len", "tensorflow.zeros", "tensorflow.shape", "tensorflow.shape", "tensorflow.sequence_mask", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.gradients", "tensorflow.random_uniform", "tensorflow.Graph", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.assign", "tensorflow.gather_nd", "tensorflow.gradients", "tensorflow.get_default_graph", "tensorflow.clip_by_value", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.expand_dims", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.nn.dynamic_rnn", "tensorflow.concat", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.stack", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.reshape", "tensorflow.nn.tanh", "tensorflow.tile", "tensorflow.concat", "tensorflow.contrib.rnn.BasicRNNCell", "tensorflow.tile", "tensorflow.tile", "tensorflow.contrib.rnn.LSTMStateTuple", "v.name.split", "tensorflow.contrib.layers.xavier_initializer.", "tensorflow.norm", "tensorflow.concat", "tensorflow.contrib.rnn.GRUCell", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.range", "tensorflow.reshape", "tensorflow.nn.sigmoid", "tensorflow.contrib.rnn.BasicLSTMCell"], "methods", ["None"], ["", "def", "compile_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "init_method", "in", "[", "'xavier_uniform'", ",", "'xavier_normal'", "]", ":", "\n", "            ", "xavier", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", "uniform", "=", "(", "self", ".", "init_method", "==", "'xavier_uniform'", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "def", "init", "(", "shape", ",", "dtype", "=", "None", ",", "partition_info", "=", "None", ")", ":", "\n", "            ", "if", "len", "(", "shape", ")", "==", "1", ":", "\n", "                ", "return", "tf", ".", "zeros", "(", "shape", ",", "dtype", "=", "dtype", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "init_method", "==", "'uniform'", ":", "\n", "                    ", "return", "tf", ".", "random_uniform", "(", "shape", ",", "self", ".", "min_init_weight", ",", "self", ".", "max_init_weight", ",", "dtype", "=", "dtype", ")", "\n", "", "elif", "self", ".", "init_method", "==", "'normal'", ":", "\n", "                    ", "return", "tf", ".", "clip_by_value", "(", "tf", ".", "random_normal", "(", "shape", ",", "dtype", "=", "dtype", ")", ",", "self", ".", "min_init_weight", ",", "self", ".", "max_init_weight", ")", "\n", "", "elif", "self", ".", "init_method", "in", "[", "'xavier_uniform'", ",", "'xavier_normal'", "]", ":", "\n", "                    ", "return", "tf", ".", "clip_by_value", "(", "xavier", "(", "shape", ",", "dtype", ",", "partition_info", ")", ",", "self", ".", "min_init_weight", ",", "self", ".", "max_init_weight", ")", "\n", "\n", "", "", "", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", ":", "\n", "            ", "self", ".", "prefixes", "=", "prefixes", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "None", "]", ",", "'prefixes'", ")", "\n", "self", ".", "prefixes_lens", "=", "prefixes_lens", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "'prefixes_lens'", ")", "\n", "self", ".", "images", "=", "images", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "image_size", "]", ",", "'images'", ")", "\n", "self", ".", "dropout", "=", "dropout", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "[", "]", ",", "'dropout'", ")", "\n", "self", ".", "temperature", "=", "temperature", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ",", "'temperature'", ")", "\n", "self", ".", "targets", "=", "targets", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "None", "]", ",", "'targets'", ")", "\n", "\n", "batch_size", "=", "tf", ".", "shape", "(", "prefixes", ")", "[", "0", "]", "\n", "num_steps", "=", "tf", ".", "shape", "(", "prefixes", ")", "[", "1", "]", "\n", "token_mask", "=", "tf", ".", "cast", "(", "tf", ".", "sequence_mask", "(", "prefixes_lens", ",", "num_steps", ")", ",", "tf", ".", "float32", ")", "\n", "\n", "image_dropout_keep_prob", "=", "tf", ".", "cond", "(", "dropout", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", "-", "self", ".", "image_dropout_prob", ")", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", ")", ")", "\n", "post_image_dropout_keep_prob", "=", "tf", ".", "cond", "(", "dropout", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", "-", "self", ".", "post_image_dropout_prob", ")", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", ")", ")", "\n", "embedding_dropout_keep_prob", "=", "tf", ".", "cond", "(", "dropout", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", "-", "self", ".", "embedding_dropout_prob", ")", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", ")", ")", "\n", "rnn_dropout_keep_prob", "=", "tf", ".", "cond", "(", "dropout", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", "-", "self", ".", "rnn_dropout_prob", ")", ",", "lambda", ":", "tf", ".", "constant", "(", "1.0", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'nn'", ",", "initializer", "=", "init", ")", ":", "\n", "                ", "with", "tf", ".", "variable_scope", "(", "'image'", ")", ":", "\n", "                    ", "W", "=", "tf", ".", "get_variable", "(", "'W'", ",", "[", "self", ".", "image_size", ",", "self", ".", "post_image_size", "]", ",", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "'b'", ",", "[", "self", ".", "post_image_size", "]", ",", "tf", ".", "float32", ")", "\n", "if", "self", ".", "normalize_image", ":", "\n", "                        ", "images", "=", "images", "/", "tf", ".", "reshape", "(", "tf", ".", "norm", "(", "images", ",", "axis", "=", "1", ")", ",", "[", "-", "1", ",", "1", "]", ")", "#reshape is to divide the images row-wise instead of column-wise", "\n", "", "images", "=", "tf", ".", "nn", ".", "dropout", "(", "images", ",", "image_dropout_keep_prob", ")", "\n", "post_images", "=", "tf", ".", "matmul", "(", "images", ",", "W", ")", "+", "b", "\n", "if", "self", ".", "post_image_activation", "==", "'relu'", ":", "\n", "                        ", "post_images", "=", "tf", ".", "nn", ".", "relu", "(", "post_images", ")", "\n", "", "elif", "self", ".", "post_image_activation", "==", "'tanh'", ":", "\n", "                        ", "post_images", "=", "tf", ".", "nn", ".", "tanh", "(", "post_images", ")", "\n", "", "elif", "self", ".", "post_image_activation", "==", "'swish'", ":", "\n", "                        ", "post_images", "=", "post_images", "*", "tf", ".", "nn", ".", "sigmoid", "(", "post_images", ")", "\n", "", "self", ".", "post_images", "=", "post_images", "\n", "if", "self", ".", "multimodal_method", "!=", "'init'", ":", "\n", "                        ", "post_images", "=", "tf", ".", "expand_dims", "(", "post_images", ",", "1", ")", "\n", "if", "self", ".", "multimodal_method", "!=", "'pre'", ":", "\n", "                            ", "post_images", "=", "tf", ".", "tile", "(", "post_images", ",", "[", "1", ",", "num_steps", ",", "1", "]", ")", "\n", "", "", "post_images", "=", "tf", ".", "nn", ".", "dropout", "(", "post_images", ",", "post_image_dropout_keep_prob", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'prefix'", ")", ":", "\n", "                    ", "with", "tf", ".", "variable_scope", "(", "'embedding'", ")", ":", "\n", "                        ", "embedding_matrix", "=", "tf", ".", "get_variable", "(", "'embedding_matrix'", ",", "[", "self", ".", "dataset", ".", "vocab_size", ",", "self", ".", "embed_size", "]", ",", "tf", ".", "float32", ")", "\n", "self", ".", "embedded_seq", "=", "embedded_seq", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_matrix", ",", "prefixes", ")", "\n", "embedded_seq", "=", "tf", ".", "nn", ".", "dropout", "(", "embedded_seq", ",", "embedding_dropout_keep_prob", ")", "\n", "if", "self", ".", "multimodal_method", "==", "'pre'", ":", "\n", "                            ", "embedded_seq", "=", "tf", ".", "concat", "(", "[", "post_images", ",", "embedded_seq", "]", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "multimodal_method", "==", "'par'", ":", "\n", "                            ", "embedded_seq", "=", "tf", ".", "concat", "(", "[", "post_images", ",", "embedded_seq", "]", ",", "axis", "=", "2", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'rnn'", ")", ":", "\n", "                        ", "if", "self", ".", "rnn_type", "==", "'srnn'", ":", "\n", "                            ", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicRNNCell", "(", "self", ".", "rnn_size", ")", "\n", "", "elif", "self", ".", "rnn_type", "==", "'gru'", ":", "\n", "                            ", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "GRUCell", "(", "self", ".", "rnn_size", ")", "\n", "", "elif", "self", ".", "rnn_type", "==", "'lstm'", ":", "\n", "                            ", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "self", ".", "rnn_size", ")", "\n", "\n", "", "if", "self", ".", "multimodal_method", "==", "'init'", ":", "\n", "                            ", "h", "=", "post_images", "\n", "", "else", ":", "\n", "                            ", "if", "self", ".", "learnable_init_state", ":", "\n", "                                ", "h", "=", "tf", ".", "get_variable", "(", "'init_h'", ",", "[", "1", ",", "self", ".", "rnn_size", "]", ",", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "                                ", "h", "=", "tf", ".", "zeros", "(", "[", "1", ",", "self", ".", "rnn_size", "]", ",", "tf", ".", "float32", ")", "\n", "", "h", "=", "tf", ".", "tile", "(", "h", ",", "[", "batch_size", ",", "1", "]", ")", "\n", "", "if", "self", ".", "rnn_type", "==", "'lstm'", ":", "\n", "                            ", "if", "self", ".", "learnable_init_state", ":", "\n", "                                ", "c", "=", "tf", ".", "get_variable", "(", "'init_c'", ",", "[", "1", ",", "self", ".", "rnn_size", "]", ",", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "                                ", "c", "=", "tf", ".", "zeros", "(", "[", "1", ",", "self", ".", "rnn_size", "]", ",", "tf", ".", "float32", ")", "\n", "", "c", "=", "tf", ".", "tile", "(", "c", ",", "[", "batch_size", ",", "1", "]", ")", "\n", "init_state", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMStateTuple", "(", "h", "=", "h", ",", "c", "=", "c", ")", "\n", "", "else", ":", "\n", "                            ", "init_state", "=", "h", "\n", "\n", "", "", "seq_len", "=", "prefixes_lens", "\n", "if", "self", ".", "multimodal_method", "==", "'pre'", ":", "\n", "                        ", "seq_len", "=", "seq_len", "+", "1", "\n", "", "prefix_vectors", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "cell", ",", "embedded_seq", ",", "sequence_length", "=", "seq_len", ",", "initial_state", "=", "init_state", ")", "[", "0", "]", "#Add 1 to prefixes_lens if using pre-inject since image is included as a token", "\n", "self", ".", "prefix_vectors", "=", "prefix_vectors", "\n", "prefix_vectors", "=", "tf", ".", "nn", ".", "dropout", "(", "prefix_vectors", ",", "rnn_dropout_keep_prob", ")", "\n", "\n", "if", "self", ".", "multimodal_method", "==", "'merge'", ":", "\n", "                        ", "prefix_vectors", "=", "tf", ".", "concat", "(", "[", "post_images", ",", "prefix_vectors", "]", ",", "axis", "=", "2", ")", "\n", "", "elif", "self", ".", "multimodal_method", "==", "'pre'", ":", "\n", "                        ", "prefix_vectors", "=", "prefix_vectors", "[", ":", ",", "1", ":", ",", ":", "]", "#drop the prefix vector resulting from the image", "\n", "\n", "", "if", "self", ".", "multimodal_method", "==", "'merge'", ":", "\n", "                        ", "prefix_vector_size", "=", "self", ".", "rnn_size", "+", "self", ".", "post_image_size", "\n", "", "else", ":", "\n", "                        ", "prefix_vector_size", "=", "self", ".", "rnn_size", "\n", "", "prefix_vectors_2d", "=", "tf", ".", "reshape", "(", "prefix_vectors", ",", "[", "batch_size", "*", "num_steps", ",", "prefix_vector_size", "]", ")", "\n", "self", ".", "multimodal_vectors", "=", "prefix_vectors", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'out'", ")", ":", "\n", "                    ", "W", "=", "tf", ".", "get_variable", "(", "'W'", ",", "[", "prefix_vector_size", ",", "self", ".", "dataset", ".", "vocab_size", "]", ",", "tf", ".", "float32", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "'b'", ",", "[", "self", ".", "dataset", ".", "vocab_size", "]", ",", "tf", ".", "float32", ")", "\n", "logits", "=", "tf", ".", "matmul", "(", "prefix_vectors_2d", ",", "W", ")", "+", "b", "\n", "self", ".", "logits", "=", "logits", "=", "tf", ".", "reshape", "(", "logits", ",", "[", "batch_size", ",", "num_steps", ",", "self", ".", "dataset", ".", "vocab_size", "]", ")", "\n", "\n", "self", ".", "predictions", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", "/", "temperature", ")", "\n", "\n", "", "", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "                ", "p", "=", "tf", ".", "placeholder", "(", "v", ".", "dtype", ",", "v", ".", "shape", ",", "v", ".", "name", ".", "split", "(", "':'", ")", "[", "0", "]", "+", "'_setter'", ")", "\n", "self", ".", "param_setters", "[", "v", ".", "name", "]", "=", "(", "tf", ".", "assign", "(", "v", ",", "p", ")", ",", "p", ")", "\n", "\n", "", "preds_for_grads", "=", "tf", ".", "reshape", "(", "\n", "tf", ".", "gather_nd", "(", "\n", "tf", ".", "reshape", "(", "self", ".", "predictions", ",", "[", "batch_size", "*", "num_steps", ",", "self", ".", "dataset", ".", "vocab_size", "]", ")", ",", "\n", "tf", ".", "stack", "(", "[", "\n", "tf", ".", "range", "(", "batch_size", "*", "num_steps", ")", ",", "\n", "tf", ".", "reshape", "(", "targets", ",", "[", "batch_size", "*", "num_steps", "]", ")", "\n", "]", ",", "axis", "=", "1", ")", "\n", ")", ",", "\n", "[", "batch_size", ",", "num_steps", "]", "\n", ")", "[", ":", ",", "-", "1", "]", "\n", "self", ".", "grad_wrt_img", "=", "tf", ".", "gradients", "(", "preds_for_grads", ",", "self", ".", "images", ")", "[", "0", "]", "\n", "self", ".", "grad_wrt_prevtoken", "=", "tf", ".", "gradients", "(", "preds_for_grads", ",", "self", ".", "embedded_seq", ")", "[", "0", "]", "[", ":", ",", "-", "1", "]", "\n", "\n", "self", ".", "initializer", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", ")", "\n", "tf", ".", "get_default_graph", "(", ")", ".", "finalize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.init_params": [[223, 225], ["model_normal.NormalModel.session.run"], "methods", ["None"], ["", "", "def", "init_params", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "run", "(", "self", ".", "initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.save_params": [[228, 234], ["model_normal.NormalModel.session.graph.as_default", "h5py.File", "f.create_dataset", "builtins.zip", "tensorflow.trainable_variables", "model_normal.NormalModel.session.run", "f.create_dataset", "numpy.array", "tensorflow.trainable_variables"], "methods", ["None"], ["", "def", "save_params", "(", "self", ",", "param_save_dir", ")", ":", "\n", "        ", "with", "self", ".", "session", ".", "graph", ".", "as_default", "(", ")", ":", "\n", "            ", "with", "h5py", ".", "File", "(", "param_save_dir", "+", "'/model.hdf5'", ",", "'w'", ")", "as", "f", ":", "\n", "                ", "f", ".", "create_dataset", "(", "'tf_version'", ",", "data", "=", "np", ".", "array", "(", "tf", ".", "VERSION", ",", "np", ".", "string_", ")", ")", "\n", "for", "(", "v", ",", "t", ")", "in", "zip", "(", "tf", ".", "trainable_variables", "(", ")", ",", "self", ".", "session", ".", "run", "(", "tf", ".", "trainable_variables", "(", ")", ")", ")", ":", "\n", "                    ", "f", ".", "create_dataset", "(", "v", ".", "name", ",", "data", "=", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.load_params": [[237, 264], ["model_normal.NormalModel.session.graph.as_default", "model_normal.NormalModel.init_params", "h5py.File", "builtins.str", "builtins.dict", "tensorflow.trainable_variables", "model_normal.NormalModel.session.run", "numpy.array", "v.name.split", "numpy.array", "name_parts[].startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "name_parts[].replace", "name_parts[].startswith", "name_parts[].startswith", "name_parts[].replace", "name_parts[].replace", "name_parts[].startswith", "name_parts[].replace"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.init_params"], ["", "", "", "", "def", "load_params", "(", "self", ",", "param_save_dir", ")", ":", "\n", "        ", "with", "self", ".", "session", ".", "graph", ".", "as_default", "(", ")", ":", "\n", "            ", "self", ".", "init_params", "(", ")", "\n", "with", "h5py", ".", "File", "(", "param_save_dir", "+", "'/model.hdf5'", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "loaded_tf_version", "=", "str", "(", "np", ".", "array", "(", "f", "[", "'tf_version'", "]", ")", ")", "\n", "weights_biases_version", "=", "{", "'1.0.'", ",", "'1.1.'", "}", "\n", "ts", "=", "dict", "(", ")", "\n", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "                    ", "'''\n                    Tensorflow v1.0-1.1 used 'weights' and 'biases' as variable names in RNNs whilst later versions use 'kernel' and 'bias' instead.\n                    This is to avoid missing variable errors when loading parameters that were saved in a different version.\n                    '''", "\n", "name_parts", "=", "v", ".", "name", ".", "split", "(", "'/'", ")", "\n", "if", "name_parts", "[", "2", "]", "==", "'rnn'", ":", "\n", "                        ", "if", "loaded_tf_version", "[", ":", "4", "]", "in", "weights_biases_version", "and", "tf", ".", "VERSION", "[", ":", "4", "]", "not", "in", "weights_biases_version", ":", "\n", "                            ", "if", "name_parts", "[", "4", "]", ".", "startswith", "(", "'weights'", ")", ":", "\n", "                                ", "name_parts", "[", "4", "]", "=", "name_parts", "[", "4", "]", ".", "replace", "(", "'weights'", ",", "'kernel'", ")", "\n", "", "elif", "name_parts", "[", "4", "]", ".", "startswith", "(", "'biases'", ")", ":", "\n", "                                ", "name_parts", "[", "4", "]", "=", "name_parts", "[", "4", "]", ".", "replace", "(", "'biases'", ",", "'bias'", ")", "\n", "", "", "elif", "loaded_tf_version", "[", ":", "4", "]", "not", "in", "weights_biases_version", "and", "tf", ".", "VERSION", "[", ":", "4", "]", "in", "weights_biases_version", ":", "\n", "                            ", "if", "name_parts", "[", "4", "]", ".", "startswith", "(", "'kernel'", ")", ":", "\n", "                                ", "name_parts", "[", "4", "]", "=", "name_parts", "[", "4", "]", ".", "replace", "(", "'kernel'", ",", "'weights'", ")", "\n", "", "elif", "name_parts", "[", "4", "]", ".", "startswith", "(", "'bias'", ")", ":", "\n", "                                ", "name_parts", "[", "4", "]", "=", "name_parts", "[", "4", "]", ".", "replace", "(", "'bias'", ",", "'biases'", ")", "\n", "", "", "", "ts", "[", "'/'", ".", "join", "(", "name_parts", ")", "]", "=", "np", ".", "array", "(", "f", "[", "v", ".", "name", "]", ")", "\n", "\n", "", "self", ".", "session", ".", "run", "(", "[", "self", ".", "param_setters", "[", "v", ".", "name", "]", "[", "0", "]", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ",", "{", "self", ".", "param_setters", "[", "v", ".", "name", "]", "[", "1", "]", ":", "ts", "[", "v", ".", "name", "]", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.fit": [[267, 319], ["model_base.FitListener", "listener.fit_started", "builtins.range", "model_normal.NormalModel.load_params", "listener.fit_ended", "listener.epoch_started", "listener.validation_started", "listener.validation_ended", "listener.training_started", "numpy.arange", "numpy.random.shuffle", "builtins.int", "builtins.range", "listener.training_ended", "model_normal.NormalModel.image_caption_loggeomean_perplexities", "listener.epoch_ended", "model_normal.NormalModel.save_params", "listener.epoch_ended", "numpy.ceil", "listener.minibatch_started", "model_normal.NormalModel.session.run", "listener.minibatch_ended"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.load_params", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.fit_ended", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.epoch_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.validation_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.validation_ended", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.training_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.data.DataSource.shuffle", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.training_ended", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.Model.image_caption_loggeomean_perplexities", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.epoch_ended", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.save_params", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.epoch_ended", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.minibatch_started", "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_base.FitListener.minibatch_ended"], ["", "", "", "def", "fit", "(", "self", ",", "param_save_dir", ",", "listener", "=", "model_base", ".", "FitListener", "(", ")", ")", ":", "\n", "        ", "listener", ".", "fit_started", "(", "self", ")", "\n", "\n", "last_validation_loss", "=", "np", ".", "inf", "\n", "for", "epoch", "in", "range", "(", "0", ",", "self", ".", "max_epochs", "+", "1", ")", ":", "\n", "            ", "listener", ".", "epoch_started", "(", "self", ",", "epoch", ")", "\n", "\n", "#Training", "\n", "if", "epoch", ">", "0", ":", "\n", "                ", "listener", ".", "training_started", "(", "self", ")", "\n", "\n", "trainingset_indexes", "=", "np", ".", "arange", "(", "self", ".", "dataset", ".", "training_datasource", ".", "size", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "trainingset_indexes", ")", "\n", "num_minibatches", "=", "int", "(", "np", ".", "ceil", "(", "self", ".", "dataset", ".", "training_datasource", ".", "size", "/", "self", ".", "train_minibatch_size", ")", ")", "\n", "for", "i", "in", "range", "(", "num_minibatches", ")", ":", "\n", "                    ", "listener", ".", "minibatch_started", "(", "self", ",", "i", "+", "1", ",", "num_minibatches", ")", "\n", "\n", "minibatch_indexes", "=", "trainingset_indexes", "[", "i", "*", "self", ".", "train_minibatch_size", ":", "(", "i", "+", "1", ")", "*", "self", ".", "train_minibatch_size", "]", "\n", "feed_dict", "=", "{", "\n", "self", ".", "dropout", ":", "True", ",", "\n", "self", ".", "temperature", ":", "1.0", ",", "\n", "self", ".", "prefixes", ":", "self", ".", "dataset", ".", "training_proccaps", ".", "prefixes_indexes", "[", "minibatch_indexes", "]", ",", "\n", "self", ".", "prefixes_lens", ":", "self", ".", "dataset", ".", "training_proccaps", ".", "prefixes_lens", "[", "minibatch_indexes", "]", ",", "\n", "self", ".", "images", ":", "self", ".", "dataset", ".", "training_images", "[", "minibatch_indexes", "]", ",", "\n", "self", ".", "targets", ":", "self", ".", "dataset", ".", "training_proccaps", ".", "targets_indexes", "[", "minibatch_indexes", "]", ",", "\n", "}", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "train_step", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "listener", ".", "minibatch_ended", "(", "self", ",", "i", "+", "1", ",", "num_minibatches", ")", "\n", "\n", "", "listener", ".", "training_ended", "(", "self", ")", "\n", "\n", "#Validation", "\n", "", "listener", ".", "validation_started", "(", "self", ")", "\n", "\n", "validation_loss", "=", "self", ".", "image_caption_loggeomean_perplexities", "(", "self", ".", "dataset", ".", "validation_datasource", ".", "images", ",", "self", ".", "dataset", ".", "validation_datasource", ".", "first_captions", ")", "[", "0", "]", "\n", "\n", "listener", ".", "validation_ended", "(", "self", ",", "validation_loss", ")", "\n", "\n", "if", "validation_loss", ">", "last_validation_loss", ":", "\n", "                ", "listener", ".", "epoch_ended", "(", "self", ",", "epoch", ")", "\n", "break", "\n", "", "else", ":", "\n", "                ", "last_validation_loss", "=", "validation_loss", "\n", "self", ".", "save_params", "(", "param_save_dir", ")", "\n", "listener", ".", "epoch_ended", "(", "self", ",", "epoch", ")", "\n", "\n", "", "", "self", ".", "load_params", "(", "param_save_dir", ")", "\n", "\n", "listener", ".", "fit_ended", "(", "self", ")", "\n", "\n", "return", "last_validation_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.get_num_params": [[322, 324], ["None"], "methods", ["None"], ["", "def", "get_num_params", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_params", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.raw_run": [[327, 336], ["model_normal.NormalModel.session.run"], "methods", ["None"], ["", "def", "raw_run", "(", "self", ",", "node", ",", "images", ",", "prefixes", ",", "prefixes_lens", ",", "temperature", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "\n", "node", ",", "\n", "feed_dict", "=", "{", "\n", "self", ".", "dropout", ":", "False", ",", "\n", "self", ".", "temperature", ":", "temperature", ",", "\n", "self", ".", "prefixes", ":", "prefixes", ",", "\n", "self", ".", "prefixes_lens", ":", "prefixes_lens", ",", "\n", "self", ".", "images", ":", "images", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.get_raw_probs": [[341, 343], ["model_normal.NormalModel.raw_run"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.raw_run"], ["", "def", "get_raw_probs", "(", "self", ",", "images", ",", "prefixes", ",", "prefixes_lens", ",", "temperature", ")", ":", "\n", "        ", "return", "self", ".", "raw_run", "(", "self", ".", "predictions", ",", "images", ",", "prefixes", ",", "prefixes_lens", ",", "temperature", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.model_normal.NormalModel.close": [[346, 350], ["tensorflow.Session.reset"], "methods", ["home.repos.pwc.inspect_result.mtanti_quantifing-visual-information.None.lib.ProgressBar.reset"], ["", "def", "close", "(", "self", ")", ":", "\n", "#if self.session is not None:", "\n", "#   self.session.close()", "\n", "        ", "tf", ".", "Session", ".", "reset", "(", "''", ")", "", "", "", ""]]}