{"home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.parse_index_file": [[31, 37], ["open", "index.append", "int", "line.strip"], "function", ["None"], ["def", "parse_index_file", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Parse index file.\"\"\"", "\n", "index", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "        ", "index", ".", "append", "(", "int", "(", "line", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.sample_mask": [[39, 44], ["numpy.zeros", "numpy.array"], "function", ["None"], ["", "def", "sample_mask", "(", "idx", ",", "l", ")", ":", "\n", "    ", "\"\"\"Create mask.\"\"\"", "\n", "mask", "=", "np", ".", "zeros", "(", "l", ")", "\n", "mask", "[", "idx", "]", "=", "1", "\n", "return", "np", ".", "array", "(", "mask", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.load_data": [[46, 113], ["range", "tuple", "utils.parse_index_file", "numpy.sort", "scipy.vstack().tolil", "networkx.adjacency_matrix", "numpy.vstack", "np.sort.tolist", "range", "range", "utils.sample_mask", "utils.sample_mask", "utils.sample_mask", "numpy.zeros", "numpy.zeros", "numpy.zeros", "len", "range", "scipy.lil_matrix", "numpy.zeros", "networkx.from_dict_of_lists", "len", "len", "open", "min", "scipy.vstack", "len", "objects.append", "objects.append", "max", "len", "len", "pickle.load", "pickle.load", "min", "min"], "function", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.parse_index_file", "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.sample_mask", "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.sample_mask", "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.sample_mask"], ["", "def", "load_data", "(", "dataset_str", ")", ":", "\n", "    ", "\"\"\"\n    Loads input data from gcn/data directory\n\n    ind.dataset_str.x => the feature vectors of the training instances as scipy.sparse.csr.csr_matrix object;\n    ind.dataset_str.tx => the feature vectors of the test instances as scipy.sparse.csr.csr_matrix object;\n    ind.dataset_str.allx => the feature vectors of both labeled and unlabeled training instances\n        (a superset of ind.dataset_str.x) as scipy.sparse.csr.csr_matrix object;\n    ind.dataset_str.y => the one-hot labels of the labeled training instances as numpy.ndarray object;\n    ind.dataset_str.ty => the one-hot labels of the test instances as numpy.ndarray object;\n    ind.dataset_str.ally => the labels for instances in ind.dataset_str.allx as numpy.ndarray object;\n    ind.dataset_str.graph => a dict in the format {index: [index_of_neighbor_nodes]} as collections.defaultdict\n        object;\n    ind.dataset_str.test.index => the indices of test instances in graph, for the inductive setting as list object.\n\n    All objects above must be saved using python pickle module.\n\n    :param dataset_str: Dataset name\n    :return: All data input files loaded (as well the training/test data).\n    \"\"\"", "\n", "names", "=", "[", "'x'", ",", "'y'", ",", "'tx'", ",", "'ty'", ",", "'allx'", ",", "'ally'", ",", "'graph'", "]", "\n", "objects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "names", ")", ")", ":", "\n", "        ", "with", "open", "(", "\"data/ind.{}.{}\"", ".", "format", "(", "dataset_str", ",", "names", "[", "i", "]", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "if", "sys", ".", "version_info", ">", "(", "3", ",", "0", ")", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", ")", "\n", "", "else", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ")", ")", "\n", "\n", "", "", "", "x", ",", "y", ",", "tx", ",", "ty", ",", "allx", ",", "ally", ",", "graph", "=", "tuple", "(", "objects", ")", "\n", "test_idx_reorder", "=", "parse_index_file", "(", "\"data/ind.{}.test.index\"", ".", "format", "(", "dataset_str", ")", ")", "\n", "test_idx_range", "=", "np", ".", "sort", "(", "test_idx_reorder", ")", "\n", "\n", "if", "dataset_str", "==", "'citeseer'", ":", "\n", "# Fix citeseer dataset (there are some isolated nodes in the graph)", "\n", "# Find isolated nodes, add them as zero-vecs into the right position", "\n", "        ", "test_idx_range_full", "=", "range", "(", "min", "(", "test_idx_reorder", ")", ",", "max", "(", "test_idx_reorder", ")", "+", "1", ")", "\n", "tx_extended", "=", "sp", ".", "lil_matrix", "(", "(", "len", "(", "test_idx_range_full", ")", ",", "x", ".", "shape", "[", "1", "]", ")", ")", "\n", "tx_extended", "[", "test_idx_range", "-", "min", "(", "test_idx_range", ")", ",", ":", "]", "=", "tx", "\n", "tx", "=", "tx_extended", "\n", "ty_extended", "=", "np", ".", "zeros", "(", "(", "len", "(", "test_idx_range_full", ")", ",", "y", ".", "shape", "[", "1", "]", ")", ")", "\n", "ty_extended", "[", "test_idx_range", "-", "min", "(", "test_idx_range", ")", ",", ":", "]", "=", "ty", "\n", "ty", "=", "ty_extended", "\n", "\n", "", "features", "=", "sp", ".", "vstack", "(", "(", "allx", ",", "tx", ")", ")", ".", "tolil", "(", ")", "\n", "features", "[", "test_idx_reorder", ",", ":", "]", "=", "features", "[", "test_idx_range", ",", ":", "]", "\n", "adj", "=", "nx", ".", "adjacency_matrix", "(", "nx", ".", "from_dict_of_lists", "(", "graph", ")", ")", "\n", "\n", "labels", "=", "np", ".", "vstack", "(", "(", "ally", ",", "ty", ")", ")", "\n", "labels", "[", "test_idx_reorder", ",", ":", "]", "=", "labels", "[", "test_idx_range", ",", ":", "]", "\n", "\n", "idx_test", "=", "test_idx_range", ".", "tolist", "(", ")", "\n", "idx_train", "=", "range", "(", "len", "(", "y", ")", ")", "\n", "idx_val", "=", "range", "(", "len", "(", "y", ")", ",", "len", "(", "y", ")", "+", "500", ")", "\n", "\n", "train_mask", "=", "sample_mask", "(", "idx_train", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "val_mask", "=", "sample_mask", "(", "idx_val", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "test_mask", "=", "sample_mask", "(", "idx_test", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "\n", "y_train", "=", "np", ".", "zeros", "(", "labels", ".", "shape", ")", "\n", "y_val", "=", "np", ".", "zeros", "(", "labels", ".", "shape", ")", "\n", "y_test", "=", "np", ".", "zeros", "(", "labels", ".", "shape", ")", "\n", "y_train", "[", "train_mask", ",", ":", "]", "=", "labels", "[", "train_mask", ",", ":", "]", "\n", "y_val", "[", "val_mask", ",", ":", "]", "=", "labels", "[", "val_mask", ",", ":", "]", "\n", "y_test", "[", "test_mask", ",", ":", "]", "=", "labels", "[", "test_mask", ",", ":", "]", "\n", "\n", "return", "adj", ",", "features", ",", "labels", ",", "train_mask", ",", "val_mask", ",", "test_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.preprocess_features": [[115, 123], ["numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "preprocess_features", "(", "features", ")", ":", "\n", "    ", "\"\"\"Row-normalize feature matrix and convert to tuple representation\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "features", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "features", "=", "r_mat_inv", ".", "dot", "(", "features", ")", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.normalize_adj": [[125, 133], ["scipy.coo_matrix", "numpy.array", "numpy.power().flatten", "scipy.diags", "sp.coo_matrix.dot().transpose().dot().tocoo", "sp.coo_matrix.sum", "numpy.power", "numpy.isinf", "sp.coo_matrix.dot().transpose().dot", "sp.coo_matrix.dot().transpose", "sp.coo_matrix.dot"], "function", ["None"], ["", "def", "normalize_adj", "(", "adj", ")", ":", "\n", "    ", "\"\"\"Symmetrically normalize adjacency matrix.\"\"\"", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "adj", ")", "\n", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "d_inv_sqrt", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv_sqrt", "[", "np", ".", "isinf", "(", "d_inv_sqrt", ")", "]", "=", "0.", "\n", "d_mat_inv_sqrt", "=", "sp", ".", "diags", "(", "d_inv_sqrt", ")", "\n", "return", "adj", ".", "dot", "(", "d_mat_inv_sqrt", ")", ".", "transpose", "(", ")", ".", "dot", "(", "d_mat_inv_sqrt", ")", ".", "tocoo", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.preprocess_adj": [[135, 139], ["utils.normalize_adj", "scipy.eye"], "function", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.normalize_adj"], ["", "def", "preprocess_adj", "(", "adj", ")", ":", "\n", "    ", "\"\"\"Preprocessing of adjacency matrix for simple GCN model and conversion to tuple representation.\"\"\"", "\n", "adj_normalized", "=", "normalize_adj", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "return", "adj_normalized", "\n", "", ""]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNSingleHead.__init__": [[31, 37], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "activation", ",", "dropout_prob", ")", ":", "\n", "        ", "super", "(", "GCNSingleHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_feats", ",", "out_feats", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear", ".", "weight", ")", "\n", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNSingleHead.message_func": [[38, 40], ["None"], "methods", ["None"], ["", "def", "message_func", "(", "self", ",", "edges", ")", ":", "\n", "        ", "return", "{", "'m'", ":", "edges", ".", "src", "[", "'h'", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNSingleHead.reduce_func": [[41, 43], ["torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "reduce_func", "(", "self", ",", "nodes", ")", ":", "\n", "        ", "return", "{", "'h'", ":", "th", ".", "sum", "(", "nodes", ".", "mailbox", "[", "'m'", "]", ",", "dim", "=", "1", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNSingleHead.forward": [[44, 54], ["utils_layers.GCNSingleHead.dropout", "utils_layers.GCNSingleHead.linear", "g.update_all", "g.ndata.pop", "utils_layers.GCNSingleHead.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "feature", ")", ":", "\n", "        ", "h", "=", "self", ".", "dropout", "(", "feature", ")", "\n", "h", "=", "self", ".", "linear", "(", "h", ")", "\n", "h", "=", "h", "*", "g", ".", "ndata", "[", "'norm'", "]", "\n", "g", ".", "ndata", "[", "'h'", "]", "=", "h", "\n", "g", ".", "update_all", "(", "self", ".", "message_func", ",", "self", ".", "reduce_func", ")", "\n", "h", "=", "g", ".", "ndata", ".", "pop", "(", "'h'", ")", "\n", "h", "=", "h", "*", "g", ".", "ndata", "[", "'norm'", "]", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCN.__init__": [[57, 63], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "utils_layers.GCN.attention_heads.append", "utils_layers.GCNSingleHead"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "activation", ",", "num_heads", ",", "dropout_prob", ",", "merge", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention_heads", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_heads", ")", ":", "\n", "            ", "self", ".", "attention_heads", ".", "append", "(", "GCNSingleHead", "(", "in_feats", ",", "out_feats", ",", "activation", ",", "dropout_prob", ")", ")", "\n", "", "self", ".", "merge", "=", "merge", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCN.forward": [[64, 70], ["head", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "feature", ")", ":", "\n", "        ", "all_attention_head_outputs", "=", "[", "head", "(", "g", ",", "feature", ")", "for", "head", "in", "self", ".", "attention_heads", "]", "\n", "if", "self", ".", "merge", "==", "'cat'", ":", "\n", "            ", "return", "th", ".", "cat", "(", "all_attention_head_outputs", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "th", ".", "mean", "(", "th", ".", "stack", "(", "all_attention_head_outputs", ")", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATSingleAttentionHead.__init__": [[74, 86], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "activation", ",", "dropout_prob", ")", ":", "\n", "        ", "super", "(", "GATSingleAttentionHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_feats_dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_feats", ",", "out_feats", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear", ".", "weight", ")", "\n", "self", ".", "attention_linear", "=", "nn", ".", "Linear", "(", "2", "*", "out_feats", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "attention_linear", ".", "weight", ")", "\n", "self", ".", "attention_head_dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "linear_feats_dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "th", ".", "ones", "(", "1", ",", "out_feats", ",", "dtype", "=", "th", ".", "float32", ",", "requires_grad", "=", "True", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "bias", ".", "data", ")", "\n", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATSingleAttentionHead.calculate_node_pairwise_attention": [[87, 92], ["torch.cat", "torch.cat", "torch.cat", "utils_layers.GATSingleAttentionHead.attention_linear", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "calculate_node_pairwise_attention", "(", "self", ",", "edges", ")", ":", "\n", "        ", "h_concat", "=", "th", ".", "cat", "(", "[", "edges", ".", "src", "[", "'Wh'", "]", ",", "edges", ".", "dst", "[", "'Wh'", "]", "]", ",", "dim", "=", "1", ")", "\n", "e", "=", "self", ".", "attention_linear", "(", "h_concat", ")", "\n", "e", "=", "F", ".", "leaky_relu", "(", "e", ",", "negative_slope", "=", "0.2", ")", "\n", "return", "{", "'e'", ":", "e", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATSingleAttentionHead.message_func": [[93, 95], ["None"], "methods", ["None"], ["", "def", "message_func", "(", "self", ",", "edges", ")", ":", "\n", "        ", "return", "{", "'Wh'", ":", "edges", ".", "src", "[", "'Wh'", "]", ",", "'e'", ":", "edges", ".", "data", "[", "'e'", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATSingleAttentionHead.reduce_func": [[96, 101], ["torch.softmax", "torch.softmax", "torch.softmax", "utils_layers.GATSingleAttentionHead.attention_head_dropout", "utils_layers.GATSingleAttentionHead.linear_feats_dropout", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "reduce_func", "(", "self", ",", "nodes", ")", ":", "\n", "        ", "a", "=", "F", ".", "softmax", "(", "nodes", ".", "mailbox", "[", "'e'", "]", ",", "dim", "=", "1", ")", "\n", "a_dropout", "=", "self", ".", "attention_head_dropout", "(", "a", ")", "\n", "Wh_dropout", "=", "self", ".", "linear_feats_dropout", "(", "nodes", ".", "mailbox", "[", "'Wh'", "]", ")", "\n", "return", "{", "'h_new'", ":", "th", ".", "sum", "(", "a_dropout", "*", "Wh_dropout", ",", "dim", "=", "1", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATSingleAttentionHead.forward": [[102, 111], ["utils_layers.GATSingleAttentionHead.in_feats_dropout", "utils_layers.GATSingleAttentionHead.linear", "g.apply_edges", "g.update_all", "g.ndata.pop", "utils_layers.GATSingleAttentionHead.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "feature", ")", ":", "\n", "        ", "Wh", "=", "self", ".", "in_feats_dropout", "(", "feature", ")", "\n", "Wh", "=", "self", ".", "linear", "(", "Wh", ")", "\n", "g", ".", "ndata", "[", "'Wh'", "]", "=", "Wh", "\n", "g", ".", "apply_edges", "(", "self", ".", "calculate_node_pairwise_attention", ")", "\n", "g", ".", "update_all", "(", "self", ".", "message_func", ",", "self", ".", "reduce_func", ")", "\n", "h_new", "=", "g", ".", "ndata", ".", "pop", "(", "'h_new'", ")", "\n", "h_new", "=", "self", ".", "activation", "(", "h_new", "+", "self", ".", "bias", ")", "\n", "return", "h_new", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GAT.__init__": [[115, 121], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "utils_layers.GAT.attention_heads.append", "utils_layers.GATSingleAttentionHead"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "activation", ",", "num_heads", ",", "dropout_prob", ",", "merge", ")", ":", "\n", "        ", "super", "(", "GAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention_heads", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_heads", ")", ":", "\n", "            ", "self", ".", "attention_heads", ".", "append", "(", "GATSingleAttentionHead", "(", "in_feats", ",", "out_feats", ",", "activation", ",", "dropout_prob", ")", ")", "\n", "", "self", ".", "merge", "=", "merge", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GAT.forward": [[122, 128], ["head", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "feature", ")", ":", "\n", "        ", "all_attention_head_outputs", "=", "[", "head", "(", "g", ",", "feature", ")", "for", "head", "in", "self", ".", "attention_heads", "]", "\n", "if", "self", ".", "merge", "==", "'cat'", ":", "\n", "            ", "return", "th", ".", "cat", "(", "all_attention_head_outputs", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "th", ".", "mean", "(", "th", ".", "stack", "(", "all_attention_head_outputs", ")", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNSingleChannel.__init__": [[131, 148], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "range", "utils_layers.GeomGCNSingleChannel.get_subgraphs", "utils_layers.GeomGCNSingleChannel.linear_for_each_division.append", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__", "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNSingleChannel.get_subgraphs"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_feats", ",", "out_feats", ",", "num_divisions", ",", "activation", ",", "dropout_prob", ",", "merge", ")", ":", "\n", "        ", "super", "(", "GeomGCNSingleChannel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_divisions", "=", "num_divisions", "\n", "self", ".", "in_feats_dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "\n", "self", ".", "linear_for_each_division", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_divisions", ")", ":", "\n", "            ", "self", ".", "linear_for_each_division", ".", "append", "(", "nn", ".", "Linear", "(", "in_feats", ",", "out_feats", ",", "bias", "=", "False", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "num_divisions", ")", ":", "\n", "            ", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear_for_each_division", "[", "i", "]", ".", "weight", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "subgraph_edge_list_of_list", "=", "self", ".", "get_subgraphs", "(", "self", ".", "g", ")", "\n", "self", ".", "merge", "=", "merge", "\n", "self", ".", "out_feats", "=", "out_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNSingleChannel.get_subgraphs": [[149, 156], ["g.all_edges", "range", "g.number_of_edges", "subgraph_edge_list[].append", "range"], "methods", ["None"], ["", "def", "get_subgraphs", "(", "self", ",", "g", ")", ":", "\n", "        ", "subgraph_edge_list", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "num_divisions", ")", "]", "\n", "u", ",", "v", ",", "eid", "=", "g", ".", "all_edges", "(", "form", "=", "'all'", ")", "\n", "for", "i", "in", "range", "(", "g", ".", "number_of_edges", "(", ")", ")", ":", "\n", "            ", "subgraph_edge_list", "[", "g", ".", "edges", "[", "u", "[", "i", "]", ",", "v", "[", "i", "]", "]", ".", "data", "[", "'subgraph_idx'", "]", "]", ".", "append", "(", "eid", "[", "i", "]", ")", "\n", "\n", "", "return", "subgraph_edge_list", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNSingleChannel.forward": [[157, 187], ["utils_layers.GeomGCNSingleChannel.in_feats_dropout", "range", "utils_layers.GeomGCNSingleChannel.g.ndata.pop", "range", "utils_layers.GeomGCNSingleChannel.activation", "utils_layers.GeomGCNSingleChannel.g.edge_subgraph", "utils_layers.GeomGCNSingleChannel.copy_from_parent", "utils_layers.GeomGCNSingleChannel.update_all", "utils_layers.GeomGCNSingleChannel.ndata.pop", "utils_layers.GeomGCNSingleChannel.copy_to_parent", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "utils_layers.GeomGCNSingleChannel.g.node_attr_schemes", "results_from_subgraph_list.append", "results_from_subgraph_list.append", "torch.stack", "torch.stack", "torch.stack", "dgl.copy_u", "dgl.sum", "utils_layers.GeomGCNSingleChannel.g.ndata.pop", "torch.zeros", "torch.zeros", "torch.zeros", "feature.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feature", ")", ":", "\n", "        ", "in_feats_dropout", "=", "self", ".", "in_feats_dropout", "(", "feature", ")", "\n", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "=", "in_feats_dropout", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "num_divisions", ")", ":", "\n", "            ", "subgraph", "=", "self", ".", "g", ".", "edge_subgraph", "(", "self", ".", "subgraph_edge_list_of_list", "[", "i", "]", ")", "\n", "subgraph", ".", "copy_from_parent", "(", ")", "\n", "subgraph", ".", "ndata", "[", "f'Wh_{i}'", "]", "=", "self", ".", "linear_for_each_division", "[", "i", "]", "(", "subgraph", ".", "ndata", "[", "'h'", "]", ")", "*", "subgraph", ".", "ndata", "[", "'norm'", "]", "\n", "subgraph", ".", "update_all", "(", "message_func", "=", "fn", ".", "copy_u", "(", "u", "=", "f'Wh_{i}'", ",", "out", "=", "f'm_{i}'", ")", ",", "\n", "reduce_func", "=", "fn", ".", "sum", "(", "msg", "=", "f'm_{i}'", ",", "out", "=", "f'h_{i}'", ")", ")", "\n", "subgraph", ".", "ndata", ".", "pop", "(", "f'Wh_{i}'", ")", "\n", "subgraph", ".", "copy_to_parent", "(", ")", "\n", "\n", "", "self", ".", "g", ".", "ndata", ".", "pop", "(", "'h'", ")", "\n", "\n", "results_from_subgraph_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_divisions", ")", ":", "\n", "            ", "if", "f'h_{i}'", "in", "self", ".", "g", ".", "node_attr_schemes", "(", ")", ":", "\n", "                ", "results_from_subgraph_list", ".", "append", "(", "self", ".", "g", ".", "ndata", ".", "pop", "(", "f'h_{i}'", ")", ")", "\n", "", "else", ":", "\n", "                ", "results_from_subgraph_list", ".", "append", "(", "\n", "th", ".", "zeros", "(", "(", "feature", ".", "size", "(", "0", ")", ",", "self", ".", "out_feats", ")", ",", "dtype", "=", "th", ".", "float32", ",", "device", "=", "feature", ".", "device", ")", ")", "\n", "\n", "", "", "if", "self", ".", "merge", "==", "'cat'", ":", "\n", "            ", "h_new", "=", "th", ".", "cat", "(", "results_from_subgraph_list", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "h_new", "=", "th", ".", "mean", "(", "th", ".", "stack", "(", "results_from_subgraph_list", ",", "dim", "=", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "h_new", "=", "h_new", "*", "self", ".", "g", ".", "ndata", "[", "'norm'", "]", "\n", "h_new", "=", "self", ".", "activation", "(", "h_new", ")", "\n", "return", "h_new", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCN.__init__": [[190, 199], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "utils_layers.GeomGCN.attention_heads.append", "utils_layers.GeomGCNSingleChannel"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_feats", ",", "out_feats", ",", "num_divisions", ",", "activation", ",", "num_heads", ",", "dropout_prob", ",", "ggcn_merge", ",", "\n", "channel_merge", ")", ":", "\n", "        ", "super", "(", "GeomGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention_heads", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_heads", ")", ":", "\n", "            ", "self", ".", "attention_heads", ".", "append", "(", "\n", "GeomGCNSingleChannel", "(", "g", ",", "in_feats", ",", "out_feats", ",", "num_divisions", ",", "activation", ",", "dropout_prob", ",", "ggcn_merge", ")", ")", "\n", "", "self", ".", "channel_merge", "=", "channel_merge", "\n", "self", ".", "g", "=", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCN.forward": [[200, 206], ["head", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feature", ")", ":", "\n", "        ", "all_attention_head_outputs", "=", "[", "head", "(", "feature", ")", "for", "head", "in", "self", ".", "attention_heads", "]", "\n", "if", "self", ".", "channel_merge", "==", "'cat'", ":", "\n", "            ", "return", "th", ".", "cat", "(", "all_attention_head_outputs", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "th", ".", "mean", "(", "th", ".", "stack", "(", "all_attention_head_outputs", ")", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNNet.__init__": [[209, 215], ["torch.Module.__init__", "utils_layers.GCN", "utils_layers.GCN"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_classes", ",", "num_hidden", ",", "num_heads_layer_one", ",", "num_heads_layer_two", ",", "\n", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "GCNNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gcn1", "=", "GCN", "(", "num_input_features", ",", "num_hidden", ",", "F", ".", "relu", ",", "num_heads_layer_one", ",", "dropout_rate", ",", "'cat'", ")", "\n", "self", ".", "gcn2", "=", "GCN", "(", "num_hidden", "*", "num_heads_layer_one", ",", "num_output_classes", ",", "lambda", "x", ":", "x", ",", "num_heads_layer_two", ",", "\n", "dropout_rate", ",", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GCNNet.forward": [[216, 220], ["utils_layers.GCNNet.gcn1", "utils_layers.GCNNet.gcn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "features", ")", ":", "\n", "        ", "x", "=", "self", ".", "gcn1", "(", "g", ",", "features", ")", "\n", "x", "=", "self", ".", "gcn2", "(", "g", ",", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATNet.__init__": [[223, 228], ["torch.Module.__init__", "utils_layers.GAT", "utils_layers.GAT"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_classes", ",", "num_hidden", ",", "num_heads_layer_one", ",", "num_heads_layer_two", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "GATNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gat1", "=", "GAT", "(", "num_input_features", ",", "num_hidden", ",", "F", ".", "elu", ",", "num_heads_layer_one", ",", "dropout_rate", ",", "'cat'", ")", "\n", "self", ".", "gat2", "=", "GAT", "(", "num_hidden", "*", "num_heads_layer_one", ",", "num_output_classes", ",", "lambda", "x", ":", "x", ",", "num_heads_layer_two", ",", "\n", "dropout_rate", ",", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GATNet.forward": [[229, 233], ["utils_layers.GATNet.gat1", "utils_layers.GATNet.gat2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "features", ")", ":", "\n", "        ", "x", "=", "self", ".", "gat1", "(", "g", ",", "features", ")", "\n", "x", "=", "self", ".", "gat2", "(", "g", ",", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__": [[236, 259], ["torch.Module.__init__", "utils_layers.GeomGCN", "utils_layers.GeomGCN"], "methods", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "num_input_features", ",", "num_output_classes", ",", "num_hidden", ",", "num_divisions", ",", "num_heads_layer_one", ",", "\n", "num_heads_layer_two", ",", "\n", "dropout_rate", ",", "layer_one_ggcn_merge", ",", "layer_one_channel_merge", ",", "layer_two_ggcn_merge", ",", "\n", "layer_two_channel_merge", ")", ":", "\n", "        ", "super", "(", "GeomGCNNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "geomgcn1", "=", "GeomGCN", "(", "g", ",", "num_input_features", ",", "num_hidden", ",", "num_divisions", ",", "F", ".", "relu", ",", "num_heads_layer_one", ",", "\n", "dropout_rate", ",", "\n", "layer_one_ggcn_merge", ",", "layer_one_channel_merge", ")", "\n", "\n", "if", "layer_one_ggcn_merge", "==", "'cat'", ":", "\n", "            ", "layer_one_ggcn_merge_multiplier", "=", "num_divisions", "\n", "", "else", ":", "\n", "            ", "layer_one_ggcn_merge_multiplier", "=", "1", "\n", "\n", "", "if", "layer_one_channel_merge", "==", "'cat'", ":", "\n", "            ", "layer_one_channel_merge_multiplier", "=", "num_heads_layer_one", "\n", "", "else", ":", "\n", "            ", "layer_one_channel_merge_multiplier", "=", "1", "\n", "\n", "", "self", ".", "geomgcn2", "=", "GeomGCN", "(", "g", ",", "num_hidden", "*", "layer_one_ggcn_merge_multiplier", "*", "layer_one_channel_merge_multiplier", ",", "\n", "num_output_classes", ",", "num_divisions", ",", "lambda", "x", ":", "x", ",", "\n", "num_heads_layer_two", ",", "dropout_rate", ",", "layer_two_ggcn_merge", ",", "layer_two_channel_merge", ")", "\n", "self", ".", "g", "=", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_layers.GeomGCNNet.forward": [[260, 264], ["utils_layers.GeomGCNNet.geomgcn1", "utils_layers.GeomGCNNet.geomgcn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "x", "=", "self", ".", "geomgcn1", "(", "features", ")", "\n", "x", "=", "self", ".", "geomgcn2", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_data.load_data": [[36, 205], ["utils.preprocess_features", "len", "numpy.array_equal", "torch.FloatTensor", "torch.LongTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "dgl.DGLGraph.in_degrees().float", "torch.pow().cuda", "th.pow().cuda.unsqueeze", "utils.load_data", "numpy.argmax", "np.array.todense", "networkx.DiGraph", "os.path.join", "os.path.join", "networkx.DiGraph", "networkx.adjacency_matrix", "numpy.array", "numpy.array", "dgl.DGLGraph", "len", "sorted", "networkx.adjacency_matrix", "dgl.DGLGraph", "nx.DiGraph.edges", "numpy.unique", "numpy.unique", "numpy.arange", "open", "graph_adjacency_list_file.readline", "sorted", "os.path.join", "open", "nx.DiGraph.nodes", "nx.DiGraph.has_edge", "nx.DiGraph.add_edge", "sorted", "torch.tensor", "numpy.load", "os.path.join", "numpy.array", "numpy.setdiff1d", "next", "next", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "next", "next", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "len", "dgl.DGLGraph.in_degrees", "torch.pow", "torch.isinf", "open", "graph_node_features_and_labels_file.readline", "open", "graph_node_features_and_labels_file.readline", "line.rstrip.rstrip().split", "nx.DiGraph.add_edge", "nx.DiGraph.nodes", "scipy.eye", "os.path.join", "os.path.join", "re.split", "nx.DiGraph.has_edge", "nx.DiGraph.add_edge", "nx.DiGraph.remove_edge", "nx.DiGraph.nodes", "open", "disconnected_node_file.readline", "numpy.arange", "sklearn.model_selection.ShuffleSplit().split", "sklearn.model_selection.ShuffleSplit().split", "sklearn.model_selection.ShuffleSplit().split", "sklearn.model_selection.ShuffleSplit().split", "numpy.unique", "line.rstrip.rstrip().split", "numpy.zeros", "int", "line.rstrip.rstrip().split", "numpy.array", "int", "len", "int", "nx.DiGraph.add_node", "int", "nx.DiGraph.add_node", "int", "int", "sorted", "sorted", "line.rstrip.rstrip", "line.rstrip.rstrip", "len", "len", "int", "int", "nx.DiGraph.remove_edge", "int", "int", "line.rstrip.rstrip", "np.array.append", "numpy.empty_like", "numpy.empty_like", "numpy.empty_like", "numpy.empty_like", "len", "len", "line[].split", "line.rstrip.rstrip", "int", "int", "nx.DiGraph.nodes", "nx.DiGraph.nodes", "int", "int", "int", "int", "int", "int", "sklearn.model_selection.ShuffleSplit", "sklearn.model_selection.ShuffleSplit", "sklearn.model_selection.ShuffleSplit", "sklearn.model_selection.ShuffleSplit", "line.rstrip.rstrip", "int", "int", "numpy.array", "int", "int", "line.rstrip.rstrip", "int", "int", "int", "int", "dgl.DGLGraph.edge_id", "line[].split", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils.preprocess_features", "home.repos.pwc.inspect_result.graphdml-uiuc-jlu_geom-gcn.None.utils_data.load_data"], ["def", "load_data", "(", "dataset_name", ",", "splits_file_path", "=", "None", ",", "train_percentage", "=", "None", ",", "val_percentage", "=", "None", ",", "embedding_mode", "=", "None", ",", "\n", "embedding_method", "=", "None", ",", "\n", "embedding_method_graph", "=", "None", ",", "embedding_method_space", "=", "None", ")", ":", "\n", "    ", "if", "dataset_name", "in", "{", "'cora'", ",", "'citeseer'", ",", "'pubmed'", "}", ":", "\n", "        ", "adj", ",", "features", ",", "labels", ",", "_", ",", "_", ",", "_", "=", "utils", ".", "load_data", "(", "dataset_name", ")", "\n", "labels", "=", "np", ".", "argmax", "(", "labels", ",", "axis", "=", "-", "1", ")", "\n", "features", "=", "features", ".", "todense", "(", ")", "\n", "G", "=", "nx", ".", "DiGraph", "(", "adj", ")", "\n", "", "else", ":", "\n", "        ", "graph_adjacency_list_file_path", "=", "os", ".", "path", ".", "join", "(", "'new_data'", ",", "dataset_name", ",", "'out1_graph_edges.txt'", ")", "\n", "graph_node_features_and_labels_file_path", "=", "os", ".", "path", ".", "join", "(", "'new_data'", ",", "dataset_name", ",", "\n", "f'out1_node_feature_label.txt'", ")", "\n", "\n", "G", "=", "nx", ".", "DiGraph", "(", ")", "\n", "graph_node_features_dict", "=", "{", "}", "\n", "graph_labels_dict", "=", "{", "}", "\n", "\n", "if", "dataset_name", "==", "'film'", ":", "\n", "            ", "with", "open", "(", "graph_node_features_and_labels_file_path", ")", "as", "graph_node_features_and_labels_file", ":", "\n", "                ", "graph_node_features_and_labels_file", ".", "readline", "(", ")", "\n", "for", "line", "in", "graph_node_features_and_labels_file", ":", "\n", "                    ", "line", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "assert", "(", "len", "(", "line", ")", "==", "3", ")", "\n", "assert", "(", "int", "(", "line", "[", "0", "]", ")", "not", "in", "graph_node_features_dict", "and", "int", "(", "line", "[", "0", "]", ")", "not", "in", "graph_labels_dict", ")", "\n", "feature_blank", "=", "np", ".", "zeros", "(", "932", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "feature_blank", "[", "np", ".", "array", "(", "line", "[", "1", "]", ".", "split", "(", "','", ")", ",", "dtype", "=", "np", ".", "uint16", ")", "]", "=", "1", "\n", "graph_node_features_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", "=", "feature_blank", "\n", "graph_labels_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", "=", "int", "(", "line", "[", "2", "]", ")", "\n", "", "", "", "else", ":", "\n", "            ", "with", "open", "(", "graph_node_features_and_labels_file_path", ")", "as", "graph_node_features_and_labels_file", ":", "\n", "                ", "graph_node_features_and_labels_file", ".", "readline", "(", ")", "\n", "for", "line", "in", "graph_node_features_and_labels_file", ":", "\n", "                    ", "line", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "assert", "(", "len", "(", "line", ")", "==", "3", ")", "\n", "assert", "(", "int", "(", "line", "[", "0", "]", ")", "not", "in", "graph_node_features_dict", "and", "int", "(", "line", "[", "0", "]", ")", "not", "in", "graph_labels_dict", ")", "\n", "graph_node_features_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", "=", "np", ".", "array", "(", "line", "[", "1", "]", ".", "split", "(", "','", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "graph_labels_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", "=", "int", "(", "line", "[", "2", "]", ")", "\n", "\n", "", "", "", "with", "open", "(", "graph_adjacency_list_file_path", ")", "as", "graph_adjacency_list_file", ":", "\n", "            ", "graph_adjacency_list_file", ".", "readline", "(", ")", "\n", "for", "line", "in", "graph_adjacency_list_file", ":", "\n", "                ", "line", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "assert", "(", "len", "(", "line", ")", "==", "2", ")", "\n", "if", "int", "(", "line", "[", "0", "]", ")", "not", "in", "G", ":", "\n", "                    ", "G", ".", "add_node", "(", "int", "(", "line", "[", "0", "]", ")", ",", "features", "=", "graph_node_features_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", ",", "\n", "label", "=", "graph_labels_dict", "[", "int", "(", "line", "[", "0", "]", ")", "]", ")", "\n", "", "if", "int", "(", "line", "[", "1", "]", ")", "not", "in", "G", ":", "\n", "                    ", "G", ".", "add_node", "(", "int", "(", "line", "[", "1", "]", ")", ",", "features", "=", "graph_node_features_dict", "[", "int", "(", "line", "[", "1", "]", ")", "]", ",", "\n", "label", "=", "graph_labels_dict", "[", "int", "(", "line", "[", "1", "]", ")", "]", ")", "\n", "", "G", ".", "add_edge", "(", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", ")", "\n", "\n", "", "", "adj", "=", "nx", ".", "adjacency_matrix", "(", "G", ",", "sorted", "(", "G", ".", "nodes", "(", ")", ")", ")", "\n", "features", "=", "np", ".", "array", "(", "\n", "[", "features", "for", "_", ",", "features", "in", "sorted", "(", "G", ".", "nodes", "(", "data", "=", "'features'", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "]", ")", "\n", "labels", "=", "np", ".", "array", "(", "\n", "[", "label", "for", "_", ",", "label", "in", "sorted", "(", "G", ".", "nodes", "(", "data", "=", "'label'", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "]", ")", "\n", "\n", "", "features", "=", "utils", ".", "preprocess_features", "(", "features", ")", "\n", "\n", "if", "not", "embedding_mode", ":", "\n", "        ", "g", "=", "DGLGraph", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "if", "embedding_mode", "==", "'ExperimentTwoAll'", ":", "\n", "            ", "embedding_file_path", "=", "os", ".", "path", ".", "join", "(", "'embedding_method_combinations_all'", ",", "\n", "f'outf_nodes_relation_{dataset_name}all_embedding_methods.txt'", ")", "\n", "", "elif", "embedding_mode", "==", "'ExperimentTwoPairs'", ":", "\n", "            ", "embedding_file_path", "=", "os", ".", "path", ".", "join", "(", "'embedding_method_combinations_in_pairs'", ",", "\n", "f'outf_nodes_relation_{dataset_name}_graph_{embedding_method_graph}_space_{embedding_method_space}.txt'", ")", "\n", "", "else", ":", "\n", "            ", "embedding_file_path", "=", "os", ".", "path", ".", "join", "(", "'structural_neighborhood'", ",", "\n", "f'outf_nodes_space_relation_{dataset_name}_{embedding_method}.txt'", ")", "\n", "", "space_and_relation_type_to_idx_dict", "=", "{", "}", "\n", "\n", "with", "open", "(", "embedding_file_path", ")", "as", "embedding_file", ":", "\n", "            ", "for", "line", "in", "embedding_file", ":", "\n", "                ", "if", "line", ".", "rstrip", "(", ")", "==", "'node1,node2\tspace\trelation_type'", ":", "\n", "                    ", "continue", "\n", "", "line", "=", "re", ".", "split", "(", "r'[\\t,]'", ",", "line", ".", "rstrip", "(", ")", ")", "\n", "assert", "(", "len", "(", "line", ")", "==", "4", ")", "\n", "assert", "(", "int", "(", "line", "[", "0", "]", ")", "in", "G", "and", "int", "(", "line", "[", "1", "]", ")", "in", "G", ")", "\n", "if", "(", "line", "[", "2", "]", ",", "int", "(", "line", "[", "3", "]", ")", ")", "not", "in", "space_and_relation_type_to_idx_dict", ":", "\n", "                    ", "space_and_relation_type_to_idx_dict", "[", "(", "line", "[", "2", "]", ",", "int", "(", "line", "[", "3", "]", ")", ")", "]", "=", "len", "(", "\n", "space_and_relation_type_to_idx_dict", ")", "\n", "", "if", "G", ".", "has_edge", "(", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", ")", ":", "\n", "                    ", "G", ".", "remove_edge", "(", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", ")", "\n", "", "G", ".", "add_edge", "(", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", ",", "subgraph_idx", "=", "space_and_relation_type_to_idx_dict", "[", "\n", "(", "line", "[", "2", "]", ",", "int", "(", "line", "[", "3", "]", ")", ")", "]", ")", "\n", "\n", "", "", "space_and_relation_type_to_idx_dict", "[", "'self_loop'", "]", "=", "len", "(", "space_and_relation_type_to_idx_dict", ")", "\n", "for", "node", "in", "sorted", "(", "G", ".", "nodes", "(", ")", ")", ":", "\n", "            ", "if", "G", ".", "has_edge", "(", "node", ",", "node", ")", ":", "\n", "                ", "G", ".", "remove_edge", "(", "node", ",", "node", ")", "\n", "", "G", ".", "add_edge", "(", "node", ",", "node", ",", "subgraph_idx", "=", "space_and_relation_type_to_idx_dict", "[", "'self_loop'", "]", ")", "\n", "", "adj", "=", "nx", ".", "adjacency_matrix", "(", "G", ",", "sorted", "(", "G", ".", "nodes", "(", ")", ")", ")", "\n", "g", "=", "DGLGraph", "(", "adj", ")", "\n", "\n", "for", "u", ",", "v", ",", "feature", "in", "G", ".", "edges", "(", "data", "=", "'subgraph_idx'", ")", ":", "\n", "            ", "g", ".", "edges", "[", "g", ".", "edge_id", "(", "u", ",", "v", ")", "]", ".", "data", "[", "'subgraph_idx'", "]", "=", "th", ".", "tensor", "(", "[", "feature", "]", ")", "\n", "\n", "", "", "if", "splits_file_path", ":", "\n", "        ", "with", "np", ".", "load", "(", "splits_file_path", ")", "as", "splits_file", ":", "\n", "            ", "train_mask", "=", "splits_file", "[", "'train_mask'", "]", "\n", "val_mask", "=", "splits_file", "[", "'val_mask'", "]", "\n", "test_mask", "=", "splits_file", "[", "'test_mask'", "]", "\n", "", "", "else", ":", "\n", "        ", "assert", "(", "train_percentage", "is", "not", "None", "and", "val_percentage", "is", "not", "None", ")", "\n", "assert", "(", "train_percentage", "<", "1.0", "and", "val_percentage", "<", "1.0", "and", "train_percentage", "+", "val_percentage", "<", "1.0", ")", "\n", "\n", "if", "dataset_name", "in", "{", "'cora'", ",", "'citeseer'", "}", ":", "\n", "            ", "disconnected_node_file_path", "=", "os", ".", "path", ".", "join", "(", "'unconnected_nodes'", ",", "f'{dataset_name}_unconnected_nodes.txt'", ")", "\n", "with", "open", "(", "disconnected_node_file_path", ")", "as", "disconnected_node_file", ":", "\n", "                ", "disconnected_node_file", ".", "readline", "(", ")", "\n", "disconnected_nodes", "=", "[", "]", "\n", "for", "line", "in", "disconnected_node_file", ":", "\n", "                    ", "line", "=", "line", ".", "rstrip", "(", ")", "\n", "disconnected_nodes", ".", "append", "(", "int", "(", "line", ")", ")", "\n", "\n", "", "", "disconnected_nodes", "=", "np", ".", "array", "(", "disconnected_nodes", ")", "\n", "connected_nodes", "=", "np", ".", "setdiff1d", "(", "np", ".", "arange", "(", "features", ".", "shape", "[", "0", "]", ")", ",", "disconnected_nodes", ")", "\n", "\n", "connected_labels", "=", "labels", "[", "connected_nodes", "]", "\n", "\n", "train_and_val_index", ",", "test_index", "=", "next", "(", "\n", "ShuffleSplit", "(", "n_splits", "=", "1", ",", "train_size", "=", "train_percentage", "+", "val_percentage", ")", ".", "split", "(", "\n", "np", ".", "empty_like", "(", "connected_labels", ")", ",", "connected_labels", ")", ")", "\n", "train_index", ",", "val_index", "=", "next", "(", "ShuffleSplit", "(", "n_splits", "=", "1", ",", "train_size", "=", "train_percentage", ")", ".", "split", "(", "\n", "np", ".", "empty_like", "(", "connected_labels", "[", "train_and_val_index", "]", ")", ",", "connected_labels", "[", "train_and_val_index", "]", ")", ")", "\n", "train_index", "=", "train_and_val_index", "[", "train_index", "]", "\n", "val_index", "=", "train_and_val_index", "[", "val_index", "]", "\n", "\n", "train_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "train_mask", "[", "connected_nodes", "[", "train_index", "]", "]", "=", "1", "\n", "val_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "val_mask", "[", "connected_nodes", "[", "val_index", "]", "]", "=", "1", "\n", "test_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "test_mask", "[", "connected_nodes", "[", "test_index", "]", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "train_and_val_index", ",", "test_index", "=", "next", "(", "\n", "ShuffleSplit", "(", "n_splits", "=", "1", ",", "train_size", "=", "train_percentage", "+", "val_percentage", ")", ".", "split", "(", "\n", "np", ".", "empty_like", "(", "labels", ")", ",", "labels", ")", ")", "\n", "train_index", ",", "val_index", "=", "next", "(", "ShuffleSplit", "(", "n_splits", "=", "1", ",", "train_size", "=", "train_percentage", ")", ".", "split", "(", "\n", "np", ".", "empty_like", "(", "labels", "[", "train_and_val_index", "]", ")", ",", "labels", "[", "train_and_val_index", "]", ")", ")", "\n", "train_index", "=", "train_and_val_index", "[", "train_index", "]", "\n", "val_index", "=", "train_and_val_index", "[", "val_index", "]", "\n", "\n", "train_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "train_mask", "[", "train_index", "]", "=", "1", "\n", "val_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "val_mask", "[", "val_index", "]", "=", "1", "\n", "test_mask", "=", "np", ".", "zeros_like", "(", "labels", ")", "\n", "test_mask", "[", "test_index", "]", "=", "1", "\n", "\n", "", "", "num_features", "=", "features", ".", "shape", "[", "1", "]", "\n", "num_labels", "=", "len", "(", "np", ".", "unique", "(", "labels", ")", ")", "\n", "assert", "(", "np", ".", "array_equal", "(", "np", ".", "unique", "(", "labels", ")", ",", "np", ".", "arange", "(", "len", "(", "np", ".", "unique", "(", "labels", ")", ")", ")", ")", ")", "\n", "\n", "features", "=", "th", ".", "FloatTensor", "(", "features", ")", "\n", "labels", "=", "th", ".", "LongTensor", "(", "labels", ")", "\n", "train_mask", "=", "th", ".", "BoolTensor", "(", "train_mask", ")", "\n", "val_mask", "=", "th", ".", "BoolTensor", "(", "val_mask", ")", "\n", "test_mask", "=", "th", ".", "BoolTensor", "(", "test_mask", ")", "\n", "\n", "# Adapted from https://docs.dgl.ai/tutorials/models/1_gnn/1_gcn.html", "\n", "degs", "=", "g", ".", "in_degrees", "(", ")", ".", "float", "(", ")", "\n", "norm", "=", "th", ".", "pow", "(", "degs", ",", "-", "0.5", ")", ".", "cuda", "(", ")", "\n", "norm", "[", "th", ".", "isinf", "(", "norm", ")", "]", "=", "0", "\n", "g", ".", "ndata", "[", "'norm'", "]", "=", "norm", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "return", "g", ",", "features", ",", "labels", ",", "train_mask", ",", "val_mask", ",", "test_mask", ",", "num_features", ",", "num_labels", "\n", "", ""]]}